<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="args_8cc" kind="file" language="C++">
    <compoundname>args.cc</compoundname>
    <includes refid="config_8h" local="yes">vt/config.h</includes>
    <includes refid="args_8h" local="yes">vt/configs/arguments/args.h</includes>
    <includes refid="context_8h" local="yes">vt/context/context.h</includes>
    <includes refid="demangle_8h" local="yes">vt/utils/demangle/demangle.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">sstream</includes>
    <includes local="no">tuple</includes>
    <includes local="no">ctime</includes>
    <includes local="yes">CLI/CLI11.hpp</includes>
    <includes local="yes">yaml-cpp/yaml.h</includes>
    <incdepgraph>
      <node id="55593">
        <label>list</label>
      </node>
      <node id="55470">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
      </node>
      <node id="55585">
        <label>atomic</label>
      </node>
      <node id="55535">
        <label>checkpoint/common.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2common_8h"/>
        <childnode refid="55536" relation="include">
        </childnode>
        <childnode refid="55505" relation="include">
        </childnode>
        <childnode refid="55469" relation="include">
        </childnode>
        <childnode refid="55537" relation="include">
        </childnode>
        <childnode refid="55492" relation="include">
        </childnode>
        <childnode refid="55506" relation="include">
        </childnode>
      </node>
      <node id="55634">
        <label>vt/runtime/component/component_pack.h</label>
        <link refid="component__pack_8h"/>
        <childnode refid="55513" relation="include">
        </childnode>
        <childnode refid="55635" relation="include">
        </childnode>
        <childnode refid="55593" relation="include">
        </childnode>
        <childnode refid="55580" relation="include">
        </childnode>
        <childnode refid="55515" relation="include">
        </childnode>
        <childnode refid="55545" relation="include">
        </childnode>
        <childnode refid="55477" relation="include">
        </childnode>
        <childnode refid="55636" relation="include">
        </childnode>
      </node>
      <node id="55465">
        <label>src/vt/configs/arguments/args.cc</label>
        <link refid="args_8cc"/>
        <childnode refid="55466" relation="include">
        </childnode>
        <childnode refid="55512" relation="include">
        </childnode>
        <childnode refid="55632" relation="include">
        </childnode>
        <childnode refid="55639" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55490" relation="include">
        </childnode>
        <childnode refid="55511" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55641" relation="include">
        </childnode>
        <childnode refid="55642" relation="include">
        </childnode>
        <childnode refid="55643" relation="include">
        </childnode>
      </node>
      <node id="55635">
        <label>vt/runtime/component/movable_fn.h</label>
        <link refid="movable__fn_8h"/>
      </node>
      <node id="55477">
        <label>functional</label>
      </node>
      <node id="55619">
        <label>checkpoint/container/kokkos_complex_serialize.h</label>
        <link refid="kokkos__complex__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55591" relation="include">
        </childnode>
        <childnode refid="55556" relation="include">
        </childnode>
        <childnode refid="55569" relation="include">
        </childnode>
      </node>
      <node id="55599">
        <label>queue</label>
      </node>
      <node id="55516">
        <label>vt/runtime/component/component_dep.h</label>
        <link refid="component__dep_8h"/>
        <childnode refid="55514" relation="include">
        </childnode>
      </node>
      <node id="55482">
        <label>vt/epoch/epoch_impl_type.h</label>
        <link refid="epoch__impl__type_8h"/>
        <childnode refid="55469" relation="include">
        </childnode>
        <childnode refid="55483" relation="include">
        </childnode>
      </node>
      <node id="55575">
        <label>checkpoint/dispatch/vrt/derived.h</label>
        <link refid="derived_8h"/>
        <childnode refid="55565" relation="include">
        </childnode>
        <childnode refid="55568" relation="include">
        </childnode>
        <childnode refid="55571" relation="include">
        </childnode>
        <childnode refid="55572" relation="include">
        </childnode>
        <childnode refid="55573" relation="include">
        </childnode>
      </node>
      <node id="55527">
        <label>limits</label>
      </node>
      <node id="55603">
        <label>checkpoint/container/string_serialize.h</label>
        <link refid="string__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
      </node>
      <node id="55586">
        <label>checkpoint/container/chrono_serialize.h</label>
        <link refid="chrono__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55587" relation="include">
        </childnode>
      </node>
      <node id="55487">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="55488" relation="include">
        </childnode>
        <childnode refid="55476" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
      </node>
      <node id="55488">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55490" relation="include">
        </childnode>
      </node>
      <node id="55530">
        <label>vt/timing/timing_type.h</label>
        <link refid="timing__type_8h"/>
        <childnode refid="55527" relation="include">
        </childnode>
        <childnode refid="55529" relation="include">
        </childnode>
        <childnode refid="55528" relation="include">
        </childnode>
      </node>
      <node id="55625">
        <label>vt/runtime/component/meter/timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="55466" relation="include">
        </childnode>
        <childnode refid="55623" relation="include">
        </childnode>
        <childnode refid="55626" relation="include">
        </childnode>
      </node>
      <node id="55610">
        <label>checkpoint/container/view_serialize.h</label>
        <link refid="view__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55611" relation="include">
        </childnode>
        <childnode refid="55612" relation="include">
        </childnode>
        <childnode refid="55613" relation="include">
        </childnode>
      </node>
      <node id="55568">
        <label>checkpoint/dispatch/vrt/object_registry.h</label>
        <link refid="object__registry_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55565" relation="include">
        </childnode>
        <childnode refid="55569" relation="include">
        </childnode>
        <childnode refid="55477" relation="include">
        </childnode>
        <childnode refid="55490" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
      </node>
      <node id="55626">
        <label>vt/timing/timing.h</label>
        <link refid="timing_8h"/>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55627" relation="include">
        </childnode>
        <childnode refid="55472" relation="include">
        </childnode>
        <childnode refid="55530" relation="include">
        </childnode>
      </node>
      <node id="55640">
        <label>assert.h</label>
      </node>
      <node id="55534">
        <label>checkpoint/serializers/serializers_headers.h</label>
        <link refid="serializers__headers_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55538" relation="include">
        </childnode>
        <childnode refid="55539" relation="include">
        </childnode>
        <childnode refid="55540" relation="include">
        </childnode>
        <childnode refid="55541" relation="include">
        </childnode>
        <childnode refid="55551" relation="include">
        </childnode>
        <childnode refid="55553" relation="include">
        </childnode>
      </node>
      <node id="55540">
        <label>checkpoint/serializers/sizer.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2serializers_2sizer_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55538" relation="include">
        </childnode>
      </node>
      <node id="55588">
        <label>checkpoint/container/enum_serialize.h</label>
        <link refid="enum__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
      </node>
      <node id="55536">
        <label>checkpoint/cmake_config.h</label>
      </node>
      <node id="55526">
        <label>vt/utils/adt/histogram_approx.h</label>
        <link refid="histogram__approx_8h"/>
        <childnode refid="55466" relation="include">
        </childnode>
        <childnode refid="55490" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55527" relation="include">
        </childnode>
        <childnode refid="55528" relation="include">
        </childnode>
        <childnode refid="55529" relation="include">
        </childnode>
      </node>
      <node id="55538">
        <label>checkpoint/serializers/base_serializer.h</label>
        <link refid="base__serializer_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
        <childnode refid="55505" relation="include">
        </childnode>
      </node>
      <node id="55570">
        <label>checkpoint/traits/reconstructor_traits.h</label>
        <link refid="reconstructor__traits_8h"/>
        <childnode refid="55559" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
      </node>
      <node id="55469">
        <label>cstdint</label>
      </node>
      <node id="55561">
        <label>checkpoint/detector.h</label>
        <link refid="detector_8h"/>
        <childnode refid="55486" relation="include">
        </childnode>
      </node>
      <node id="55582">
        <label>checkpoint/container/array_serialize.h</label>
        <link refid="array__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55583" relation="include">
        </childnode>
      </node>
      <node id="55631">
        <label>vt/runtime/component/progressable.h</label>
        <link refid="progressable_8h"/>
      </node>
      <node id="55630">
        <label>vt/runtime/component/bufferable.h</label>
        <link refid="bufferable_8h"/>
      </node>
      <node id="55531">
        <label>variant</label>
      </node>
      <node id="55508">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="55496" relation="include">
        </childnode>
        <childnode refid="55476" relation="include">
        </childnode>
        <childnode refid="55502" relation="include">
        </childnode>
        <childnode refid="55507" relation="include">
        </childnode>
        <childnode refid="55509" relation="include">
        </childnode>
        <childnode refid="55487" relation="include">
        </childnode>
        <childnode refid="55506" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55511" relation="include">
        </childnode>
      </node>
      <node id="55484">
        <label>vt/epoch/epoch_type.h</label>
        <link refid="epoch__type_8h"/>
        <childnode refid="55485" relation="include">
        </childnode>
        <childnode refid="55482" relation="include">
        </childnode>
        <childnode refid="55472" relation="include">
        </childnode>
      </node>
      <node id="55617">
        <label>checkpoint/container/kokkos_unordered_map_serialize.h</label>
        <link refid="kokkos__unordered__map__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55591" relation="include">
        </childnode>
        <childnode refid="55556" relation="include">
        </childnode>
        <childnode refid="55569" relation="include">
        </childnode>
      </node>
      <node id="55558">
        <label>checkpoint/dispatch/dispatch_serializer.h</label>
        <link refid="dispatch__serializer_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55559" relation="include">
        </childnode>
        <childnode refid="55562" relation="include">
        </childnode>
        <childnode refid="55563" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55505" relation="include">
        </childnode>
      </node>
      <node id="55601">
        <label>checkpoint/container/raw_ptr_serialize.h</label>
        <link refid="raw__ptr__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
      </node>
      <node id="55591">
        <label>checkpoint/dispatch/allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="55556" relation="include">
        </childnode>
        <childnode refid="55545" relation="include">
        </childnode>
      </node>
      <node id="55528">
        <label>cmath</label>
      </node>
      <node id="55506">
        <label>cassert</label>
      </node>
      <node id="55503">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="55496" relation="include">
        </childnode>
        <childnode refid="55476" relation="include">
        </childnode>
        <childnode refid="55502" relation="include">
        </childnode>
        <childnode refid="55504" relation="include">
        </childnode>
        <childnode refid="55487" relation="include">
        </childnode>
        <childnode refid="55497" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55506" relation="include">
        </childnode>
      </node>
      <node id="55480">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="55481" relation="include">
        </childnode>
        <childnode refid="55482" relation="include">
        </childnode>
      </node>
      <node id="55618">
        <label>checkpoint/container/kokkos_pair_serialize.h</label>
        <link refid="kokkos__pair__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55591" relation="include">
        </childnode>
        <childnode refid="55556" relation="include">
        </childnode>
        <childnode refid="55569" relation="include">
        </childnode>
      </node>
      <node id="55581">
        <label>stdexcept</label>
      </node>
      <node id="55496">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="55476" relation="include">
        </childnode>
      </node>
      <node id="55589">
        <label>checkpoint/container/function_serialize.h</label>
        <link refid="function__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55477" relation="include">
        </childnode>
      </node>
      <node id="55569">
        <label>checkpoint/dispatch/reconstructor.h</label>
        <link refid="reconstructor_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55570" relation="include">
        </childnode>
        <childnode refid="55560" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55505" relation="include">
        </childnode>
      </node>
      <node id="55620">
        <label>checkpoint/checkpoint_api.impl.h</label>
        <link refid="checkpoint__api_8impl_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55533" relation="include">
        </childnode>
        <childnode refid="55544" relation="include">
        </childnode>
        <childnode refid="55543" relation="include">
        </childnode>
        <childnode refid="55545" relation="include">
        </childnode>
      </node>
      <node id="55481">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
        <childnode refid="55476" relation="include">
        </childnode>
      </node>
      <node id="55541">
        <label>checkpoint/serializers/packer.h</label>
        <link refid="packer_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55542" relation="include">
        </childnode>
        <childnode refid="55543" relation="include">
        </childnode>
        <childnode refid="55546" relation="include">
        </childnode>
        <childnode refid="55547" relation="include">
        </childnode>
        <childnode refid="55548" relation="include">
        </childnode>
        <childnode refid="55549" relation="include">
        </childnode>
      </node>
      <node id="55493">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="55494" relation="include">
        </childnode>
        <childnode refid="55498" relation="include">
        </childnode>
        <childnode refid="55501" relation="include">
        </childnode>
      </node>
      <node id="55489">
        <label>string</label>
      </node>
      <node id="55547">
        <label>checkpoint/buffer/user_buffer.h</label>
        <link refid="user__buffer_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55543" relation="include">
        </childnode>
      </node>
      <node id="55609">
        <label>checkpoint/container/unique_ptr_serialize.h</label>
        <link refid="unique__ptr__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55569" relation="include">
        </childnode>
        <childnode refid="55566" relation="include">
        </childnode>
      </node>
      <node id="55518">
        <label>vt/runtime/component/base.h</label>
        <link refid="src_2vt_2runtime_2component_2base_8h"/>
        <childnode refid="55476" relation="include">
        </childnode>
        <childnode refid="55519" relation="include">
        </childnode>
        <childnode refid="55630" relation="include">
        </childnode>
        <childnode refid="55631" relation="include">
        </childnode>
      </node>
      <node id="55543">
        <label>checkpoint/buffer/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55544" relation="include">
        </childnode>
        <childnode refid="55545" relation="include">
        </childnode>
      </node>
      <node id="55613">
        <label>checkpoint/container/view_traverse_ndim.h</label>
        <link refid="view__traverse__ndim_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55611" relation="include">
        </childnode>
      </node>
      <node id="55596">
        <label>map</label>
      </node>
      <node id="55627">
        <label>EngFormat-Cpp/eng_format.hpp</label>
      </node>
      <node id="55563">
        <label>checkpoint/dispatch/dispatch_serializer_nonbyte.h</label>
        <link refid="dispatch__serializer__nonbyte_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55559" relation="include">
        </childnode>
        <childnode refid="55564" relation="include">
        </childnode>
        <childnode refid="55566" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55505" relation="include">
        </childnode>
        <childnode refid="55506" relation="include">
        </childnode>
      </node>
      <node id="55576">
        <label>checkpoint/dispatch/dispatch_byte_macro.h</label>
        <link refid="dispatch__byte__macro_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
      </node>
      <node id="55509">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="55505" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55490" relation="include">
        </childnode>
        <childnode refid="55510" relation="include">
        </childnode>
      </node>
      <node id="55510">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="55509" relation="include">
        </childnode>
        <childnode refid="55487" relation="include">
        </childnode>
        <childnode refid="55505" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55490" relation="include">
        </childnode>
      </node>
      <node id="55515">
        <label>unordered_set</label>
      </node>
      <node id="55560">
        <label>checkpoint/dispatch/reconstructor_tag.h</label>
        <link refid="reconstructor__tag_8h"/>
      </node>
      <node id="55565">
        <label>checkpoint/dispatch/vrt/registry_common.h</label>
        <link refid="registry__common_8h"/>
        <childnode refid="55486" relation="include">
        </childnode>
      </node>
      <node id="55621">
        <label>vt/runtime/component/diagnostic_meter.h</label>
        <link refid="diagnostic__meter_8h"/>
        <childnode refid="55622" relation="include">
        </childnode>
        <childnode refid="55624" relation="include">
        </childnode>
        <childnode refid="55625" relation="include">
        </childnode>
        <childnode refid="55628" relation="include">
        </childnode>
        <childnode refid="55530" relation="include">
        </childnode>
      </node>
      <node id="55592">
        <label>checkpoint/container/container_serialize.h</label>
        <link refid="container__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
      </node>
      <node id="55554">
        <label>ostream</label>
      </node>
      <node id="55468">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="55469" relation="include">
        </childnode>
        <childnode refid="55470" relation="include">
        </childnode>
        <childnode refid="55471" relation="include">
        </childnode>
        <childnode refid="55473" relation="include">
        </childnode>
      </node>
      <node id="55559">
        <label>checkpoint/traits/serializable_traits.h</label>
        <link refid="serializable__traits_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55560" relation="include">
        </childnode>
        <childnode refid="55561" relation="include">
        </childnode>
        <childnode refid="55469" relation="include">
        </childnode>
        <childnode refid="55506" relation="include">
        </childnode>
      </node>
      <node id="55512">
        <label>vt/configs/arguments/args.h</label>
        <link refid="args_8h"/>
        <childnode refid="55488" relation="include">
        </childnode>
        <childnode refid="55513" relation="include">
        </childnode>
        <childnode refid="55477" relation="include">
        </childnode>
        <childnode refid="55545" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55490" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
      </node>
      <node id="55571">
        <label>checkpoint/dispatch/vrt/serializer_registry.h</label>
        <link refid="serializer__registry_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55565" relation="include">
        </childnode>
        <childnode refid="55477" relation="include">
        </childnode>
        <childnode refid="55490" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
      </node>
      <node id="55622">
        <label>vt/runtime/component/meter/counter.h</label>
        <link refid="counter_8h"/>
        <childnode refid="55466" relation="include">
        </childnode>
        <childnode refid="55623" relation="include">
        </childnode>
      </node>
      <node id="55483">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="55476" relation="include">
        </childnode>
        <childnode refid="55478" relation="include">
        </childnode>
      </node>
      <node id="55606">
        <label>checkpoint/container/tuple_serialize.h</label>
        <link refid="tuple__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55492" relation="include">
        </childnode>
        <childnode refid="55607" relation="include">
        </childnode>
      </node>
      <node id="55552">
        <label>checkpoint/serializers/unpacker.impl.h</label>
        <link refid="unpacker_8impl_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55542" relation="include">
        </childnode>
        <childnode refid="55551" relation="include">
        </childnode>
        <childnode refid="55505" relation="include">
        </childnode>
        <childnode refid="55550" relation="include">
        </childnode>
      </node>
      <node id="55643">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="55604">
        <label>checkpoint/container/thread_serialize.h</label>
        <link refid="thread__serialize_8h"/>
        <childnode refid="55605" relation="include">
        </childnode>
        <childnode refid="55535" relation="include">
        </childnode>
      </node>
      <node id="55566">
        <label>checkpoint/dispatch/vrt/virtual_serialize.h</label>
        <link refid="virtual__serialize_8h"/>
        <childnode refid="55567" relation="include">
        </childnode>
        <childnode refid="55575" relation="include">
        </childnode>
      </node>
      <node id="55517">
        <label>vt/runtime/component/component_traits.h</label>
        <link refid="component__traits_8h"/>
        <childnode refid="55486" relation="include">
        </childnode>
      </node>
      <node id="55578">
        <label>checkpoint/dispatch/type_registry.h</label>
        <link refid="type__registry_8h"/>
        <childnode refid="55579" relation="include">
        </childnode>
        <childnode refid="55469" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55580" relation="include">
        </childnode>
      </node>
      <node id="55521">
        <label>vt/runtime/component/component_reduce.h</label>
        <link refid="component__reduce_8h"/>
        <childnode refid="55476" relation="include">
        </childnode>
      </node>
      <node id="55514">
        <label>vt/runtime/component/component_registry.h</label>
        <link refid="component__registry_8h"/>
        <childnode refid="55476" relation="include">
        </childnode>
        <childnode refid="55490" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55515" relation="include">
        </childnode>
      </node>
      <node id="55467">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="55468" relation="include">
        </childnode>
        <childnode refid="55474" relation="include">
        </childnode>
      </node>
      <node id="55639">
        <label>vt/utils/demangle/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="55466" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55490" relation="include">
        </childnode>
        <childnode refid="55550" relation="include">
        </childnode>
        <childnode refid="55505" relation="include">
        </childnode>
        <childnode refid="55640" relation="include">
        </childnode>
      </node>
      <node id="55495">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="55489" relation="include">
        </childnode>
      </node>
      <node id="55476">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="55469" relation="include">
        </childnode>
        <childnode refid="55477" relation="include">
        </childnode>
      </node>
      <node id="55499">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="55475" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
        <childnode refid="55500" relation="include">
        </childnode>
      </node>
      <node id="55573">
        <label>checkpoint/dispatch/vrt/serialize_instantiator.h</label>
        <link refid="serialize__instantiator_8h"/>
        <childnode refid="55571" relation="include">
        </childnode>
        <childnode refid="55574" relation="include">
        </childnode>
      </node>
      <node id="55544">
        <label>checkpoint/checkpoint_api.h</label>
        <link refid="checkpoint__api_8h"/>
        <childnode refid="55505" relation="include">
        </childnode>
        <childnode refid="55477" relation="include">
        </childnode>
        <childnode refid="55545" relation="include">
        </childnode>
      </node>
      <node id="55491">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
        <childnode refid="55492" relation="include">
        </childnode>
      </node>
      <node id="55628">
        <label>vt/runtime/component/meter/counter_gauge.h</label>
        <link refid="counter__gauge_8h"/>
        <childnode refid="55622" relation="include">
        </childnode>
        <childnode refid="55624" relation="include">
        </childnode>
      </node>
      <node id="55494">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="55495" relation="include">
        </childnode>
        <childnode refid="55476" relation="include">
        </childnode>
        <childnode refid="55496" relation="include">
        </childnode>
        <childnode refid="55497" relation="include">
        </childnode>
        <childnode refid="55471" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
      </node>
      <node id="55522">
        <label>vt/runtime/component/diagnostic_types.h</label>
        <link refid="diagnostic__types_8h"/>
        <childnode refid="55469" relation="include">
        </childnode>
      </node>
      <node id="55537">
        <label>cstdio</label>
      </node>
      <node id="55564">
        <label>checkpoint/dispatch/vrt/virtual_serialize_traits.h</label>
        <link refid="virtual__serialize__traits_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55565" relation="include">
        </childnode>
        <childnode refid="55561" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
      </node>
      <node id="55602">
        <label>checkpoint/container/shared_ptr_serialize.h</label>
        <link refid="shared__ptr__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
      </node>
      <node id="55479">
        <label>tuple</label>
      </node>
      <node id="55549">
        <label>checkpoint/serializers/packer.impl.h</label>
        <link refid="packer_8impl_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55542" relation="include">
        </childnode>
        <childnode refid="55543" relation="include">
        </childnode>
        <childnode refid="55550" relation="include">
        </childnode>
      </node>
      <node id="55574">
        <label>checkpoint/dispatch/vrt/link_derived_to_base_idx.h</label>
        <link refid="link__derived__to__base__idx_8h"/>
        <childnode refid="55571" relation="include">
        </childnode>
      </node>
      <node id="55641">
        <label>ctime</label>
      </node>
      <node id="55485">
        <label>vt/utils/strong/strong_type.h</label>
        <link refid="strong__type_8h"/>
        <childnode refid="55477" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
      </node>
      <node id="55616">
        <label>optional</label>
      </node>
      <node id="55623">
        <label>vt/runtime/component/meter/stats_pack.h</label>
        <link refid="stats__pack_8h"/>
        <childnode refid="55466" relation="include">
        </childnode>
      </node>
      <node id="55474">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="55475" relation="include">
        </childnode>
        <childnode refid="55468" relation="include">
        </childnode>
        <childnode refid="55487" relation="include">
        </childnode>
        <childnode refid="55491" relation="include">
        </childnode>
      </node>
      <node id="55624">
        <label>vt/runtime/component/meter/gauge.h</label>
        <link refid="gauge_8h"/>
        <childnode refid="55466" relation="include">
        </childnode>
        <childnode refid="55623" relation="include">
        </childnode>
      </node>
      <node id="55600">
        <label>stack</label>
      </node>
      <node id="55490">
        <label>vector</label>
      </node>
      <node id="55632">
        <label>vt/context/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="55545" relation="include">
        </childnode>
        <childnode refid="55633" relation="include">
        </childnode>
        <childnode refid="55466" relation="include">
        </childnode>
        <childnode refid="55634" relation="include">
        </childnode>
        <childnode refid="55637" relation="include">
        </childnode>
        <childnode refid="55638" relation="include">
        </childnode>
      </node>
      <node id="55642">
        <label>CLI/CLI11.hpp</label>
      </node>
      <node id="55607">
        <label>new</label>
      </node>
      <node id="55557">
        <label>checkpoint/dispatch/clean_type.h</label>
        <link refid="clean__type_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
      </node>
      <node id="55562">
        <label>checkpoint/dispatch/dispatch_serializer_byte.h</label>
        <link refid="dispatch__serializer__byte_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55559" relation="include">
        </childnode>
        <childnode refid="55563" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55505" relation="include">
        </childnode>
      </node>
      <node id="55584">
        <label>checkpoint/container/atomic_serialize.h</label>
        <link refid="atomic__serialize_8h"/>
        <childnode refid="55585" relation="include">
        </childnode>
        <childnode refid="55535" relation="include">
        </childnode>
      </node>
      <node id="55492">
        <label>utility</label>
      </node>
      <node id="55608">
        <label>checkpoint/container/vector_serialize.h</label>
        <link refid="vector__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55591" relation="include">
        </childnode>
        <childnode refid="55556" relation="include">
        </childnode>
        <childnode refid="55569" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55490" relation="include">
        </childnode>
      </node>
      <node id="55583">
        <label>array</label>
      </node>
      <node id="55511">
        <label>sstream</label>
      </node>
      <node id="55598">
        <label>checkpoint/container/queue_serialize.h</label>
        <link refid="queue__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55599" relation="include">
        </childnode>
        <childnode refid="55600" relation="include">
        </childnode>
      </node>
      <node id="55567">
        <label>checkpoint/dispatch/vrt/base.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2vrt_2base_8h"/>
        <childnode refid="55565" relation="include">
        </childnode>
        <childnode refid="55568" relation="include">
        </childnode>
        <childnode refid="55571" relation="include">
        </childnode>
        <childnode refid="55572" relation="include">
        </childnode>
        <childnode refid="55573" relation="include">
        </childnode>
      </node>
      <node id="55553">
        <label>checkpoint/serializers/stream_serializer.h</label>
        <link refid="stream__serializer_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55538" relation="include">
        </childnode>
        <childnode refid="55554" relation="include">
        </childnode>
        <childnode refid="55555" relation="include">
        </childnode>
      </node>
      <node id="55520">
        <label>vt/runtime/component/component_name.h</label>
        <link refid="component__name_8h"/>
        <childnode refid="55489" relation="include">
        </childnode>
      </node>
      <node id="55524">
        <label>vt/runtime/component/diagnostic_value.h</label>
        <link refid="diagnostic__value_8h"/>
        <childnode refid="55466" relation="include">
        </childnode>
        <childnode refid="55522" relation="include">
        </childnode>
        <childnode refid="55525" relation="include">
        </childnode>
        <childnode refid="55532" relation="include">
        </childnode>
        <childnode refid="55526" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55528" relation="include">
        </childnode>
      </node>
      <node id="55472">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="55504">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="55469" relation="include">
        </childnode>
        <childnode refid="55505" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55490" relation="include">
        </childnode>
      </node>
      <node id="55471">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
        <childnode refid="55472" relation="include">
        </childnode>
      </node>
      <node id="55546">
        <label>checkpoint/buffer/managed_buffer.h</label>
        <link refid="managed__buffer_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55543" relation="include">
        </childnode>
        <childnode refid="55545" relation="include">
        </childnode>
      </node>
      <node id="55505">
        <label>cstdlib</label>
      </node>
      <node id="55556">
        <label>checkpoint/dispatch/dispatch.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55543" relation="include">
        </childnode>
        <childnode refid="55557" relation="include">
        </childnode>
        <childnode refid="55558" relation="include">
        </childnode>
        <childnode refid="55576" relation="include">
        </childnode>
        <childnode refid="55569" relation="include">
        </childnode>
        <childnode refid="55477" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55577" relation="include">
        </childnode>
      </node>
      <node id="55498">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="55496" relation="include">
        </childnode>
        <childnode refid="55499" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
      </node>
      <node id="55577">
        <label>checkpoint/dispatch/dispatch.impl.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8impl_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55556" relation="include">
        </childnode>
        <childnode refid="55578" relation="include">
        </childnode>
        <childnode refid="55581" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
      </node>
      <node id="55533">
        <label>checkpoint/checkpoint.h</label>
        <link refid="checkpoint_8h"/>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55556" relation="include">
        </childnode>
        <childnode refid="55559" relation="include">
        </childnode>
        <childnode refid="55582" relation="include">
        </childnode>
        <childnode refid="55584" relation="include">
        </childnode>
        <childnode refid="55586" relation="include">
        </childnode>
        <childnode refid="55588" relation="include">
        </childnode>
        <childnode refid="55589" relation="include">
        </childnode>
        <childnode refid="55590" relation="include">
        </childnode>
        <childnode refid="55595" relation="include">
        </childnode>
        <childnode refid="55598" relation="include">
        </childnode>
        <childnode refid="55601" relation="include">
        </childnode>
        <childnode refid="55602" relation="include">
        </childnode>
        <childnode refid="55603" relation="include">
        </childnode>
        <childnode refid="55604" relation="include">
        </childnode>
        <childnode refid="55606" relation="include">
        </childnode>
        <childnode refid="55608" relation="include">
        </childnode>
        <childnode refid="55609" relation="include">
        </childnode>
        <childnode refid="55610" relation="include">
        </childnode>
        <childnode refid="55614" relation="include">
        </childnode>
        <childnode refid="55615" relation="include">
        </childnode>
        <childnode refid="55617" relation="include">
        </childnode>
        <childnode refid="55618" relation="include">
        </childnode>
        <childnode refid="55619" relation="include">
        </childnode>
        <childnode refid="55544" relation="include">
        </childnode>
        <childnode refid="55620" relation="include">
        </childnode>
      </node>
      <node id="55637">
        <label>vt/context/context_attorney_fwd.h</label>
        <link refid="context__attorney__fwd_8h"/>
        <childnode refid="55466" relation="include">
        </childnode>
      </node>
      <node id="55579">
        <label>cstddef</label>
      </node>
      <node id="55595">
        <label>checkpoint/container/map_serialize.h</label>
        <link refid="map__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55591" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55592" relation="include">
        </childnode>
        <childnode refid="55596" relation="include">
        </childnode>
        <childnode refid="55580" relation="include">
        </childnode>
        <childnode refid="55597" relation="include">
        </childnode>
        <childnode refid="55515" relation="include">
        </childnode>
      </node>
      <node id="55594">
        <label>deque</label>
      </node>
      <node id="55580">
        <label>unordered_map</label>
      </node>
      <node id="55590">
        <label>checkpoint/container/list_serialize.h</label>
        <link refid="list__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55591" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55592" relation="include">
        </childnode>
        <childnode refid="55593" relation="include">
        </childnode>
        <childnode refid="55594" relation="include">
        </childnode>
      </node>
      <node id="55548">
        <label>checkpoint/buffer/io_buffer.h</label>
        <link refid="io__buffer_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55543" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
      </node>
      <node id="55475">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="55476" relation="include">
        </childnode>
        <childnode refid="55478" relation="include">
        </childnode>
        <childnode refid="55480" relation="include">
        </childnode>
        <childnode refid="55483" relation="include">
        </childnode>
        <childnode refid="55484" relation="include">
        </childnode>
      </node>
      <node id="55551">
        <label>checkpoint/serializers/unpacker.h</label>
        <link refid="unpacker_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55542" relation="include">
        </childnode>
        <childnode refid="55547" relation="include">
        </childnode>
        <childnode refid="55552" relation="include">
        </childnode>
      </node>
      <node id="55587">
        <label>chrono</label>
      </node>
      <node id="55502">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="55476" relation="include">
        </childnode>
        <childnode refid="55496" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55503" relation="include">
        </childnode>
      </node>
      <node id="55633">
        <label>mpi.h</label>
      </node>
      <node id="55605">
        <label>thread</label>
      </node>
      <node id="55611">
        <label>checkpoint/container/view_traits_extract.h</label>
        <link refid="view__traits__extract_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
      </node>
      <node id="55636">
        <label>vt/runtime/component/component_pack.impl.h</label>
        <link refid="component__pack_8impl_8h"/>
        <childnode refid="55634" relation="include">
        </childnode>
      </node>
      <node id="55478">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="55476" relation="include">
        </childnode>
        <childnode refid="55469" relation="include">
        </childnode>
        <childnode refid="55477" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
      </node>
      <node id="55525">
        <label>vt/runtime/component/diagnostic_erased_value.h</label>
        <link refid="diagnostic__erased__value_8h"/>
        <childnode refid="55522" relation="include">
        </childnode>
        <childnode refid="55526" relation="include">
        </childnode>
        <childnode refid="55530" relation="include">
        </childnode>
        <childnode refid="55485" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55531" relation="include">
        </childnode>
      </node>
      <node id="55519">
        <label>vt/runtime/component/diagnostic.h</label>
        <link refid="diagnostic_8h"/>
        <childnode refid="55520" relation="include">
        </childnode>
        <childnode refid="55521" relation="include">
        </childnode>
        <childnode refid="55522" relation="include">
        </childnode>
        <childnode refid="55523" relation="include">
        </childnode>
        <childnode refid="55524" relation="include">
        </childnode>
        <childnode refid="55621" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55545" relation="include">
        </childnode>
        <childnode refid="55580" relation="include">
        </childnode>
        <childnode refid="55477" relation="include">
        </childnode>
        <childnode refid="55629" relation="include">
        </childnode>
      </node>
      <node id="55486">
        <label>type_traits</label>
      </node>
      <node id="55597">
        <label>set</label>
      </node>
      <node id="55614">
        <label>checkpoint/container/variant_serialize.h</label>
        <link refid="variant__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55591" relation="include">
        </childnode>
        <childnode refid="55531" relation="include">
        </childnode>
      </node>
      <node id="55497">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="55475" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
      </node>
      <node id="55466">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="55467" relation="include">
        </childnode>
        <childnode refid="55475" relation="include">
        </childnode>
        <childnode refid="55493" relation="include">
        </childnode>
      </node>
      <node id="55532">
        <label>vt/runtime/component/diagnostic_value_base.h</label>
        <link refid="diagnostic__value__base_8h"/>
        <childnode refid="55522" relation="include">
        </childnode>
        <childnode refid="55523" relation="include">
        </childnode>
        <childnode refid="55525" relation="include">
        </childnode>
        <childnode refid="55533" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
      </node>
      <node id="55529">
        <label>algorithm</label>
      </node>
      <node id="55612">
        <label>checkpoint/container/view_traverse_manual.h</label>
        <link refid="view__traverse__manual_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55534" relation="include">
        </childnode>
        <childnode refid="55611" relation="include">
        </childnode>
      </node>
      <node id="55572">
        <label>checkpoint/dispatch/vrt/inheritance_assert_helpers.h</label>
        <link refid="inheritance__assert__helpers_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
      </node>
      <node id="55615">
        <label>checkpoint/container/optional_serialize.h</label>
        <link refid="optional__serialize_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55616" relation="include">
        </childnode>
      </node>
      <node id="55542">
        <label>checkpoint/serializers/memory_serializer.h</label>
        <link refid="memory__serializer_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55538" relation="include">
        </childnode>
      </node>
      <node id="55513">
        <label>vt/runtime/component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="55498" relation="include">
        </childnode>
        <childnode refid="55514" relation="include">
        </childnode>
        <childnode refid="55516" relation="include">
        </childnode>
        <childnode refid="55517" relation="include">
        </childnode>
        <childnode refid="55518" relation="include">
        </childnode>
        <childnode refid="55545" relation="include">
        </childnode>
      </node>
      <node id="55473">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="55550">
        <label>cstring</label>
      </node>
      <node id="55638">
        <label>vt/runnable/runnable.fwd.h</label>
        <link refid="runnable_8fwd_8h"/>
      </node>
      <node id="55629">
        <label>vt/runtime/component/diagnostic.impl.h</label>
        <link refid="diagnostic_8impl_8h"/>
        <childnode refid="55466" relation="include">
        </childnode>
        <childnode refid="55519" relation="include">
        </childnode>
        <childnode refid="55524" relation="include">
        </childnode>
        <childnode refid="55545" relation="include">
        </childnode>
        <childnode refid="55527" relation="include">
        </childnode>
      </node>
      <node id="55523">
        <label>vt/runtime/component/diagnostic_units.h</label>
        <link refid="diagnostic__units_8h"/>
      </node>
      <node id="55545">
        <label>memory</label>
      </node>
      <node id="55555">
        <label>istream</label>
      </node>
      <node id="55501">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="55502" relation="include">
        </childnode>
        <childnode refid="55507" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
      </node>
      <node id="55507">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="55496" relation="include">
        </childnode>
        <childnode refid="55476" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55508" relation="include">
        </childnode>
      </node>
      <node id="55539">
        <label>checkpoint/serializers/footprinter.h</label>
        <link refid="footprinter_8h"/>
        <childnode refid="55535" relation="include">
        </childnode>
        <childnode refid="55538" relation="include">
        </childnode>
      </node>
      <node id="55500">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="55475" relation="include">
        </childnode>
        <childnode refid="55468" relation="include">
        </childnode>
        <childnode refid="55496" relation="include">
        </childnode>
        <childnode refid="55499" relation="include">
        </childnode>
        <childnode refid="55497" relation="include">
        </childnode>
        <childnode refid="55495" relation="include">
        </childnode>
        <childnode refid="55489" relation="include">
        </childnode>
        <childnode refid="55479" relation="include">
        </childnode>
        <childnode refid="55486" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classvt_1_1arguments_1_1_vt_formatter" prot="public">vt::arguments::VtFormatter</innerclass>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1arguments">vt::arguments</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" prot="public" static="no">
        <name>debug_pp</name>
        <param><defname>opt</defname></param>
        <initializer>+std::string(config::PrettyPrintCat&lt;config::opt&gt;::str)+</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/configs/arguments/args.cc" line="773" column="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.cc</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2021<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">vt/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="args_8h" kindref="compound">vt/configs/arguments/args.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="context_8h" kindref="compound">vt/context/context.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="demangle_8h" kindref="compound">vt/utils/demangle/demangle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CLI/CLI11.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;yaml-cpp/yaml.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">arguments<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Temporary<sp/>variables<sp/>used<sp/>only<sp/>for<sp/>parsing<sp/>artifacts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>YAML<sp/>labels<sp/>for<sp/>all<sp/>CLI<sp/>args</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Output<sp/>Control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_color_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Color&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_no_color_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>Color&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_quiet_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Quiet&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Signal<sp/>Handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_no_sigint_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Disable<sp/>SIGINT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_no_sigsegv_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Disable<sp/>SIGSEGV&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_no_sigbus_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Disable<sp/>SIGBUS&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_no_terminate_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Disable<sp/>Terminate<sp/>Signal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Memory<sp/>Usage<sp/>Reporting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_memory_reporters_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>Reporters&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_print_memory_each_phase_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>Memory<sp/>Each<sp/>Phase&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_print_memory_node_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>Memory<sp/>On<sp/>Node&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_allow_memory_report_with_ps_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Allow<sp/>Memory<sp/>Report<sp/>With<sp/>ps&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_print_memory_threshold_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>Memory<sp/>Threshold&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_print_memory_sched_poll_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>Memory<sp/>Scheduler<sp/>Poll&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_print_memory_footprint_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>Memory<sp/>Footprint&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dump<sp/>Stack<sp/>Backtrace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_no_warn_stack_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>Stack<sp/>Output<sp/>on<sp/>Warning&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_no_assert_stack_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>Stack<sp/>Output<sp/>on<sp/>Assert&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_no_abort_stack_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>Stack<sp/>Output<sp/>on<sp/>Abort&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_no_stack_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>Stack<sp/>Output&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_stack_file_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_stack_dir_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Directory&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_stack_mod_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>Rank<sp/>Mod&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tracing<sp/>Configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_mpi_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MPI<sp/>Type<sp/>Events&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_pmpi_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MPI<sp/>Type<sp/>Events&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_file_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_dir_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Directory&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_mod_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>Rank<sp/>Mod&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_flush_size_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Flush<sp/>Size&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_gzip_finish_flush_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GZip<sp/>Finish<sp/>Flush&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_sys_all_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Include<sp/>All<sp/>System<sp/>Events&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_sys_term_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Include<sp/>Termination<sp/>Events&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_sys_location_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Include<sp/>Location<sp/>Events&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_sys_collection_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Include<sp/>Collection<sp/>Events&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_sys_serial_msg_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Include<sp/>Message<sp/>Serialization<sp/>Events&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_spec_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Specification<sp/>Enabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_spec_file_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Spec<sp/>File&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_memory_usage_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>Usage&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_event_polling_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Event<sp/>Polling&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_trace_irecv_polling_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IRecv<sp/>Polling&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Debug<sp/>Print<sp/>Configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_level_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Level&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_all_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>All&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_none_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Disable<sp/>All&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_print_flush_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Flush&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_replay_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Debug<sp/>Replay&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_gen_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;gen&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_runtime_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;runtime&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_active_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_term_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;term&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_termds_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;termds&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_barrier_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;barrier&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_event_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;event&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_pipe_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pipe&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_pool_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pool&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_reduce_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;reduce&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_rdma_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rdma&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_rdma_channel_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rdma_channel&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_rdma_state_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rdma_state&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_handler_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;handler&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_hierlb_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;hierlb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_temperedlb_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;temperedlb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_temperedwmin_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;temperedwmin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_scatter_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;scatter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_serial_msg_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;serial_msg&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_trace_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;trace&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_location_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_lb_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_vrt_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;vrt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_vrt_coll_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;vrt_coll&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_worker_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;worker&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_group_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;group&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_broadcast_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;broadcast&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_objgroup_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;objgroup&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_phase_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;phase&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_context_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;context&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_debug_epoch_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;epoch&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>Balancing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_quiet_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Quiet&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_file_name_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_show_config_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>Configuration&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_name_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_args_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Arguments&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_interval_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Interval&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_keep_last_elm_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Keep<sp/>Last<sp/>Element&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_data_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_data_dir_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Directory&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_data_file_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_data_in_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_data_compress_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>Compression&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_data_dir_in_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Directory&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_data_file_in_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_statistics_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_statistics_compress_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>Compression&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_statistics_file_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_statistics_dir_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Directory&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_self_migration_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>Self<sp/>Migration&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_spec_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>Specification&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_lb_spec_file_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Specification<sp/>File&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Diagnostics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_diag_enable_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_diag_print_summary_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>Print<sp/>Summary&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_diag_summary_file_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Summary<sp/>File&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_diag_summary_csv_file_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Summary<sp/>CSV<sp/>File&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_diag_csv_base_units_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>CSV<sp/>Base<sp/>Units&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Termination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_no_detect_hang_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>Detect<sp/>Hangs&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_term_rooted_use_ds_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>DS<sp/>for<sp/>Rooted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_term_rooted_use_wave_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>Wave<sp/>for<sp/>Rooted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_epoch_graph_on_hang_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>Epoch<sp/>Graph<sp/>on<sp/>Hang&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_epoch_graph_terse_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Terse<sp/>Epoch<sp/>Graph<sp/>Output&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_print_no_progress_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>No<sp/>Progress&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_hang_freq_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hang<sp/>Check<sp/>Frequency&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Debugging/Launch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_pause_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Pause&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scheduler<sp/>Configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_sched_num_progress_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Num<sp/>Progress<sp/>Times&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_sched_progress_han_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Progress<sp/>Handlers&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_sched_progress_sec_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Progress<sp/>Seconds&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configuration<sp/>File</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_output_config_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>Output<sp/>Config&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_output_config_file_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;File&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Runtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_max_mpi_send_size_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Max<sp/>MPI<sp/>Send<sp/>Size&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_no_assert_fail_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Disable<sp/>Assert<sp/>Failure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vt_throw_on_abort_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Throw<sp/>on<sp/>Abort&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">std::unordered_map&lt;std::string,<sp/>std::string&gt;<sp/>user_args_labels<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;vt_user_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unused_user_param&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;vt_user_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unused_user_param&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;vt_user_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unused_user_param&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;vt_user_int_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unused_user_param&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;vt_user_int_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unused_user_param&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;vt_user_int_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unused_user_param&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;vt_user_str_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unused_user_param&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;vt_user_str_2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unused_user_param&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;vt_user_str_3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unused_user_param&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">std::vector&lt;std::string&gt;<sp/>arg_trace_mpi;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>postParseTransform(AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>contains<sp/>=<sp/>[](std::vector&lt;std::string&gt;<sp/>&amp;v,<sp/>std::string<sp/>str){</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::find(v.begin(),<sp/>v.end(),<sp/>str)<sp/>not_eq<sp/>v.end();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>appConfig.vt_trace_mpi<sp/>=<sp/>contains(arg_trace_mpi,<sp/></highlight><highlight class="stringliteral">&quot;internal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>appConfig.vt_trace_pmpi<sp/>=<sp/>contains(arg_trace_mpi,<sp/></highlight><highlight class="stringliteral">&quot;external&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0" kindref="member">config::ModeEnum</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>level<sp/>=<sp/>appConfig.vt_debug_level;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;terse&quot;</highlight><highlight class="normal"><sp/>or<sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>appConfig.vt_debug_level_val<sp/>=<sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0ada56a0a2b6334204a249f398bdf1c794" kindref="member">ModeEnum::terse</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal"><sp/>or<sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>appConfig.vt_debug_level_val<sp/>=<sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0ada56a0a2b6334204a249f398bdf1c794" kindref="member">ModeEnum::terse</ref><sp/>|<sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a6865573ccc58716514eb9a164a52c256" kindref="member">ModeEnum::normal</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;verbose&quot;</highlight><highlight class="normal"><sp/>or<sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>appConfig.vt_debug_level_val<sp/>=</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0ada56a0a2b6334204a249f398bdf1c794" kindref="member">ModeEnum::terse</ref><sp/>|<sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a6865573ccc58716514eb9a164a52c256" kindref="member">ModeEnum::normal</ref><sp/>|<sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a9b54bf70f7b7fe7cfb6f3da0e167ae27" kindref="member">ModeEnum::verbose</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hard__error_8h_1afc4cdafa6d3b99f94c26a5d4290999a9" kindref="member">vtAbort</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>value<sp/>passed<sp/>to<sp/>--vt_debug_level&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parseYaml(AppConfig&amp;<sp/>appConfig,<sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>inputFile);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>convertConfigToString(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">std::tuple&lt;int,<sp/>std::string&gt;<sp/>parseArguments(</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>CLI::App&amp;<sp/>app,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**&amp;<sp/>argv,<sp/>AppConfig&amp;<sp/>appConfig</highlight></codeline>
<codeline lineno="255"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>std::vector&lt;char*&gt;<sp/>vt_args;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>up<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>the<sp/>ability<sp/>to<sp/>read<sp/>interleaved<sp/>arguments<sp/>for<sp/>vt,<sp/>MPI,<sp/>and<sp/>others<sp/>passed<sp/>through<sp/>to<sp/>other<sp/>libraries<sp/>or<sp/>the<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>std::vector&lt;char*&gt;*<sp/>rargs<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c<sp/>=<sp/>argv[i];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>strcmp(c,<sp/></highlight><highlight class="stringliteral">&quot;--vt_args&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rargs<sp/>=<sp/>&amp;vt_args;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>strcmp(c,<sp/></highlight><highlight class="stringliteral">&quot;--&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rargs<sp/>=<sp/>&amp;appConfig.passthru_args;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rargs)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rargs-&gt;push_back(c);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>strncmp(c,<sp/></highlight><highlight class="stringliteral">&quot;--vt_&quot;</highlight><highlight class="normal">,<sp/>5))<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implicit<sp/>start<sp/>of<sp/>VT<sp/>args<sp/>allows<sp/>pass-thru<sp/>&apos;for<sp/>compatibility&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>although<sp/>the<sp/>recommended<sp/>calling<sp/>pattern<sp/>to<sp/>always<sp/>provide<sp/>VT<sp/>args<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rargs<sp/>=<sp/>&amp;vt_args;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rargs-&gt;push_back(c);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.passthru_args.push_back(c);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>must<sp/>be<sp/>accounted<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>app.allow_extras(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>string-vector<sp/>and<sp/>reverse<sp/>order<sp/>to<sp/>parse<sp/>(CLI<sp/>quirk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>args_to_parse,<sp/>yaml_input_arg;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>vt_args.crbegin();<sp/>it<sp/>!=<sp/>vt_args.crend();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1util_1_1demangle_1_1_demangler_utils_1a3c280c288503a3420483e6705cddf5fb" kindref="member">util::demangle::DemanglerUtils::splitString</ref>(*it,</highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;--vt_input_config_yaml&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yaml_input_arg.push_back(*it);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>args_to_parse.push_back(*it);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Identify<sp/>input<sp/>YAML<sp/>file<sp/>first,<sp/>if<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!yaml_input_arg.empty())<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>app.parse(yaml_input_arg);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(CLI::Error<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>exit<sp/>code<sp/>and<sp/>message,<sp/>delaying<sp/>logic<sp/>processing<sp/>of<sp/>such.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>exit<sp/>code<sp/>for<sp/>&apos;help&apos;<sp/>is<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>yaml_message_stream;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yaml_result<sp/>=<sp/>app.exit(ex,<sp/>yaml_message_stream,<sp/>yaml_message_stream);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(yaml_result,<sp/>yaml_message_stream.str());</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>the<sp/>YAML<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appConfig.vt_input_config_yaml<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>parseYaml(appConfig,<sp/>appConfig.vt_input_config_yaml);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>parse<sp/>the<sp/>remaining<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>app.parse(args_to_parse);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(CLI::Error<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>message_stream;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>app.exit(ex,<sp/>message_stream,<sp/>message_stream);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(result,<sp/>message_stream.str());</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>user<sp/>specified<sp/>to<sp/>output<sp/>the<sp/>full<sp/>configuration,<sp/>save<sp/>it<sp/>in<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>node<sp/>0<sp/>can<sp/>output<sp/>in<sp/>the<sp/>runtime<sp/>once<sp/>MPI<sp/>is<sp/>init&apos;ed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appConfig.vt_output_config)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>convertConfigToString(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>clean<sp/>prog<sp/>name;<sp/>don&apos;t<sp/>allow<sp/>path<sp/>bleed<sp/>in<sp/>usages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::filesystem<sp/>is<sp/>C++17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>std::string<sp/>clean_prog_name<sp/>=<sp/>argv[0];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>clean_prog_name.find_last_of(</highlight><highlight class="stringliteral">&quot;/\\&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>not_eq<sp/>std::string::npos<sp/>and<sp/>l<sp/>+<sp/>1<sp/>&lt;<sp/>clean_prog_name.size())<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>clean_prog_name<sp/>=<sp/>clean_prog_name.substr(l<sp/>+<sp/>1,<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>appConfig.prog_name<sp/>=<sp/>clean_prog_name;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>appConfig.argv_prog_name<sp/>=<sp/>argv[0];</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>postParseTransform(appConfig);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rebuild<sp/>passthru<sp/>into<sp/>ref-returned<sp/>argc/argv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>should<sp/>be<sp/>possible<sp/>to<sp/>modify<sp/>the<sp/>original<sp/>argv<sp/>as<sp/>the<sp/>outgoing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>arguments<sp/>is<sp/>always<sp/>less.<sp/>As<sp/>currently<sp/>allocated<sp/>here,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ownership<sp/>of<sp/>the<sp/>new<sp/>object<sp/>is<sp/>ill-defined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_argc<sp/>=<sp/>appConfig.passthru_args.size()<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>does<sp/>not<sp/>include<sp/>argv[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;char*[]&gt;<sp/>new_argv<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>new_argv<sp/>=<sp/>std::make_unique&lt;char*[]&gt;(new_argc<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>new_argv[i++]<sp/>=<sp/>appConfig.argv_prog_name;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>arg<sp/>:<sp/>appConfig.passthru_args)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>new_argv[i++]<sp/>=<sp/>arg;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>new_argv[i++]<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>them<sp/>back<sp/>with<sp/>all<sp/>vt<sp/>(and<sp/>MPI)<sp/>arguments<sp/>elided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>argc<sp/>=<sp/>new_argc;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>argv<sp/>=<sp/>new_argv.get();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(-1,<sp/>std::string{});</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addYamlArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>yaml_description<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>in<sp/>a<sp/>YAML<sp/>config<sp/>file<sp/>for<sp/>VT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_input_config_yaml&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_input_config_yaml,<sp/>yaml_description);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addUserOptionsFromYaml(<ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref>&amp;<sp/>inputYaml,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>user_options<sp/>=<sp/>inputYaml[</highlight><highlight class="stringliteral">&quot;User<sp/>Options&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bool_iter<sp/>=<sp/>1,<sp/>int_iter<sp/>=<sp/>1,<sp/>str_iter<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>too_many_user_args<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(YAML::const_iterator<sp/>it<sp/>=<sp/>user_options.begin();<sp/>it<sp/>!=<sp/>user_options.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>key<sp/>=<sp/>it-&gt;first.as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>user_input<sp/>=<sp/>user_options[key].as&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_iter<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_user_1<sp/>=<sp/>user_input;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_iter<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_user_2<sp/>=<sp/>user_input;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_iter<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_user_3<sp/>=<sp/>user_input;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>too_many_user_args<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>user_args_labels[</highlight><highlight class="stringliteral">&quot;vt_user_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(bool_iter)]<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bool_iter++;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YAML::RepresentationException&amp;)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>user_input<sp/>=<sp/>user_options[key].as&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(int_iter<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_user_int_1<sp/>=<sp/>user_input;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(int_iter<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_user_int_2<sp/>=<sp/>user_input;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(int_iter<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_user_int_3<sp/>=<sp/>user_input;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>too_many_user_args<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_args_labels[</highlight><highlight class="stringliteral">&quot;vt_user_int_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(int_iter)]<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_iter++;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YAML::RepresentationException&amp;)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>user_input<sp/>=<sp/>user_options[key].as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_iter<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_user_str_1<sp/>=<sp/>user_input;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_iter<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_user_str_2<sp/>=<sp/>user_input;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_iter<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_user_str_3<sp/>=<sp/>user_input;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>too_many_user_args<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_args_labels[</highlight><highlight class="stringliteral">&quot;vt_user_str_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(str_iter)]<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_iter++;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><ref refid="hard__error_8h_1a899f856bd95d2b3990d90d0835b6f191" kindref="member">vtAbortIf</ref>(too_many_user_args,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>three<sp/>user-defined<sp/>arguments<sp/>of<sp/>each<sp/>type<sp/>(bool,<sp/>int,<sp/>or<sp/>string)<sp/>are<sp/>supported.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parseYaml(AppConfig&amp;<sp/>appConfig,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>inputFile)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>config<sp/>value<sp/>from<sp/>YAML<sp/>using<sp/>default<sp/>(current)<sp/>value<sp/>as<sp/>fallback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>update_config<sp/>=<sp/>[](</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>config_entry,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>label,<sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>config_type<sp/>=<sp/>std::remove_reference_t&lt;decltype(config_entry)&gt;;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>config_entry<sp/>=<sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref>[label].as&lt;config_type&gt;(config_entry);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>in<sp/>the<sp/>YAML<sp/>configuration<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>yaml_input<sp/>=<sp/>YAML::LoadFile(inputFile);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>output_control<sp/>=<sp/>yaml_input[</highlight><highlight class="stringliteral">&quot;Output<sp/>Control&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_color,<sp/>vt_color_label,<sp/>output_control);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_no_color,<sp/>vt_no_color_label,<sp/>output_control);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_quiet,<sp/>vt_quiet_label,<sp/>output_control);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Signal<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>signal_handling<sp/>=<sp/>yaml_input[</highlight><highlight class="stringliteral">&quot;Signal<sp/>Handling&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_no_sigint,<sp/>vt_no_sigint_label,<sp/>signal_handling);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_no_sigsegv,<sp/>vt_no_sigsegv_label,<sp/>signal_handling);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_no_sigbus,<sp/>vt_no_sigbus_label,<sp/>signal_handling);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_no_terminate,<sp/>vt_no_terminate_label,<sp/>signal_handling);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Memory<sp/>Usage<sp/>Reporting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>memory_usage_reporting<sp/>=<sp/>yaml_input[</highlight><highlight class="stringliteral">&quot;Memory<sp/>Usage<sp/>Reporting&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>std::string<sp/>default_vt_memory_reporters<sp/>=</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>(vt_feature_mimalloc<sp/>!=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;mimalloc,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;mstats,machinfo,selfstat,selfstatm,sbrk,mallinfo,getrusage,ps&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_memory_reporters,<sp/>vt_memory_reporters_label,<sp/>memory_usage_reporting);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_print_memory_each_phase,<sp/>vt_print_memory_each_phase_label,<sp/>memory_usage_reporting);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_print_memory_node,<sp/>vt_print_memory_node_label,<sp/>memory_usage_reporting);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_allow_memory_report_with_ps,<sp/>vt_allow_memory_report_with_ps_label,<sp/>memory_usage_reporting);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memory_usage_reporting[vt_print_memory_threshold_label])<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>appConfig.vt_print_memory_at_threshold<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>update_config(appConfig.vt_print_memory_threshold,<sp/>vt_print_memory_threshold_label,<sp/>memory_usage_reporting);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>appConfig.vt_print_memory_at_threshold<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_print_memory_sched_poll,<sp/>vt_print_memory_sched_poll_label,<sp/>memory_usage_reporting);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_print_memory_footprint,<sp/>vt_print_memory_footprint_label,<sp/>memory_usage_reporting);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>Stack<sp/>Backtrace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>dump_stack_backtrace<sp/>=<sp/>yaml_input[</highlight><highlight class="stringliteral">&quot;Dump<sp/>Stack<sp/>Backtrace&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_no_warn_stack,<sp/>vt_no_warn_stack_label,<sp/>dump_stack_backtrace);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_no_assert_stack,<sp/>vt_no_assert_stack_label,<sp/>dump_stack_backtrace);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_no_abort_stack,<sp/>vt_no_abort_stack_label,<sp/>dump_stack_backtrace);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_no_stack,<sp/>vt_no_stack_label,<sp/>dump_stack_backtrace);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_stack_file,<sp/>vt_stack_file_label,<sp/>dump_stack_backtrace);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_stack_dir,<sp/>vt_stack_dir_label,<sp/>dump_stack_backtrace);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_stack_mod,<sp/>vt_stack_mod_label,<sp/>dump_stack_backtrace);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tracing<sp/>Configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>tracing_configuration<sp/>=<sp/>yaml_input[</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace,<sp/>vt_trace_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>appConfig.vt_trace_mpi<sp/>=<sp/>tracing_configuration[vt_trace_mpi_label].as&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).find(</highlight><highlight class="stringliteral">&quot;internal&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>appConfig.vt_trace_pmpi<sp/>=<sp/>tracing_configuration[vt_trace_pmpi_label].as&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).find(</highlight><highlight class="stringliteral">&quot;external&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_file,<sp/>vt_trace_file_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_dir,<sp/>vt_trace_dir_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_mod,<sp/>vt_trace_mod_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_flush_size,<sp/>vt_trace_flush_size_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_gzip_finish_flush,<sp/>vt_trace_gzip_finish_flush_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_sys_all,<sp/>vt_trace_sys_all_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_sys_term,<sp/>vt_trace_sys_term_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_sys_location,<sp/>vt_trace_sys_location_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_sys_collection,<sp/>vt_trace_sys_collection_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_sys_serial_msg,<sp/>vt_trace_sys_serial_msg_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_spec,<sp/>vt_trace_spec_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_spec_file,<sp/>vt_trace_spec_file_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_memory_usage,<sp/>vt_trace_memory_usage_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_event_polling,<sp/>vt_trace_event_polling_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_trace_irecv_polling,<sp/>vt_trace_irecv_polling_label,<sp/>tracing_configuration);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Debug<sp/>Print<sp/>Configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>debug_print_configuration<sp/>=<sp/>yaml_input[</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_debug_level,<sp/>vt_debug_level_label,<sp/>debug_print_configuration);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_debug_all,<sp/>vt_debug_all_label,<sp/>debug_print_configuration);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_debug_none,<sp/>vt_debug_none_label,<sp/>debug_print_configuration);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>debug_enables;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_print_configuration[</highlight><highlight class="stringliteral">&quot;Enable&quot;</highlight><highlight class="normal">])<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_enables<sp/>=<sp/>debug_print_configuration[</highlight><highlight class="stringliteral">&quot;Enable&quot;</highlight><highlight class="normal">].as&lt;std::vector&lt;std::string&gt;&gt;();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>vt_debug_<sp/>categories<sp/>are<sp/>false<sp/>by<sp/>default<sp/>(no<sp/>need<sp/>to<sp/>check<sp/>current<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_debug_enabled<sp/>=<sp/>[&amp;debug_enables](<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>debug_type)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::find(debug_enables.begin(),<sp/>debug_enables.end(),<sp/>debug_type)<sp/>!=<sp/>debug_enables.end();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_gen<sp/>=<sp/>is_debug_enabled(vt_debug_gen_label);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_runtime<sp/>=<sp/>is_debug_enabled(vt_debug_runtime_label);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_active<sp/>=<sp/>is_debug_enabled(vt_debug_active_label);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_term<sp/>=<sp/>is_debug_enabled(vt_debug_term_label);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_termds<sp/>=<sp/>is_debug_enabled(vt_debug_termds_label);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_barrier<sp/>=<sp/>is_debug_enabled(vt_debug_barrier_label);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_event<sp/>=<sp/>is_debug_enabled(vt_debug_event_label);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_pipe<sp/>=<sp/>is_debug_enabled(vt_debug_pipe_label);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_pool<sp/>=<sp/>is_debug_enabled(vt_debug_pool_label);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_reduce<sp/>=<sp/>is_debug_enabled(vt_debug_reduce_label);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_rdma<sp/>=<sp/>is_debug_enabled(vt_debug_rdma_label);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_rdma_channel<sp/>=<sp/>is_debug_enabled(vt_debug_rdma_channel_label);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_rdma_state<sp/>=<sp/>is_debug_enabled(vt_debug_rdma_state_label);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_handler<sp/>=<sp/>is_debug_enabled(vt_debug_handler_label);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_hierlb<sp/>=<sp/>is_debug_enabled(vt_debug_hierlb_label);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_temperedlb<sp/>=<sp/>is_debug_enabled(vt_debug_temperedlb_label);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_temperedwmin<sp/>=<sp/>is_debug_enabled(vt_debug_temperedwmin_label);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_scatter<sp/>=<sp/>is_debug_enabled(vt_debug_scatter_label);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_serial_msg<sp/>=<sp/>is_debug_enabled(vt_debug_serial_msg_label);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_trace<sp/>=<sp/>is_debug_enabled(vt_debug_trace_label);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_location<sp/>=<sp/>is_debug_enabled(vt_debug_location_label);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_lb<sp/>=<sp/>is_debug_enabled(vt_debug_lb_label);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_vrt<sp/>=<sp/>is_debug_enabled(vt_debug_vrt_label);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_vrt_coll<sp/>=<sp/>is_debug_enabled(vt_debug_vrt_coll_label);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_worker<sp/>=<sp/>is_debug_enabled(vt_debug_worker_label);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_group<sp/>=<sp/>is_debug_enabled(vt_debug_group_label);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_broadcast<sp/>=<sp/>is_debug_enabled(vt_debug_broadcast_label);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_objgroup<sp/>=<sp/>is_debug_enabled(vt_debug_objgroup_label);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_phase<sp/>=<sp/>is_debug_enabled(vt_debug_phase_label);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_context<sp/>=<sp/>is_debug_enabled(vt_debug_context_label);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>appConfig.vt_debug_epoch<sp/>=<sp/>is_debug_enabled(vt_debug_epoch_label);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_debug_print_flush,<sp/>vt_debug_print_flush_label,<sp/>debug_print_configuration);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_debug_replay,<sp/>vt_debug_replay_label,<sp/>debug_print_configuration);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>Balancing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>load_balancing<sp/>=<sp/>yaml_input[</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb,<sp/>vt_lb_label,<sp/>load_balancing);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_quiet,<sp/>vt_lb_quiet_label,<sp/>load_balancing);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_file_name,<sp/>vt_lb_file_name_label,<sp/>load_balancing);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_show_config,<sp/>vt_lb_show_config_label,<sp/>load_balancing);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_name,<sp/>vt_lb_name_label,<sp/>load_balancing);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_args,<sp/>vt_lb_args_label,<sp/>load_balancing);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_interval,<sp/>vt_lb_interval_label,<sp/>load_balancing);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_keep_last_elm,<sp/>vt_lb_keep_last_elm_label,<sp/>load_balancing);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_self_migration,<sp/>vt_lb_self_migration_label,<sp/>load_balancing);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_spec,<sp/>vt_lb_spec_label,<sp/>load_balancing);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_spec_file,<sp/>vt_lb_spec_file_label,<sp/>load_balancing);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>lb_output<sp/>=<sp/>load_balancing[</highlight><highlight class="stringliteral">&quot;LB<sp/>Data<sp/>Output&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_data,<sp/>vt_lb_data_label,<sp/>lb_output);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_data_dir,<sp/>vt_lb_data_dir_label,<sp/>lb_output);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_data_file,<sp/>vt_lb_data_file_label,<sp/>lb_output);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>lb_input<sp/>=<sp/>load_balancing[</highlight><highlight class="stringliteral">&quot;LB<sp/>Data<sp/>Input&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_data_in,<sp/>vt_lb_data_in_label,<sp/>lb_input);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_data_compress,<sp/>vt_lb_data_compress_label,<sp/>lb_input);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_data_dir_in,<sp/>vt_lb_data_dir_in_label,<sp/>lb_input);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_data_file_in,<sp/>vt_lb_data_file_in_label,<sp/>lb_input);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>lb_stats<sp/>=<sp/>load_balancing[</highlight><highlight class="stringliteral">&quot;LB<sp/>Statistics&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_statistics,<sp/>vt_lb_statistics_label,<sp/>lb_stats);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_statistics_compress,<sp/>vt_lb_statistics_compress_label,<sp/>lb_stats);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_statistics_file,<sp/>vt_lb_statistics_file_label,<sp/>lb_stats);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_lb_statistics_dir,<sp/>vt_lb_statistics_dir_label,<sp/>lb_stats);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Diagnostics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>diagnostics<sp/>=<sp/>yaml_input[</highlight><highlight class="stringliteral">&quot;Diagnostics&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_diag_enable,<sp/>vt_diag_enable_label,<sp/>diagnostics);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_diag_print_summary,<sp/>vt_diag_print_summary_label,<sp/>diagnostics);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_diag_summary_file,<sp/>vt_diag_summary_file_label,<sp/>diagnostics);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_diag_summary_csv_file,<sp/>vt_diag_summary_csv_file_label,<sp/>diagnostics);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_diag_csv_base_units,<sp/>vt_diag_csv_base_units_label,<sp/>diagnostics);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Termination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>termination<sp/>=<sp/>yaml_input[</highlight><highlight class="stringliteral">&quot;Termination&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_no_detect_hang,<sp/>vt_no_detect_hang_label,<sp/>termination);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_term_rooted_use_ds,<sp/>vt_term_rooted_use_ds_label,<sp/>termination);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_term_rooted_use_wave,<sp/>vt_term_rooted_use_wave_label,<sp/>termination);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_epoch_graph_on_hang,<sp/>vt_epoch_graph_on_hang_label,<sp/>termination);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_epoch_graph_terse,<sp/>vt_epoch_graph_terse_label,<sp/>termination);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_print_no_progress,<sp/>vt_print_no_progress_label,<sp/>termination);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_hang_freq,<sp/>vt_hang_freq_label,<sp/>termination);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Debugging/Launch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>launch<sp/>=<sp/>yaml_input[</highlight><highlight class="stringliteral">&quot;Launch&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_pause,<sp/>vt_pause_label,<sp/>launch);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>Options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>addUserOptionsFromYaml(yaml_input,<sp/>appConfig);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Scheduler<sp/>Configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>scheduler_configuration<sp/>=<sp/>yaml_input[</highlight><highlight class="stringliteral">&quot;Scheduler<sp/>Configuration&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_sched_num_progress,<sp/>vt_sched_num_progress_label,<sp/>scheduler_configuration);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_sched_progress_han,<sp/>vt_sched_progress_han_label,<sp/>scheduler_configuration);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_sched_progress_sec,<sp/>vt_sched_progress_sec_label,<sp/>scheduler_configuration);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configuration<sp/>File</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>configuration_file<sp/>=<sp/>yaml_input[</highlight><highlight class="stringliteral">&quot;Configuration<sp/>File&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_output_config,<sp/>vt_output_config_label,<sp/>configuration_file);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_output_config_file,<sp/>vt_output_config_file_label,<sp/>configuration_file);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Runtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689afdcadb44dd13617f18aba8d42a257967" kindref="member">runtime</ref><sp/>=<sp/>yaml_input[</highlight><highlight class="stringliteral">&quot;Runtime&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_max_mpi_send_size,<sp/>vt_max_mpi_send_size_label,<sp/>runtime);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_no_assert_fail,<sp/>vt_no_assert_fail_label,<sp/>runtime);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>update_config(appConfig.vt_throw_on_abort,<sp/>vt_throw_on_abort_label,<sp/>runtime);</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addColorArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>quiet<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Quiet<sp/>the<sp/>output<sp/>from<sp/>vt<sp/>(only<sp/>errors,<sp/>warnings)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>always<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Colorize<sp/>output<sp/>(default)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>never<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>colorize<sp/>output<sp/>(overrides<sp/>--vt_color)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a<sp/><sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_color&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>appConfig.vt_color,<sp/><sp/><sp/><sp/><sp/><sp/>always);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b<sp/><sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_no_color&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_no_color,<sp/><sp/><sp/>never);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_quiet&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>appConfig.vt_quiet,<sp/><sp/><sp/><sp/><sp/><sp/>quiet);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputGroup<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>Control&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>a-&gt;group(outputGroup);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>b-&gt;group(outputGroup);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>a1-&gt;group(outputGroup);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>exclude<sp/>&apos;a&apos;<sp/>from<sp/>&apos;b&apos;<sp/>here<sp/>because<sp/>when<sp/>inputting/outputting<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>config,<sp/>both<sp/>will<sp/>be<sp/>written<sp/>out<sp/>causing<sp/>an<sp/>error<sp/>when<sp/>reading<sp/>a<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>file<sp/>with<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>b-&gt;excludes(a);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addSignalArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>no_sigint<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>register<sp/>signal<sp/>handler<sp/>for<sp/>SIGINT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>no_sigsegv<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>register<sp/>signal<sp/>handler<sp/>for<sp/>SIGSEGV&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>no_sigbus<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>register<sp/>signal<sp/>handler<sp/>for<sp/>SIGBUS&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>no_terminate<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>register<sp/>handler<sp/>for<sp/>std::terminate&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_no_SIGINT&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>appConfig.vt_no_sigint,<sp/><sp/><sp/><sp/>no_sigint);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_no_SIGSEGV&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>appConfig.vt_no_sigsegv,<sp/><sp/><sp/>no_sigsegv);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_no_SIGBUS&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>appConfig.vt_no_sigbus,<sp/><sp/><sp/><sp/>no_sigbus);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_no_terminate&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_no_terminate,<sp/>no_terminate);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>signalGroup<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Signal<sp/>Handling&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>d-&gt;group(signalGroup);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>e-&gt;group(signalGroup);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>f-&gt;group(signalGroup);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>g-&gt;group(signalGroup);</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addMemUsageArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Flags<sp/>for<sp/>controlling<sp/>memory<sp/>usage<sp/>reporting</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mem_desc<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;List<sp/>of<sp/>memory<sp/>reporters<sp/>to<sp/>query<sp/>in<sp/>order<sp/>of<sp/>precedence&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mem_phase<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>memory<sp/>usage<sp/>each<sp/>new<sp/>phase&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mem_node<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Node<sp/>to<sp/>print<sp/>memory<sp/>usage<sp/>from<sp/>or<sp/>\&quot;all\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mem_ps<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>memory<sp/>reporting<sp/>with<sp/>PS<sp/>(warning:<sp/>forking<sp/>to<sp/>query<sp/>&apos;ps&apos;<sp/>may<sp/>not<sp/>be<sp/>scalable)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mem_at_thresh<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>memory<sp/>usage<sp/>from<sp/>scheduler<sp/>when<sp/>reaches<sp/>a<sp/>threshold<sp/>increment&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mem_thresh<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>threshold<sp/>increments<sp/>to<sp/>print<sp/>memory<sp/>usage:<sp/>\&quot;&lt;value&gt;<sp/>{GiB,MiB,KiB,B}\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mem_sched<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>frequency<sp/>to<sp/>query<sp/>the<sp/>memory<sp/>threshold<sp/>check<sp/>(some<sp/>memory<sp/>reporters<sp/>might<sp/>be<sp/>expensive)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mem_footprint<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>live<sp/>components&apos;<sp/>memory<sp/>footprint<sp/>after<sp/>initialization<sp/>and<sp/>before<sp/>shutdown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mm<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_memory_reporters&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_memory_reporters,<sp/>mem_desc)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mn<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_print_memory_each_phase&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>appConfig.vt_print_memory_each_phase,<sp/>mem_phase);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mo<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_print_memory_node&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_print_memory_node,<sp/>mem_node)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mp<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_allow_memory_report_with_ps&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_allow_memory_report_with_ps,<sp/>mem_ps);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mq<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_print_memory_at_threshold&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>appConfig.vt_print_memory_at_threshold,<sp/>mem_at_thresh);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mr<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_print_memory_threshold&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>appConfig.vt_print_memory_threshold,<sp/>mem_thresh)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ms<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_print_memory_sched_poll&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>appConfig.vt_print_memory_sched_poll,<sp/>mem_sched)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mf<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_print_memory_footprint&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_print_memory_footprint,<sp/>mem_footprint);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>memoryGroup<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>Usage<sp/>Reporting&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>mm-&gt;group(memoryGroup);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>mn-&gt;group(memoryGroup);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>mo-&gt;group(memoryGroup);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>mp-&gt;group(memoryGroup);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>mq-&gt;group(memoryGroup);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>mr-&gt;group(memoryGroup);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>ms-&gt;group(memoryGroup);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>mf-&gt;group(memoryGroup);</highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addStackDumpArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Flags<sp/>to<sp/>control<sp/>stack<sp/>dumping</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stack<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>dump<sp/>stack<sp/>traces&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>warn<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>dump<sp/>stack<sp/>traces<sp/>when<sp/>vtWarn(..)<sp/>is<sp/>invoked&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>assert<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>dump<sp/>stack<sp/>traces<sp/>when<sp/>vtAssert(..)<sp/>is<sp/>invoked&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1ad36ca8eb7e5b9cc794a793b290b9c2c7" kindref="member">abort</ref><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>dump<sp/>stack<sp/>traces<sp/>when<sp/>vtAbort(..)<sp/>is<sp/>invoked&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>file<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Dump<sp/>stack<sp/>traces<sp/>to<sp/>file<sp/>instead<sp/>of<sp/>stdout&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dir<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Name<sp/>of<sp/>directory<sp/>to<sp/>write<sp/>stack<sp/>files&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mod<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Write<sp/>stack<sp/>dump<sp/>if<sp/>(node<sp/>%<sp/>config_.vt_stack_mod)<sp/>==<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_no_warn_stack&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>appConfig.vt_no_warn_stack,<sp/><sp/><sp/>warn);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_no_assert_stack&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_no_assert_stack,<sp/>assert);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_no_abort_stack&quot;</highlight><highlight class="normal">,<sp/><sp/>appConfig.vt_no_abort_stack,<sp/><sp/><ref refid="namespacevt_1ad36ca8eb7e5b9cc794a793b290b9c2c7" kindref="member">abort</ref>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_no_stack&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_no_stack,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_stack_file&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>appConfig.vt_stack_file,<sp/><sp/><sp/><sp/><sp/><sp/>file)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_stack_dir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>appConfig.vt_stack_dir,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_stack_mod&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>appConfig.vt_stack_mod,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stackGroup<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Dump<sp/>Stack<sp/>Backtrace&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>g-&gt;group(stackGroup);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>h-&gt;group(stackGroup);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>i-&gt;group(stackGroup);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>j-&gt;group(stackGroup);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>k-&gt;group(stackGroup);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>l-&gt;group(stackGroup);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>m-&gt;group(stackGroup);</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addTraceArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Flags<sp/>to<sp/>control<sp/>tracing<sp/>output</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aa14cb3132cde2e74239755b4c3944f43" kindref="member">trace</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>tracing<sp/>(must<sp/>be<sp/>compiled<sp/>with<sp/>trace_enabled)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>trace_mpi<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>tracing<sp/>of<sp/>MPI<sp/>calls&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(must<sp/>be<sp/>compiled<sp/>with<sp/>trace_enabled)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tfile<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Name<sp/>of<sp/>trace<sp/>files&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tdir<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Name<sp/>of<sp/>directory<sp/>for<sp/>trace<sp/>files&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmod<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>trace<sp/>file<sp/>if<sp/>(node<sp/>%<sp/>config_.vt_stack_mod)<sp/>==<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>zflush<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>flush<sp/>mode<sp/>to<sp/>Z_FINISH<sp/>for<sp/>trace<sp/>file&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tflushmod<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Flush<sp/>output<sp/>trace<sp/>every<sp/>(vt_trace_flush_size)<sp/>trace<sp/>records&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tsysall<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Trace<sp/>all<sp/>system<sp/>events&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tsysTD<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Trace<sp/>system<sp/>termination<sp/>events&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tsysloc<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Trace<sp/>system<sp/>location<sp/>manager<sp/>events&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tsyscoll<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Trace<sp/>system<sp/>virtual<sp/>context<sp/>collection<sp/>events&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tsyssmsg<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Trace<sp/>system<sp/>serialization<sp/>manager<sp/>events&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tspec<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>trace<sp/>spec<sp/>file<sp/>(defines<sp/>which<sp/>phases<sp/>tracing<sp/>is<sp/>on)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tspecfile<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>containing<sp/>trace<sp/>spec;<sp/>--vt_trace_spec<sp/>to<sp/>enable&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmemusage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Trace<sp/>memory<sp/>usage<sp/>using<sp/>first<sp/>memory<sp/>reporter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tpolled<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Trace<sp/>AsyncEvent<sp/>component<sp/>polling<sp/>(inc.<sp/>MPI_Isend<sp/>requests)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tirecv<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Trace<sp/>MPI_Irecv<sp/>request<sp/>polling&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n<sp/><sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_trace&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_trace,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aa14cb3132cde2e74239755b4c3944f43" kindref="member">trace</ref>);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nm<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_trace_mpi&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_trace_mpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trace_mpi)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;check(CLI::IsMember({</highlight><highlight class="stringliteral">&quot;internal&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;external&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>o<sp/><sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_trace_file&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_trace_file,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tfile)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/><sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_trace_dir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_trace_dir,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tdir)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>q<sp/><sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_trace_mod&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_trace_mod,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmod)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qf<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_trace_flush_size&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_trace_flush_size,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tflushmod)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qg<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_trace_gzip_finish_flush&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_trace_gzip_finish_flush,<sp/>zflush);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qt<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_trace_sys_all&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_trace_sys_all,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsysall);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qw<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_trace_sys_term&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_trace_sys_term,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsysTD);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qx<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_trace_sys_location&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_trace_sys_location,<sp/><sp/><sp/><sp/><sp/><sp/>tsysloc);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qy<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_trace_sys_collection&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>appConfig.vt_trace_sys_collection,<sp/><sp/><sp/><sp/>tsyscoll);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qz<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_trace_sys_serial_msg&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>appConfig.vt_trace_sys_serial_msg,<sp/><sp/><sp/><sp/>tsyssmsg);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qza<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_trace_spec&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_trace_spec,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tspec);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qzb<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_trace_spec_file&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_trace_spec_file,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tspecfile)-&gt;capture_default_str()-&gt;check(CLI::ExistingFile);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qzc<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_trace_memory_usage&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>appConfig.vt_trace_memory_usage,<sp/><sp/><sp/><sp/><sp/><sp/>tmemusage);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qzd<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_trace_event_polling&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>appConfig.vt_trace_event_polling,<sp/><sp/><sp/><sp/><sp/>tpolled);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qze<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_trace_irecv_polling&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>appConfig.vt_trace_irecv_polling,<sp/><sp/><sp/><sp/><sp/>tirecv);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>traceGroup<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>n-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>nm-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>o-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>p-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>q-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>qf-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>qg-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>qt-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>qw-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>qx-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>qy-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>qz-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>qza-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>qzb-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>qzc-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>qzd-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>qze-&gt;group(traceGroup);</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addDebugPrintArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>debug_pp(opt)<sp/>+std::string(config::PrettyPrintCat&lt;config::opt&gt;::str)+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>all<sp/>debug<sp/>prints&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rq<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>level<sp/>for<sp/>debug<sp/>prints<sp/>(0=&gt;terse,<sp/>1=&gt;normal,<sp/>2=&gt;verbose)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>aap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_none<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a58436a9330bb7d9e28934e496ce96bfe" kindref="member">none</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_gen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a5b2fa777115f03c6d550ec721c0a93a5" kindref="member">gen</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_runtime<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689afdcadb44dd13617f18aba8d42a257967" kindref="member">runtime</ref>)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_active<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a82f77c67af0c363709010c6df4dbd920" kindref="member">active</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_term<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a24e948133c50b54c4503570a8857e9b1" kindref="member">term</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_termds<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a090cc992096e116d6ea7768dbb803dcb" kindref="member">termds</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_barrier<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a39d4d58fa73c76f6cb97e6dc20e0d1c0" kindref="member">barrier</ref>)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_event<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a9e0b3f734ed730f6f3117f0687eda7df" kindref="member">event</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_pipe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ad2f6c4149417910966357969e4740fbd" kindref="member">pipe</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>jap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_pool<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_reduce<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689af558c370706b5e7bd8ba5224657ca9b4" kindref="member">reduce</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_rdma<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a0b97b5f0db04922b0839112e029ba677" kindref="member">rdma</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>map<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_rdma_channel<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a56136ec49b937c8b480d4ac7aa7c9d8c" kindref="member">rdma_channel</ref>)<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_rdma_state<sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689abc38a48dc63e4c35f280b2b682bc8045" kindref="member">rdma_state</ref>)<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_handler<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a82a0081a94d5c5dfd18b0b3f7eca64b7" kindref="member">handler</ref>)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_hierlb<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a130f5ad6dc3e35d09be7ee3581b07175" kindref="member">hierlb</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qbp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_temperedlb<sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a6ba74766ccbc695fecdcbdd771b64c2e" kindref="member">temperedlb</ref>)<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qcp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_temperedwmin<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a52846d453b8bd4300e17a373cdf0cbdd" kindref="member">temperedwmin</ref>)<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_scatter<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(scatter)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_serial_msg<sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a1a6250cbf239ae1424048d1e62f68d50" kindref="member">serial_msg</ref>)<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_trace<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aa14cb3132cde2e74239755b4c3944f43" kindref="member">trace</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_location<sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aa8d8501591ca3859c828489054b17640" kindref="member">location</ref>)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_lb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aecb25779c74e06cc3e6baf03ed8289ed" kindref="member">lb</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>yap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_vrt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a012d139c89a14e56a85f32fd82e7c7d3" kindref="member">vrt</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>zap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_vrt_coll<sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689af18e81338b06e3d1a52b8c095b87c325" kindref="member">vrt_coll</ref>)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>abp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_worker<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a24771d4179e70d6e207872dbca07e2ef" kindref="member">worker</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bbp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_group<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a132506d2b8e888d0a91ae4470d4197c1" kindref="member">group</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cbp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_broadcast<sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a96457a80e68a41a3c6283126efe6200e" kindref="member">broadcast</ref>)<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dbp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_objgroup<sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a338198b4d813c2e8d709e0015fc40d45" kindref="member">objgroup</ref>)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dcp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_phase<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ddp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_context<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a5dad3be974af03e75e234cb475c2cb20" kindref="member">context</ref>)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dep<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_epoch<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a05bdb92281360bcbfdf239ad3ccbde19" kindref="member">epoch</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dfp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>debug_replay<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/><ref refid="args_8cc_1a25c9c758f0b6e282a5677c46f8a843c1" kindref="member">debug_pp</ref>(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a308de223841fffddff9f71e1649956cf" kindref="member">replay</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r1<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_debug_level&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_level,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rq);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/><sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_all&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_all,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>aa<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_none&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_none,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aap);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ba<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_gen&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_gen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bap);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ca<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_runtime&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_runtime,<sp/><sp/><sp/><sp/><sp/><sp/>cap);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>da<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_active&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_active,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>dap);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ea<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_term&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_term,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eap);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fa<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_termds&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_termds,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>fap);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ga<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_barrier&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_barrier,<sp/><sp/><sp/><sp/><sp/><sp/>gap);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ha<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_event&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_event,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hap);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ia<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_pipe&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_pipe,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iap);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ja<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_pool&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_pool,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jap);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ka<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_reduce&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_reduce,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>kap);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>la<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_rdma&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_rdma,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lap);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ma<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_rdma_channel&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_debug_rdma_channel,<sp/>map);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>na<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_rdma_state&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>appConfig.vt_debug_rdma_state,<sp/><sp/><sp/>nap);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pa<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_handler&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_handler,<sp/><sp/><sp/><sp/><sp/><sp/>pap);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qa<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_hierlb&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_hierlb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>qap);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qb<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_temperedlb&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>appConfig.vt_debug_temperedlb,<sp/><sp/><sp/>qbp);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qc<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_temperedwmin&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_debug_temperedwmin,<sp/>qcp);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ra<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_scatter&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_scatter,<sp/><sp/><sp/><sp/><sp/><sp/>rap);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ua<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_serial_msg&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>appConfig.vt_debug_serial_msg,<sp/><sp/><sp/>uap);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>va<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_trace&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_trace,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vap);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wa<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_location&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_location,<sp/><sp/><sp/><sp/><sp/>wap);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xa<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_lb&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_lb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xap);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ya<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_vrt&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_vrt,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yap);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>za<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_vrt_coll&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_vrt_coll,<sp/><sp/><sp/><sp/><sp/>zap);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ab<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_worker&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_worker,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>abp);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bb<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_group&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_group,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbp);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_broadcast&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>appConfig.vt_debug_broadcast,<sp/><sp/><sp/><sp/>cbp);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>db<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_objgroup&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_objgroup,<sp/><sp/><sp/><sp/><sp/>dbp);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dc<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_phase&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_phase,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcp);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dd<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_context&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_context,<sp/><sp/><sp/><sp/><sp/><sp/>ddp);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>de<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_epoch&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_epoch,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dep);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>df<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_replay&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_debug_replay,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>dfp);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>debugGroup<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration<sp/>(must<sp/>be<sp/>compile-time<sp/>enabled)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>r-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>r1-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>aa-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>ba-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>ca-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>da-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>ea-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>fa-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>ga-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>ha-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>ia-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>ja-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>ka-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>la-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>ma-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>na-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>pa-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>qa-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>qb-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>qc-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>ra-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>ua-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>va-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>xa-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>wa-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>ya-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>za-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>ab-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>bb-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>cb-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>db-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>dc-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>dd-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>de-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>df-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dbq<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Always<sp/>flush<sp/>VT<sp/>runtime<sp/>prints&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eb<sp/><sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_debug_print_flush&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_debug_print_flush,<sp/>dbq);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>eb-&gt;group(debugGroup);</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addLbArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Flags<sp/>for<sp/>enabling<sp/>load<sp/>balancing<sp/>and<sp/>configuring<sp/>it</highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aecb25779c74e06cc3e6baf03ed8289ed" kindref="member">lb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>load<sp/>balancing&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_args<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Arguments<sp/>pass<sp/>to<sp/>LB:<sp/>\&quot;x=0<sp/>y=1\&quot;;<sp/>try<sp/>--vt_help_lb_args&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_quiet<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Silence<sp/>load<sp/>balancing<sp/>output&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_file_name<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;LB<sp/>config<sp/>file<sp/>to<sp/>read&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_show_config<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>LB<sp/>config<sp/>during<sp/>startup&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_name<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Name<sp/>of<sp/>the<sp/>load<sp/>balancer<sp/>to<sp/>use&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_interval<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>balancing<sp/>interval&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_keep_last_elm<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>migrate<sp/>last<sp/>element<sp/>in<sp/>collection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_data<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>load<sp/>balancing<sp/>data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_data_in<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>load<sp/>balancing<sp/>data<sp/>input&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_data_comp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Compress<sp/>load<sp/>balancing<sp/>data<sp/>output<sp/>with<sp/>brotli&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_data_dir<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>balancing<sp/>data<sp/>output<sp/>directory&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_data_file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>balancing<sp/>data<sp/>output<sp/>file<sp/>name&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_data_dir_in<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>balancing<sp/>data<sp/>input<sp/>directory&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_data_file_in<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>balancing<sp/>data<sp/>input<sp/>file<sp/>name&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_statistics<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Dump<sp/>load<sp/>balancing<sp/>statistics<sp/>to<sp/>file&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_statistics_comp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Compress<sp/>load<sp/>balancing<sp/>statistics<sp/>file<sp/>with<sp/>brotli&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_statistics_file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>balancing<sp/>statistics<sp/>output<sp/>file<sp/>name&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_statistics_dir<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>balancing<sp/>statistics<sp/>output<sp/>directory<sp/>name&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_self_migration<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Allow<sp/>load<sp/>balancer<sp/>to<sp/>migrate<sp/>objects<sp/>to<sp/>the<sp/>same<sp/>node&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_spec<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>LB<sp/>spec<sp/>file<sp/>(defines<sp/>which<sp/>phases<sp/>output<sp/>LB<sp/>data)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lb_spec_file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>containing<sp/>LB<sp/>spec;<sp/>--vt_lb_spec<sp/>to<sp/>enable&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/><sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_lb&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aecb25779c74e06cc3e6baf03ed8289ed" kindref="member">lb</ref>);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_lb_quiet&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_quiet,<sp/>lb_quiet);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u<sp/><sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_lb_file_name&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_file_name,<sp/>lb_file_name)-&gt;capture_default_str()-&gt;check(CLI::ExistingFile);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u1<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_lb_show_config&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_show_config,<sp/>lb_show_config);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/><sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_lb_name&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_name,<sp/>lb_name)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v1<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_lb_args&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_args,<sp/>lb_args)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>w<sp/><sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_lb_interval&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_interval,<sp/>lb_interval)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wl<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_lb_keep_last_elm&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_keep_last_elm,<sp/>lb_keep_last_elm);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ww<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_lb_data&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_data,<sp/>lb_data);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>za<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_lb_data_in&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_data_in,<sp/>lb_data_in);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xz<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_lb_data_compress&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_data_compress,<sp/>lb_data_comp);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wx<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_lb_data_dir&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_data_dir,<sp/>lb_data_dir)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wy<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_lb_data_file&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_data_file,<sp/>lb_data_file)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_lb_data_dir_in&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_data_dir_in,<sp/>lb_data_dir_in)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xy<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_lb_data_file_in&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_data_file_in,<sp/>lb_data_file_in)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>yx<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_lb_statistics&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_lb_statistics,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb_statistics);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_lb_statistics_compress&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_statistics_compress,<sp/>lb_statistics_comp);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>yz<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_lb_statistics_file&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>appConfig.vt_lb_statistics_file,<sp/><sp/><sp/><sp/><sp/>lb_statistics_file)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>zz<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_lb_statistics_dir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>appConfig.vt_lb_statistics_dir,<sp/><sp/><sp/><sp/><sp/><sp/>lb_statistics_dir)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lbasm<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_lb_self_migration&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>appConfig.vt_lb_self_migration,<sp/><sp/><sp/><sp/><sp/><sp/>lb_self_migration);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lbspec<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_lb_spec&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_lb_spec,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb_spec);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lbspecfile<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_lb_spec_file&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_lb_spec_file,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb_spec_file)-&gt;capture_default_str()-&gt;check(CLI::ExistingFile);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--vt_lb_name<sp/>excludes<sp/>--vt_lb_file_name,<sp/>and<sp/>vice<sp/>versa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>v-&gt;excludes(u);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>u-&gt;excludes(v);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>debugLB<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>s-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>t1-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>u-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>u1-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>v-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>v1-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>w-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>wl-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>ww-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>wx-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>za-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>wy-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>xx-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>xy-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>xz-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>yx-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>yy-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>yz-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>zz-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>lbasm-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>lbspec-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>lbspecfile-&gt;group(debugLB);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>help<sp/>options<sp/>deliberately<sp/>omitted<sp/>from<sp/>the<sp/>debugLB<sp/>group<sp/>above<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>they<sp/>appear<sp/>grouped<sp/>with<sp/>--vt_help<sp/>when<sp/>--vt_help<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>help_lb_args<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>help<sp/>for<sp/>--vt_lb_args&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>h1<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_help_lb_args&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_help_lb_args,<sp/>help_lb_args);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>(void)<sp/>h1;</highlight></codeline>
<codeline lineno="972"><highlight class="normal">}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addDiagnosticArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="976"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Flags<sp/>for<sp/>controlling<sp/>diagnostic<sp/>collection<sp/>and<sp/>output</highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>diag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>diagnostic<sp/>(performance<sp/>metrics/stats)<sp/>collection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febea1d623b89683f9ce4e074de1676d12416" kindref="member">sum</ref><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>diagnostic<sp/>summary<sp/>table<sp/>to<sp/>stdout<sp/>at<sp/>finalization&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>diagnostic<sp/>summary<sp/>table<sp/>to<sp/>text<sp/>file&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>csv<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>diagnostic<sp/>summary<sp/>table<sp/>to<sp/>a<sp/>comma-separated<sp/>file&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>base<sp/>units<sp/>(seconds,<sp/>units,<sp/>etc.)<sp/>for<sp/>CSV<sp/>file<sp/>output&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_diag_enable,!--vt_diag_disable&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_diag_enable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diag);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_diag_print_summary&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_diag_print_summary,<sp/><sp/><sp/><sp/>sum);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_diag_summary_file&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_diag_summary_file,<sp/><sp/><sp/><sp/><sp/>file);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_diag_summary_csv_file&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_diag_summary_csv_file,<sp/>csv);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_diag_csv_base_units&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_diag_csv_base_units,<sp/><sp/><sp/>base);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>diagnosticGroup<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Diagnostics&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>a-&gt;group(diagnosticGroup);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>b-&gt;group(diagnosticGroup);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>c-&gt;group(diagnosticGroup);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>d-&gt;group(diagnosticGroup);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>e-&gt;group(diagnosticGroup);</highlight></codeline>
<codeline lineno="995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addTerminationArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hang<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Disable<sp/>termination<sp/>hang<sp/>detection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hang_freq<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>number<sp/>of<sp/>tree<sp/>traversals<sp/>before<sp/>a<sp/>hang<sp/>is<sp/>detected&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ds<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Force<sp/>use<sp/>of<sp/>Dijkstra-Scholten<sp/>(DS)<sp/>algorithm<sp/>for<sp/>rooted<sp/>epoch<sp/>termination<sp/>detection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wave<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Force<sp/>use<sp/>of<sp/>4-counter<sp/>algorithm<sp/>for<sp/>rooted<sp/>epoch<sp/>termination<sp/>detection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graph_on<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>epoch<sp/>graph<sp/>to<sp/>file<sp/>(DOT)<sp/>when<sp/>hang<sp/>is<sp/>detected&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0ada56a0a2b6334204a249f398bdf1c794" kindref="member">terse</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>epoch<sp/>graph<sp/>to<sp/>file<sp/>in<sp/>terse<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>progress<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>termination<sp/>counts<sp/>when<sp/>progress<sp/>is<sp/>stalled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/><sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_no_detect_hang&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_no_detect_hang,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hang);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_term_rooted_use_ds&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>appConfig.vt_term_rooted_use_ds,<sp/><sp/><sp/>ds);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_term_rooted_use_wave&quot;</highlight><highlight class="normal">,<sp/><sp/>appConfig.vt_term_rooted_use_wave,<sp/>wave);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x3<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_epoch_graph_on_hang&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_epoch_graph_on_hang,<sp/><sp/>graph_on)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x4<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_epoch_graph_terse&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>appConfig.vt_epoch_graph_terse,<sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0ada56a0a2b6334204a249f398bdf1c794" kindref="member">terse</ref>);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x5<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_print_no_progress&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>appConfig.vt_print_no_progress,<sp/><sp/><sp/><sp/>progress)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_hang_freq&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_hang_freq,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hang_freq)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>debugTerm<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Termination&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>x-&gt;group(debugTerm);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/>x1-&gt;group(debugTerm);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>x2-&gt;group(debugTerm);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/>x3-&gt;group(debugTerm);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>x4-&gt;group(debugTerm);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>x5-&gt;group(debugTerm);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>y-&gt;group(debugTerm);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addDebuggerArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pause<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Pause<sp/>at<sp/>startup<sp/>so<sp/>GDB/LLDB<sp/>can<sp/>be<sp/>attached&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_pause&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_pause,<sp/>pause);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>launchTerm<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Debugging/Launch&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>z-&gt;group(launchTerm);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addUserArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>user1<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>Option<sp/>1a<sp/>(boolean)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>user2<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>Option<sp/>2a<sp/>(boolean)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>user3<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>Option<sp/>3a<sp/>(boolean)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>userint1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>Option<sp/>1b<sp/>(int32_t)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>userint2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>Option<sp/>2b<sp/>(int32_t)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>userint3<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>Option<sp/>3b<sp/>(int32_t)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>userstr1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>Option<sp/>1c<sp/>(std::string)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>userstr2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>Option<sp/>2c<sp/>(std::string)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>userstr3<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>Option<sp/>3c<sp/>(std::string)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u1<sp/><sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_user_1&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_user_1,<sp/>user1);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u2<sp/><sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_user_2&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_user_2,<sp/>user2);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u3<sp/><sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_user_3&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_user_3,<sp/>user3);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ui1<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_user_int_1&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_user_int_1,<sp/>userint1)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ui2<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_user_int_2&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_user_int_2,<sp/>userint2)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ui3<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_user_int_3&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_user_int_3,<sp/>userint3)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>us1<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_user_str_1&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_user_str_1,<sp/>userstr1)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>us2<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_user_str_2&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_user_str_2,<sp/>userstr2)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>us3<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_user_str_3&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_user_str_3,<sp/>userstr3)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>userOpts<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>Options&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/>u1-&gt;group(userOpts);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>u2-&gt;group(userOpts);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>u3-&gt;group(userOpts);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>ui1-&gt;group(userOpts);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>ui2-&gt;group(userOpts);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>ui3-&gt;group(userOpts);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>us1-&gt;group(userOpts);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>us2-&gt;group(userOpts);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>us3-&gt;group(userOpts);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addSchedulerArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nsched<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>times<sp/>to<sp/>run<sp/>the<sp/>progress<sp/>function<sp/>in<sp/>scheduler&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ksched<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Run<sp/>the<sp/>MPI<sp/>progress<sp/>function<sp/>at<sp/>least<sp/>every<sp/>k<sp/>handlers<sp/>that<sp/>run&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ssched<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Run<sp/>the<sp/>MPI<sp/>progress<sp/>function<sp/>at<sp/>least<sp/>every<sp/>s<sp/>seconds&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sca<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_sched_num_progress&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_sched_num_progress,<sp/>nsched)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hca<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_sched_progress_han&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_sched_progress_han,<sp/>ksched)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kca<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_sched_progress_sec&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_sched_progress_sec,<sp/>ssched)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>schedulerGroup<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Scheduler<sp/>Configuration&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>sca-&gt;group(schedulerGroup);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/>hca-&gt;group(schedulerGroup);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>kca-&gt;group(schedulerGroup);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addConfigFileArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doconfig<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>all<sp/>VT<sp/>args<sp/>to<sp/>configuration<sp/>file&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>configname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Name<sp/>of<sp/>configuration<sp/>file<sp/>to<sp/>output&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>app.add_flag(</highlight><highlight class="stringliteral">&quot;--vt_output_config&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appConfig.vt_output_config,<sp/>doconfig);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a2<sp/>=<sp/>app.add_option(</highlight><highlight class="stringliteral">&quot;--vt_output_config_file&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_output_config_file,<sp/>configname)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>configGroup<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Configuration<sp/>File&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>a1-&gt;group(configGroup);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/>a2-&gt;group(configGroup);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addRuntimeArgs(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>max_size<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>MPI<sp/>send<sp/>size<sp/>(causes<sp/>larger<sp/>messages<sp/>to<sp/>be<sp/>split<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;into<sp/>multiple<sp/>MPI<sp/>sends)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>assert<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>abort<sp/>the<sp/>program<sp/>when<sp/>vtAssert(..)<sp/>is<sp/>invoked&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>throw_on_abort<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Throw<sp/>an<sp/>exception<sp/>when<sp/>vtAbort(..)<sp/>is<sp/>called&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>app.add_option(</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--vt_max_mpi_send_size&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_max_mpi_send_size,<sp/>max_size</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a2<sp/>=<sp/>app.add_flag(</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--vt_no_assert_fail&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_no_assert_fail,<sp/>assert</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a3<sp/>=<sp/>app.add_flag(</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--vt_throw_on_abort&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_throw_on_abort,<sp/>throw_on_abort</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>configRuntime<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Runtime&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>a1-&gt;group(configRuntime);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>a2-&gt;group(configRuntime);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>a3-&gt;group(configRuntime);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addThreadingArgs(</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>[[maybe_unused]]<sp/>CLI::App&amp;<sp/>app,</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>[[maybe_unused]]<sp/>AppConfig&amp;<sp/>appConfig</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(vt_feature_fcontext<sp/>!=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ult_disable<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Disable<sp/>running<sp/>handlers<sp/>in<sp/>user-level<sp/>threads&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stack_size<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>default<sp/>stack<sp/>size<sp/>for<sp/>user-level<sp/>threads&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>app.add_flag(</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--vt_ult_disable&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_ult_disable,<sp/>ult_disable</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a2<sp/>=<sp/>app.add_option(</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--vt_ult_stack_size&quot;</highlight><highlight class="normal">,<sp/>appConfig.vt_ult_stack_size,<sp/>stack_size</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>)-&gt;capture_default_str();</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>configThreads<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Threads&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>a1-&gt;group(configThreads);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>a2-&gt;group(configThreads);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>variantArg_t<sp/>=<sp/>std::variant&lt;bool,<sp/>int32_t,<sp/>int64_t,<sp/>double,<sp/>std::size_t,<sp/>std::string&gt;;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addVariantToNode(<ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref>&amp;<sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref>,<sp/>std::string&amp;<sp/>key,<sp/>variantArg_t&amp;<sp/>variant_val)<sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>yaml_val<sp/>from<sp/>the<sp/>variant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::holds_alternative&lt;bool&gt;(variant_val))<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node[key]<sp/>=<sp/>std::get&lt;bool&gt;(variant_val);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::holds_alternative&lt;int32_t&gt;(variant_val))<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node[key]<sp/>=<sp/>std::get&lt;int32_t&gt;(variant_val);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::holds_alternative&lt;int64_t&gt;(variant_val))<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node[key]<sp/>=<sp/>std::get&lt;int64_t&gt;(variant_val);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::holds_alternative&lt;double&gt;(variant_val))<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node[key]<sp/>=<sp/>std::get&lt;double&gt;(variant_val);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::holds_alternative&lt;std::size_t&gt;(variant_val))<sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node[key]<sp/>=<sp/>std::get&lt;std::size_t&gt;(variant_val);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::holds_alternative&lt;std::string&gt;(variant_val))<sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node[key]<sp/>=<sp/>std::get&lt;std::string&gt;(variant_val);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Argument<sp/>type<sp/>not<sp/>recognized.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal">std::string<sp/>convertConfigToYamlString(AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>create<sp/>a<sp/>converter<sp/>vector<sp/>of<sp/>tuples<sp/>{Node(s),<sp/>Key,<sp/>Value}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>std::vector&lt;std::tuple&lt;std::string,<sp/>std::string,<sp/>variantArg_t&gt;&gt;<sp/>cli_to_yaml_args<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>Control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Output<sp/>Control&quot;</highlight><highlight class="normal">,<sp/>vt_color_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_color)},</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Output<sp/>Control&quot;</highlight><highlight class="normal">,<sp/>vt_no_color_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(not<sp/>appConfig.vt_no_color)},</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Output<sp/>Control&quot;</highlight><highlight class="normal">,<sp/>vt_quiet_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_quiet)},</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Signal<sp/>Handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Signal<sp/>Handling&quot;</highlight><highlight class="normal">,<sp/>vt_no_sigint_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_no_sigint)},</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Signal<sp/>Handling&quot;</highlight><highlight class="normal">,<sp/>vt_no_sigsegv_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_no_sigsegv)},</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Signal<sp/>Handling&quot;</highlight><highlight class="normal">,<sp/>vt_no_sigbus_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_no_sigbus)},</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Signal<sp/>Handling&quot;</highlight><highlight class="normal">,<sp/>vt_no_terminate_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_no_terminate)},</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Memory<sp/>Usage<sp/>Reporting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Memory<sp/>Usage<sp/>Reporting&quot;</highlight><highlight class="normal">,<sp/>vt_memory_reporters_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_memory_reporters)},</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Memory<sp/>Usage<sp/>Reporting&quot;</highlight><highlight class="normal">,<sp/>vt_print_memory_each_phase_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_print_memory_each_phase)},</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Memory<sp/>Usage<sp/>Reporting&quot;</highlight><highlight class="normal">,<sp/>vt_print_memory_node_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_print_memory_node)},</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Memory<sp/>Usage<sp/>Reporting&quot;</highlight><highlight class="normal">,<sp/>vt_allow_memory_report_with_ps_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_allow_memory_report_with_ps)},</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Memory<sp/>Usage<sp/>Reporting&quot;</highlight><highlight class="normal">,<sp/>vt_print_memory_threshold_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_print_memory_threshold)},</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Memory<sp/>Usage<sp/>Reporting&quot;</highlight><highlight class="normal">,<sp/>vt_print_memory_sched_poll_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_print_memory_sched_poll)},</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Memory<sp/>Usage<sp/>Reporting&quot;</highlight><highlight class="normal">,<sp/>vt_print_memory_footprint_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_print_memory_footprint)},</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>Stack<sp/>Backtrace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Dump<sp/>Stack<sp/>Backtrace&quot;</highlight><highlight class="normal">,<sp/>vt_no_warn_stack_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_no_warn_stack)},</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Dump<sp/>Stack<sp/>Backtrace&quot;</highlight><highlight class="normal">,<sp/>vt_no_assert_stack_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_no_assert_stack)},</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Dump<sp/>Stack<sp/>Backtrace&quot;</highlight><highlight class="normal">,<sp/>vt_no_abort_stack_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_no_abort_stack)},</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Dump<sp/>Stack<sp/>Backtrace&quot;</highlight><highlight class="normal">,<sp/>vt_no_stack_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_no_stack)},</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Dump<sp/>Stack<sp/>Backtrace&quot;</highlight><highlight class="normal">,<sp/>vt_stack_file_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_stack_file)},</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Dump<sp/>Stack<sp/>Backtrace&quot;</highlight><highlight class="normal">,<sp/>vt_stack_dir_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_stack_dir)},</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Dump<sp/>Stack<sp/>Backtrace&quot;</highlight><highlight class="normal">,<sp/>vt_stack_mod_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_stack_mod)},</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tracing<sp/>Configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace)},</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_mpi_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_mpi)},</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_pmpi_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_pmpi)},</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_file_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_file)},</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_dir_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_dir)},</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_mod_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_mod)},</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_flush_size_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_flush_size)},</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_gzip_finish_flush_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_gzip_finish_flush)},</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_sys_all_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_sys_all)},</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_sys_term_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_sys_term)},</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_sys_location_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_sys_location)},</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_sys_collection_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_sys_collection)},</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_sys_serial_msg_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_sys_serial_msg)},</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_spec_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_spec)},</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_spec_file_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_spec_file)},</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_memory_usage_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_memory_usage)},</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_event_polling_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_event_polling)},</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tracing<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_trace_irecv_polling_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_trace_irecv_polling)},</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Debug<sp/>Print<sp/>Configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_debug_level_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_level)},</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_debug_all_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_all)},</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_debug_none_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_none)},</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_debug_print_flush_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_print_flush)},</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_gen_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_gen)},</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_runtime_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_runtime)},</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_active_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_active)},</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_term_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_term)},</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_termds_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_termds)},</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_barrier_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_barrier)},</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_event_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_event)},</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_pipe_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_pipe)},</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_pool_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_pool)},</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_reduce_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_reduce)},</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_rdma_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_rdma)},</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_rdma_channel_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_rdma_channel)},</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_rdma_state_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_rdma_state)},</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_handler_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_handler)},</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_hierlb_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_hierlb)},</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_temperedlb_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_temperedlb)},</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_temperedwmin_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_temperedwmin)},</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_scatter_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_scatter)},</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_serial_msg_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_serial_msg)},</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_trace_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_trace)},</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_location_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_location)},</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_lb_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_lb)},</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_vrt_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_vrt)},</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_vrt_coll_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_vrt_coll)},</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_worker_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_worker)},</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_group_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_group)},</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_broadcast_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_broadcast)},</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_objgroup_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_objgroup)},</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_phase_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_phase)},</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_context_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_context)},</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">,<sp/>vt_debug_epoch_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_debug_epoch)},</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>Balancing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing&quot;</highlight><highlight class="normal">,<sp/>vt_lb_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb)},</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing&quot;</highlight><highlight class="normal">,<sp/>vt_lb_quiet_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_quiet)},</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing&quot;</highlight><highlight class="normal">,<sp/>vt_lb_file_name_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_file_name)},</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing&quot;</highlight><highlight class="normal">,<sp/>vt_lb_show_config_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_show_config)},</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing&quot;</highlight><highlight class="normal">,<sp/>vt_lb_name_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_name)},</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing&quot;</highlight><highlight class="normal">,<sp/>vt_lb_args_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_args)},</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing&quot;</highlight><highlight class="normal">,<sp/>vt_lb_interval_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_interval)},</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing&quot;</highlight><highlight class="normal">,<sp/>vt_lb_keep_last_elm_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_keep_last_elm)},</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing/LB<sp/>Data<sp/>Output&quot;</highlight><highlight class="normal">,<sp/>vt_lb_data_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_data)},</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing/LB<sp/>Data<sp/>Output&quot;</highlight><highlight class="normal">,<sp/>vt_lb_data_dir_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_data_dir)},</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing/LB<sp/>Data<sp/>Output&quot;</highlight><highlight class="normal">,<sp/>vt_lb_data_file_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_data_file)},</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing/LB<sp/>Data<sp/>Input&quot;</highlight><highlight class="normal">,<sp/>vt_lb_data_in_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_data_in)},</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing/LB<sp/>Data<sp/>Input&quot;</highlight><highlight class="normal">,<sp/>vt_lb_data_compress_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_data_compress)},</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing/LB<sp/>Data<sp/>Input&quot;</highlight><highlight class="normal">,<sp/>vt_lb_data_dir_in_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_data_dir_in)},</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing/LB<sp/>Data<sp/>Input&quot;</highlight><highlight class="normal">,<sp/>vt_lb_data_file_in_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_data_file_in)},</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing/LB<sp/>Statistics&quot;</highlight><highlight class="normal">,<sp/>vt_lb_statistics_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_statistics)},</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing/LB<sp/>Statistics&quot;</highlight><highlight class="normal">,<sp/>vt_lb_statistics_compress_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_statistics_compress)},</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing/LB<sp/>Statistics&quot;</highlight><highlight class="normal">,<sp/>vt_lb_statistics_file_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_statistics_file)},</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing/LB<sp/>Statistics&quot;</highlight><highlight class="normal">,<sp/>vt_lb_statistics_dir_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_statistics_dir)},</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing&quot;</highlight><highlight class="normal">,<sp/>vt_lb_self_migration_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_self_migration)},</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing&quot;</highlight><highlight class="normal">,<sp/>vt_lb_spec_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_spec)},</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Load<sp/>Balancing&quot;</highlight><highlight class="normal">,<sp/>vt_lb_spec_file_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_lb_spec_file)},</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Diagnostics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Diagnostics&quot;</highlight><highlight class="normal">,<sp/>vt_diag_enable_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_diag_enable)},</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Diagnostics&quot;</highlight><highlight class="normal">,<sp/>vt_diag_print_summary_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_diag_print_summary)},</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Diagnostics&quot;</highlight><highlight class="normal">,<sp/>vt_diag_summary_file_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_diag_summary_file)},</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Diagnostics&quot;</highlight><highlight class="normal">,<sp/>vt_diag_summary_csv_file_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_diag_summary_csv_file)},</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Diagnostics&quot;</highlight><highlight class="normal">,<sp/>vt_diag_csv_base_units_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_diag_csv_base_units)},</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Termination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Termination&quot;</highlight><highlight class="normal">,<sp/>vt_no_detect_hang_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_no_detect_hang)},</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Termination&quot;</highlight><highlight class="normal">,<sp/>vt_term_rooted_use_ds_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_term_rooted_use_ds)},</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Termination&quot;</highlight><highlight class="normal">,<sp/>vt_term_rooted_use_wave_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_term_rooted_use_wave)},</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Termination&quot;</highlight><highlight class="normal">,<sp/>vt_epoch_graph_on_hang_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_epoch_graph_on_hang)},</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Termination&quot;</highlight><highlight class="normal">,<sp/>vt_epoch_graph_terse_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_epoch_graph_terse)},</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Termination&quot;</highlight><highlight class="normal">,<sp/>vt_print_no_progress_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_print_no_progress)},</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Termination&quot;</highlight><highlight class="normal">,<sp/>vt_hang_freq_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_hang_freq)},</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Debugging/Launch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Launch&quot;</highlight><highlight class="normal">,<sp/>vt_pause_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_pause)},</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>Options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;User<sp/>Options&quot;</highlight><highlight class="normal">,<sp/>user_args_labels[</highlight><highlight class="stringliteral">&quot;vt_user_1&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_user_1)},</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;User<sp/>Options&quot;</highlight><highlight class="normal">,<sp/>user_args_labels[</highlight><highlight class="stringliteral">&quot;vt_user_2&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_user_2)},</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;User<sp/>Options&quot;</highlight><highlight class="normal">,<sp/>user_args_labels[</highlight><highlight class="stringliteral">&quot;vt_user_3&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_user_3)},</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;User<sp/>Options&quot;</highlight><highlight class="normal">,<sp/>user_args_labels[</highlight><highlight class="stringliteral">&quot;vt_user_int_1&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_user_int_1)},</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;User<sp/>Options&quot;</highlight><highlight class="normal">,<sp/>user_args_labels[</highlight><highlight class="stringliteral">&quot;vt_user_int_2&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_user_int_2)},</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;User<sp/>Options&quot;</highlight><highlight class="normal">,<sp/>user_args_labels[</highlight><highlight class="stringliteral">&quot;vt_user_int_3&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_user_int_3)},</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;User<sp/>Options&quot;</highlight><highlight class="normal">,<sp/>user_args_labels[</highlight><highlight class="stringliteral">&quot;vt_user_str_1&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_user_str_1)},</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;User<sp/>Options&quot;</highlight><highlight class="normal">,<sp/>user_args_labels[</highlight><highlight class="stringliteral">&quot;vt_user_str_2&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_user_str_2)},</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;User<sp/>Options&quot;</highlight><highlight class="normal">,<sp/>user_args_labels[</highlight><highlight class="stringliteral">&quot;vt_user_str_3&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_user_str_3)},</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scheduler<sp/>Configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Scheduler<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_sched_num_progress_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_sched_num_progress)},</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Scheduler<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_sched_progress_han_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_sched_progress_han)},</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Scheduler<sp/>Configuration&quot;</highlight><highlight class="normal">,<sp/>vt_sched_progress_sec_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_sched_progress_sec)},</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configuration<sp/>File</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Configuration<sp/>File&quot;</highlight><highlight class="normal">,<sp/>vt_output_config_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_output_config)},</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Configuration<sp/>File&quot;</highlight><highlight class="normal">,<sp/>vt_output_config_file_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_output_config_file)},</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Runtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Runtime&quot;</highlight><highlight class="normal">,<sp/>vt_max_mpi_send_size_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_max_mpi_send_size)},</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Runtime&quot;</highlight><highlight class="normal">,<sp/>vt_no_assert_fail_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_no_assert_fail)},</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Runtime&quot;</highlight><highlight class="normal">,<sp/>vt_throw_on_abort_label,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">variantArg_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appConfig.vt_throw_on_abort)}</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>empty<sp/>node<sp/>that<sp/>we<sp/>will<sp/>populate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a04777c732e1a2b2c317995af9972b999" kindref="member">YAML::Node</ref><sp/>output_config_yaml;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>convert<sp/>to<sp/>YAML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>yaml_data<sp/>:<sp/>cli_to_yaml_args)<sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unpack<sp/>the<sp/>yaml<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[yaml_node,<sp/>yaml_key,<sp/>yaml_val]<sp/>=<sp/>yaml_data;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>explicitly<sp/>handle<sp/>the<sp/>Debug<sp/>Print<sp/>Configuration<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yaml_node<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration/Enable&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;bool&gt;(yaml_val))<sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_config_yaml[</highlight><highlight class="stringliteral">&quot;Debug<sp/>Print<sp/>Configuration&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Enable&quot;</highlight><highlight class="normal">].push_back(yaml_key);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>handle<sp/>the<sp/>User<sp/>Defined<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yaml_node<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>Options&quot;</highlight><highlight class="normal"><sp/>and<sp/>yaml_key<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;unused_user_param&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>current_node<sp/>=<sp/>output_config_yaml[</highlight><highlight class="stringliteral">&quot;User<sp/>Options&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addVariantToNode(current_node,<sp/>yaml_key,<sp/>yaml_val);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>handle<sp/>any<sp/>nested<sp/>nodes<sp/>(with<sp/>&quot;/&quot;<sp/>in<sp/>them)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yaml_node.find(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>yaml_node.npos)<sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nodes<sp/>=<sp/><ref refid="structvt_1_1util_1_1demangle_1_1_demangler_utils_1a3c280c288503a3420483e6705cddf5fb" kindref="member">util::demangle::DemanglerUtils::splitString</ref>(yaml_node,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>current_node<sp/>=<sp/>output_config_yaml[nodes[0]][nodes[1]];</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addVariantToNode(current_node,<sp/>yaml_key,<sp/>yaml_val);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rest<sp/>are<sp/>straightforward</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>current_node<sp/>=<sp/>output_config_yaml[yaml_node];</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addVariantToNode(current_node,<sp/>yaml_key,<sp/>yaml_val);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>std::ostringstream<sp/>yaml_stream;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/>yaml_stream<sp/>&lt;&lt;<sp/>output_config_yaml;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yaml_stream.str();</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>convertConfigToString(CLI::App&amp;<sp/>app,<sp/>AppConfig&amp;<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output_file<sp/>=<sp/>appConfig.vt_output_config_file;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>config_file_ending<sp/>=<sp/>output_file.substr(output_file.size()-4);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config_file_ending<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;.yml&quot;</highlight><highlight class="normal"><sp/>||<sp/>config_file_ending<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;yaml&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>appConfig.vt_output_config_str<sp/>=<sp/>convertConfigToYamlString(appConfig);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>appConfig.vt_output_config_str<sp/>=<sp/>app.config_to_str(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>anon<sp/>namespace<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;ArgConfig&gt;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><ref refid="structvt_1_1arguments_1_1_arg_config_1a2248f3913b93ca336fdac5c2ec9c6e0b" kindref="member">ArgConfig::construct</ref>(std::unique_ptr&lt;ArgConfig&gt;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363" refid="classvt_1_1arguments_1_1_vt_formatter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvt_1_1arguments_1_1_vt_formatter" kindref="compound">VtFormatter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>CLI::Formatter<sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/>std::string<sp/>make_usage(</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CLI::App<sp/>*,<sp/>[[maybe_unused]]<sp/>std::string<sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>u;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Usage:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;[APP-ARGS..]<sp/>[VT-ARGS]<sp/>[--<sp/>APP-ARGS..]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Arguments<sp/>up<sp/>until<sp/>the<sp/>first<sp/>&apos;--vt_*&apos;<sp/>are<sp/>treated<sp/>as<sp/>application<sp/>arguments.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;After<sp/>the<sp/>first<sp/>&apos;--vt_*&apos;,<sp/>additional<sp/>arguments<sp/>are<sp/>treated<sp/>as<sp/>VT<sp/>arguments\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;unless<sp/>&apos;--&apos;<sp/>is<sp/>used<sp/>to<sp/>switch<sp/>the<sp/>argument<sp/>mode<sp/>back<sp/>to<sp/>application<sp/>args.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;The<sp/>&apos;--vt_args&apos;<sp/>flag<sp/>can<sp/>be<sp/>used<sp/>to<sp/>switch<sp/>back<sp/>into<sp/>VT<sp/>argument<sp/>mode.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Modes<sp/>can<sp/>be<sp/>switched<sp/>indefinitely.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Application<sp/>pass-through<sp/>arguments<sp/>are<sp/>supplied<sp/>to<sp/>the<sp/>host<sp/>program\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;for<sp/>further<sp/>processing<sp/>and<sp/>are<sp/>not<sp/>used<sp/>by<sp/>VT<sp/>for<sp/>any<sp/>configuration.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;It<sp/>is<sp/>an<sp/>error<sp/>if<sp/>an<sp/>unexpected<sp/>argument<sp/>is<sp/>encountered<sp/>in<sp/>VT<sp/>argument<sp/>mode.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;The<sp/>currently<sp/>recognized<sp/>VT<sp/>arguments<sp/>are<sp/>listed<sp/>below;<sp/>availability<sp/>varies\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;based<sp/>on<sp/>build<sp/>and<sp/>compilation<sp/>settings.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;VT<sp/>arguments<sp/>can<sp/>also<sp/>be<sp/>provided<sp/>via<sp/>configuration<sp/>file.<sp/>Pass<sp/>a<sp/>TOML<sp/>or<sp/>ini<sp/>config\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;file<sp/>with<sp/>--vt_input_config,<sp/>or<sp/>a<sp/>YAML<sp/>config<sp/>file<sp/>with<sp/>--vt_input_config_yaml.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Command<sp/>line<sp/>arguments<sp/>will<sp/>overwrite<sp/>any<sp/>configuration<sp/>file<sp/>(and<sp/>a<sp/>TOML<sp/>or<sp/>ini\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;file<sp/>will<sp/>overwrite<sp/>a<sp/>YAML<sp/>configuration).\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u.str();</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal">std::tuple&lt;int,<sp/>std::string&gt;<sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1a56183006ac2bce88c5cda3d2716a1e2d" kindref="member">ArgConfig::parse</ref>(</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**&amp;<sp/>argv,<sp/><ref refid="structvt_1_1arguments_1_1_app_config" kindref="compound">AppConfig</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>appConfig</highlight></codeline>
<codeline lineno="1399"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>user<sp/>didn&apos;t<sp/>define<sp/>appConfig,<sp/>parse<sp/>into<sp/>this-&gt;config_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>appConfig)<sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1a559994991752599b39a6593da9605599" kindref="member">parseToConfig</ref>(argc,<sp/>argv,<sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1af30e0eae1ac1b29f7c85c25636109a9e" kindref="member">config_</ref>);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>user<sp/>defines<sp/>appConfig,<sp/>parse<sp/>into<sp/>temporary<sp/>config<sp/>for<sp/>later<sp/>comparison.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1arguments_1_1_app_config" kindref="compound">AppConfig</ref><sp/>config{*appConfig};</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>parse_result<sp/>=<sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1a559994991752599b39a6593da9605599" kindref="member">parseToConfig</ref>(argc,<sp/>argv,<sp/>config);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1af30e0eae1ac1b29f7c85c25636109a9e" kindref="member">config_</ref><sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parse_result;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal">std::tuple&lt;int,<sp/>std::string&gt;<sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1a559994991752599b39a6593da9605599" kindref="member">ArgConfig::parseToConfig</ref>(</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**&amp;<sp/>argv,<sp/><ref refid="structvt_1_1arguments_1_1_app_config" kindref="compound">AppConfig</ref>&amp;<sp/>appConfig</highlight></codeline>
<codeline lineno="1416"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1arguments_1_1_arg_config_1a710f4894651d38778f924c5d5f340d96" kindref="member">parsed_</ref><sp/>||<sp/>argc<sp/>==<sp/>0<sp/>||<sp/>argv<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Odd<sp/>case..<sp/>pretend<sp/>nothing<sp/>bad<sp/>happened.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(-1,<sp/>std::string{});</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>CLI::App<sp/>app{</highlight><highlight class="stringliteral">&quot;vt<sp/>(Virtual<sp/>Transport)&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/>app.formatter(std::make_shared&lt;VtFormatter&gt;());</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/>app.set_help_flag(</highlight><highlight class="stringliteral">&quot;--vt_help&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Display<sp/>help&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>a<sp/>input<sp/>config<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/>app.set_config(</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--vt_input_config&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>no<sp/>default<sp/>file<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>in<sp/>an<sp/>ini<sp/>or<sp/>toml<sp/>config<sp/>file<sp/>for<sp/>VT&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>not<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>CLI<sp/>parsing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/>addYamlArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/>addColorArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/>addSignalArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/>addMemUsageArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>addStackDumpArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/>addTraceArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/>addDebugPrintArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>addLbArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>addDiagnosticArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/>addTerminationArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>addDebuggerArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/>addUserArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>addSchedulerArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/>addConfigFileArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/>addRuntimeArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/>addThreadingArgs(app,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/>std::tuple&lt;int,<sp/>std::string&gt;<sp/>result<sp/>=<sp/>parseArguments(app,<sp/>argc,<sp/>argv,<sp/>appConfig);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;0&gt;(result)<sp/>not_eq<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>final<sp/>colorization<sp/>setting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appConfig.<ref refid="structvt_1_1arguments_1_1_app_config_1ac3821fd047fac387f9086b165f341bf6" kindref="member">vt_no_color</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>appConfig.<ref refid="structvt_1_1arguments_1_1_app_config_1abedaac3de66d21a54052e2e9ba8bca27" kindref="member">colorize_output</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>colorize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Within<sp/>MPI<sp/>there<sp/>is<sp/>no<sp/>good<sp/>method<sp/>to<sp/>auto-detect.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>appConfig.<ref refid="structvt_1_1arguments_1_1_app_config_1abedaac3de66d21a54052e2e9ba8bca27" kindref="member">colorize_output</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1a710f4894651d38778f924c5d5f340d96" kindref="member">parsed_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>buildRankFile(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>file)<sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref><sp/>=<sp/>file;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/>std::size_t<sp/>rank<sp/>=<sp/>name.find(</highlight><highlight class="stringliteral">&quot;%p&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>str_rank<sp/>=<sp/>std::to_string(<ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">theContext</ref>()-&gt;getNode());</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rank<sp/>==<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>name<sp/>+<sp/>str_rank;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/>name.replace(rank,<sp/>2,<sp/>str_rank);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>buildFile(</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>file,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dir</highlight></codeline>
<codeline lineno="1489"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref><sp/>=<sp/>buildRankFile(file);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>buildFileWithBrExtension(</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>file,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dir</highlight></codeline>
<codeline lineno="1496"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref><sp/>=<sp/>buildRankFile(file);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref>.substr(<ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref>.length()-3,<sp/>3)<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;.br&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref><sp/>=<sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.br&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>anon<sp/>namespace<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal">std::string<sp/><ref refid="structvt_1_1arguments_1_1_app_config_1a82e5247ad3ad6c2712dd31a2f5ff776f" kindref="member">AppConfig::getLBDataFileOut</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vt_lb_data_compress)<sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buildFileWithBrExtension(vt_lb_data_file,<sp/>vt_lb_data_dir);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buildFile(vt_lb_data_file,<sp/>vt_lb_data_dir);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal">std::string<sp/><ref refid="structvt_1_1arguments_1_1_app_config_1aa0c962a874e2ab3a73db4fcd22b0c988" kindref="member">AppConfig::getLBDataFileIn</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buildFile(vt_lb_data_file_in,<sp/>vt_lb_data_dir_in);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal">std::string<sp/><ref refid="structvt_1_1arguments_1_1_app_config_1a71ee368fd763047fdd2040834c229151" kindref="member">AppConfig::getLBStatisticsFile</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref><sp/>=<sp/>vt_lb_statistics_file;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>std::string<sp/>dir<sp/>=<sp/>vt_lb_statistics_dir;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>dir.empty())<sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>dir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/>std::size_t<sp/>timestamp<sp/>=<sp/>name.find(</highlight><highlight class="stringliteral">&quot;%t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timestamp<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>std::time_t<sp/>t<sp/>=<sp/>std::time(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tm<sp/>tm<sp/>=<sp/>*std::localtime(&amp;t);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::put_time(&amp;tm,<sp/></highlight><highlight class="stringliteral">&quot;%Y-%m-%d-%H-%M-%S&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>name.replace(timestamp,<sp/>2,<sp/>ss.str());</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vt_lb_statistics_compress<sp/>and<sp/>name.substr(name.length()-3,<sp/>3)<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;.br&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.br&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1arguments_1_1_arg_config_1ade5e5994235f0953970fc3f460f9167a" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal">}}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/vt/configs/arguments/args.cc"/>
  </compounddef>
</doxygen>
