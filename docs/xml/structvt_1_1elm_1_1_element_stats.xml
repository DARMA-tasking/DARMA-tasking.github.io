<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1elm_1_1_element_stats" kind="struct" language="C++" prot="public">
    <compoundname>vt::elm::ElementStats</compoundname>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_collection_stats" prot="public" virt="non-virtual">vt::vrt::collection::balance::CollectionStats</derivedcompoundref>
    <includes refid="elm__stats_8h" local="no">elm_stats.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_stats_1a6d338e3acd9504dc88d6664a24e567ce" prot="public" static="yes" mutable="no">
        <type>const constexpr <ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref></type>
        <definition>const constexpr SubphaseType vt::elm::ElementStats::no_subphase</definition>
        <argsstring></argsstring>
        <name>no_subphase</name>
        <initializer>=
    std::numeric_limits&lt;<ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref>&gt;::max()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="114" column="1" bodyfile="src/vt/elm/elm_stats.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1elm_1_1_element_stats_1a72c04e9376268c6f0ce31510c372fe50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct vrt::collection::balance::NodeStats</definition>
        <argsstring></argsstring>
        <name>vrt::collection::balance::NodeStats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="123" column="1" bodyfile="src/vt/elm/elm_stats.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_stats_1acff21e309c927473a0982162cce3d90b" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::elm::ElementStats::cur_time_started_</definition>
        <argsstring></argsstring>
        <name>cur_time_started_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="126" column="1" bodyfile="src/vt/elm/elm_stats.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_stats_1a640cbac2711a3918c75658665ea17956" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref></type>
        <definition>TimeType vt::elm::ElementStats::cur_time_</definition>
        <argsstring></argsstring>
        <name>cur_time_</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="127" column="1" bodyfile="src/vt/elm/elm_stats.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
        <definition>PhaseType vt::elm::ElementStats::cur_phase_</definition>
        <argsstring></argsstring>
        <name>cur_phase_</name>
        <initializer>= fst_lb_phase</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="128" column="1" bodyfile="src/vt/elm/elm_stats.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_stats_1a7f9571931802777ac73afa0c0d8976f5" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, TimeType&gt; vt::elm::ElementStats::phase_timings_</definition>
        <argsstring></argsstring>
        <name>phase_timings_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="129" column="1" bodyfile="src/vt/elm/elm_stats.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_stats_1ab44d8162968d9310df926c7312d49c1d" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1elm_1a38487cb8896b9b4763efa9022fab560e" kindref="member">CommMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, CommMapType&gt; vt::elm::ElementStats::phase_comm_</definition>
        <argsstring></argsstring>
        <name>phase_comm_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="130" column="1" bodyfile="src/vt/elm/elm_stats.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_stats_1ab493bd6bcb711e4ac1e68d7f94249c30" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref></type>
        <definition>SubphaseType vt::elm::ElementStats::cur_subphase_</definition>
        <argsstring></argsstring>
        <name>cur_subphase_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="132" column="1" bodyfile="src/vt/elm/elm_stats.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_stats_1ae1b1ff4ab1b86011d73bfc4f1a6fc2aa" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::vector&lt; <ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, std::vector&lt;TimeType&gt; &gt; vt::elm::ElementStats::subphase_timings_</definition>
        <argsstring></argsstring>
        <name>subphase_timings_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="133" column="1" bodyfile="src/vt/elm/elm_stats.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_stats_1a8821119818d8ab253ebded8869b5e693" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::vector&lt; <ref refid="namespacevt_1_1elm_1a38487cb8896b9b4763efa9022fab560e" kindref="member">CommMapType</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, std::vector&lt;CommMapType&gt; &gt; vt::elm::ElementStats::subphase_comm_</definition>
        <argsstring></argsstring>
        <name>subphase_comm_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="134" column="1" bodyfile="src/vt/elm/elm_stats.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a9a07ef20788a8b9f4f0b8633352cb931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::elm::ElementStats::ElementStats</definition>
        <argsstring>()=default</argsstring>
        <name>ElementStats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1afa1b9b94a8d93abc67c8be727f1fab44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::elm::ElementStats::ElementStats</definition>
        <argsstring>(ElementStats const &amp;)=default</argsstring>
        <name>ElementStats</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_stats" kindref="compound">ElementStats</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a0c8aacbfe7048bc11abc78887736415a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::elm::ElementStats::ElementStats</definition>
        <argsstring>(ElementStats &amp;&amp;)=default</argsstring>
        <name>ElementStats</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_stats" kindref="compound">ElementStats</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a58f57dbc6d180338d53a8acd8ba29712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementStats::startTime</definition>
        <argsstring>()</argsstring>
        <name>startTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="64" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="53" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1ac3ec6239fc848a98d7c9aba6e0331764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementStats::stopTime</definition>
        <argsstring>()</argsstring>
        <name>stopTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="65" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="65" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a17db2e465f6b06239f0b0ceb4e7d9f42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementStats::addTime</definition>
        <argsstring>(TimeTypeWrapper const &amp;time)</argsstring>
        <name>addTime</name>
        <param>
          <type><ref refid="structvt_1_1_time_type_wrapper" kindref="compound">TimeTypeWrapper</ref> const &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="66" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="127" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1af9452e09210ecdfae2b1759ee1b1fb91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementStats::sendToEntity</definition>
        <argsstring>(ElementIDStruct to, ElementIDStruct from, double bytes)</argsstring>
        <name>sendToEntity</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="68" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="82" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a43ee151dce76d5480f2121e8b2deaac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementStats::sendComm</definition>
        <argsstring>(elm::CommKey key, double bytes)</argsstring>
        <name>sendComm</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_comm_key" kindref="compound">elm::CommKey</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="69" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a5ec30d76df833e12cebf39fc25eb514a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementStats::recvComm</definition>
        <argsstring>(elm::CommKey key, double bytes)</argsstring>
        <name>recvComm</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_comm_key" kindref="compound">elm::CommKey</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="71" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1aaf35c3797e1bce9710051a7fc5a46dc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementStats::recvObjData</definition>
        <argsstring>(ElementIDStruct to_perm, ElementIDStruct from_perm, double bytes, bool bcast)</argsstring>
        <name>recvObjData</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>to_perm</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>from_perm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bcast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="72" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="103" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a33b8bdd69b89776a08055fbd72979fd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementStats::recvFromNode</definition>
        <argsstring>(ElementIDStruct to_perm, NodeType from, double bytes, bool bcast)</argsstring>
        <name>recvFromNode</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>to_perm</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bcast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="76" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="111" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1aa0ea8e1310cb4d70a8db1d43523c6064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementStats::recvToNode</definition>
        <argsstring>(NodeType to, ElementIDStruct from_perm, double bytes, bool bcast)</argsstring>
        <name>recvToNode</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>from_perm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bcast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="80" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="119" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1acaa20f9ee9c21209eb1c001b39732029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementStats::updatePhase</definition>
        <argsstring>(PhaseType const &amp;inc=1)</argsstring>
        <name>updatePhase</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref> const &amp;</type>
          <declname>inc</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="84" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="141" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1af9cd414ce031379618bf7a7c6f1e5888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementStats::resetPhase</definition>
        <argsstring>()</argsstring>
        <name>resetPhase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="85" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a92dc6fcc45664696a7a9a12089b035cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
        <definition>PhaseType vt::elm::ElementStats::getPhase</definition>
        <argsstring>() const</argsstring>
        <name>getPhase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="86" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a256c7acd901c72b6813085756200e2b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref></type>
        <definition>TimeType vt::elm::ElementStats::getLoad</definition>
        <argsstring>(PhaseType const &amp;phase) const</argsstring>
        <name>getLoad</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref> const &amp;</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="87" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="166" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1ab0480c6cfdcf936df7c780de3a58f2c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref></type>
        <definition>TimeType vt::elm::ElementStats::getLoad</definition>
        <argsstring>(PhaseType phase, SubphaseType subphase) const</argsstring>
        <name>getLoad</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref></type>
          <declname>subphase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="88" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="183" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a93b05e0c18f4d929161ccafabaee4ff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1elm_1a38487cb8896b9b4763efa9022fab560e" kindref="member">CommMapType</ref> const  &amp;</type>
        <definition>CommMapType const  &amp; vt::elm::ElementStats::getComm</definition>
        <argsstring>(PhaseType const &amp;phase)</argsstring>
        <name>getComm</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref> const &amp;</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="90" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="206" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1aee5101c331562bb1390278a32b13b39b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacevt_1_1elm_1a38487cb8896b9b4763efa9022fab560e" kindref="member">CommMapType</ref> &gt; const  &amp;</type>
        <definition>std::vector&lt; CommMapType &gt; const  &amp; vt::elm::ElementStats::getSubphaseComm</definition>
        <argsstring>(PhaseType phase)</argsstring>
        <name>getSubphaseComm</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="91" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="218" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a979741c0d029ea52a6ba585967becef1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref> &gt; const  &amp;</type>
        <definition>std::vector&lt; TimeType &gt; const  &amp; vt::elm::ElementStats::getSubphaseTimes</definition>
        <argsstring>(PhaseType phase)</argsstring>
        <name>getSubphaseTimes</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="92" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a8dd033cd3aba13f35212db30a7b8db2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementStats::setSubPhase</definition>
        <argsstring>(SubphaseType subphase)</argsstring>
        <name>setSubPhase</name>
        <param>
          <type><ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref></type>
          <declname>subphase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="93" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="230" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1ae9e567cc2429fd42046472282811daa9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref></type>
        <definition>SubphaseType vt::elm::ElementStats::getSubPhase</definition>
        <argsstring>() const</argsstring>
        <name>getSubPhase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="94" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a0578b01b6a0f7aee29ad57676ee9073b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::elm::ElementStats::getLoadPhaseCount</definition>
        <argsstring>() const</argsstring>
        <name>getLoadPhaseCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="97" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a14daf54c633594bccdf408d8e0053792" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::elm::ElementStats::getCommPhaseCount</definition>
        <argsstring>() const</argsstring>
        <name>getCommPhaseCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="98" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1ad89dc198f43e9eaaff095b9d0130d4c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::elm::ElementStats::getSubphaseLoadPhaseCount</definition>
        <argsstring>() const</argsstring>
        <name>getSubphaseLoadPhaseCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="99" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a7295efd869a1e7dca133ecb87ba9df25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::elm::ElementStats::getSubphaseCommPhaseCount</definition>
        <argsstring>() const</argsstring>
        <name>getSubphaseCommPhaseCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="100" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1a9885636f2cd035d7df0529390fb9b7ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Serializer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::elm::ElementStats::serialize</definition>
        <argsstring>(Serializer &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>Serializer &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="103" column="1" bodyfile="src/vt/elm/elm_stats.h" bodystart="103" bodyend="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_stats_1ab6abdce753149b261fd238392cc927c8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementStats::releaseStatsFromUnneededPhases</definition>
        <argsstring>(PhaseType phase, unsigned int look_back)</argsstring>
        <name>releaseStatsFromUnneededPhases</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>look_back</declname>
        </param>
        <briefdescription>
<para>Release stats data from phases prior to lookback. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.h" line="121" column="1" bodyfile="src/vt/elm/elm_stats.cc" bodystart="239" bodyend="246"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1641">
        <label>vt::vrt::collection::balance::CollectionStats</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_collection_stats"/>
        <childnode refid="1640" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1640">
        <label>vt::elm::ElementStats</label>
        <link refid="structvt_1_1elm_1_1_element_stats"/>
      </node>
    </inheritancegraph>
    <location file="src/vt/elm/elm_stats.h" line="59" column="1" bodyfile="src/vt/elm/elm_stats.h" bodystart="59" bodyend="135"/>
    <listofallmembers>
      <member refid="structvt_1_1elm_1_1_element_stats_1a17db2e465f6b06239f0b0ceb4e7d9f42" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>addTime</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" prot="protected" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>cur_phase_</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1ab493bd6bcb711e4ac1e68d7f94249c30" prot="protected" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>cur_subphase_</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a640cbac2711a3918c75658665ea17956" prot="protected" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>cur_time_</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1acff21e309c927473a0982162cce3d90b" prot="protected" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>cur_time_started_</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a9a07ef20788a8b9f4f0b8633352cb931" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>ElementStats</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1afa1b9b94a8d93abc67c8be727f1fab44" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>ElementStats</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a0c8aacbfe7048bc11abc78887736415a" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>ElementStats</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a93b05e0c18f4d929161ccafabaee4ff8" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>getComm</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a14daf54c633594bccdf408d8e0053792" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>getCommPhaseCount</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a256c7acd901c72b6813085756200e2b6" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>getLoad</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1ab0480c6cfdcf936df7c780de3a58f2c0" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>getLoad</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a0578b01b6a0f7aee29ad57676ee9073b" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>getLoadPhaseCount</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a92dc6fcc45664696a7a9a12089b035cd" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>getPhase</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1ae9e567cc2429fd42046472282811daa9" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>getSubPhase</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1aee5101c331562bb1390278a32b13b39b" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>getSubphaseComm</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a7295efd869a1e7dca133ecb87ba9df25" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>getSubphaseCommPhaseCount</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1ad89dc198f43e9eaaff095b9d0130d4c1" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>getSubphaseLoadPhaseCount</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a979741c0d029ea52a6ba585967becef1" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>getSubphaseTimes</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a6d338e3acd9504dc88d6664a24e567ce" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>no_subphase</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1ab44d8162968d9310df926c7312d49c1d" prot="protected" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>phase_comm_</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a7f9571931802777ac73afa0c0d8976f5" prot="protected" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>phase_timings_</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a5ec30d76df833e12cebf39fc25eb514a" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>recvComm</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a33b8bdd69b89776a08055fbd72979fd2" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>recvFromNode</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1aaf35c3797e1bce9710051a7fc5a46dc1" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>recvObjData</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1aa0ea8e1310cb4d70a8db1d43523c6064" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>recvToNode</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1ab6abdce753149b261fd238392cc927c8" prot="protected" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>releaseStatsFromUnneededPhases</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1af9cd414ce031379618bf7a7c6f1e5888" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>resetPhase</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a43ee151dce76d5480f2121e8b2deaac2" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>sendComm</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1af9452e09210ecdfae2b1759ee1b1fb91" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>sendToEntity</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a9885636f2cd035d7df0529390fb9b7ba" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>serialize</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a8dd033cd3aba13f35212db30a7b8db2f" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>setSubPhase</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a58f57dbc6d180338d53a8acd8ba29712" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>startTime</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1ac3ec6239fc848a98d7c9aba6e0331764" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>stopTime</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a8821119818d8ab253ebded8869b5e693" prot="protected" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>subphase_comm_</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1ae1b1ff4ab1b86011d73bfc4f1a6fc2aa" prot="protected" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>subphase_timings_</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1acaa20f9ee9c21209eb1c001b39732029" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>updatePhase</name></member>
      <member refid="structvt_1_1elm_1_1_element_stats_1a72c04e9376268c6f0ce31510c372fe50" prot="public" virt="non-virtual"><scope>vt::elm::ElementStats</scope><name>vrt::collection::balance::NodeStats</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
