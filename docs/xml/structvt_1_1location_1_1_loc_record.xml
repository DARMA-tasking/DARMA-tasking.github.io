<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1location_1_1_loc_record" kind="struct" language="C++" prot="public">
    <compoundname>vt::location::LocRecord</compoundname>
    <includes refid="record_8h" local="no">record.h</includes>
    <templateparamlist>
      <param>
        <type>typename EntityID</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1location_1_1_loc_record_1a292a4bfaf13edb8d1c2e7a4fdd5421fb" prot="public" static="no">
        <type><ref refid="namespacevt_1_1location_1a7a5c74aad68cf57281515029d8521547" kindref="member">eLocState</ref></type>
        <definition>using vt::location::LocRecord&lt; EntityID &gt;::LocStateType =  eLocState</definition>
        <argsstring></argsstring>
        <name>LocStateType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/record/record.h" line="57" column="1" bodyfile="src/vt/topos/location/record/record.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1location_1_1_loc_record_1a165c38a690d7fadd583fa05e9e2b4a25" prot="private" static="no" mutable="no">
        <type>EntityID</type>
        <definition>EntityID vt::location::LocRecord&lt; EntityID &gt;::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/record/record.h" line="81" column="1" bodyfile="src/vt/topos/location/record/record.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1location_1_1_loc_record_1a61f9aee0764759d61b9e3fddebe602cd" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1location_1a7a5c74aad68cf57281515029d8521547" kindref="member">LocStateType</ref></type>
        <definition>LocStateType vt::location::LocRecord&lt; EntityID &gt;::state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <initializer>= <ref refid="namespacevt_1_1location_1a7a5c74aad68cf57281515029d8521547a4bbb8f967da6d1a610596d7257179c2b" kindref="member">eLocState::Invalid</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/record/record.h" line="82" column="1" bodyfile="src/vt/topos/location/record/record.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1location_1_1_loc_record_1aff7390974f2a2c874bde346db67fac13" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::location::LocRecord&lt; EntityID &gt;::cur_node_</definition>
        <argsstring></argsstring>
        <name>cur_node_</name>
        <initializer>= uninitialized_destination</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/record/record.h" line="83" column="1" bodyfile="src/vt/topos/location/record/record.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1location_1_1_loc_record_1ade33ca9b748edfc1cacdf1738700ef5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::location::LocRecord&lt; EntityID &gt;::LocRecord</definition>
        <argsstring>(EntityID const &amp;in_id, LocStateType const &amp;in_state, NodeType const &amp;in_node)</argsstring>
        <name>LocRecord</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>in_id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1location_1a7a5c74aad68cf57281515029d8521547" kindref="member">LocStateType</ref> const &amp;</type>
          <declname>in_state</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>in_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/record/record.h" line="59" column="1" bodyfile="src/vt/topos/location/record/record.impl.h" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_loc_record_1aa66e4f13e89526636b87b3c950bdd91c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::LocRecord&lt; EntityID &gt;::updateNode</definition>
        <argsstring>(NodeType const &amp;new_node)</argsstring>
        <name>updateNode</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>new_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/record/record.h" line="63" column="1" bodyfile="src/vt/topos/location/record/record.impl.h" bodystart="62" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_loc_record_1af3bb2160b4ad36664ef47171cf6d58a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::location::LocRecord&lt; EntityID &gt;::isLocal</definition>
        <argsstring>() const</argsstring>
        <name>isLocal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/record/record.h" line="65" column="1" bodyfile="src/vt/topos/location/record/record.impl.h" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_loc_record_1a891b73a9c0092f6b022514309190cc8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::location::LocRecord&lt; EntityID &gt;::isRemote</definition>
        <argsstring>() const</argsstring>
        <name>isRemote</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/record/record.h" line="66" column="1" bodyfile="src/vt/topos/location/record/record.impl.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_loc_record_1ada9c469d3fd01a0eaed1af3a99fc9b2c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::location::LocRecord&lt; EntityID &gt;::getRemoteNode</definition>
        <argsstring>() const</argsstring>
        <name>getRemoteNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/record/record.h" line="67" column="1" bodyfile="src/vt/topos/location/record/record.impl.h" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_loc_record_1a710d9bbd99da0c19d1270a06eff6dd6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>EntityID</type>
        <definition>EntityID vt::location::LocRecord&lt; EntityID &gt;::getEntityID</definition>
        <argsstring>() const</argsstring>
        <name>getEntityID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/record/record.h" line="68" column="1" bodyfile="src/vt/topos/location/record/record.impl.h" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_loc_record_1ae7b5c9187750abeb27c72ee260557aed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Serializer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::location::LocRecord&lt; EntityID &gt;::serialize</definition>
        <argsstring>(Serializer &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>Serializer &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/record/record.h" line="74" column="1" bodyfile="src/vt/topos/location/record/record.h" bodystart="74" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1location_1_1_loc_record_1ac94f95ab9e7fa58002314e99696972d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, LocRecord&lt; U &gt; const &amp;rec)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1location_1_1_loc_record" kindref="compound">LocRecord</ref>&lt; U &gt; const &amp;</type>
          <declname>rec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/record/record.h" line="71" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/topos/location/record/record.h" line="56" column="1" bodyfile="src/vt/topos/location/record/record.h" bodystart="56" bodyend="84"/>
    <listofallmembers>
      <member refid="structvt_1_1location_1_1_loc_record_1aff7390974f2a2c874bde346db67fac13" prot="private" virt="non-virtual"><scope>vt::location::LocRecord</scope><name>cur_node_</name></member>
      <member refid="structvt_1_1location_1_1_loc_record_1a710d9bbd99da0c19d1270a06eff6dd6a" prot="public" virt="non-virtual"><scope>vt::location::LocRecord</scope><name>getEntityID</name></member>
      <member refid="structvt_1_1location_1_1_loc_record_1ada9c469d3fd01a0eaed1af3a99fc9b2c" prot="public" virt="non-virtual"><scope>vt::location::LocRecord</scope><name>getRemoteNode</name></member>
      <member refid="structvt_1_1location_1_1_loc_record_1a165c38a690d7fadd583fa05e9e2b4a25" prot="private" virt="non-virtual"><scope>vt::location::LocRecord</scope><name>id_</name></member>
      <member refid="structvt_1_1location_1_1_loc_record_1af3bb2160b4ad36664ef47171cf6d58a4" prot="public" virt="non-virtual"><scope>vt::location::LocRecord</scope><name>isLocal</name></member>
      <member refid="structvt_1_1location_1_1_loc_record_1a891b73a9c0092f6b022514309190cc8e" prot="public" virt="non-virtual"><scope>vt::location::LocRecord</scope><name>isRemote</name></member>
      <member refid="structvt_1_1location_1_1_loc_record_1ade33ca9b748edfc1cacdf1738700ef5b" prot="public" virt="non-virtual"><scope>vt::location::LocRecord</scope><name>LocRecord</name></member>
      <member refid="structvt_1_1location_1_1_loc_record_1a292a4bfaf13edb8d1c2e7a4fdd5421fb" prot="public" virt="non-virtual"><scope>vt::location::LocRecord</scope><name>LocStateType</name></member>
      <member refid="structvt_1_1location_1_1_loc_record_1ac94f95ab9e7fa58002314e99696972d7" prot="public" virt="non-virtual"><scope>vt::location::LocRecord</scope><name>operator&lt;&lt;</name></member>
      <member refid="structvt_1_1location_1_1_loc_record_1ae7b5c9187750abeb27c72ee260557aed" prot="public" virt="non-virtual"><scope>vt::location::LocRecord</scope><name>serialize</name></member>
      <member refid="structvt_1_1location_1_1_loc_record_1a61f9aee0764759d61b9e3fddebe602cd" prot="private" virt="non-virtual"><scope>vt::location::LocRecord</scope><name>state_</name></member>
      <member refid="structvt_1_1location_1_1_loc_record_1aa66e4f13e89526636b87b3c950bdd91c" prot="public" virt="non-virtual"><scope>vt::location::LocRecord</scope><name>updateNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
