<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceserialization_1_1interface" kind="namespace" language="C++">
    <compoundname>serialization::interface</compoundname>
    <innerclass refid="structserialization_1_1interface_1_1_serialized_info" prot="public">serialization::interface::SerializedInfo</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceserialization_1_1interface_1a2ffaaa9b168f9cbcfe454ab036444403" prot="public" static="no">
        <type>size_t</type>
        <definition>using serialization::interface::SizeType = typedef size_t</definition>
        <argsstring></argsstring>
        <name>SizeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/serialize_interface.h" line="58" column="1" bodyfile="src/vt/serialization/serialize_interface.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceserialization_1_1interface_1a718748616a908c35e6080b71d7790a76" prot="public" static="no">
        <type>char</type>
        <definition>using serialization::interface::SerialByteType = typedef char</definition>
        <argsstring></argsstring>
        <name>SerialByteType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/serialize_interface.h" line="59" column="1" bodyfile="src/vt/serialization/serialize_interface.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceserialization_1_1interface_1ae1f3fc9ceb0366ab6a877a78ee7377a2" prot="public" static="no">
        <type>std::function&lt; <ref refid="namespaceserialization_1_1interface_1a718748616a908c35e6080b71d7790a76" kindref="member">SerialByteType</ref> *(<ref refid="namespaceserialization_1_1interface_1a2ffaaa9b168f9cbcfe454ab036444403" kindref="member">SizeType</ref> size)&gt;</type>
        <definition>using serialization::interface::BufferCallbackType = typedef std::function&lt;SerialByteType*(SizeType size)&gt;</definition>
        <argsstring></argsstring>
        <name>BufferCallbackType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/serialize_interface.h" line="61" column="1" bodyfile="src/vt/serialization/serialize_interface.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceserialization_1_1interface_1ab3413aa784e985f68876637844866ba1" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structserialization_1_1interface_1_1_serialized_info" kindref="compound">SerializedInfo</ref> &gt;</type>
        <definition>using serialization::interface::SerializedInfoPtrType = typedef std::unique_ptr&lt;SerializedInfo&gt;</definition>
        <argsstring></argsstring>
        <name>SerializedInfoPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/serialize_interface.h" line="69" column="1" bodyfile="src/vt/serialization/serialize_interface.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceserialization_1_1interface_1a53410d9804c330ddfaf562ddc8e3c681" prot="public" static="no">
        <type><ref refid="namespaceserialization_1_1interface_1ab3413aa784e985f68876637844866ba1" kindref="member">SerializedInfoPtrType</ref></type>
        <definition>using serialization::interface::SerializedReturnType = typedef SerializedInfoPtrType</definition>
        <argsstring></argsstring>
        <name>SerializedReturnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/serialize_interface.h" line="70" column="1" bodyfile="src/vt/serialization/serialize_interface.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceserialization_1_1interface_1a97404f513117bf528ec47309512815fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceserialization_1_1interface_1a53410d9804c330ddfaf562ddc8e3c681" kindref="member">SerializedReturnType</ref></type>
        <definition>SerializedReturnType serialization::interface::serialize</definition>
        <argsstring>(T &amp;target, BufferCallbackType fn)</argsstring>
        <name>serialize</name>
        <param>
          <type>T &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespaceserialization_1_1interface_1ae1f3fc9ceb0366ab6a877a78ee7377a2" kindref="member">BufferCallbackType</ref></type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="258" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="258" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="namespaceserialization_1_1interface_1a56fb462f661704f6e4fe3ebc77f429a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * serialization::interface::deserialize</definition>
        <argsstring>(SerialByteType *buf, SizeType size, T *allocBuf)</argsstring>
        <name>deserialize</name>
        <param>
          <type><ref refid="namespaceserialization_1_1interface_1a718748616a908c35e6080b71d7790a76" kindref="member">SerialByteType</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="namespaceserialization_1_1interface_1a2ffaaa9b168f9cbcfe454ab036444403" kindref="member">SizeType</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>allocBuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="271" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="271" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="namespaceserialization_1_1interface_1a358f5ea6192243a92aa7a7c9efc2ea4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceserialization_1_1interface_1a53410d9804c330ddfaf562ddc8e3c681" kindref="member">SerializedReturnType</ref></type>
        <definition>SerializedReturnType serialization::interface::serializePartial</definition>
        <argsstring>(T &amp;target, BufferCallbackType fn=nullptr)</argsstring>
        <name>serializePartial</name>
        <param>
          <type>T &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespaceserialization_1_1interface_1ae1f3fc9ceb0366ab6a877a78ee7377a2" kindref="member">BufferCallbackType</ref></type>
          <declname>fn</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/serialize_interface.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceserialization_1_1interface_1a08efd64c2c86ef556fd0a2683b9105d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* serialization::interface::deserializePartial</definition>
        <argsstring>(SerialByteType *buf, SizeType size, T *user_buf=nullptr)</argsstring>
        <name>deserializePartial</name>
        <param>
          <type><ref refid="namespaceserialization_1_1interface_1a718748616a908c35e6080b71d7790a76" kindref="member">SerialByteType</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="namespaceserialization_1_1interface_1a2ffaaa9b168f9cbcfe454ab036444403" kindref="member">SizeType</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>user_buf</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/serialize_interface.h" line="82" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/serialization/mock_serializer.h" line="253" column="1"/>
  </compounddef>
</doxygen>
