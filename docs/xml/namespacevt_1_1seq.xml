<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacevt_1_1seq" kind="namespace" language="C++">
    <compoundname>vt::seq</compoundname>
    <innerclass refid="structvt_1_1seq_1_1_action" prot="public">vt::seq::Action</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_action_virtual" prot="public">vt::seq::ActionVirtual</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_closure" prot="public">vt::seq::SeqClosure</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_context" prot="public">vt::seq::SeqContext</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_list" prot="public">vt::seq::SeqList</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_manager" prot="public">vt::seq::SeqManager</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_matcher" prot="public">vt::seq::SeqMatcher</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_matcher_virtual" prot="public">vt::seq::SeqMatcherVirtual</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_msg_state" prot="public">vt::seq::SeqMsgState</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_msg_state_virtual" prot="public">vt::seq::SeqMsgStateVirtual</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_node" prot="public">vt::seq::SeqNode</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_node_leaf_tag" prot="public">vt::seq::SeqNodeLeafTag</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_node_parallel_tag" prot="public">vt::seq::SeqNodeParallelTag</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_node_parent_tag" prot="public">vt::seq::SeqNodeParentTag</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_node_universal_tag" prot="public">vt::seq::SeqNodeUniversalTag</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_parallel" prot="public">vt::seq::SeqParallel</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_sequencer" prot="public">vt::seq::Sequencer</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_sequencer_virtual" prot="public">vt::seq::SequencerVirtual</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_u_l_t_const_tag" prot="public">vt::seq::SeqULTConstTag</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_seq_u_l_t_context" prot="public">vt::seq::SeqULTContext</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_tagged_sequencer" prot="public">vt::seq::TaggedSequencer</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_tagged_sequencer_vrt" prot="public">vt::seq::TaggedSequencerVrt</innerclass>
    <innerclass refid="unionvt_1_1seq_1_1u_seq_node_payload" prot="public">vt::seq::uSeqNodePayload</innerclass>
    <innerclass refid="structvt_1_1seq_1_1_virtual_info" prot="public">vt::seq::VirtualInfo</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacevt_1_1seq_1a3041a01a5db2bccb3183e73b49e78252" prot="public" static="no">
        <name>eSeqConstructType</name>
        <enumvalue id="namespacevt_1_1seq_1a3041a01a5db2bccb3183e73b49e78252ac34b27320b44a81234983aa881c3d60e" prot="public">
          <name>WaitConstruct</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1seq_1a3041a01a5db2bccb3183e73b49e78252ac5d7fb4472e67ad94349a2bfd6b14dfe" prot="public">
          <name>ParallelConstruct</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1seq_1a3041a01a5db2bccb3183e73b49e78252a2fd076fec0ebc3801ae240223ee8f989" prot="public">
          <name>InvalidConstruct</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="82" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1seq_1ae721d4e8b95cf57a7e4169db1929e0f1" prot="public" static="no">
        <name>eSeqNodeType</name>
        <enumvalue id="namespacevt_1_1seq_1ae721d4e8b95cf57a7e4169db1929e0f1a829f368b058820f2b291ad9da4ffeb73" prot="public">
          <name>ParentNode</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1seq_1ae721d4e8b95cf57a7e4169db1929e0f1a267b9f7cb10c41f037e84a25ef20801f" prot="public">
          <name>LeafNode</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1seq_1ae721d4e8b95cf57a7e4169db1929e0f1ab93ad8a05dfc00c50baa291e7a808ba6" prot="public">
          <name>ParallelNode</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1seq_1ae721d4e8b95cf57a7e4169db1929e0f1a8d430d6250b6f558562aace5b6a5a8de" prot="public">
          <name>InvalidNode</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_types.h" line="58" column="1" bodyfile="src/vt/sequence/seq_types.h" bodystart="58" bodyend="63"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1seq_1a313357c71bba2bea5c57f50d69f1edf7" prot="public" static="no">
        <name>eSeqNodeOrderType</name>
        <enumvalue id="namespacevt_1_1seq_1a313357c71bba2bea5c57f50d69f1edf7a6d6423d4f7844da48a87a926492256d3" prot="public">
          <name>SequencedOrder</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1seq_1a313357c71bba2bea5c57f50d69f1edf7a6eacb85aebc054ba02a4742b0eac1736" prot="public">
          <name>ParallelOrder</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1seq_1a313357c71bba2bea5c57f50d69f1edf7abad0e5f1d99f90302a70e1ae24269bb9" prot="public">
          <name>InvalidOrder</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_types.h" line="65" column="1" bodyfile="src/vt/sequence/seq_types.h" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1seq_1ad7b0496818667d816e00f717491d3b92" prot="public" static="no">
        <name>eSeqNodeState</name>
        <enumvalue id="namespacevt_1_1seq_1ad7b0496818667d816e00f717491d3b92a2d046e85576168cdf824c517ac142206" prot="public">
          <name>WaitingNextState</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1seq_1ad7b0496818667d816e00f717491d3b92a630c485e3b57db5b6b5589e10476190a" prot="public">
          <name>KeepExpandingState</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1seq_1ad7b0496818667d816e00f717491d3b92a9da7cf202a0fae808aa12e7b84d3d2b9" prot="public">
          <name>NoMoreExpansionsState</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1seq_1ad7b0496818667d816e00f717491d3b92aedf260198e4d75d1cb3c7588f7380120" prot="public">
          <name>InvalidState</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_types.h" line="71" column="1" bodyfile="src/vt/sequence/seq_types.h" bodystart="71" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a322533ee3b8e3443e6808410aea39797" prot="public" static="no">
        <type><ref refid="structvt_1_1seq_1_1_seq_closure" kindref="compound">SeqClosure</ref></type>
        <definition>using vt::seq::SeqExpandedClosureType = typedef SeqClosure</definition>
        <argsstring></argsstring>
        <name>SeqExpandedClosureType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_closure.h" line="69" column="1" bodyfile="src/vt/sequence/seq_closure.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" prot="public" static="no">
        <type>int32_t</type>
        <definition>using vt::seq::SeqType = typedef int32_t</definition>
        <argsstring></argsstring>
        <name>SeqType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="57" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1aeb4674d25dcb5d27248b68ec83fad2b6" prot="public" static="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>using vt::seq::UserSeqFunType = typedef std::function&lt;void()&gt;</definition>
        <argsstring></argsstring>
        <name>UserSeqFunType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="58" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a26c632e5cbf02395a8bbd9aa4c761232" prot="public" static="no">
        <type><ref refid="namespacevt_1_1seq_1aeb4674d25dcb5d27248b68ec83fad2b6" kindref="member">UserSeqFunType</ref></type>
        <definition>using vt::seq::FuncType = typedef UserSeqFunType</definition>
        <argsstring></argsstring>
        <name>FuncType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="59" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a80eeb50c74a4a3bd46fcf4d5213c5ebe" prot="public" static="no">
        <type>std::function&lt; bool()&gt;</type>
        <definition>using vt::seq::SystemSeqFunType = typedef std::function&lt;bool()&gt;</definition>
        <argsstring></argsstring>
        <name>SystemSeqFunType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="60" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a1a58d0ebe1d6bbed8438607a9c717779" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const  &amp;)&gt;</type>
        <definition>using vt::seq::UserSeqFunWithIDType = typedef std::function&lt;void(SeqType const&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>UserSeqFunWithIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="61" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a228aa2c36a3564f50232a32a8b4ff866" prot="public" static="no">
        <type><ref refid="namespacevt_1_1seq_1a1a58d0ebe1d6bbed8438607a9c717779" kindref="member">UserSeqFunWithIDType</ref></type>
        <definition>using vt::seq::FuncIDType = typedef UserSeqFunWithIDType</definition>
        <argsstring></argsstring>
        <name>FuncIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="62" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a3d4575155fb9c0aeeb30b089adfdd04d" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespacevt_1_1seq_1a26c632e5cbf02395a8bbd9aa4c761232" kindref="member">FuncType</ref> &gt;</type>
        <definition>using vt::seq::SeqFuncContainerType = typedef std::vector&lt;FuncType&gt;</definition>
        <argsstring></argsstring>
        <name>SeqFuncContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="63" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a6c570c39bac8f93bafe0bf8a0db8c798" prot="public" static="no">
        <type>int32_t</type>
        <definition>using vt::seq::ForIndex = typedef int32_t</definition>
        <argsstring></argsstring>
        <name>ForIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="64" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1ab8466502cdb46b9f1d17e3e5630ed65a" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="namespacevt_1_1seq_1a6c570c39bac8f93bafe0bf8a0db8c798" kindref="member">ForIndex</ref> idx)&gt;</type>
        <definition>using vt::seq::UserSeqFunIndexType = typedef std::function&lt;void(ForIndex idx)&gt;</definition>
        <argsstring></argsstring>
        <name>UserSeqFunIndexType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="65" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a822a80f3859b6840e7114128a06ac197" prot="public" static="no">
        <type><ref refid="namespacevt_1_1seq_1ab8466502cdb46b9f1d17e3e5630ed65a" kindref="member">UserSeqFunIndexType</ref></type>
        <definition>using vt::seq::FuncIndexType = typedef UserSeqFunIndexType</definition>
        <argsstring></argsstring>
        <name>FuncIndexType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="66" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1aa88b0d93284d188be39704024ab58b8f" prot="public" static="no">
        <type>std::function&lt; void(MessageT *)&gt;</type>
        <definition>using vt::seq::SeqNonMigratableTriggerType = typedef std::function&lt;void(MessageT*)&gt;</definition>
        <argsstring></argsstring>
        <name>SeqNonMigratableTriggerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="70" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1aab252d92ce46371ce1b307eeb524f030" prot="public" static="no">
        <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MessageT &gt;</type>
        <definition>using vt::seq::SeqMigratableTriggerType = typedef ActiveTypedFnType&lt;MessageT&gt;</definition>
        <argsstring></argsstring>
        <name>SeqMigratableTriggerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="72" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a73ba0745e730a1837e22d831390d92e0" prot="public" static="no">
        <type>std::function&lt; void(MessageT *, VcT *)&gt;</type>
        <definition>using vt::seq::SeqNonMigratableVrtTriggerType = typedef std::function&lt;void(MessageT*, VcT*)&gt;</definition>
        <argsstring></argsstring>
        <name>SeqNonMigratableVrtTriggerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="76" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a4147691d837ca54f178a5f1c49effc6f" prot="public" static="no">
        <type><ref refid="namespacevt_1_1vrt_1a14077459ea3367e5834151d314ff4bc8" kindref="member">vrt::ActiveVrtTypedFnType</ref>&lt; MessageT, VcT &gt;</type>
        <definition>using vt::seq::SeqMigratableVrtTriggerType = typedef vrt::ActiveVrtTypedFnType&lt;MessageT, VcT&gt;</definition>
        <argsstring></argsstring>
        <name>SeqMigratableVrtTriggerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="78" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a81dfe143a0308c0f5bc10146c82530e6" prot="public" static="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>using vt::seq::SeqContinuation = typedef std::function&lt;void()&gt;</definition>
        <argsstring></argsstring>
        <name>SeqContinuation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="80" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1ab8c5e0c5aec2bd712a2b57e2e4553de6" prot="public" static="no">
        <type>std::function&lt; bool()&gt;</type>
        <definition>using vt::seq::SeqCallableType = typedef std::function&lt;bool()&gt;</definition>
        <argsstring></argsstring>
        <name>SeqCallableType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="95" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1ad2b106b952becc168d3c567411ebf899" prot="public" static="no">
        <type>std::list&lt; T &gt;</type>
        <definition>using vt::seq::SeqNodeContainerType = typedef std::list&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>SeqNodeContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_helpers.h" line="62" column="1" bodyfile="src/vt/sequence/seq_helpers.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1ab345c700c06d135cafba39f711767ad5" prot="public" static="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>using vt::seq::SeqExpandFunType = typedef std::function&lt;void()&gt;</definition>
        <argsstring></argsstring>
        <name>SeqExpandFunType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_helpers.h" line="63" column="1" bodyfile="src/vt/sequence/seq_helpers.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a13c76fb1c62795dfd2d359b2dde35e8a" prot="public" static="no">
        <type>std::function&lt; bool()&gt;</type>
        <definition>using vt::seq::SeqLeafClosureType = typedef std::function&lt;bool()&gt;</definition>
        <argsstring></argsstring>
        <name>SeqLeafClosureType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_helpers.h" line="64" column="1" bodyfile="src/vt/sequence/seq_helpers.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a050106112a0717f8e482465957fb2bfe" prot="public" static="no">
        <type><ref refid="structvt_1_1seq_1_1_seq_parallel" kindref="compound">SeqParallel</ref> *</type>
        <definition>using vt::seq::SeqParallelPtrType = typedef SeqParallel*</definition>
        <argsstring></argsstring>
        <name>SeqParallelPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_helpers.h" line="65" column="1" bodyfile="src/vt/sequence/seq_helpers.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a99cbd4cc79e0376ab97a7868a4de7c97" prot="public" static="no">
        <type><ref refid="namespacevt_1_1seq_1ae721d4e8b95cf57a7e4169db1929e0f1" kindref="member">eSeqNodeType</ref></type>
        <definition>using vt::seq::SeqNodeEnumType = typedef eSeqNodeType</definition>
        <argsstring></argsstring>
        <name>SeqNodeEnumType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_helpers.h" line="67" column="1" bodyfile="src/vt/sequence/seq_helpers.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1aa68ba04b78f90a392a0647636b07f572" prot="public" static="no">
        <type><ref refid="namespacevt_1_1seq_1a313357c71bba2bea5c57f50d69f1edf7" kindref="member">eSeqNodeOrderType</ref></type>
        <definition>using vt::seq::SeqNodeOrderEnumType = typedef eSeqNodeOrderType</definition>
        <argsstring></argsstring>
        <name>SeqNodeOrderEnumType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_helpers.h" line="68" column="1" bodyfile="src/vt/sequence/seq_helpers.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1afe6bbf714bc77696f189e9321b981e46" prot="public" static="no">
        <type><ref refid="namespacevt_1_1seq_1ad7b0496818667d816e00f717491d3b92" kindref="member">eSeqNodeState</ref></type>
        <definition>using vt::seq::SeqNodeStateEnumType = typedef eSeqNodeState</definition>
        <argsstring></argsstring>
        <name>SeqNodeStateEnumType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_helpers.h" line="69" column="1" bodyfile="src/vt/sequence/seq_helpers.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1ae6a4874b585be0612aaca32ca6d2d191" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="structvt_1_1seq_1_1_seq_node" kindref="compound">SeqNode</ref> &gt;</type>
        <definition>using vt::seq::SeqNodePtrType = typedef std::shared_ptr&lt;SeqNode&gt;</definition>
        <argsstring></argsstring>
        <name>SeqNodePtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node_fwd.h" line="54" column="1" bodyfile="src/vt/sequence/seq_node_fwd.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a61d50713160a2f94f2f2b22eb68eb12e" prot="public" static="no">
        <type><ref refid="structvt_1_1seq_1_1_seq_msg_state" kindref="compound">SeqMsgState</ref>&lt; MessageT, f &gt;</type>
        <definition>using vt::seq::SeqStateType = typedef SeqMsgState&lt;MessageT, f&gt;</definition>
        <argsstring></argsstring>
        <name>SeqStateType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_state.h" line="82" column="1" bodyfile="src/vt/sequence/seq_state.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1seq_1a724782ea7be9de5901b428738083ea51" prot="public" static="no">
        <type><ref refid="structvt_1_1seq_1_1_seq_msg_state_virtual" kindref="compound">SeqMsgStateVirtual</ref>&lt; VcT, MsgT, f &gt;</type>
        <definition>using vt::seq::SeqStateVirtualType = typedef SeqMsgStateVirtual&lt;VcT, MsgT, f&gt;</definition>
        <argsstring></argsstring>
        <name>SeqStateVirtualType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_state_virtual.h" line="84" column="1" bodyfile="src/vt/sequence/seq_state_virtual.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1seq_1a6373b03b0dee57a36e12fd29a523b94e" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const</type>
        <definition>constexpr SeqType const vt::seq::initial_seq</definition>
        <argsstring></argsstring>
        <name>initial_seq</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="97" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1seq_1a2917d6eb68ce1fd05e17411370de40ea" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const</type>
        <definition>constexpr SeqType const vt::seq::no_seq</definition>
        <argsstring></argsstring>
        <name>no_seq</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="98" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1seq_1a29ff01bcf18d0f19fb8cbb14aeb72354" prot="public" static="yes" mutable="no">
        <type>constexpr bool const</type>
        <definition>constexpr bool const vt::seq::seq_skip_queue</definition>
        <argsstring></argsstring>
        <name>seq_skip_queue</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="108" column="1" bodyfile="src/vt/sequence/seq_common.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1seq_1a6ec5df4e79b61dafdb1f083a8f514050" prot="public" static="yes" mutable="no">
        <type>struct vt::seq::SeqNodeParentTag</type>
        <definition>struct vt::seq::SeqNodeParentTag  vt::seq::seq_node_parent_tag_t</definition>
        <argsstring></argsstring>
        <name>seq_node_parent_tag_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1seq_1ad205041e8361cc5fa322447d4e84560d" prot="public" static="yes" mutable="no">
        <type>struct vt::seq::SeqNodeLeafTag</type>
        <definition>struct vt::seq::SeqNodeLeafTag  vt::seq::seq_node_leaf_tag_t</definition>
        <argsstring></argsstring>
        <name>seq_node_leaf_tag_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1seq_1aecd799702f0bcef11d902234d4b9ad8f" prot="public" static="yes" mutable="no">
        <type>struct vt::seq::SeqNodeParallelTag</type>
        <definition>struct vt::seq::SeqNodeParallelTag  vt::seq::seq_node_parallel_tag_t</definition>
        <argsstring></argsstring>
        <name>seq_node_parallel_tag_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1seq_1a283caf3a0843ca5453f4ca29b347ddb4" prot="public" static="yes" mutable="no">
        <type>struct vt::seq::SeqNodeUniversalTag</type>
        <definition>struct vt::seq::SeqNodeUniversalTag  vt::seq::seq_node_universal_tag_t</definition>
        <argsstring></argsstring>
        <name>seq_node_universal_tag_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1seq_1a0520481fbb691af7d93bb433b0ae3b11" prot="public" static="yes" mutable="no">
        <type>struct vt::seq::SeqULTConstTag</type>
        <definition>struct vt::seq::SeqULTConstTag  vt::seq::seq_ult_cons_tag_t</definition>
        <argsstring></argsstring>
        <name>seq_ult_cons_tag_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_ult_context.h" line="60" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1seq_1a78025a51c7d218cb51512f57ea3f761a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::seq::contextualExecution</definition>
        <argsstring>(SeqType const &amp;seq, bool const &amp;is_sequenced, SeqCallableType &amp;&amp;callable)</argsstring>
        <name>contextualExecution</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>seq</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_sequenced</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1ab8c5e0c5aec2bd712a2b57e2e4553de6" kindref="member">SeqCallableType</ref> &amp;&amp;</type>
          <declname>callable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="100" column="1" bodyfile="src/vt/sequence/sequencer.cc" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1seq_1ab924e025689b220c9a7876bfecb24741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::seq::contextualExecutionVirtual</definition>
        <argsstring>(SeqType const &amp;seq, bool const &amp;is_sequenced, SeqCallableType &amp;&amp;callable)</argsstring>
        <name>contextualExecutionVirtual</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>seq</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_sequenced</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1ab8c5e0c5aec2bd712a2b57e2e4553de6" kindref="member">SeqCallableType</ref> &amp;&amp;</type>
          <declname>callable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="103" column="1" bodyfile="src/vt/sequence/sequencer.cc" bodystart="59" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1seq_1aaf4240d6148f7ce0e8f1c3bd31705685" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::enqueueAction</definition>
        <argsstring>(SeqType const &amp;id, ActionType const &amp;action)</argsstring>
        <name>enqueueAction</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_common.h" line="106" column="1" bodyfile="src/vt/sequence/sequencer_all.impl.h" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1seq_1abccaa18f7df5f19a80dcf62a489d3eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Fn</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::seq::executeSeqExpandContext</definition>
        <argsstring>(SeqType const &amp;id, SeqNodePtrType node, Fn &amp;&amp;fn)</argsstring>
        <name>executeSeqExpandContext</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1ae6a4874b585be0612aaca32ca6d2d191" kindref="member">SeqNodePtrType</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>Fn &amp;&amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node_fwd.h" line="57" column="1" bodyfile="src/vt/sequence/sequencer_all.impl.h" bodystart="54" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/sequence/seq_action.h" line="51" column="1"/>
  </compounddef>
</doxygen>
