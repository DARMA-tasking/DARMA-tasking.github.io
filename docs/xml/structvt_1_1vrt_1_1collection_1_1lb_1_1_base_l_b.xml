<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>vt::vrt::collection::lb::BaseLB</compoundname>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1replay_1_1_workload_data_migrator" prot="public" virt="non-virtual">vt::vrt::collection::balance::replay::WorkloadDataMigrator</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_load_sampler_base_l_b" prot="public" virt="non-virtual">vt::vrt::collection::lb::LoadSamplerBaseLB</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_offline_l_b" prot="public" virt="non-virtual">vt::vrt::collection::lb::OfflineLB</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_random_l_b" prot="public" virt="non-virtual">vt::vrt::collection::lb::RandomLB</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_rotate_l_b" prot="public" virt="non-virtual">vt::vrt::collection::lb::RotateLB</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_tempered_l_b" prot="public" virt="non-virtual">vt::vrt::collection::lb::TemperedLB</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_test_serialization_l_b" prot="public" virt="non-virtual">vt::vrt::collection::lb::TestSerializationLB</derivedcompoundref>
    <includes refid="baselb_8h" local="no">baselb.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a790b22acf448880599724749cdc4e9b3" prot="public" static="no">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">balance::ElementIDStruct</ref></type>
        <definition>using vt::vrt::collection::lb::BaseLB::ObjIDType =  balance::ElementIDStruct</definition>
        <argsstring></argsstring>
        <name>ObjIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="71" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1adfae019ae1d55a6bf4f080f9b455fca4" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a790b22acf448880599724749cdc4e9b3" kindref="member">ObjIDType</ref>, <ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref> &gt;</type>
        <definition>using vt::vrt::collection::lb::BaseLB::ElementLoadType =  std::unordered_map&lt;ObjIDType,LoadType&gt;</definition>
        <argsstring></argsstring>
        <name>ElementLoadType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="72" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a83eb4daec14edfb8780422e95b8e38d3" prot="public" static="no">
        <type><ref refid="namespacevt_1_1elm_1a38487cb8896b9b4763efa9022fab560e" kindref="member">elm::CommMapType</ref></type>
        <definition>using vt::vrt::collection::lb::BaseLB::ElementCommType =  elm::CommMapType</definition>
        <argsstring></argsstring>
        <name>ElementCommType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="73" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1add886785f64ea725005f1263fd1393be" prot="public" static="no">
        <type>std::tuple&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a790b22acf448880599724749cdc4e9b3" kindref="member">ObjIDType</ref>, <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> &gt;</type>
        <definition>using vt::vrt::collection::lb::BaseLB::TransferDestType =  std::tuple&lt;ObjIDType,NodeType&gt;</definition>
        <argsstring></argsstring>
        <name>TransferDestType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="74" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a329e8179ec41a1bd4924c79fe23a79af" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1add886785f64ea725005f1263fd1393be" kindref="member">TransferDestType</ref> &gt;</type>
        <definition>using vt::vrt::collection::lb::BaseLB::TransferVecType =  std::vector&lt;TransferDestType&gt;</definition>
        <argsstring></argsstring>
        <name>TransferVecType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="75" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a0a5f834082d85c558bdaf84c464c1ead" prot="public" static="no">
        <type>std::map&lt; <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a329e8179ec41a1bd4924c79fe23a79af" kindref="member">TransferVecType</ref> &gt;</type>
        <definition>using vt::vrt::collection::lb::BaseLB::TransferType =  std::map&lt;NodeType, TransferVecType&gt;</definition>
        <argsstring></argsstring>
        <name>TransferType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="76" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aba7198eb30aef1b19c1f1efdea760543" prot="public" static="no">
        <type>std::function&lt; void(int32_t)&gt;</type>
        <definition>using vt::vrt::collection::lb::BaseLB::MigrationCountCB =  std::function&lt;void(int32_t)&gt;</definition>
        <argsstring></argsstring>
        <name>MigrationCountCB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="77" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a864b2c437d81680577013741e265ef0d" prot="public" static="no">
        <type>std::map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febe" kindref="member">lb::StatisticQuantity</ref>, double &gt;</type>
        <definition>using vt::vrt::collection::lb::BaseLB::QuantityType =  std::map&lt;lb::StatisticQuantity, double&gt;</definition>
        <argsstring></argsstring>
        <name>QuantityType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="78" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1acd9bdad961ac83c96b7a227de672f96c" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1" kindref="member">lb::Statistic</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a864b2c437d81680577013741e265ef0d" kindref="member">QuantityType</ref> &gt;</type>
        <definition>using vt::vrt::collection::lb::BaseLB::StatisticMapType =  std::unordered_map&lt;lb::Statistic, QuantityType&gt;</definition>
        <argsstring></argsstring>
        <name>StatisticMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="79" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aa78583f362acc50fcca87d4ce3150151" prot="public" static="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_summary" kindref="compound">balance::LoadSummary</ref></type>
        <definition>using vt::vrt::collection::lb::BaseLB::LoadSummary =  balance::LoadSummary</definition>
        <argsstring></argsstring>
        <name>LoadSummary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="80" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ae16d5f0fe9078684bc8e4a4b86ce3a0c" prot="public" static="no">
        <type>std::vector&lt; std::tuple&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a790b22acf448880599724749cdc4e9b3" kindref="member">ObjIDType</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aa78583f362acc50fcca87d4ce3150151" kindref="member">LoadSummary</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aa78583f362acc50fcca87d4ce3150151" kindref="member">LoadSummary</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1abf9eea0f4c24e41036ab844025e7d4c8" kindref="member">balance::ElmUserDataType</ref> &gt; &gt;</type>
        <definition>using vt::vrt::collection::lb::BaseLB::ObjLoadListType =  std::vector&lt; std::tuple&lt;ObjIDType, LoadSummary, LoadSummary, balance::ElmUserDataType&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ObjLoadListType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="81" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ad50ba1022c6beeb6e9187a8f1a3e16fe" prot="public" static="no">
        <type>std::vector&lt; std::tuple&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a790b22acf448880599724749cdc4e9b3" kindref="member">ObjIDType</ref>, <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> &gt; &gt;</type>
        <definition>using vt::vrt::collection::lb::BaseLB::ObjDestinationListType =  std::vector&lt;std::tuple&lt;ObjIDType, NodeType&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ObjDestinationListType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="84" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a5df60167861bf4058c72f02f3fd39fd8" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1a2b9f28078dc309ad0706b69ded743e69" kindref="member">TimeType</ref></type>
        <definition>TimeType vt::vrt::collection::lb::BaseLB::start_time_</definition>
        <argsstring></argsstring>
        <name>start_time_</name>
        <initializer>= <ref refid="namespacevt_1a2b9f28078dc309ad0706b69ded743e69" kindref="member">TimeType</ref>{0.0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="171" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a8d519b94ce4741da7049cb2b7b513963" prot="protected" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a83eb4daec14edfb8780422e95b8e38d3" kindref="member">ElementCommType</ref> const  *</type>
        <definition>ElementCommType const* vt::vrt::collection::lb::BaseLB::comm_data</definition>
        <argsstring></argsstring>
        <name>comm_data</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="172" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ab5cfe4d0cb73397c5ffe937f119bc71a" prot="protected" static="no" mutable="no">
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">objgroup::proxy::Proxy</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b" kindref="compound">BaseLB</ref> &gt;</type>
        <definition>objgroup::proxy::Proxy&lt;BaseLB&gt; vt::vrt::collection::lb::BaseLB::proxy_</definition>
        <argsstring></argsstring>
        <name>proxy_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="173" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a9bb7a04d3ef1012c95322d8375593498" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
        <definition>PhaseType vt::vrt::collection::lb::BaseLB::phase_</definition>
        <argsstring></argsstring>
        <name>phase_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="174" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aab09edd9a749b42a32c5de15001e7774" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_config_entry" kindref="compound">balance::ConfigEntry</ref> &gt;</type>
        <definition>std::unique_ptr&lt;balance::ConfigEntry&gt; vt::vrt::collection::lb::BaseLB::config_entry_</definition>
        <argsstring></argsstring>
        <name>config_entry_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="175" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ae6cd8bdf27d81dc55f9eec9038b347dc" prot="protected" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" kindref="compound">balance::LoadModel</ref> *</type>
        <definition>balance::LoadModel* vt::vrt::collection::lb::BaseLB::load_model_</definition>
        <argsstring></argsstring>
        <name>load_model_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="177" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a0b7eb81cc499a7cd7c1a6fd1f6a3c8fe" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::lb::BaseLB::comm_aware_</definition>
        <argsstring></argsstring>
        <name>comm_aware_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="178" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a815315640fe4e41e39d1872e115b8574" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a329e8179ec41a1bd4924c79fe23a79af" kindref="member">TransferVecType</ref></type>
        <definition>TransferVecType vt::vrt::collection::lb::BaseLB::transfers_</definition>
        <argsstring></argsstring>
        <name>transfers_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="219" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aa6e16e52738ab5d6f85be39641db94bd" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a0a5f834082d85c558bdaf84c464c1ead" kindref="member">TransferType</ref></type>
        <definition>TransferType vt::vrt::collection::lb::BaseLB::off_node_migrate_</definition>
        <argsstring></argsstring>
        <name>off_node_migrate_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="220" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ae2beaf58c52b6ac2ccca8ab0c266f203" prot="private" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t vt::vrt::collection::lb::BaseLB::local_migration_count_</definition>
        <argsstring></argsstring>
        <name>local_migration_count_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="221" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a7e0feda368b0cc0df0828a73c3b75883" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aba7198eb30aef1b19c1f1efdea760543" kindref="member">MigrationCountCB</ref></type>
        <definition>MigrationCountCB vt::vrt::collection::lb::BaseLB::migration_count_cb_</definition>
        <argsstring></argsstring>
        <name>migration_count_cb_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="222" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aae83b83b87e2dea3d44861bd3fb1fde8" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1acd9bdad961ac83c96b7a227de672f96c" kindref="member">StatisticMapType</ref> const  *</type>
        <definition>StatisticMapType const* vt::vrt::collection::lb::BaseLB::base_stats_</definition>
        <argsstring></argsstring>
        <name>base_stats_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="223" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ab80f56f3a1930dcb5ea58a813145bc39" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_reassignment" kindref="compound">balance::Reassignment</ref> &gt;</type>
        <definition>std::shared_ptr&lt;balance::Reassignment&gt; vt::vrt::collection::lb::BaseLB::pending_reassignment_</definition>
        <argsstring></argsstring>
        <name>pending_reassignment_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="224" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a96ad04c03781fc057dbfb9049f67530f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::lb::BaseLB::BaseLB</definition>
        <argsstring>(bool in_comm_aware=false)</argsstring>
        <name>BaseLB</name>
        <param>
          <type>bool</type>
          <declname>in_comm_aware</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="86" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1af34c68c8ecf1341189a67c3405036d16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::lb::BaseLB::BaseLB</definition>
        <argsstring>(BaseLB const &amp;)=delete</argsstring>
        <name>BaseLB</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b" kindref="compound">BaseLB</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a1d1ae8a311e14e27b26624caee930535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::lb::BaseLB::BaseLB</definition>
        <argsstring>(BaseLB &amp;&amp;) noexcept=default</argsstring>
        <name>BaseLB</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b" kindref="compound">BaseLB</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a94be0abcbc47bf6a3f3685f94dd5d4cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b" kindref="compound">BaseLB</ref> &amp;</type>
        <definition>BaseLB&amp; vt::vrt::collection::lb::BaseLB::operator=</definition>
        <argsstring>(BaseLB const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b" kindref="compound">BaseLB</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a1e092a34c8e4eda0a05ab3a2f5a9ae45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b" kindref="compound">BaseLB</ref> &amp;</type>
        <definition>BaseLB&amp; vt::vrt::collection::lb::BaseLB::operator=</definition>
        <argsstring>(BaseLB &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b" kindref="compound">BaseLB</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a2d4e31b7ae227886a24443334114269e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vt::vrt::collection::lb::BaseLB::~BaseLB</definition>
        <argsstring>()=default</argsstring>
        <name>~BaseLB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a17e2cdb89806df4fbdcd579fa015f816" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; const <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_reassignment" kindref="compound">balance::Reassignment</ref> &gt;</type>
        <definition>std::shared_ptr&lt; const balance::Reassignment &gt; vt::vrt::collection::lb::BaseLB::startLB</definition>
        <argsstring>(PhaseType phase, objgroup::proxy::Proxy&lt; BaseLB &gt; proxy, balance::LoadModel *model, StatisticMapType const &amp;in_stats, ElementCommType const &amp;in_comm_lb_data, LoadType total_load, balance::DataMapType const &amp;in_data_map)</argsstring>
        <name>startLB</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">objgroup::proxy::Proxy</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b" kindref="compound">BaseLB</ref> &gt;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" kindref="compound">balance::LoadModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1acd9bdad961ac83c96b7a227de672f96c" kindref="member">StatisticMapType</ref> const &amp;</type>
          <declname>in_stats</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a83eb4daec14edfb8780422e95b8e38d3" kindref="member">ElementCommType</ref> const &amp;</type>
          <declname>in_comm_lb_data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref></type>
          <declname>total_load</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1acf152c668ed9e2e9c6b29784181d2435" kindref="member">balance::DataMapType</ref> const &amp;</type>
          <declname>in_data_map</declname>
        </param>
        <briefdescription>
<para>This sets up and invokes the particular strategy implementations through virtual methods <computeroutput>initParams</computeroutput> and <computeroutput>runLB</computeroutput>, and then normalizes their output to a reassignment that can be evaluated and applied. </para>        </briefdescription>
        <detaileddescription>
<para>This must be called collectively.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase we are load balancing </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the base proxy </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model</parametername>
</parameternamelist>
<parameterdescription>
<para>the load model </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_stats</parametername>
</parameternamelist>
<parameterdescription>
<para>LB statistics </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_comm_lb_data</parametername>
</parameternamelist>
<parameterdescription>
<para>comm map data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">total_load</parametername>
</parameternamelist>
<parameterdescription>
<para>total modeled load for this rank </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_data_map</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-defined data map</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A normalized reassignment </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="116" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.cc" bodystart="63" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1acdf39bf5a6d72d1f9e36c9a0508992fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::lb::BaseLB::importProcessorData</definition>
        <argsstring>(StatisticMapType const &amp;in_stats, ElementCommType const &amp;cm, balance::DataMapType const &amp;in_data_map)</argsstring>
        <name>importProcessorData</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1acd9bdad961ac83c96b7a227de672f96c" kindref="member">StatisticMapType</ref> const &amp;</type>
          <declname>in_stats</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a83eb4daec14edfb8780422e95b8e38d3" kindref="member">ElementCommType</ref> const &amp;</type>
          <declname>cm</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1acf152c668ed9e2e9c6b29784181d2435" kindref="member">balance::DataMapType</ref> const &amp;</type>
          <declname>in_data_map</declname>
        </param>
        <briefdescription>
<para>Import processor data to the base LB. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_stats</parametername>
</parameternamelist>
<parameterdescription>
<para>statistics </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cm</parametername>
</parameternamelist>
<parameterdescription>
<para>the comm map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_data_map</parametername>
</parameternamelist>
<parameterdescription>
<para>user-defined data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="133" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.cc" bodystart="94" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a0f3cd0272069ff5fb31d6539c567efeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::lb::BaseLB::notifyCurrentHostNodeOfObjectsDeparting</definition>
        <argsstring>(TransferMsg&lt; ObjDestinationListType &gt; *msg)</argsstring>
        <name>notifyCurrentHostNodeOfObjectsDeparting</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_transfer_msg" kindref="compound">TransferMsg</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ad50ba1022c6beeb6e9187a8f1a3e16fe" kindref="member">ObjDestinationListType</ref> &gt; *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="138" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.cc" bodystart="217" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a2bab9ccb4d2378b3915b03c79d5b18c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::lb::BaseLB::notifyNewHostNodeOfObjectsArriving</definition>
        <argsstring>(TransferMsg&lt; ObjLoadListType &gt; *msg)</argsstring>
        <name>notifyNewHostNodeOfObjectsArriving</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_transfer_msg" kindref="compound">TransferMsg</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ae16d5f0fe9078684bc8e4a4b86ce3a0c" kindref="member">ObjLoadListType</ref> &gt; *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="141" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.cc" bodystart="226" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a82c6f98e4294a85e7599964c01fdb1b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref></type>
        <definition>LoadType vt::vrt::collection::lb::BaseLB::loadMilli</definition>
        <argsstring>(LoadType const &amp;load)</argsstring>
        <name>loadMilli</name>
        <param>
          <type><ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref> const &amp;</type>
          <declname>load</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="145" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.cc" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aa19210106d6f44ea03b446c7f6a92cb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::lb::BaseLB::applyMigrations</definition>
        <argsstring>(TransferVecType const &amp;transfers, MigrationCountCB migration_count_callback)</argsstring>
        <name>applyMigrations</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a329e8179ec41a1bd4924c79fe23a79af" kindref="member">TransferVecType</ref> const &amp;</type>
          <declname>transfers</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aba7198eb30aef1b19c1f1efdea760543" kindref="member">MigrationCountCB</ref></type>
          <declname>migration_count_callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ac8ed2cc09aec1f84e179ba734da71960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::lb::BaseLB::migrationDone</definition>
        <argsstring>()</argsstring>
        <name>migrationDone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a952846044ca0d13d25ca828b84112d0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::lb::BaseLB::migrateObjectTo</definition>
        <argsstring>(ObjIDType const obj_id, NodeType const node)</argsstring>
        <name>migrateObjectTo</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a790b22acf448880599724749cdc4e9b3" kindref="member">ObjIDType</ref> const</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="151" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.cc" bodystart="243" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1af8d95bc056659de7121bca99ce2d9d73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::lb::BaseLB::transferSend</definition>
        <argsstring>(NodeType from, TransferVecType const &amp;transfer)</argsstring>
        <name>transferSend</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a329e8179ec41a1bd4924c79fe23a79af" kindref="member">TransferVecType</ref> const &amp;</type>
          <declname>transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1adb9e1197bc690340bc1a4a6c77ac5254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::lb::BaseLB::transferMigrations</definition>
        <argsstring>(TransferMsg&lt; TransferVecType &gt; *msg)</argsstring>
        <name>transferMigrations</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_transfer_msg" kindref="compound">TransferMsg</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a329e8179ec41a1bd4924c79fe23a79af" kindref="member">TransferVecType</ref> &gt; *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1af434b83087858c78365c168fa849055b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::lb::BaseLB::finalize</definition>
        <argsstring>(int32_t global_count)</argsstring>
        <name>finalize</name>
        <param>
          <type>int32_t</type>
          <declname>global_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="154" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.cc" bodystart="249" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1acf56a0cc29f5e00c0dccf2003baa2f43" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vt::vrt::collection::lb::BaseLB::inputParams</definition>
        <argsstring>(balance::ConfigEntry *config)=0</argsstring>
        <name>inputParams</name>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_random_l_b_1a19a7f9317660253f4fd7f3883c2e4e96">inputParams</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_test_serialization_l_b_1a6d1150f9af14ef8ab51235eaed94c6bf">inputParams</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_tempered_w_min_1a0dd469ab6f3f8aebebf55c773df099ce">inputParams</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_rotate_l_b_1a39b5c8882b32f8a50be30cf2f3fd8fab">inputParams</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_hierarchical_l_b_1a2ef293b1f626aa50e4ac4dd7ed12915c">inputParams</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_tempered_l_b_1aec119d63f5af1ce923578b70204ee622">inputParams</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_greedy_l_b_1a162618c3e7867f9d3e97173a675e5a90">inputParams</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1replay_1_1_workload_data_migrator_1a768dc464610fec4cc39e20c055081c28">inputParams</reimplementedby>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_config_entry" kindref="compound">balance::ConfigEntry</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aa957038bb132ac29fb61535487f0604f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vt::vrt::collection::lb::BaseLB::runLB</definition>
        <argsstring>(LoadType total_load)=0</argsstring>
        <name>runLB</name>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_random_l_b_1a9cf59256d2c69208326310f3f8dcd3e8">runLB</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_test_serialization_l_b_1afb9f6848d8ea2432e2121a32aee56d54">runLB</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_offline_l_b_1ad6b473ed506c50b86e308fc9840a11d7">runLB</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_rotate_l_b_1a3266fa43e0459b57466d9e184aeae2f7">runLB</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_hierarchical_l_b_1a4abe2f02571b4495033e70e75ca67afe">runLB</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_tempered_l_b_1ace1513a46b9b5c195648262c5cc48783">runLB</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_greedy_l_b_1abe03de3d4ee3b1259707a9d5b22a7b9c">runLB</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1replay_1_1_workload_data_migrator_1a5de7ab375cff13a695c86523765904fa">runLB</reimplementedby>
        <param>
          <type><ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref></type>
          <declname>total_load</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a8e3d3231dc49c55c1c494a5e5957baa1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1acd9bdad961ac83c96b7a227de672f96c" kindref="member">StatisticMapType</ref> const  *</type>
        <definition>StatisticMapType const* vt::vrt::collection::lb::BaseLB::getStats</definition>
        <argsstring>() const</argsstring>
        <name>getStats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="159" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ace9ba67a70c21b1198feee35827eea11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a329e8179ec41a1bd4924c79fe23a79af" kindref="member">TransferVecType</ref> &amp;</type>
        <definition>TransferVecType&amp; vt::vrt::collection::lb::BaseLB::getTransfers</definition>
        <argsstring>()</argsstring>
        <name>getTransfers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="163" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a7ea645705b9a7bded2ab8551dd261d26" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::collection::lb::BaseLB::isCommAware</definition>
        <argsstring>() const</argsstring>
        <name>isCommAware</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="165" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a5fc35b2b0fb14da5a44b124b4dc8fbc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::lb::BaseLB::recvSharedEdges</definition>
        <argsstring>(CommMsg *msg)</argsstring>
        <name>recvSharedEdges</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_comm_msg" kindref="compound">CommMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="166" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.cc" bodystart="268" bodyend="282"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a4ec045a3c6231d055b6e851de3016bba" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::lb::BaseLB::getArgs</definition>
        <argsstring>(PhaseType phase)</argsstring>
        <name>getArgs</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="169" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.cc" bodystart="108" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a9ecdb512cc5a87d637e48ab8d5b49b43" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; const <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_reassignment" kindref="compound">balance::Reassignment</ref> &gt;</type>
        <definition>std::shared_ptr&lt; const balance::Reassignment &gt; vt::vrt::collection::lb::BaseLB::normalizeReassignments</definition>
        <argsstring>()</argsstring>
        <name>normalizeReassignments</name>
        <briefdescription>
<para>Normalizes the reassignment graph by setting up in/out edges on both sides regardless of how they are passed to <computeroutput>migrateObjectTo</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A normalized reassignment </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="186" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.cc" bodystart="127" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a01c7d1aaf1bd806249f3ea0f2ebf19f6" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto vt::vrt::collection::lb::BaseLB::getCollectiveEpochCost</definition>
        <argsstring>() const</argsstring>
        <name>getCollectiveEpochCost</name>
        <briefdescription>
<para>Get the estimated time needed for load-balancing. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the estimated time </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="197" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a5ec697fdb24de2be20a754086d156d8f" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::collection::lb::BaseLB::maxLoadExceedsLBCost</definition>
        <argsstring>() const</argsstring>
        <name>maxLoadExceedsLBCost</name>
        <briefdescription>
<para>Check if load-balancing should be done. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true when the maximum load exceeds the cost of load balancing; false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="206" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="206" bodyend="216"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1abe5e30efbdb728854de25beb605189ae" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::lb::BaseLB::setStrategySpecificModel</definition>
        <argsstring>(std::shared_ptr&lt; balance::LoadModel &gt; model)</argsstring>
        <name>setStrategySpecificModel</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" kindref="compound">balance::LoadModel</ref> &gt;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="188" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.cc" bodystart="284" bodyend="288"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="370">
        <label>vt::vrt::collection::lb::TestSerializationLB</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_test_serialization_l_b"/>
        <childnode refid="360" relation="public-inheritance">
        </childnode>
      </node>
      <node id="360">
        <label>vt::vrt::collection::lb::BaseLB</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b"/>
      </node>
      <node id="368">
        <label>vt::vrt::collection::lb::TemperedLB</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_tempered_l_b"/>
        <childnode refid="360" relation="public-inheritance">
        </childnode>
      </node>
      <node id="364">
        <label>vt::vrt::collection::lb::HierarchicalLB</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_hierarchical_l_b"/>
        <childnode refid="362" relation="public-inheritance">
        </childnode>
      </node>
      <node id="366">
        <label>vt::vrt::collection::lb::RandomLB</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_random_l_b"/>
        <childnode refid="360" relation="public-inheritance">
        </childnode>
      </node>
      <node id="367">
        <label>vt::vrt::collection::lb::RotateLB</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_rotate_l_b"/>
        <childnode refid="360" relation="public-inheritance">
        </childnode>
      </node>
      <node id="361">
        <label>vt::vrt::collection::balance::replay::WorkloadDataMigrator</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1replay_1_1_workload_data_migrator"/>
        <childnode refid="360" relation="public-inheritance">
        </childnode>
      </node>
      <node id="362">
        <label>vt::vrt::collection::lb::LoadSamplerBaseLB</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_load_sampler_base_l_b"/>
        <childnode refid="360" relation="public-inheritance">
        </childnode>
      </node>
      <node id="369">
        <label>vt::vrt::collection::lb::TemperedWMin</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_tempered_w_min"/>
        <childnode refid="368" relation="public-inheritance">
        </childnode>
      </node>
      <node id="363">
        <label>vt::vrt::collection::lb::GreedyLB</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_greedy_l_b"/>
        <childnode refid="362" relation="public-inheritance">
        </childnode>
      </node>
      <node id="365">
        <label>vt::vrt::collection::lb::OfflineLB</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_offline_l_b"/>
        <childnode refid="360" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="371">
        <label>vt::vrt::collection::lb::BaseLB</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b"/>
        <childnode refid="372" relation="usage">
          <edgelabel>load_model_</edgelabel>
        </childnode>
        <childnode refid="373" relation="usage">
          <edgelabel>proxy_</edgelabel>
        </childnode>
        <childnode refid="374" relation="usage">
          <edgelabel>start_time_</edgelabel>
        </childnode>
      </node>
      <node id="374">
        <label>vt::TimeTypeWrapper</label>
        <link refid="structvt_1_1_time_type_wrapper"/>
      </node>
      <node id="372">
        <label>vt::vrt::collection::balance::LoadModel</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model"/>
      </node>
      <node id="373">
        <label>vt::objgroup::proxy::Proxy&lt; vt::vrt::collection::lb::BaseLB &gt;</label>
        <link refid="structvt_1_1objgroup_1_1proxy_1_1_proxy"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/balance/baselb/baselb.h" line="70" column="1" bodyfile="src/vt/vrt/collection/balance/baselb/baselb.h" bodystart="70" bodyend="225"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aa19210106d6f44ea03b446c7f6a92cb1" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>applyMigrations</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aae83b83b87e2dea3d44861bd3fb1fde8" prot="private" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>base_stats_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a96ad04c03781fc057dbfb9049f67530f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>BaseLB</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1af34c68c8ecf1341189a67c3405036d16" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>BaseLB</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a1d1ae8a311e14e27b26624caee930535" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>BaseLB</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a0b7eb81cc499a7cd7c1a6fd1f6a3c8fe" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>comm_aware_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a8d519b94ce4741da7049cb2b7b513963" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>comm_data</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aab09edd9a749b42a32c5de15001e7774" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>config_entry_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a83eb4daec14edfb8780422e95b8e38d3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>ElementCommType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1adfae019ae1d55a6bf4f080f9b455fca4" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>ElementLoadType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1af434b83087858c78365c168fa849055b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>finalize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a4ec045a3c6231d055b6e851de3016bba" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>getArgs</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a01c7d1aaf1bd806249f3ea0f2ebf19f6" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>getCollectiveEpochCost</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a8e3d3231dc49c55c1c494a5e5957baa1" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>getStats</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ace9ba67a70c21b1198feee35827eea11" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>getTransfers</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1acdf39bf5a6d72d1f9e36c9a0508992fc" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>importProcessorData</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1acf56a0cc29f5e00c0dccf2003baa2f43" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>inputParams</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a7ea645705b9a7bded2ab8551dd261d26" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>isCommAware</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ae6cd8bdf27d81dc55f9eec9038b347dc" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>load_model_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a82c6f98e4294a85e7599964c01fdb1b9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>loadMilli</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aa78583f362acc50fcca87d4ce3150151" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>LoadSummary</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ae2beaf58c52b6ac2ccca8ab0c266f203" prot="private" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>local_migration_count_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a5ec697fdb24de2be20a754086d156d8f" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>maxLoadExceedsLBCost</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a952846044ca0d13d25ca828b84112d0e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>migrateObjectTo</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a7e0feda368b0cc0df0828a73c3b75883" prot="private" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>migration_count_cb_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aba7198eb30aef1b19c1f1efdea760543" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>MigrationCountCB</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ac8ed2cc09aec1f84e179ba734da71960" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>migrationDone</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a9ecdb512cc5a87d637e48ab8d5b49b43" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>normalizeReassignments</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a0f3cd0272069ff5fb31d6539c567efeb" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>notifyCurrentHostNodeOfObjectsDeparting</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a2bab9ccb4d2378b3915b03c79d5b18c2" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>notifyNewHostNodeOfObjectsArriving</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ad50ba1022c6beeb6e9187a8f1a3e16fe" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>ObjDestinationListType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a790b22acf448880599724749cdc4e9b3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>ObjIDType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ae16d5f0fe9078684bc8e4a4b86ce3a0c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>ObjLoadListType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aa6e16e52738ab5d6f85be39641db94bd" prot="private" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>off_node_migrate_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a94be0abcbc47bf6a3f3685f94dd5d4cb" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>operator=</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a1e092a34c8e4eda0a05ab3a2f5a9ae45" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>operator=</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ab80f56f3a1930dcb5ea58a813145bc39" prot="private" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>pending_reassignment_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a9bb7a04d3ef1012c95322d8375593498" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>phase_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1ab5cfe4d0cb73397c5ffe937f119bc71a" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>proxy_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a864b2c437d81680577013741e265ef0d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>QuantityType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a5fc35b2b0fb14da5a44b124b4dc8fbc9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>recvSharedEdges</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1aa957038bb132ac29fb61535487f0604f" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>runLB</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1abe5e30efbdb728854de25beb605189ae" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>setStrategySpecificModel</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a5df60167861bf4058c72f02f3fd39fd8" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>start_time_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a17e2cdb89806df4fbdcd579fa015f816" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>startLB</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1acd9bdad961ac83c96b7a227de672f96c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>StatisticMapType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1add886785f64ea725005f1263fd1393be" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>TransferDestType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1adb9e1197bc690340bc1a4a6c77ac5254" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>transferMigrations</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a815315640fe4e41e39d1872e115b8574" prot="private" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>transfers_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1af8d95bc056659de7121bca99ce2d9d73" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>transferSend</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a0a5f834082d85c558bdaf84c464c1ead" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>TransferType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a329e8179ec41a1bd4924c79fe23a79af" prot="public" virt="non-virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>TransferVecType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a2d4e31b7ae227886a24443334114269e" prot="public" virt="virtual"><scope>vt::vrt::collection::lb::BaseLB</scope><name>~BaseLB</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
