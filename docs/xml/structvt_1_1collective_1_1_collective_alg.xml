<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1collective_1_1_collective_alg" kind="struct" language="C++" prot="public">
    <compoundname>vt::collective::CollectiveAlg</compoundname>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component" prot="public" virt="non-virtual">vt::runtime::component::Component&lt; CollectiveAlg &gt;</basecompoundref>
    <basecompoundref refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager" prot="public" virt="virtual">vt::collective::reduce::ReduceManager</basecompoundref>
    <basecompoundref refid="structvt_1_1collective_1_1barrier_1_1_barrier" prot="public" virt="virtual">vt::collective::barrier::Barrier</basecompoundref>
    <basecompoundref refid="structvt_1_1collective_1_1scatter_1_1_scatter" prot="public" virt="virtual">vt::collective::scatter::Scatter</basecompoundref>
    <includes refid="collective__alg_8h" local="no">collective_alg.h</includes>
    <innerclass refid="structvt_1_1collective_1_1_collective_alg_1_1_collective_msg" prot="private">vt::collective::CollectiveAlg::CollectiveMsg</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structvt_1_1collective_1_1_collective_alg_1abf644b20fe35cf654f5d4a6702ef5183" prot="private" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref>, std::unique_ptr&lt; <ref refid="structvt_1_1collective_1_1detail_1_1_scope_impl" kindref="compound">detail::ScopeImpl</ref> &gt; &gt;</type>
        <definition>using vt::collective::CollectiveAlg::ScopeMapType =  std::unordered_map&lt;TagType, std::unique_ptr&lt;detail::ScopeImpl&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ScopeMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="156" column="1" bodyfile="src/vt/collective/collective_alg.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1collective_1_1_collective_alg_1a915db0886f5b77be011e5a55413319f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct CollectiveScope</definition>
        <argsstring></argsstring>
        <name>CollectiveScope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="115" column="1" bodyfile="src/vt/collective/collective_alg.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1collective_1_1_collective_alg_1ad830a204e2989b28cc90d54e83f518b5" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref></type>
        <definition>TagType vt::collective::CollectiveAlg::next_system_scope_</definition>
        <argsstring></argsstring>
        <name>next_system_scope_</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The next system allocated scope </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="158" column="1" bodyfile="src/vt/collective/collective_alg.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1collective_1_1_collective_alg_1a72bb12e5bbe0c52e867c81e76db318d9" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1collective_1_1_collective_alg_1abf644b20fe35cf654f5d4a6702ef5183" kindref="member">ScopeMapType</ref></type>
        <definition>ScopeMapType vt::collective::CollectiveAlg::user_scope_</definition>
        <argsstring></argsstring>
        <name>user_scope_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Live scopes with user tag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="159" column="1" bodyfile="src/vt/collective/collective_alg.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1collective_1_1_collective_alg_1a947ce4f129e1cf626da031595fe5df5c" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1collective_1_1_collective_alg_1abf644b20fe35cf654f5d4a6702ef5183" kindref="member">ScopeMapType</ref></type>
        <definition>ScopeMapType vt::collective::CollectiveAlg::system_scope_</definition>
        <argsstring></argsstring>
        <name>system_scope_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Live scopes with system tag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="160" column="1" bodyfile="src/vt/collective/collective_alg.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1collective_1_1_collective_alg_1ac6db64bfd14e19d0a31f69a349a452c5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; <ref refid="structvt_1_1collective_1_1_collective_alg_1_1_collective_msg" kindref="compound">CollectiveMsg</ref> &gt; &gt;</type>
        <definition>std::vector&lt;MsgSharedPtr&lt;CollectiveMsg&gt; &gt; vt::collective::CollectiveAlg::postponed_collectives_</definition>
        <argsstring></argsstring>
        <name>postponed_collectives_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="161" column="1" bodyfile="src/vt/collective/collective_alg.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1collective_1_1_collective_alg_1aa137479fb6afcfa33e73592ea3cbbcd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::collective::CollectiveAlg::CollectiveAlg</definition>
        <argsstring>()</argsstring>
        <name>CollectiveAlg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="94" column="1" bodyfile="src/vt/collective/collective_alg.cc" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1_collective_alg_1a81788afa34bc094c9f71fef8681aefb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string vt::collective::CollectiveAlg::name</definition>
        <argsstring>() override</argsstring>
        <name>name</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_name_1a33c06229bb605a2b2ceff68830d6d773">name</reimplements>
        <briefdescription>
<para>Get the name of the component. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="100" column="1" bodyfile="src/vt/collective/collective_alg.h" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1_collective_alg_1a6f2b4c832a5cc11cb7dfc238ecd48edf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1collective_1_1_collective_scope" kindref="compound">CollectiveScope</ref></type>
        <definition>CollectiveScope vt::collective::CollectiveAlg::makeCollectiveScope</definition>
        <argsstring>(TagType scope_tag=no_tag)</argsstring>
        <name>makeCollectiveScope</name>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref></type>
          <declname>scope_tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
<para>Create a new scope for sequenced MPI operations. Each scope has a distinct, independent collective sequence of operations. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>integer identifier (default value means allocate a new system scope)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new collective scope with sequenced operations </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="112" column="1" bodyfile="src/vt/collective/collective_alg.cc" bodystart="58" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1_collective_alg_1ae57f4f34b34540d652c15f5dffeae54c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::collective::CollectiveAlg::isDeallocated</definition>
        <argsstring>(bool is_user_tag, TagType scope_bits) const</argsstring>
        <name>isDeallocated</name>
        <param>
          <type>bool</type>
          <declname>is_user_tag</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref></type>
          <declname>scope_bits</declname>
        </param>
        <briefdescription>
<para>Check if a scope has been deallocated. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="note"><para>Used for testing purposes</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_user_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it&apos;s a user-tagged scope </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scope_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>the scope bits</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it is deallocated </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="145" column="1" bodyfile="src/vt/collective/collective_alg.cc" bodystart="78" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1_collective_alg_1a6b1e5e821093eb7fb312c440e90c14ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::collective::CollectiveAlg::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="148" column="1" bodyfile="src/vt/collective/collective_alg.h" bodystart="148" bodyend="153"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structvt_1_1collective_1_1_collective_alg_1a9ed7397e91a18458c3a578be3605baa9" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::collective::CollectiveAlg::runCollective</definition>
        <argsstring>(CollectiveMsg *msg)</argsstring>
        <name>runCollective</name>
        <param>
          <type><ref refid="structvt_1_1collective_1_1_collective_alg_1_1_collective_msg" kindref="compound">CollectiveMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="132" column="1" bodyfile="src/vt/collective/collective_alg.cc" bodystart="137" bodyend="234"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Perform asynchronous collectives within VT. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="structvt_1_1collective_1_1_collective_alg" kindref="compound">CollectiveAlg</ref> is a core VT component that provides the ability to perform reductions, scatters, barriers, and safe MPI (collective) operations while inside a VT handler. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="909">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="910" relation="public-inheritance">
        </childnode>
        <childnode refid="913" relation="public-inheritance">
        </childnode>
        <childnode refid="914" relation="public-inheritance">
        </childnode>
      </node>
      <node id="918">
        <label>vt::collective::scatter::Scatter</label>
        <link refid="structvt_1_1collective_1_1scatter_1_1_scatter"/>
        <childnode refid="917" relation="public-inheritance">
        </childnode>
      </node>
      <node id="912">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="907">
        <label>vt::collective::CollectiveAlg</label>
        <link refid="structvt_1_1collective_1_1_collective_alg"/>
        <childnode refid="908" relation="public-inheritance">
        </childnode>
        <childnode refid="915" relation="public-inheritance">
        </childnode>
        <childnode refid="916" relation="public-inheritance">
        </childnode>
        <childnode refid="918" relation="public-inheritance">
        </childnode>
      </node>
      <node id="915">
        <label>vt::collective::reduce::ReduceManager</label>
        <link refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager"/>
      </node>
      <node id="910">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="911" relation="public-inheritance">
        </childnode>
        <childnode refid="912" relation="public-inheritance">
        </childnode>
      </node>
      <node id="911">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="916">
        <label>vt::collective::barrier::Barrier</label>
        <link refid="structvt_1_1collective_1_1barrier_1_1_barrier"/>
        <childnode refid="917" relation="public-inheritance">
        </childnode>
      </node>
      <node id="913">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="914">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="917">
        <label>vt::collective::tree::Tree</label>
        <link refid="structvt_1_1collective_1_1tree_1_1_tree"/>
      </node>
      <node id="908">
        <label>vt::runtime::component::Component&lt; CollectiveAlg &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="909" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="921">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="922" relation="public-inheritance">
        </childnode>
        <childnode refid="925" relation="public-inheritance">
        </childnode>
        <childnode refid="926" relation="public-inheritance">
        </childnode>
      </node>
      <node id="931">
        <label>vt::collective::scatter::Scatter</label>
        <link refid="structvt_1_1collective_1_1scatter_1_1_scatter"/>
        <childnode refid="930" relation="public-inheritance">
        </childnode>
      </node>
      <node id="924">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="928">
        <label>vt::collective::reduce::detail::ReduceScopeHolder&lt; ReducePtrType &gt;</label>
        <link refid="structvt_1_1collective_1_1reduce_1_1detail_1_1_reduce_scope_holder"/>
      </node>
      <node id="919">
        <label>vt::collective::CollectiveAlg</label>
        <link refid="structvt_1_1collective_1_1_collective_alg"/>
        <childnode refid="920" relation="public-inheritance">
        </childnode>
        <childnode refid="927" relation="public-inheritance">
        </childnode>
        <childnode refid="929" relation="public-inheritance">
        </childnode>
        <childnode refid="931" relation="public-inheritance">
        </childnode>
      </node>
      <node id="927">
        <label>vt::collective::reduce::ReduceManager</label>
        <link refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager"/>
        <childnode refid="928" relation="usage">
          <edgelabel>reducers_</edgelabel>
        </childnode>
      </node>
      <node id="922">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="923" relation="public-inheritance">
        </childnode>
        <childnode refid="924" relation="public-inheritance">
        </childnode>
      </node>
      <node id="923">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="929">
        <label>vt::collective::barrier::Barrier</label>
        <link refid="structvt_1_1collective_1_1barrier_1_1_barrier"/>
        <childnode refid="930" relation="public-inheritance">
        </childnode>
      </node>
      <node id="925">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="926">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="930">
        <label>vt::collective::tree::Tree</label>
        <link refid="structvt_1_1collective_1_1tree_1_1_tree"/>
      </node>
      <node id="920">
        <label>vt::runtime::component::Component&lt; CollectiveAlg &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="921" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/collective/collective_alg.h" line="81" column="1" bodyfile="src/vt/collective/collective_alg.h" bodystart="76" bodyend="162"/>
    <listofallmembers>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1a05124050c7d353a4f3475ee1875dd46a" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>barrier</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1aa69e5135299fa366a2c59ac96a9f318d" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>Barrier</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1a962a1cbd78c359e1dee7a8e7df5cfd75" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>barrierDown</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1a81c35871762c47ea8901fe70ac9b8082" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>barrierDown</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1a9b612818f7b44ca65f2caee0dee094f3" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>BarrierStateType</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1a21adace64047e0e773fb4b55846aab2e" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>barrierThen</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1a3f1be86145f4b0fe20d6ffd67a285e53" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>barrierThen</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1a79096d77724cb095c08696e8af673dfb" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>barrierUp</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1ab229e28e7dea8c0dcdaf07b13173984d" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>barrierUp</name></member>
      <member refid="structvt_1_1collective_1_1_collective_alg_1aa137479fb6afcfa33e73592ea3cbbcd8" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>CollectiveAlg</name></member>
      <member refid="structvt_1_1collective_1_1_collective_alg_1a915db0886f5b77be011e5a55413319f5" prot="private" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>CollectiveScope</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ab954824329584814bb652ea810cd62e3" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1a94c1d493860adff6ae69c5eb31bb3f" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1ac9c39c6eafc72a1a240ed67ea12b3e66" prot="protected" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>component_id_</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1a84bfbd26a48a1c3bb7272e81245e4873" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>ContainerType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ad95ea698535524d0f82c5da9beaaaf37" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>DiagnosticBasePtrType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695" prot="public" virt="virtual"><scope>vt::collective::CollectiveAlg</scope><name>dumpState</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a098e362de01af6054e5491fba671a959" prot="public" virt="virtual"><scope>vt::collective::CollectiveAlg</scope><name>finalize</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ad5546485f90dd449a203f174b1374a01" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>foreachChild</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a8200f03bf19b18b2323d1fcb99d5335f" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>foreachChild</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a1d6951af40ad0b4020860c0b21b1a85c" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>foreachDiagnostic</name></member>
      <member refid="structvt_1_1collective_1_1scatter_1_1_scatter_1a4040244e8ed36afd5d408c27efceea1b" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>FuncDataType</name></member>
      <member refid="structvt_1_1collective_1_1scatter_1_1_scatter_1a977d895e42999a4078c6705ac851f447" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>FuncSizeType</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a57b3edade6230de16232213b7c4380f5" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>getChildren</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a39e27b1538bf00674a5a653dfd7a0e83" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>getChildren</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1a45ab90398777ffdbb2ad5b62fe183d99" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>getComponentID</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a9c1f4174ac87bb6ae0ec186a08adbbbb" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>getDiagnosticsFootprint</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ad68dc6aac90193cc15955d7bd1a5b1fc" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>getNumChildren</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a5375e6fbda5c36891b21cc17acc204dd" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>getNumDescendants</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a26e27c8c2da5db17c5cc26f15c2ebfb8" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>getNumDescendants</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ab509dada696b718152e8ac04edd551af" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>getParent</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1ad502c08497db1a1d811e1cad034f4891" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>getReducer</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1ae154a987a32dfa8c86e0391a2915579d" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>getReducerComponent</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1afedfe0dbb9fcbe6120a310ac8f4ad9b0" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>getReducerGroup</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1a712bf763fda2a663e87edc524f99839f" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>getReducerObjGroup</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1aa6a24ee9cccbc984031bc834471429a9" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>getReducerVrtProxy</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1afa3c814ff0e1c7ef1a9f76ed4036512b" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>global</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a7f07384d294e59796add9ce6be2d6410" prot="public" virt="virtual"><scope>vt::collective::CollectiveAlg</scope><name>initialize</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1aa3f74f986e523701c1d85ed97d3ad5a4" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>insertFindBarrier</name></member>
      <member refid="structvt_1_1collective_1_1_collective_alg_1ae57f4f34b34540d652c15f5dffeae54c" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>isDeallocated</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a88b2add909b0035f4844317481ed559b" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>isRoot</name></member>
      <member refid="structvt_1_1collective_1_1_collective_alg_1a6f2b4c832a5cc11cb7dfc238ecd48edf" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>makeCollectiveScope</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1a4b81ceab5d9f081f393dd68cece25935" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>makeReducerCollective</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1a44fa84680d3b310f4cb3f6c776a31751" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>makeReducerGroup</name></member>
      <member refid="structvt_1_1collective_1_1_collective_alg_1a81788afa34bc094c9f71fef8681aefb3" prot="public" virt="virtual"><scope>vt::collective::CollectiveAlg</scope><name>name</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1a0d8e74149ddca96f06c1ff6071b73a74" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>newNamedBarrier</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1a3e101519fbcfa9eee139bf02f991f085" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>newNamedCollectiveBarrier</name></member>
      <member refid="structvt_1_1collective_1_1_collective_alg_1ad830a204e2989b28cc90d54e83f518b5" prot="private" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>next_system_scope_</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a834e7b54ea2dceae42db7c5ea859753f" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>NodeListType</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a56532f6b47b9c71864980b73deee2d5a" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>numLevels</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1af64acc9543dc1bd1b56d6ed17b003425" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>NumLevelsType</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a5ce4242e9580c807baa74168401f381a" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>OperationType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a5a15bd0369a9d3765a6c70249bada96f" prot="public" virt="virtual"><scope>vt::collective::CollectiveAlg</scope><name>pollable</name></member>
      <member refid="structvt_1_1collective_1_1_collective_alg_1ac6db64bfd14e19d0a31f69a349a452c5" prot="private" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>postponed_collectives_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a4e64b5a12ffc1874065aa8b09e6309a9" prot="public" virt="virtual"><scope>vt::collective::CollectiveAlg</scope><name>preDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1dab11d9eb5bed8dfd5a3bb8fdf67f5a" prot="public" virt="virtual"><scope>vt::collective::CollectiveAlg</scope><name>progress</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1a28e777d1b70bc4e2d369db4ed3df76ab" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>ReduceManager</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1ae6d6635476f9d9f601d131a334ca3817" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>ReducePtrType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1af9d694f9d62d973a2cde6e52c55bef14" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>reducer</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1a7ee21e635c585acc7d7339911a0900eb" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>reduceRootRecv</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1a2c340e5d3b12e4f2df64b9c1502445cf" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>ReduceScopeType</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1a257d3445e311d1347a7e2f20a487d556" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>reduceUpHan</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa2cd54632710e7cdf1b20dfb676c752c" prot="protected" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>registerCounter</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1abb1ee7f09f05c143dbdfd3346f6cdcba" prot="protected" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>registerCounterT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ab71509224f5716107ef5c781ba5ff487" prot="protected" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>registerDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a20417bbb4fe4c4d7648aef3a2699b787" prot="protected" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>registerGauge</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa220905292aeb726254d3dff2e672b00" prot="protected" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>registerGaugeT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a5c6035a56d54cc3de270efedad3f026e" prot="protected" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>registerTimer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a328ecca78c6aa309bb764f3dde083c3e" prot="protected" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>registerTimerT</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1a56128065b0b7735958b998dd97a4938b" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>removeBarrier</name></member>
      <member refid="structvt_1_1collective_1_1_collective_alg_1a9ed7397e91a18458c3a578be3605baa9" prot="private" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>runCollective</name></member>
      <member refid="structvt_1_1collective_1_1scatter_1_1_scatter_1a33ea9a78c5d43dcea4ec2cb69d8b00b4" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>Scatter</name></member>
      <member refid="structvt_1_1collective_1_1scatter_1_1_scatter_1a0873f5fd4b890ad95e6ed6c097efe8bd" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>scatter</name></member>
      <member refid="structvt_1_1collective_1_1scatter_1_1_scatter_1aa80a957377cce3126058f3d7d30d2fed" prot="protected" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>scatterIn</name></member>
      <member refid="structvt_1_1collective_1_1_collective_alg_1abf644b20fe35cf654f5d4a6702ef5183" prot="private" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>ScopeMapType</name></member>
      <member refid="structvt_1_1collective_1_1_collective_alg_1a6b1e5e821093eb7fb312c440e90c14ae" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>serialize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1abe85836f57c42a695fdc292cd78b10cb" prot="public" virt="non-virtual" ambiguityscope="Component&lt; CollectiveAlg &gt;::"><scope>vt::collective::CollectiveAlg</scope><name>serialize</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1aa3120d3bdbb2a308dd6831aa52d0ebb0" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>setupTree</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aad3974307ab3b2e1df389a91310f68c2" prot="public" virt="virtual"><scope>vt::collective::CollectiveAlg</scope><name>startup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ac969a635e579cf7be3af696f500bf260" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>staticInit</name></member>
      <member refid="structvt_1_1collective_1_1_collective_alg_1a947ce4f129e1cf626da031595fe5df5c" prot="private" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>system_scope_</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1a31b7fc393348cd50a9beac2372aabd79" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>systemMetaBarrier</name></member>
      <member refid="structvt_1_1collective_1_1barrier_1_1_barrier_1ad3c1ad5f531262cfebcfd4295db341d4" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>systemMetaBarrierCont</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ae9570e9a8f303295744e99b527603a51" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>Tree</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ad759f716890ce5344a6c6053fcdc7055" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>Tree</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a949f8b592559125bf225bd3828bd6b88" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>Tree</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a2bcd1016fcdb6395844d4fd15d84a570" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>UnitType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a97b0e8ff394c8aa04035ff15165eb087" prot="protected" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>updateDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a75e737294bb63e1898d9ac4515f0cf63" prot="public" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>UpdateType</name></member>
      <member refid="structvt_1_1collective_1_1_collective_alg_1a72bb12e5bbe0c52e867c81e76db318d9" prot="private" virt="non-virtual"><scope>vt::collective::CollectiveAlg</scope><name>user_scope_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a9190b5cb499f9cfdacc1e0bd98a1805a" prot="public" virt="virtual"><scope>vt::collective::CollectiveAlg</scope><name>~BaseComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
