<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="tutorial-1h" kind="page">
    <compoundname>tutorial-1h</compoundname>
    <title>Learning about reductions</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><programlisting filename="tutorial/tutorial_1h.h"><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reduceResult(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>num_nodes<sp/>=<sp/><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">::vt::theContext</ref>()-&gt;<ref refid="structvt_1_1ctx_1_1_context_1a7f41071aadf6d5fa9e1b6c703c5ff19d" kindref="member">getNumNodes</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>(void)num_nodes;<sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>warn<sp/>about<sp/>possibly<sp/>unused<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>fmt::print(</highlight><highlight class="stringliteral">&quot;reduction<sp/>value={}\n&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(num_nodes<sp/>*<sp/>50<sp/>==<sp/>result);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tutorial<sp/>code<sp/>to<sp/>demonstrate<sp/>using<sp/>reduction<sp/>on<sp/>all<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>activeMessageReduce()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>this_node<sp/>=<sp/><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">::vt::theContext</ref>()-&gt;<ref refid="structvt_1_1ctx_1_1_context_1a0d52c263ce8516546a67443d9a86fa5f" kindref="member">getNode</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>(void)this_node;<sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>warn<sp/>about<sp/>unused<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>num_nodes<sp/>=<sp/><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">::vt::theContext</ref>()-&gt;<ref refid="structvt_1_1ctx_1_1_context_1a7f41071aadf6d5fa9e1b6c703c5ff19d" kindref="member">getNumNodes</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>(void)num_nodes;<sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>warn<sp/>about<sp/>unused<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>reduction<sp/>over<sp/>all<sp/>the<sp/>nodes.</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>root_reduce_node<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="namespacevt_1aa8e0c0ab253e7ad1acd5d09e36fea769" kindref="member">vt::theCollective</ref>()-&gt;<ref refid="structvt_1_1collective_1_1reduce_1_1_reduce_manager_1afa3c814ff0e1c7ef1a9f76ed4036512b" kindref="member">global</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>r-&gt;<ref refid="structvt_1_1collective_1_1reduce_1_1_reduce_1adf8bd9748a220a3ed29087c30f8adafc" kindref="member">reduce</ref>&lt;reduceResult,<sp/><ref refid="namespacevt_1_1collective_1a7a695a8e6ed8247f643918113b7bf881" kindref="member">collective::PlusOp</ref>&gt;(<ref refid="structvt_1_1util_1_1strong_1_1detail_1_1_strong" kindref="compound">vt::Node</ref>{root_reduce_node},<sp/>50);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
    </detaileddescription>
  </compounddef>
</doxygen>
