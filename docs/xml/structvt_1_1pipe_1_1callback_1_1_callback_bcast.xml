<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structvt_1_1pipe_1_1callback_1_1_callback_bcast" kind="struct" language="C++" prot="public">
    <compoundname>vt::pipe::callback::CallbackBcast</compoundname>
    <basecompoundref refid="structvt_1_1pipe_1_1callback_1_1_callback_base" prot="public" virt="non-virtual">vt::pipe::callback::CallbackBase&lt; signal::Signal&lt; MsgT &gt; &gt;</basecompoundref>
    <basecompoundref refid="structvt_1_1pipe_1_1callback_1_1_callback_base" prot="public" virt="non-virtual">vt::pipe::callback::CallbackBase&lt; signal::Signal&lt; MsgT &gt; &gt;</basecompoundref>
    <includes refid="callback__handler__bcast_8h" local="no">callback_handler_bcast.h</includes>
    <templateparamlist>
      <param>
        <type>typename MsgT</type>
      </param>
      <param>
        <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
        <declname>f</declname>
        <defname>f</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a25891ab2b71bd3b3883df52172412607" prot="public" static="no">
        <type>typename <ref refid="structvt_1_1pipe_1_1signal_1_1_signal" kindref="compound">signal::Signal</ref>&lt; MsgT &gt;</type>
        <definition>using vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::SignalBaseType =  typename signal::Signal&lt;MsgT&gt;</definition>
        <argsstring></argsstring>
        <name>SignalBaseType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_handler_bcast.h" line="58" column="3" bodyfile="src/vt/pipe/callback/callback_handler_bcast.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a114e04d430944cfbc25e3f117a50d03e" prot="public" static="no">
        <type>typename <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_base" kindref="compound">CallbackBase</ref>&lt; <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a25891ab2b71bd3b3883df52172412607" kindref="member">SignalBaseType</ref> &gt;::<ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a114e04d430944cfbc25e3f117a50d03e" kindref="member">SignalType</ref></type>
        <definition>using vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::SignalType =  typename CallbackBase&lt;SignalBaseType&gt;::SignalType</definition>
        <argsstring></argsstring>
        <name>SignalType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_handler_bcast.h" line="59" column="3" bodyfile="src/vt/pipe/callback/callback_handler_bcast.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1aaf994b71056001334d30d74fa9c958f9" prot="public" static="no">
        <type>typename SignalType::DataType</type>
        <definition>using vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::SignalDataType =  typename SignalType::DataType</definition>
        <argsstring></argsstring>
        <name>SignalDataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_handler_bcast.h" line="60" column="3" bodyfile="src/vt/pipe/callback/callback_handler_bcast.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a71dc6da3c022c5fe989265da28bedec6" prot="public" static="no">
        <type>MsgT</type>
        <definition>using vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::MessageType =  MsgT</definition>
        <argsstring></argsstring>
        <name>MessageType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_handler_bcast.h" line="61" column="3" bodyfile="src/vt/pipe/callback/callback_handler_bcast.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a25891ab2b71bd3b3883df52172412607" prot="public" static="no">
        <type>typename <ref refid="structvt_1_1pipe_1_1signal_1_1_signal" kindref="compound">signal::Signal</ref>&lt; MsgT &gt;</type>
        <definition>using vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::SignalBaseType =  typename signal::Signal&lt;MsgT&gt;</definition>
        <argsstring></argsstring>
        <name>SignalBaseType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="57" column="3" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a114e04d430944cfbc25e3f117a50d03e" prot="public" static="no">
        <type>typename <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_base" kindref="compound">CallbackBase</ref>&lt; <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a25891ab2b71bd3b3883df52172412607" kindref="member">SignalBaseType</ref> &gt;::<ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a114e04d430944cfbc25e3f117a50d03e" kindref="member">SignalType</ref></type>
        <definition>using vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::SignalType =  typename CallbackBase&lt;SignalBaseType&gt;::SignalType</definition>
        <argsstring></argsstring>
        <name>SignalType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="58" column="3" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1aaf994b71056001334d30d74fa9c958f9" prot="public" static="no">
        <type>typename SignalType::DataType</type>
        <definition>using vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::SignalDataType =  typename SignalType::DataType</definition>
        <argsstring></argsstring>
        <name>SignalDataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="59" column="3" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a71dc6da3c022c5fe989265da28bedec6" prot="public" static="no">
        <type>MsgT</type>
        <definition>using vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::MessageType =  MsgT</definition>
        <argsstring></argsstring>
        <name>MessageType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="60" column="3" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a64032b57b71c27653b93b3e13bf38145" prot="public" static="no">
        <type><ref refid="namespacevt_1_1pipe_1_1signal_1acbe257d1ae44f20fa9fd9b6ed3057caf" kindref="member">signal::SigVoidType</ref></type>
        <definition>using vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::VoidSigType =  signal::SigVoidType</definition>
        <argsstring></argsstring>
        <name>VoidSigType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="61" column="3" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a3ca08c23824cfac76b837311a1d2c929" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_same&lt; T, <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a64032b57b71c27653b93b3e13bf38145" kindref="member">VoidSigType</ref> &gt;::value, U &gt;</type>
        <definition>using vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::IsVoidType =  std::enable_if_t&lt;std::is_same&lt;T,VoidSigType&gt;::value,U&gt;</definition>
        <argsstring></argsstring>
        <name>IsVoidType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="63" column="3" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a3f5efa2edf7f4c47fe047e086e63a477" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt;!std::is_same&lt; T, <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a64032b57b71c27653b93b3e13bf38145" kindref="member">VoidSigType</ref> &gt;::value, U &gt;</type>
        <definition>using vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::IsNotVoidType =  std::enable_if_t&lt;!std::is_same&lt;T,VoidSigType&gt;::value,U&gt;</definition>
        <argsstring></argsstring>
        <name>IsNotVoidType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="65" column="3" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a3ea3dbcdb923e07ef664094954313eb1" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::handler_</definition>
        <argsstring></argsstring>
        <name>handler_</name>
        <initializer>= uninitialized_handler</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="92" column="15" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a143859ea6a28eec100d0e2b19d13b004" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::include_sender_</definition>
        <argsstring></argsstring>
        <name>include_sender_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="93" column="8" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1acc7d0eda09ac15644f876fdab691e269" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::trigger_</definition>
        <argsstring>(SignalDataType *data) override</argsstring>
        <name>trigger_</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1aaf994b71056001334d30d74fa9c958f9" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_handler_bcast.h" line="64" column="8" bodyfile="src/vt/pipe/callback/callback_handler_bcast.h" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a8db0ff95fe319e739a93e87661365a5a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a3ca08c23824cfac76b837311a1d2c929" kindref="member">IsVoidType</ref>&lt; T &gt;</type>
        <definition>IsVoidType&lt;T&gt; vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::triggerDispatch</definition>
        <argsstring>(SignalDataType *data, PipeType const &amp;pid)</argsstring>
        <name>triggerDispatch</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1aaf994b71056001334d30d74fa9c958f9" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="83" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a6a0c65ef395baea684879a696e9fa8f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a3f5efa2edf7f4c47fe047e086e63a477" kindref="member">IsNotVoidType</ref>&lt; T &gt;</type>
        <definition>IsNotVoidType&lt;T&gt; vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::triggerDispatch</definition>
        <argsstring>(SignalDataType *data, PipeType const &amp;pid)</argsstring>
        <name>triggerDispatch</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1aaf994b71056001334d30d74fa9c958f9" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="86" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a8c7fea2fd47017f1cd55f249ce5111a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackBcast&lt; MsgT &gt;::trigger_</definition>
        <argsstring>(SignalDataType *data, PipeType const &amp;pid) override</argsstring>
        <name>trigger_</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1aaf994b71056001334d30d74fa9c958f9" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="88" column="8" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.impl.h" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1acc7d0eda09ac15644f876fdab691e269" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::trigger_</definition>
        <argsstring>(SignalDataType *data) override</argsstring>
        <name>trigger_</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1aaf994b71056001334d30d74fa9c958f9" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="89" column="8"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a3f7a3a2894572c6c59be68ca4687bcad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast" kindref="compound">CallbackBcast</ref>&lt; MsgT &gt;::template <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a3ca08c23824cfac76b837311a1d2c929" kindref="member">IsVoidType</ref>&lt; T &gt;</type>
        <definition>CallbackBcast&lt;MsgT&gt;::template IsVoidType&lt;T&gt; vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::triggerDispatch</definition>
        <argsstring>([[maybe_unused]] SignalDataType *data, PipeType const &amp;pid)</argsstring>
        <name>triggerDispatch</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1aaf994b71056001334d30d74fa9c958f9" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.impl.h" line="85" column="15" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.impl.h" bodystart="85" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a20640706bfaf002e19d6e085200bd7b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast" kindref="compound">CallbackBcast</ref>&lt; MsgT &gt;::template <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a3f5efa2edf7f4c47fe047e086e63a477" kindref="member">IsNotVoidType</ref>&lt; T &gt;</type>
        <definition>CallbackBcast&lt;MsgT&gt;::template IsNotVoidType&lt;T&gt; vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::triggerDispatch</definition>
        <argsstring>(SignalDataType *data, [[maybe_unused]] PipeType const &amp;pid)</argsstring>
        <name>triggerDispatch</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1aaf994b71056001334d30d74fa9c958f9" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.impl.h" line="101" column="15" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.impl.h" bodystart="101" bodyend="111"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1adbfcc31e986a2aed709b8517e0e978ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::CallbackBcast</definition>
        <argsstring>()=default</argsstring>
        <name>CallbackBcast</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="67" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a7a711d532fcf9c8c91ab984e9848e2f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::CallbackBcast</definition>
        <argsstring>(CallbackBcast const &amp;)=default</argsstring>
        <name>CallbackBcast</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast" kindref="compound">CallbackBcast</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="68" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1af90721bd868d3d3e4140db4bee5da39f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::CallbackBcast</definition>
        <argsstring>(CallbackBcast &amp;&amp;)=default</argsstring>
        <name>CallbackBcast</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast" kindref="compound">CallbackBcast</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="69" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a57451443d73bc8cc4deb3649ec61a776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBcast&lt; MsgT &gt;::CallbackBcast</definition>
        <argsstring>(HandlerType const in_handler, bool const &amp;in_include)</argsstring>
        <name>CallbackBcast</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>in_handler</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>in_include</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="71" column="3" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.impl.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a7585164f2854f2af3f23af0e0468e0c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::getHandler</definition>
        <argsstring>() const</argsstring>
        <name>getHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="75" column="15" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a44fca909dc3216da6c84a6277649fa6e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;::getIncSender</definition>
        <argsstring>() const</argsstring>
        <name>getIncSender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="76" column="8" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a2337a0d2bda968f7ab1e4c85c3dbe67a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackBcast&lt; MsgT &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast.h" line="79" column="8" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast.impl.h" bodystart="66" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vt::pipe::callback::CallbackBase&lt; signal::Signal&lt; MsgT &gt; &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>vt::pipe::callback::CallbackBcast&lt; MsgT, f &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vt::pipe::callback::CallbackBase&lt; signal::Signal&lt; MsgT &gt; &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/pipe/callback/callback_handler_bcast.h" line="57" column="35" bodyfile="src/vt/pipe/callback/callback_handler_bcast.h" bodystart="57" bodyend="67"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aed02135f19f5d5ca4899d488ce402b64" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aa90843711601bd1174ba64f69f754eb8" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a683cee48109181768cd44354bc98e3e1" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ae96d1355aa94b4fd32469bbb9280717c" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a18840ed75fb94811cb34c17da8703588" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a2abdcbd2debf98179075077783a1b725" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aed70ff142d52c21d9f18e52eb6a6e38b" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1adbfcc31e986a2aed709b8517e0e978ae" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>CallbackBcast</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a7a711d532fcf9c8c91ab984e9848e2f0" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>CallbackBcast</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1af90721bd868d3d3e4140db4bee5da39f" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>CallbackBcast</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a57451443d73bc8cc4deb3649ec61a776" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>CallbackBcast</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a9ef1595197b291a660e6d19aadb0203e" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>expired</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a20ed519d03b62560080ce3bdb8986f03" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>finished</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a7585164f2854f2af3f23af0e0468e0c8" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>getHandler</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a44fca909dc3216da6c84a6277649fa6e" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>getIncSender</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a3ea3dbcdb923e07ef664094954313eb1" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>handler_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a143859ea6a28eec100d0e2b19d13b004" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>include_sender_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a3f5efa2edf7f4c47fe047e086e63a477" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>IsNotVoidType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a3ca08c23824cfac76b837311a1d2c929" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>IsVoidType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a71dc6da3c022c5fe989265da28bedec6" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>MessageType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a71dc6da3c022c5fe989265da28bedec6" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>MessageType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a078375aa25cb0c0e2968804ef3a86a5f" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>operator=</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a5b996f1bdf68fe4ef90c8c1fe2241c59" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>reference_counted_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ab9464e03ecca5b6ce2186f5cc6e8110f" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>refs_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a2337a0d2bda968f7ab1e4c85c3dbe67a" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>serialize</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a25891ab2b71bd3b3883df52172412607" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>SignalBaseType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a25891ab2b71bd3b3883df52172412607" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>SignalBaseType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1aaf994b71056001334d30d74fa9c958f9" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>SignalDataType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1aaf994b71056001334d30d74fa9c958f9" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>SignalDataType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a114e04d430944cfbc25e3f117a50d03e" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>SignalType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a114e04d430944cfbc25e3f117a50d03e" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>SignalType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ad54d116447acb7f1d051db946b2e875c" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>trigger</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1acc7d0eda09ac15644f876fdab691e269" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a8c7fea2fd47017f1cd55f249ce5111a0" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1acc7d0eda09ac15644f876fdab691e269" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a75a9b0103e0129f536385b10b86400c3" prot="protected" virt="pure-virtual" ambiguityscope="CallbackBase&lt; signal::Signal&lt; MsgT &gt; &gt;::"><scope>vt::pipe::callback::CallbackBcast</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ae4a19fced0abfb6543d4417efeb7e831" prot="protected" virt="virtual" ambiguityscope="CallbackBase&lt; signal::Signal&lt; MsgT &gt; &gt;::"><scope>vt::pipe::callback::CallbackBcast</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a8db0ff95fe319e739a93e87661365a5a" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>triggerDispatch</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a6a0c65ef395baea684879a696e9fa8f1" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>triggerDispatch</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a3f7a3a2894572c6c59be68ca4687bcad" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>triggerDispatch</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a20640706bfaf002e19d6e085200bd7b8" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>triggerDispatch</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a815cf081302f47d4fe68fad7270ac99b" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>triggered_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_1a64032b57b71c27653b93b3e13bf38145" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>VoidSigType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1adc39148be97af3105f9b5765431bdc9a" prot="public" virt="virtual"><scope>vt::pipe::callback::CallbackBcast</scope><name>~CallbackBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
