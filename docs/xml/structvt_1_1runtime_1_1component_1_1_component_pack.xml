<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1runtime_1_1component_1_1_component_pack" kind="struct" language="C++" prot="public">
    <compoundname>vt::runtime::component::ComponentPack</compoundname>
    <includes refid="component__pack_8h" local="no">vt/runtime/component/component_pack.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1runtime_1_1component_1_1_component_pack_1aa4389ab338cdac3a8900a9e777c0d3c9" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1runtime_1_1component_1_1_movable_fn" kindref="compound">MovableFn</ref> &gt;</type>
        <definition>using vt::runtime::component::ComponentPack::Callable =  std::unique_ptr&lt;MovableFn&gt;</definition>
        <argsstring></argsstring>
        <name>Callable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="65" column="1" bodyfile="src/vt/runtime/component/component_pack.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a77177fd8678d5bf04bada652ffee1e2f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runtime::component::ComponentPack::live_</definition>
        <argsstring></argsstring>
        <name>live_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether the pack is live. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="173" column="1" bodyfile="src/vt/runtime/component/component_pack.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a615b981d265458c952406691c89ce0f6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacevt_1_1runtime_1_1component_1_1registry_1a9b86518797c7bb91babf0ca8ee7d06e6" kindref="member">registry::AutoHandlerType</ref> &gt;</type>
        <definition>std::vector&lt;registry::AutoHandlerType&gt; vt::runtime::component::ComponentPack::registered_components_</definition>
        <argsstring></argsstring>
        <name>registered_components_</name>
        <briefdescription>
<para>List of registered components. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="175" column="1" bodyfile="src/vt/runtime/component/component_pack.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a7dd24ee6d0e1a8e66dd35257ba3e6d75" prot="private" static="no" mutable="no">
        <type>std::unordered_set&lt; <ref refid="namespacevt_1_1runtime_1_1component_1_1registry_1a9b86518797c7bb91babf0ca8ee7d06e6" kindref="member">registry::AutoHandlerType</ref> &gt;</type>
        <definition>std::unordered_set&lt;registry::AutoHandlerType&gt; vt::runtime::component::ComponentPack::registered_set_</definition>
        <argsstring></argsstring>
        <name>registered_set_</name>
        <briefdescription>
<para>Set of registered components to make it idempotent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="177" column="1" bodyfile="src/vt/runtime/component/component_pack.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1component_1_1_component_pack_1aebf0761f1902a5336a247190ad8ba47d" prot="private" static="no" mutable="no">
        <type>std::unordered_set&lt; <ref refid="namespacevt_1_1runtime_1_1component_1_1registry_1a9b86518797c7bb91babf0ca8ee7d06e6" kindref="member">registry::AutoHandlerType</ref> &gt;</type>
        <definition>std::unordered_set&lt;registry::AutoHandlerType&gt; vt::runtime::component::ComponentPack::added_components_</definition>
        <argsstring></argsstring>
        <name>added_components_</name>
        <briefdescription>
<para>Set of added components to be constructed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="179" column="1" bodyfile="src/vt/runtime/component/component_pack.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a94303b85754dae6c7442bdd3de41829f" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1runtime_1_1component_1_1registry_1a9b86518797c7bb91babf0ca8ee7d06e6" kindref="member">registry::AutoHandlerType</ref>, <ref refid="structvt_1_1runtime_1_1component_1_1_component_pack_1aa4389ab338cdac3a8900a9e777c0d3c9" kindref="member">Callable</ref> &gt;</type>
        <definition>std::unordered_map&lt;registry::AutoHandlerType, Callable&gt; vt::runtime::component::ComponentPack::construct_components_</definition>
        <argsstring></argsstring>
        <name>construct_components_</name>
        <briefdescription>
<para>Bound constructors for components. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="181" column="1" bodyfile="src/vt/runtime/component/component_pack.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a4df7d33cbf2efa5e0a93e335ecced3df" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="structvt_1_1runtime_1_1component_1_1_base_component" kindref="compound">BaseComponent</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;BaseComponent&gt; &gt; vt::runtime::component::ComponentPack::live_components_</definition>
        <argsstring></argsstring>
        <name>live_components_</name>
        <briefdescription>
<para>Set of owning pointers to live components. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="183" column="1" bodyfile="src/vt/runtime/component/component_pack.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a1ef5fa947ed75d4451289e70732374cb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structvt_1_1runtime_1_1component_1_1_progressable" kindref="compound">Progressable</ref> * &gt;</type>
        <definition>std::vector&lt;Progressable*&gt; vt::runtime::component::ComponentPack::pollable_components_</definition>
        <argsstring></argsstring>
        <name>pollable_components_</name>
        <briefdescription>
<para>Set of non-owning pointers to pollable components for progress engine. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="185" column="1" bodyfile="src/vt/runtime/component/component_pack.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a4163295f78b9dbd6e135783cf6d2ccce" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ab6ac935c168b809c422d5121da4f2700" kindref="member">ComponentIDType</ref></type>
        <definition>ComponentIDType vt::runtime::component::ComponentPack::cur_id_</definition>
        <argsstring></argsstring>
        <name>cur_id_</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para><ref refid="structvt_1_1runtime_1_1component_1_1_component" kindref="compound">Component</ref> ID for assigning during construction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="187" column="1" bodyfile="src/vt/runtime/component/component_pack.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a113f2da49d2033f09831b6807c92d330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::runtime::component::ComponentPack::ComponentPack</definition>
        <argsstring>()=default</argsstring>
        <name>ComponentPack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a956437fba91b2b90576df33276858df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Deps</declname>
            <defname>Deps</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Cons</declname>
            <defname>Cons</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1runtime_1_1component_1_1registry_1a9b86518797c7bb91babf0ca8ee7d06e6" kindref="member">registry::AutoHandlerType</ref></type>
        <definition>registry::AutoHandlerType vt::runtime::component::ComponentPack::registerComponent</definition>
        <argsstring>(T **ref, typename BaseComponent::DepsPack&lt; Deps... &gt;, Cons &amp;&amp;... cons)</argsstring>
        <name>registerComponent</name>
        <param>
          <type>T **</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>typename <ref refid="structvt_1_1runtime_1_1component_1_1_base_component_1_1_deps_pack" kindref="compound">BaseComponent::DepsPack</ref>&lt; Deps... &gt;</type>
        </param>
        <param>
          <type>Cons &amp;&amp;...</type>
          <declname>cons</declname>
        </param>
        <briefdescription>
<para>Idempotent registration of a component into this runtime pack. <ref refid="structvt_1_1runtime_1_1component_1_1_component" kindref="compound">Component</ref> dependencies specified with variadic template parameters in <computeroutput>DepsPack</computeroutput>. Registration does not imply the component will be created; it must be added subsequently to be enabled. It simply declares its existence and connectivity with other components. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ref</parametername>
</parameternamelist>
<parameterdescription>
<para>dumb pointer for access outside </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cons</parametername>
</parameternamelist>
<parameterdescription>
<para>constructor arguments for the component<mdash/>bound at registration time</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput><ref refid="namespacevt_1_1runtime_1_1component_1_1registry_1a9b86518797c7bb91babf0ca8ee7d06e6" kindref="member">registry::AutoHandlerType</ref></computeroutput> with type ID for component </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="84" column="1" bodyfile="src/vt/runtime/component/component_pack.impl.h" bodystart="74" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a2be733d29f56456f71352569a898dee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::runtime::component::ComponentPack::add</definition>
        <argsstring>()</argsstring>
        <name>add</name>
        <briefdescription>
<para>Add a component to the pack. It will be constructed along with all its dependencies. It must be registered via <computeroutput>registerComponent</computeroutput> before adding. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="94" column="1" bodyfile="src/vt/runtime/component/component_pack.impl.h" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_component_pack_1ab5f7966f4de3f81643d9945302de7cfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::component::ComponentPack::construct</definition>
        <argsstring>()</argsstring>
        <name>construct</name>
        <briefdescription>
<para>Construct all added components along with dependences transitively. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="100" column="1" bodyfile="src/vt/runtime/component/component_pack.cc" bodystart="52" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_component_pack_1ad850ada38f5f4397fa414885a545fdaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::runtime::component::ComponentPack::~ComponentPack</definition>
        <argsstring>()</argsstring>
        <name>~ComponentPack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="102" column="1" bodyfile="src/vt/runtime/component/component_pack.cc" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a1821ae6fbe03896a3a4a61bf44a5d38b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::component::ComponentPack::destruct</definition>
        <argsstring>()</argsstring>
        <name>destruct</name>
        <briefdescription>
<para>Destruct all live components. Can be re-constructed by invoking <computeroutput>construct</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="108" column="1" bodyfile="src/vt/runtime/component/component_pack.cc" bodystart="83" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a38f85e6b4417904ea404c03fc167f5a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vt::runtime::component::ComponentPack::progress</definition>
        <argsstring>()</argsstring>
        <name>progress</name>
        <briefdescription>
<para>Invoke the progress function on all pollable components. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>the number of work units processed </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="115" column="1" bodyfile="src/vt/runtime/component/component_pack.cc" bodystart="113" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a0d6c3880de484c5c826ce65510d63a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1runtime_1_1component_1_1_base_component" kindref="compound">BaseComponent</ref> &gt;</type>
        <definition>std::unique_ptr&lt; BaseComponent &gt; vt::runtime::component::ComponentPack::extractComponent</definition>
        <argsstring>(std::string const &amp;name)</argsstring>
        <name>extractComponent</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Extract the first component from a running pack that matches <computeroutput>name</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the component to remove</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the component to extract </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="125" column="1" bodyfile="src/vt/runtime/component/component_pack.cc" bodystart="101" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a67db159a0ceb87496df4dd40ce9d44b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::component::ComponentPack::isLive</definition>
        <argsstring>() const</argsstring>
        <name>isLive</name>
        <briefdescription>
<para>Query whether the <computeroutput><ref refid="structvt_1_1runtime_1_1component_1_1_component_pack" kindref="compound">ComponentPack</ref></computeroutput> is live. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>whether it is live </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="169" column="1" bodyfile="src/vt/runtime/component/component_pack.h" bodystart="169" bodyend="169"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a5ca923fe22474d1c26a97d6d5dbfc0a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::list&lt; int &gt;</type>
        <definition>std::list&lt; int &gt; vt::runtime::component::ComponentPack::topoSort</definition>
        <argsstring>()</argsstring>
        <name>topoSort</name>
        <briefdescription>
<para>Topologically sort all the registered components to find a valid activation order based on registered dependences. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>list of handlers representing a valid total ordering that does not break dependences </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="135" column="1" bodyfile="src/vt/runtime/component/component_pack.cc" bodystart="121" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a7cb370457771ba9ebccd8892ffdafca9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::component::ComponentPack::topoSortImpl</definition>
        <argsstring>(int v, std::list&lt; int &gt; &amp;order, bool *visited)</argsstring>
        <name>topoSortImpl</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <param>
          <type>std::list&lt; int &gt; &amp;</type>
          <declname>order</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>visited</declname>
        </param>
        <briefdescription>
<para>Topologically sort all the registered components to find a valid activation order based on registered dependences. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">v</parametername>
</parameternamelist>
<parameterdescription>
<para>current vertex </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">order</parametername>
</parameternamelist>
<parameterdescription>
<para>topological order derived so far </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">visited</parametername>
</parameternamelist>
<parameterdescription>
<para>array of visited vertices </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="145" column="1" bodyfile="src/vt/runtime/component/component_pack.cc" bodystart="145" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_component_pack_1a8e76881b315cccf8171f177a84d66f83" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::component::ComponentPack::detectCycles</definition>
        <argsstring>(int root)</argsstring>
        <name>detectCycles</name>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <briefdescription>
<para>Detect cycles in the dependence graph. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">root</parametername>
</parameternamelist>
<parameterdescription>
<para>starting vertex </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="152" column="1" bodyfile="src/vt/runtime/component/component_pack.cc" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_component_pack_1acbe1421990318c9c43d5a83add91fa31" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::component::ComponentPack::detectCyclesImpl</definition>
        <argsstring>(std::list&lt; int &gt; &amp;stack, int dep)</argsstring>
        <name>detectCyclesImpl</name>
        <param>
          <type>std::list&lt; int &gt; &amp;</type>
          <declname>stack</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dep</declname>
        </param>
        <briefdescription>
<para>Detect cycles in the dependence graph. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stack</parametername>
</parameternamelist>
<parameterdescription>
<para>current stack of traversed vertices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dep</parametername>
</parameternamelist>
<parameterdescription>
<para>next vertex to consider </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/component_pack.h" line="160" column="1" bodyfile="src/vt/runtime/component/component_pack.cc" bodystart="169" bodyend="182"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="structvt_1_1runtime_1_1component_1_1_component_pack" kindref="compound">ComponentPack</ref></computeroutput> class for holding a set of runtime components that make up a coherent inter-dependent runtime </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/runtime/component/component_pack.h" line="64" column="1" bodyfile="src/vt/runtime/component/component_pack.h" bodystart="64" bodyend="188"/>
    <listofallmembers>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a2be733d29f56456f71352569a898dee5" prot="public" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>add</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1aebf0761f1902a5336a247190ad8ba47d" prot="private" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>added_components_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1aa4389ab338cdac3a8900a9e777c0d3c9" prot="public" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>Callable</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a113f2da49d2033f09831b6807c92d330" prot="public" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>ComponentPack</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1ab5f7966f4de3f81643d9945302de7cfa" prot="public" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>construct</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a94303b85754dae6c7442bdd3de41829f" prot="private" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>construct_components_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a4163295f78b9dbd6e135783cf6d2ccce" prot="private" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>cur_id_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a1821ae6fbe03896a3a4a61bf44a5d38b" prot="public" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>destruct</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a8e76881b315cccf8171f177a84d66f83" prot="private" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>detectCycles</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1acbe1421990318c9c43d5a83add91fa31" prot="private" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>detectCyclesImpl</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a0d6c3880de484c5c826ce65510d63a52" prot="public" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>extractComponent</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a67db159a0ceb87496df4dd40ce9d44b4" prot="public" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>isLive</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a77177fd8678d5bf04bada652ffee1e2f" prot="private" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>live_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a4df7d33cbf2efa5e0a93e335ecced3df" prot="private" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>live_components_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a1ef5fa947ed75d4451289e70732374cb" prot="private" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>pollable_components_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a38f85e6b4417904ea404c03fc167f5a7" prot="public" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>progress</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a956437fba91b2b90576df33276858df5" prot="public" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>registerComponent</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a615b981d265458c952406691c89ce0f6" prot="private" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>registered_components_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a7dd24ee6d0e1a8e66dd35257ba3e6d75" prot="private" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>registered_set_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a5ca923fe22474d1c26a97d6d5dbfc0a3" prot="private" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>topoSort</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1a7cb370457771ba9ebccd8892ffdafca9" prot="private" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>topoSortImpl</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_pack_1ad850ada38f5f4397fa414885a545fdaf" prot="public" virt="non-virtual"><scope>vt::runtime::component::ComponentPack</scope><name>~ComponentPack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
