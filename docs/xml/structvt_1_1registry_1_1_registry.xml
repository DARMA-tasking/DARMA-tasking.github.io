<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1registry_1_1_registry" kind="struct" language="C++" prot="public">
    <compoundname>vt::registry::Registry</compoundname>
    <includes refid="registry_2registry_8h" local="no">registry.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1registry_1_1_registry_1a0717ad6519a3d2c6f3e1848182db4bfa" prot="public" static="no">
        <type><ref refid="structvt_1_1_handler_manager" kindref="compound">HandlerManager</ref></type>
        <definition>using vt::registry::Registry::HandlerManagerType =  HandlerManager</definition>
        <argsstring></argsstring>
        <name>HandlerManagerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="59" column="1" bodyfile="src/vt/registry/registry.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1registry_1_1_registry_1acf13f3553c4f5c82dd9bd1cb716d435f" prot="public" static="no">
        <type><ref refid="namespacevt_1af182285b57b225b163d5d8aff03cb8c2" kindref="member">eHandlerBits</ref></type>
        <definition>using vt::registry::Registry::HandlerBitsType =  eHandlerBits</definition>
        <argsstring></argsstring>
        <name>HandlerBitsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="60" column="1" bodyfile="src/vt/registry/registry.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1registry_1_1_registry_1aed8ec48ac909aea3e4dbc21aa6f8e898" prot="public" static="no">
        <type>std::tuple&lt; <ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref>, <ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> &gt;</type>
        <definition>using vt::registry::Registry::TaggerHandlerType =  std::tuple&lt;TagType, HandlerType&gt;</definition>
        <argsstring></argsstring>
        <name>TaggerHandlerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="61" column="1" bodyfile="src/vt/registry/registry.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1registry_1_1_registry_1ac9e1297d26b6c553ccdaa46858cdb3b8" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref>, <ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref> &gt;</type>
        <definition>using vt::registry::Registry::ContainerType =  std::unordered_map&lt;HandlerType, ActiveClosureFnType&gt;</definition>
        <argsstring></argsstring>
        <name>ContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="62" column="1" bodyfile="src/vt/registry/registry.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1registry_1_1_registry_1abefc9cdcc8557c5d547dd3ae44ae0996" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref>, <ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref> &gt;</type>
        <definition>using vt::registry::Registry::TagContainerType =  std::unordered_map&lt;TagType, ActiveClosureFnType&gt;</definition>
        <argsstring></argsstring>
        <name>TagContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="63" column="1" bodyfile="src/vt/registry/registry.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1registry_1_1_registry_1ab5d336044aee749d39c8feabe4fa6983" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref>, <ref refid="structvt_1_1registry_1_1_registry_1abefc9cdcc8557c5d547dd3ae44ae0996" kindref="member">TagContainerType</ref> &gt;</type>
        <definition>using vt::registry::Registry::HanTagContainerType =  std::unordered_map&lt;HandlerType, TagContainerType&gt;</definition>
        <argsstring></argsstring>
        <name>HanTagContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="64" column="1" bodyfile="src/vt/registry/registry.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1registry_1_1_registry_1adb3e36c663839801759d6bd264b8c4b5" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1registry_1_1_registry_1ac9e1297d26b6c553ccdaa46858cdb3b8" kindref="member">ContainerType</ref></type>
        <definition>ContainerType vt::registry::Registry::registered_</definition>
        <argsstring></argsstring>
        <name>registered_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="88" column="1" bodyfile="src/vt/registry/registry.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1registry_1_1_registry_1ad7d3a1810876242414c29c24db82bb6c" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1registry_1_1_registry_1ab5d336044aee749d39c8feabe4fa6983" kindref="member">HanTagContainerType</ref></type>
        <definition>HanTagContainerType vt::registry::Registry::tagged_registered_</definition>
        <argsstring></argsstring>
        <name>tagged_registered_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="89" column="1" bodyfile="src/vt/registry/registry.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1registry_1_1_registry_1afbdfcfbd2a8c30820545587e1650fb20" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a59ae068fe828d1c33051ff96f3d016b6" kindref="member">HandlerIdentifierType</ref></type>
        <definition>HandlerIdentifierType vt::registry::Registry::cur_ident_collective_</definition>
        <argsstring></argsstring>
        <name>cur_ident_collective_</name>
        <initializer>= first_handle_identifier</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="90" column="1" bodyfile="src/vt/registry/registry.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1registry_1_1_registry_1a8aed0f506143750c8444f7b6660be1c5" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a59ae068fe828d1c33051ff96f3d016b6" kindref="member">HandlerIdentifierType</ref></type>
        <definition>HandlerIdentifierType vt::registry::Registry::cur_ident_</definition>
        <argsstring></argsstring>
        <name>cur_ident_</name>
        <initializer>= first_handle_identifier</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="91" column="1" bodyfile="src/vt/registry/registry.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1a319ac9c59641bee88d48e825a4840aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::registry::Registry::Registry</definition>
        <argsstring>()=default</argsstring>
        <name>Registry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1a2e3b140ef858712eb34deb89623cbbc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::registry::Registry::registerNewHandler</definition>
        <argsstring>(ActiveClosureFnType fn, TagType const &amp;tag=no_tag, bool const &amp;is_collective=false)</argsstring>
        <name>registerNewHandler</name>
        <param>
          <type><ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref></type>
          <declname>fn</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_collective</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="68" column="1" bodyfile="src/vt/registry/registry.cc" bodystart="50" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1adaee9715edeb66b2fc8cd4639288a1cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::registry::Registry::unregisterHandlerFn</definition>
        <argsstring>(HandlerType const &amp;han, TagType const &amp;tag=no_tag)</argsstring>
        <name>unregisterHandlerFn</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="73" column="1" bodyfile="src/vt/registry/registry.cc" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1affe7c413b570120f7ccb0af95d6e9181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::registry::Registry::swapHandler</definition>
        <argsstring>(HandlerType const &amp;han, ActiveClosureFnType fn, TagType const &amp;tag=no_tag)</argsstring>
        <name>swapHandler</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref></type>
          <declname>fn</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="76" column="1" bodyfile="src/vt/registry/registry.cc" bodystart="68" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1ad4fdbf2cfbe4e852c5556435efe4255f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::registry::Registry::registerActiveHandler</definition>
        <argsstring>(ActiveClosureFnType fn, TagType const &amp;tag=no_tag)</argsstring>
        <name>registerActiveHandler</name>
        <param>
          <type><ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref></type>
          <declname>fn</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="79" column="1" bodyfile="src/vt/registry/registry.cc" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1a7ed0804483b7a1816b8b05429668f6c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref></type>
        <definition>ActiveClosureFnType vt::registry::Registry::getHandler</definition>
        <argsstring>(HandlerType const &amp;han, TagType const &amp;tag=no_tag)</argsstring>
        <name>getHandler</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="82" column="1" bodyfile="src/vt/registry/registry.cc" bodystart="113" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1ae258a38c9a8237c900ecd40f3a4328d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref></type>
        <definition>ActiveClosureFnType vt::registry::Registry::getHandlerNoTag</definition>
        <argsstring>(HandlerType const &amp;han)</argsstring>
        <name>getHandlerNoTag</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="85" column="1" bodyfile="src/vt/registry/registry.cc" bodystart="104" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/registry/registry.h" line="58" column="1" bodyfile="src/vt/registry/registry.h" bodystart="58" bodyend="92"/>
    <listofallmembers>
      <member refid="structvt_1_1registry_1_1_registry_1ac9e1297d26b6c553ccdaa46858cdb3b8" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>ContainerType</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1a8aed0f506143750c8444f7b6660be1c5" prot="private" virt="non-virtual"><scope>vt::registry::Registry</scope><name>cur_ident_</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1afbdfcfbd2a8c30820545587e1650fb20" prot="private" virt="non-virtual"><scope>vt::registry::Registry</scope><name>cur_ident_collective_</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1a7ed0804483b7a1816b8b05429668f6c9" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>getHandler</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1ae258a38c9a8237c900ecd40f3a4328d9" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>getHandlerNoTag</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1acf13f3553c4f5c82dd9bd1cb716d435f" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>HandlerBitsType</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1a0717ad6519a3d2c6f3e1848182db4bfa" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>HandlerManagerType</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1ab5d336044aee749d39c8feabe4fa6983" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>HanTagContainerType</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1ad4fdbf2cfbe4e852c5556435efe4255f" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>registerActiveHandler</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1adb3e36c663839801759d6bd264b8c4b5" prot="private" virt="non-virtual"><scope>vt::registry::Registry</scope><name>registered_</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1a2e3b140ef858712eb34deb89623cbbc3" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>registerNewHandler</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1a319ac9c59641bee88d48e825a4840aa2" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>Registry</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1affe7c413b570120f7ccb0af95d6e9181" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>swapHandler</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1abefc9cdcc8557c5d547dd3ae44ae0996" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>TagContainerType</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1ad7d3a1810876242414c29c24db82bb6c" prot="private" virt="non-virtual"><scope>vt::registry::Registry</scope><name>tagged_registered_</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1aed8ec48ac909aea3e4dbc21aa6f8e898" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>TaggerHandlerType</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1adaee9715edeb66b2fc8cd4639288a1cd" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>unregisterHandlerFn</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
