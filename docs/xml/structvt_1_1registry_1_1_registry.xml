<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1registry_1_1_registry" kind="struct" language="C++" prot="public">
    <compoundname>vt::registry::Registry</compoundname>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component" prot="public" virt="non-virtual">vt::runtime::component::Component&lt; Registry &gt;</basecompoundref>
    <includes refid="registry_2registry_8h" local="no">registry.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1registry_1_1_registry_1a0717ad6519a3d2c6f3e1848182db4bfa" prot="public" static="no">
        <type><ref refid="structvt_1_1_handler_manager" kindref="compound">HandlerManager</ref></type>
        <definition>using vt::registry::Registry::HandlerManagerType =  HandlerManager</definition>
        <argsstring></argsstring>
        <name>HandlerManagerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="64" column="1" bodyfile="src/vt/registry/registry.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1registry_1_1_registry_1acf13f3553c4f5c82dd9bd1cb716d435f" prot="public" static="no">
        <type><ref refid="namespacevt_1af182285b57b225b163d5d8aff03cb8c2" kindref="member">eHandlerBits</ref></type>
        <definition>using vt::registry::Registry::HandlerBitsType =  eHandlerBits</definition>
        <argsstring></argsstring>
        <name>HandlerBitsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="65" column="1" bodyfile="src/vt/registry/registry.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1registry_1_1_registry_1aed8ec48ac909aea3e4dbc21aa6f8e898" prot="public" static="no">
        <type>std::tuple&lt; <ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref>, <ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> &gt;</type>
        <definition>using vt::registry::Registry::TaggerHandlerType =  std::tuple&lt;TagType, HandlerType&gt;</definition>
        <argsstring></argsstring>
        <name>TaggerHandlerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="66" column="1" bodyfile="src/vt/registry/registry.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1registry_1_1_registry_1ac9e1297d26b6c553ccdaa46858cdb3b8" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref>, <ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref> &gt;</type>
        <definition>using vt::registry::Registry::ContainerType =  std::unordered_map&lt;HandlerType, ActiveClosureFnType&gt;</definition>
        <argsstring></argsstring>
        <name>ContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="67" column="1" bodyfile="src/vt/registry/registry.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1registry_1_1_registry_1abefc9cdcc8557c5d547dd3ae44ae0996" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref>, <ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref> &gt;</type>
        <definition>using vt::registry::Registry::TagContainerType =  std::unordered_map&lt;TagType, ActiveClosureFnType&gt;</definition>
        <argsstring></argsstring>
        <name>TagContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="68" column="1" bodyfile="src/vt/registry/registry.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1registry_1_1_registry_1ab5d336044aee749d39c8feabe4fa6983" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref>, <ref refid="structvt_1_1registry_1_1_registry_1abefc9cdcc8557c5d547dd3ae44ae0996" kindref="member">TagContainerType</ref> &gt;</type>
        <definition>using vt::registry::Registry::HanTagContainerType =  std::unordered_map&lt;HandlerType, TagContainerType&gt;</definition>
        <argsstring></argsstring>
        <name>HanTagContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="69" column="1" bodyfile="src/vt/registry/registry.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1registry_1_1_registry_1adb3e36c663839801759d6bd264b8c4b5" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1registry_1_1_registry_1ac9e1297d26b6c553ccdaa46858cdb3b8" kindref="member">ContainerType</ref></type>
        <definition>ContainerType vt::registry::Registry::registered_</definition>
        <argsstring></argsstring>
        <name>registered_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="155" column="1" bodyfile="src/vt/registry/registry.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1registry_1_1_registry_1ad7d3a1810876242414c29c24db82bb6c" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1registry_1_1_registry_1ab5d336044aee749d39c8feabe4fa6983" kindref="member">HanTagContainerType</ref></type>
        <definition>HanTagContainerType vt::registry::Registry::tagged_registered_</definition>
        <argsstring></argsstring>
        <name>tagged_registered_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="156" column="1" bodyfile="src/vt/registry/registry.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1registry_1_1_registry_1afbdfcfbd2a8c30820545587e1650fb20" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a59ae068fe828d1c33051ff96f3d016b6" kindref="member">HandlerIdentifierType</ref></type>
        <definition>HandlerIdentifierType vt::registry::Registry::cur_ident_collective_</definition>
        <argsstring></argsstring>
        <name>cur_ident_collective_</name>
        <initializer>= first_handle_identifier</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="157" column="1" bodyfile="src/vt/registry/registry.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1registry_1_1_registry_1a8aed0f506143750c8444f7b6660be1c5" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a59ae068fe828d1c33051ff96f3d016b6" kindref="member">HandlerIdentifierType</ref></type>
        <definition>HandlerIdentifierType vt::registry::Registry::cur_ident_</definition>
        <argsstring></argsstring>
        <name>cur_ident_</name>
        <initializer>= first_handle_identifier</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="158" column="1" bodyfile="src/vt/registry/registry.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1a319ac9c59641bee88d48e825a4840aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::registry::Registry::Registry</definition>
        <argsstring>()=default</argsstring>
        <name>Registry</name>
        <briefdescription>
<para>System call to construct a registry. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1a8488eb3ab95e207094617027bb5c75c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string vt::registry::Registry::name</definition>
        <argsstring>() override</argsstring>
        <name>name</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_name_1a33c06229bb605a2b2ceff68830d6d773">name</reimplements>
        <briefdescription>
<para>Get the name of the component. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="76" column="1" bodyfile="src/vt/registry/registry.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1a2e3b140ef858712eb34deb89623cbbc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::registry::Registry::registerNewHandler</definition>
        <argsstring>(ActiveClosureFnType fn, TagType const &amp;tag=no_tag, bool const &amp;is_collective=false)</argsstring>
        <name>registerNewHandler</name>
        <param>
          <type><ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref></type>
          <declname>fn</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_collective</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Register a new handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fn</parametername>
</parameternamelist>
<parameterdescription>
<para>the active function pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>relevant message tag for delivery </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_collective</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it&apos;s a collective registration</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the handler ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="87" column="1" bodyfile="src/vt/registry/registry.cc" bodystart="49" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1aa251ec78d5033c6d05139d598789aa6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::registry::Registry::unregisterHandlerFn</definition>
        <argsstring>(HandlerType const han, TagType const &amp;tag=no_tag)</argsstring>
        <name>unregisterHandlerFn</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
<para>Unregister a handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>relevant message tag for delivery </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="98" column="1" bodyfile="src/vt/registry/registry.cc" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1a0533655bd2b805ae7d86be1cd0c792c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::registry::Registry::swapHandler</definition>
        <argsstring>(HandlerType const han, ActiveClosureFnType fn, TagType const &amp;tag=no_tag)</argsstring>
        <name>swapHandler</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref></type>
          <declname>fn</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
<para>Swap underlying handler out for registered handler ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fn</parametername>
</parameternamelist>
<parameterdescription>
<para>the active function to attach </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>tag to associate </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="109" column="1" bodyfile="src/vt/registry/registry.cc" bodystart="67" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1ad4fdbf2cfbe4e852c5556435efe4255f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::registry::Registry::registerActiveHandler</definition>
        <argsstring>(ActiveClosureFnType fn, TagType const &amp;tag=no_tag)</argsstring>
        <name>registerActiveHandler</name>
        <param>
          <type><ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref></type>
          <declname>fn</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
<para><ref refid="structvt_1_1registry_1_1_registry" kindref="compound">Registry</ref> an active handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fn</parametername>
</parameternamelist>
<parameterdescription>
<para>the active handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>relevant message tag</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the handler ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="121" column="1" bodyfile="src/vt/registry/registry.cc" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1a01d56f18c894b21f27a798d0fd012b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref></type>
        <definition>ActiveClosureFnType vt::registry::Registry::getHandler</definition>
        <argsstring>(HandlerType const han, TagType const &amp;tag=no_tag)</argsstring>
        <name>getHandler</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
<para>Get active function for handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>the relevant tag</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the active function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="133" column="1" bodyfile="src/vt/registry/registry.cc" bodystart="112" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1ae5bbdd48ff66c6d64af9f03076374070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a2a06c34cafcd511828f16cbf1476b924" kindref="member">ActiveClosureFnType</ref></type>
        <definition>ActiveClosureFnType vt::registry::Registry::getHandlerNoTag</definition>
        <argsstring>(HandlerType const han)</argsstring>
        <name>getHandlerNoTag</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>han</declname>
        </param>
        <briefdescription>
<para>Get active function for handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the active function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="144" column="1" bodyfile="src/vt/registry/registry.cc" bodystart="103" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1registry_1_1_registry_1a6f8e97636b7fc7bae1b2bfa44b032691" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::registry::Registry::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/registry.h" line="147" column="1" bodyfile="src/vt/registry/registry.h" bodystart="147" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A VT component that manages registered active handlers. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3396">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="3397" relation="public-inheritance">
        </childnode>
        <childnode refid="3400" relation="public-inheritance">
        </childnode>
        <childnode refid="3401" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3399">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="3395">
        <label>vt::runtime::component::Component&lt; Registry &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="3396" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3397">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="3398" relation="public-inheritance">
        </childnode>
        <childnode refid="3399" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3398">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="3394">
        <label>vt::registry::Registry</label>
        <link refid="structvt_1_1registry_1_1_registry"/>
        <childnode refid="3395" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3400">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="3401">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3404">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="3405" relation="public-inheritance">
        </childnode>
        <childnode refid="3408" relation="public-inheritance">
        </childnode>
        <childnode refid="3409" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3407">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="3403">
        <label>vt::runtime::component::Component&lt; Registry &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="3404" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3405">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="3406" relation="public-inheritance">
        </childnode>
        <childnode refid="3407" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3406">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="3402">
        <label>vt::registry::Registry</label>
        <link refid="structvt_1_1registry_1_1_registry"/>
        <childnode refid="3403" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3408">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="3409">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/registry/registry.h" line="63" column="1" bodyfile="src/vt/registry/registry.h" bodystart="63" bodyend="159"/>
    <listofallmembers>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ab954824329584814bb652ea810cd62e3" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1a94c1d493860adff6ae69c5eb31bb3f" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1ac9c39c6eafc72a1a240ed67ea12b3e66" prot="protected" virt="non-virtual"><scope>vt::registry::Registry</scope><name>component_id_</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1ac9e1297d26b6c553ccdaa46858cdb3b8" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>ContainerType</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1a8aed0f506143750c8444f7b6660be1c5" prot="private" virt="non-virtual"><scope>vt::registry::Registry</scope><name>cur_ident_</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1afbdfcfbd2a8c30820545587e1650fb20" prot="private" virt="non-virtual"><scope>vt::registry::Registry</scope><name>cur_ident_collective_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ad95ea698535524d0f82c5da9beaaaf37" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>DiagnosticBasePtrType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695" prot="public" virt="virtual"><scope>vt::registry::Registry</scope><name>dumpState</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a43eeed44aa64c77f5491abb4f5a39e9a" prot="public" virt="virtual"><scope>vt::registry::Registry</scope><name>fatalError</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a098e362de01af6054e5491fba671a959" prot="public" virt="virtual"><scope>vt::registry::Registry</scope><name>finalize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a1d6951af40ad0b4020860c0b21b1a85c" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>foreachDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1a45ab90398777ffdbb2ad5b62fe183d99" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>getComponentID</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a9c1f4174ac87bb6ae0ec186a08adbbbb" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>getDiagnosticsFootprint</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1a01d56f18c894b21f27a798d0fd012b80" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>getHandler</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1ae5bbdd48ff66c6d64af9f03076374070" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>getHandlerNoTag</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1acf13f3553c4f5c82dd9bd1cb716d435f" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>HandlerBitsType</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1a0717ad6519a3d2c6f3e1848182db4bfa" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>HandlerManagerType</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1ab5d336044aee749d39c8feabe4fa6983" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>HanTagContainerType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a7f07384d294e59796add9ce6be2d6410" prot="public" virt="virtual"><scope>vt::registry::Registry</scope><name>initialize</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1a8488eb3ab95e207094617027bb5c75c9" prot="public" virt="virtual"><scope>vt::registry::Registry</scope><name>name</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a5a15bd0369a9d3765a6c70249bada96f" prot="public" virt="virtual"><scope>vt::registry::Registry</scope><name>pollable</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a4e64b5a12ffc1874065aa8b09e6309a9" prot="public" virt="virtual"><scope>vt::registry::Registry</scope><name>preDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1dab11d9eb5bed8dfd5a3bb8fdf67f5a" prot="public" virt="virtual"><scope>vt::registry::Registry</scope><name>progress</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1af9d694f9d62d973a2cde6e52c55bef14" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>reducer</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1ad4fdbf2cfbe4e852c5556435efe4255f" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>registerActiveHandler</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa2cd54632710e7cdf1b20dfb676c752c" prot="protected" virt="non-virtual"><scope>vt::registry::Registry</scope><name>registerCounter</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1abb1ee7f09f05c143dbdfd3346f6cdcba" prot="protected" virt="non-virtual"><scope>vt::registry::Registry</scope><name>registerCounterT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ab71509224f5716107ef5c781ba5ff487" prot="protected" virt="non-virtual"><scope>vt::registry::Registry</scope><name>registerDiagnostic</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1adb3e36c663839801759d6bd264b8c4b5" prot="private" virt="non-virtual"><scope>vt::registry::Registry</scope><name>registered_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a20417bbb4fe4c4d7648aef3a2699b787" prot="protected" virt="non-virtual"><scope>vt::registry::Registry</scope><name>registerGauge</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa220905292aeb726254d3dff2e672b00" prot="protected" virt="non-virtual"><scope>vt::registry::Registry</scope><name>registerGaugeT</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1a2e3b140ef858712eb34deb89623cbbc3" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>registerNewHandler</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a5c6035a56d54cc3de270efedad3f026e" prot="protected" virt="non-virtual"><scope>vt::registry::Registry</scope><name>registerTimer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a328ecca78c6aa309bb764f3dde083c3e" prot="protected" virt="non-virtual"><scope>vt::registry::Registry</scope><name>registerTimerT</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1a319ac9c59641bee88d48e825a4840aa2" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>Registry</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1a6f8e97636b7fc7bae1b2bfa44b032691" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>serialize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1abe85836f57c42a695fdc292cd78b10cb" prot="public" virt="non-virtual" ambiguityscope="Component&lt; Registry &gt;::"><scope>vt::registry::Registry</scope><name>serialize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aad3974307ab3b2e1df389a91310f68c2" prot="public" virt="virtual"><scope>vt::registry::Registry</scope><name>startup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ac969a635e579cf7be3af696f500bf260" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>staticInit</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1a0533655bd2b805ae7d86be1cd0c792c3" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>swapHandler</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1abefc9cdcc8557c5d547dd3ae44ae0996" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>TagContainerType</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1ad7d3a1810876242414c29c24db82bb6c" prot="private" virt="non-virtual"><scope>vt::registry::Registry</scope><name>tagged_registered_</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1aed8ec48ac909aea3e4dbc21aa6f8e898" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>TaggerHandlerType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a2bcd1016fcdb6395844d4fd15d84a570" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>UnitType</name></member>
      <member refid="structvt_1_1registry_1_1_registry_1aa251ec78d5033c6d05139d598789aa6b" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>unregisterHandlerFn</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a97b0e8ff394c8aa04035ff15165eb087" prot="protected" virt="non-virtual"><scope>vt::registry::Registry</scope><name>updateDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a75e737294bb63e1898d9ac4515f0cf63" prot="public" virt="non-virtual"><scope>vt::registry::Registry</scope><name>UpdateType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a9190b5cb499f9cfdacc1e0bd98a1805a" prot="public" virt="virtual"><scope>vt::registry::Registry</scope><name>~BaseComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
