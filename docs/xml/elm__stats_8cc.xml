<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="elm__stats_8cc" kind="file" language="C++">
    <compoundname>elm_stats.cc</compoundname>
    <includes refid="elm__stats_8h" local="yes">vt/elm/elm_stats.h</includes>
    <includes refid="config_8h" local="yes">vt/config.h</includes>
    <incdepgraph>
      <node id="91950">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
      </node>
      <node id="91935">
        <label>functional</label>
      </node>
      <node id="91958">
        <label>vt/epoch/epoch_impl_type.h</label>
        <link refid="epoch__impl__type_8h"/>
        <childnode refid="91934" relation="include">
        </childnode>
        <childnode refid="91936" relation="include">
        </childnode>
      </node>
      <node id="91939">
        <label>fmt/format.h</label>
      </node>
      <node id="91940">
        <label>vt/elm/elm_comm.h</label>
        <link refid="elm__comm_8h"/>
        <childnode refid="91932" relation="include">
        </childnode>
        <childnode refid="91941" relation="include">
        </childnode>
      </node>
      <node id="91962">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="91963" relation="include">
        </childnode>
        <childnode refid="91933" relation="include">
        </childnode>
        <childnode refid="91943" relation="include">
        </childnode>
      </node>
      <node id="91932">
        <label>vt/elm/elm_id.h</label>
        <link refid="elm__id_8h"/>
        <childnode refid="91933" relation="include">
        </childnode>
        <childnode refid="91936" relation="include">
        </childnode>
        <childnode refid="91939" relation="include">
        </childnode>
      </node>
      <node id="91963">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="91943" relation="include">
        </childnode>
        <childnode refid="91964" relation="include">
        </childnode>
      </node>
      <node id="91946">
        <label>vt/timing/timing_type.h</label>
        <link refid="timing__type_8h"/>
      </node>
      <node id="91942">
        <label>vt/timing/timing.h</label>
        <link refid="timing_8h"/>
        <childnode refid="91943" relation="include">
        </childnode>
        <childnode refid="91944" relation="include">
        </childnode>
        <childnode refid="91945" relation="include">
        </childnode>
        <childnode refid="91946" relation="include">
        </childnode>
      </node>
      <node id="91934">
        <label>cstdint</label>
      </node>
      <node id="91982">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="91970" relation="include">
        </childnode>
        <childnode refid="91933" relation="include">
        </childnode>
        <childnode refid="91976" relation="include">
        </childnode>
        <childnode refid="91981" relation="include">
        </childnode>
        <childnode refid="91983" relation="include">
        </childnode>
        <childnode refid="91962" relation="include">
        </childnode>
        <childnode refid="91980" relation="include">
        </childnode>
        <childnode refid="91938" relation="include">
        </childnode>
        <childnode refid="91961" relation="include">
        </childnode>
        <childnode refid="91943" relation="include">
        </childnode>
        <childnode refid="91985" relation="include">
        </childnode>
        <childnode refid="91945" relation="include">
        </childnode>
      </node>
      <node id="91959">
        <label>vt/epoch/epoch_type.h</label>
        <link refid="epoch__type_8h"/>
        <childnode refid="91960" relation="include">
        </childnode>
        <childnode refid="91958" relation="include">
        </childnode>
        <childnode refid="91939" relation="include">
        </childnode>
      </node>
      <node id="91980">
        <label>cassert</label>
      </node>
      <node id="91977">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="91970" relation="include">
        </childnode>
        <childnode refid="91933" relation="include">
        </childnode>
        <childnode refid="91976" relation="include">
        </childnode>
        <childnode refid="91978" relation="include">
        </childnode>
        <childnode refid="91962" relation="include">
        </childnode>
        <childnode refid="91971" relation="include">
        </childnode>
        <childnode refid="91938" relation="include">
        </childnode>
        <childnode refid="91961" relation="include">
        </childnode>
        <childnode refid="91943" relation="include">
        </childnode>
        <childnode refid="91980" relation="include">
        </childnode>
        <childnode refid="91945" relation="include">
        </childnode>
      </node>
      <node id="91956">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="91957" relation="include">
        </childnode>
        <childnode refid="91958" relation="include">
        </childnode>
      </node>
      <node id="91970">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="91933" relation="include">
        </childnode>
      </node>
      <node id="91957">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
        <childnode refid="91933" relation="include">
        </childnode>
      </node>
      <node id="91967">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="91968" relation="include">
        </childnode>
        <childnode refid="91972" relation="include">
        </childnode>
        <childnode refid="91975" relation="include">
        </childnode>
      </node>
      <node id="91943">
        <label>string</label>
      </node>
      <node id="91944">
        <label>EngFormat-Cpp/eng_format.hpp</label>
      </node>
      <node id="91983">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="91979" relation="include">
        </childnode>
        <childnode refid="91938" relation="include">
        </childnode>
        <childnode refid="91961" relation="include">
        </childnode>
        <childnode refid="91943" relation="include">
        </childnode>
        <childnode refid="91964" relation="include">
        </childnode>
        <childnode refid="91984" relation="include">
        </childnode>
      </node>
      <node id="91984">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="91983" relation="include">
        </childnode>
        <childnode refid="91962" relation="include">
        </childnode>
        <childnode refid="91979" relation="include">
        </childnode>
        <childnode refid="91938" relation="include">
        </childnode>
        <childnode refid="91961" relation="include">
        </childnode>
        <childnode refid="91943" relation="include">
        </childnode>
        <childnode refid="91964" relation="include">
        </childnode>
        <childnode refid="91945" relation="include">
        </childnode>
      </node>
      <node id="91931">
        <label>vt/elm/elm_stats.h</label>
        <link refid="elm__stats_8h"/>
        <childnode refid="91932" relation="include">
        </childnode>
        <childnode refid="91940" relation="include">
        </childnode>
        <childnode refid="91942" relation="include">
        </childnode>
      </node>
      <node id="91949">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="91934" relation="include">
        </childnode>
        <childnode refid="91950" relation="include">
        </childnode>
        <childnode refid="91951" relation="include">
        </childnode>
        <childnode refid="91953" relation="include">
        </childnode>
      </node>
      <node id="91936">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="91933" relation="include">
        </childnode>
        <childnode refid="91937" relation="include">
        </childnode>
      </node>
      <node id="91945">
        <label>fmt/core.h</label>
      </node>
      <node id="91948">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="91949" relation="include">
        </childnode>
        <childnode refid="91954" relation="include">
        </childnode>
      </node>
      <node id="91969">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="91943" relation="include">
        </childnode>
      </node>
      <node id="91933">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="91934" relation="include">
        </childnode>
        <childnode refid="91935" relation="include">
        </childnode>
      </node>
      <node id="91973">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="91955" relation="include">
        </childnode>
        <childnode refid="91943" relation="include">
        </childnode>
        <childnode refid="91938" relation="include">
        </childnode>
        <childnode refid="91961" relation="include">
        </childnode>
        <childnode refid="91974" relation="include">
        </childnode>
      </node>
      <node id="91930">
        <label>src/vt/elm/elm_stats.cc</label>
        <link refid="elm__stats_8cc"/>
        <childnode refid="91931" relation="include">
        </childnode>
        <childnode refid="91947" relation="include">
        </childnode>
      </node>
      <node id="91965">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
        <childnode refid="91966" relation="include">
        </childnode>
      </node>
      <node id="91968">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="91969" relation="include">
        </childnode>
        <childnode refid="91933" relation="include">
        </childnode>
        <childnode refid="91970" relation="include">
        </childnode>
        <childnode refid="91971" relation="include">
        </childnode>
        <childnode refid="91951" relation="include">
        </childnode>
        <childnode refid="91943" relation="include">
        </childnode>
        <childnode refid="91945" relation="include">
        </childnode>
      </node>
      <node id="91938">
        <label>tuple</label>
      </node>
      <node id="91960">
        <label>vt/utils/strong/strong_type.h</label>
        <link refid="strong__type_8h"/>
        <childnode refid="91935" relation="include">
        </childnode>
        <childnode refid="91961" relation="include">
        </childnode>
      </node>
      <node id="91954">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="91955" relation="include">
        </childnode>
        <childnode refid="91949" relation="include">
        </childnode>
        <childnode refid="91962" relation="include">
        </childnode>
        <childnode refid="91965" relation="include">
        </childnode>
        <childnode refid="91945" relation="include">
        </childnode>
      </node>
      <node id="91964">
        <label>vector</label>
      </node>
      <node id="91966">
        <label>utility</label>
      </node>
      <node id="91985">
        <label>sstream</label>
      </node>
      <node id="91952">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="91978">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="91979" relation="include">
        </childnode>
        <childnode refid="91943" relation="include">
        </childnode>
        <childnode refid="91938" relation="include">
        </childnode>
        <childnode refid="91964" relation="include">
        </childnode>
      </node>
      <node id="91951">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
        <childnode refid="91952" relation="include">
        </childnode>
      </node>
      <node id="91979">
        <label>cstdlib</label>
      </node>
      <node id="91972">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="91970" relation="include">
        </childnode>
        <childnode refid="91973" relation="include">
        </childnode>
        <childnode refid="91938" relation="include">
        </childnode>
      </node>
      <node id="91941">
        <label>unordered_map</label>
      </node>
      <node id="91955">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="91933" relation="include">
        </childnode>
        <childnode refid="91937" relation="include">
        </childnode>
        <childnode refid="91956" relation="include">
        </childnode>
        <childnode refid="91936" relation="include">
        </childnode>
        <childnode refid="91959" relation="include">
        </childnode>
      </node>
      <node id="91976">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="91933" relation="include">
        </childnode>
        <childnode refid="91970" relation="include">
        </childnode>
        <childnode refid="91938" relation="include">
        </childnode>
        <childnode refid="91961" relation="include">
        </childnode>
        <childnode refid="91943" relation="include">
        </childnode>
        <childnode refid="91977" relation="include">
        </childnode>
      </node>
      <node id="91937">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="91933" relation="include">
        </childnode>
        <childnode refid="91934" relation="include">
        </childnode>
        <childnode refid="91935" relation="include">
        </childnode>
        <childnode refid="91938" relation="include">
        </childnode>
      </node>
      <node id="91961">
        <label>type_traits</label>
      </node>
      <node id="91971">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="91955" relation="include">
        </childnode>
        <childnode refid="91943" relation="include">
        </childnode>
      </node>
      <node id="91947">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="91948" relation="include">
        </childnode>
        <childnode refid="91955" relation="include">
        </childnode>
        <childnode refid="91967" relation="include">
        </childnode>
      </node>
      <node id="91953">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="91975">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="91976" relation="include">
        </childnode>
        <childnode refid="91981" relation="include">
        </childnode>
        <childnode refid="91938" relation="include">
        </childnode>
        <childnode refid="91961" relation="include">
        </childnode>
      </node>
      <node id="91981">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="91970" relation="include">
        </childnode>
        <childnode refid="91933" relation="include">
        </childnode>
        <childnode refid="91938" relation="include">
        </childnode>
        <childnode refid="91943" relation="include">
        </childnode>
        <childnode refid="91982" relation="include">
        </childnode>
      </node>
      <node id="91974">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="91955" relation="include">
        </childnode>
        <childnode refid="91949" relation="include">
        </childnode>
        <childnode refid="91970" relation="include">
        </childnode>
        <childnode refid="91973" relation="include">
        </childnode>
        <childnode refid="91971" relation="include">
        </childnode>
        <childnode refid="91969" relation="include">
        </childnode>
        <childnode refid="91943" relation="include">
        </childnode>
        <childnode refid="91938" relation="include">
        </childnode>
        <childnode refid="91961" relation="include">
        </childnode>
        <childnode refid="91945" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1elm">vt::elm</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="elm__stats_8cc_1a725127478a52876ca035c4c7dc32f2a5" prot="public" static="no">
        <name>INCLUDED_VT_ELM_ELM_STATS_CC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_stats.cc" line="45" column="9" bodyfile="src/vt/elm/elm_stats.cc" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm_stats.cc</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2021<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_VT_ELM_ELM_STATS_CC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_VT_ELM_ELM_STATS_CC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="elm__stats_8h" kindref="compound">vt/elm/elm_stats.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">vt/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">elm<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a58f57dbc6d180338d53a8acd8ba29712" kindref="member">ElementStats::startTime</ref>()<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>TimeTypeWrapper<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>start_time<sp/>=<sp/><ref refid="namespacevt_1_1timing_1adb71f74fee337dab5a317e58e7d35b1d" kindref="member">timing::getCurrentTime</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a640cbac2711a3918c75658665ea17956" kindref="member">cur_time_</ref><sp/>=<sp/>start_time.seconds();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1acff21e309c927473a0982162cce3d90b" kindref="member">cur_time_started_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a9b54bf70f7b7fe7cfb6f3da0e167ae27" kindref="member">verbose</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aecb25779c74e06cc3e6baf03ed8289ed" kindref="member">lb</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ElementStats:<sp/>startTime:<sp/>time={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>start_time</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ac3ec6239fc848a98d7c9aba6e0331764" kindref="member">ElementStats::stopTime</ref>()<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>TimeTypeWrapper<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>stop_time<sp/>=<sp/><ref refid="namespacevt_1_1timing_1adb71f74fee337dab5a317e58e7d35b1d" kindref="member">timing::getCurrentTime</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>TimeTypeWrapper<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>total_time<sp/>=<sp/>stop_time.seconds()<sp/>-<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a640cbac2711a3918c75658665ea17956" kindref="member">cur_time_</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//vtAssert(cur_time_started_,<sp/>&quot;Must<sp/>have<sp/>started<sp/>time&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>started<sp/>=<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1acff21e309c927473a0982162cce3d90b" kindref="member">cur_time_started_</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(started)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1acff21e309c927473a0982162cce3d90b" kindref="member">cur_time_started_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a17db2e465f6b06239f0b0ceb4e7d9f42" kindref="member">addTime</ref>(total_time);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a9b54bf70f7b7fe7cfb6f3da0e167ae27" kindref="member">verbose</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aecb25779c74e06cc3e6baf03ed8289ed" kindref="member">lb</ref>,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ElementStats:<sp/>stopTime:<sp/>time={},<sp/>total={},<sp/>started={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>stop_time,<sp/>total_time,<sp/>started</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1af9452e09210ecdfae2b1759ee1b1fb91" kindref="member">ElementStats::sendToEntity</ref>(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref><sp/>to,<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref><sp/>from,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bytes</highlight></codeline>
<codeline lineno="84"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>elm::CommKey<sp/>key(elm::CommKey::SendRecvTag{},<sp/>from,<sp/>to,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a43ee151dce76d5480f2121e8b2deaac2" kindref="member">sendComm</ref>(key,<sp/>bytes);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a43ee151dce76d5480f2121e8b2deaac2" kindref="member">ElementStats::sendComm</ref>(elm::CommKey<sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bytes)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ab44d8162968d9310df926c7312d49c1d" kindref="member">phase_comm_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>][key].sendMsg(bytes);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a8821119818d8ab253ebded8869b5e693" kindref="member">subphase_comm_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>].resize(<ref refid="structvt_1_1elm_1_1_element_stats_1ab493bd6bcb711e4ac1e68d7f94249c30" kindref="member">cur_subphase_</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a8821119818d8ab253ebded8869b5e693" kindref="member">subphase_comm_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>].at(<ref refid="structvt_1_1elm_1_1_element_stats_1ab493bd6bcb711e4ac1e68d7f94249c30" kindref="member">cur_subphase_</ref>)[key].sendMsg(bytes);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a5ec30d76df833e12cebf39fc25eb514a" kindref="member">ElementStats::recvComm</ref>(</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>elm::CommKey<sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bytes</highlight></codeline>
<codeline lineno="97"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ab44d8162968d9310df926c7312d49c1d" kindref="member">phase_comm_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>][key].receiveMsg(bytes);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a8821119818d8ab253ebded8869b5e693" kindref="member">subphase_comm_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>].resize(<ref refid="structvt_1_1elm_1_1_element_stats_1ab493bd6bcb711e4ac1e68d7f94249c30" kindref="member">cur_subphase_</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a8821119818d8ab253ebded8869b5e693" kindref="member">subphase_comm_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>].at(<ref refid="structvt_1_1elm_1_1_element_stats_1ab493bd6bcb711e4ac1e68d7f94249c30" kindref="member">cur_subphase_</ref>)[key].receiveMsg(bytes);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1aaf35c3797e1bce9710051a7fc5a46dc1" kindref="member">ElementStats::recvObjData</ref>(</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref><sp/>pto,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref><sp/>pfrom,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bytes,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bcast</highlight></codeline>
<codeline lineno="106"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>elm::CommKey<sp/>key(elm::CommKey::CollectionTag{},<sp/>pfrom,<sp/>pto,<sp/>bcast);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a5ec30d76df833e12cebf39fc25eb514a" kindref="member">recvComm</ref>(key,<sp/>bytes);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a33b8bdd69b89776a08055fbd72979fd2" kindref="member">ElementStats::recvFromNode</ref>(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref><sp/>pto,<sp/><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref><sp/>from,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bytes,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bcast</highlight></codeline>
<codeline lineno="114"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>elm::CommKey<sp/>key(elm::CommKey::NodeToCollectionTag{},<sp/>from,<sp/>pto,<sp/>bcast);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a5ec30d76df833e12cebf39fc25eb514a" kindref="member">recvComm</ref>(key,<sp/>bytes);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1aa0ea8e1310cb4d70a8db1d43523c6064" kindref="member">ElementStats::recvToNode</ref>(</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref><sp/>to,<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref><sp/>pfrom,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bytes,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bcast</highlight></codeline>
<codeline lineno="122"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>elm::CommKey<sp/>key(elm::CommKey::CollectionToNodeTag{},<sp/>pfrom,<sp/>to,<sp/>bcast);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a5ec30d76df833e12cebf39fc25eb514a" kindref="member">recvComm</ref>(key,<sp/>bytes);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a17db2e465f6b06239f0b0ceb4e7d9f42" kindref="member">ElementStats::addTime</ref>(TimeTypeWrapper<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a7f9571931802777ac73afa0c0d8976f5" kindref="member">phase_timings_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>]<sp/>+=<sp/>time.seconds();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ae1b1ff4ab1b86011d73bfc4f1a6fc2aa" kindref="member">subphase_timings_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>].resize(<ref refid="structvt_1_1elm_1_1_element_stats_1ab493bd6bcb711e4ac1e68d7f94249c30" kindref="member">cur_subphase_</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ae1b1ff4ab1b86011d73bfc4f1a6fc2aa" kindref="member">subphase_timings_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>].at(<ref refid="structvt_1_1elm_1_1_element_stats_1ab493bd6bcb711e4ac1e68d7f94249c30" kindref="member">cur_subphase_</ref>)<sp/>+=<sp/>time.seconds();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a9b54bf70f7b7fe7cfb6f3da0e167ae27" kindref="member">verbose</ref>,<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aecb25779c74e06cc3e6baf03ed8289ed" kindref="member">lb</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ElementStats:<sp/>addTime:<sp/>time={},<sp/>cur_load={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>time,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>TimeTypeWrapper(<ref refid="structvt_1_1elm_1_1_element_stats_1a7f9571931802777ac73afa0c0d8976f5" kindref="member">phase_timings_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>])</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1acaa20f9ee9c21209eb1c001b39732029" kindref="member">ElementStats::updatePhase</ref>(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>inc)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a9b54bf70f7b7fe7cfb6f3da0e167ae27" kindref="member">verbose</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aecb25779c74e06cc3e6baf03ed8289ed" kindref="member">lb</ref>,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ElementStats:<sp/>updatePhase:<sp/>cur_phase_={},<sp/>inc={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>,<sp/>inc</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref><sp/>+=<sp/>inc;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>all<sp/>table<sp/>entries<sp/>for<sp/>current<sp/>phase,<sp/>to<sp/>ensure<sp/>presence<sp/>even</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>they&apos;re<sp/>left<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a7f9571931802777ac73afa0c0d8976f5" kindref="member">phase_timings_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ae1b1ff4ab1b86011d73bfc4f1a6fc2aa" kindref="member">subphase_timings_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ab44d8162968d9310df926c7312d49c1d" kindref="member">phase_comm_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a8821119818d8ab253ebded8869b5e693" kindref="member">subphase_comm_</ref>[<ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>];</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1af9cd414ce031379618bf7a7c6f1e5888" kindref="member">ElementStats::resetPhase</ref>()<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref><sp/>=<sp/>fst_lb_phase;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a92dc6fcc45664696a7a9a12089b035cd" kindref="member">ElementStats::getPhase</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1abf8772ed13a418246a6f7e33309f3374" kindref="member">cur_phase_</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a256c7acd901c72b6813085756200e2b6" kindref="member">ElementStats::getLoad</ref>(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a7f9571931802777ac73afa0c0d8976f5" kindref="member">phase_timings_</ref>.find(phase);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a7f9571931802777ac73afa0c0d8976f5" kindref="member">phase_timings_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>TimeTypeWrapper<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>total_load<sp/>=<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a7f9571931802777ac73afa0c0d8976f5" kindref="member">phase_timings_</ref>.at(phase);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a9b54bf70f7b7fe7cfb6f3da0e167ae27" kindref="member">verbose</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aecb25779c74e06cc3e6baf03ed8289ed" kindref="member">lb</ref>,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ElementStats:<sp/>getLoad:<sp/>load={},<sp/>phase={},<sp/>size={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total_load,<sp/>phase,<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a7f9571931802777ac73afa0c0d8976f5" kindref="member">phase_timings_</ref>.size()</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_load.seconds();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a256c7acd901c72b6813085756200e2b6" kindref="member">ElementStats::getLoad</ref>(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/>phase,<sp/><ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref><sp/>subphase)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subphase<sp/>==<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a6d338e3acd9504dc88d6664a24e567ce" kindref="member">no_subphase</ref>)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a256c7acd901c72b6813085756200e2b6" kindref="member">getLoad</ref>(phase);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>subphase_loads<sp/>=<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ae1b1ff4ab1b86011d73bfc4f1a6fc2aa" kindref="member">subphase_timings_</ref>.at(phase);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(subphase_loads.size()<sp/>&gt;<sp/>subphase,<sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>have<sp/>subphase&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>TimeTypeWrapper<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>total_load<sp/>=<sp/>subphase_loads.at(subphase);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a9b54bf70f7b7fe7cfb6f3da0e167ae27" kindref="member">verbose</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aecb25779c74e06cc3e6baf03ed8289ed" kindref="member">lb</ref>,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ElementStats:<sp/>getLoad:<sp/>load={},<sp/>phase={},<sp/>subphase={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>total_load,<sp/>phase,<sp/>subphase</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_load.seconds();</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">std::vector&lt;TimeType&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a979741c0d029ea52a6ba585967becef1" kindref="member">ElementStats::getSubphaseTimes</ref>(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/>phase)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ae1b1ff4ab1b86011d73bfc4f1a6fc2aa" kindref="member">subphase_timings_</ref>[<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref>];</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="namespacevt_1_1elm_1a38487cb8896b9b4763efa9022fab560e" kindref="member">CommMapType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="structvt_1_1elm_1_1_element_stats_1a93b05e0c18f4d929161ccafabaee4ff8" kindref="member">ElementStats::getComm</ref>(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>phase)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>phase_comm<sp/>=<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ab44d8162968d9310df926c7312d49c1d" kindref="member">phase_comm_</ref>[<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref>];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a9b54bf70f7b7fe7cfb6f3da0e167ae27" kindref="member">verbose</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aecb25779c74e06cc3e6baf03ed8289ed" kindref="member">lb</ref>,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ElementStats:<sp/>getComm:<sp/>comm<sp/>size={},<sp/>phase={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>phase_comm.size(),<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>phase_comm;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">std::vector&lt;CommMapType&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1aee5101c331562bb1390278a32b13b39b" kindref="member">ElementStats::getSubphaseComm</ref>(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/>phase)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>subphase_comm<sp/>=<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a8821119818d8ab253ebded8869b5e693" kindref="member">subphase_comm_</ref>[<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref>];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a9b54bf70f7b7fe7cfb6f3da0e167ae27" kindref="member">verbose</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aecb25779c74e06cc3e6baf03ed8289ed" kindref="member">lb</ref>,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ElementStats:<sp/>getSubphaseComm:<sp/>comm<sp/>size={},<sp/>phase={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>subphase_comm.size(),<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subphase_comm;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a8dd033cd3aba13f35212db30a7b8db2f" kindref="member">ElementStats::setSubPhase</ref>(<ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref><sp/>subphase)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(subphase<sp/>&lt;<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a6d338e3acd9504dc88d6664a24e567ce" kindref="member">no_subphase</ref>,<sp/></highlight><highlight class="stringliteral">&quot;subphase<sp/>must<sp/>be<sp/>less<sp/>than<sp/>sentinel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ab493bd6bcb711e4ac1e68d7f94249c30" kindref="member">cur_subphase_</ref><sp/>=<sp/>subphase;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ae9e567cc2429fd42046472282811daa9" kindref="member">ElementStats::getSubPhase</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ab493bd6bcb711e4ac1e68d7f94249c30" kindref="member">cur_subphase_</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ab6abdce753149b261fd238392cc927c8" kindref="member">ElementStats::releaseStatsFromUnneededPhases</ref>(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/>phase,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>look_back)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>&gt;=<sp/>look_back)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a7f9571931802777ac73afa0c0d8976f5" kindref="member">phase_timings_</ref>.erase(phase<sp/>-<sp/>look_back);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ae1b1ff4ab1b86011d73bfc4f1a6fc2aa" kindref="member">subphase_timings_</ref>.erase(phase<sp/>-<sp/>look_back);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ab44d8162968d9310df926c7312d49c1d" kindref="member">phase_comm_</ref>.erase(phase<sp/>-<sp/>look_back);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a8821119818d8ab253ebded8869b5e693" kindref="member">subphase_comm_</ref>.erase(phase<sp/>-<sp/>look_back);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">std::size_t<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a0578b01b6a0f7aee29ad57676ee9073b" kindref="member">ElementStats::getLoadPhaseCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a7f9571931802777ac73afa0c0d8976f5" kindref="member">phase_timings_</ref>.size();</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">std::size_t<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a14daf54c633594bccdf408d8e0053792" kindref="member">ElementStats::getCommPhaseCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ab44d8162968d9310df926c7312d49c1d" kindref="member">phase_comm_</ref>.size();</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">std::size_t<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ad89dc198f43e9eaaff095b9d0130d4c1" kindref="member">ElementStats::getSubphaseLoadPhaseCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1ae1b1ff4ab1b86011d73bfc4f1a6fc2aa" kindref="member">subphase_timings_</ref>.size();</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">std::size_t<sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a7295efd869a1e7dca133ecb87ba9df25" kindref="member">ElementStats::getSubphaseCommPhaseCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1elm_1_1_element_stats_1a8821119818d8ab253ebded8869b5e693" kindref="member">subphase_comm_</ref>.size();</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">}}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::elm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_VT_ELM_ELM_STATS_CC*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/vt/elm/elm_stats.cc"/>
  </compounddef>
</doxygen>
