<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structvt_1_1trace_1_1_user_event_registry" kind="struct" language="C++" prot="public">
    <compoundname>vt::trace::UserEventRegistry</compoundname>
    <includes refid="trace__user__event_8h" local="no">trace_user_event.h</includes>
    <innerclass refid="structvt_1_1trace_1_1_user_event_registry_1_1_new_user_event_msg" prot="public">vt::trace::UserEventRegistry::NewUserEventMsg</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1trace_1_1_user_event_registry_1adbebc33d6c64eaee5f6c59be8482b833" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1trace_1a70c43e0e1596eea236912d4197d3120a" kindref="member">UserSpecEventIDType</ref></type>
        <definition>UserSpecEventIDType vt::trace::UserEventRegistry::cur_root_event_</definition>
        <argsstring></argsstring>
        <name>cur_root_event_</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="142" column="23" bodyfile="src/vt/trace/trace_user_event.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_user_event_registry_1a5aeb079091c716db207203ddea26b39d" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1trace_1a70c43e0e1596eea236912d4197d3120a" kindref="member">UserSpecEventIDType</ref></type>
        <definition>UserSpecEventIDType vt::trace::UserEventRegistry::cur_coll_event_</definition>
        <argsstring></argsstring>
        <name>cur_coll_event_</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="143" column="23" bodyfile="src/vt/trace/trace_user_event.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_user_event_registry_1a5756ec4a07f4624f2da1538afe1e553d" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref>, std::string &gt;</type>
        <definition>std::unordered_map&lt;UserEventIDType, std::string&gt; vt::trace::UserEventRegistry::user_event_</definition>
        <argsstring></argsstring>
        <name>user_event_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="144" column="22" bodyfile="src/vt/trace/trace_user_event.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1trace_1_1_user_event_registry_1a314bba11008b65bce09a560d3107a5c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::UserEventRegistry::newEventHan</definition>
        <argsstring>(NewUserEventMsg *msg)</argsstring>
        <name>newEventHan</name>
        <param>
          <type><ref refid="structvt_1_1trace_1_1_user_event_registry_1_1_new_user_event_msg" kindref="compound">NewUserEventMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="103" column="15" bodyfile="src/vt/trace/trace_user_event.cc" bodystart="75" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1trace_1_1_user_event_registry_1ac219431476480a6c9fe10ede067b33d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::UserEventRegistry::createEvent</definition>
        <argsstring>(bool user, bool rooted, NodeType in_node, UserSpecEventIDType id, bool hash=false)</argsstring>
        <name>createEvent</name>
        <param>
          <type>bool</type>
          <declname>user</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rooted</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>in_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a70c43e0e1596eea236912d4197d3120a" kindref="member">UserSpecEventIDType</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hash</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="106" column="19" bodyfile="src/vt/trace/trace_user_event.cc" bodystart="57" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_user_event_registry_1a351d80d6d91bcd47e9fff0f6ed18df4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::UserEventRegistry::collective</definition>
        <argsstring>(std::string const &amp;in_event_name)</argsstring>
        <name>collective</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in_event_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="110" column="19" bodyfile="src/vt/trace/trace_user_event.cc" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_user_event_registry_1a99ef8a7f7df7a11fac6ada816f83cfbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::UserEventRegistry::hash</definition>
        <argsstring>(std::string const &amp;in_event_name)</argsstring>
        <name>hash</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in_event_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="112" column="19" bodyfile="src/vt/trace/trace_user_event.cc" bodystart="80" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_user_event_registry_1a8b940e39914a9d3ba1acf0a219f6d44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::UserEventRegistry::rooted</definition>
        <argsstring>(std::string const &amp;in_event_name)</argsstring>
        <name>rooted</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in_event_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="113" column="19" bodyfile="src/vt/trace/trace_user_event.cc" bodystart="96" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_user_event_registry_1a6a2156b87f22007a4a20ca1b7e96d2fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::UserEventRegistry::user</definition>
        <argsstring>(std::string const &amp;in_event_name, UserSpecEventIDType id)</argsstring>
        <name>user</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in_event_name</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a70c43e0e1596eea236912d4197d3120a" kindref="member">UserSpecEventIDType</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="114" column="19" bodyfile="src/vt/trace/trace_user_event.cc" bodystart="107" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_user_event_registry_1aaa8cbfc8f3596bb5f9aa97cccd72f890" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref>, std::string &gt; const  &amp;</type>
        <definition>std::unordered_map&lt;UserEventIDType, std::string&gt; const&amp; vt::trace::UserEventRegistry::getEvents</definition>
        <argsstring>() const</argsstring>
        <name>getEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="120" column="28" bodyfile="src/vt/trace/trace_user_event.h" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_user_event_registry_1ae2ab385a6ce4a4b0c2afd1a408ba7f6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Serializer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::trace::UserEventRegistry::serialize</definition>
        <argsstring>(Serializer &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>Serializer &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="127" column="8" bodyfile="src/vt/trace/trace_user_event.h" bodystart="127" bodyend="131"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1trace_1_1_user_event_registry_1a17caa1eeb27fd6a4af8786a7f0679d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void insertNewUserEvent</definition>
        <argsstring>(UserEventIDType event, std::string const &amp;name)</argsstring>
        <name>insertNewUserEvent</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="124" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1trace_1_1_user_event_registry_1ae3e2193c40fd3ff7de9367a02f9e457d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref>, bool &gt;</type>
        <definition>std::tuple&lt; UserEventIDType, bool &gt; vt::trace::UserEventRegistry::newEventImpl</definition>
        <argsstring>(bool user, bool rooted, std::string const &amp;in_event, UserSpecEventIDType id, bool hash=false)</argsstring>
        <name>newEventImpl</name>
        <param>
          <type>bool</type>
          <declname>user</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rooted</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>in_event</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a70c43e0e1596eea236912d4197d3120a" kindref="member">UserSpecEventIDType</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hash</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="134" column="14" bodyfile="src/vt/trace/trace_user_event.cc" bodystart="126" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_user_event_registry_1a5322490b81bb736a4649e23d47fd374b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::trace::UserEventRegistry::insertEvent</definition>
        <argsstring>(UserEventIDType event, std::string const &amp;name)</argsstring>
        <name>insertEvent</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="139" column="8" bodyfile="src/vt/trace/trace_user_event.cc" bodystart="136" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/trace/trace_user_event.h" line="81" column="24" bodyfile="src/vt/trace/trace_user_event.h" bodystart="81" bodyend="145"/>
    <listofallmembers>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1a351d80d6d91bcd47e9fff0f6ed18df4d" prot="public" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>collective</name></member>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1ac219431476480a6c9fe10ede067b33d2" prot="public" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>createEvent</name></member>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1a5aeb079091c716db207203ddea26b39d" prot="private" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>cur_coll_event_</name></member>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1adbebc33d6c64eaee5f6c59be8482b833" prot="private" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>cur_root_event_</name></member>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1aaa8cbfc8f3596bb5f9aa97cccd72f890" prot="public" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>getEvents</name></member>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1a99ef8a7f7df7a11fac6ada816f83cfbf" prot="public" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>hash</name></member>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1a5322490b81bb736a4649e23d47fd374b" prot="private" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>insertEvent</name></member>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1a17caa1eeb27fd6a4af8786a7f0679d77" prot="public" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>insertNewUserEvent</name></member>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1a314bba11008b65bce09a560d3107a5c5" prot="public" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>newEventHan</name></member>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1ae3e2193c40fd3ff7de9367a02f9e457d" prot="private" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>newEventImpl</name></member>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1a8b940e39914a9d3ba1acf0a219f6d44d" prot="public" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>rooted</name></member>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1ae2ab385a6ce4a4b0c2afd1a408ba7f6e" prot="public" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>serialize</name></member>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1a6a2156b87f22007a4a20ca1b7e96d2fe" prot="public" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>user</name></member>
      <member refid="structvt_1_1trace_1_1_user_event_registry_1a5756ec4a07f4624f2da1538afe1e553d" prot="private" virt="non-virtual"><scope>vt::trace::UserEventRegistry</scope><name>user_event_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
