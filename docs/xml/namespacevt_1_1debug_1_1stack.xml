<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacevt_1_1debug_1_1stack" kind="namespace" language="C++">
    <compoundname>vt::debug::stack</compoundname>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacevt_1_1debug_1_1stack_1a78258403837e0485bd23854241b12287" prot="public" static="no">
        <type>std::tuple&lt; int32_t, uint64_t, std::string, std::size_t &gt;</type>
        <definition>using vt::debug::stack::StackTupleType = typedef std::tuple&lt;int32_t,uint64_t,std::string,std::size_t&gt;</definition>
        <argsstring></argsstring>
        <name>StackTupleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/configs/error/stack_out.h" line="54" column="1" bodyfile="src/vt/configs/error/stack_out.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1debug_1_1stack_1ad492fbef68802fc38922b49caf401d63" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespacevt_1_1debug_1_1stack_1a78258403837e0485bd23854241b12287" kindref="member">StackTupleType</ref> &gt;</type>
        <definition>using vt::debug::stack::DumpStackType = typedef std::vector&lt;StackTupleType&gt;</definition>
        <argsstring></argsstring>
        <name>DumpStackType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/configs/error/stack_out.h" line="55" column="1" bodyfile="src/vt/configs/error/stack_out.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1debug_1_1stack_1a89827f4a5411b18eb8fd0ea41d7b869d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1debug_1_1stack_1ad492fbef68802fc38922b49caf401d63" kindref="member">DumpStackType</ref></type>
        <definition>DumpStackType vt::debug::stack::dumpStack</definition>
        <argsstring>(int skip)</argsstring>
        <name>dumpStack</name>
        <param>
          <type>int</type>
          <declname>skip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/configs/error/stack_out.cc" line="60" column="1" bodyfile="src/vt/configs/error/stack_out.cc" bodystart="60" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1debug_1_1stack_1a4746a54afce7bc3b686cf6fa8c2d279f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vt::debug::stack::prettyPrintStack</definition>
        <argsstring>(DumpStackType const &amp;stack)</argsstring>
        <name>prettyPrintStack</name>
        <param>
          <type><ref refid="namespacevt_1_1debug_1_1stack_1ad492fbef68802fc38922b49caf401d63" kindref="member">DumpStackType</ref> const &amp;</type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/configs/error/stack_out.cc" line="172" column="1" bodyfile="src/vt/configs/error/stack_out.cc" bodystart="172" bodyend="209"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/configs/error/stack_out.cc" line="58" column="1"/>
  </compounddef>
</doxygen>
