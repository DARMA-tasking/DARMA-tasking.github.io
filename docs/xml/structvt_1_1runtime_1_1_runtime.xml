<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1runtime_1_1_runtime" kind="struct" language="C++" prot="public">
    <compoundname>vt::runtime::Runtime</compoundname>
    <includes refid="runtime_8h" local="no">runtime.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" prot="public" static="no">
        <type>ComponentT *</type>
        <definition>using vt::runtime::Runtime::ComponentPtrType =  ComponentT*</definition>
        <argsstring></argsstring>
        <name>ComponentPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="82" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a1992e655c80324668af6b973b2cbd62b" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1runtime_1afca910c1b38b3975f7c1da8001a77d58" kindref="member">RuntimeInstType</ref> const</type>
        <definition>RuntimeInstType const vt::runtime::Runtime::instance_</definition>
        <argsstring></argsstring>
        <name>instance_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="251" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a30b262f43f826ffee213e10c71893323" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1arguments_1_1_arg_config" kindref="compound">arguments::ArgConfig</ref> &gt;</type>
        <definition>ComponentPtrType&lt;arguments::ArgConfig&gt; vt::runtime::Runtime::theArgConfig</definition>
        <argsstring></argsstring>
        <name>theArgConfig</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="404" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a8aad5f2fdd05ddd81995f5af94ce196e" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1messaging_1_1_active_messenger" kindref="compound">messaging::ActiveMessenger</ref> &gt;</type>
        <definition>ComponentPtrType&lt;messaging::ActiveMessenger&gt; vt::runtime::Runtime::theMsg</definition>
        <argsstring></argsstring>
        <name>theMsg</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="405" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a572dac3bef0126b593a93b2c651efb7e" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1ctx_1_1_context" kindref="compound">ctx::Context</ref> &gt;</type>
        <definition>ComponentPtrType&lt;ctx::Context&gt; vt::runtime::Runtime::theContext</definition>
        <argsstring></argsstring>
        <name>theContext</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="406" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1accfb27cbfaecafe834ade7cd6dc57d7b" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1event_1_1_async_event" kindref="compound">event::AsyncEvent</ref> &gt;</type>
        <definition>ComponentPtrType&lt;event::AsyncEvent&gt; vt::runtime::Runtime::theEvent</definition>
        <argsstring></argsstring>
        <name>theEvent</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="407" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a365e1addbed82440bb014f97b1c839f6" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1term_1_1_termination_detector" kindref="compound">term::TerminationDetector</ref> &gt;</type>
        <definition>ComponentPtrType&lt;term::TerminationDetector&gt; vt::runtime::Runtime::theTerm</definition>
        <argsstring></argsstring>
        <name>theTerm</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="408" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a52b4a07eacf90a576f077e193604eab9" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1collective_1_1_collective_alg" kindref="compound">collective::CollectiveAlg</ref> &gt;</type>
        <definition>ComponentPtrType&lt;collective::CollectiveAlg&gt; vt::runtime::Runtime::theCollective</definition>
        <argsstring></argsstring>
        <name>theCollective</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="409" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a060aca8399f1c6499c4676a26db2e39e" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1pool_1_1_pool" kindref="compound">pool::Pool</ref> &gt;</type>
        <definition>ComponentPtrType&lt;pool::Pool&gt; vt::runtime::Runtime::thePool</definition>
        <argsstring></argsstring>
        <name>thePool</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="410" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1ab8ec604b336a974682b0fec124a4a31b" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager" kindref="compound">rdma::RDMAManager</ref> &gt;</type>
        <definition>ComponentPtrType&lt;rdma::RDMAManager&gt; vt::runtime::Runtime::theRDMA</definition>
        <argsstring></argsstring>
        <name>theRDMA</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="411" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1ae9d0dc11ee40a455a64982eec66e3a26" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1sched_1_1_scheduler" kindref="compound">sched::Scheduler</ref> &gt;</type>
        <definition>ComponentPtrType&lt;sched::Scheduler&gt; vt::runtime::Runtime::theSched</definition>
        <argsstring></argsstring>
        <name>theSched</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="412" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1ae198134b20e8c3787f16f4e790f95d9a" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1location_1_1_location_manager" kindref="compound">location::LocationManager</ref> &gt;</type>
        <definition>ComponentPtrType&lt;location::LocationManager&gt; vt::runtime::Runtime::theLocMan</definition>
        <argsstring></argsstring>
        <name>theLocMan</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="413" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a85a0606ac06cd173561952676f09c077" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1vrt_1_1_virtual_context_manager" kindref="compound">vrt::VirtualContextManager</ref> &gt;</type>
        <definition>ComponentPtrType&lt;vrt::VirtualContextManager&gt; vt::runtime::Runtime::theVirtualManager</definition>
        <argsstring></argsstring>
        <name>theVirtualManager</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="414" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a9c74bf08aceff27fa43330d3f1c8d581" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager" kindref="compound">vrt::collection::CollectionManager</ref> &gt;</type>
        <definition>ComponentPtrType&lt;vrt::collection::CollectionManager&gt; vt::runtime::Runtime::theCollection</definition>
        <argsstring></argsstring>
        <name>theCollection</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="415" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a0c446440cc8a67118f2ffd9de9f01be4" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1group_1_1_group_manager" kindref="compound">group::GroupManager</ref> &gt;</type>
        <definition>ComponentPtrType&lt;group::GroupManager&gt; vt::runtime::Runtime::theGroup</definition>
        <argsstring></argsstring>
        <name>theGroup</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="416" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a8f4f5ea53aed7d2302bc52a39c16de0b" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1pipe_1_1_pipe_manager" kindref="compound">pipe::PipeManager</ref> &gt;</type>
        <definition>ComponentPtrType&lt;pipe::PipeManager&gt; vt::runtime::Runtime::theCB</definition>
        <argsstring></argsstring>
        <name>theCB</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="417" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1af2d01d5059edf4aed086f087e5ed1e91" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1objgroup_1_1_obj_group_manager" kindref="compound">objgroup::ObjGroupManager</ref> &gt;</type>
        <definition>ComponentPtrType&lt;objgroup::ObjGroupManager&gt; vt::runtime::Runtime::theObjGroup</definition>
        <argsstring></argsstring>
        <name>theObjGroup</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="418" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a99d9a28de0742915ca6b25393807dd8b" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1util_1_1memory_1_1_memory_usage" kindref="compound">util::memory::MemoryUsage</ref> &gt;</type>
        <definition>ComponentPtrType&lt;util::memory::MemoryUsage&gt; vt::runtime::Runtime::theMemUsage</definition>
        <argsstring></argsstring>
        <name>theMemUsage</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="419" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a4772a2e3ae26f5dae29ea474ac0050c7" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1rdma_1_1_manager" kindref="compound">rdma::Manager</ref> &gt;</type>
        <definition>ComponentPtrType&lt;rdma::Manager&gt; vt::runtime::Runtime::theHandleRDMA</definition>
        <argsstring></argsstring>
        <name>theHandleRDMA</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="420" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a0a596fabff7d26a9417e8f7886410eee" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data" kindref="compound">vrt::collection::balance::NodeLBData</ref> &gt;</type>
        <definition>ComponentPtrType&lt;vrt::collection::balance::NodeLBData&gt; vt::runtime::Runtime::theNodeLBData</definition>
        <argsstring></argsstring>
        <name>theNodeLBData</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="421" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1afb8103d823cabc7bacb6035f785e9324" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_restart_reader" kindref="compound">vrt::collection::balance::LBDataRestartReader</ref> &gt;</type>
        <definition>ComponentPtrType&lt;vrt::collection::balance::LBDataRestartReader&gt; vt::runtime::Runtime::theLBDataReader</definition>
        <argsstring></argsstring>
        <name>theLBDataReader</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="422" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a0d324f5964ce89e2974a41bc3129829e" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_manager" kindref="compound">vrt::collection::balance::LBManager</ref> &gt;</type>
        <definition>ComponentPtrType&lt;vrt::collection::balance::LBManager&gt; vt::runtime::Runtime::theLBManager</definition>
        <argsstring></argsstring>
        <name>theLBManager</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="423" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a3d72d73ecd4ba3f0104dca596eae3862" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1timetrigger_1_1_time_trigger_manager" kindref="compound">timetrigger::TimeTriggerManager</ref> &gt;</type>
        <definition>ComponentPtrType&lt;timetrigger::TimeTriggerManager&gt; vt::runtime::Runtime::theTimeTrigger</definition>
        <argsstring></argsstring>
        <name>theTimeTrigger</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="424" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1aaad9fd5e7f0bb2d4bcc73fe1ce60bd9f" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1phase_1_1_phase_manager" kindref="compound">phase::PhaseManager</ref> &gt;</type>
        <definition>ComponentPtrType&lt;phase::PhaseManager&gt; vt::runtime::Runtime::thePhase</definition>
        <argsstring></argsstring>
        <name>thePhase</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="425" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1aa126046508c7d6e6d8470fec07160c8e" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" kindref="member">ComponentPtrType</ref>&lt; <ref refid="structvt_1_1epoch_1_1_epoch_manip" kindref="compound">epoch::EpochManip</ref> &gt;</type>
        <definition>ComponentPtrType&lt;epoch::EpochManip&gt; vt::runtime::Runtime::theEpoch</definition>
        <argsstring></argsstring>
        <name>theEpoch</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="426" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a93b6754895751a60137b86a5ccac18aa" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::has_physical_node_info</definition>
        <argsstring></argsstring>
        <name>has_physical_node_info</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="438" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a1c454863a1a4242437e1c457ee0f1e4e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::runtime::Runtime::physical_node_id</definition>
        <argsstring></argsstring>
        <name>physical_node_id</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="439" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a2c2103908d26e0dcf884f2605068e8f9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::runtime::Runtime::physical_num_nodes</definition>
        <argsstring></argsstring>
        <name>physical_num_nodes</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="440" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a699053ce129769223ba1eba6b3ac4025" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::runtime::Runtime::physical_node_size</definition>
        <argsstring></argsstring>
        <name>physical_node_size</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="441" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a95ed57d55ef0c61fd37dd1c0eda6e2f8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::runtime::Runtime::physical_node_rank</definition>
        <argsstring></argsstring>
        <name>physical_node_rank</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="442" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1ac0373f2326b45f348e2db166d328e2d6" prot="public" static="yes" mutable="no">
        <type>bool volatile</type>
        <definition>bool volatile vt::runtime::Runtime::sig_user_1_</definition>
        <argsstring></argsstring>
        <name>sig_user_1_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="436" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a1a7a0e6783b3326a4ded84f829a1d0b3" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::finalize_on_term_</definition>
        <argsstring></argsstring>
        <name>finalize_on_term_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="445" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1aaaad29e0591814b8f0632f2f85bd5e16" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::initialized_</definition>
        <argsstring></argsstring>
        <name>initialized_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="446" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a2a798a2bf9b8c0a70785cde3cc8119c4" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::finalized_</definition>
        <argsstring></argsstring>
        <name>finalized_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="446" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a19b9ad0859c6fb417b734ac1cc8be1a7" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::aborted_</definition>
        <argsstring></argsstring>
        <name>aborted_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="446" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a0ab12b00f03032638dbc467d165bed30" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::runtime_active_</definition>
        <argsstring></argsstring>
        <name>runtime_active_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="447" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a1169e49a960d59b2e1c7d9f5f9ef838d" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::is_interop_</definition>
        <argsstring></argsstring>
        <name>is_interop_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="448" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a09b053def0beaff3de9995e83b66170b" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::sig_handlers_disabled_</definition>
        <argsstring></argsstring>
        <name>sig_handlers_disabled_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="449" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a13acc1db61dca9c5f9b3f389c074e521" prot="protected" static="no" mutable="no">
        <type>MPI_Comm</type>
        <definition>MPI_Comm vt::runtime::Runtime::initial_communicator_</definition>
        <argsstring></argsstring>
        <name>initial_communicator_</name>
        <initializer>= MPI_COMM_NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="451" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a9f7ea8f6852d934e9c0122e074df0886" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1runtime_1_1component_1_1_component_pack" kindref="compound">component::ComponentPack</ref> &gt;</type>
        <definition>std::unique_ptr&lt;component::ComponentPack&gt; vt::runtime::Runtime::p_</definition>
        <argsstring></argsstring>
        <name>p_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="452" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a585321b816d6984bf7a9489d00bd3670" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1arguments_1_1_arg_config" kindref="compound">arguments::ArgConfig</ref> &gt;</type>
        <definition>std::unique_ptr&lt;arguments::ArgConfig&gt; vt::runtime::Runtime::arg_config_</definition>
        <argsstring></argsstring>
        <name>arg_config_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="453" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_1a5fa2ceccc0e96fe0a97e0454e3a0a1ee" prot="protected" static="no" mutable="no">
        <type><ref refid="structvt_1_1arguments_1_1_app_config" kindref="compound">arguments::AppConfig</ref> const  *</type>
        <definition>arguments::AppConfig const* vt::runtime::Runtime::app_config_</definition>
        <argsstring></argsstring>
        <name>app_config_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>App config during startup </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="454" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a1d9a78370fd98cafd73f48c8d63c5504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::runtime::Runtime::Runtime</definition>
        <argsstring>(int &amp;argc, char **&amp;argv, bool const interop_mode=false, MPI_Comm in_comm=MPI_COMM_WORLD, RuntimeInstType const in_instance=RuntimeInstType::DefaultInstance, arguments::AppConfig const *appConfig=nullptr)</argsstring>
        <name>Runtime</name>
        <param>
          <type>int &amp;</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **&amp;</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>interop_mode</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>MPI_Comm</type>
          <declname>in_comm</declname>
          <defval>MPI_COMM_WORLD</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1runtime_1afca910c1b38b3975f7c1da8001a77d58" kindref="member">RuntimeInstType</ref> const</type>
          <declname>in_instance</declname>
          <defval>RuntimeInstType::DefaultInstance</defval>
        </param>
        <param>
          <type><ref refid="structvt_1_1arguments_1_1_app_config" kindref="compound">arguments::AppConfig</ref> const *</type>
          <declname>appConfig</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Initialize a VT runtime. </para>        </briefdescription>
        <detaileddescription>
<para>interop mode, MPI is not initialized or finalized by the runtime. This can be used to embed VT into a larger context.</para><para>When not running in interop mode, MPI is initialized in the constructor and finalized in the destructor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">argc</parametername>
</parameternamelist>
<parameterdescription>
<para>argument count (modified after VT extracts) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">argv</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments (modified after VT extracts) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interop_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>whether running in interoperability mode </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_comm</parametername>
</parameternamelist>
<parameterdescription>
<para>the MPI communicator (if in interoperability mode) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>the runtime instance to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>========================================================================= <heading level="1">Notes on lifecycle for the ArgConfig/AppConfig </heading>
</para><para><itemizedlist>
<listitem><para>After <computeroutput>vt::Runtime</computeroutput> is constructed, the ArgConfig lives in <computeroutput>arg_config_</computeroutput> and <computeroutput>app_config_</computeroutput> contains a pointer to the internals.</para></listitem><listitem><para>After the pack registers the ArgConfig component, <computeroutput>arg_config_</computeroutput> is no longer valid. The config is in a tuple awaiting construction<mdash/>thus, we can&apos;t easily access it. app_config_ remains valid during this time</para></listitem><listitem><para>After construction, the <computeroutput>arg_config_</computeroutput> is in the component <computeroutput><ref refid="namespacevt_1aa17c6eae35e7e41a8b11d4047b7c0839" kindref="member">theConfig()</ref></computeroutput> and can be accessed normally</para></listitem><listitem><para>After <computeroutput><ref refid="structvt_1_1runtime_1_1_runtime_1ae4e8d5395c4144c3322fc689b3fb07ab" kindref="member">Runtime::finalize()</ref></computeroutput> is called but before the pack is destroyed, we extract the <computeroutput>ArgConfig</computeroutput> from the component and put it back in <computeroutput>arg_config_</computeroutput> for use after.</para></listitem><listitem><para>From then on, until the <computeroutput>vt::Runtime</computeroutput> is destroyed or VT is re-initialized <computeroutput>arg_config_</computeroutput> will contain the configuration.</para><para>For this to all work correctly, the <computeroutput>vt_debug_print</computeroutput> infrastructure calls <computeroutput><ref refid="namespacevt_1_1debug_1a852027d87cfb65bb21dd8ce1e8c23c61" kindref="member">vt::config::preConfig()</ref></computeroutput> which always grabs the correct app config, from the component singleton or the <computeroutput>vt::Runtime</computeroutput>, or provides stubbed arguments as a fallback. <hruler/>
 </para></listitem></itemizedlist>
</para>        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="99" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="96" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a42d87d965f2a283dbaf484b36b6a0c39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::runtime::Runtime::Runtime</definition>
        <argsstring>(Runtime const &amp;)=delete</argsstring>
        <name>Runtime</name>
        <param>
          <type><ref refid="structvt_1_1runtime_1_1_runtime" kindref="compound">Runtime</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a146708e42fa94f4d50bfdd6159f4d642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::runtime::Runtime::Runtime</definition>
        <argsstring>(Runtime &amp;&amp;)=delete</argsstring>
        <name>Runtime</name>
        <param>
          <type><ref refid="structvt_1_1runtime_1_1_runtime" kindref="compound">Runtime</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a30e1ddf6dd4950488044cf9608402193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1runtime_1_1_runtime" kindref="compound">Runtime</ref> &amp;</type>
        <definition>Runtime&amp; vt::runtime::Runtime::operator=</definition>
        <argsstring>(Runtime const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1runtime_1_1_runtime" kindref="compound">Runtime</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1ae164ab301b823d985a62b7a5fb62cf07" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>vt::runtime::Runtime::~Runtime</definition>
        <argsstring>()</argsstring>
        <name>~Runtime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="111" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="372" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a811947d9ba7322d0cb10c246200037c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::isLive</definition>
        <argsstring>() const</argsstring>
        <name>isLive</name>
        <briefdescription>
<para>Check if runtime is live. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>has been initialized and not subsequently finalized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="118" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a731e9f4a4fd6e21b067cbdc4ada11f03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vt::runtime::Runtime::progress</definition>
        <argsstring>(TimeType current_time)</argsstring>
        <name>progress</name>
        <param>
          <type><ref refid="namespacevt_1a2b9f28078dc309ad0706b69ded743e69" kindref="member">TimeType</ref></type>
          <declname>current_time</declname>
        </param>
        <briefdescription>
<para>Invoke all the progress functions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">current_time</parametername>
</parameternamelist>
<parameterdescription>
<para>current time</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>returns an unspecified value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="127" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1ad635d92549becc6fd6fd66de721cebd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::needsCurrentTime</definition>
        <argsstring>()</argsstring>
        <name>needsCurrentTime</name>
        <briefdescription>
<para>Check if any pollable components needs the current time. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it needs the current time </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="134" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a2c2561be8be311f01e11fc8e10725c77" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::isTerminated</definition>
        <argsstring>() const</argsstring>
        <name>isTerminated</name>
        <briefdescription>
<para>Check if runtime has terminated. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it has terminated </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="141" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1ab18731a9ecde8e326c0e4aa798ee10c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::isFinalizable</definition>
        <argsstring>() const</argsstring>
        <name>isFinalizable</name>
        <briefdescription>
<para>Check if runtime is finalizable. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it is finalizable </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="148" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a10bd5e7d7dd93c3625a086f5abdf635f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::isInitialized</definition>
        <argsstring>() const</argsstring>
        <name>isInitialized</name>
        <briefdescription>
<para>Check if runtime is initialized. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it is initialized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="155" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1af8e30c5de7fabc90fb32ce83018e91c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::isFinalized</definition>
        <argsstring>() const</argsstring>
        <name>isFinalized</name>
        <briefdescription>
<para>Check if runtime is finalized. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it is finalized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="162" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1ae0f66c530a72122874079b52fb259dfb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::hasSchedRun</definition>
        <argsstring>() const</argsstring>
        <name>hasSchedRun</name>
        <briefdescription>
<para>Check if scheduler has run. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it has run </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="169" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1ad7afc3a8dbe8887c914ba24418455d62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Reset the runtime after termination is reached to use it again. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="174" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="547" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a7590edf43fad3a219ef9335a97f4aebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::initialize</definition>
        <argsstring>(bool const force_now=false)</argsstring>
        <name>initialize</name>
        <param>
          <type>bool const</type>
          <declname>force_now</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Initialize the runtime. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">force_now</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to force initialization regardless of state</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it initialized or not </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="183" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="434" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1ae4e8d5395c4144c3322fc689b3fb07ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::finalize</definition>
        <argsstring>(bool const force_now=false, bool const disable_sig=true)</argsstring>
        <name>finalize</name>
        <param>
          <type>bool const</type>
          <declname>force_now</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool const</type>
          <declname>disable_sig</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Finalize the runtime. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">force_now</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to force finalization regardless of state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">disable_sig</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to disable signal handlers</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it finalized or not </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="193" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="478" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a82f0fb558aa98c7cfc54d8dcf905c36d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::computeAndPrintDiagnostics</definition>
        <argsstring>()</argsstring>
        <name>computeAndPrintDiagnostics</name>
        <briefdescription>
<para>Compute the diagnostics across the components and print them if requested at the end of the program. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a6780309c9de951abbf73780860bff5af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::abort</definition>
        <argsstring>(std::string const abort_str, ErrorCodeType const code)</argsstring>
        <name>abort</name>
        <param>
          <type>std::string const</type>
          <declname>abort_str</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a793764d753923abc3d32929870beb485" kindref="member">ErrorCodeType</ref> const</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Abort<ndash/>die immediately after spitting out error message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">abort_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the error message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">code</parametername>
</parameternamelist>
<parameterdescription>
<para>the error code to output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="207" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="565" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1af9784d4fc19d1df2b86b2c8e01d15295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::output</definition>
        <argsstring>(std::string const abort_str, ErrorCodeType const code, bool error=false, bool decorate=true, bool formatted=true)</argsstring>
        <name>output</name>
        <param>
          <type>std::string const</type>
          <declname>abort_str</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a793764d753923abc3d32929870beb485" kindref="member">ErrorCodeType</ref> const</type>
          <declname>code</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>error</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>decorate</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>formatted</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Output a message and possibly die. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">abort_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">code</parametername>
</parameternamelist>
<parameterdescription>
<para>the code to throw </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">error</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it&apos;s a fatal error </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">decorate</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to decorate the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">formatted</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it&apos;s already formatted or not </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="218" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="584" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a06400b91b766f83d4b630bdc9ed840b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1runtime_1afca910c1b38b3975f7c1da8001a77d58" kindref="member">RuntimeInstType</ref></type>
        <definition>RuntimeInstType vt::runtime::Runtime::getInstanceID</definition>
        <argsstring>() const</argsstring>
        <name>getInstanceID</name>
        <briefdescription>
<para>Get runtime instance ID. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>the instance ID </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="228" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a34252fc839ea767c8fca1efb97918385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::systemSync</definition>
        <argsstring>()</argsstring>
        <name>systemSync</name>
        <briefdescription>
<para>Do a sync. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="warning"><para>Do not call this. It does an unsafe <computeroutput>MPI_Barrier</computeroutput> </para></simplesect>
<xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>Remove this and fix the single one callsite in <computeroutput>NodeLBData</computeroutput> </para></xrefdescription></xrefsect></para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="237" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="538" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1af8fa48f3990ff2640f99f7cd1944f73f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::checkForArgumentErrors</definition>
        <argsstring>()</argsstring>
        <name>checkForArgumentErrors</name>
        <briefdescription>
<para>Check for input argument errors. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="243" column="1" bodyfile="src/vt/runtime/runtime_banner.cc" bodystart="969" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a28b2eb9d72dae880fad3b5940ae043b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::printMemoryFootprint</definition>
        <argsstring>() const</argsstring>
        <name>printMemoryFootprint</name>
        <briefdescription>
<para>Print memory footprint for all live components. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="248" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="1040" bodyend="1165"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1aebf06f17830f0d7f1377c14ce5c38845" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1arguments_1_1_app_config" kindref="compound">arguments::AppConfig</ref> const  *</type>
        <definition>arguments::AppConfig const  * vt::runtime::Runtime::getAppConfig</definition>
        <argsstring>() const</argsstring>
        <name>getAppConfig</name>
        <briefdescription>
<para>Get the app config before the runtime has setup all the components and VT is fully initialized. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This should always return a valid pointer if the runtime is constructed.</para></simplesect>
<simplesect kind="return"><para>the app config </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="401" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="1167" bodyend="1169"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a0ac4eb5f200bc06c59868ec58dee508d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::handleSignalFailure</definition>
        <argsstring>()</argsstring>
        <name>handleSignalFailure</name>
        <briefdescription>
<para>Handle unexpected termination. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="256" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="299" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1aa9759e29e6159ac0d84c60dd609cbcad" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::nodeStackWrite</definition>
        <argsstring>()</argsstring>
        <name>nodeStackWrite</name>
        <briefdescription>
<para>Check if this node should dump during stack output. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>whether this node is allowed to write </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="263" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="325" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a2ebba5dbe6d948d441311778b94a9f3d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::writeToFile</definition>
        <argsstring>(std::string const &amp;str)</argsstring>
        <name>writeToFile</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Write a stack trace out of a file. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the stack to output to file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="270" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="338" bodyend="348"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a34b322c63fa6ced8e80affcd4350c96f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::determinePhysicalNodeIDs</definition>
        <argsstring>()</argsstring>
        <name>determinePhysicalNodeIDs</name>
        <briefdescription>
<para>Determine the physical node IDs for LB data files. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="275" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="210" bodyend="244"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a651174e20fa3db2493bd4c0cf2e8be3c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::tryInitialize</definition>
        <argsstring>()</argsstring>
        <name>tryInitialize</name>
        <briefdescription>
<para>Try to initialize. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>whether it succeeded </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="283" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="388" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a10f74f2fa128ce1f7aa3d69395c64f8c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::tryFinalize</definition>
        <argsstring>(bool const disable_sig=true)</argsstring>
        <name>tryFinalize</name>
        <param>
          <type>bool const</type>
          <declname>disable_sig</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Try to finalize. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">disable_sig</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to disable signal handlers</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it succeeded </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="291" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="403" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1adf6407cff70ac8c332d75911a81b508d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::initializeErrorHandlers</definition>
        <argsstring>()</argsstring>
        <name>initializeErrorHandlers</name>
        <briefdescription>
<para>Initialize error handlers. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="296" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="959" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a798be8c8813889ef0aacdbc8668d8a41" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::initializeComponents</definition>
        <argsstring>()</argsstring>
        <name>initializeComponents</name>
        <briefdescription>
<para>Initialize all the VT components. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="301" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="686" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a61abc4a1b440263bd129ee0950a05e69" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::initializeOptionalComponents</definition>
        <argsstring>()</argsstring>
        <name>initializeOptionalComponents</name>
        <briefdescription>
<para>Initialize optional components, like workers. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="306" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="965" bodyend="977"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1abb7a09655d380f85c035c4df9855c698" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::initializeTDCallbacks</definition>
        <argsstring>()</argsstring>
        <name>initializeTDCallbacks</name>
        <briefdescription>
<para>Initialize TD callbacks. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="311" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="979" bodyend="1014"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a494534b0e9e9fcbb10262442d7e427c9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::Runtime::needLBDataRestartReader</definition>
        <argsstring>()</argsstring>
        <name>needLBDataRestartReader</name>
        <briefdescription>
<para>Check if we should create a LB data restart reader component. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>whether we should create it </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="318" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="425" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a1c4fda11afb43bb2607cd1f00686550c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
<para>Perform setup actions, such as registering a termination detector action for detecting global termination. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="324" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="663" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a2d12f2a97d99585ef8e89cda0ed48972" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::terminationHandler</definition>
        <argsstring>()</argsstring>
        <name>terminationHandler</name>
        <briefdescription>
<para>Handler when global termination is reached. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="329" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="650" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1add9fabaf1c2f47ebf9c662f4b5f5931f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::printStartupBanner</definition>
        <argsstring>()</argsstring>
        <name>printStartupBanner</name>
        <briefdescription>
<para>Print a very informative startup banner. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="334" column="1" bodyfile="src/vt/runtime/runtime_banner.cc" bodystart="68" bodyend="945"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a04efbdc6b8826e2c885987279a4762f1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::printShutdownBanner</definition>
        <argsstring>(term::TermCounterType const &amp;num_units, std::size_t const coll_epochs)</argsstring>
        <name>printShutdownBanner</name>
        <param>
          <type><ref refid="namespacevt_1_1term_1a4fd378cdb0c36683afc1b3399d685f7f" kindref="member">term::TermCounterType</ref> const &amp;</type>
          <declname>num_units</declname>
        </param>
        <param>
          <type>std::size_t const</type>
          <declname>coll_epochs</declname>
        </param>
        <briefdescription>
<para>Print the shutdown banner. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">num_units</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of units processed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coll_epochs</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of collective epochs processed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="342" column="1" bodyfile="src/vt/runtime/runtime_banner.cc" bodystart="947" bodyend="967"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1afb151608d12de9a50ce037d5e8896e99" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::pauseForDebugger</definition>
        <argsstring>()</argsstring>
        <name>pauseForDebugger</name>
        <briefdescription>
<para>Pause for debugger at startup. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="349" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="250" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1af87ef11218f0c1d095dcdcd4cfe4521e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::setupSignalHandler</definition>
        <argsstring>()</argsstring>
        <name>setupSignalHandler</name>
        <briefdescription>
<para>Setup the handlers for SIGSEGV, SIGBUS and SIGUSR1. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="354" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="350" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a382e68597ae7acb16bdb9f1c3ab4f010" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::setupSignalHandlerINT</definition>
        <argsstring>()</argsstring>
        <name>setupSignalHandlerINT</name>
        <briefdescription>
<para>Setup the SIGINT signal handler. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="359" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="360" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1ad66c903b37209c7499ebdf53efb5f9b3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::setupTerminateHandler</definition>
        <argsstring>()</argsstring>
        <name>setupTerminateHandler</name>
        <briefdescription>
<para>Setup the std::terminate handler. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="364" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="366" bodyend="370"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a15fd3d8eb4952deca7488ff4fa07258c" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::sigHandler</definition>
        <argsstring>(int sig)</argsstring>
        <name>sigHandler</name>
        <param>
          <type>int</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
<para>SIGSEGV signal handler. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="369" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="278" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1aa94c1638280b8f5e9acac0fb44f85a6f" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::sigHandlerBus</definition>
        <argsstring>(int sig)</argsstring>
        <name>sigHandlerBus</name>
        <param>
          <type>int</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
<para>SIGBUS signal handler. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="374" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="285" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a833f09083e671080fb8ae1a44bc50321" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::sigHandlerUsr1</definition>
        <argsstring>(int sig)</argsstring>
        <name>sigHandlerUsr1</name>
        <param>
          <type>int</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
<para>SIGUSR1 signal handler. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="379" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="274" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1a3ce54aa1371a6448670e06049a0985c4" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::sigHandlerINT</definition>
        <argsstring>(int sig)</argsstring>
        <name>sigHandlerINT</name>
        <param>
          <type>int</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
<para>SIGINT signal handler. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="384" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="263" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_1abe295b9ea216fafe2b494e2bc609f8fb" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::Runtime::termHandler</definition>
        <argsstring>()</argsstring>
        <name>termHandler</name>
        <briefdescription>
<para>std::terminate handler </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime.h" line="389" column="1" bodyfile="src/vt/runtime/runtime.cc" bodystart="292" bodyend="297"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The VT runtime that manages startup/shutdown and pointers to all the live components for a runtime instance. </para>    </briefdescription>
    <detaileddescription>
<para>The runtime contains an instance of VT that is initialized/finalized. It performs the sequence of operations for correct initialization and finalization of all the components that make up a runtime.</para><para>The runtime can be configured to catch signals when errors occur and dump a stack trace. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="3651">
        <label>vt::arguments::AppConfig</label>
        <link refid="structvt_1_1arguments_1_1_app_config"/>
      </node>
      <node id="3650">
        <label>vt::runtime::Runtime</label>
        <link refid="structvt_1_1runtime_1_1_runtime"/>
        <childnode refid="3651" relation="usage">
          <edgelabel>app_config_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/runtime/runtime.h" line="80" column="1" bodyfile="src/vt/runtime/runtime.h" bodystart="80" bodyend="455"/>
    <listofallmembers>
      <member refid="structvt_1_1runtime_1_1_runtime_1a6780309c9de951abbf73780860bff5af" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>abort</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a19b9ad0859c6fb417b734ac1cc8be1a7" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>aborted_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a5fa2ceccc0e96fe0a97e0454e3a0a1ee" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>app_config_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a585321b816d6984bf7a9489d00bd3670" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>arg_config_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1af8fa48f3990ff2640f99f7cd1944f73f" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>checkForArgumentErrors</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a0893bf0a8c03b898e8ab66b52cec80ad" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>ComponentPtrType</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a82f0fb558aa98c7cfc54d8dcf905c36d" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>computeAndPrintDiagnostics</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a34b322c63fa6ced8e80affcd4350c96f" prot="private" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>determinePhysicalNodeIDs</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1ae4e8d5395c4144c3322fc689b3fb07ab" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>finalize</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a1a7a0e6783b3326a4ded84f829a1d0b3" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>finalize_on_term_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a2a798a2bf9b8c0a70785cde3cc8119c4" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>finalized_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1aebf06f17830f0d7f1377c14ce5c38845" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>getAppConfig</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a06400b91b766f83d4b630bdc9ed840b1" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>getInstanceID</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a0ac4eb5f200bc06c59868ec58dee508d" prot="private" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>handleSignalFailure</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a93b6754895751a60137b86a5ccac18aa" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>has_physical_node_info</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1ae0f66c530a72122874079b52fb259dfb" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>hasSchedRun</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a13acc1db61dca9c5f9b3f389c074e521" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>initial_communicator_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a7590edf43fad3a219ef9335a97f4aebb" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>initialize</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a798be8c8813889ef0aacdbc8668d8a41" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>initializeComponents</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1aaaad29e0591814b8f0632f2f85bd5e16" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>initialized_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1adf6407cff70ac8c332d75911a81b508d" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>initializeErrorHandlers</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a61abc4a1b440263bd129ee0950a05e69" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>initializeOptionalComponents</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1abb7a09655d380f85c035c4df9855c698" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>initializeTDCallbacks</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a1992e655c80324668af6b973b2cbd62b" prot="private" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>instance_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a1169e49a960d59b2e1c7d9f5f9ef838d" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>is_interop_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1ab18731a9ecde8e326c0e4aa798ee10c7" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>isFinalizable</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1af8e30c5de7fabc90fb32ce83018e91c8" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>isFinalized</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a10bd5e7d7dd93c3625a086f5abdf635f" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>isInitialized</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a811947d9ba7322d0cb10c246200037c8" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>isLive</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a2c2561be8be311f01e11fc8e10725c77" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>isTerminated</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a494534b0e9e9fcbb10262442d7e427c9" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>needLBDataRestartReader</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1ad635d92549becc6fd6fd66de721cebd8" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>needsCurrentTime</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1aa9759e29e6159ac0d84c60dd609cbcad" prot="private" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>nodeStackWrite</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a30e1ddf6dd4950488044cf9608402193" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>operator=</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1af9784d4fc19d1df2b86b2c8e01d15295" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>output</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a9f7ea8f6852d934e9c0122e074df0886" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>p_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1afb151608d12de9a50ce037d5e8896e99" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>pauseForDebugger</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a1c454863a1a4242437e1c457ee0f1e4e" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>physical_node_id</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a95ed57d55ef0c61fd37dd1c0eda6e2f8" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>physical_node_rank</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a699053ce129769223ba1eba6b3ac4025" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>physical_node_size</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a2c2103908d26e0dcf884f2605068e8f9" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>physical_num_nodes</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a28b2eb9d72dae880fad3b5940ae043b1" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>printMemoryFootprint</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a04efbdc6b8826e2c885987279a4762f1" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>printShutdownBanner</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1add9fabaf1c2f47ebf9c662f4b5f5931f" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>printStartupBanner</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a731e9f4a4fd6e21b067cbdc4ada11f03" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>progress</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1ad7afc3a8dbe8887c914ba24418455d62" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>reset</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a1d9a78370fd98cafd73f48c8d63c5504" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>Runtime</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a42d87d965f2a283dbaf484b36b6a0c39" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>Runtime</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a146708e42fa94f4d50bfdd6159f4d642" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>Runtime</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a0ab12b00f03032638dbc467d165bed30" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>runtime_active_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a1c4fda11afb43bb2607cd1f00686550c" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>setup</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1af87ef11218f0c1d095dcdcd4cfe4521e" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>setupSignalHandler</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a382e68597ae7acb16bdb9f1c3ab4f010" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>setupSignalHandlerINT</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1ad66c903b37209c7499ebdf53efb5f9b3" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>setupTerminateHandler</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a09b053def0beaff3de9995e83b66170b" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>sig_handlers_disabled_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1ac0373f2326b45f348e2db166d328e2d6" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>sig_user_1_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a15fd3d8eb4952deca7488ff4fa07258c" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>sigHandler</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1aa94c1638280b8f5e9acac0fb44f85a6f" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>sigHandlerBus</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a3ce54aa1371a6448670e06049a0985c4" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>sigHandlerINT</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a833f09083e671080fb8ae1a44bc50321" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>sigHandlerUsr1</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a34252fc839ea767c8fca1efb97918385" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>systemSync</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1abe295b9ea216fafe2b494e2bc609f8fb" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>termHandler</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a2d12f2a97d99585ef8e89cda0ed48972" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>terminationHandler</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a30b262f43f826ffee213e10c71893323" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theArgConfig</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a8f4f5ea53aed7d2302bc52a39c16de0b" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theCB</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a9c74bf08aceff27fa43330d3f1c8d581" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theCollection</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a52b4a07eacf90a576f077e193604eab9" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theCollective</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a572dac3bef0126b593a93b2c651efb7e" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theContext</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1aa126046508c7d6e6d8470fec07160c8e" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theEpoch</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1accfb27cbfaecafe834ade7cd6dc57d7b" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theEvent</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a0c446440cc8a67118f2ffd9de9f01be4" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theGroup</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a4772a2e3ae26f5dae29ea474ac0050c7" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theHandleRDMA</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1afb8103d823cabc7bacb6035f785e9324" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theLBDataReader</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a0d324f5964ce89e2974a41bc3129829e" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theLBManager</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1ae198134b20e8c3787f16f4e790f95d9a" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theLocMan</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a99d9a28de0742915ca6b25393807dd8b" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theMemUsage</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a8aad5f2fdd05ddd81995f5af94ce196e" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theMsg</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a0a596fabff7d26a9417e8f7886410eee" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theNodeLBData</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1af2d01d5059edf4aed086f087e5ed1e91" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theObjGroup</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1aaad9fd5e7f0bb2d4bcc73fe1ce60bd9f" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>thePhase</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a060aca8399f1c6499c4676a26db2e39e" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>thePool</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1ab8ec604b336a974682b0fec124a4a31b" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theRDMA</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1ae9d0dc11ee40a455a64982eec66e3a26" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theSched</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a365e1addbed82440bb014f97b1c839f6" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theTerm</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a3d72d73ecd4ba3f0104dca596eae3862" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theTimeTrigger</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a85a0606ac06cd173561952676f09c077" prot="public" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>theVirtualManager</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a10f74f2fa128ce1f7aa3d69395c64f8c" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>tryFinalize</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a651174e20fa3db2493bd4c0cf2e8be3c" prot="protected" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>tryInitialize</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1a2ebba5dbe6d948d441311778b94a9f3d" prot="private" virt="non-virtual"><scope>vt::runtime::Runtime</scope><name>writeToFile</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_1ae164ab301b823d985a62b7a5fb62cf07" prot="public" virt="virtual"><scope>vt::runtime::Runtime</scope><name>~Runtime</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
