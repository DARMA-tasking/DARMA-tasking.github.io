<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::container::ConcurrentDequeLocked</compoundname>
    <includes refid="concurrent__deque__locked_8h" local="no">concurrent_deque_locked.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1ab8d922cda54539b322830391268284bb" prot="public" static="no">
        <type>std::deque&lt; T &gt;</type>
        <definition>using vt::util::container::ConcurrentDequeLocked&lt; T &gt;::ContainerType =  std::deque&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>ContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="69" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a6f35f4923f1329d25378656b0582e916" prot="public" static="no">
        <type>typename ContainerType::size_type</type>
        <definition>using vt::util::container::ConcurrentDequeLocked&lt; T &gt;::SizeType =  typename ContainerType::size_type</definition>
        <argsstring></argsstring>
        <name>SizeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="70" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a9da9776dff836c013a95431f3ab15e35" prot="public" static="no">
        <type>typename ContainerType::const_reference</type>
        <definition>using vt::util::container::ConcurrentDequeLocked&lt; T &gt;::TConstRef =  typename ContainerType::const_reference</definition>
        <argsstring></argsstring>
        <name>TConstRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="71" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a4451b0e7f6c8aa741f98a77a9fed353e" prot="public" static="no">
        <type>typename ContainerType::reference</type>
        <definition>using vt::util::container::ConcurrentDequeLocked&lt; T &gt;::TRef =  typename ContainerType::reference</definition>
        <argsstring></argsstring>
        <name>TRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="72" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1af681c689f7800fca7e35364aeffd9964" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::util::container::ConcurrentDequeLocked&lt; T &gt;::needs_lock_</definition>
        <argsstring></argsstring>
        <name>needs_lock_</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="117" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a04471e3de55c89728013825b6e64e453" prot="private" static="no" mutable="no">
        <type>MutexType</type>
        <definition>MutexType vt::util::container::ConcurrentDequeLocked&lt; T &gt;::container_mutex_</definition>
        <argsstring></argsstring>
        <name>container_mutex_</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="118" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a5055eeb8cdb93e4e9fb84deb237998f2" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1ab8d922cda54539b322830391268284bb" kindref="member">ContainerType</ref></type>
        <definition>ContainerType vt::util::container::ConcurrentDequeLocked&lt; T &gt;::container_</definition>
        <argsstring></argsstring>
        <name>container_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="119" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1adf6fc93e74d56a37cf1d0692a29e6ef3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::util::container::ConcurrentDequeLocked&lt; T &gt;::ConcurrentDequeLocked</definition>
        <argsstring>()</argsstring>
        <name>ConcurrentDequeLocked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="74" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.h" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a8feaed4765d8775cd39c13df6499b5e8" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::util::container::ConcurrentDequeLocked&lt; T &gt;::ConcurrentDequeLocked</definition>
        <argsstring>(bool in_needs_lock)</argsstring>
        <name>ConcurrentDequeLocked</name>
        <param>
          <type>bool</type>
          <declname>in_needs_lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="77" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.h" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1ab5d61f2f456b97092cc2164a070c2372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::util::container::ConcurrentDequeLocked&lt; T &gt;::ConcurrentDequeLocked</definition>
        <argsstring>(ConcurrentDequeLocked const &amp;)=delete</argsstring>
        <name>ConcurrentDequeLocked</name>
        <param>
          <type><ref refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked" kindref="compound">ConcurrentDequeLocked</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a03ce93cd5ef587d5fa6dfd494ece5e73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual vt::util::container::ConcurrentDequeLocked&lt; T &gt;::~ConcurrentDequeLocked</definition>
        <argsstring>()</argsstring>
        <name>~ConcurrentDequeLocked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="82" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a4d9bbc1980dba1ffdc3ba8f8eb2c52d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::ConcurrentDequeLocked&lt; T &gt;::emplaceBack</definition>
        <argsstring>(T &amp;&amp;elm)</argsstring>
        <name>emplaceBack</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>elm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="84" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a5f5007fed6eaa4d42d1877a0d8b096c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::ConcurrentDequeLocked&lt; T &gt;::emplaceFront</definition>
        <argsstring>(T &amp;&amp;elm)</argsstring>
        <name>emplaceFront</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>elm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="85" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1aa3c9c04fc999b13a6418c08e7c29f969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::ConcurrentDequeLocked&lt; T &gt;::pushBack</definition>
        <argsstring>(T const &amp;elm)</argsstring>
        <name>pushBack</name>
        <param>
          <type>T const &amp;</type>
          <declname>elm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="86" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a5bfd4d329adde2c68c2c1cbc13f98ff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::ConcurrentDequeLocked&lt; T &gt;::pushFront</definition>
        <argsstring>(T const &amp;elm)</argsstring>
        <name>pushFront</name>
        <param>
          <type>T const &amp;</type>
          <declname>elm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="87" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a57af0c7ac85e7bb3922bb839b666c1e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a9da9776dff836c013a95431f3ab15e35" kindref="member">TConstRef</ref></type>
        <definition>ConcurrentDequeLocked&lt; T &gt;::TConstRef vt::util::container::ConcurrentDequeLocked&lt; T &gt;::front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="89" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a1722e76798cd9b6629f111814035e29a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a9da9776dff836c013a95431f3ab15e35" kindref="member">TConstRef</ref></type>
        <definition>ConcurrentDequeLocked&lt; T &gt;::TConstRef vt::util::container::ConcurrentDequeLocked&lt; T &gt;::back</definition>
        <argsstring>() const</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="90" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="99" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1aab7ffe336cd7392506121f8e3a86c1b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T vt::util::container::ConcurrentDequeLocked&lt; T &gt;::popGetFront</definition>
        <argsstring>()</argsstring>
        <name>popGetFront</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="92" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1ad1905f8a1dc68a73ecda8bd2c332440e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T vt::util::container::ConcurrentDequeLocked&lt; T &gt;::popGetBack</definition>
        <argsstring>()</argsstring>
        <name>popGetBack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="93" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="114" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a0999ea4ff06ed38095d31ed9710e7525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a4451b0e7f6c8aa741f98a77a9fed353e" kindref="member">TRef</ref></type>
        <definition>ConcurrentDequeLocked&lt; T &gt;::TRef vt::util::container::ConcurrentDequeLocked&lt; T &gt;::at</definition>
        <argsstring>(SizeType const &amp;pos)</argsstring>
        <name>at</name>
        <param>
          <type><ref refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a6f35f4923f1329d25378656b0582e916" kindref="member">SizeType</ref> const &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="95" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a5c5a48c3f01f61faa7329c2cbfd92103" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a9da9776dff836c013a95431f3ab15e35" kindref="member">TConstRef</ref></type>
        <definition>ConcurrentDequeLocked&lt; T &gt;::TConstRef vt::util::container::ConcurrentDequeLocked&lt; T &gt;::at</definition>
        <argsstring>(SizeType const &amp;pos) const</argsstring>
        <name>at</name>
        <param>
          <type><ref refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a6f35f4923f1329d25378656b0582e916" kindref="member">SizeType</ref> const &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="96" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="130" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a036bb79b4122e2d79f62c61a7715f374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a4451b0e7f6c8aa741f98a77a9fed353e" kindref="member">TRef</ref></type>
        <definition>ConcurrentDequeLocked&lt; T &gt;::TRef vt::util::container::ConcurrentDequeLocked&lt; T &gt;::front</definition>
        <argsstring>()</argsstring>
        <name>front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="98" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="139" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1ad38ab2b6cb582a65107ef74bcf678f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a4451b0e7f6c8aa741f98a77a9fed353e" kindref="member">TRef</ref></type>
        <definition>ConcurrentDequeLocked&lt; T &gt;::TRef vt::util::container::ConcurrentDequeLocked&lt; T &gt;::back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="99" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a24d80e8f7e30a18175f390e79f061a99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::ConcurrentDequeLocked&lt; T &gt;::popFront</definition>
        <argsstring>()</argsstring>
        <name>popFront</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="101" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1af5c7291d01a60ba4ea5e773de4c2b8e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::ConcurrentDequeLocked&lt; T &gt;::popBack</definition>
        <argsstring>()</argsstring>
        <name>popBack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="102" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1abf19557ef8b6483fd821f7c7fd184153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a6f35f4923f1329d25378656b0582e916" kindref="member">SizeType</ref></type>
        <definition>ConcurrentDequeLocked&lt; T &gt;::SizeType vt::util::container::ConcurrentDequeLocked&lt; T &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="104" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1ae3ae8e15fea25fab5f96d3e388aa46d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Serializer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::util::container::ConcurrentDequeLocked&lt; T &gt;::serialize</definition>
        <argsstring>(Serializer &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>Serializer &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="107" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.h" bodystart="107" bodyend="111"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1ab9f6f815492221e1e159f310276b9e0b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MutexType *</type>
        <definition>MutexType * vt::util::container::ConcurrentDequeLocked&lt; T &gt;::getMutex</definition>
        <argsstring>()</argsstring>
        <name>getMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/concurrent_deque_locked.h" line="114" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.impl.h" bodystart="61" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/utils/container/concurrent_deque_locked.h" line="68" column="1" bodyfile="src/vt/utils/container/concurrent_deque_locked.h" bodystart="68" bodyend="120"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a0999ea4ff06ed38095d31ed9710e7525" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>at</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a5c5a48c3f01f61faa7329c2cbfd92103" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>at</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a1722e76798cd9b6629f111814035e29a" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>back</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1ad38ab2b6cb582a65107ef74bcf678f09" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>back</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1adf6fc93e74d56a37cf1d0692a29e6ef3" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>ConcurrentDequeLocked</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a8feaed4765d8775cd39c13df6499b5e8" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>ConcurrentDequeLocked</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1ab5d61f2f456b97092cc2164a070c2372" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>ConcurrentDequeLocked</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a5055eeb8cdb93e4e9fb84deb237998f2" prot="private" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>container_</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a04471e3de55c89728013825b6e64e453" prot="private" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>container_mutex_</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1ab8d922cda54539b322830391268284bb" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>ContainerType</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a4d9bbc1980dba1ffdc3ba8f8eb2c52d5" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>emplaceBack</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a5f5007fed6eaa4d42d1877a0d8b096c9" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>emplaceFront</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a57af0c7ac85e7bb3922bb839b666c1e7" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>front</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a036bb79b4122e2d79f62c61a7715f374" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>front</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1ab9f6f815492221e1e159f310276b9e0b" prot="private" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>getMutex</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1af681c689f7800fca7e35364aeffd9964" prot="private" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>needs_lock_</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1af5c7291d01a60ba4ea5e773de4c2b8e3" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>popBack</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a24d80e8f7e30a18175f390e79f061a99" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>popFront</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1ad1905f8a1dc68a73ecda8bd2c332440e" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>popGetBack</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1aab7ffe336cd7392506121f8e3a86c1b2" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>popGetFront</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1aa3c9c04fc999b13a6418c08e7c29f969" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>pushBack</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a5bfd4d329adde2c68c2c1cbc13f98ff4" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>pushFront</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1ae3ae8e15fea25fab5f96d3e388aa46d5" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>serialize</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1abf19557ef8b6483fd821f7c7fd184153" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>size</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a6f35f4923f1329d25378656b0582e916" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>SizeType</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a9da9776dff836c013a95431f3ab15e35" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>TConstRef</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a4451b0e7f6c8aa741f98a77a9fed353e" prot="public" virt="non-virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>TRef</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_concurrent_deque_locked_1a03ce93cd5ef587d5fa6dfd494ece5e73" prot="public" virt="virtual"><scope>vt::util::container::ConcurrentDequeLocked</scope><name>~ConcurrentDequeLocked</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
