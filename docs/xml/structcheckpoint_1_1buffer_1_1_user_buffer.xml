<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structcheckpoint_1_1buffer_1_1_user_buffer" kind="struct" language="C++" prot="public">
    <compoundname>checkpoint::buffer::UserBuffer</compoundname>
    <basecompoundref refid="structcheckpoint_1_1buffer_1_1_buffer" prot="public" virt="non-virtual">checkpoint::buffer::Buffer</basecompoundref>
    <includes refid="user__buffer_8h" local="no">user_buffer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structcheckpoint_1_1buffer_1_1_user_buffer_1ab7b3c105260719bef32d955384279722" prot="private" static="no" mutable="no">
        <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
        <definition>SerialSizeType checkpoint::buffer::UserBuffer::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/buffer/user_buffer.h" line="66" column="1" bodyfile="lib/checkpoint/src/checkpoint/buffer/user_buffer.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcheckpoint_1_1buffer_1_1_user_buffer_1a7fb5fb2686430c6a73572e835343c516" prot="private" static="no" mutable="no">
        <type><ref refid="namespacecheckpoint_1ae57f01cdc0b81776c23b6c7c934c58f5" kindref="member">SerialByteType</ref> *</type>
        <definition>SerialByteType* checkpoint::buffer::UserBuffer::buffer_</definition>
        <argsstring></argsstring>
        <name>buffer_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/buffer/user_buffer.h" line="68" column="1" bodyfile="lib/checkpoint/src/checkpoint/buffer/user_buffer.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structcheckpoint_1_1buffer_1_1_user_buffer_1a279907471bfa758ae71d922443973693" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>checkpoint::buffer::UserBuffer::UserBuffer</definition>
        <argsstring>(SerialByteType *ptr, SerialSizeType const &amp;size)</argsstring>
        <name>UserBuffer</name>
        <param>
          <type><ref refid="namespacecheckpoint_1ae57f01cdc0b81776c23b6c7c934c58f5" kindref="member">SerialByteType</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref> const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/buffer/user_buffer.h" line="53" column="1" bodyfile="lib/checkpoint/src/checkpoint/buffer/user_buffer.h" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1buffer_1_1_user_buffer_1a1a71a6378472d56c8c17f01dd44462b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacecheckpoint_1ae57f01cdc0b81776c23b6c7c934c58f5" kindref="member">SerialByteType</ref> *</type>
        <definition>virtual SerialByteType* checkpoint::buffer::UserBuffer::getBuffer</definition>
        <argsstring>() const override</argsstring>
        <name>getBuffer</name>
        <reimplements refid="structcheckpoint_1_1buffer_1_1_buffer_1ad6a6457df5d7020cd3622d353eb8394b">getBuffer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/buffer/user_buffer.h" line="57" column="1" bodyfile="lib/checkpoint/src/checkpoint/buffer/user_buffer.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1buffer_1_1_user_buffer_1a434e7feda041957509ee08791d3f4949" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
        <definition>virtual SerialSizeType checkpoint::buffer::UserBuffer::getSize</definition>
        <argsstring>() const override</argsstring>
        <name>getSize</name>
        <reimplements refid="structcheckpoint_1_1buffer_1_1_buffer_1a4d78cd3d4ab338bab7911fac4fe9434d">getSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/buffer/user_buffer.h" line="61" column="1" bodyfile="lib/checkpoint/src/checkpoint/buffer/user_buffer.h" bodystart="61" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4407">
        <label>checkpoint::buffer::Buffer</label>
        <link refid="structcheckpoint_1_1buffer_1_1_buffer"/>
        <childnode refid="4408" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4408">
        <label>SerializedInfo</label>
        <link refid="structcheckpoint_1_1_serialized_info"/>
      </node>
      <node id="4406">
        <label>checkpoint::buffer::UserBuffer</label>
        <link refid="structcheckpoint_1_1buffer_1_1_user_buffer"/>
        <childnode refid="4407" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4410">
        <label>checkpoint::buffer::Buffer</label>
        <link refid="structcheckpoint_1_1buffer_1_1_buffer"/>
        <childnode refid="4411" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4411">
        <label>SerializedInfo</label>
        <link refid="structcheckpoint_1_1_serialized_info"/>
      </node>
      <node id="4409">
        <label>checkpoint::buffer::UserBuffer</label>
        <link refid="structcheckpoint_1_1buffer_1_1_user_buffer"/>
        <childnode refid="4410" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/checkpoint/src/checkpoint/buffer/user_buffer.h" line="52" column="1" bodyfile="lib/checkpoint/src/checkpoint/buffer/user_buffer.h" bodystart="52" bodyend="69"/>
    <listofallmembers>
      <member refid="structcheckpoint_1_1buffer_1_1_user_buffer_1a7fb5fb2686430c6a73572e835343c516" prot="private" virt="non-virtual"><scope>checkpoint::buffer::UserBuffer</scope><name>buffer_</name></member>
      <member refid="structcheckpoint_1_1buffer_1_1_user_buffer_1a1a71a6378472d56c8c17f01dd44462b7" prot="public" virt="virtual"><scope>checkpoint::buffer::UserBuffer</scope><name>getBuffer</name></member>
      <member refid="structcheckpoint_1_1buffer_1_1_user_buffer_1a434e7feda041957509ee08791d3f4949" prot="public" virt="virtual"><scope>checkpoint::buffer::UserBuffer</scope><name>getSize</name></member>
      <member refid="structcheckpoint_1_1buffer_1_1_user_buffer_1ab7b3c105260719bef32d955384279722" prot="private" virt="non-virtual"><scope>checkpoint::buffer::UserBuffer</scope><name>size_</name></member>
      <member refid="structcheckpoint_1_1buffer_1_1_user_buffer_1a279907471bfa758ae71d922443973693" prot="public" virt="non-virtual"><scope>checkpoint::buffer::UserBuffer</scope><name>UserBuffer</name></member>
      <member refid="structcheckpoint_1_1buffer_1_1_buffer_1a55f9f6a754d4b3053460b8543b6ca1ab" prot="public" virt="virtual"><scope>checkpoint::buffer::UserBuffer</scope><name>~Buffer</name></member>
      <member refid="structcheckpoint_1_1_serialized_info_1aca442bb41f5c514fb79b776f5baaa0c1" prot="public" virt="virtual"><scope>checkpoint::buffer::UserBuffer</scope><name>~SerializedInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
