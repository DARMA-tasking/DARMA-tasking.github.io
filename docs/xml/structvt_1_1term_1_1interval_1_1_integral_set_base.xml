<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1term_1_1interval_1_1_integral_set_base" kind="struct" language="C++" prot="public">
    <compoundname>vt::term::interval::IntegralSetBase</compoundname>
    <includes refid="integral__set_8h" local="no">integral_set.h</includes>
    <innerclass refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1_1_interval_set_iter" prot="public">vt::term::interval::IntegralSetBase::IntervalSetIter</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>DomainT</declname>
        <defname>DomainT</defname>
      </param>
      <param>
        <type>DomainT</type>
        <declname>sentinel</declname>
        <defname>sentinel</defname>
      </param>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>AllocatorT</declname>
        <defname>AllocatorT</defname>
      </param>
      <param>
        <type>template&lt; class U, U &gt; class</type>
        <declname>IntervalT</declname>
        <defname>IntervalT</defname>
      </param>
      <param>
        <type>template&lt; class, class, class &gt; class</type>
        <declname>OrderedSetT</declname>
        <defname>OrderedSetT</defname>
      </param>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>IntervalCompareT</declname>
        <defname>IntervalCompareT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a74b3ffb0498e75459e23d59b2d4facfa" prot="public" static="no">
        <type>DomainT</type>
        <definition>using vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::DomainType =  DomainT</definition>
        <argsstring></argsstring>
        <name>DomainType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="74" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1f8f5bb84064be35bbaaf15bb5a43f14" prot="public" static="no">
        <type>IntervalT&lt; DomainT, sentinel &gt;</type>
        <definition>using vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::IntervalType =  IntervalT&lt;DomainT, sentinel&gt;</definition>
        <argsstring></argsstring>
        <name>IntervalType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="75" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a8788c1d68e2b4348c341c120363c95e7" prot="public" static="no">
        <type>IntervalCompareT&lt; DomainT &gt;</type>
        <definition>using vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::CompareType =  IntervalCompareT&lt;DomainT&gt;</definition>
        <argsstring></argsstring>
        <name>CompareType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="76" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1af699b4961903ebe28d478088eae9b60a" prot="public" static="no">
        <type>AllocatorT&lt; <ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1f8f5bb84064be35bbaaf15bb5a43f14" kindref="member">IntervalType</ref> &gt;</type>
        <definition>using vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::AllocType =  AllocatorT&lt;IntervalType&gt;</definition>
        <argsstring></argsstring>
        <name>AllocType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="77" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1af29bc3750493c7de4043f43ef7eb2ca2" prot="public" static="no">
        <type>OrderedSetT&lt; <ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1f8f5bb84064be35bbaaf15bb5a43f14" kindref="member">IntervalType</ref>, <ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a8788c1d68e2b4348c341c120363c95e7" kindref="member">CompareType</ref>, <ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1af699b4961903ebe28d478088eae9b60a" kindref="member">AllocType</ref> &gt;</type>
        <definition>using vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::OrderedSetType =  OrderedSetT&lt;IntervalType, CompareType, AllocType&gt;</definition>
        <argsstring></argsstring>
        <name>OrderedSetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="78" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" prot="public" static="no">
        <type>typename OrderedSetType::iterator</type>
        <definition>using vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::IteratorType =  typename OrderedSetType::iterator</definition>
        <argsstring></argsstring>
        <name>IteratorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="79" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a04700201180ff07417358d70c9ac5c82" prot="public" static="no">
        <type>typename IntervalType::PositionEnum</type>
        <definition>using vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::PositionType =  typename IntervalType::PositionEnum</definition>
        <argsstring></argsstring>
        <name>PositionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="80" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1abd0d7f40a96384d2db0a2782a8921a34" prot="public" static="no">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1_1_interval_set_iter" kindref="compound">IntervalSetIter</ref>&lt; <ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref> &gt;</type>
        <definition>using vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::ForwardIter =  IntervalSetIter&lt;IteratorType&gt;</definition>
        <argsstring></argsstring>
        <name>ForwardIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="426" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1af36c82de08ca3e67714c9051d9f3db92" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1abd0d7f40a96384d2db0a2782a8921a34" kindref="member">ForwardIter</ref> &gt;</type>
        <definition>using vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::ReverseIter =  std::reverse_iterator&lt;ForwardIter&gt;</definition>
        <argsstring></argsstring>
        <name>ReverseIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="427" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a81a48c32a51a56d1006dc212b2de60aa" prot="private" static="no" mutable="no">
        <type>DomainT</type>
        <definition>DomainT vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::lb_</definition>
        <argsstring></argsstring>
        <name>lb_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="476" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1ace5d01da6b573a7e13405b362ca57f48" prot="private" static="no" mutable="no">
        <type>DomainT</type>
        <definition>DomainT vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::ub_</definition>
        <argsstring></argsstring>
        <name>ub_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="478" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a5ed151f2f412d1df26f6b1fae4515bad" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1af29bc3750493c7de4043f43ef7eb2ca2" kindref="member">OrderedSetType</ref></type>
        <definition>OrderedSetType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::set_</definition>
        <argsstring></argsstring>
        <name>set_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="480" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a50bd3ba628483148568402f9b474f680" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
        <definition>IteratorType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::hint_</definition>
        <argsstring></argsstring>
        <name>hint_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="482" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a6b6c9d51286b662d28eb1dfac3047af0" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::elms_</definition>
        <argsstring></argsstring>
        <name>elms_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="484" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a0826331831d6c87ec6b81a9264f98e12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::IntegralSetBase</definition>
        <argsstring>()</argsstring>
        <name>IntegralSetBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="82" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a8584b495b7b88baa0eed6012993dd562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::IntegralSetBase</definition>
        <argsstring>(IntegralSetBase const &amp;)=default</argsstring>
        <name>IntegralSetBase</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base" kindref="compound">IntegralSetBase</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a54265fe55a770f1d7dc880f013fdb99c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::IntegralSetBase</definition>
        <argsstring>(IntegralSetBase &amp;&amp;)=default</argsstring>
        <name>IntegralSetBase</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base" kindref="compound">IntegralSetBase</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1af96e31d4224f965ce41938b031cc9589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base" kindref="compound">IntegralSetBase</ref> &amp;</type>
        <definition>IntegralSetBase&amp; vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::operator=</definition>
        <argsstring>(IntegralSetBase const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base" kindref="compound">IntegralSetBase</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1e162190ce569f5479d29c2284419980" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::IntegralSetBase</definition>
        <argsstring>(DomainT base)</argsstring>
        <name>IntegralSetBase</name>
        <param>
          <type>DomainT</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="87" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="87" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a7476d33df36a287580cdecc9dd6c2bd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DomainU</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;      std::is_same&lt;        std::remove_const_t&lt;std::remove_reference_t&lt;DomainU&gt;&gt;, DomainT      &gt;::value    &gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
        <definition>IteratorType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::insert</definition>
        <argsstring>(DomainU &amp;&amp;val)</argsstring>
        <name>insert</name>
        <param>
          <type>DomainU &amp;&amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="107" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="107" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a34422ad0f4a5341e700a9264f921381d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DomainU</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;      std::is_same&lt;        std::remove_const_t&lt;std::remove_reference_t&lt;DomainU&gt;&gt;, DomainT      &gt;::value    &gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
        <definition>IteratorType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::insert</definition>
        <argsstring>(IteratorType it, DomainU &amp;&amp;val)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
          <declname>it</declname>
        </param>
        <param>
          <type>DomainU &amp;&amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="124" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1ade802dbc86e759545ee5b3aaa9bf6396" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IntervalU</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;      std::is_same&lt;        std::remove_const_t&lt;std::remove_reference_t&lt;IntervalU&gt;&gt;, <ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1f8f5bb84064be35bbaaf15bb5a43f14" kindref="member">IntervalType</ref>      &gt;::value    &gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
        <definition>IteratorType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::insertInterval</definition>
        <argsstring>(IntervalU &amp;&amp;i)</argsstring>
        <name>insertInterval</name>
        <param>
          <type>IntervalU &amp;&amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="137" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="137" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a2520319a367538b984b3a3a1ba56204d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IntervalU</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;      std::is_same&lt;        std::remove_const_t&lt;std::remove_reference_t&lt;IntervalU&gt;&gt;, <ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1f8f5bb84064be35bbaaf15bb5a43f14" kindref="member">IntervalType</ref>      &gt;::value    &gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
        <definition>IteratorType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::insertInterval</definition>
        <argsstring>(IteratorType it, IntervalU &amp;&amp;i)</argsstring>
        <name>insertInterval</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
          <declname>it</declname>
        </param>
        <param>
          <type>IntervalU &amp;&amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="161" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="161" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a26d04c73487d5911c447e627dae87627" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::erase</definition>
        <argsstring>(DomainT const &amp;val)</argsstring>
        <name>erase</name>
        <param>
          <type>DomainT const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="179" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="179" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1aa44021f10057190693c22777749fc8c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::contains</definition>
        <argsstring>(DomainT const &amp;val) const</argsstring>
        <name>contains</name>
        <param>
          <type>DomainT const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="216" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a4f5f1203eb50e1ebaccc479b16af89a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::exists</definition>
        <argsstring>(DomainT const &amp;val) const</argsstring>
        <name>exists</name>
        <param>
          <type>DomainT const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="217" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="217" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a5786bb488ef808cd89474afa94ecc856" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="230" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="230" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a9c808e539cad61d40a062317e983ba74" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>DomainT</type>
        <definition>DomainT vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::range</definition>
        <argsstring>() const</argsstring>
        <name>range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="236" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a5d0984e302e0ddb9828130261b86ec50" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>DomainT</type>
        <definition>DomainT vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::lower</definition>
        <argsstring>() const</argsstring>
        <name>lower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="237" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a88ef66995c9fd0c1d8ba031dab28da9b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>DomainT</type>
        <definition>DomainT vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::upper</definition>
        <argsstring>() const</argsstring>
        <name>upper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="238" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="238" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1aaf1b42550ad04b45edf7bb0b120a3ea5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="239" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1aeee10fc1f3ea82698fd50f226fee86dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="241" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a48ab16ffe03b4285c7210df3084904af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::compressedSize</definition>
        <argsstring>() const</argsstring>
        <name>compressedSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="242" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1897d55d5f300ad209d2ce014240680d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::compression</definition>
        <argsstring>() const</argsstring>
        <name>compression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="244" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="244" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1af9b94870159b8796053112c31f9570" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::dumpState</definition>
        <argsstring>() const</argsstring>
        <name>dumpState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="253" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="253" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a23d95f362bdc1094ae5f7f293771465a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1abd0d7f40a96384d2db0a2782a8921a34" kindref="member">ForwardIter</ref></type>
        <definition>ForwardIter vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="430" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="430" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1aaec7a0f928c035753685be34d0cc54f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1abd0d7f40a96384d2db0a2782a8921a34" kindref="member">ForwardIter</ref></type>
        <definition>ForwardIter vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="431" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="431" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1ab253d070e9a28940a9b727696b0bb25c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1af36c82de08ca3e67714c9051d9f3db92" kindref="member">ReverseIter</ref></type>
        <definition>ReverseIter vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::rbegin</definition>
        <argsstring>()</argsstring>
        <name>rbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="432" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="432" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1ae174160d7537b4c841d71514deb90a89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1af36c82de08ca3e67714c9051d9f3db92" kindref="member">ReverseIter</ref></type>
        <definition>ReverseIter vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::rend</definition>
        <argsstring>()</argsstring>
        <name>rend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="433" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="433" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a3e9dc82d28ecca2c84edac4c80e6c433" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
        <definition>IteratorType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::ibegin</definition>
        <argsstring>()</argsstring>
        <name>ibegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="436" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="436" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a34c4b2af7847cae15a7827fe8b578d1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
        <definition>IteratorType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::iend</definition>
        <argsstring>()</argsstring>
        <name>iend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="437" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="437" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a07c43cee06c7e1f943f4acfd1274e8c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
        <definition>IteratorType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::irbegin</definition>
        <argsstring>()</argsstring>
        <name>irbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="438" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="438" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a2656b9c3920215f4cbc3a8bad3f3b9fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
        <definition>IteratorType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::irend</definition>
        <argsstring>()</argsstring>
        <name>irend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="439" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="439" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1aa057be2db33d30cb34a2c8734f7f0278" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="444" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="444" bodyend="472"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a87c94a2beab19ba74470b18a1de9aedf" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
        <definition>IteratorType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::insertSet</definition>
        <argsstring>(IteratorType it, IntervalType &amp;&amp;i)</argsstring>
        <name>insertSet</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1f8f5bb84064be35bbaaf15bb5a43f14" kindref="member">IntervalType</ref> &amp;&amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="268" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="268" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1abe3fb337e5e5690d72aa6576519e5b86" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::existsGlobal</definition>
        <argsstring>(DomainT const &amp;val) const</argsstring>
        <name>existsGlobal</name>
        <param>
          <type>DomainT const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="284" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="284" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1ae93298452c48fe7c583f0a7264a7dde2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::eraseGlobal</definition>
        <argsstring>(DomainT const &amp;val)</argsstring>
        <name>eraseGlobal</name>
        <param>
          <type>DomainT const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="288" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="288" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1ae2ce827cfd5857da621cf84247669075" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::insertGlobal</definition>
        <argsstring>(IntervalType const &amp;i)</argsstring>
        <name>insertGlobal</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1f8f5bb84064be35bbaaf15bb5a43f14" kindref="member">IntervalType</ref> const &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="309" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="309" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a91191c2534322434444f55456acbc9a8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
        <definition>IteratorType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::join</definition>
        <argsstring>(IteratorType it)</argsstring>
        <name>join</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="328" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="328" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a67af1e4189b8466888468076a39e9a23" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
        <definition>IteratorType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::joinLeft</definition>
        <argsstring>(IteratorType it)</argsstring>
        <name>joinLeft</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="339" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="339" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_integral_set_base_1a8b3b55cbc22cfa0da942cc27cbc83f92" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
        <definition>IteratorType vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;::joinRight</definition>
        <argsstring>(IteratorType it)</argsstring>
        <name>joinRight</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" kindref="member">IteratorType</ref></type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/integral_set.h" line="353" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="353" bodyend="365"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2172">
        <label>DomainT</label>
      </node>
      <node id="2171">
        <label>vt::term::interval::IntegralSetBase&lt; DomainT, sentinel, AllocatorT, IntervalT, OrderedSetT, IntervalCompareT &gt;</label>
        <link refid="structvt_1_1term_1_1interval_1_1_integral_set_base"/>
        <childnode refid="2172" relation="usage">
          <edgelabel>lb_</edgelabel>
          <edgelabel>ub_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/termination/interval/integral_set.h" line="73" column="1" bodyfile="src/vt/termination/interval/integral_set.h" bodystart="73" bodyend="485"/>
    <listofallmembers>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1af699b4961903ebe28d478088eae9b60a" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>AllocType</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a23d95f362bdc1094ae5f7f293771465a" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>begin</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a5786bb488ef808cd89474afa94ecc856" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>clear</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a8788c1d68e2b4348c341c120363c95e7" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>CompareType</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a48ab16ffe03b4285c7210df3084904af" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>compressedSize</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1897d55d5f300ad209d2ce014240680d" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>compression</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1aa44021f10057190693c22777749fc8c4" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>contains</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a74b3ffb0498e75459e23d59b2d4facfa" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>DomainType</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1af9b94870159b8796053112c31f9570" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>dumpState</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a6b6c9d51286b662d28eb1dfac3047af0" prot="private" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>elms_</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1aaf1b42550ad04b45edf7bb0b120a3ea5" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>empty</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1aaec7a0f928c035753685be34d0cc54f8" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>end</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a26d04c73487d5911c447e627dae87627" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>erase</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1ae93298452c48fe7c583f0a7264a7dde2" prot="private" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>eraseGlobal</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a4f5f1203eb50e1ebaccc479b16af89a1" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>exists</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1abe3fb337e5e5690d72aa6576519e5b86" prot="private" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>existsGlobal</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1abd0d7f40a96384d2db0a2782a8921a34" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>ForwardIter</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a50bd3ba628483148568402f9b474f680" prot="private" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>hint_</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a3e9dc82d28ecca2c84edac4c80e6c433" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>ibegin</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a34c4b2af7847cae15a7827fe8b578d1b" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>iend</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a7476d33df36a287580cdecc9dd6c2bd1" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>insert</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a34422ad0f4a5341e700a9264f921381d" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>insert</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1ae2ce827cfd5857da621cf84247669075" prot="private" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>insertGlobal</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1ade802dbc86e759545ee5b3aaa9bf6396" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>insertInterval</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a2520319a367538b984b3a3a1ba56204d" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>insertInterval</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a87c94a2beab19ba74470b18a1de9aedf" prot="private" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>insertSet</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a0826331831d6c87ec6b81a9264f98e12" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>IntegralSetBase</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a8584b495b7b88baa0eed6012993dd562" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>IntegralSetBase</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a54265fe55a770f1d7dc880f013fdb99c" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>IntegralSetBase</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1e162190ce569f5479d29c2284419980" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>IntegralSetBase</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a1f8f5bb84064be35bbaaf15bb5a43f14" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>IntervalType</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a07c43cee06c7e1f943f4acfd1274e8c1" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>irbegin</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a2656b9c3920215f4cbc3a8bad3f3b9fd" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>irend</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a111b2ec1ea960a40ba4270be702f11f1" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>IteratorType</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a91191c2534322434444f55456acbc9a8" prot="private" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>join</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a67af1e4189b8466888468076a39e9a23" prot="private" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>joinLeft</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a8b3b55cbc22cfa0da942cc27cbc83f92" prot="private" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>joinRight</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a81a48c32a51a56d1006dc212b2de60aa" prot="private" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>lb_</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a5d0984e302e0ddb9828130261b86ec50" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>lower</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1af96e31d4224f965ce41938b031cc9589" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>operator=</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1af29bc3750493c7de4043f43ef7eb2ca2" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>OrderedSetType</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a04700201180ff07417358d70c9ac5c82" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>PositionType</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a9c808e539cad61d40a062317e983ba74" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>range</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1ab253d070e9a28940a9b727696b0bb25c" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>rbegin</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1ae174160d7537b4c841d71514deb90a89" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>rend</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1af36c82de08ca3e67714c9051d9f3db92" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>ReverseIter</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1aa057be2db33d30cb34a2c8734f7f0278" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>serialize</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a5ed151f2f412d1df26f6b1fae4515bad" prot="private" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>set_</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1aeee10fc1f3ea82698fd50f226fee86dc" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>size</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1ace5d01da6b573a7e13405b362ca57f48" prot="private" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>ub_</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_integral_set_base_1a88ef66995c9fd0c1d8ba031dab28da9b" prot="public" virt="non-virtual"><scope>vt::term::interval::IntegralSetBase</scope><name>upper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
