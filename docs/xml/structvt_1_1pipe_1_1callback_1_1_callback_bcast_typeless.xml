<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless" kind="struct" language="C++" prot="public">
    <compoundname>vt::pipe::callback::CallbackBcastTypeless</compoundname>
    <basecompoundref refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l" prot="public" virt="non-virtual">vt::pipe::callback::CallbackBaseTL&lt; CallbackBcastTypeless &gt;</basecompoundref>
    <derivedcompoundref refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_bcast_msg_c_b" prot="public" virt="non-virtual">vt::pipe::callback::cbunion::BcastMsgCB</derivedcompoundref>
    <includes refid="callback__bcast__tl_8h" local="no">callback_bcast_tl.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a892daf695e5ef15dd0967b01f47a31e7" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::pipe::callback::CallbackBcastTypeless::handler_</definition>
        <argsstring></argsstring>
        <name>handler_</name>
        <initializer>= uninitialized_handler</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="84" column="1" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1aefe6c7bd98fd2cff741fee9dd3a1f063" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::pipe::callback::CallbackBcastTypeless::include_sender_</definition>
        <argsstring></argsstring>
        <name>include_sender_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="85" column="1" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a4f41ee712c6d8359f2702731cdb508e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBcastTypeless::CallbackBcastTypeless</definition>
        <argsstring>()=default</argsstring>
        <name>CallbackBcastTypeless</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a21bda4efe28c82f442bf0881b1148196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBcastTypeless::CallbackBcastTypeless</definition>
        <argsstring>(CallbackBcastTypeless const &amp;)=default</argsstring>
        <name>CallbackBcastTypeless</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless" kindref="compound">CallbackBcastTypeless</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a47d8224353671c6a7769abaed3a032ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBcastTypeless::CallbackBcastTypeless</definition>
        <argsstring>(CallbackBcastTypeless &amp;&amp;)=default</argsstring>
        <name>CallbackBcastTypeless</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless" kindref="compound">CallbackBcastTypeless</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1acad87bb1887561979d41c298896463e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless" kindref="compound">CallbackBcastTypeless</ref> &amp;</type>
        <definition>CallbackBcastTypeless&amp; vt::pipe::callback::CallbackBcastTypeless::operator=</definition>
        <argsstring>(CallbackBcastTypeless const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless" kindref="compound">CallbackBcastTypeless</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a0681b9d932d75c7c1390e8297258584e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBcastTypeless::CallbackBcastTypeless</definition>
        <argsstring>(HandlerType const in_handler, bool const &amp;in_include)</argsstring>
        <name>CallbackBcastTypeless</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>in_handler</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>in_include</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="62" column="1" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.cc" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a15f773a711d9771b8c60683de2762bc8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::pipe::callback::CallbackBcastTypeless::getHandler</definition>
        <argsstring>() const</argsstring>
        <name>getHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="66" column="1" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a3a93cb6e0ac25c14edfece0d19feff23" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::callback::CallbackBcastTypeless::getIncSender</definition>
        <argsstring>() const</argsstring>
        <name>getIncSender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="67" column="1" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1ad8a8822a82d979df798f8dcb57c8c4e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackBcastTypeless::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="70" column="1" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.impl.h" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a38b71fafbb0f2e6ce000eaa5faec463c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::callback::CallbackBcastTypeless::operator==</definition>
        <argsstring>(CallbackBcastTypeless const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless" kindref="compound">CallbackBcastTypeless</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="72" column="1" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" bodystart="72" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a6a23e27691ce2e3789e5a5dc1a88ae0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackBcastTypeless::trigger</definition>
        <argsstring>(MsgT *msg, PipeType const &amp;pipe)</argsstring>
        <name>trigger</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="80" column="1" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.impl.h" bodystart="66" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a4f46128a5ef56035c6e2874b5387907d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackBcastTypeless::triggerVoid</definition>
        <argsstring>(PipeType const &amp;pipe)</argsstring>
        <name>triggerVoid</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="81" column="1" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.cc" bodystart="62" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="571">
        <label>vt::pipe::callback::cbunion::BcastMsgCB</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_bcast_msg_c_b"/>
        <childnode refid="569" relation="public-inheritance">
        </childnode>
      </node>
      <node id="570">
        <label>vt::pipe::callback::CallbackBaseTL&lt; CallbackBcastTypeless &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l"/>
      </node>
      <node id="569">
        <label>vt::pipe::callback::CallbackBcastTypeless</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless"/>
        <childnode refid="570" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="573">
        <label>vt::pipe::callback::CallbackBaseTL&lt; CallbackBcastTypeless &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l"/>
      </node>
      <node id="572">
        <label>vt::pipe::callback::CallbackBcastTypeless</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless"/>
        <childnode refid="573" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" line="56" column="1" bodyfile="src/vt/pipe/callback/handler_bcast/callback_bcast_tl.h" bodystart="56" bodyend="86"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l_1a9fd040600f47976c437cf0b9b0eda1f5" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>CallbackBaseTL</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a4f41ee712c6d8359f2702731cdb508e0" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>CallbackBcastTypeless</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a21bda4efe28c82f442bf0881b1148196" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>CallbackBcastTypeless</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a47d8224353671c6a7769abaed3a032ed" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>CallbackBcastTypeless</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a0681b9d932d75c7c1390e8297258584e" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>CallbackBcastTypeless</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a15f773a711d9771b8c60683de2762bc8" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>getHandler</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a3a93cb6e0ac25c14edfece0d19feff23" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>getIncSender</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a892daf695e5ef15dd0967b01f47a31e7" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>handler_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1aefe6c7bd98fd2cff741fee9dd3a1f063" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>include_sender_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1acad87bb1887561979d41c298896463e3" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>operator=</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a38b71fafbb0f2e6ce000eaa5faec463c" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>operator==</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1ad8a8822a82d979df798f8dcb57c8c4e6" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>serialize</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a6a23e27691ce2e3789e5a5dc1a88ae0f" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>trigger</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless_1a4f46128a5ef56035c6e2874b5387907d" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBcastTypeless</scope><name>triggerVoid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
