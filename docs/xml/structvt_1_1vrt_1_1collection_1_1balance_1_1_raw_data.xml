<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::balance::RawData</compoundname>
    <basecompoundref refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" prot="public" virt="non-virtual">vt::vrt::collection::balance::LoadModel</basecompoundref>
    <includes refid="raw__data_8h" local="no">raw_data.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a8ba841120376e38c83484365b57fc719" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a824290c4323836ba7541a39845a200c3" kindref="member">LoadMapType</ref> &gt; const  *</type>
        <definition>std::unordered_map&lt;PhaseType, LoadMapType&gt; const* vt::vrt::collection::balance::RawData::proc_load_</definition>
        <argsstring></argsstring>
        <name>proc_load_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="77" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1afc0c2273b3e7987e386c5d1b77289413" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a8bdadb2583f128dd256e7d5a10826542" kindref="member">SubphaseLoadMapType</ref> &gt; const  *</type>
        <definition>std::unordered_map&lt;PhaseType, SubphaseLoadMapType&gt; const* vt::vrt::collection::balance::RawData::proc_subphase_load_</definition>
        <argsstring></argsstring>
        <name>proc_subphase_load_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="78" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a1e350ebf1bd9b3c94fdbc371779b8832" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a10860c956804d644db54a16012352728" kindref="member">CommMapType</ref> &gt; const  *</type>
        <definition>std::unordered_map&lt;PhaseType, CommMapType&gt; const* vt::vrt::collection::balance::RawData::proc_comm_</definition>
        <argsstring></argsstring>
        <name>proc_comm_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="79" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a9ceb9cf1dd88772821658e506d015397" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
        <definition>PhaseType vt::vrt::collection::balance::RawData::last_completed_phase_</definition>
        <argsstring></argsstring>
        <name>last_completed_phase_</name>
        <initializer>= ~0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="80" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a4879ed47b7d3da3008dc6199adc6d519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::balance::RawData::RawData</definition>
        <argsstring>()=default</argsstring>
        <name>RawData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a4aaae24a53ead0248b873911ce560a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::RawData::updateLoads</definition>
        <argsstring>(PhaseType last_completed_phase) override</argsstring>
        <name>updateLoads</name>
        <reimplements refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a4f1c6fb5d7d7a0b147755f025b1d5f5c">updateLoads</reimplements>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>last_completed_phase</declname>
        </param>
        <briefdescription>
<para>Signals that load data for a new phase is available. </para>        </briefdescription>
        <detaileddescription>
<para>For models that want to do pre-computation based on measured loads before being asked to provide predictions from them</para><para>This would typically be called by <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_manager" kindref="compound">LBManager</ref> collectively inside an epoch that can be used for global communication in advance of any calls to <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a2fc0e286efee8f9950a7a8ff13f3261d" kindref="member">getWork()</ref></para><para>The <computeroutput>setLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="61" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.cc" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a2fc0e286efee8f9950a7a8ff13f3261d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref></type>
        <definition>TimeType vt::vrt::collection::balance::RawData::getWork</definition>
        <argsstring>(ElementIDStruct object, PhaseOffset when) override</argsstring>
        <name>getWork</name>
        <reimplements refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a430980cf8970bb3bf2b35d7ccf18799d">getWork</reimplements>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset" kindref="compound">PhaseOffset</ref></type>
          <declname>when</declname>
        </param>
        <briefdescription>
<para>Provide an estimate of the given object&apos;s load during a specified interval. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>The object whose load is desired </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">when</parametername>
</parameternamelist>
<parameterdescription>
<para>The interval in which the estimated load is desired</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>How much computation time the object is estimated to require</para></simplesect>
The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="62" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.cc" bodystart="95" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a782bcf1ecfd0a88ded3e98c83f08cc6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::RawData::setLoads</definition>
        <argsstring>(std::unordered_map&lt; PhaseType, LoadMapType &gt; const *proc_load, std::unordered_map&lt; PhaseType, SubphaseLoadMapType &gt; const *proc_subphase_load, std::unordered_map&lt; PhaseType, CommMapType &gt; const *proc_comm) override</argsstring>
        <name>setLoads</name>
        <reimplements refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a621d040453688c70c168176b40cf90df">setLoads</reimplements>
        <param>
          <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a824290c4323836ba7541a39845a200c3" kindref="member">LoadMapType</ref> &gt; const *</type>
          <declname>proc_load</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a8bdadb2583f128dd256e7d5a10826542" kindref="member">SubphaseLoadMapType</ref> &gt; const *</type>
          <declname>proc_subphase_load</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a10860c956804d644db54a16012352728" kindref="member">CommMapType</ref> &gt; const *</type>
          <declname>proc_comm</declname>
        </param>
        <briefdescription>
<para>Initialize the model instance with pointers to the measured load data. </para>        </briefdescription>
        <detaileddescription>
<para>This would typically be called by <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_manager" kindref="compound">LBManager</ref> when the user has passed a new model instance for a collection </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="64" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.cc" bodystart="53" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a54351249212ade8b2d25a857e71b256f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_object_iterator" kindref="compound">ObjectIterator</ref></type>
        <definition>ObjectIterator vt::vrt::collection::balance::RawData::begin</definition>
        <argsstring>() override</argsstring>
        <name>begin</name>
        <reimplements refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a6ca139b4f14d79d1d59b46016efae221">begin</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object enumeration, to abstract away access to the underlying structures from <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" kindref="compound">NodeStats</ref></para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="68" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.cc" bodystart="62" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a07ae6234d91c2daa7c2d51117b224f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_object_iterator" kindref="compound">ObjectIterator</ref></type>
        <definition>ObjectIterator vt::vrt::collection::balance::RawData::end</definition>
        <argsstring>() override</argsstring>
        <name>end</name>
        <reimplements refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a8474fb097bddbd75711e1e8d74084651">end</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object enumeration, to abstract away access to the underlying structures from <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" kindref="compound">NodeStats</ref></para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="69" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.cc" bodystart="71" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a586c3223d1f69ee9d5eb2930ff659051" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int vt::vrt::collection::balance::RawData::getNumObjects</definition>
        <argsstring>() override</argsstring>
        <name>getNumObjects</name>
        <reimplements refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a87b90c2daf3a34243a7a2af266aa0b29">getNumObjects</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object enumeration, to abstract away access to the underlying structures from <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" kindref="compound">NodeStats</ref></para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="71" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.cc" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a151f3230094feacd15015f51980b8e9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int vt::vrt::collection::balance::RawData::getNumCompletedPhases</definition>
        <argsstring>() override</argsstring>
        <name>getNumCompletedPhases</name>
        <reimplements refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a999b155237ce8ba253019e783462a9aa">getNumCompletedPhases</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of phases of history available</para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="72" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.cc" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1aeb7830328dfb72f11740e79eed6a23aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int vt::vrt::collection::balance::RawData::getNumSubphases</definition>
        <argsstring>() override</argsstring>
        <name>getNumSubphases</name>
        <reimplements refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1ab46ea62e4228d4a64de9dd0adfe81af2">getNumSubphases</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of subphases recorded in the most recent completed phase</para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="73" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.cc" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a8f709c3aeaf10e92c746d773d7ba6f9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int vt::vrt::collection::balance::RawData::getNumPastPhasesNeeded</definition>
        <argsstring>(unsigned int look_back) override</argsstring>
        <name>getNumPastPhasesNeeded</name>
        <reimplements refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1ac061725720a2017908090863080b70e5">getNumPastPhasesNeeded</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>look_back</declname>
        </param>
        <briefdescription>
<para>Compute how many phases of past load statistics need to be kept availble for the model to use. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">look_back</parametername>
</parameternamelist>
<parameterdescription>
<para>How many phases into the past the caller intends to query</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>How many phases of past load statistics will be needed to satisfy the requested history </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="74" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.cc" bodystart="112" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A strictly retrospective view of the recorded object timings. </para>    </briefdescription>
    <detaileddescription>
<para>For use with load balancers, this must typically be stacked beneath a model that predicts future loads, such as <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_naive_persistence" kindref="compound">NaivePersistence</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3098">
        <label>vt::vrt::collection::balance::LoadModel</label>
        <link refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model"/>
      </node>
      <node id="3097">
        <label>vt::vrt::collection::balance::RawData</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data"/>
        <childnode refid="3098" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3100">
        <label>vt::vrt::collection::balance::LoadModel</label>
        <link refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model"/>
      </node>
      <node id="3099">
        <label>vt::vrt::collection::balance::RawData</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data"/>
        <childnode refid="3100" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/balance/model/raw_data.h" line="59" column="1" bodyfile="src/vt/vrt/collection/balance/model/raw_data.h" bodystart="59" bodyend="81"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a54351249212ade8b2d25a857e71b256f" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>begin</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a07ae6234d91c2daa7c2d51117b224f7d" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>end</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a151f3230094feacd15015f51980b8e9e" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>getNumCompletedPhases</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a586c3223d1f69ee9d5eb2930ff659051" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>getNumObjects</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a8f709c3aeaf10e92c746d773d7ba6f9c" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>getNumPastPhasesNeeded</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1aeb7830328dfb72f11740e79eed6a23aa" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>getNumSubphases</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a2fc0e286efee8f9950a7a8ff13f3261d" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>getWork</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a9ceb9cf1dd88772821658e506d015397" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>last_completed_phase_</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a90f345e752441d66b2893027f2626226" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>LoadModel</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a1e350ebf1bd9b3c94fdbc371779b8832" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>proc_comm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a8ba841120376e38c83484365b57fc719" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>proc_load_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1afc0c2273b3e7987e386c5d1b77289413" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>proc_subphase_load_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a4879ed47b7d3da3008dc6199adc6d519" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>RawData</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a52e2210225947697a235b75c385eb104" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a782bcf1ecfd0a88ded3e98c83f08cc6f" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>setLoads</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a4aaae24a53ead0248b873911ce560a34" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>updateLoads</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a6478a387f285b322a48ee1d8a80fc6f7" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::RawData</scope><name>~LoadModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
