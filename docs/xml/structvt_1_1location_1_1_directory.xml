<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1location_1_1_directory" kind="struct" language="C++" prot="public">
    <compoundname>vt::location::Directory</compoundname>
    <includes refid="directory_8h" local="no">directory.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>KeyT</declname>
        <defname>KeyT</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>ValueT</declname>
        <defname>ValueT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1location_1_1_directory_1a6a897ff3929eccb2d334eb0b87b53f57" prot="public" static="no">
        <type>std::unordered_map&lt; KeyT, ValueT &gt;</type>
        <definition>using vt::location::Directory&lt; KeyT, ValueT &gt;::DirectoryMapType =  std::unordered_map&lt;KeyT, ValueT&gt;</definition>
        <argsstring></argsstring>
        <name>DirectoryMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/directory/directory.h" line="55" column="1" bodyfile="src/vt/topos/location/directory/directory.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1location_1_1_directory_1a8febd5f13d21274bce41021ba2a3da03" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1location_1_1_directory_1a6a897ff3929eccb2d334eb0b87b53f57" kindref="member">DirectoryMapType</ref></type>
        <definition>DirectoryMapType vt::location::Directory&lt; KeyT, ValueT &gt;::dir_</definition>
        <argsstring></argsstring>
        <name>dir_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/directory/directory.h" line="73" column="1" bodyfile="src/vt/topos/location/directory/directory.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1location_1_1_directory_1a166cb46d3274d1bc09e4b852d70172af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::location::Directory&lt; KeyT, ValueT &gt;::Directory</definition>
        <argsstring>()=default</argsstring>
        <name>Directory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/directory/directory.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_directory_1aec1cbff73a72fb1be6825bd048f69601" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::location::Directory&lt; KeyT, ValueT &gt;::exists</definition>
        <argsstring>(KeyT const &amp;key) const</argsstring>
        <name>exists</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/directory/directory.h" line="59" column="1" bodyfile="src/vt/topos/location/directory/directory.impl.h" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_directory_1aa5725f97f3444efc18c8745b747545ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>LocationSizeType vt::location::Directory&lt; KeyT, ValueT &gt;::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/directory/directory.h" line="60" column="1" bodyfile="src/vt/topos/location/directory/directory.impl.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_directory_1a7d3271252e69fd8c2c16c702b032bdc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ValueT const  &amp;</type>
        <definition>ValueT const  &amp; vt::location::Directory&lt; KeyT, ValueT &gt;::get</definition>
        <argsstring>(KeyT const &amp;key)</argsstring>
        <name>get</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/directory/directory.h" line="61" column="1" bodyfile="src/vt/topos/location/directory/directory.impl.h" bodystart="58" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_directory_1ae54fc683860dbfd4145012b93332d70c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DirectoryMapType::iterator</type>
        <definition>Directory&lt; KeyT, ValueT &gt;::DirectoryMapType::iterator vt::location::Directory&lt; KeyT, ValueT &gt;::getIter</definition>
        <argsstring>(KeyT const &amp;key)</argsstring>
        <name>getIter</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/directory/directory.h" line="62" column="1" bodyfile="src/vt/topos/location/directory/directory.impl.h" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_directory_1a7960b610e733ac8df4417a6181e32fe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DirectoryMapType::iterator</type>
        <definition>Directory&lt; KeyT, ValueT &gt;::DirectoryMapType::iterator vt::location::Directory&lt; KeyT, ValueT &gt;::getIterEnd</definition>
        <argsstring>()</argsstring>
        <name>getIterEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/directory/directory.h" line="63" column="1" bodyfile="src/vt/topos/location/directory/directory.impl.h" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_directory_1a85c59bd87eecbfabcbd7941e1c1929ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::Directory&lt; KeyT, ValueT &gt;::remove</definition>
        <argsstring>(KeyT const &amp;key)</argsstring>
        <name>remove</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/directory/directory.h" line="64" column="1" bodyfile="src/vt/topos/location/directory/directory.impl.h" bodystart="84" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_directory_1a9c4f1322988eb75cb7abd13d977b315f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::Directory&lt; KeyT, ValueT &gt;::insert</definition>
        <argsstring>(KeyT const &amp;key, ValueT const &amp;value)</argsstring>
        <name>insert</name>
        <param>
          <type>KeyT const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>ValueT const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/directory/directory.h" line="65" column="1" bodyfile="src/vt/topos/location/directory/directory.impl.h" bodystart="92" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_directory_1a78fb8d36b1ca041d03ddc22dcbb907ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Serializer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::location::Directory&lt; KeyT, ValueT &gt;::serialize</definition>
        <argsstring>(Serializer &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>Serializer &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/directory/directory.h" line="68" column="1" bodyfile="src/vt/topos/location/directory/directory.h" bodystart="68" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/topos/location/directory/directory.h" line="54" column="1" bodyfile="src/vt/topos/location/directory/directory.h" bodystart="54" bodyend="74"/>
    <listofallmembers>
      <member refid="structvt_1_1location_1_1_directory_1a8febd5f13d21274bce41021ba2a3da03" prot="private" virt="non-virtual"><scope>vt::location::Directory</scope><name>dir_</name></member>
      <member refid="structvt_1_1location_1_1_directory_1a166cb46d3274d1bc09e4b852d70172af" prot="public" virt="non-virtual"><scope>vt::location::Directory</scope><name>Directory</name></member>
      <member refid="structvt_1_1location_1_1_directory_1a6a897ff3929eccb2d334eb0b87b53f57" prot="public" virt="non-virtual"><scope>vt::location::Directory</scope><name>DirectoryMapType</name></member>
      <member refid="structvt_1_1location_1_1_directory_1aec1cbff73a72fb1be6825bd048f69601" prot="public" virt="non-virtual"><scope>vt::location::Directory</scope><name>exists</name></member>
      <member refid="structvt_1_1location_1_1_directory_1a7d3271252e69fd8c2c16c702b032bdc8" prot="public" virt="non-virtual"><scope>vt::location::Directory</scope><name>get</name></member>
      <member refid="structvt_1_1location_1_1_directory_1ae54fc683860dbfd4145012b93332d70c" prot="public" virt="non-virtual"><scope>vt::location::Directory</scope><name>getIter</name></member>
      <member refid="structvt_1_1location_1_1_directory_1a7960b610e733ac8df4417a6181e32fe1" prot="public" virt="non-virtual"><scope>vt::location::Directory</scope><name>getIterEnd</name></member>
      <member refid="structvt_1_1location_1_1_directory_1aa5725f97f3444efc18c8745b747545ac" prot="public" virt="non-virtual"><scope>vt::location::Directory</scope><name>getSize</name></member>
      <member refid="structvt_1_1location_1_1_directory_1a9c4f1322988eb75cb7abd13d977b315f" prot="public" virt="non-virtual"><scope>vt::location::Directory</scope><name>insert</name></member>
      <member refid="structvt_1_1location_1_1_directory_1a85c59bd87eecbfabcbd7941e1c1929ae" prot="public" virt="non-virtual"><scope>vt::location::Directory</scope><name>remove</name></member>
      <member refid="structvt_1_1location_1_1_directory_1a78fb8d36b1ca041d03ddc22dcbb907ad" prot="public" virt="non-virtual"><scope>vt::location::Directory</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
