<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1messaging_1_1_i_recv_holder" kind="struct" language="C++" prot="public">
    <compoundname>vt::messaging::IRecvHolder</compoundname>
    <includes refid="irecv__holder_8h" local="no">irecv_holder.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1messaging_1_1_i_recv_holder_1aae9327cb1e82d6aee682457739dad4b5" prot="public" static="no">
        <type><ref refid="structvt_1_1arguments_1_1_arg_config" kindref="compound">vt::arguments::ArgConfig</ref></type>
        <definition>using vt::messaging::IRecvHolder&lt; T &gt;::ArgType =  vt::arguments::ArgConfig</definition>
        <argsstring></argsstring>
        <name>ArgType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/irecv_holder.h" line="68" column="1" bodyfile="src/vt/messaging/irecv_holder.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1messaging_1_1_i_recv_holder_1ad906203e102f9180b56d66393bd47c55" prot="private" static="no" mutable="no">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; vt::messaging::IRecvHolder&lt; T &gt;::holder_</definition>
        <argsstring></argsstring>
        <name>holder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/irecv_holder.h" line="151" column="1" bodyfile="src/vt/messaging/irecv_holder.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1messaging_1_1_i_recv_holder_1a483736cc4310f872502c58d0c2667025" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vt::messaging::IRecvHolder&lt; T &gt;::holes_</definition>
        <argsstring></argsstring>
        <name>holes_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/irecv_holder.h" line="152" column="1" bodyfile="src/vt/messaging/irecv_holder.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1messaging_1_1_i_recv_holder_1a709a349d723247b10bf57ca2831bfe19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::messaging::IRecvHolder&lt; T &gt;::IRecvHolder</definition>
        <argsstring>()=default</argsstring>
        <name>IRecvHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/irecv_holder.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1messaging_1_1_i_recv_holder_1ab81d251a84cb2c8366eb5f5052ce002c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::messaging::IRecvHolder&lt; T &gt;::emplace</definition>
        <argsstring>(U &amp;&amp;u)</argsstring>
        <name>emplace</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Insert a new element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u</parametername>
</parameternamelist>
<parameterdescription>
<para>element to insert </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/irecv_holder.h" line="78" column="1" bodyfile="src/vt/messaging/irecv_holder.h" bodystart="78" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1messaging_1_1_i_recv_holder_1a5c25ae9371ef928b00c42405d9d00a38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callable</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::messaging::IRecvHolder&lt; T &gt;::testAll</definition>
        <argsstring>(Callable c)</argsstring>
        <name>testAll</name>
        <param>
          <type>Callable</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>MPI test all the element in the holder. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>callable to run if the element <computeroutput>MPI_Test</computeroutput> succeeds</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if progress is made </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/irecv_holder.h" line="102" column="1" bodyfile="src/vt/messaging/irecv_holder.h" bodystart="102" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1messaging_1_1_i_recv_holder_1acfbf80c561c8aa8e75d27d2ee2892b09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::messaging::IRecvHolder&lt; T &gt;::compress</definition>
        <argsstring>()</argsstring>
        <name>compress</name>
        <briefdescription>
<para>Compress the holder by removing holes and re-arranging elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/irecv_holder.h" line="139" column="1" bodyfile="src/vt/messaging/irecv_holder.h" bodystart="139" bodyend="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds a set of pending MPI Irecvs to poll for completion. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/messaging/irecv_holder.h" line="67" column="1" bodyfile="src/vt/messaging/irecv_holder.h" bodystart="67" bodyend="153"/>
    <listofallmembers>
      <member refid="structvt_1_1messaging_1_1_i_recv_holder_1aae9327cb1e82d6aee682457739dad4b5" prot="public" virt="non-virtual"><scope>vt::messaging::IRecvHolder</scope><name>ArgType</name></member>
      <member refid="structvt_1_1messaging_1_1_i_recv_holder_1acfbf80c561c8aa8e75d27d2ee2892b09" prot="public" virt="non-virtual"><scope>vt::messaging::IRecvHolder</scope><name>compress</name></member>
      <member refid="structvt_1_1messaging_1_1_i_recv_holder_1ab81d251a84cb2c8366eb5f5052ce002c" prot="public" virt="non-virtual"><scope>vt::messaging::IRecvHolder</scope><name>emplace</name></member>
      <member refid="structvt_1_1messaging_1_1_i_recv_holder_1ad906203e102f9180b56d66393bd47c55" prot="private" virt="non-virtual"><scope>vt::messaging::IRecvHolder</scope><name>holder_</name></member>
      <member refid="structvt_1_1messaging_1_1_i_recv_holder_1a483736cc4310f872502c58d0c2667025" prot="private" virt="non-virtual"><scope>vt::messaging::IRecvHolder</scope><name>holes_</name></member>
      <member refid="structvt_1_1messaging_1_1_i_recv_holder_1a709a349d723247b10bf57ca2831bfe19" prot="public" virt="non-virtual"><scope>vt::messaging::IRecvHolder</scope><name>IRecvHolder</name></member>
      <member refid="structvt_1_1messaging_1_1_i_recv_holder_1a5c25ae9371ef928b00c42405d9d00a38" prot="public" virt="non-virtual"><scope>vt::messaging::IRecvHolder</scope><name>testAll</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
