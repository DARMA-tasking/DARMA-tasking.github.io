<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1epoch_1_1_epoch_manip" kind="struct" language="C++" prot="public">
    <compoundname>vt::epoch::EpochManip</compoundname>
    <includes refid="epoch__manip_8h" local="no">vt/epoch/epoch_manip.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="structvt_1_1epoch_1_1_epoch_manip_1a855b3178e81730c751c6620b8146a575" prot="private" static="yes" mutable="no">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::cur_rooted_</definition>
        <argsstring></argsstring>
        <name>cur_rooted_</name>
        <initializer>= no_epoch</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The current rooted sequential ID </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="274" column="1" bodyfile="src/vt/epoch/epoch_manip.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1epoch_1_1_epoch_manip_1a42a389acfdf4785f8eef141cb74f3bbb" prot="private" static="yes" mutable="no">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::cur_non_rooted_</definition>
        <argsstring></argsstring>
        <name>cur_non_rooted_</name>
        <initializer>= no_epoch</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The current non-rooted sequential ID </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="275" column="1" bodyfile="src/vt/epoch/epoch_manip.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a00210a34334fb86984cfbd08bae74929" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::epoch::EpochManip::isRooted</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>isRooted</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Gets whether the epoch is rooted or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to operate on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the <computeroutput>epoch</computeroutput> is rooted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="85" column="1" bodyfile="src/vt/epoch/epoch_manip_get.h" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a57a6313d8f4ffc685ee47b2a881079ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::epoch::EpochManip::hasCategory</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>hasCategory</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Gets whether the epoch has a category or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to operate on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether <computeroutput>epoch</computeroutput> has a category<mdash/> not <computeroutput><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7caa6136714a068313660a40ae6bd15410c" kindref="member">eEpochCategory::NoCategoryEpoch</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="95" column="1" bodyfile="src/vt/epoch/epoch_manip_get.h" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1afb2b55c1d422512bc266f04e1aff7904" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::epoch::EpochManip::isUser</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>isUser</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Gets whether the epoch is a user epoch (specifically a user-customized dispatched epoch) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to operate on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the <computeroutput>epoch</computeroutput> is a user epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="105" column="1" bodyfile="src/vt/epoch/epoch_manip_get.h" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1aa61d47033545df147c01036211c4cabe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref></type>
        <definition>eEpochCategory vt::epoch::EpochManip::category</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>category</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Gets the <computeroutput>eEpochCategory</computeroutput> of a given epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to operate on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the category of the <computeroutput>epoch</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="114" column="1" bodyfile="src/vt/epoch/epoch_manip_get.h" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a7120f73ef583ab8f061334fc0bc519c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::epoch::EpochManip::node</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>node</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Gets the node for the epoch (only relevant for rooted) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to operate on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the node (arbitrator) for the <computeroutput>epoch</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="123" column="1" bodyfile="src/vt/epoch/epoch_manip_get.h" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1ac34685702f19dde2f5bc25fcb43ec038" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::seq</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>seq</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Gets the sequential ID for an epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to operate on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sequential number for an <computeroutput>epoch</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="132" column="1" bodyfile="src/vt/epoch/epoch_manip_get.h" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1aae48ba1aafb105551df363ffcb578881" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::epoch::EpochManip::setIsRooted</definition>
        <argsstring>(EpochType &amp;epoch, bool const is_rooted)</argsstring>
        <name>setIsRooted</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>is_rooted</declname>
        </param>
        <briefdescription>
<para>Set whether the <computeroutput>epoch</computeroutput> is rooted or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_rooted</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to set the epoch as rooted or not </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="144" column="1" bodyfile="src/vt/epoch/epoch_manip_set.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a39400bd927257031ae4b074be0739a36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::epoch::EpochManip::setHasCategory</definition>
        <argsstring>(EpochType &amp;epoch, bool const has_cat)</argsstring>
        <name>setHasCategory</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>has_cat</declname>
        </param>
        <briefdescription>
<para>Set whether the <computeroutput>epoch</computeroutput> has a category or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">has_cat</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to the epoch has a category </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="152" column="1" bodyfile="src/vt/epoch/epoch_manip_set.h" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a4ecda0e3e96089747beea148ca0b8257" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::epoch::EpochManip::setIsUser</definition>
        <argsstring>(EpochType &amp;epoch, bool const is_user)</argsstring>
        <name>setIsUser</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>is_user</declname>
        </param>
        <briefdescription>
<para>Set whether the <computeroutput>epoch</computeroutput> is a user epoch or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_user</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to set the epoch as user or not </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="160" column="1" bodyfile="src/vt/epoch/epoch_manip_set.h" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a5ef6f747225cf046cff1fb39945fa547" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::epoch::EpochManip::setCategory</definition>
        <argsstring>(EpochType &amp;epoch, eEpochCategory const cat)</argsstring>
        <name>setCategory</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const</type>
          <declname>cat</declname>
        </param>
        <briefdescription>
<para>Set the category for the <computeroutput>epoch</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cat</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to set the epoch as rooted or not </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="168" column="1" bodyfile="src/vt/epoch/epoch_manip_set.h" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a5c4c075234fc7c263b0eabf09e85ef05" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::epoch::EpochManip::setNode</definition>
        <argsstring>(EpochType &amp;epoch, NodeType const node)</argsstring>
        <name>setNode</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Set the node for a rooted <computeroutput>epoch</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to set the epoch as rooted or not </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="176" column="1" bodyfile="src/vt/epoch/epoch_manip_set.h" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1af1fb573c17b2bd4e6a789702cf0392dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::epoch::EpochManip::setSeq</definition>
        <argsstring>(EpochType &amp;epoch, EpochType const seq)</argsstring>
        <name>setSeq</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const</type>
          <declname>seq</declname>
        </param>
        <briefdescription>
<para>Set the sequential ID for an <computeroutput>epoch</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">seq</parametername>
</parameternamelist>
<parameterdescription>
<para>the sequential ID to set on the epoch </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="184" column="1" bodyfile="src/vt/epoch/epoch_manip_set.h" bodystart="88" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a6a013fb8f78fe6b9298be472a00891f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::makeRootedEpoch</definition>
        <argsstring>(EpochType const &amp;seq, bool const &amp;is_user=false, eEpochCategory const &amp;category=default_epoch_category)</argsstring>
        <name>makeRootedEpoch</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>seq</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_user</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const &amp;</type>
          <declname>category</declname>
          <defval>default_epoch_category</defval>
        </param>
        <briefdescription>
<para>Make a rooted epoch with a given sequential ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">seq</parametername>
</parameternamelist>
<parameterdescription>
<para>the sequential ID for the epoch </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_user</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the epoch is a user epoch or not </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>the category for the epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="200" column="1" bodyfile="src/vt/epoch/epoch_manip_make.h" bodystart="95" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1ac8489de69500dee4376806d56850adbc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::makeEpoch</definition>
        <argsstring>(EpochType const &amp;seq, bool const &amp;is_rooted=false, NodeType const &amp;root_node=default_epoch_node, bool const &amp;is_user=false, eEpochCategory const &amp;category=default_epoch_category)</argsstring>
        <name>makeEpoch</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>seq</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_rooted</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>root_node</declname>
          <defval>default_epoch_node</defval>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_user</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const &amp;</type>
          <declname>category</declname>
          <defval>default_epoch_category</defval>
        </param>
        <briefdescription>
<para>Make a new epoch (rooted or collective) with a given sequential ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">seq</parametername>
</parameternamelist>
<parameterdescription>
<para>the sequential ID for the epoch </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_rooted</parametername>
</parameternamelist>
<parameterdescription>
<para>if the epoch should be rooted or not </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">root_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the root node for the epoch if <computeroutput>is_rooted</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_user</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the epoch is a user epoch or not </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>the category for the epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="217" column="1" bodyfile="src/vt/epoch/epoch_manip_make.h" bodystart="57" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a78295c68a66b0ba88a1188e7e39b7d61" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::makeNewRootedEpoch</definition>
        <argsstring>(bool const &amp;is_user=false, eEpochCategory const &amp;category=default_epoch_category)</argsstring>
        <name>makeNewRootedEpoch</name>
        <param>
          <type>bool const &amp;</type>
          <declname>is_user</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const &amp;</type>
          <declname>category</declname>
          <defval>default_epoch_category</defval>
        </param>
        <briefdescription>
<para>Create the next rooted epoch, stateful. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_user</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the epoch is a user epoch or not </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>the category for the epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="233" column="1" bodyfile="src/vt/epoch/epoch_manip_make.h" bodystart="102" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1ab744c3a392856694aa13a5c3a9da0841" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::makeNewEpoch</definition>
        <argsstring>(bool const &amp;is_rooted=false, NodeType const &amp;root_node=default_epoch_node, bool const &amp;is_user=false, eEpochCategory const &amp;category=default_epoch_category)</argsstring>
        <name>makeNewEpoch</name>
        <param>
          <type>bool const &amp;</type>
          <declname>is_rooted</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>root_node</declname>
          <defval>default_epoch_node</defval>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_user</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const &amp;</type>
          <declname>category</declname>
          <defval>default_epoch_category</defval>
        </param>
        <briefdescription>
<para>Create the next epoch (rooted or collective), stateful. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_rooted</parametername>
</parameternamelist>
<parameterdescription>
<para>if the epoch should be rooted or not </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">root_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the root node for the epoch if <computeroutput>is_rooted</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_user</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the epoch is a user epoch or not </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>the category for the epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="248" column="1" bodyfile="src/vt/epoch/epoch_manip_make.h" bodystart="77" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a6ae352a8b90f6dddbd76569cb7a47462" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::next</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>next</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>The next epoch given an epoch, increments the sequential ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to start from</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="267" column="1" bodyfile="src/vt/epoch/epoch_manip_make.h" bodystart="116" bodyend="118"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a507bb5b29e034df10e1f8e12b920e666" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::nextSlow</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>nextSlow</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="270" column="1" bodyfile="src/vt/epoch/epoch_manip_make.h" bodystart="120" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a22af1a8f72d23d10d56e1a72bf2f2500" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::nextFast</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>nextFast</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="271" column="1" bodyfile="src/vt/epoch/epoch_manip_make.h" bodystart="127" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class used to manipulate the bits in a <computeroutput>EpochType</computeroutput> and manage the current sequential IDs for allocating epochs. </para>    </briefdescription>
    <detaileddescription>
<para>Used by the system mostly to manage the bits inside an <computeroutput>EpochType</computeroutput>. It knows how to set the appropriate bits to change the static type of an <computeroutput>EpochType</computeroutput> by setting the bit pattern. </para>    </detaileddescription>
    <location file="src/vt/epoch/epoch_manip.h" line="73" column="1" bodyfile="src/vt/epoch/epoch_manip.h" bodystart="73" bodyend="276"/>
    <listofallmembers>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1aa61d47033545df147c01036211c4cabe" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>category</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a42a389acfdf4785f8eef141cb74f3bbb" prot="private" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>cur_non_rooted_</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a855b3178e81730c751c6620b8146a575" prot="private" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>cur_rooted_</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a57a6313d8f4ffc685ee47b2a881079ac" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>hasCategory</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a00210a34334fb86984cfbd08bae74929" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>isRooted</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1afb2b55c1d422512bc266f04e1aff7904" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>isUser</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1ac8489de69500dee4376806d56850adbc" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>makeEpoch</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1ab744c3a392856694aa13a5c3a9da0841" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>makeNewEpoch</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a78295c68a66b0ba88a1188e7e39b7d61" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>makeNewRootedEpoch</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a6a013fb8f78fe6b9298be472a00891f8" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>makeRootedEpoch</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a6ae352a8b90f6dddbd76569cb7a47462" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>next</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a22af1a8f72d23d10d56e1a72bf2f2500" prot="private" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>nextFast</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a507bb5b29e034df10e1f8e12b920e666" prot="private" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>nextSlow</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a7120f73ef583ab8f061334fc0bc519c3" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>node</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1ac34685702f19dde2f5bc25fcb43ec038" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>seq</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a5ef6f747225cf046cff1fb39945fa547" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>setCategory</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a39400bd927257031ae4b074be0739a36" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>setHasCategory</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1aae48ba1aafb105551df363ffcb578881" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>setIsRooted</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a4ecda0e3e96089747beea148ca0b8257" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>setIsUser</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a5c4c075234fc7c263b0eabf09e85ef05" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>setNode</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1af1fb573c17b2bd4e6a789702cf0392dc" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>setSeq</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
