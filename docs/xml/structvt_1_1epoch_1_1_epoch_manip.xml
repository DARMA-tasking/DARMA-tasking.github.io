<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1epoch_1_1_epoch_manip" kind="struct" language="C++" prot="public">
    <compoundname>vt::epoch::EpochManip</compoundname>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component" prot="public" virt="non-virtual">vt::runtime::component::Component&lt; EpochManip &gt;</basecompoundref>
    <includes refid="epoch__manip_8h" local="no">vt/epoch/epoch_manip.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1epoch_1_1_epoch_manip_1ab1fe66501b6b83b07fd4188fc6a8a4fe" prot="public" static="no">
        <type><ref refid="structvt_1_1term_1_1_parent_epoch_capture" kindref="compound">term::ParentEpochCapture</ref></type>
        <definition>using vt::epoch::EpochManip::CapturedContextType =  term::ParentEpochCapture</definition>
        <argsstring></argsstring>
        <name>CapturedContextType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="73" column="1" bodyfile="src/vt/epoch/epoch_manip.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1epoch_1_1_epoch_manip_1aae06cc3b0a36114406ff318045d1c3fa" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref>, std::unique_ptr&lt; <ref refid="structvt_1_1epoch_1_1_epoch_window" kindref="compound">EpochWindow</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;EpochType,std::unique_ptr&lt;EpochWindow&gt; &gt; vt::epoch::EpochManip::terminated_epochs_</definition>
        <argsstring></argsstring>
        <name>terminated_epochs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="254" column="1" bodyfile="src/vt/epoch/epoch_manip.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1epoch_1_1_epoch_manip_1aa686e6a82ce06391ff223eb8ccd9fb7a" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1epoch_1_1_epoch_window" kindref="compound">EpochWindow</ref> &gt;</type>
        <definition>std::unique_ptr&lt;EpochWindow&gt; vt::epoch::EpochManip::terminated_collective_epochs_</definition>
        <argsstring></argsstring>
        <name>terminated_collective_epochs_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="256" column="1" bodyfile="src/vt/epoch/epoch_manip.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a8dd8d684917d7b17f726512920955b43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::epoch::EpochManip::EpochManip</definition>
        <argsstring>()</argsstring>
        <name>EpochManip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="75" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="58" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a3dcf9b105619194fddde4e26a638b856" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string vt::epoch::EpochManip::name</definition>
        <argsstring>() override</argsstring>
        <name>name</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_name_1a33c06229bb605a2b2ceff68830d6d773">name</reimplements>
        <briefdescription>
<para>Get the name of the component. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="77" column="1" bodyfile="src/vt/epoch/epoch_manip.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a3260eeacd7e688f4e81e779df41ce912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::getNextRootedEpoch</definition>
        <argsstring>(eEpochCategory const &amp;category=default_epoch_category)</argsstring>
        <name>getNextRootedEpoch</name>
        <param>
          <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const &amp;</type>
          <declname>category</declname>
          <defval>default_epoch_category</defval>
        </param>
        <briefdescription>
<para>Stateful method to create the next rooted epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>the category for the epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="198" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="103" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a3c7bf7467b6e1c95a25f19bbcbdd9f17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::getNextRootedEpoch</definition>
        <argsstring>(eEpochCategory const &amp;category, NodeType const root_node)</argsstring>
        <name>getNextRootedEpoch</name>
        <param>
          <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const</type>
          <declname>root_node</declname>
        </param>
        <briefdescription>
<para>Stateful method to create the next rooted epoch with a particular node embedded in the bits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>the category for the epoch </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">root_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the root node for the epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="211" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="111" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1aee02e9847be133585b586be614091f6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::getNextCollectiveEpoch</definition>
        <argsstring>(eEpochCategory const &amp;category=default_epoch_category)</argsstring>
        <name>getNextCollectiveEpoch</name>
        <param>
          <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const &amp;</type>
          <declname>category</declname>
          <defval>default_epoch_category</defval>
        </param>
        <briefdescription>
<para>Stateful method to create the next collective epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>the category for the epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="222" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a2ed00df099793bd9f9452203ba8ba571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1epoch_1_1_epoch_window" kindref="compound">EpochWindow</ref> *</type>
        <definition>EpochWindow * vt::epoch::EpochManip::getTerminatedWindow</definition>
        <argsstring>(EpochType epoch)</argsstring>
        <name>getTerminatedWindow</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Get an appropriate window that stores the list of terminated epoch based on the epoch archetype. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch in question</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the window of terminated epochs of that kind </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="235" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="124" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1ac1f50556319696bba8695a013f49abcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::getArchetype</definition>
        <argsstring>(EpochType epoch) const</argsstring>
        <name>getArchetype</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Get archetype bits embedded in epoch. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch in question</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>all bits except for archetype bits masked out </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="244" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="118" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a5a502343c972a5efc975943ce8510d1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::epoch::EpochManip::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="247" column="1" bodyfile="src/vt/epoch/epoch_manip.h" bodystart="247" bodyend="250"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a00210a34334fb86984cfbd08bae74929" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::epoch::EpochManip::isRooted</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>isRooted</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Gets whether the epoch is rooted or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to operate on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the <computeroutput>epoch</computeroutput> is rooted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="90" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1aa61d47033545df147c01036211c4cabe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref></type>
        <definition>eEpochCategory vt::epoch::EpochManip::category</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>category</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Gets the <computeroutput>eEpochCategory</computeroutput> of a given epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to operate on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the category of the <computeroutput>epoch</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="99" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a7120f73ef583ab8f061334fc0bc519c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::epoch::EpochManip::node</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>node</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Gets the node for the epoch (only relevant for rooted) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to operate on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the node (arbitrator) for the <computeroutput>epoch</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="108" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="156" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1ac34685702f19dde2f5bc25fcb43ec038" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::seq</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>seq</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Gets the sequential ID for an epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to operate on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sequential number for an <computeroutput>epoch</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="117" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="164" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1aae48ba1aafb105551df363ffcb578881" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::epoch::EpochManip::setIsRooted</definition>
        <argsstring>(EpochType &amp;epoch, bool const is_rooted)</argsstring>
        <name>setIsRooted</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>is_rooted</declname>
        </param>
        <briefdescription>
<para>Set whether the <computeroutput>epoch</computeroutput> is rooted or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_rooted</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to set the epoch as rooted or not </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="129" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="177" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a5ef6f747225cf046cff1fb39945fa547" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::epoch::EpochManip::setCategory</definition>
        <argsstring>(EpochType &amp;epoch, eEpochCategory const cat)</argsstring>
        <name>setCategory</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const</type>
          <declname>cat</declname>
        </param>
        <briefdescription>
<para>Set the category for the <computeroutput>epoch</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cat</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to set the epoch as rooted or not </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="137" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="184" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a5c4c075234fc7c263b0eabf09e85ef05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::epoch::EpochManip::setNode</definition>
        <argsstring>(EpochType &amp;epoch, NodeType const node)</argsstring>
        <name>setNode</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Set the node for a rooted <computeroutput>epoch</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to set the epoch as rooted or not </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="145" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="191" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1af1fb573c17b2bd4e6a789702cf0392dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::epoch::EpochManip::setSeq</definition>
        <argsstring>(EpochType &amp;epoch, EpochType const seq)</argsstring>
        <name>setSeq</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const</type>
          <declname>seq</declname>
        </param>
        <briefdescription>
<para>Set the sequential ID for an <computeroutput>epoch</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">seq</parametername>
</parameternamelist>
<parameterdescription>
<para>the sequential ID to set on the epoch </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="153" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="198" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1ac1a8c8f8d1799c05520a3bb6d2fcf6bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::generateRootedEpoch</definition>
        <argsstring>(eEpochCategory const &amp;category=default_epoch_category)</argsstring>
        <name>generateRootedEpoch</name>
        <param>
          <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const &amp;</type>
          <declname>category</declname>
          <defval>default_epoch_category</defval>
        </param>
        <briefdescription>
<para>Generate the control bits for a rooted epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>the category for the epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="167" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_manip_1a6e96213acd8e0a160a4d4b9ab6a64eaf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochManip::generateEpoch</definition>
        <argsstring>(bool const &amp;is_rooted=false, NodeType const &amp;root_node=default_epoch_node, eEpochCategory const &amp;category=default_epoch_category)</argsstring>
        <name>generateEpoch</name>
        <param>
          <type>bool const &amp;</type>
          <declname>is_rooted</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>root_node</declname>
          <defval>default_epoch_node</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const &amp;</type>
          <declname>category</declname>
          <defval>default_epoch_category</defval>
        </param>
        <briefdescription>
<para>Generate the control bits for an epoch type (rooted or collective) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_rooted</parametername>
</parameternamelist>
<parameterdescription>
<para>if the epoch should be rooted or not </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">root_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the root node for the epoch if <computeroutput>is_rooted</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">category</parametername>
</parameternamelist>
<parameterdescription>
<para>the category for the epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="180" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="64" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Component for managing epoch ID allocation/deallocation and manipulating the bits inside an epoch identifier. </para>    </briefdescription>
    <detaileddescription>
<para>Used by the system mostly to manage the bits inside an <computeroutput>EpochType</computeroutput>. It knows how to set the appropriate bits to change the type bits of an <computeroutput>EpochType</computeroutput> by setting the bit pattern. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1693">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="1694" relation="public-inheritance">
        </childnode>
        <childnode refid="1697" relation="public-inheritance">
        </childnode>
        <childnode refid="1698" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1691">
        <label>vt::epoch::EpochManip</label>
        <link refid="structvt_1_1epoch_1_1_epoch_manip"/>
        <childnode refid="1692" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1696">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="1694">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="1695" relation="public-inheritance">
        </childnode>
        <childnode refid="1696" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1695">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="1697">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="1698">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="1692">
        <label>vt::runtime::component::Component&lt; EpochManip &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1693" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1701">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="1702" relation="public-inheritance">
        </childnode>
        <childnode refid="1705" relation="public-inheritance">
        </childnode>
        <childnode refid="1706" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1699">
        <label>vt::epoch::EpochManip</label>
        <link refid="structvt_1_1epoch_1_1_epoch_manip"/>
        <childnode refid="1700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1704">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="1702">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="1703" relation="public-inheritance">
        </childnode>
        <childnode refid="1704" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1703">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="1705">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="1706">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="1700">
        <label>vt::runtime::component::Component&lt; EpochManip &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1701" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/epoch/epoch_manip.h" line="72" column="1" bodyfile="src/vt/epoch/epoch_manip.h" bodystart="72" bodyend="257"/>
    <listofallmembers>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1ab1fe66501b6b83b07fd4188fc6a8a4fe" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>CapturedContextType</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1aa61d47033545df147c01036211c4cabe" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>category</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ab954824329584814bb652ea810cd62e3" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1a94c1d493860adff6ae69c5eb31bb3f" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1ac9c39c6eafc72a1a240ed67ea12b3e66" prot="protected" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>component_id_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ad95ea698535524d0f82c5da9beaaaf37" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>DiagnosticBasePtrType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695" prot="public" virt="virtual"><scope>vt::epoch::EpochManip</scope><name>dumpState</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a8dd8d684917d7b17f726512920955b43" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>EpochManip</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a43eeed44aa64c77f5491abb4f5a39e9a" prot="public" virt="virtual"><scope>vt::epoch::EpochManip</scope><name>fatalError</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a098e362de01af6054e5491fba671a959" prot="public" virt="virtual"><scope>vt::epoch::EpochManip</scope><name>finalize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a1d6951af40ad0b4020860c0b21b1a85c" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>foreachDiagnostic</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a6e96213acd8e0a160a4d4b9ab6a64eaf" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>generateEpoch</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1ac1a8c8f8d1799c05520a3bb6d2fcf6bf" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>generateRootedEpoch</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1ac1f50556319696bba8695a013f49abcf" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>getArchetype</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1a45ab90398777ffdbb2ad5b62fe183d99" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>getComponentID</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a9c1f4174ac87bb6ae0ec186a08adbbbb" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>getDiagnosticsFootprint</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1aee02e9847be133585b586be614091f6e" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>getNextCollectiveEpoch</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a3260eeacd7e688f4e81e779df41ce912" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>getNextRootedEpoch</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a3c7bf7467b6e1c95a25f19bbcbdd9f17" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>getNextRootedEpoch</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a2ed00df099793bd9f9452203ba8ba571" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>getTerminatedWindow</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a7f07384d294e59796add9ce6be2d6410" prot="public" virt="virtual"><scope>vt::epoch::EpochManip</scope><name>initialize</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a00210a34334fb86984cfbd08bae74929" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>isRooted</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a3dcf9b105619194fddde4e26a638b856" prot="public" virt="virtual"><scope>vt::epoch::EpochManip</scope><name>name</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a7120f73ef583ab8f061334fc0bc519c3" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>node</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a5a15bd0369a9d3765a6c70249bada96f" prot="public" virt="virtual"><scope>vt::epoch::EpochManip</scope><name>pollable</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a4e64b5a12ffc1874065aa8b09e6309a9" prot="public" virt="virtual"><scope>vt::epoch::EpochManip</scope><name>preDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1dab11d9eb5bed8dfd5a3bb8fdf67f5a" prot="public" virt="virtual"><scope>vt::epoch::EpochManip</scope><name>progress</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1af9d694f9d62d973a2cde6e52c55bef14" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>reducer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa2cd54632710e7cdf1b20dfb676c752c" prot="protected" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>registerCounter</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1abb1ee7f09f05c143dbdfd3346f6cdcba" prot="protected" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>registerCounterT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ab71509224f5716107ef5c781ba5ff487" prot="protected" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>registerDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a20417bbb4fe4c4d7648aef3a2699b787" prot="protected" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>registerGauge</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa220905292aeb726254d3dff2e672b00" prot="protected" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>registerGaugeT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a5c6035a56d54cc3de270efedad3f026e" prot="protected" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>registerTimer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a328ecca78c6aa309bb764f3dde083c3e" prot="protected" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>registerTimerT</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1ac34685702f19dde2f5bc25fcb43ec038" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>seq</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a5a502343c972a5efc975943ce8510d1d" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>serialize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1abe85836f57c42a695fdc292cd78b10cb" prot="public" virt="non-virtual" ambiguityscope="Component&lt; EpochManip &gt;::"><scope>vt::epoch::EpochManip</scope><name>serialize</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a5ef6f747225cf046cff1fb39945fa547" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>setCategory</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1aae48ba1aafb105551df363ffcb578881" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>setIsRooted</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1a5c4c075234fc7c263b0eabf09e85ef05" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>setNode</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1af1fb573c17b2bd4e6a789702cf0392dc" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>setSeq</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aad3974307ab3b2e1df389a91310f68c2" prot="public" virt="virtual"><scope>vt::epoch::EpochManip</scope><name>startup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ac969a635e579cf7be3af696f500bf260" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>staticInit</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1aa686e6a82ce06391ff223eb8ccd9fb7a" prot="private" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>terminated_collective_epochs_</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_manip_1aae06cc3b0a36114406ff318045d1c3fa" prot="private" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>terminated_epochs_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a2bcd1016fcdb6395844d4fd15d84a570" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>UnitType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a97b0e8ff394c8aa04035ff15165eb087" prot="protected" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>updateDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a75e737294bb63e1898d9ac4515f0cf63" prot="public" virt="non-virtual"><scope>vt::epoch::EpochManip</scope><name>UpdateType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a9190b5cb499f9cfdacc1e0bd98a1805a" prot="public" virt="virtual"><scope>vt::epoch::EpochManip</scope><name>~BaseComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
