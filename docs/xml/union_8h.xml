<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="union_8h" kind="file" language="C++">
    <compoundname>union.h</compoundname>
    <includes refid="config_8h" local="yes">vt/config.h</includes>
    <includedby refid="reduce__scope_8h" local="yes">src/vt/collective/reduce/reduce_scope.h</includedby>
    <incdepgraph>
      <node id="240127">
        <label>list</label>
      </node>
      <node id="240079">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
        <childnode refid="240080" relation="include">
        </childnode>
      </node>
      <node id="240116">
        <label>vt/runtime/component/component_pack.h</label>
        <link refid="component__pack_8h"/>
        <childnode refid="240117" relation="include">
        </childnode>
        <childnode refid="240126" relation="include">
        </childnode>
        <childnode refid="240127" relation="include">
        </childnode>
        <childnode refid="240128" relation="include">
        </childnode>
        <childnode refid="240119" relation="include">
        </childnode>
        <childnode refid="240114" relation="include">
        </childnode>
        <childnode refid="240129" relation="include">
        </childnode>
      </node>
      <node id="240126">
        <label>vt/runtime/component/movable_fn.h</label>
        <link refid="movable__fn_8h"/>
      </node>
      <node id="240090">
        <label>functional</label>
      </node>
      <node id="240120">
        <label>vt/runtime/component/component_dep.h</label>
        <link refid="component__dep_8h"/>
        <childnode refid="240118" relation="include">
        </childnode>
      </node>
      <node id="240098">
        <label>fmt/format.h</label>
      </node>
      <node id="240081">
        <label>vt/configs/features/features_metafeatures.h</label>
        <link refid="features__metafeatures_8h"/>
        <childnode refid="240080" relation="include">
        </childnode>
      </node>
      <node id="240096">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="240085" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
      </node>
      <node id="240085">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="240086" relation="include">
        </childnode>
        <childnode refid="240087" relation="include">
        </childnode>
      </node>
      <node id="240078">
        <label>cstdint</label>
      </node>
      <node id="240073">
        <label>src/vt/utils/adt/union.h</label>
        <link refid="union_8h"/>
        <childnode refid="240074" relation="include">
        </childnode>
      </node>
      <node id="240125">
        <label>vt/runtime/component/progressable.h</label>
        <link refid="progressable_8h"/>
      </node>
      <node id="240124">
        <label>vt/runtime/component/bufferable.h</label>
        <link refid="bufferable_8h"/>
      </node>
      <node id="240136">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="240101" relation="include">
        </childnode>
        <childnode refid="240089" relation="include">
        </childnode>
        <childnode refid="240109" relation="include">
        </childnode>
        <childnode refid="240135" relation="include">
        </childnode>
        <childnode refid="240137" relation="include">
        </childnode>
        <childnode refid="240096" relation="include">
        </childnode>
        <childnode refid="240134" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
        <childnode refid="240106" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
        <childnode refid="240139" relation="include">
        </childnode>
        <childnode refid="240098" relation="include">
        </childnode>
      </node>
      <node id="240134">
        <label>cassert</label>
      </node>
      <node id="240110">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="240101" relation="include">
        </childnode>
        <childnode refid="240089" relation="include">
        </childnode>
        <childnode refid="240109" relation="include">
        </childnode>
        <childnode refid="240111" relation="include">
        </childnode>
        <childnode refid="240096" relation="include">
        </childnode>
        <childnode refid="240103" relation="include">
        </childnode>
        <childnode refid="240113" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
        <childnode refid="240106" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
        <childnode refid="240134" relation="include">
        </childnode>
        <childnode refid="240098" relation="include">
        </childnode>
      </node>
      <node id="240093">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="240094" relation="include">
        </childnode>
      </node>
      <node id="240101">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="240088" relation="include">
        </childnode>
        <childnode refid="240102" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
      </node>
      <node id="240094">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
      </node>
      <node id="240099">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="240100" relation="include">
        </childnode>
        <childnode refid="240104" relation="include">
        </childnode>
        <childnode refid="240108" relation="include">
        </childnode>
      </node>
      <node id="240086">
        <label>string</label>
      </node>
      <node id="240122">
        <label>vt/runtime/component/base.h</label>
        <link refid="src_2vt_2runtime_2component_2base_8h"/>
        <childnode refid="240089" relation="include">
        </childnode>
        <childnode refid="240123" relation="include">
        </childnode>
        <childnode refid="240124" relation="include">
        </childnode>
        <childnode refid="240125" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
      </node>
      <node id="240137">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="240101" relation="include">
        </childnode>
        <childnode refid="240077" relation="include">
        </childnode>
        <childnode refid="240112" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
        <childnode refid="240106" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
        <childnode refid="240087" relation="include">
        </childnode>
        <childnode refid="240138" relation="include">
        </childnode>
      </node>
      <node id="240138">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="240137" relation="include">
        </childnode>
        <childnode refid="240096" relation="include">
        </childnode>
        <childnode refid="240112" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
        <childnode refid="240106" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
        <childnode refid="240087" relation="include">
        </childnode>
        <childnode refid="240098" relation="include">
        </childnode>
      </node>
      <node id="240119">
        <label>unordered_set</label>
      </node>
      <node id="240082">
        <label>vt/configs/features/features_enableif.h</label>
        <link refid="features__enableif_8h"/>
        <childnode refid="240079" relation="include">
        </childnode>
        <childnode refid="240080" relation="include">
        </childnode>
      </node>
      <node id="240077">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="240078" relation="include">
        </childnode>
        <childnode refid="240079" relation="include">
        </childnode>
        <childnode refid="240080" relation="include">
        </childnode>
        <childnode refid="240081" relation="include">
        </childnode>
        <childnode refid="240082" relation="include">
        </childnode>
        <childnode refid="240083" relation="include">
        </childnode>
      </node>
      <node id="240095">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="240075" relation="include">
        </childnode>
        <childnode refid="240089" relation="include">
        </childnode>
        <childnode refid="240091" relation="include">
        </childnode>
      </node>
      <node id="240121">
        <label>vt/runtime/component/component_traits.h</label>
        <link refid="component__traits_8h"/>
        <childnode refid="240106" relation="include">
        </childnode>
      </node>
      <node id="240118">
        <label>vt/runtime/component/component_registry.h</label>
        <link refid="component__registry_8h"/>
        <childnode refid="240089" relation="include">
        </childnode>
        <childnode refid="240087" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
        <childnode refid="240119" relation="include">
        </childnode>
      </node>
      <node id="240075">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="240076" relation="include">
        </childnode>
        <childnode refid="240077" relation="include">
        </childnode>
        <childnode refid="240084" relation="include">
        </childnode>
      </node>
      <node id="240102">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="240086" relation="include">
        </childnode>
      </node>
      <node id="240089">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="240078" relation="include">
        </childnode>
        <childnode refid="240090" relation="include">
        </childnode>
      </node>
      <node id="240105">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="240088" relation="include">
        </childnode>
        <childnode refid="240077" relation="include">
        </childnode>
        <childnode refid="240101" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
        <childnode refid="240106" relation="include">
        </childnode>
        <childnode refid="240107" relation="include">
        </childnode>
      </node>
      <node id="240097">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
        <childnode refid="240092" relation="include">
        </childnode>
      </node>
      <node id="240100">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="240077" relation="include">
        </childnode>
        <childnode refid="240089" relation="include">
        </childnode>
        <childnode refid="240101" relation="include">
        </childnode>
        <childnode refid="240103" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
        <childnode refid="240098" relation="include">
        </childnode>
      </node>
      <node id="240092">
        <label>tuple</label>
      </node>
      <node id="240133">
        <label>vt/utils/tls/tls.impl.h</label>
        <link refid="tls_8impl_8h"/>
        <childnode refid="240074" relation="include">
        </childnode>
      </node>
      <node id="240084">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="240085" relation="include">
        </childnode>
        <childnode refid="240088" relation="include">
        </childnode>
        <childnode refid="240077" relation="include">
        </childnode>
        <childnode refid="240096" relation="include">
        </childnode>
        <childnode refid="240097" relation="include">
        </childnode>
        <childnode refid="240098" relation="include">
        </childnode>
      </node>
      <node id="240087">
        <label>vector</label>
      </node>
      <node id="240113">
        <label>vt/context/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="240114" relation="include">
        </childnode>
        <childnode refid="240115" relation="include">
        </childnode>
        <childnode refid="240074" relation="include">
        </childnode>
        <childnode refid="240116" relation="include">
        </childnode>
        <childnode refid="240130" relation="include">
        </childnode>
        <childnode refid="240131" relation="include">
        </childnode>
      </node>
      <node id="240139">
        <label>sstream</label>
      </node>
      <node id="240076">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="240111">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="240112" relation="include">
        </childnode>
        <childnode refid="240087" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
      </node>
      <node id="240080">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
      </node>
      <node id="240112">
        <label>cstdlib</label>
      </node>
      <node id="240104">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="240077" relation="include">
        </childnode>
        <childnode refid="240101" relation="include">
        </childnode>
        <childnode refid="240105" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
        <childnode refid="240106" relation="include">
        </childnode>
      </node>
      <node id="240130">
        <label>vt/context/context_attorney_fwd.h</label>
        <link refid="context__attorney__fwd_8h"/>
        <childnode refid="240074" relation="include">
        </childnode>
      </node>
      <node id="240128">
        <label>unordered_map</label>
      </node>
      <node id="240088">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="240089" relation="include">
        </childnode>
        <childnode refid="240091" relation="include">
        </childnode>
        <childnode refid="240093" relation="include">
        </childnode>
        <childnode refid="240095" relation="include">
        </childnode>
      </node>
      <node id="240109">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="240089" relation="include">
        </childnode>
        <childnode refid="240101" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
        <childnode refid="240106" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
        <childnode refid="240110" relation="include">
        </childnode>
      </node>
      <node id="240115">
        <label>mpi.h</label>
      </node>
      <node id="240131">
        <label>vt/utils/tls/tls.h</label>
        <link refid="tls_8h"/>
        <childnode refid="240074" relation="include">
        </childnode>
        <childnode refid="240132" relation="include">
        </childnode>
        <childnode refid="240133" relation="include">
        </childnode>
      </node>
      <node id="240129">
        <label>vt/runtime/component/component_pack.impl.h</label>
        <link refid="component__pack_8impl_8h"/>
        <childnode refid="240116" relation="include">
        </childnode>
      </node>
      <node id="240091">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="240075" relation="include">
        </childnode>
        <childnode refid="240089" relation="include">
        </childnode>
        <childnode refid="240078" relation="include">
        </childnode>
        <childnode refid="240090" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
      </node>
      <node id="240123">
        <label>vt/runtime/component/diagnostic.h</label>
        <link refid="diagnostic_8h"/>
      </node>
      <node id="240106">
        <label>type_traits</label>
      </node>
      <node id="240103">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="240088" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
        <childnode refid="240098" relation="include">
        </childnode>
      </node>
      <node id="240132">
        <label>vt/utils/tls/null_tls.h</label>
        <link refid="null__tls_8h"/>
        <childnode refid="240074" relation="include">
        </childnode>
      </node>
      <node id="240074">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="240075" relation="include">
        </childnode>
        <childnode refid="240088" relation="include">
        </childnode>
        <childnode refid="240099" relation="include">
        </childnode>
      </node>
      <node id="240117">
        <label>vt/runtime/component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="240104" relation="include">
        </childnode>
        <childnode refid="240118" relation="include">
        </childnode>
        <childnode refid="240120" relation="include">
        </childnode>
        <childnode refid="240121" relation="include">
        </childnode>
        <childnode refid="240122" relation="include">
        </childnode>
        <childnode refid="240114" relation="include">
        </childnode>
      </node>
      <node id="240083">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="240114">
        <label>memory</label>
      </node>
      <node id="240108">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="240077" relation="include">
        </childnode>
        <childnode refid="240089" relation="include">
        </childnode>
        <childnode refid="240101" relation="include">
        </childnode>
        <childnode refid="240109" relation="include">
        </childnode>
        <childnode refid="240135" relation="include">
        </childnode>
        <childnode refid="240137" relation="include">
        </childnode>
        <childnode refid="240134" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
        <childnode refid="240106" relation="include">
        </childnode>
      </node>
      <node id="240135">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="240101" relation="include">
        </childnode>
        <childnode refid="240089" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
        <childnode refid="240136" relation="include">
        </childnode>
      </node>
      <node id="240107">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="240088" relation="include">
        </childnode>
        <childnode refid="240077" relation="include">
        </childnode>
        <childnode refid="240101" relation="include">
        </childnode>
        <childnode refid="240105" relation="include">
        </childnode>
        <childnode refid="240103" relation="include">
        </childnode>
        <childnode refid="240086" relation="include">
        </childnode>
        <childnode refid="240092" relation="include">
        </childnode>
        <childnode refid="240106" relation="include">
        </childnode>
        <childnode refid="240098" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="240234">
        <label>src/vt/group/rooted/group_info_rooted.cc</label>
        <link refid="group__info__rooted_8cc"/>
      </node>
      <node id="240273">
        <label>src/vt/pipe/callback/anon/callback_anon_tl.cc</label>
        <link refid="callback__anon__tl_8cc"/>
      </node>
      <node id="240296">
        <label>src/vt/vrt/collection/balance/hierarchicallb/hierlb_msgs.h</label>
        <link refid="hierlb__msgs_8h"/>
        <childnode refid="240171" relation="include">
        </childnode>
        <childnode refid="240170" relation="include">
        </childnode>
      </node>
      <node id="240294">
        <label>src/vt/trace/file_spec/spec.h</label>
        <link refid="spec_8h"/>
        <childnode refid="240216" relation="include">
        </childnode>
        <childnode refid="240160" relation="include">
        </childnode>
      </node>
      <node id="240293">
        <label>src/vt/vrt/collection/balance/lb_invoke/invoke_msg.h</label>
        <link refid="invoke__msg_8h"/>
        <childnode refid="240172" relation="include">
        </childnode>
      </node>
      <node id="240168">
        <label>src/vt/vrt/collection/balance/greedylb/greedylb.h</label>
        <link refid="greedylb_8h"/>
        <childnode refid="240169" relation="include">
        </childnode>
        <childnode refid="240167" relation="include">
        </childnode>
      </node>
      <node id="240241">
        <label>src/vt/vrt/collection/balance/phase_msg.h</label>
        <link refid="phase__msg_8h"/>
        <childnode refid="240242" relation="include">
        </childnode>
        <childnode refid="240173" relation="include">
        </childnode>
        <childnode refid="240245" relation="include">
        </childnode>
        <childnode refid="240186" relation="include">
        </childnode>
      </node>
      <node id="240303">
        <label>src/vt/vrt/collection/insert/insert_finished.h</label>
        <link refid="insert__finished_8h"/>
        <childnode refid="240191" relation="include">
        </childnode>
        <childnode refid="240304" relation="include">
        </childnode>
      </node>
      <node id="240289">
        <label>src/vt/collective/reduce/operators/default_msg.h</label>
        <link refid="default__msg_8h"/>
        <childnode refid="240147" relation="include">
        </childnode>
        <childnode refid="240290" relation="include">
        </childnode>
        <childnode refid="240143" relation="include">
        </childnode>
        <childnode refid="240292" relation="include">
        </childnode>
        <childnode refid="240210" relation="include">
        </childnode>
        <childnode refid="240294" relation="include">
        </childnode>
        <childnode refid="240295" relation="include">
        </childnode>
        <childnode refid="240296" relation="include">
        </childnode>
      </node>
      <node id="240239">
        <label>src/vt/vrt/collection/balance/baselb/baselb_msgs.h</label>
        <link refid="baselb__msgs_8h"/>
        <childnode refid="240163" relation="include">
        </childnode>
        <childnode refid="240179" relation="include">
        </childnode>
        <childnode refid="240240" relation="include">
        </childnode>
      </node>
      <node id="240301">
        <label>src/vt/vrt/collection/balance/statsmaplb/statsmaplb.h</label>
        <link refid="statsmaplb_8h"/>
        <childnode refid="240167" relation="include">
        </childnode>
        <childnode refid="240203" relation="include">
        </childnode>
      </node>
      <node id="240173">
        <label>src/vt/vrt/collection/balance/elm_stats.impl.h</label>
        <link refid="elm__stats_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240299">
        <label>src/vt/collective/reduce/reduce_state_holder.cc</label>
        <link refid="reduce__state__holder_8cc"/>
      </node>
      <node id="240212">
        <label>src/vt/rdmahandle/handle.impl.h</label>
        <link refid="handle_8impl_8h"/>
        <childnode refid="240213" relation="include">
        </childnode>
      </node>
      <node id="240183">
        <label>src/vt/vrt/collection/collection_headers.h</label>
        <link refid="collection__headers_8h"/>
        <childnode refid="240184" relation="include">
        </childnode>
        <childnode refid="240159" relation="include">
        </childnode>
        <childnode refid="240161" relation="include">
        </childnode>
      </node>
      <node id="240262">
        <label>src/vt/vrt/collection/types/type_aliases.h</label>
        <link refid="type__aliases_8h"/>
        <childnode refid="240251" relation="include">
        </childnode>
      </node>
      <node id="240216">
        <label>src/vt/trace/file_spec/spec.cc</label>
        <link refid="spec_8cc"/>
      </node>
      <node id="240302">
        <label>src/vt/vrt/collection/reducable/reducable.h</label>
        <link refid="reducable_8h"/>
        <childnode refid="240303" relation="include">
        </childnode>
        <childnode refid="240304" relation="include">
        </childnode>
        <childnode refid="240194" relation="include">
        </childnode>
      </node>
      <node id="240261">
        <label>src/vt/vrt/collection/types/static_insertable.h</label>
        <link refid="static__insertable_8h"/>
        <childnode refid="240251" relation="include">
        </childnode>
        <childnode refid="240262" relation="include">
        </childnode>
        <childnode refid="240263" relation="include">
        </childnode>
      </node>
      <node id="240147">
        <label>src/vt/collective/collective_alg.h</label>
        <link refid="collective__alg_8h"/>
        <childnode refid="240148" relation="include">
        </childnode>
        <childnode refid="240149" relation="include">
        </childnode>
        <childnode refid="240150" relation="include">
        </childnode>
        <childnode refid="240151" relation="include">
        </childnode>
        <childnode refid="240146" relation="include">
        </childnode>
        <childnode refid="240152" relation="include">
        </childnode>
        <childnode refid="240153" relation="include">
        </childnode>
        <childnode refid="240154" relation="include">
        </childnode>
        <childnode refid="240155" relation="include">
        </childnode>
        <childnode refid="240156" relation="include">
        </childnode>
        <childnode refid="240207" relation="include">
        </childnode>
        <childnode refid="240218" relation="include">
        </childnode>
        <childnode refid="240219" relation="include">
        </childnode>
        <childnode refid="240209" relation="include">
        </childnode>
        <childnode refid="240220" relation="include">
        </childnode>
        <childnode refid="240159" relation="include">
        </childnode>
        <childnode refid="240221" relation="include">
        </childnode>
        <childnode refid="240160" relation="include">
        </childnode>
        <childnode refid="240161" relation="include">
        </childnode>
        <childnode refid="240222" relation="include">
        </childnode>
        <childnode refid="240164" relation="include">
        </childnode>
        <childnode refid="240171" relation="include">
        </childnode>
        <childnode refid="240205" relation="include">
        </childnode>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240304">
        <label>src/vt/vrt/collection/proxy_traits/proxy_col_traits.h</label>
        <link refid="proxy__col__traits_8h"/>
        <childnode refid="240268" relation="include">
        </childnode>
        <childnode refid="240285" relation="include">
        </childnode>
        <childnode refid="240305" relation="include">
        </childnode>
      </node>
      <node id="240217">
        <label>src/vt/vrt/collection/balance/stats_restart_reader.cc</label>
        <link refid="stats__restart__reader_8cc"/>
      </node>
      <node id="240277">
        <label>src/vt/pipe/pipe_manager_base.impl.h</label>
        <link refid="pipe__manager__base_8impl_8h"/>
        <childnode refid="240272" relation="include">
        </childnode>
      </node>
      <node id="240259">
        <label>src/vt/vrt/collection/holders/holder.impl.h</label>
        <link refid="vrt_2collection_2holders_2holder_8impl_8h"/>
        <childnode refid="240254" relation="include">
        </childnode>
      </node>
      <node id="240282">
        <label>src/vt/vrt/collection/destroy/destroy_handlers.h</label>
        <link refid="destroy__handlers_8h"/>
        <childnode refid="240283" relation="include">
        </childnode>
        <childnode refid="240186" relation="include">
        </childnode>
      </node>
      <node id="240245">
        <label>src/vt/vrt/collection/balance/node_stats.h</label>
        <link refid="node__stats_8h"/>
        <childnode refid="240164" relation="include">
        </childnode>
        <childnode refid="240167" relation="include">
        </childnode>
        <childnode refid="240246" relation="include">
        </childnode>
        <childnode refid="240179" relation="include">
        </childnode>
        <childnode refid="240203" relation="include">
        </childnode>
        <childnode refid="240186" relation="include">
        </childnode>
      </node>
      <node id="240187">
        <label>src/vt/vrt/collection/constructor/coll_constructors_deref.impl.h</label>
        <link refid="coll__constructors__deref_8impl_8h"/>
      </node>
      <node id="240198">
        <label>src/vt/vrt/collection/types/insertable.impl.h</label>
        <link refid="types_2insertable_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240188">
        <label>src/vt/vrt/collection/destroy/destroyable.impl.h</label>
        <link refid="destroyable_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240166">
        <label>src/vt/vrt/collection/balance/gossiplb/gossiplb.h</label>
        <link refid="gossiplb_8h"/>
        <childnode refid="240165" relation="include">
        </childnode>
        <childnode refid="240167" relation="include">
        </childnode>
      </node>
      <node id="240140">
        <label>src/vt/utils/adt/union.h</label>
        <link refid="union_8h"/>
        <childnode refid="240141" relation="include">
        </childnode>
      </node>
      <node id="240228">
        <label>src/vt/group/group_info.h</label>
        <link refid="group__info_8h"/>
        <childnode refid="240227" relation="include">
        </childnode>
        <childnode refid="240229" relation="include">
        </childnode>
        <childnode refid="240154" relation="include">
        </childnode>
        <childnode refid="240230" relation="include">
        </childnode>
      </node>
      <node id="240150">
        <label>src/vt/collective/collective_scope.cc</label>
        <link refid="collective__scope_8cc"/>
      </node>
      <node id="240174">
        <label>src/vt/vrt/collection/manager.h</label>
        <link refid="vrt_2collection_2manager_8h"/>
        <childnode refid="240175" relation="include">
        </childnode>
        <childnode refid="240176" relation="include">
        </childnode>
        <childnode refid="240177" relation="include">
        </childnode>
        <childnode refid="240178" relation="include">
        </childnode>
        <childnode refid="240173" relation="include">
        </childnode>
        <childnode refid="240169" relation="include">
        </childnode>
        <childnode refid="240171" relation="include">
        </childnode>
        <childnode refid="240179" relation="include">
        </childnode>
        <childnode refid="240180" relation="include">
        </childnode>
        <childnode refid="240181" relation="include">
        </childnode>
        <childnode refid="240182" relation="include">
        </childnode>
        <childnode refid="240183" relation="include">
        </childnode>
        <childnode refid="240185" relation="include">
        </childnode>
        <childnode refid="240187" relation="include">
        </childnode>
        <childnode refid="240188" relation="include">
        </childnode>
        <childnode refid="240189" relation="include">
        </childnode>
        <childnode refid="240190" relation="include">
        </childnode>
        <childnode refid="240191" relation="include">
        </childnode>
        <childnode refid="240192" relation="include">
        </childnode>
        <childnode refid="240193" relation="include">
        </childnode>
        <childnode refid="240186" relation="include">
        </childnode>
        <childnode refid="240194" relation="include">
        </childnode>
        <childnode refid="240195" relation="include">
        </childnode>
        <childnode refid="240196" relation="include">
        </childnode>
        <childnode refid="240197" relation="include">
        </childnode>
        <childnode refid="240198" relation="include">
        </childnode>
        <childnode refid="240199" relation="include">
        </childnode>
      </node>
      <node id="240285">
        <label>src/vt/vrt/proxy/collection_proxy.impl.h</label>
        <link refid="collection__proxy_8impl_8h"/>
        <childnode refid="240268" relation="include">
        </childnode>
      </node>
      <node id="240224">
        <label>src/vt/group/collective/group_collective.h</label>
        <link refid="group__collective_8h"/>
        <childnode refid="240153" relation="include">
        </childnode>
        <childnode refid="240225" relation="include">
        </childnode>
        <childnode refid="240228" relation="include">
        </childnode>
      </node>
      <node id="240178">
        <label>src/vt/scheduler/scheduler.cc</label>
        <link refid="scheduler_8cc"/>
      </node>
      <node id="240274">
        <label>src/vt/pipe/pipe_headers.h</label>
        <link refid="pipe__headers_8h"/>
        <childnode refid="240153" relation="include">
        </childnode>
        <childnode refid="240219" relation="include">
        </childnode>
        <childnode refid="240159" relation="include">
        </childnode>
        <childnode refid="240221" relation="include">
        </childnode>
        <childnode refid="240161" relation="include">
        </childnode>
        <childnode refid="240186" relation="include">
        </childnode>
      </node>
      <node id="240184">
        <label>src/vt/runtime/runtime.cc</label>
        <link refid="runtime_8cc"/>
      </node>
      <node id="240214">
        <label>src/vt/rdmahandle/manager.impl.h</label>
        <link refid="rdmahandle_2manager_8impl_8h"/>
        <childnode refid="240213" relation="include">
        </childnode>
      </node>
      <node id="240266">
        <label>src/vt/vrt/collection/types/static_size.impl.h</label>
        <link refid="static__size_8impl_8h"/>
        <childnode refid="240265" relation="include">
        </childnode>
      </node>
      <node id="240237">
        <label>src/vt/lb/instrumentation/centralized/collect_msg.h</label>
        <link refid="collect__msg_8h"/>
        <childnode refid="240155" relation="include">
        </childnode>
        <childnode refid="240238" relation="include">
        </childnode>
      </node>
      <node id="240227">
        <label>src/vt/group/group_info.cc</label>
        <link refid="group__info_8cc"/>
      </node>
      <node id="240247">
        <label>src/vt/vrt/collection/types/indexable.h</label>
        <link refid="indexable_8h"/>
        <childnode refid="240248" relation="include">
        </childnode>
        <childnode refid="240197" relation="include">
        </childnode>
      </node>
      <node id="240195">
        <label>src/vt/vrt/collection/send/sendable.impl.h</label>
        <link refid="sendable_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240249">
        <label>src/vt/vrt/collection/types/base.impl.h</label>
        <link refid="base_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240181">
        <label>src/vt/vrt/collection/balance/rotatelb/rotatelb.cc</label>
        <link refid="rotatelb_8cc"/>
      </node>
      <node id="240263">
        <label>src/vt/vrt/collection/types/type_aliases.impl.h</label>
        <link refid="type__aliases_8impl_8h"/>
        <childnode refid="240262" relation="include">
        </childnode>
      </node>
      <node id="240286">
        <label>src/vt/vrt/collection/balance/stats_msg.h</label>
        <link refid="stats__msg_8h"/>
        <childnode refid="240163" relation="include">
        </childnode>
        <childnode refid="240242" relation="include">
        </childnode>
        <childnode refid="240173" relation="include">
        </childnode>
        <childnode refid="240169" relation="include">
        </childnode>
        <childnode refid="240171" relation="include">
        </childnode>
        <childnode refid="240245" relation="include">
        </childnode>
      </node>
      <node id="240172">
        <label>src/vt/vrt/collection/balance/lb_invoke/lb_manager.h</label>
        <link refid="lb__manager_8h"/>
        <childnode refid="240164" relation="include">
        </childnode>
        <childnode refid="240173" relation="include">
        </childnode>
        <childnode refid="240167" relation="include">
        </childnode>
        <childnode refid="240193" relation="include">
        </childnode>
      </node>
      <node id="240141">
        <label>src/vt/collective/reduce/reduce_scope.h</label>
        <link refid="reduce__scope_8h"/>
        <childnode refid="240142" relation="include">
        </childnode>
        <childnode refid="240287" relation="include">
        </childnode>
        <childnode refid="240288" relation="include">
        </childnode>
        <childnode refid="240298" relation="include">
        </childnode>
        <childnode refid="240300" relation="include">
        </childnode>
        <childnode refid="240302" relation="include">
        </childnode>
      </node>
      <node id="240233">
        <label>src/vt/group/group_manager_active_attorney.cc</label>
        <link refid="group__manager__active__attorney_8cc"/>
      </node>
      <node id="240165">
        <label>src/vt/vrt/collection/balance/gossiplb/gossiplb.cc</label>
        <link refid="gossiplb_8cc"/>
      </node>
      <node id="240213">
        <label>src/vt/rdmahandle/manager.h</label>
        <link refid="rdmahandle_2manager_8h"/>
        <childnode refid="240207" relation="include">
        </childnode>
        <childnode refid="240212" relation="include">
        </childnode>
        <childnode refid="240209" relation="include">
        </childnode>
        <childnode refid="240177" relation="include">
        </childnode>
        <childnode refid="240214" relation="include">
        </childnode>
        <childnode refid="240184" relation="include">
        </childnode>
        <childnode refid="240161" relation="include">
        </childnode>
        <childnode refid="240215" relation="include">
        </childnode>
      </node>
      <node id="240305">
        <label>src/vt/vrt/proxy/collection_proxy_untyped.h</label>
        <link refid="collection__proxy__untyped_8h"/>
        <childnode refid="240306" relation="include">
        </childnode>
        <childnode refid="240307" relation="include">
        </childnode>
      </node>
      <node id="240145">
        <label>src/vt/collective/reduce/reduce_manager.cc</label>
        <link refid="reduce__manager_8cc"/>
      </node>
      <node id="240254">
        <label>src/vt/vrt/collection/holders/holder.h</label>
        <link refid="vrt_2collection_2holders_2holder_8h"/>
        <childnode refid="240255" relation="include">
        </childnode>
        <childnode refid="240259" relation="include">
        </childnode>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240148">
        <label>src/vt/collective/barrier/barrier.cc</label>
        <link refid="barrier_8cc"/>
      </node>
      <node id="240154">
        <label>src/vt/group/group_manager.cc</label>
        <link refid="group__manager_8cc"/>
      </node>
      <node id="240222">
        <label>src/vt/transport_core.h</label>
        <link refid="transport__core_8h"/>
        <childnode refid="240223" relation="include">
        </childnode>
      </node>
      <node id="240290">
        <label>src/vt/collective/reduce/operators/default_op.h</label>
        <link refid="default__op_8h"/>
        <childnode refid="240289" relation="include">
        </childnode>
        <childnode refid="240291" relation="include">
        </childnode>
        <childnode refid="240143" relation="include">
        </childnode>
        <childnode refid="240207" relation="include">
        </childnode>
      </node>
      <node id="240295">
        <label>src/vt/vrt/collection/balance/greedylb/greedylb_msgs.h</label>
        <link refid="greedylb__msgs_8h"/>
        <childnode refid="240169" relation="include">
        </childnode>
        <childnode refid="240168" relation="include">
        </childnode>
      </node>
      <node id="240176">
        <label>src/vt/pipe/callback/proxy_send/callback_proxy_send.impl.h</label>
        <link refid="callback__proxy__send_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240207">
        <label>src/vt/objgroup/proxy/proxy_objgroup.impl.h</label>
        <link refid="proxy__objgroup_8impl_8h"/>
        <childnode refid="240157" relation="include">
        </childnode>
      </node>
      <node id="240235">
        <label>src/vt/pipe/pipe_manager.cc</label>
        <link refid="pipe__manager_8cc"/>
      </node>
      <node id="240191">
        <label>src/vt/vrt/collection/insert/insert_finished.impl.h</label>
        <link refid="insert__finished_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240194">
        <label>src/vt/vrt/collection/reducable/reducable.impl.h</label>
        <link refid="reducable_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240192">
        <label>src/vt/vrt/collection/insert/insertable.impl.h</label>
        <link refid="insert_2insertable_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240185">
        <label>src/vt/vrt/collection/constructor/coll_constructors_deref.h</label>
        <link refid="coll__constructors__deref_8h"/>
        <childnode refid="240186" relation="include">
        </childnode>
      </node>
      <node id="240152">
        <label>src/vt/collective/scatter/scatter.cc</label>
        <link refid="scatter_8cc"/>
      </node>
      <node id="240258">
        <label>src/vt/vrt/collection/holders/entire_holder.impl.h</label>
        <link refid="entire__holder_8impl_8h"/>
        <childnode refid="240257" relation="include">
        </childnode>
      </node>
      <node id="240281">
        <label>src/vt/vrt/collection/destroy/destroy_msg.h</label>
        <link refid="destroy__msg_8h"/>
        <childnode refid="240282" relation="include">
        </childnode>
        <childnode refid="240283" relation="include">
        </childnode>
        <childnode refid="240186" relation="include">
        </childnode>
      </node>
      <node id="240242">
        <label>src/vt/vrt/collection/balance/elm_stats.h</label>
        <link refid="elm__stats_8h"/>
        <childnode refid="240243" relation="include">
        </childnode>
        <childnode refid="240173" relation="include">
        </childnode>
        <childnode refid="240244" relation="include">
        </childnode>
        <childnode refid="240268" relation="include">
        </childnode>
      </node>
      <node id="240219">
        <label>src/vt/rdma/rdma.cc</label>
        <link refid="rdma_8cc"/>
      </node>
      <node id="240143">
        <label>src/vt/collective/reduce/reduce.h</label>
        <link refid="reduce_8h"/>
        <childnode refid="240144" relation="include">
        </childnode>
        <childnode refid="240145" relation="include">
        </childnode>
        <childnode refid="240146" relation="include">
        </childnode>
        <childnode refid="240224" relation="include">
        </childnode>
        <childnode refid="240236" relation="include">
        </childnode>
        <childnode refid="240225" relation="include">
        </childnode>
        <childnode refid="240231" relation="include">
        </childnode>
        <childnode refid="240237" relation="include">
        </childnode>
        <childnode refid="240220" relation="include">
        </childnode>
        <childnode refid="240164" relation="include">
        </childnode>
        <childnode refid="240239" relation="include">
        </childnode>
        <childnode refid="240169" relation="include">
        </childnode>
        <childnode refid="240171" relation="include">
        </childnode>
        <childnode refid="240241" relation="include">
        </childnode>
        <childnode refid="240286" relation="include">
        </childnode>
        <childnode refid="240260" relation="include">
        </childnode>
      </node>
      <node id="240146">
        <label>src/vt/collective/reduce/reduce_manager.impl.h</label>
        <link refid="reduce__manager_8impl_8h"/>
        <childnode refid="240147" relation="include">
        </childnode>
      </node>
      <node id="240246">
        <label>src/vt/vrt/collection/balance/model/per_collection.cc</label>
        <link refid="per__collection_8cc"/>
      </node>
      <node id="240220">
        <label>src/vt/runtime/component/base.cc</label>
        <link refid="base_8cc"/>
      </node>
      <node id="240280">
        <label>src/vt/pipe/pipe_manager_tl.h</label>
        <link refid="pipe__manager__tl_8h"/>
        <childnode refid="240272" relation="include">
        </childnode>
        <childnode refid="240279" relation="include">
        </childnode>
      </node>
      <node id="240144">
        <label>src/vt/collective/reduce/reduce.cc</label>
        <link refid="reduce_8cc"/>
      </node>
      <node id="240186">
        <label>src/vt/vrt/collection/manager.impl.h</label>
        <link refid="vrt_2collection_2manager_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240196">
        <label>src/vt/vrt/collection/staged_token/token.impl.h</label>
        <link refid="token_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240159">
        <label>src/vt/runtime/runtime_get.cc</label>
        <link refid="runtime__get_8cc"/>
      </node>
      <node id="240153">
        <label>src/vt/group/collective/group_info_collective.cc</label>
        <link refid="group__info__collective_8cc"/>
      </node>
      <node id="240156">
        <label>src/vt/objgroup/manager.impl.h</label>
        <link refid="objgroup_2manager_8impl_8h"/>
        <childnode refid="240157" relation="include">
        </childnode>
      </node>
      <node id="240243">
        <label>src/vt/vrt/collection/balance/elm_stats.cc</label>
        <link refid="elm__stats_8cc"/>
      </node>
      <node id="240255">
        <label>src/vt/vrt/collection/holders/col_holder.h</label>
        <link refid="col__holder_8h"/>
        <childnode refid="240256" relation="include">
        </childnode>
        <childnode refid="240257" relation="include">
        </childnode>
      </node>
      <node id="240250">
        <label>src/vt/vrt/collection/types/dynamic.h</label>
        <link refid="dynamic_8h"/>
        <childnode refid="240251" relation="include">
        </childnode>
      </node>
      <node id="240240">
        <label>src/vt/vrt/collection/balance/stats_restart_reader.h</label>
        <link refid="stats__restart__reader_8h"/>
        <childnode refid="240184" relation="include">
        </childnode>
        <childnode refid="240167" relation="include">
        </childnode>
        <childnode refid="240217" relation="include">
        </childnode>
        <childnode refid="240203" relation="include">
        </childnode>
      </node>
      <node id="240169">
        <label>src/vt/vrt/collection/balance/greedylb/greedylb.cc</label>
        <link refid="greedylb_8cc"/>
      </node>
      <node id="240253">
        <label>src/vt/vrt/collection/holders/elm_holder.impl.h</label>
        <link refid="elm__holder_8impl_8h"/>
        <childnode refid="240252" relation="include">
        </childnode>
      </node>
      <node id="240189">
        <label>src/vt/vrt/collection/dispatch/dispatch.impl.h</label>
        <link refid="src_2vt_2vrt_2collection_2dispatch_2dispatch_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240275">
        <label>src/vt/pipe/pipe_manager.impl.h</label>
        <link refid="pipe__manager_8impl_8h"/>
        <childnode refid="240272" relation="include">
        </childnode>
      </node>
      <node id="240264">
        <label>src/vt/vrt/collection/types/static_insertable.impl.h</label>
        <link refid="static__insertable_8impl_8h"/>
        <childnode refid="240261" relation="include">
        </childnode>
      </node>
      <node id="240199">
        <label>src/vt/vrt/collection/types/migratable.cc</label>
        <link refid="migratable_8cc"/>
      </node>
      <node id="240292">
        <label>src/vt/collective/reduce/reduce_op.h</label>
        <link refid="reduce__op_8h"/>
        <childnode refid="240293" relation="include">
        </childnode>
      </node>
      <node id="240307">
        <label>src/vt/vrt/proxy/collection_proxy_untyped.impl.h</label>
        <link refid="collection__proxy__untyped_8impl_8h"/>
        <childnode refid="240305" relation="include">
        </childnode>
      </node>
      <node id="240278">
        <label>src/vt/pipe/pipe_manager_typed.impl.h</label>
        <link refid="pipe__manager__typed_8impl_8h"/>
        <childnode refid="240272" relation="include">
        </childnode>
      </node>
      <node id="240306">
        <label>src/vt/vrt/proxy/collection_proxy_untyped.cc</label>
        <link refid="collection__proxy__untyped_8cc"/>
      </node>
      <node id="240158">
        <label>src/vt/objgroup/headers.h</label>
        <link refid="objgroup_2headers_8h"/>
        <childnode refid="240159" relation="include">
        </childnode>
        <childnode refid="240160" relation="include">
        </childnode>
        <childnode refid="240161" relation="include">
        </childnode>
        <childnode refid="240163" relation="include">
        </childnode>
        <childnode refid="240171" relation="include">
        </childnode>
        <childnode refid="240170" relation="include">
        </childnode>
      </node>
      <node id="240209">
        <label>src/vt/rdmahandle/manager.cc</label>
        <link refid="rdmahandle_2manager_8cc"/>
      </node>
      <node id="240164">
        <label>src/vt/vrt/collection/balance/baselb/baselb.cc</label>
        <link refid="baselb_8cc"/>
      </node>
      <node id="240248">
        <label>src/vt/vrt/collection/types/base.h</label>
        <link refid="src_2vt_2vrt_2collection_2types_2base_8h"/>
        <childnode refid="240249" relation="include">
        </childnode>
        <childnode refid="240250" relation="include">
        </childnode>
        <childnode refid="240251" relation="include">
        </childnode>
        <childnode refid="240261" relation="include">
        </childnode>
        <childnode refid="240264" relation="include">
        </childnode>
        <childnode refid="240265" relation="include">
        </childnode>
        <childnode refid="240266" relation="include">
        </childnode>
      </node>
      <node id="240291">
        <label>src/vt/collective/reduce/operators/default_op.impl.h</label>
        <link refid="default__op_8impl_8h"/>
        <childnode refid="240290" relation="include">
        </childnode>
      </node>
      <node id="240260">
        <label>src/vt/vrt/collection/messages/system_create.h</label>
        <link refid="system__create_8h"/>
        <childnode refid="240167" relation="include">
        </childnode>
        <childnode refid="240174" relation="include">
        </childnode>
        <childnode refid="240186" relation="include">
        </childnode>
      </node>
      <node id="240297">
        <label>src/vt/collective/reduce/reduce_state.h</label>
        <link refid="reduce__state_8h"/>
        <childnode refid="240144" relation="include">
        </childnode>
        <childnode refid="240143" relation="include">
        </childnode>
        <childnode refid="240298" relation="include">
        </childnode>
      </node>
      <node id="240149">
        <label>src/vt/collective/collective_alg.cc</label>
        <link refid="collective__alg_8cc"/>
      </node>
      <node id="240210">
        <label>src/vt/rdmahandle/sub_handle.impl.h</label>
        <link refid="sub__handle_8impl_8h"/>
        <childnode refid="240211" relation="include">
        </childnode>
      </node>
      <node id="240142">
        <label>src/vt/collective/reduce/reduce_hash.h</label>
        <link refid="reduce__hash_8h"/>
        <childnode refid="240143" relation="include">
        </childnode>
        <childnode refid="240174" relation="include">
        </childnode>
        <childnode refid="240186" relation="include">
        </childnode>
      </node>
      <node id="240230">
        <label>src/vt/group/group_manager.impl.h</label>
        <link refid="group__manager_8impl_8h"/>
        <childnode refid="240231" relation="include">
        </childnode>
      </node>
      <node id="240190">
        <label>src/vt/vrt/collection/gettable/gettable.impl.h</label>
        <link refid="gettable_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240256">
        <label>src/vt/vrt/collection/holders/col_holder.impl.h</label>
        <link refid="col__holder_8impl_8h"/>
        <childnode refid="240255" relation="include">
        </childnode>
      </node>
      <node id="240238">
        <label>src/vt/lb/instrumentation/centralized/collect.h</label>
        <link refid="collect_8h"/>
        <childnode refid="240155" relation="include">
        </childnode>
      </node>
      <node id="240204">
        <label>src/vt/vrt/collection/balance/zoltanlb/zoltanlb.h</label>
        <link refid="zoltanlb_8h"/>
        <childnode refid="240167" relation="include">
        </childnode>
        <childnode refid="240205" relation="include">
        </childnode>
      </node>
      <node id="240200">
        <label>src/vt/vrt/collection/balance/randomlb/randomlb.h</label>
        <link refid="randomlb_8h"/>
        <childnode refid="240167" relation="include">
        </childnode>
        <childnode refid="240201" relation="include">
        </childnode>
      </node>
      <node id="240257">
        <label>src/vt/vrt/collection/holders/entire_holder.h</label>
        <link refid="entire__holder_8h"/>
        <childnode refid="240258" relation="include">
        </childnode>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240201">
        <label>src/vt/vrt/collection/balance/randomlb/randomlb.cc</label>
        <link refid="randomlb_8cc"/>
      </node>
      <node id="240288">
        <label>src/vt/collective/reduce/reduce_msg.h</label>
        <link refid="reduce__msg_8h"/>
        <childnode refid="240289" relation="include">
        </childnode>
        <childnode refid="240290" relation="include">
        </childnode>
        <childnode refid="240143" relation="include">
        </childnode>
        <childnode refid="240297" relation="include">
        </childnode>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240155">
        <label>src/vt/lb/instrumentation/centralized/collect.cc</label>
        <link refid="collect_8cc"/>
      </node>
      <node id="240267">
        <label>src/vt/vrt/collection/types/migratable.impl.h</label>
        <link refid="migratable_8impl_8h"/>
        <childnode refid="240244" relation="include">
        </childnode>
      </node>
      <node id="240205">
        <label>src/vt/vrt/collection/balance/zoltanlb/zoltanlb.cc</label>
        <link refid="zoltanlb_8cc"/>
      </node>
      <node id="240162">
        <label>src/vt/vt.h</label>
        <link refid="vt_8h"/>
      </node>
      <node id="240182">
        <label>src/vt/vrt/collection/broadcast/broadcastable.impl.h</label>
        <link refid="broadcastable_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240203">
        <label>src/vt/vrt/collection/balance/statsmaplb/statsmaplb.cc</label>
        <link refid="statsmaplb_8cc"/>
      </node>
      <node id="240218">
        <label>src/vt/rdma/channel/rdma_channel.cc</label>
        <link refid="rdma__channel_8cc"/>
      </node>
      <node id="240270">
        <label>src/vt/pipe/interface/callback_types.h</label>
        <link refid="callback__types_8h"/>
        <childnode refid="240271" relation="include">
        </childnode>
      </node>
      <node id="240265">
        <label>src/vt/vrt/collection/types/static_size.h</label>
        <link refid="static__size_8h"/>
        <childnode refid="240251" relation="include">
        </childnode>
        <childnode refid="240261" relation="include">
        </childnode>
        <childnode refid="240264" relation="include">
        </childnode>
        <childnode refid="240262" relation="include">
        </childnode>
        <childnode refid="240263" relation="include">
        </childnode>
      </node>
      <node id="240300">
        <label>src/vt/objgroup/proxy/proxy_objgroup.h</label>
        <link refid="proxy__objgroup_8h"/>
        <childnode refid="240157" relation="include">
        </childnode>
        <childnode refid="240156" relation="include">
        </childnode>
        <childnode refid="240207" relation="include">
        </childnode>
        <childnode refid="240272" relation="include">
        </childnode>
        <childnode refid="240280" relation="include">
        </childnode>
        <childnode refid="240213" relation="include">
        </childnode>
        <childnode refid="240294" relation="include">
        </childnode>
        <childnode refid="240172" relation="include">
        </childnode>
        <childnode refid="240245" relation="include">
        </childnode>
        <childnode refid="240240" relation="include">
        </childnode>
        <childnode refid="240301" relation="include">
        </childnode>
      </node>
      <node id="240193">
        <label>src/vt/vrt/collection/manager.cc</label>
        <link refid="vrt_2collection_2manager_8cc"/>
      </node>
      <node id="240223">
        <label>src/vt/transport_basic.h</label>
        <link refid="transport__basic_8h"/>
      </node>
      <node id="240206">
        <label>src/vt/objgroup/manager.cc</label>
        <link refid="objgroup_2manager_8cc"/>
      </node>
      <node id="240229">
        <label>src/vt/group/group_info.impl.h</label>
        <link refid="group__info_8impl_8h"/>
        <childnode refid="240228" relation="include">
        </childnode>
      </node>
      <node id="240215">
        <label>src/vt/vrt/collection/rdmaable/rdmaable.impl.h</label>
        <link refid="rdmaable_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240202">
        <label>src/vt/vrt/collection/balance/rotatelb/rotatelb.h</label>
        <link refid="rotatelb_8h"/>
        <childnode refid="240167" relation="include">
        </childnode>
        <childnode refid="240181" relation="include">
        </childnode>
      </node>
      <node id="240251">
        <label>src/vt/vrt/collection/types/headers.h</label>
        <link refid="vrt_2collection_2types_2headers_8h"/>
        <childnode refid="240183" relation="include">
        </childnode>
        <childnode refid="240252" relation="include">
        </childnode>
        <childnode refid="240253" relation="include">
        </childnode>
        <childnode refid="240254" relation="include">
        </childnode>
        <childnode refid="240174" relation="include">
        </childnode>
        <childnode refid="240260" relation="include">
        </childnode>
      </node>
      <node id="240157">
        <label>src/vt/objgroup/manager.h</label>
        <link refid="objgroup_2manager_8h"/>
        <childnode refid="240158" relation="include">
        </childnode>
        <childnode refid="240206" relation="include">
        </childnode>
        <childnode refid="240156" relation="include">
        </childnode>
        <childnode refid="240207" relation="include">
        </childnode>
        <childnode refid="240208" relation="include">
        </childnode>
        <childnode refid="240209" relation="include">
        </childnode>
        <childnode refid="240210" relation="include">
        </childnode>
        <childnode refid="240184" relation="include">
        </childnode>
        <childnode refid="240216" relation="include">
        </childnode>
        <childnode refid="240217" relation="include">
        </childnode>
      </node>
      <node id="240284">
        <label>src/vt/vrt/collection/dispatch/registry.impl.h</label>
        <link refid="vrt_2collection_2dispatch_2registry_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240226">
        <label>src/vt/group/collective/group_collective_finished.cc</label>
        <link refid="group__collective__finished_8cc"/>
      </node>
      <node id="240175">
        <label>src/vt/pipe/callback/proxy_bcast/callback_proxy_bcast.impl.h</label>
        <link refid="callback__proxy__bcast_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240271">
        <label>src/vt/pipe/pipe_manager_typed.h</label>
        <link refid="pipe__manager__typed_8h"/>
        <childnode refid="240272" relation="include">
        </childnode>
      </node>
      <node id="240221">
        <label>src/vt/termination/termination.cc</label>
        <link refid="termination_8cc"/>
      </node>
      <node id="240225">
        <label>src/vt/group/collective/group_info_collective.h</label>
        <link refid="group__info__collective_8h"/>
        <childnode refid="240226" relation="include">
        </childnode>
        <childnode refid="240153" relation="include">
        </childnode>
        <childnode refid="240227" relation="include">
        </childnode>
        <childnode refid="240228" relation="include">
        </childnode>
      </node>
      <node id="240269">
        <label>src/vt/pipe/callback/proxy_send/callback_proxy_send.h</label>
        <link refid="callback__proxy__send_8h"/>
        <childnode refid="240176" relation="include">
        </childnode>
        <childnode refid="240270" relation="include">
        </childnode>
        <childnode refid="240279" relation="include">
        </childnode>
      </node>
      <node id="240151">
        <label>src/vt/collective/reduce/reduce.impl.h</label>
        <link refid="reduce_8impl_8h"/>
        <childnode refid="240143" relation="include">
        </childnode>
      </node>
      <node id="240287">
        <label>src/vt/collective/reduce/reduce_manager.h</label>
        <link refid="reduce__manager_8h"/>
        <childnode refid="240147" relation="include">
        </childnode>
        <childnode refid="240145" relation="include">
        </childnode>
        <childnode refid="240146" relation="include">
        </childnode>
      </node>
      <node id="240283">
        <label>src/vt/vrt/collection/destroy/destroy_handlers.impl.h</label>
        <link refid="destroy__handlers_8impl_8h"/>
        <childnode refid="240282" relation="include">
        </childnode>
      </node>
      <node id="240298">
        <label>src/vt/collective/reduce/reduce_state_holder.h</label>
        <link refid="reduce__state__holder_8h"/>
        <childnode refid="240143" relation="include">
        </childnode>
        <childnode refid="240299" relation="include">
        </childnode>
      </node>
      <node id="240208">
        <label>src/vt/objgroup/proxy/proxy_objgroup_elm.impl.h</label>
        <link refid="proxy__objgroup__elm_8impl_8h"/>
        <childnode refid="240157" relation="include">
        </childnode>
      </node>
      <node id="240236">
        <label>src/vt/group/collective/group_collective_reduce_msg.h</label>
        <link refid="group__collective__reduce__msg_8h"/>
        <childnode refid="240153" relation="include">
        </childnode>
        <childnode refid="240225" relation="include">
        </childnode>
      </node>
      <node id="240279">
        <label>src/vt/pipe/pipe_manager_tl.impl.h</label>
        <link refid="pipe__manager__tl_8impl_8h"/>
        <childnode refid="240272" relation="include">
        </childnode>
      </node>
      <node id="240231">
        <label>src/vt/group/group_manager.h</label>
        <link refid="group__manager_8h"/>
        <childnode refid="240226" relation="include">
        </childnode>
        <childnode refid="240153" relation="include">
        </childnode>
        <childnode refid="240232" relation="include">
        </childnode>
        <childnode refid="240227" relation="include">
        </childnode>
        <childnode refid="240229" relation="include">
        </childnode>
        <childnode refid="240154" relation="include">
        </childnode>
        <childnode refid="240230" relation="include">
        </childnode>
        <childnode refid="240233" relation="include">
        </childnode>
        <childnode refid="240234" relation="include">
        </childnode>
        <childnode refid="240235" relation="include">
        </childnode>
      </node>
      <node id="240252">
        <label>src/vt/vrt/collection/holders/elm_holder.h</label>
        <link refid="elm__holder_8h"/>
        <childnode refid="240253" relation="include">
        </childnode>
        <childnode refid="240254" relation="include">
        </childnode>
      </node>
      <node id="240197">
        <label>src/vt/vrt/collection/types/indexable.impl.h</label>
        <link refid="indexable_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240160">
        <label>src/vt/trace/trace.cc</label>
        <link refid="trace_8cc"/>
      </node>
      <node id="240171">
        <label>src/vt/vrt/collection/balance/hierarchicallb/hierlb.cc</label>
        <link refid="hierlb_8cc"/>
      </node>
      <node id="240179">
        <label>src/vt/vrt/collection/balance/node_stats.cc</label>
        <link refid="node__stats_8cc"/>
      </node>
      <node id="240232">
        <label>src/vt/group/group_headers.h</label>
        <link refid="group__headers_8h"/>
        <childnode refid="240159" relation="include">
        </childnode>
        <childnode refid="240161" relation="include">
        </childnode>
        <childnode refid="240186" relation="include">
        </childnode>
      </node>
      <node id="240167">
        <label>src/vt/vrt/collection/balance/lb_invoke/lb_manager.cc</label>
        <link refid="lb__manager_8cc"/>
      </node>
      <node id="240170">
        <label>src/vt/vrt/collection/balance/hierarchicallb/hierlb.h</label>
        <link refid="hierlb_8h"/>
        <childnode refid="240171" relation="include">
        </childnode>
        <childnode refid="240167" relation="include">
        </childnode>
      </node>
      <node id="240211">
        <label>src/vt/rdmahandle/sub_handle.h</label>
        <link refid="sub__handle_8h"/>
        <childnode refid="240212" relation="include">
        </childnode>
        <childnode refid="240177" relation="include">
        </childnode>
        <childnode refid="240214" relation="include">
        </childnode>
      </node>
      <node id="240163">
        <label>src/vt/vrt/collection/balance/baselb/baselb.h</label>
        <link refid="baselb_8h"/>
        <childnode refid="240164" relation="include">
        </childnode>
        <childnode refid="240165" relation="include">
        </childnode>
        <childnode refid="240166" relation="include">
        </childnode>
        <childnode refid="240168" relation="include">
        </childnode>
        <childnode refid="240170" relation="include">
        </childnode>
        <childnode refid="240172" relation="include">
        </childnode>
        <childnode refid="240200" relation="include">
        </childnode>
        <childnode refid="240202" relation="include">
        </childnode>
        <childnode refid="240203" relation="include">
        </childnode>
        <childnode refid="240204" relation="include">
        </childnode>
      </node>
      <node id="240161">
        <label>src/vt/transport.h</label>
        <link refid="transport_8h"/>
        <childnode refid="240162" relation="include">
        </childnode>
      </node>
      <node id="240276">
        <label>src/vt/pipe/pipe_manager_base.cc</label>
        <link refid="pipe__manager__base_8cc"/>
      </node>
      <node id="240272">
        <label>src/vt/pipe/pipe_manager.h</label>
        <link refid="pipe__manager_8h"/>
        <childnode refid="240150" relation="include">
        </childnode>
        <childnode refid="240273" relation="include">
        </childnode>
        <childnode refid="240274" relation="include">
        </childnode>
        <childnode refid="240235" relation="include">
        </childnode>
        <childnode refid="240275" relation="include">
        </childnode>
        <childnode refid="240276" relation="include">
        </childnode>
        <childnode refid="240277" relation="include">
        </childnode>
        <childnode refid="240278" relation="include">
        </childnode>
        <childnode refid="240213" relation="include">
        </childnode>
        <childnode refid="240184" relation="include">
        </childnode>
      </node>
      <node id="240180">
        <label>src/vt/vrt/collection/balance/proxy/lbable.impl.h</label>
        <link refid="lbable_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
      <node id="240244">
        <label>src/vt/vrt/collection/types/migratable.h</label>
        <link refid="migratable_8h"/>
        <childnode refid="240245" relation="include">
        </childnode>
        <childnode refid="240247" relation="include">
        </childnode>
        <childnode refid="240197" relation="include">
        </childnode>
        <childnode refid="240199" relation="include">
        </childnode>
        <childnode refid="240267" relation="include">
        </childnode>
      </node>
      <node id="240268">
        <label>src/vt/vrt/proxy/collection_proxy.h</label>
        <link refid="collection__proxy_8h"/>
        <childnode refid="240269" relation="include">
        </childnode>
        <childnode refid="240280" relation="include">
        </childnode>
        <childnode refid="240281" relation="include">
        </childnode>
        <childnode refid="240189" relation="include">
        </childnode>
        <childnode refid="240284" relation="include">
        </childnode>
        <childnode refid="240174" relation="include">
        </childnode>
        <childnode refid="240186" relation="include">
        </childnode>
        <childnode refid="240260" relation="include">
        </childnode>
        <childnode refid="240248" relation="include">
        </childnode>
        <childnode refid="240285" relation="include">
        </childnode>
      </node>
      <node id="240177">
        <label>src/vt/rdmahandle/manager.collection.impl.h</label>
        <link refid="manager_8collection_8impl_8h"/>
        <childnode refid="240174" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer" prot="public">vt::util::adt::detail::Sizer</innerclass>
    <innerclass refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer_3_01_t_01_4" prot="public">vt::util::adt::detail::Sizer&lt; T &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner" prot="public">vt::util::adt::detail::Aligner</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner_3_01_t_01_4" prot="public">vt::util::adt::detail::Aligner&lt; T &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_must_be" prot="public">vt::util::adt::detail::MustBe</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_must_be_3_01_t_00_01_u_00_01_us_8_8_8_01_4" prot="public">vt::util::adt::detail::MustBe&lt; T, U, Us... &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_must_be_3_01_t_01_4" prot="public">vt::util::adt::detail::MustBe&lt; T &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_get_place" prot="public">vt::util::adt::detail::GetPlace</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_which" prot="public">vt::util::adt::detail::Which</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_which_impl" prot="public">vt::util::adt::detail::WhichImpl</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_which_impl_3_01_t_00_01_u_00_01typename_01std_1_1enable__i0f067a3d2e31ed39b40aceedb711df3e" prot="public">vt::util::adt::detail::WhichImpl&lt; T, U, typename std::enable_if_t&lt; std::is_same&lt; T, U &gt;::value &gt;, Us... &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_which_impl_3_01_t_00_01_u_00_01typename_01std_1_1enable__i4d9447de0f2954cce0452213fa3ad5db" prot="public">vt::util::adt::detail::WhichImpl&lt; T, U, typename std::enable_if_t&lt; not std::is_same&lt; T, U &gt;::value &gt;, Us... &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_which" prot="public">vt::util::adt::detail::Which</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_deallocate" prot="public">vt::util::adt::detail::Deallocate</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_deallocate_3_01_t_01_4" prot="public">vt::util::adt::detail::Deallocate&lt; T &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_copy" prot="public">vt::util::adt::detail::Copy</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_copy_3_01_t_01_4" prot="public">vt::util::adt::detail::Copy&lt; T &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_move" prot="public">vt::util::adt::detail::Move</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_move_3_01_t_01_4" prot="public">vt::util::adt::detail::Move&lt; T &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_serialize" prot="public">vt::util::adt::detail::Serialize</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_serialize_3_01_t_01_4" prot="public">vt::util::adt::detail::Serialize&lt; T &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_compare" prot="public">vt::util::adt::detail::Compare</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_compare_3_01_t_01_4" prot="public">vt::util::adt::detail::Compare&lt; T &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_hash" prot="public">vt::util::adt::detail::Hash</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_hash_3_01_t_01_4" prot="public">vt::util::adt::detail::Hash&lt; T &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_destructible" prot="public">vt::util::adt::detail::IsTriviallyDestructible</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_destructible_3_01_t_01_4" prot="public">vt::util::adt::detail::IsTriviallyDestructible&lt; T &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_copyable" prot="public">vt::util::adt::detail::IsTriviallyCopyable</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_copyable_3_01_t_01_4" prot="public">vt::util::adt::detail::IsTriviallyCopyable&lt; T &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_all_unique" prot="public">vt::util::adt::detail::AllUnique</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_all_unique_3_01_u_00_01_t_00_01_ts_8_8_8_01_4" prot="public">vt::util::adt::detail::AllUnique&lt; U, T, Ts... &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_all_unique_3_01_u_00_01_t_01_4" prot="public">vt::util::adt::detail::AllUnique&lt; U, T &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_switch" prot="public">vt::util::adt::detail::Switch</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1detail_1_1_switch_3_01_t_01_4" prot="public">vt::util::adt::detail::Switch&lt; T &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1_union_base" prot="public">vt::util::adt::UnionBase</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1_union_destroy" prot="public">vt::util::adt::UnionDestroy</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01detail42179a636679a7a81522739bdddb7210" prot="public">vt::util::adt::UnionDestroy&lt; T, typename std::enable_if_t&lt; detail::IsTriviallyDestructible&lt; T, Ts... &gt;::value &gt;, Ts... &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_0117947c5b8b44b7d9f4a4df27d8795277" prot="public">vt::util::adt::UnionDestroy&lt; T, typename std::enable_if_t&lt; not detail::IsTriviallyDestructible&lt; T, Ts... &gt;::value &gt;, Ts... &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1_union_copy" prot="public">vt::util::adt::UnionCopy</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01detail_1_39951ca88dc847bbf698c46d828c8188" prot="public">vt::util::adt::UnionCopy&lt; T, typename std::enable_if_t&lt; detail::IsTriviallyCopyable&lt; T, Ts... &gt;::value &gt;, Ts... &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_01det4a1e3b5522a7a77cb5d4fb8991a6197b" prot="public">vt::util::adt::UnionCopy&lt; T, typename std::enable_if_t&lt; not detail::IsTriviallyCopyable&lt; T, Ts... &gt;::value &gt;, Ts... &gt;</innerclass>
    <innerclass refid="structvt_1_1util_1_1adt_1_1_aligned_char_union" prot="public">vt::util::adt::AlignedCharUnion</innerclass>
    <innerclass refid="structstd_1_1hash_3_01vt_1_1util_1_1adt_1_1_aligned_char_union_3_01_t_00_01_ts_8_8_8_01_4_01_4" prot="public">std::hash&lt; vt::util::adt::AlignedCharUnion&lt; T, Ts... &gt; &gt;</innerclass>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1util">vt::util</innernamespace>
    <innernamespace refid="namespacevt_1_1util_1_1adt">vt::util::adt</innernamespace>
    <innernamespace refid="namespacevt_1_1util_1_1adt_1_1detail">vt::util::adt::detail</innernamespace>
    <innernamespace refid="namespacestd">std</innernamespace>
    <innernamespace refid="namespacevt_1_1adt">vt::adt</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>union.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA<sp/>Toolkit<sp/>v.<sp/>1.0.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="42"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="43"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_VT_UTILS_ADT_UNION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_VT_UTILS_ADT_UNION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">vt/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">adt<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"></codeline>
<codeline lineno="62"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="63" refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer" kindref="compound">Sizer</ref><sp/>{</highlight></codeline>
<codeline lineno="64" refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer_1ab659dbf40d7aefdf14f206a1df10a441" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer_1ab659dbf40d7aefdf14f206a1df10a441" kindref="member">_cur</ref>[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)];</highlight></codeline>
<codeline lineno="65" refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer_1a7e30375672bcb283804e3589c96ffccf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer" kindref="compound">Sizer</ref>&lt;Ts...&gt;<sp/><ref refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer_1a7e30375672bcb283804e3589c96ffccf" kindref="member">_rest</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="69" refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer" kindref="compound">Sizer</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="70" refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer_3_01_t_01_4_1a7ca91bcf14c50fcf19feaafd673d7d60" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer_1ab659dbf40d7aefdf14f206a1df10a441" kindref="member">_cur</ref>[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)];</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"></codeline>
<codeline lineno="81"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="82" refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner" kindref="compound">Aligner</ref><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner" kindref="compound">Aligner</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84" refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner_1aafdf38bb15e0136c6c529108f28c2dee" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner_1aafdf38bb15e0136c6c529108f28c2dee" kindref="member">_cur</ref>;</highlight></codeline>
<codeline lineno="85" refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner_1a4115223efc04e8781590dea362fc36f0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner" kindref="compound">Aligner</ref>&lt;Ts...&gt;<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner_1a4115223efc04e8781590dea362fc36f0" kindref="member">_rest</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="89" refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner" kindref="compound">Aligner</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner" kindref="compound">Aligner</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91" refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner_3_01_t_01_4_1a7dd4c938c142ee94477bf484cdbde0c9" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner_3_01_t_01_4_1a7dd4c938c142ee94477bf484cdbde0c9" kindref="member">_cur</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"></codeline>
<codeline lineno="97"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Us&gt;</highlight></codeline>
<codeline lineno="98" refid="structvt_1_1util_1_1adt_1_1detail_1_1_must_be" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_must_be" kindref="compound">MustBe</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Us&gt;</highlight></codeline>
<codeline lineno="101" refid="structvt_1_1util_1_1adt_1_1detail_1_1_must_be_3_01_t_00_01_u_00_01_us_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_must_be" kindref="compound">MustBe</ref>&lt;T,<sp/>U,<sp/>Us...&gt;<sp/>{</highlight></codeline>
<codeline lineno="102" refid="structvt_1_1util_1_1adt_1_1detail_1_1_must_be_3_01_t_00_01_u_00_01_us_8_8_8_01_4_1a7b2235c3b5d29130243299e42c2fada4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>is_same<sp/>=</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::is_same&lt;T,U&gt;::value<sp/>or<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_must_be" kindref="compound">MustBe</ref>&lt;T,Us...&gt;::is_same;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="107" refid="structvt_1_1util_1_1adt_1_1detail_1_1_must_be_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_must_be" kindref="compound">MustBe</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="108" refid="structvt_1_1util_1_1adt_1_1detail_1_1_must_be_3_01_t_01_4_1a8708bc6f123e9851bc944a785e01e54f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>is_same<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="comment">//<sp/>Turn<sp/>a<sp/>pack<sp/>into<sp/>a<sp/>\c<sp/>char<sp/>and<sp/>indicates<sp/>order<sp/>in<sp/>the<sp/>pack<sp/>for<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Us&gt;</highlight></codeline>
<codeline lineno="115" refid="structvt_1_1util_1_1adt_1_1detail_1_1_get_place" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_get_place" kindref="compound">GetPlace</ref><sp/>{</highlight></codeline>
<codeline lineno="116" refid="structvt_1_1util_1_1adt_1_1detail_1_1_get_place_1a70a9e14a6a2ae0dfd436992afa6a3ce9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Us)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Us&gt;</highlight></codeline>
<codeline lineno="123" refid="structvt_1_1util_1_1adt_1_1detail_1_1_which" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_which" kindref="compound">Which</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Us&gt;</highlight></codeline>
<codeline lineno="126" refid="structvt_1_1util_1_1adt_1_1detail_1_1_which_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_which_impl" kindref="compound">WhichImpl</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Us&gt;</highlight></codeline>
<codeline lineno="129" refid="structvt_1_1util_1_1adt_1_1detail_1_1_which_impl_3_01_t_00_01_u_00_01typename_01std_1_1enable__i0f067a3d2e31ed39b40aceedb711df3e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_which_impl" kindref="compound">WhichImpl</ref>&lt;T,<sp/>U,<sp/>typename<sp/><ref refid="namespacestd" kindref="compound">std</ref>::enable_if_t&lt;std::is_same&lt;T,U&gt;::value&gt;,<sp/>Us...&gt;<sp/>{</highlight></codeline>
<codeline lineno="130" refid="structvt_1_1util_1_1adt_1_1detail_1_1_which_impl_3_01_t_00_01_u_00_01typename_01std_1_1enable__i0f067a3d2e31ed39b40aceedb711df3e_1ad3047233814bb3cdd0fef23968cf856c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Us)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Us&gt;</highlight></codeline>
<codeline lineno="134" refid="structvt_1_1util_1_1adt_1_1detail_1_1_which_impl_3_01_t_00_01_u_00_01typename_01std_1_1enable__i4d9447de0f2954cce0452213fa3ad5db" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_which_impl" kindref="compound">WhichImpl</ref>&lt;T,<sp/>U,<sp/>typename<sp/><ref refid="namespacestd" kindref="compound">std</ref>::enable_if_t&lt;not<sp/>std::is_same&lt;T,U&gt;::value&gt;,<sp/>Us...&gt;<sp/>{</highlight></codeline>
<codeline lineno="135" refid="structvt_1_1util_1_1adt_1_1detail_1_1_which_impl_3_01_t_00_01_u_00_01typename_01std_1_1enable__i4d9447de0f2954cce0452213fa3ad5db_1a27fc8443593c8444f1c06a7817a1eb8a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value<sp/>=<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_which" kindref="compound">Which</ref>&lt;T,<sp/>Us...&gt;::value;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Us&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_which" kindref="compound">Which</ref><sp/>:<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_which_impl" kindref="compound">WhichImpl</ref>&lt;T,<sp/>U,<sp/>void,<sp/>Us...&gt;<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"></codeline>
<codeline lineno="144"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="145" refid="structvt_1_1util_1_1adt_1_1detail_1_1_deallocate" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_deallocate" kindref="compound">Deallocate</ref><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="147" refid="structvt_1_1util_1_1adt_1_1detail_1_1_deallocate_1acddc822ef340e52b2baee491fe65e30e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_deallocate_1acddc822ef340e52b2baee491fe65e30e" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/>U*<sp/>u)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_get_place" kindref="compound">GetPlace&lt;Ts...&gt;::value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u-&gt;template<sp/>deallocateAs&lt;T&gt;();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_deallocate_1acddc822ef340e52b2baee491fe65e30e" kindref="member">Deallocate&lt;Ts...&gt;::apply</ref>(which,<sp/>u);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="157" refid="structvt_1_1util_1_1adt_1_1detail_1_1_deallocate_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_deallocate" kindref="compound">Deallocate</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="159" refid="structvt_1_1util_1_1adt_1_1detail_1_1_deallocate_3_01_t_01_4_1a975c2877153f3126ee2ce5bbe9312c46" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_deallocate_3_01_t_01_4_1a975c2877153f3126ee2ce5bbe9312c46" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/>U*<sp/>u)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/>static_cast&lt;uint8_t&gt;(1))<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u-&gt;template<sp/>deallocateAs&lt;T&gt;();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>type;<sp/>can<sp/>not<sp/>deallocate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal">};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"></codeline>
<codeline lineno="171"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="172" refid="structvt_1_1util_1_1adt_1_1detail_1_1_copy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_copy" kindref="compound">Copy</ref><sp/>{</highlight></codeline>
<codeline lineno="173" refid="structvt_1_1util_1_1adt_1_1detail_1_1_copy_1a03eaa0d0e724e67991338caad2345c67" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_copy_1a03eaa0d0e724e67991338caad2345c67" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>from,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>to)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_get_place" kindref="compound">GetPlace&lt;Ts...&gt;::value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(to)<sp/>T{*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">T<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(from)};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_copy_1a03eaa0d0e724e67991338caad2345c67" kindref="member">Copy&lt;Ts...&gt;::apply</ref>(which,<sp/>from,<sp/>to);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal">};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="183" refid="structvt_1_1util_1_1adt_1_1detail_1_1_copy_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_copy" kindref="compound">Copy</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="184" refid="structvt_1_1util_1_1adt_1_1detail_1_1_copy_3_01_t_01_4_1a318781016f576885d482cf703fc40709" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_copy_3_01_t_01_4_1a318781016f576885d482cf703fc40709" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>from,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>to)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/>static_cast&lt;uint8_t&gt;(1))<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(to)<sp/>T{*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">T<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(from)};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>type;<sp/>can<sp/>not<sp/>copy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"></codeline>
<codeline lineno="196"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="197" refid="structvt_1_1util_1_1adt_1_1detail_1_1_move" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_move" kindref="compound">Move</ref><sp/>{</highlight></codeline>
<codeline lineno="198" refid="structvt_1_1util_1_1adt_1_1detail_1_1_move_1adfd7a1ecefb4342d7626db1f672666c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_move_1adfd7a1ecefb4342d7626db1f672666c5" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>from,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>to)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_get_place" kindref="compound">GetPlace&lt;Ts...&gt;::value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(to))<sp/>T{std::move(*reinterpret_cast&lt;T*&gt;(from))};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_move_1adfd7a1ecefb4342d7626db1f672666c5" kindref="member">Move&lt;Ts...&gt;::apply</ref>(which,<sp/>from,<sp/>to);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal">};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="208" refid="structvt_1_1util_1_1adt_1_1detail_1_1_move_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_move" kindref="compound">Move</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="209" refid="structvt_1_1util_1_1adt_1_1detail_1_1_move_3_01_t_01_4_1a9b3a7eae0aa568674f94b11719296f16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_move_3_01_t_01_4_1a9b3a7eae0aa568674f94b11719296f16" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>from,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>to)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/>static_cast&lt;uint8_t&gt;(1))<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(to))<sp/>T{std::move(*reinterpret_cast&lt;T*&gt;(from))};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>type;<sp/>can<sp/>not<sp/>move&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"></codeline>
<codeline lineno="221"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="222" refid="structvt_1_1util_1_1adt_1_1detail_1_1_serialize" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_serialize" kindref="compound">Serialize</ref><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SerializerT&gt;</highlight></codeline>
<codeline lineno="224" refid="structvt_1_1util_1_1adt_1_1detail_1_1_serialize_1a8bfd009de6faffcfeec280b35e15e75e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_serialize_1a8bfd009de6faffcfeec280b35e15e75e" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/>U*<sp/>u,<sp/>SerializerT&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_get_place" kindref="compound">GetPlace&lt;Ts...&gt;::value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u-&gt;template<sp/>serializeAs&lt;T&gt;(s);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_serialize_1a8bfd009de6faffcfeec280b35e15e75e" kindref="member">Serialize&lt;Ts...&gt;::apply</ref>(which,<sp/>u,<sp/>s);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal">};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="234" refid="structvt_1_1util_1_1adt_1_1detail_1_1_serialize_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_serialize" kindref="compound">Serialize</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SerializerT&gt;</highlight></codeline>
<codeline lineno="236" refid="structvt_1_1util_1_1adt_1_1detail_1_1_serialize_3_01_t_01_4_1a08d2530adc3d4178e06a7bb40786db13" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_serialize_3_01_t_01_4_1a08d2530adc3d4178e06a7bb40786db13" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/>U*<sp/>u,<sp/>SerializerT&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/>static_cast&lt;uint8_t&gt;(1))<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u-&gt;template<sp/>serializeAs&lt;T&gt;(s);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>type;<sp/>can<sp/>not<sp/>serialize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal">};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"></codeline>
<codeline lineno="248"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="249" refid="structvt_1_1util_1_1adt_1_1detail_1_1_compare" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_compare" kindref="compound">Compare</ref><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="251" refid="structvt_1_1util_1_1adt_1_1detail_1_1_compare_1a0108d5695f7321af0cc807e0281d2f20" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_compare_1a0108d5695f7321af0cc807e0281d2f20" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>u1,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>u2)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_get_place" kindref="compound">GetPlace&lt;Ts...&gt;::value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u1-&gt;template<sp/>compareAs&lt;T&gt;(u2);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_compare_1a0108d5695f7321af0cc807e0281d2f20" kindref="member">Compare&lt;Ts...&gt;::apply</ref>(which,<sp/>u1,<sp/>u2);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal">};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="261" refid="structvt_1_1util_1_1adt_1_1detail_1_1_compare_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_compare" kindref="compound">Compare</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="263" refid="structvt_1_1util_1_1adt_1_1detail_1_1_compare_3_01_t_01_4_1ad9822385afdcf17b9a5b098148b8d87e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_compare_3_01_t_01_4_1ad9822385afdcf17b9a5b098148b8d87e" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>u1,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>u2)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/>static_cast&lt;uint8_t&gt;(1))<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u1-&gt;template<sp/>compareAs&lt;T&gt;(u2);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>type;<sp/>can<sp/>not<sp/>compare&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal">};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"></codeline>
<codeline lineno="276"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="277" refid="structvt_1_1util_1_1adt_1_1detail_1_1_hash" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_hash" kindref="compound">Hash</ref><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="279" refid="structvt_1_1util_1_1adt_1_1detail_1_1_hash_1a0a6ed44f515b45172fa095cfe1413b94" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::size_t<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_hash_1a0a6ed44f515b45172fa095cfe1413b94" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>u1)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_get_place" kindref="compound">GetPlace&lt;Ts...&gt;::value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u1-&gt;template<sp/>hashAs&lt;T&gt;();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_hash_1a0a6ed44f515b45172fa095cfe1413b94" kindref="member">Hash&lt;Ts...&gt;::apply</ref>(which,<sp/>u1);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal">};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="289" refid="structvt_1_1util_1_1adt_1_1detail_1_1_hash_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_hash" kindref="compound">Hash</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="291" refid="structvt_1_1util_1_1adt_1_1detail_1_1_hash_3_01_t_01_4_1a209b846609fc67d54a1cbce7f76f438a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::size_t<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_hash_3_01_t_01_4_1a209b846609fc67d54a1cbce7f76f438a" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>u1)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/>static_cast&lt;uint8_t&gt;(1))<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u1-&gt;template<sp/>hashAs&lt;T&gt;();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>type;<sp/>can<sp/>not<sp/>compare&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal">};</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="304" refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_destructible" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_destructible" kindref="compound">IsTriviallyDestructible</ref><sp/>{</highlight></codeline>
<codeline lineno="305" refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_destructible_1a8c08244bde91f158d601667eab381818" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value<sp/>=</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>std::is_trivially_destructible&lt;T&gt;::value<sp/>and<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_destructible" kindref="compound">IsTriviallyDestructible</ref>&lt;Ts...&gt;::value;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">};</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="310" refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_destructible_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_destructible" kindref="compound">IsTriviallyDestructible</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="311" refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_destructible_3_01_t_01_4_1a34f124ed5ae5c3151c0570af329bde45" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>std::is_trivially_destructible&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="317" refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_copyable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_copyable" kindref="compound">IsTriviallyCopyable</ref><sp/>{</highlight></codeline>
<codeline lineno="318" refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_copyable_1a5ea057aa710a0a78d62b17db1bd02b57" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value<sp/>=</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>std::is_trivially_copyable&lt;T&gt;::value<sp/>and<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_copyable" kindref="compound">IsTriviallyCopyable</ref>&lt;Ts...&gt;::value;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="323" refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_copyable_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_copyable" kindref="compound">IsTriviallyCopyable</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="324" refid="structvt_1_1util_1_1adt_1_1detail_1_1_is_trivially_copyable_3_01_t_01_4_1a0df35a6b10221e3dadc10c67b6c56c39" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>std::is_trivially_copyable&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">};</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="330" refid="structvt_1_1util_1_1adt_1_1detail_1_1_all_unique" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_all_unique" kindref="compound">AllUnique</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="333" refid="structvt_1_1util_1_1adt_1_1detail_1_1_all_unique_3_01_u_00_01_t_00_01_ts_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_all_unique" kindref="compound">AllUnique</ref>&lt;U,<sp/>T,<sp/>Ts...&gt;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_all_unique" kindref="compound">AllUnique</ref>&lt;U,<sp/>T&gt;,<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_all_unique" kindref="compound">AllUnique</ref>&lt;U,<sp/>Ts...&gt;,<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_all_unique" kindref="compound">AllUnique</ref>&lt;T,<sp/>Ts...&gt;<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="337" refid="structvt_1_1util_1_1adt_1_1detail_1_1_all_unique_3_01_u_00_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_all_unique" kindref="compound">AllUnique</ref>&lt;U,<sp/>T&gt;<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>static_assert(not<sp/>std::is_same&lt;U,<sp/>T&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;Types<sp/>must<sp/>be<sp/>unique&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="345" refid="structvt_1_1util_1_1adt_1_1detail_1_1_switch" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_switch" kindref="compound">Switch</ref><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="347" refid="structvt_1_1util_1_1adt_1_1detail_1_1_switch_1a966aa783a3f5efdf75529f2eb27062b8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_switch_1a966aa783a3f5efdf75529f2eb27062b8" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/>U*<sp/>u,<sp/><ref refid="namespacevt_1af182285b57b225b163d5d8aff03cb8c2ac61e9f48e514369f0eb8ac5cebf9fb14" kindref="member">Functor</ref>&amp;<sp/>fn)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_get_place" kindref="compound">GetPlace&lt;Ts...&gt;::value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fn.template<sp/>apply&lt;T&gt;(*u);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_switch" kindref="compound">Switch</ref>&lt;Ts...&gt;::template<sp/>apply(which,<sp/>u,<sp/>fn);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal">};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="357" refid="structvt_1_1util_1_1adt_1_1detail_1_1_switch_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_switch" kindref="compound">Switch</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="359" refid="structvt_1_1util_1_1adt_1_1detail_1_1_switch_3_01_t_01_4_1a8a9400365190abff05867a578d5d0a50" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_switch_3_01_t_01_4_1a8a9400365190abff05867a578d5d0a50" kindref="member">apply</ref>(uint8_t<sp/>which,<sp/>U*<sp/>u,<sp/><ref refid="namespacevt_1af182285b57b225b163d5d8aff03cb8c2ac61e9f48e514369f0eb8ac5cebf9fb14" kindref="member">Functor</ref>&amp;<sp/>fn)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/>static_cast&lt;uint8_t&gt;(1))<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fn.template<sp/>apply&lt;T&gt;(*u);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fn.template<sp/>apply&lt;void&gt;(*u);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal">};</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>detail<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="373" refid="structvt_1_1util_1_1adt_1_1_union_base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1_union_base" kindref="compound">UnionBase</ref><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_base" kindref="compound">UnionBase</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376" refid="structvt_1_1util_1_1adt_1_1_union_base_1aa8b965b0431e03984db9000bb7b4cbf9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_base_1aa8b965b0431e03984db9000bb7b4cbf9" kindref="member">UnionBase</ref>(uint8_t<sp/>in_which)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>which_(in_which)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="structvt_1_1util_1_1adt_1_1_union_base_1af84a8a5eb01bc6f1ff29bab969177a83" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_base_1af84a8a5eb01bc6f1ff29bab969177a83" kindref="member">getUnsafeRawBytes</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;data_);<sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="386" refid="structvt_1_1util_1_1adt_1_1_union_base_1a3badf6a022a698dc00937b3df621caf8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(<ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_aligner" kindref="compound">detail::Aligner</ref>&lt;T,Ts...&gt;)<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data_[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionvt_1_1util_1_1adt_1_1detail_1_1_sizer" kindref="compound">detail::Sizer&lt;T,Ts...&gt;</ref>)];</highlight></codeline>
<codeline lineno="387" refid="structvt_1_1util_1_1adt_1_1_union_base_1ae46ed3323e83507ef0b47ad82db493d0" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/>which_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">};</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="393" refid="structvt_1_1util_1_1adt_1_1_union_destroy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1_union_destroy" kindref="compound">UnionDestroy</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="396" refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01detail42179a636679a7a81522739bdddb7210" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1_union_destroy" kindref="compound">UnionDestroy</ref>&lt;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>T,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>typename<sp/><ref refid="namespacestd" kindref="compound">std</ref>::enable_if_t&lt;detail::IsTriviallyDestructible&lt;T,<sp/>Ts...&gt;::value&gt;,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>Ts...</highlight></codeline>
<codeline lineno="400"><highlight class="normal">&gt;<sp/>:<sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_base" kindref="compound">UnionBase</ref>&lt;T,<sp/>Ts...&gt;<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_destroy" kindref="compound">UnionDestroy</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403" refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01detail42179a636679a7a81522739bdddb7210_1aab76556b3fdd29b060495fdce22a5c83" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01detail42179a636679a7a81522739bdddb7210_1aab76556b3fdd29b060495fdce22a5c83" kindref="member">UnionDestroy</ref>(uint8_t<sp/>in_which)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_base" kindref="compound">UnionBase</ref>&lt;T,<sp/>Ts...&gt;(in_which)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01detail42179a636679a7a81522739bdddb7210_1a829cc75c996bd60ba4591d1d85dd3a28" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01detail42179a636679a7a81522739bdddb7210_1a829cc75c996bd60ba4591d1d85dd3a28" kindref="member">reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;which_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal">};</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="417" refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_0117947c5b8b44b7d9f4a4df27d8795277" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1_union_destroy" kindref="compound">UnionDestroy</ref>&lt;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>T,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>typename<sp/><ref refid="namespacestd" kindref="compound">std</ref>::enable_if_t&lt;not<sp/>detail::IsTriviallyDestructible&lt;T,<sp/>Ts...&gt;::value&gt;,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>Ts...</highlight></codeline>
<codeline lineno="421"><highlight class="normal">&gt;<sp/>:<sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_base" kindref="compound">UnionBase</ref>&lt;T,<sp/>Ts...&gt;<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_destroy" kindref="compound">UnionDestroy</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424" refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_0117947c5b8b44b7d9f4a4df27d8795277_1a081c5ab9e9d8edbb8191efb1c5d45f38" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_0117947c5b8b44b7d9f4a4df27d8795277_1a081c5ab9e9d8edbb8191efb1c5d45f38" kindref="member">UnionDestroy</ref>(uint8_t<sp/>in_which)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_base" kindref="compound">UnionBase</ref>&lt;T,<sp/>Ts...&gt;(in_which)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_0117947c5b8b44b7d9f4a4df27d8795277_1ae29f61c7a4b821e0e451abe253a8a367" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_0117947c5b8b44b7d9f4a4df27d8795277_1ae29f61c7a4b821e0e451abe253a8a367" kindref="member">reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;which_<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_deallocate_1acddc822ef340e52b2baee491fe65e30e" kindref="member">detail::Deallocate&lt;T, Ts...&gt;::apply</ref>(this-&gt;which_,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;which_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="443" refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_0117947c5b8b44b7d9f4a4df27d8795277_1a699eec83059ebb0e747ac7549e2aaf29" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_0117947c5b8b44b7d9f4a4df27d8795277_1a699eec83059ebb0e747ac7549e2aaf29" kindref="member">deallocateAs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;which_<sp/>==<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_which" kindref="compound">detail::Which&lt;U, T, Ts...&gt;::value</ref>),</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Deallocating<sp/>as<sp/>wrong<sp/>type&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">U*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;getUnsafeRawBytes())-&gt;~U();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;which_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_0117947c5b8b44b7d9f4a4df27d8795277_1a63ff918204bcd7a80361d617ead98c24" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_destroy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_0117947c5b8b44b7d9f4a4df27d8795277_1a63ff918204bcd7a80361d617ead98c24" kindref="member">~UnionDestroy</ref>()<sp/>{<sp/><ref refid="namespacevt_1_1debug_1a4456c051bd468fe024334f24887867af" kindref="member">reset</ref>();<sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal">};</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="458" refid="structvt_1_1util_1_1adt_1_1_union_copy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1_union_copy" kindref="compound">UnionCopy</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="461" refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01detail_1_39951ca88dc847bbf698c46d828c8188" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1_union_copy" kindref="compound">UnionCopy</ref>&lt;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>T,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>typename<sp/><ref refid="namespacestd" kindref="compound">std</ref>::enable_if_t&lt;detail::IsTriviallyCopyable&lt;T,<sp/>Ts...&gt;::value&gt;,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>Ts...</highlight></codeline>
<codeline lineno="465"><highlight class="normal">&gt;<sp/>:<sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_destroy" kindref="compound">UnionDestroy</ref>&lt;T,<sp/>void,<sp/>Ts...&gt;<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_copy" kindref="compound">UnionCopy</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal">};</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="472" refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_01det4a1e3b5522a7a77cb5d4fb8991a6197b" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1_union_copy" kindref="compound">UnionCopy</ref>&lt;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>T,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>typename<sp/><ref refid="namespacestd" kindref="compound">std</ref>::enable_if_t&lt;not<sp/>detail::IsTriviallyCopyable&lt;T,<sp/>Ts...&gt;::value&gt;,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>Ts...</highlight></codeline>
<codeline lineno="476"><highlight class="normal">&gt;<sp/>:<sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_destroy" kindref="compound">UnionDestroy</ref>&lt;T,<sp/>void,<sp/>Ts...&gt;<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_copy" kindref="compound">UnionCopy</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_01det4a1e3b5522a7a77cb5d4fb8991a6197b_1af836820473372c7be6b7c61f65de4cc8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_01det4a1e3b5522a7a77cb5d4fb8991a6197b_1af836820473372c7be6b7c61f65de4cc8" kindref="member">UnionCopy</ref>(<ref refid="structvt_1_1util_1_1adt_1_1_union_copy" kindref="compound">UnionCopy</ref>&amp;&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;which_<sp/>=<sp/>other.which_;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;which_<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_move_1adfd7a1ecefb4342d7626db1f672666c5" kindref="member">detail::Move&lt;T, Ts...&gt;::apply</ref>(this-&gt;which_,<sp/>other.data_,<sp/>this-&gt;data_);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_01det4a1e3b5522a7a77cb5d4fb8991a6197b_1aa60780280af609ec00f6c3d2745022c5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_01det4a1e3b5522a7a77cb5d4fb8991a6197b_1aa60780280af609ec00f6c3d2745022c5" kindref="member">UnionCopy</ref>(<ref refid="structvt_1_1util_1_1adt_1_1_union_copy" kindref="compound">UnionCopy</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;which_<sp/>=<sp/>other.which_;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;which_<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_copy_1a03eaa0d0e724e67991338caad2345c67" kindref="member">detail::Copy&lt;T, Ts...&gt;::apply</ref>(this-&gt;which_,<sp/>other.data_,<sp/>this-&gt;data_);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_01det4a1e3b5522a7a77cb5d4fb8991a6197b_1a66e91d23c8b88fe0d906b9a6d671f22c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_copy" kindref="compound">UnionCopy</ref>&amp;<sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_01det4a1e3b5522a7a77cb5d4fb8991a6197b_1a66e91d23c8b88fe0d906b9a6d671f22c" kindref="member">operator=</ref>(<ref refid="structvt_1_1util_1_1adt_1_1_union_copy" kindref="compound">UnionCopy</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="namespacevt_1_1debug_1a4456c051bd468fe024334f24887867af" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;which_<sp/>=<sp/>other.which_;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;which_<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_copy_1a03eaa0d0e724e67991338caad2345c67" kindref="member">detail::Copy&lt;T, Ts...&gt;::apply</ref>(this-&gt;which_,<sp/>other.data_,<sp/>this-&gt;data_);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_01det4a1e3b5522a7a77cb5d4fb8991a6197b_1ad4928f9b7f9d4ff0420320e1cc934909" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_copy" kindref="compound">UnionCopy</ref>&amp;<sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01not_01det4a1e3b5522a7a77cb5d4fb8991a6197b_1ad4928f9b7f9d4ff0420320e1cc934909" kindref="member">operator=</ref>(<ref refid="structvt_1_1util_1_1adt_1_1_union_copy" kindref="compound">UnionCopy</ref>&amp;&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="namespacevt_1_1debug_1a4456c051bd468fe024334f24887867af" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;which_<sp/>=<sp/>other.which_;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;which_<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_move_1adfd7a1ecefb4342d7626db1f672666c5" kindref="member">detail::Move&lt;T, Ts...&gt;::apply</ref>(this-&gt;which_,<sp/>other.data_,<sp/>this-&gt;data_);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal">};</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"></codeline>
<codeline lineno="537"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="538" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union" kindref="compound">AlignedCharUnion</ref><sp/>:<sp/><ref refid="structvt_1_1util_1_1adt_1_1_union_copy" kindref="compound">UnionCopy</ref>&lt;T,<sp/>void,<sp/>Ts...&gt;<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union" kindref="compound">AlignedCharUnion</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a5cdce588713b9d1e65b0be90bbeaa771" refkind="member"><highlight class="normal"><sp/><sp/>std::size_t<sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a5cdce588713b9d1e65b0be90bbeaa771" kindref="member">hash</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;which_<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_hash_1a0a6ed44f515b45172fa095cfe1413b94" kindref="member">detail::Hash&lt;T, Ts...&gt;::apply</ref>(this-&gt;which_,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a30e1323df5870ce0763e90a3d3caa0c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a30e1323df5870ce0763e90a3d3caa0c9" kindref="member">operator==</ref>(<ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union" kindref="compound">AlignedCharUnion</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;which_<sp/>!=<sp/>other.which_)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;which_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_compare_1a0108d5695f7321af0cc807e0281d2f20" kindref="member">detail::Compare&lt;T, Ts...&gt;::apply</ref>(this-&gt;which_,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;other);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="566" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a50f97a051cd59537528d6b5879f88a53" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a50f97a051cd59537528d6b5879f88a53" kindref="member">init</ref>(Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>staticAssertCorrectness&lt;U&gt;();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(this-&gt;which_<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>be<sp/>uninitialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;which_<sp/>=<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_which" kindref="compound">detail::Which</ref>&lt;U,<sp/>T,<sp/>Ts...&gt;::value;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>getUnsafe&lt;U&gt;();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(t)<sp/>U{std::forward&lt;Args&gt;(args)...};</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="580" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1af78cf3c2f5b904d1f49ee19f0ac7871f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1af78cf3c2f5b904d1f49ee19f0ac7871f" kindref="member">is</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>staticAssertCorrectness&lt;U&gt;();</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;which_<sp/>==<sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_which" kindref="compound">detail::Which</ref>&lt;U,<sp/>T,<sp/>Ts...&gt;::value;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="589" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1acd5ebe14c0990b3edacf9aeea031499f" refkind="member"><highlight class="normal"><sp/><sp/>U&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>staticAssertCorrectness&lt;U&gt;();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*getSafe&lt;U&gt;();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="598" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a4dfd0f51d2c58aa8af33e50e82fe98fa" refkind="member"><highlight class="normal"><sp/><sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>staticAssertCorrectness&lt;U&gt;();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*getSafe&lt;U&gt;();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="608" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1af9bd3e00a355dca08d88103852f716ce" refkind="member"><highlight class="normal"><sp/><sp/>U&amp;<sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1af9bd3e00a355dca08d88103852f716ce" kindref="member">viewAs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>staticAssertCorrectness&lt;U&gt;();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*getUnsafe&lt;U&gt;();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SerializerT&gt;</highlight></codeline>
<codeline lineno="619" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a3b7862db1eb10fc16c66aa09a4e3fec6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a3b7862db1eb10fc16c66aa09a4e3fec6" kindref="member">serialize</ref>(SerializerT&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>|<sp/>this-&gt;which_;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;which_<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_serialize_1a8bfd009de6faffcfeec280b35e15e75e" kindref="member">detail::Serialize&lt;T, Ts...&gt;::apply</ref>(this-&gt;which_,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>s);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="669" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a27ee4ceddaa0fda39ef9be9164959f11" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a27ee4ceddaa0fda39ef9be9164959f11" kindref="member">switchOn</ref>(<ref refid="namespacevt_1af182285b57b225b163d5d8aff03cb8c2ac61e9f48e514369f0eb8ac5cebf9fb14" kindref="member">Functor</ref>&amp;<sp/>fn)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_switch" kindref="compound">detail::Switch</ref>&lt;T,<sp/>Ts...&gt;::template<sp/>apply(this-&gt;which_,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>fn);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SerializerT&gt;</highlight></codeline>
<codeline lineno="675" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a1278b482c837c11fd2f6f41b7f8b0f33" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a1278b482c837c11fd2f6f41b7f8b0f33" kindref="member">serializeAs</ref>(SerializerT&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>U*<sp/>t<sp/>=<sp/>getUnsafe&lt;U&gt;();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>|<sp/>*t;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="681" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1ac2ba0a705e45724c9882b904b5c1231b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1ac2ba0a705e45724c9882b904b5c1231b" kindref="member">compareAs</ref>(<ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union" kindref="compound">AlignedCharUnion</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>t1<sp/>=<sp/>getUnsafe&lt;U&gt;();</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>t2<sp/>=<sp/>other-&gt;<ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a8440cff62cda9dcffc9e86de39d23d8f" kindref="member">getUnsafe</ref>&lt;U&gt;();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*t1<sp/>==<sp/>*t2;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="688" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a7c7bfb6979d827a602e4aba1f6886cb8" refkind="member"><highlight class="normal"><sp/><sp/>std::size_t<sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a7c7bfb6979d827a602e4aba1f6886cb8" kindref="member">hashAs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>t1<sp/>=<sp/>getUnsafe&lt;U&gt;();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;U&gt;()(*t1);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="695" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a58c0d0aaf061c92a89b33da6e84ea5d7" refkind="member"><highlight class="normal"><sp/><sp/>U*<sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a58c0d0aaf061c92a89b33da6e84ea5d7" kindref="member">getSafe</ref>()<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>staticAssertCorrectness&lt;U&gt;();</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_which" kindref="compound">detail::Which&lt;U, T, Ts...&gt;::value</ref><sp/>==<sp/>this-&gt;which_),</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>be<sp/>initialized<sp/>as<sp/>U&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getUnsafe&lt;U&gt;();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="705" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a188460ee37c49aa3134d84ae728a2783" refkind="member"><highlight class="normal"><sp/><sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a188460ee37c49aa3134d84ae728a2783" kindref="member">getSafe</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>staticAssertCorrectness&lt;U&gt;();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_which" kindref="compound">detail::Which&lt;U, T, Ts...&gt;::value</ref><sp/>==<sp/>this-&gt;which_),</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>be<sp/>initialized<sp/>as<sp/>U&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getUnsafe&lt;U&gt;();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="715" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a8440cff62cda9dcffc9e86de39d23d8f" refkind="member"><highlight class="normal"><sp/><sp/>U*<sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a8440cff62cda9dcffc9e86de39d23d8f" kindref="member">getUnsafe</ref>()<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>staticAssertCorrectness&lt;U&gt;();</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">U*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;data_));</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="721" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1abfa5497bfe92bb4bda432da80c31137d" refkind="member"><highlight class="normal"><sp/><sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1abfa5497bfe92bb4bda432da80c31137d" kindref="member">getUnsafe</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>staticAssertCorrectness&lt;U&gt;();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">U<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;data_));</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="727" refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a5be41aefcdc73b5f10102991b2aa8bfc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a5be41aefcdc73b5f10102991b2aa8bfc" kindref="member">staticAssertCorrectness</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_all_unique" kindref="compound">detail::AllUnique</ref>&lt;T,<sp/>Ts...&gt;{};</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1detail_1_1_must_be" kindref="compound">detail::MustBe&lt;U, T, Ts...&gt;::is_same</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>be<sp/>the<sp/>valid<sp/>type<sp/>in<sp/>union&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal">};</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal">}}}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::util::adt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="740" refid="structstd_1_1hash_3_01vt_1_1util_1_1adt_1_1_aligned_char_union_3_01_t_00_01_ts_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hash&lt;<ref refid="namespacevt" kindref="compound">vt</ref>::util::adt::AlignedCharUnion&lt;T,<sp/>Ts...&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="741" refid="structstd_1_1hash_3_01vt_1_1util_1_1adt_1_1_aligned_char_union_3_01_t_00_01_ts_8_8_8_01_4_01_4_1a1ea3b5cbac36f1158d8f6f6740e2f354" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structstd_1_1hash_3_01vt_1_1util_1_1adt_1_1_aligned_char_union_3_01_t_00_01_ts_8_8_8_01_4_01_4_1a1ea3b5cbac36f1158d8f6f6740e2f354" kindref="member">operator()</ref>(</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union" kindref="compound">vt::util::adt::AlignedCharUnion&lt;T, Ts...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>in</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in.<ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union_1a5cdce588713b9d1e65b0be90bbeaa771" kindref="member">hash</ref>();</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal">};</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>std<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">adt<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="753" refid="namespacevt_1_1adt_1ad2a7bbcb5f4735ae9d847f96ee62f144" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union" kindref="compound">SafeUnion</ref><sp/>=<sp/><ref refid="structvt_1_1util_1_1adt_1_1_aligned_char_union" kindref="compound">util::adt::AlignedCharUnion</ref>&lt;T,<sp/>Ts...&gt;;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal">}}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::adt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_VT_UTILS_ADT_UNION_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/vt/utils/adt/union.h"/>
  </compounddef>
</doxygen>
