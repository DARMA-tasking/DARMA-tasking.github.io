<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1event_1_1_event_record" kind="struct" language="C++" prot="public">
    <compoundname>vt::event::EventRecord</compoundname>
    <includes refid="event__record_8h" local="no">event_record.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1event_1_1_event_record_1a1cd26c3c87c96eced8f474fa4fdab47e" prot="public" static="no">
        <type><ref refid="namespacevt_1_1event_1a1ea9fec44d101bf40b8fd786d44ebed9" kindref="member">eEventRecord</ref></type>
        <definition>using vt::event::EventRecord::EventRecordType =  eEventRecord</definition>
        <argsstring></argsstring>
        <name>EventRecordType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="81" column="1" bodyfile="src/vt/event/event_record.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1event_1_1_event_record_1aecf5b6b386947ef5f0d5bf410d0b2944" prot="public" static="no">
        <type><ref refid="unionvt_1_1event_1_1u_event_payload" kindref="compound">uEventPayload</ref></type>
        <definition>using vt::event::EventRecord::EventPayloadType =  uEventPayload</definition>
        <argsstring></argsstring>
        <name>EventPayloadType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="82" column="1" bodyfile="src/vt/event/event_record.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1event_1_1_event_record_1a5bbd2f1c9a7335ef4be44db273215f9a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::event::EventRecord::ready</definition>
        <argsstring></argsstring>
        <name>ready</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="127" column="1" bodyfile="src/vt/event/event_record.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1event_1_1_event_record_1a5cffc5288d077e2e68c316134e486d32" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; <ref refid="namespacevt_1a1125ac1da6c0bbf141e0ea0739d7602d" kindref="member">ShortMessage</ref> &gt;</type>
        <definition>MsgSharedPtr&lt;ShortMessage&gt; vt::event::EventRecord::msg_</definition>
        <argsstring></argsstring>
        <name>msg_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="129" column="1" bodyfile="src/vt/event/event_record.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1event_1_1_event_record_1a2da4116e2d72fb3d7cd177a2bb91cc82" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1event_1_1_event_record_1aecf5b6b386947ef5f0d5bf410d0b2944" kindref="member">EventPayloadType</ref></type>
        <definition>EventPayloadType vt::event::EventRecord::event_union_</definition>
        <argsstring></argsstring>
        <name>event_union_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="132" column="1" bodyfile="src/vt/event/event_record.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1event_1_1_event_record_1ac0da30d15e6a7ad968a698a7e82c1a4e" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a009267401def7ae8bf201892222d060f" kindref="member">EventType</ref></type>
        <definition>EventType vt::event::EventRecord::event_id_</definition>
        <argsstring></argsstring>
        <name>event_id_</name>
        <initializer>= no_event</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="135" column="1" bodyfile="src/vt/event/event_record.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1event_1_1_event_record_1a2b2684a996dd14b092ba3fef2fcce6b4" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1event_1a1ea9fec44d101bf40b8fd786d44ebed9" kindref="member">EventRecordType</ref></type>
        <definition>EventRecordType vt::event::EventRecord::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <initializer>= <ref refid="namespacevt_1_1event_1a1ea9fec44d101bf40b8fd786d44ebed9a4bbb8f967da6d1a610596d7257179c2b" kindref="member">EventRecordType::Invalid</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="138" column="1" bodyfile="src/vt/event/event_record.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1ad43151ff7b64e4aea444c3605b6a987e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::event::EventRecord::EventRecord</definition>
        <argsstring>()=default</argsstring>
        <name>EventRecord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1ae46827dcbe7eab923e6083006475fa65" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>vt::event::EventRecord::~EventRecord</definition>
        <argsstring>()</argsstring>
        <name>~EventRecord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="86" column="1" bodyfile="src/vt/event/event_record.cc" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1afee008ad8096ff0aa3a6bed7e94d9701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::event::EventRecord::EventRecord</definition>
        <argsstring>(EventRecordType const &amp;type, EventType const &amp;id)</argsstring>
        <name>EventRecord</name>
        <param>
          <type><ref refid="namespacevt_1_1event_1a1ea9fec44d101bf40b8fd786d44ebed9" kindref="member">EventRecordType</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a009267401def7ae8bf201892222d060f" kindref="member">EventType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="88" column="1" bodyfile="src/vt/event/event_record.cc" bodystart="56" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1ace2823ff35b94e886a1448f8bcd039a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::event::EventRecord::testMPIEventReady</definition>
        <argsstring>()</argsstring>
        <name>testMPIEventReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="90" column="1" bodyfile="src/vt/event/event_record.cc" bodystart="88" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1ac19ef521b531c45e30acf3838c3b1320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::event::EventRecord::testNormalEventReady</definition>
        <argsstring>()</argsstring>
        <name>testNormalEventReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="91" column="1" bodyfile="src/vt/event/event_record.cc" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1a64981723c87d85c2d76251d333538a24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::event::EventRecord::testParentEventReady</definition>
        <argsstring>()</argsstring>
        <name>testParentEventReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="92" column="1" bodyfile="src/vt/event/event_record.cc" bodystart="116" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1aaeb3fbdfa74efbb88570ed88295af3ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::event::EventRecord::addEventToList</definition>
        <argsstring>(EventType const &amp;event)</argsstring>
        <name>addEventToList</name>
        <param>
          <type><ref refid="namespacevt_1a009267401def7ae8bf201892222d060f" kindref="member">EventType</ref> const &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="93" column="1" bodyfile="src/vt/event/event_record.cc" bodystart="145" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1a42de3f14e7aee457dfc44f6fdc57b874" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a009267401def7ae8bf201892222d060f" kindref="member">EventType</ref></type>
        <definition>EventType vt::event::EventRecord::getEventID</definition>
        <argsstring>() const</argsstring>
        <name>getEventID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="94" column="1" bodyfile="src/vt/event/event_record.cc" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1a82d8f84b3aa975cd12e1972745491106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::event::EventRecord::testReady</definition>
        <argsstring>()</argsstring>
        <name>testReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="95" column="1" bodyfile="src/vt/event/event_record.cc" bodystart="153" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1a11d38e147a2a389c71a3fec237b7d858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::event::EventRecord::setReady</definition>
        <argsstring>()</argsstring>
        <name>setReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="96" column="1" bodyfile="src/vt/event/event_record.cc" bodystart="137" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1a9444f340945fa732113583fc0b04ae7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MPI_Request *</type>
        <definition>MPI_Request * vt::event::EventRecord::getRequest</definition>
        <argsstring>()</argsstring>
        <name>getRequest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="97" column="1" bodyfile="src/vt/event/event_record.cc" bodystart="170" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1abb891d63f4027f5d36d53d3080c33cdf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1event_1aa507caad8ea8ee959ccef2d57753dceb" kindref="member">EventListPtrType</ref></type>
        <definition>EventListPtrType vt::event::EventRecord::getEventList</definition>
        <argsstring>() const</argsstring>
        <name>getEventList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="98" column="1" bodyfile="src/vt/event/event_record.cc" bodystart="178" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1a9354b50ad690549bca45eb6e68b121f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::event::EventRecord::setManagedMessage</definition>
        <argsstring>(MsgSharedPtr&lt; ShortMessage &gt; in_msg)</argsstring>
        <name>setManagedMessage</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; <ref refid="namespacevt_1a1125ac1da6c0bbf141e0ea0739d7602d" kindref="member">ShortMessage</ref> &gt;</type>
          <declname>in_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="99" column="1" bodyfile="src/vt/event/event_record.cc" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_record_1acb5e491359e5b00fad82360f49928bf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Serializer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::event::EventRecord::serialize</definition>
        <argsstring>(Serializer &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>Serializer &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_record.h" line="114" column="1" bodyfile="src/vt/event/event_record.h" bodystart="114" bodyend="124"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1669">
        <label>vt::event::EventRecord</label>
        <link refid="structvt_1_1event_1_1_event_record"/>
        <childnode refid="1670" relation="usage">
          <edgelabel>msg_</edgelabel>
        </childnode>
        <childnode refid="1673" relation="usage">
          <edgelabel>event_union_</edgelabel>
        </childnode>
      </node>
      <node id="1672">
        <label>vt::messaging::MsgPtrImplBase</label>
        <link refid="structvt_1_1messaging_1_1_msg_ptr_impl_base"/>
      </node>
      <node id="1671">
        <label>vt::messaging::BaseMsg</label>
        <link refid="structvt_1_1messaging_1_1_base_msg"/>
      </node>
      <node id="1673">
        <label>vt::event::uEventPayload</label>
        <link refid="unionvt_1_1event_1_1u_event_payload"/>
      </node>
      <node id="1670">
        <label>vt::messaging::MsgSharedPtr&lt; vt::messaging::ActiveMsg &gt;</label>
        <link refid="structvt_1_1messaging_1_1_msg_shared_ptr"/>
        <childnode refid="1671" relation="usage">
          <edgelabel>ptr_</edgelabel>
        </childnode>
        <childnode refid="1672" relation="usage">
          <edgelabel>impl_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/event/event_record.h" line="80" column="1" bodyfile="src/vt/event/event_record.h" bodystart="80" bodyend="144"/>
    <listofallmembers>
      <member refid="structvt_1_1event_1_1_event_record_1aaeb3fbdfa74efbb88570ed88295af3ee" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>addEventToList</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1ac0da30d15e6a7ad968a698a7e82c1a4e" prot="private" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>event_id_</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1a2da4116e2d72fb3d7cd177a2bb91cc82" prot="private" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>event_union_</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1aecf5b6b386947ef5f0d5bf410d0b2944" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>EventPayloadType</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1ad43151ff7b64e4aea444c3605b6a987e" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>EventRecord</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1afee008ad8096ff0aa3a6bed7e94d9701" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>EventRecord</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1a1cd26c3c87c96eced8f474fa4fdab47e" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>EventRecordType</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1a42de3f14e7aee457dfc44f6fdc57b874" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>getEventID</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1abb891d63f4027f5d36d53d3080c33cdf" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>getEventList</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1a9444f340945fa732113583fc0b04ae7f" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>getRequest</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1a5cffc5288d077e2e68c316134e486d32" prot="private" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>msg_</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1a5bbd2f1c9a7335ef4be44db273215f9a" prot="private" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>ready</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1acb5e491359e5b00fad82360f49928bf8" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>serialize</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1a9354b50ad690549bca45eb6e68b121f0" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>setManagedMessage</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1a11d38e147a2a389c71a3fec237b7d858" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>setReady</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1ace2823ff35b94e886a1448f8bcd039a7" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>testMPIEventReady</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1ac19ef521b531c45e30acf3838c3b1320" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>testNormalEventReady</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1a64981723c87d85c2d76251d333538a24" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>testParentEventReady</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1a82d8f84b3aa975cd12e1972745491106" prot="public" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>testReady</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1a2b2684a996dd14b092ba3fef2fcce6b4" prot="private" virt="non-virtual"><scope>vt::event::EventRecord</scope><name>type_</name></member>
      <member refid="structvt_1_1event_1_1_event_record_1ae46827dcbe7eab923e6083006475fa65" prot="public" virt="virtual"><scope>vt::event::EventRecord</scope><name>~EventRecord</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
