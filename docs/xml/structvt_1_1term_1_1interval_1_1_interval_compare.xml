<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1term_1_1interval_1_1_interval_compare" kind="struct" language="C++" prot="public">
    <compoundname>vt::term::interval::IntervalCompare</compoundname>
    <includes refid="interval_8h" local="no">interval.h</includes>
    <templateparamlist>
      <param>
        <type>typename DomainT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1term_1_1interval_1_1_interval_compare_1a0f8be38c302892b92b68484f1925ac71" prot="public" static="no">
        <type><ref refid="structvt_1_1term_1_1interval_1_1_interval" kindref="compound">Interval</ref>&lt; DomainT &gt;</type>
        <definition>using vt::term::interval::IntervalCompare&lt; DomainT &gt;::IntervalType =  Interval&lt;DomainT&gt;</definition>
        <argsstring></argsstring>
        <name>IntervalType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/interval.h" line="215" column="3" bodyfile="src/vt/termination/interval/interval.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1term_1_1interval_1_1_interval_compare_1ae30957e5c338baf722853e9a0ef04fa2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::term::interval::IntervalCompare&lt; DomainT &gt;::operator()</definition>
        <argsstring>(IntervalType const &amp;i1, IntervalType const &amp;i2) const</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_interval_compare_1a0f8be38c302892b92b68484f1925ac71" kindref="member">IntervalType</ref> const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_interval_compare_1a0f8be38c302892b92b68484f1925ac71" kindref="member">IntervalType</ref> const &amp;</type>
          <declname>i2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/interval.h" line="216" column="8" bodyfile="src/vt/termination/interval/interval.h" bodystart="216" bodyend="218"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/termination/interval/interval.h" line="214" column="1" bodyfile="src/vt/termination/interval/interval.h" bodystart="214" bodyend="219"/>
    <listofallmembers>
      <member refid="structvt_1_1term_1_1interval_1_1_interval_compare_1a0f8be38c302892b92b68484f1925ac71" prot="public" virt="non-virtual"><scope>vt::term::interval::IntervalCompare</scope><name>IntervalType</name></member>
      <member refid="structvt_1_1term_1_1interval_1_1_interval_compare_1ae30957e5c338baf722853e9a0ef04fa2" prot="public" virt="non-virtual"><scope>vt::term::interval::IntervalCompare</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
