<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1runtime_1_1_runtime_holder" kind="struct" language="C++" prot="public">
    <compoundname>vt::runtime::RuntimeHolder</compoundname>
    <includes refid="runtime__holder_8h" local="no">runtime_holder.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1runtime_1_1_runtime_holder_1a9740e8aa7487fcf38b67a7e160d7b046" prot="public" static="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime" kindref="compound">vt::runtime::Runtime</ref> *</type>
        <definition>using vt::runtime::RuntimeHolder::PointerType =  vt::runtime::Runtime*</definition>
        <argsstring></argsstring>
        <name>PointerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="63" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1runtime_1_1_runtime_holder_1a45aaa245b06497cfce58452b0d64b3fa" prot="public" static="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime" kindref="compound">vt::runtime::Runtime</ref> &amp;</type>
        <definition>using vt::runtime::RuntimeHolder::ReferenceType =  vt::runtime::Runtime&amp;</definition>
        <argsstring></argsstring>
        <name>ReferenceType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="64" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_holder_1a6b0f4efb09cd9dd6747aa5e8237e23ff" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_holder_1a9740e8aa7487fcf38b67a7e160d7b046" kindref="member">PointerType</ref></type>
        <definition>PointerType vt::runtime::RuntimeHolder::rt_</definition>
        <argsstring></argsstring>
        <name>rt_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="115" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runtime_1_1_runtime_holder_1ae6ae8cff59755abf98bcbd6709e9652f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runtime::RuntimeHolder::owner_</definition>
        <argsstring></argsstring>
        <name>owner_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="116" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1ace49b9a788a03d478f4938c98cfd0ea6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::runtime::RuntimeHolder::RuntimeHolder</definition>
        <argsstring>(PointerType in_rt, bool in_owner=false)</argsstring>
        <name>RuntimeHolder</name>
        <param>
          <type><ref refid="structvt_1_1runtime_1_1_runtime_holder_1a9740e8aa7487fcf38b67a7e160d7b046" kindref="member">PointerType</ref></type>
          <declname>in_rt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_owner</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="66" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1aedf8343af437d6a295b40edaa61f1c84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::runtime::RuntimeHolder::RuntimeHolder</definition>
        <argsstring>(std::nullptr_t)</argsstring>
        <name>RuntimeHolder</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="69" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a593b417829e31b5d2698d30b6aed232f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::runtime::RuntimeHolder::RuntimeHolder</definition>
        <argsstring>(RuntimeHolder &amp;&amp;)=default</argsstring>
        <name>RuntimeHolder</name>
        <param>
          <type><ref refid="structvt_1_1runtime_1_1_runtime_holder" kindref="compound">RuntimeHolder</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a559e472b17957ee5ec83baf9af88972a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::runtime::RuntimeHolder::RuntimeHolder</definition>
        <argsstring>(RuntimeHolder const &amp;)=delete</argsstring>
        <name>RuntimeHolder</name>
        <param>
          <type><ref refid="structvt_1_1runtime_1_1_runtime_holder" kindref="compound">RuntimeHolder</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a835f3a9c7d875e05d4a8fffee0c1d430" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual vt::runtime::RuntimeHolder::~RuntimeHolder</definition>
        <argsstring>()</argsstring>
        <name>~RuntimeHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="73" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a07fbb75fca325419cea85801f7208f22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_holder" kindref="compound">RuntimeHolder</ref> &amp;</type>
        <definition>RuntimeHolder&amp; vt::runtime::RuntimeHolder::operator=</definition>
        <argsstring>(std::nullptr_t)</argsstring>
        <name>operator=</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="75" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a1a262aa7a539976d750c9c738e14c26f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::RuntimeHolder::operator==</definition>
        <argsstring>(RuntimeHolder const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structvt_1_1runtime_1_1_runtime_holder" kindref="compound">RuntimeHolder</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="76" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a78e7bc2a7179792a29a0603c78e75406" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::RuntimeHolder::operator!=</definition>
        <argsstring>(RuntimeHolder const &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="structvt_1_1runtime_1_1_runtime_holder" kindref="compound">RuntimeHolder</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="77" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1aa2fe6c7f3c4d55d44f182ae0a64edf97" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::RuntimeHolder::operator==</definition>
        <argsstring>(std::nullptr_t) const</argsstring>
        <name>operator==</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="78" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a7efa104bc201ac0fc143563358fd775a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::runtime::RuntimeHolder::operator!=</definition>
        <argsstring>(std::nullptr_t) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="79" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a93f32ba2688662a743a914241d44a5fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::runtime::RuntimeHolder::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="80" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a77b0ac53097a24b419cdd33193627b11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_holder" kindref="compound">RuntimeHolder</ref> &amp;</type>
        <definition>RuntimeHolder&amp; vt::runtime::RuntimeHolder::operator=</definition>
        <argsstring>(RuntimeHolder &amp;&amp;holder)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1runtime_1_1_runtime_holder" kindref="compound">RuntimeHolder</ref> &amp;&amp;</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="82" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="82" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1aacba0762fe099fb04faa1fb308c7782b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_holder_1a9740e8aa7487fcf38b67a7e160d7b046" kindref="member">PointerType</ref></type>
        <definition>PointerType vt::runtime::RuntimeHolder::unsafe</definition>
        <argsstring>()</argsstring>
        <name>unsafe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="95" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a63745eba0493db2bc670e633733ae908" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_holder_1a9740e8aa7487fcf38b67a7e160d7b046" kindref="member">PointerType</ref></type>
        <definition>PointerType vt::runtime::RuntimeHolder::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="96" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a3695fd20ff4f9058f34cb45e2b61232f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::RuntimeHolder::makeNonOwning</definition>
        <argsstring>()</argsstring>
        <name>makeNonOwning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="97" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="97" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a5b83161fd0866c5f9333856d06f589b4" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_holder_1a9740e8aa7487fcf38b67a7e160d7b046" kindref="member">PointerType</ref></type>
        <definition>PointerType vt::runtime::RuntimeHolder::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="100" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a81e625195b2cb4e8de12928a354a2114" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_holder_1a45aaa245b06497cfce58452b0d64b3fa" kindref="member">ReferenceType</ref></type>
        <definition>ReferenceType vt::runtime::RuntimeHolder::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="101" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a998a38cda3304389bed85af42ac0a8c2" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1runtime_1_1_runtime_holder_1a45aaa245b06497cfce58452b0d64b3fa" kindref="member">ReferenceType</ref></type>
        <definition>ReferenceType vt::runtime::RuntimeHolder::getRef</definition>
        <argsstring>() const</argsstring>
        <name>getRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="102" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1_runtime_holder_1a6a56c670252718c1533acafe6aa6a2c5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::RuntimeHolder::release</definition>
        <argsstring>()</argsstring>
        <name>release</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/runtime_holder.h" line="107" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="107" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2901">
        <label>vt::arguments::AppConfig</label>
        <link refid="structvt_1_1arguments_1_1_app_config"/>
      </node>
      <node id="2899">
        <label>vt::runtime::RuntimeHolder</label>
        <link refid="structvt_1_1runtime_1_1_runtime_holder"/>
        <childnode refid="2900" relation="usage">
          <edgelabel>rt_</edgelabel>
        </childnode>
      </node>
      <node id="2900">
        <label>vt::runtime::Runtime</label>
        <link refid="structvt_1_1runtime_1_1_runtime"/>
        <childnode refid="2901" relation="usage">
          <edgelabel>app_config_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/runtime/runtime_holder.h" line="62" column="1" bodyfile="src/vt/runtime/runtime_holder.h" bodystart="62" bodyend="117"/>
    <listofallmembers>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a5b83161fd0866c5f9333856d06f589b4" prot="private" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>get</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a998a38cda3304389bed85af42ac0a8c2" prot="private" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>getRef</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a3695fd20ff4f9058f34cb45e2b61232f" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>makeNonOwning</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a93f32ba2688662a743a914241d44a5fc" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>operator bool</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a78e7bc2a7179792a29a0603c78e75406" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>operator!=</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a7efa104bc201ac0fc143563358fd775a" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>operator!=</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a81e625195b2cb4e8de12928a354a2114" prot="private" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>operator*</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a63745eba0493db2bc670e633733ae908" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>operator-&gt;</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a07fbb75fca325419cea85801f7208f22" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>operator=</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a77b0ac53097a24b419cdd33193627b11" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>operator=</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a1a262aa7a539976d750c9c738e14c26f" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>operator==</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1aa2fe6c7f3c4d55d44f182ae0a64edf97" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>operator==</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1ae6ae8cff59755abf98bcbd6709e9652f" prot="private" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>owner_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a9740e8aa7487fcf38b67a7e160d7b046" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>PointerType</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a45aaa245b06497cfce58452b0d64b3fa" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>ReferenceType</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a6a56c670252718c1533acafe6aa6a2c5" prot="private" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>release</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a6b0f4efb09cd9dd6747aa5e8237e23ff" prot="private" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>rt_</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1ace49b9a788a03d478f4938c98cfd0ea6" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>RuntimeHolder</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1aedf8343af437d6a295b40edaa61f1c84" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>RuntimeHolder</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a593b417829e31b5d2698d30b6aed232f" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>RuntimeHolder</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a559e472b17957ee5ec83baf9af88972a" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>RuntimeHolder</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1aacba0762fe099fb04faa1fb308c7782b" prot="public" virt="non-virtual"><scope>vt::runtime::RuntimeHolder</scope><name>unsafe</name></member>
      <member refid="structvt_1_1runtime_1_1_runtime_holder_1a835f3a9c7d875e05d4a8fffee0c1d430" prot="public" virt="virtual"><scope>vt::runtime::RuntimeHolder</scope><name>~RuntimeHolder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
