<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1util_1_1json_1_1_appender" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::json::Appender</compoundname>
    <basecompoundref refid="structvt_1_1util_1_1json_1_1_base_appender" prot="public" virt="non-virtual">vt::util::json::BaseAppender</basecompoundref>
    <includes refid="json__appender_8h" local="no">json_appender.h</includes>
    <templateparamlist>
      <param>
        <type>typename StreamLike</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1util_1_1json_1_1_appender_1aa822e25e24db1cdea96f00b79f55f492" prot="public" static="no">
        <type>nlohmann::json</type>
        <definition>using vt::util::json::Appender&lt; StreamLike &gt;::jsonlib =  nlohmann::json</definition>
        <argsstring></argsstring>
        <name>jsonlib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="64" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1json_1_1_appender_1a26808926bcd93d8f2b7d3d6ec279cc95" prot="public" static="no">
        <type>nlohmann::detail::serializer&lt; <ref refid="structvt_1_1util_1_1json_1_1_appender_1aa822e25e24db1cdea96f00b79f55f492" kindref="member">jsonlib</ref> &gt;</type>
        <definition>using vt::util::json::Appender&lt; StreamLike &gt;::SerializerType =  nlohmann::detail::serializer&lt;jsonlib&gt;</definition>
        <argsstring></argsstring>
        <name>SerializerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="65" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1json_1_1_appender_1ae7a25e7544d8529cb466651fff13db0b" prot="public" static="no">
        <type><ref refid="structvt_1_1util_1_1json_1_1_output_adaptor" kindref="compound">util::json::OutputAdaptor</ref>&lt; StreamLike &gt;</type>
        <definition>using vt::util::json::Appender&lt; StreamLike &gt;::AdaptorType =  util::json::OutputAdaptor&lt;StreamLike&gt;</definition>
        <argsstring></argsstring>
        <name>AdaptorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="66" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_appender_1ab0078667ec1395e92014adc1aaa782e5" prot="private" static="no" mutable="no">
        <type>StreamLike</type>
        <definition>StreamLike vt::util::json::Appender&lt; StreamLike &gt;::os_</definition>
        <argsstring></argsstring>
        <name>os_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The stream to write to </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="169" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_appender_1a43e091b8545dc6a7664bddc38ffd4e77" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structvt_1_1util_1_1json_1_1_appender_1ae7a25e7544d8529cb466651fff13db0b" kindref="member">AdaptorType</ref> &gt;</type>
        <definition>std::shared_ptr&lt;AdaptorType&gt; vt::util::json::Appender&lt; StreamLike &gt;::oa_</definition>
        <argsstring></argsstring>
        <name>oa_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The output adaptor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="170" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_appender_1a1c035d54bb69b9bab1136eab1dd69263" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::util::json::Appender&lt; StreamLike &gt;::first_append</definition>
        <argsstring></argsstring>
        <name>first_append</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First append? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="171" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_appender_1aa34d4af41777c8f610e9c93b03a034de" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::util::json::Appender&lt; StreamLike &gt;::finished_</definition>
        <argsstring></argsstring>
        <name>finished_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is finished? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="172" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_appender_1a70d829fed542b8958636ba51a6ba2f89" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1util_1_1json_1_1_appender_1aa822e25e24db1cdea96f00b79f55f492" kindref="member">jsonlib</ref> &gt;</type>
        <definition>std::unique_ptr&lt;jsonlib&gt; vt::util::json::Appender&lt; StreamLike &gt;::staged_</definition>
        <argsstring></argsstring>
        <name>staged_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="173" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_appender_1a15e12f1886f1082d9c5d94a49fe82d49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::util::json::Appender&lt; StreamLike &gt;::Appender</definition>
        <argsstring>(std::string const &amp;array, std::string const &amp;schema_name, std::string const &amp;filename, bool compress)</argsstring>
        <name>Appender</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>schema_name</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>compress</declname>
        </param>
        <briefdescription>
<para>Construct a JSON appender for a specific array with a filename. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">array</parametername>
</parameternamelist>
<parameterdescription>
<para>the JSON array name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">schema_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the JSON schema name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the JSON filename </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">compress</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to compress the output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="76" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_appender_1a147c5dc636bf3e028e54e984d8cfa502" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::util::json::Appender&lt; StreamLike &gt;::Appender</definition>
        <argsstring>(std::string const &amp;array, std::string const &amp;schema_name, StreamLike in_os, bool compress)</argsstring>
        <name>Appender</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>schema_name</declname>
        </param>
        <param>
          <type>StreamLike</type>
          <declname>in_os</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>compress</declname>
        </param>
        <briefdescription>
<para>Construct a JSON appender for a specific array with a stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">array</parametername>
</parameternamelist>
<parameterdescription>
<para>the JSON array name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">schema_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the JSON schema name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">compress</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to compress the output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="91" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="91" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_appender_1a003145544b1a6a9013d69217528d2f4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::json::Appender&lt; StreamLike &gt;::addElm</definition>
        <argsstring>(jsonlib const &amp;in)</argsstring>
        <name>addElm</name>
        <param>
          <type><ref refid="structvt_1_1util_1_1json_1_1_appender_1aa822e25e24db1cdea96f00b79f55f492" kindref="member">jsonlib</ref> const &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Add an element to the JSON array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>the element to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="110" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="110" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_appender_1a8ba476b4b652c43fe6eecbc887c5bb6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::json::Appender&lt; StreamLike &gt;::stageObject</definition>
        <argsstring>(jsonlib const &amp;in)</argsstring>
        <name>stageObject</name>
        <param>
          <type><ref refid="structvt_1_1util_1_1json_1_1_appender_1aa822e25e24db1cdea96f00b79f55f492" kindref="member">jsonlib</ref> const &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Create an additional element in stages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>an object to stage </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="124" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="124" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_appender_1a1bec71bb4129153f778b4ab5ef9a1fa2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::json::Appender&lt; StreamLike &gt;::commitStaged</definition>
        <argsstring>()</argsstring>
        <name>commitStaged</name>
        <briefdescription>
<para>Commit a staged element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="141" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="141" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_appender_1ab56d332c2a9c5f051d58dbec6803b780" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StreamLike</type>
        <definition>StreamLike vt::util::json::Appender&lt; StreamLike &gt;::finish</definition>
        <argsstring>()</argsstring>
        <name>finish</name>
        <briefdescription>
<para>Finalize the output, closing the array, and flushing the stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="151" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="151" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_appender_1afc07753487e15d62f981c195d0ba6b17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual vt::util::json::Appender&lt; StreamLike &gt;::~Appender</definition>
        <argsstring>()</argsstring>
        <name>~Appender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_appender.h" line="162" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="162" bodyend="166"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Appends data to a JSON output stream by adding elements to a JSON array until it is destroyed. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="172">
        <label>vt::util::json::Appender&lt; StreamLike &gt;</label>
        <link refid="structvt_1_1util_1_1json_1_1_appender"/>
        <childnode refid="173" relation="public-inheritance">
        </childnode>
      </node>
      <node id="173">
        <label>vt::util::json::BaseAppender</label>
        <link refid="structvt_1_1util_1_1json_1_1_base_appender"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="174">
        <label>vt::util::json::Appender&lt; StreamLike &gt;</label>
        <link refid="structvt_1_1util_1_1json_1_1_appender"/>
        <childnode refid="175" relation="public-inheritance">
        </childnode>
      </node>
      <node id="175">
        <label>vt::util::json::BaseAppender</label>
        <link refid="structvt_1_1util_1_1json_1_1_base_appender"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/utils/json/json_appender.h" line="63" column="1" bodyfile="src/vt/utils/json/json_appender.h" bodystart="63" bodyend="174"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1ae7a25e7544d8529cb466651fff13db0b" prot="public" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>AdaptorType</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1a003145544b1a6a9013d69217528d2f4e" prot="public" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>addElm</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1a15e12f1886f1082d9c5d94a49fe82d49" prot="public" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>Appender</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1a147c5dc636bf3e028e54e984d8cfa502" prot="public" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>Appender</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1a1bec71bb4129153f778b4ab5ef9a1fa2" prot="public" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>commitStaged</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1ab56d332c2a9c5f051d58dbec6803b780" prot="public" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>finish</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1aa34d4af41777c8f610e9c93b03a034de" prot="private" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>finished_</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1a1c035d54bb69b9bab1136eab1dd69263" prot="private" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>first_append</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1aa822e25e24db1cdea96f00b79f55f492" prot="public" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>jsonlib</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1a43e091b8545dc6a7664bddc38ffd4e77" prot="private" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>oa_</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1ab0078667ec1395e92014adc1aaa782e5" prot="private" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>os_</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1a26808926bcd93d8f2b7d3d6ec279cc95" prot="public" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>SerializerType</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1a70d829fed542b8958636ba51a6ba2f89" prot="private" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>staged_</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1a8ba476b4b652c43fe6eecbc887c5bb6f" prot="public" virt="non-virtual"><scope>vt::util::json::Appender</scope><name>stageObject</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_appender_1afc07753487e15d62f981c195d0ba6b17" prot="public" virt="virtual"><scope>vt::util::json::Appender</scope><name>~Appender</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_base_appender_1ab8d386b5afc5bc34e35e075be0dcbfd1" prot="public" virt="virtual"><scope>vt::util::json::Appender</scope><name>~BaseAppender</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
