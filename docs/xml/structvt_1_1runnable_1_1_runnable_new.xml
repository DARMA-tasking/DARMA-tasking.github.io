<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1runnable_1_1_runnable_new" kind="struct" language="C++" prot="public">
    <compoundname>vt::runnable::RunnableNew</compoundname>
    <includes refid="runnable_8h" local="no">runnable.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1runnable_1_1_runnable_new_1a591a5eaee30eea99711e14e050633d34" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void(*)(Args...)</type>
        <definition>using vt::runnable::RunnableNew::FnParamType =  void(*)(Args...)</definition>
        <argsstring></argsstring>
        <name>FnParamType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="99" column="3" bodyfile="src/vt/runnable/runnable.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1runnable_1_1_runnable_new_1ad0cb55d8e34960ef9dd139638cb721cd" prot="public" static="no">
        <type>auto_registry::BaseHandlersDispatcherPtr::pointer</type>
        <definition>using vt::runnable::RunnableNew::DispatcherType =  auto_registry::BaseHandlersDispatcherPtr::pointer</definition>
        <argsstring></argsstring>
        <name>DispatcherType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="100" column="3" bodyfile="src/vt/runnable/runnable.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1runnable_1_1_runnable_new_1a1e5173d3a71a30f4901c61b7de4092c6" prot="public" static="no">
        <type>auto_registry::BaseScatterDispatcherPtr::pointer</type>
        <definition>using vt::runnable::RunnableNew::DispatcherScatterType =  auto_registry::BaseScatterDispatcherPtr::pointer</definition>
        <argsstring></argsstring>
        <name>DispatcherScatterType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="101" column="3" bodyfile="src/vt/runnable/runnable.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_new_1a067b986e570ea6cb09eeb46720b27971" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1runnable_1_1detail_1_1_contexts" kindref="compound">detail::Contexts</ref></type>
        <definition>detail::Contexts vt::runnable::RunnableNew::contexts_</definition>
        <argsstring></argsstring>
        <name>contexts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The contexts <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="362" column="20" bodyfile="src/vt/runnable/runnable.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_new_1a1998ba5d1d29bada29c94d884f906d11" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; <ref refid="namespacevt_1a44d0d4e144748f2b19a1cfd962f50338" kindref="member">BaseMsgType</ref> &gt;</type>
        <definition>MsgSharedPtr&lt;BaseMsgType&gt; vt::runnable::RunnableNew::msg_</definition>
        <argsstring></argsstring>
        <name>msg_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The associated message </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="363" column="16" bodyfile="src/vt/runnable/runnable.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_new_1ab0588268b7cc8acb15c705e14331ae0c" prot="private" static="no" mutable="no">
        <type>std::byte *</type>
        <definition>std::byte* vt::runnable::RunnableNew::obj_</definition>
        <argsstring></argsstring>
        <name>obj_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object pointer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="364" column="13" bodyfile="src/vt/runnable/runnable.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_new_1ae40d0afb4b6af9959c9d554fcfe67cb6" prot="private" static="no" mutable="no">
        <type>union vt::runnable::RunnableNew::@2</type>
        <definition>union vt::runnable::RunnableNew::@2 vt::runnable::RunnableNew::f_</definition>
        <argsstring></argsstring>
        <name>f_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="368" column="6"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_new_1a5ab5b788e1b0a989be9c1bd62f58af1d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runnable::RunnableNew::is_scatter_</definition>
        <argsstring></argsstring>
        <name>is_scatter_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="369" column="8" bodyfile="src/vt/runnable/runnable.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_new_1ac73d475f0e3e8aeebb28caefcbcf60e8" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_new_1ad0cb55d8e34960ef9dd139638cb721cd" kindref="member">DispatcherType</ref></type>
        <definition>DispatcherType vt::runnable::RunnableNew::func_</definition>
        <argsstring></argsstring>
        <name>func_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="366" column="20" bodyfile="src/vt/runnable/runnable.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_new_1a0efbf8e5086cf724b0fd0318f9433d8c" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_new_1a1e5173d3a71a30f4901c61b7de4092c6" kindref="member">DispatcherScatterType</ref></type>
        <definition>DispatcherScatterType vt::runnable::RunnableNew::func_scat_</definition>
        <argsstring></argsstring>
        <name>func_scat_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="367" column="27" bodyfile="src/vt/runnable/runnable.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a89c5a19ee5a150199c46801c876d39e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vt::runnable::RunnableNew::RunnableNew</definition>
        <argsstring>(MsgSharedPtr&lt; U &gt; const &amp;in_msg, [[maybe_unused]] bool in_is_threaded)</argsstring>
        <name>RunnableNew</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; U &gt; const &amp;</type>
          <declname>in_msg</declname>
        </param>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] bool</type>
          <declname>in_is_threaded</declname>
        </param>
        <briefdescription>
<para>Construct a new <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref></computeroutput> with a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to pass to the task </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_is_threaded</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the handler can be run with a thread </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="110" column="3" bodyfile="src/vt/runnable/runnable.h" bodystart="110" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a55ff785753c781903bf932a1e5faddd7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::runnable::RunnableNew::RunnableNew</definition>
        <argsstring>(bool in_is_threaded)</argsstring>
        <name>RunnableNew</name>
        <param>
          <type>bool</type>
          <declname>in_is_threaded</declname>
        </param>
        <briefdescription>
<para>Construct a new <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref></computeroutput> without a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_is_threaded</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the handler can be run with a thread </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="124" column="12" bodyfile="src/vt/runnable/runnable.h" bodystart="124" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1ac7e1d836710c2d0cd2791f1a1c5ac03c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::runnable::RunnableNew::RunnableNew</definition>
        <argsstring>(RunnableNew &amp;&amp;)=default</argsstring>
        <name>RunnableNew</name>
        <param>
          <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="132" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a4c34cf076ffd914c3d18aca7d2ff28db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::runnable::RunnableNew::RunnableNew</definition>
        <argsstring>(RunnableNew const &amp;)=delete</argsstring>
        <name>RunnableNew</name>
        <param>
          <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="133" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a12c7ddbd735a9bf704b06ecea7c26e60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> &amp;</type>
        <definition>RunnableNew&amp; vt::runnable::RunnableNew::operator=</definition>
        <argsstring>(RunnableNew const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="134" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a3561cbcbc3197074cded8da204e98924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> &amp;</type>
        <definition>RunnableNew&amp; vt::runnable::RunnableNew::operator=</definition>
        <argsstring>(RunnableNew &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="135" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a37c77d1949cd1590b74d286814bed1ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::addContextSetContext</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>addContextSetContext</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Add a new <computeroutput>SetContext</computeroutput> for this handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to build the context, forwarded to constructor of <computeroutput>T</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="145" column="8" bodyfile="src/vt/runnable/runnable.impl.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1ac2480a813d1adc735051314093b91e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::addContextTD</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>addContextTD</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Add a new <computeroutput>TD</computeroutput> for this handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to build the context, forwarded to constructor of <computeroutput>T</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="154" column="8" bodyfile="src/vt/runnable/runnable.impl.h" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a0c551ef0da74a3b29028e390a5e15400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::addContextCont</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>addContextCont</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Add a new <computeroutput>Cont</computeroutput> for this handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to build the context, forwarded to constructor of <computeroutput>T</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="163" column="8" bodyfile="src/vt/runnable/runnable.impl.h" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1aa9c078712f8f2321bd247ffbccc8049a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::addContextCol</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>addContextCol</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Add a new <computeroutput>Col</computeroutput> for this handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to build the context, forwarded to constructor of <computeroutput>T</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="172" column="8" bodyfile="src/vt/runnable/runnable.impl.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a9c4377c29d2c8f1e3b85488038f31bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::addContextLB</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>addContextLB</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Add a new <computeroutput>LB</computeroutput> for this handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to build the context, forwarded to constructor of <computeroutput>T</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="181" column="8" bodyfile="src/vt/runnable/runnable.impl.h" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1aa494c41e589866c5a7f1669a5c2472b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::setupHandlerElement</definition>
        <argsstring>(vrt::collection::UntypedCollection *elm, HandlerType handler)</argsstring>
        <name>setupHandlerElement</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_untyped_collection" kindref="compound">vrt::collection::UntypedCollection</ref> *</type>
          <declname>elm</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Set up a handler to run on an collection object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">elm</parametername>
</parameternamelist>
<parameterdescription>
<para>the object pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler ID bits </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="200" column="8" bodyfile="src/vt/runnable/runnable.cc" bodystart="87" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1abdb77505f39b813b866d4bb3af0be38f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::setupHandlerObjGroup</definition>
        <argsstring>(std::byte *obj, HandlerType handler)</argsstring>
        <name>setupHandlerObjGroup</name>
        <param>
          <type>std::byte *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Set up a handler to run on an object group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">elm</parametername>
</parameternamelist>
<parameterdescription>
<para>the object pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler ID bits </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="210" column="8" bodyfile="src/vt/runnable/runnable.cc" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1aeaec7cf81fe97f2d6b57f35dbd408b5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::setupHandlerElement</definition>
        <argsstring>(vrt::VirtualContext *elm, HandlerType handler)</argsstring>
        <name>setupHandlerElement</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1_virtual_context" kindref="compound">vrt::VirtualContext</ref> *</type>
          <declname>elm</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Set up a handler to run on an non-collection object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">elm</parametername>
</parameternamelist>
<parameterdescription>
<para>the object pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler ID bits </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="218" column="8" bodyfile="src/vt/runnable/runnable.cc" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1ab95b9552fe304366b21421ded2b795dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::setupHandler</definition>
        <argsstring>(HandlerType handler)</argsstring>
        <name>setupHandler</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Set up a basic handler to run. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler ID bits </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="225" column="8" bodyfile="src/vt/runnable/runnable.cc" bodystart="56" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a3fa6c8ee2214c074c748000f782ad793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <briefdescription>
<para>Run the task! </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If the runnable is non-threaded, <computeroutput>isDone()</computeroutput> will be <computeroutput>true</computeroutput> after this runs. If it is threaded, it might suspend and the runnable might have more work to complete. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="234" column="8" bodyfile="src/vt/runnable/runnable.cc" bodystart="104" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a9bc943e7d924be528d2a0c02af3850c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callable</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) vt::runnable::RunnableNew::runLambda</definition>
        <argsstring>(Callable &amp;&amp;c, Args &amp;&amp;... args)</argsstring>
        <name>runLambda</name>
        <param>
          <type>Callable &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Run the task as a lambda! </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="240" column="12" bodyfile="src/vt/runnable/runnable.h" bodystart="240" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1aa7e06ec59e7376d1d01dfa6ab9a9563b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::send</definition>
        <argsstring>(elm::ElementIDStruct elm, MsgSizeType bytes)</argsstring>
        <name>send</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">elm::ElementIDStruct</ref></type>
          <declname>elm</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a408e86a8c7c89309b52907dc5a513924" kindref="member">MsgSizeType</ref></type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>Loop through all contexts add run the <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new_1aa7e06ec59e7376d1d01dfa6ab9a9563b" kindref="member">send()</ref></computeroutput> method associated with this runnable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dest</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination element for the send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>the message size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="303" column="8" bodyfile="src/vt/runnable/runnable.cc" bodystart="249" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a140176f3b035d504ad1e726e3c7b09fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* vt::runnable::RunnableNew::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
<para>Get a context object by the type <computeroutput>T</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If the type doesn&apos;t exist, the function will return <computeroutput>nullptr</computeroutput> </para>
</simplesect>
<simplesect kind="return"><para>the pointer to the context object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="313" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1aed655dff826a821a3db9162259f33288" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a44d0d4e144748f2b19a1cfd962f50338" kindref="member">BaseMsgType</ref> *</type>
        <definition>BaseMsgType* vt::runnable::RunnableNew::getMsg</definition>
        <argsstring>() const</argsstring>
        <name>getMsg</name>
        <briefdescription>
<para>Get the message associated with the runnable. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Returns a non-owning pointer to message</para>
</simplesect>
<simplesect kind="return"><para>the message </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="322" column="15" bodyfile="src/vt/runnable/runnable.h" bodystart="322" bodyend="322"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1aa02ba804a06924c5aac52d3361509298" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::start</definition>
        <argsstring>(TimeType time)</argsstring>
        <name>start</name>
        <param>
          <type><ref refid="namespacevt_1a2b9f28078dc309ad0706b69ded743e69" kindref="member">TimeType</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Loop through all the contexts associated with this runnable and invoke <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new_1aa02ba804a06924c5aac52d3361509298" kindref="member">start()</ref></computeroutput> on them. </para>
        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="275" column="8" bodyfile="src/vt/runnable/runnable.cc" bodystart="202" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a089297ae1be6e7bf33ae28611b12db17" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::finish</definition>
        <argsstring>(TimeType time)</argsstring>
        <name>finish</name>
        <param>
          <type><ref refid="namespacevt_1a2b9f28078dc309ad0706b69ded743e69" kindref="member">TimeType</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Loop through all the contexts associated with this runnable and invoke <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new_1a089297ae1be6e7bf33ae28611b12db17" kindref="member">finish()</ref></computeroutput> on them. </para>
        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="281" column="8" bodyfile="src/vt/runnable/runnable.cc" bodystart="212" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a3f3a4b5897430e613b827b8da414ee9c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::suspend</definition>
        <argsstring>(TimeType time)</argsstring>
        <name>suspend</name>
        <param>
          <type><ref refid="namespacevt_1a2b9f28078dc309ad0706b69ded743e69" kindref="member">TimeType</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Loop through all the contexts associated with this runnable and invoke <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new_1a3f3a4b5897430e613b827b8da414ee9c" kindref="member">suspend()</ref></computeroutput> on them. </para>
        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="287" column="8" bodyfile="src/vt/runnable/runnable.cc" bodystart="223" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a6ee6d1cfc510876725cfb32e364c5ee9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::resume</definition>
        <argsstring>(TimeType time)</argsstring>
        <name>resume</name>
        <param>
          <type><ref refid="namespacevt_1a2b9f28078dc309ad0706b69ded743e69" kindref="member">TimeType</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Loop through all the contexts associated with this runnable and invoke <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new_1a6ee6d1cfc510876725cfb32e364c5ee9" kindref="member">resume()</ref></computeroutput> on them. </para>
        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="293" column="8" bodyfile="src/vt/runnable/runnable.cc" bodystart="236" bodyend="247"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a5d8c6436fb1652aa48d9b46798a068e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * vt::runnable::RunnableNew::operator new</definition>
        <argsstring>(std::size_t sz)</argsstring>
        <name>operator new</name>
        <param>
          <type>std::size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>Operator new for runnables targeting pool. </para>
        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sz</parametername>
</parameternamelist>
<parameterdescription>
<para>the allocation size</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new allocation </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="352" column="15" bodyfile="src/vt/runnable/runnable.cc" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a1e5a02fffcec8b10eb11666a1e0f4120" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::operator delete</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Operator develop for runnables. </para>
        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="359" column="15" bodyfile="src/vt/runnable/runnable.cc" bodystart="257" bodyend="259"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds a runnable active handler along with all the context associated with it to run it independently of the where in the stack it was created. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="10">
        <label>vt::ctx::TD</label>
        <link refid="structvt_1_1ctx_1_1_t_d"/>
        <childnode refid="11" relation="usage">
          <edgelabel>ep_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>vt::elm::ElementIDStruct</label>
        <link refid="structvt_1_1elm_1_1_element_i_d_struct"/>
      </node>
      <node id="11">
        <label>vt::epoch::EpochType</label>
        <link refid="structvt_1_1epoch_1_1_epoch_type"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>vt::ctx::SetContext</label>
        <link refid="structvt_1_1ctx_1_1_set_context"/>
        <childnode refid="8" relation="usage">
          <edgelabel>cur_task_</edgelabel>
          <edgelabel>prev_task_</edgelabel>
          <edgelabel>suspended_task_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>vt::elm::ElementLBData</label>
        <link refid="structvt_1_1elm_1_1_element_l_b_data"/>
        <childnode refid="5" relation="usage">
          <edgelabel>cur_time_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>vt::runnable::detail::Contexts</label>
        <link refid="structvt_1_1runnable_1_1detail_1_1_contexts"/>
        <childnode refid="3" relation="usage">
          <edgelabel>lb</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>setcontext</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>cont</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>td</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>vt::TimeTypeWrapper</label>
        <link refid="structvt_1_1_time_type_wrapper"/>
      </node>
      <node id="9">
        <label>vt::ctx::Continuation</label>
        <link refid="structvt_1_1ctx_1_1_continuation"/>
      </node>
      <node id="8">
        <label>vt::util::ptr::ObserverPtr&lt; vt::runnable::RunnableNew &gt;</label>
        <link refid="structvt_1_1util_1_1ptr_1_1_observer_ptr"/>
      </node>
      <node id="3">
        <label>vt::ctx::LBData</label>
        <link refid="structvt_1_1ctx_1_1_l_b_data"/>
        <childnode refid="4" relation="usage">
          <edgelabel>lb_data_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>cur_elm_id_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>vt::runnable::RunnableNew</label>
        <link refid="structvt_1_1runnable_1_1_runnable_new"/>
        <childnode refid="2" relation="usage">
          <edgelabel>contexts_</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>msg_</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>vt::messaging::MsgSharedPtr&lt; vt::messaging::ActiveMsg &gt;</label>
        <link refid="structvt_1_1messaging_1_1_msg_shared_ptr"/>
      </node>
      <node id="12">
        <label>Strong&lt; detail::EpochImplType, detail::no_epoch_impl, detail::EpochImplTag &gt;</label>
        <link refid="structvt_1_1util_1_1strong_1_1detail_1_1_strong"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/runnable/runnable.h" line="97" column="1" bodyfile="src/vt/runnable/runnable.h" bodystart="97" bodyend="376"/>
    <listofallmembers>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1aa9c078712f8f2321bd247ffbccc8049a" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>addContextCol</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a0c551ef0da74a3b29028e390a5e15400" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>addContextCont</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a9c4377c29d2c8f1e3b85488038f31bdf" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>addContextLB</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a37c77d1949cd1590b74d286814bed1ef" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>addContextSetContext</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1ac2480a813d1adc735051314093b91e1d" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>addContextTD</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a067b986e570ea6cb09eeb46720b27971" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>contexts_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a1e5173d3a71a30f4901c61b7de4092c6" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>DispatcherScatterType</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1ad0cb55d8e34960ef9dd139638cb721cd" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>DispatcherType</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1ae40d0afb4b6af9959c9d554fcfe67cb6" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>f_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a089297ae1be6e7bf33ae28611b12db17" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>finish</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a591a5eaee30eea99711e14e050633d34" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>FnParamType</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1ac73d475f0e3e8aeebb28caefcbcf60e8" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>func_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a0efbf8e5086cf724b0fd0318f9433d8c" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>func_scat_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a140176f3b035d504ad1e726e3c7b09fa" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>get</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1aed655dff826a821a3db9162259f33288" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>getMsg</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a5ab5b788e1b0a989be9c1bd62f58af1d" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>is_scatter_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a1998ba5d1d29bada29c94d884f906d11" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>msg_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1ab0588268b7cc8acb15c705e14331ae0c" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>obj_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a1e5a02fffcec8b10eb11666a1e0f4120" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>operator delete</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a5d8c6436fb1652aa48d9b46798a068e5" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>operator new</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a12c7ddbd735a9bf704b06ecea7c26e60" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>operator=</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a3561cbcbc3197074cded8da204e98924" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>operator=</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a6ee6d1cfc510876725cfb32e364c5ee9" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>resume</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a3fa6c8ee2214c074c748000f782ad793" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>run</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a9bc943e7d924be528d2a0c02af3850c8" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>runLambda</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a89c5a19ee5a150199c46801c876d39e7" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>RunnableNew</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a55ff785753c781903bf932a1e5faddd7" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>RunnableNew</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1ac7e1d836710c2d0cd2791f1a1c5ac03c" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>RunnableNew</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a4c34cf076ffd914c3d18aca7d2ff28db" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>RunnableNew</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1aa7e06ec59e7376d1d01dfa6ab9a9563b" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>send</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1ab95b9552fe304366b21421ded2b795dc" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>setupHandler</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1aa494c41e589866c5a7f1669a5c2472b0" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>setupHandlerElement</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1aeaec7cf81fe97f2d6b57f35dbd408b5e" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>setupHandlerElement</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1abdb77505f39b813b866d4bb3af0be38f" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>setupHandlerObjGroup</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1aa02ba804a06924c5aac52d3361509298" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>start</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a3f3a4b5897430e613b827b8da414ee9c" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>suspend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
