<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1runnable_1_1_runnable_new" kind="struct" language="C++" prot="public">
    <compoundname>vt::runnable::RunnableNew</compoundname>
    <includes refid="runnable_8h" local="no">runnable.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1runnable_1_1_runnable_new_1a591a5eaee30eea99711e14e050633d34" prot="public" static="no">
        <type>void(*)(Args...)</type>
        <definition>using vt::runnable::RunnableNew::FnParamType =  void(*)(Args...)</definition>
        <argsstring></argsstring>
        <name>FnParamType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="98" column="1" bodyfile="src/vt/runnable/runnable.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_new_1a067b986e570ea6cb09eeb46720b27971" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1runnable_1_1detail_1_1_contexts" kindref="compound">detail::Contexts</ref></type>
        <definition>detail::Contexts vt::runnable::RunnableNew::contexts_</definition>
        <argsstring></argsstring>
        <name>contexts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The contexts </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="335" column="1" bodyfile="src/vt/runnable/runnable.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_new_1a1998ba5d1d29bada29c94d884f906d11" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; <ref refid="namespacevt_1a44d0d4e144748f2b19a1cfd962f50338" kindref="member">BaseMsgType</ref> &gt;</type>
        <definition>MsgSharedPtr&lt;BaseMsgType&gt; vt::runnable::RunnableNew::msg_</definition>
        <argsstring></argsstring>
        <name>msg_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The associated message </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="336" column="1" bodyfile="src/vt/runnable/runnable.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_new_1a8216711b400b7c1f36c5a9bafaa7133e" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
        <definition>ActionType vt::runnable::RunnableNew::task_</definition>
        <argsstring></argsstring>
        <name>task_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The runnable&apos;s task </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="337" column="1" bodyfile="src/vt/runnable/runnable.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a47b84af69a5444b9d837a3ffe4d4792b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vt::runnable::RunnableNew::RunnableNew</definition>
        <argsstring>(MsgSharedPtr&lt; U &gt; const &amp;in_msg, bool in_is_threaded)</argsstring>
        <name>RunnableNew</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; U &gt; const &amp;</type>
          <declname>in_msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_is_threaded</declname>
        </param>
        <briefdescription>
<para>Construct a new <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref></computeroutput> with a message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to pass to the task </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_is_threaded</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the handler can be run with a thread </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="107" column="1" bodyfile="src/vt/runnable/runnable.h" bodystart="107" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a55ff785753c781903bf932a1e5faddd7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::runnable::RunnableNew::RunnableNew</definition>
        <argsstring>(bool in_is_threaded)</argsstring>
        <name>RunnableNew</name>
        <param>
          <type>bool</type>
          <declname>in_is_threaded</declname>
        </param>
        <briefdescription>
<para>Construct a new <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref></computeroutput> without a message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_is_threaded</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the handler can be run with a thread </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="119" column="1" bodyfile="src/vt/runnable/runnable.h" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1ac7e1d836710c2d0cd2791f1a1c5ac03c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::runnable::RunnableNew::RunnableNew</definition>
        <argsstring>(RunnableNew &amp;&amp;)=default</argsstring>
        <name>RunnableNew</name>
        <param>
          <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a4c34cf076ffd914c3d18aca7d2ff28db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::runnable::RunnableNew::RunnableNew</definition>
        <argsstring>(RunnableNew const &amp;)=delete</argsstring>
        <name>RunnableNew</name>
        <param>
          <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a12c7ddbd735a9bf704b06ecea7c26e60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> &amp;</type>
        <definition>RunnableNew&amp; vt::runnable::RunnableNew::operator=</definition>
        <argsstring>(RunnableNew const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a3561cbcbc3197074cded8da204e98924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> &amp;</type>
        <definition>RunnableNew&amp; vt::runnable::RunnableNew::operator=</definition>
        <argsstring>(RunnableNew &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a37c77d1949cd1590b74d286814bed1ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::addContextSetContext</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>addContextSetContext</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Add a new <computeroutput>SetContext</computeroutput> for this handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to build the context, forwarded to constructor of <computeroutput>T</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="138" column="1" bodyfile="src/vt/runnable/runnable.impl.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1ac2480a813d1adc735051314093b91e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::addContextTD</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>addContextTD</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Add a new <computeroutput>TD</computeroutput> for this handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to build the context, forwarded to constructor of <computeroutput>T</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="147" column="1" bodyfile="src/vt/runnable/runnable.impl.h" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a0c551ef0da74a3b29028e390a5e15400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::addContextCont</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>addContextCont</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Add a new <computeroutput>Cont</computeroutput> for this handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to build the context, forwarded to constructor of <computeroutput>T</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="156" column="1" bodyfile="src/vt/runnable/runnable.impl.h" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1aa9c078712f8f2321bd247ffbccc8049a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::addContextCol</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>addContextCol</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Add a new <computeroutput>Col</computeroutput> for this handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to build the context, forwarded to constructor of <computeroutput>T</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="165" column="1" bodyfile="src/vt/runnable/runnable.impl.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a9c4377c29d2c8f1e3b85488038f31bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::addContextLB</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>addContextLB</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Add a new <computeroutput>LB</computeroutput> for this handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to build the context, forwarded to constructor of <computeroutput>T</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="174" column="1" bodyfile="src/vt/runnable/runnable.impl.h" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1aa494c41e589866c5a7f1669a5c2472b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::setupHandlerElement</definition>
        <argsstring>(vrt::collection::UntypedCollection *elm, HandlerType handler)</argsstring>
        <name>setupHandlerElement</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_untyped_collection" kindref="compound">vrt::collection::UntypedCollection</ref> *</type>
          <declname>elm</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Set up a handler to run on an collection object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">elm</parametername>
</parameternamelist>
<parameterdescription>
<para>the object pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler ID bits </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="193" column="1" bodyfile="src/vt/runnable/runnable.cc" bodystart="118" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1aeaec7cf81fe97f2d6b57f35dbd408b5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::setupHandlerElement</definition>
        <argsstring>(vrt::VirtualContext *elm, HandlerType handler)</argsstring>
        <name>setupHandlerElement</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1_virtual_context" kindref="compound">vrt::VirtualContext</ref> *</type>
          <declname>elm</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Set up a handler to run on an non-collection object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">elm</parametername>
</parameternamelist>
<parameterdescription>
<para>the object pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler ID bits </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="203" column="1" bodyfile="src/vt/runnable/runnable.cc" bodystart="128" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a87dbcf42b8723a70c174803afcdb1b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::setupHandler</definition>
        <argsstring>(HandlerType handler, bool is_void=false)</argsstring>
        <name>setupHandler</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_void</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Set up a basic handler to run. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler ID bits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_void</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it&apos;s a void handler w/o an associated message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="211" column="1" bodyfile="src/vt/runnable/runnable.cc" bodystart="56" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a3fa6c8ee2214c074c748000f782ad793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <briefdescription>
<para>Run the task! </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If the runnable is non-threaded, <computeroutput>isDone()</computeroutput> will be <computeroutput>true</computeroutput> after this runs. If it is threaded, it might suspend and the runnable might have more work to complete. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="220" column="1" bodyfile="src/vt/runnable/runnable.cc" bodystart="135" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1aa7e06ec59e7376d1d01dfa6ab9a9563b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::send</definition>
        <argsstring>(elm::ElementIDStruct elm, MsgSizeType bytes)</argsstring>
        <name>send</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">elm::ElementIDStruct</ref></type>
          <declname>elm</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a408e86a8c7c89309b52907dc5a513924" kindref="member">MsgSizeType</ref></type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>Loop through all contexts add run the <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new_1aa7e06ec59e7376d1d01dfa6ab9a9563b" kindref="member">send()</ref></computeroutput> method associated with this runnable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dest</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination element for the send </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>the message size </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="267" column="1" bodyfile="src/vt/runnable/runnable.cc" bodystart="262" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a140176f3b035d504ad1e726e3c7b09fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* vt::runnable::RunnableNew::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
<para>Get a context object by the type <computeroutput>T</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If the type doesn&apos;t exist, the function will return <computeroutput>nullptr</computeroutput> </para></simplesect>
<simplesect kind="return"><para>the pointer to the context object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1aed655dff826a821a3db9162259f33288" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a44d0d4e144748f2b19a1cfd962f50338" kindref="member">BaseMsgType</ref> *</type>
        <definition>BaseMsgType* vt::runnable::RunnableNew::getMsg</definition>
        <argsstring>() const</argsstring>
        <name>getMsg</name>
        <briefdescription>
<para>Get the message associated with the runnable. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Returns a non-owning pointer to message</para></simplesect>
<simplesect kind="return"><para>the message </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="286" column="1" bodyfile="src/vt/runnable/runnable.h" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1aa30544adc03798c988a5e3bea2bfa3f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::setExplicitTask</definition>
        <argsstring>(ActionType task_in)</argsstring>
        <name>setExplicitTask</name>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>task_in</declname>
        </param>
        <briefdescription>
<para>Set an explicit task for the runnable bypassing the handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">task_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the task </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="314" column="1" bodyfile="src/vt/runnable/runnable.h" bodystart="314" bodyend="316"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1adf45fe8ba5154d97455bccd8d8a3e2c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
<para>Loop through all the contexts associated with this runnable and invoke <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new_1adf45fe8ba5154d97455bccd8d8a3e2c9" kindref="member">start()</ref></computeroutput> on them. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="239" column="1" bodyfile="src/vt/runnable/runnable.cc" bodystart="215" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a44e2f15795876230e49c343b64c1414c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::finish</definition>
        <argsstring>()</argsstring>
        <name>finish</name>
        <briefdescription>
<para>Loop through all the contexts associated with this runnable and invoke <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new_1a44e2f15795876230e49c343b64c1414c" kindref="member">finish()</ref></computeroutput> on them. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="245" column="1" bodyfile="src/vt/runnable/runnable.cc" bodystart="225" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1aaeb0fefa5654a01600da2e0910f69ca7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::suspend</definition>
        <argsstring>()</argsstring>
        <name>suspend</name>
        <briefdescription>
<para>Loop through all the contexts associated with this runnable and invoke <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new_1aaeb0fefa5654a01600da2e0910f69ca7" kindref="member">suspend()</ref></computeroutput> on them. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="251" column="1" bodyfile="src/vt/runnable/runnable.cc" bodystart="236" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a4d38f8f4d413457a40f134a57480449d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::resume</definition>
        <argsstring>()</argsstring>
        <name>resume</name>
        <briefdescription>
<para>Loop through all the contexts associated with this runnable and invoke <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new_1a4d38f8f4d413457a40f134a57480449d" kindref="member">resume()</ref></computeroutput> on them. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="257" column="1" bodyfile="src/vt/runnable/runnable.cc" bodystart="249" bodyend="260"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a5d8c6436fb1652aa48d9b46798a068e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * vt::runnable::RunnableNew::operator new</definition>
        <argsstring>(std::size_t sz)</argsstring>
        <name>operator new</name>
        <param>
          <type>std::size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>Operator new for runnables targeting pool. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sz</parametername>
</parameternamelist>
<parameterdescription>
<para>the allocation size</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new allocation </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="325" column="1" bodyfile="src/vt/runnable/runnable.cc" bodystart="266" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_new_1a1e5a02fffcec8b10eb11666a1e0f4120" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableNew::operator delete</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Operator develop for runnables. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.h" line="332" column="1" bodyfile="src/vt/runnable/runnable.cc" bodystart="270" bodyend="272"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds a runnable active handler along with all the context associated with it to run it independently of the where in the stack it was created. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3671">
        <label>vt::ctx::TD</label>
        <link refid="structvt_1_1ctx_1_1_t_d"/>
        <childnode refid="3672" relation="usage">
          <edgelabel>ep_</edgelabel>
        </childnode>
      </node>
      <node id="3674">
        <label>T</label>
      </node>
      <node id="3667">
        <label>vt::elm::ElementIDStruct</label>
        <link refid="structvt_1_1elm_1_1_element_i_d_struct"/>
      </node>
      <node id="3672">
        <label>vt::epoch::EpochType</label>
        <link refid="structvt_1_1epoch_1_1_epoch_type"/>
        <childnode refid="3673" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3668">
        <label>vt::ctx::SetContext</label>
        <link refid="structvt_1_1ctx_1_1_set_context"/>
        <childnode refid="3669" relation="usage">
          <edgelabel>suspended_task_</edgelabel>
          <edgelabel>cur_task_</edgelabel>
          <edgelabel>prev_task_</edgelabel>
        </childnode>
      </node>
      <node id="3677">
        <label>vt::messaging::MsgPtrImplBase</label>
        <link refid="structvt_1_1messaging_1_1_msg_ptr_impl_base"/>
      </node>
      <node id="3676">
        <label>vt::messaging::BaseMsg</label>
        <link refid="structvt_1_1messaging_1_1_base_msg"/>
      </node>
      <node id="3666">
        <label>vt::elm::ElementLBData</label>
        <link refid="structvt_1_1elm_1_1_element_l_b_data"/>
      </node>
      <node id="3664">
        <label>vt::runnable::detail::Contexts</label>
        <link refid="structvt_1_1runnable_1_1detail_1_1_contexts"/>
        <childnode refid="3665" relation="usage">
          <edgelabel>lb</edgelabel>
        </childnode>
        <childnode refid="3668" relation="usage">
          <edgelabel>setcontext</edgelabel>
        </childnode>
        <childnode refid="3670" relation="usage">
          <edgelabel>cont</edgelabel>
        </childnode>
        <childnode refid="3671" relation="usage">
          <edgelabel>td</edgelabel>
        </childnode>
      </node>
      <node id="3670">
        <label>vt::ctx::Continuation</label>
        <link refid="structvt_1_1ctx_1_1_continuation"/>
      </node>
      <node id="3669">
        <label>vt::util::ptr::ObserverPtr&lt; vt::runnable::RunnableNew &gt;</label>
        <link refid="structvt_1_1util_1_1ptr_1_1_observer_ptr"/>
        <childnode refid="3663" relation="usage">
          <edgelabel>p_</edgelabel>
        </childnode>
      </node>
      <node id="3665">
        <label>vt::ctx::LBData</label>
        <link refid="structvt_1_1ctx_1_1_l_b_data"/>
        <childnode refid="3666" relation="usage">
          <edgelabel>lb_data_</edgelabel>
        </childnode>
        <childnode refid="3667" relation="usage">
          <edgelabel>cur_elm_id_</edgelabel>
        </childnode>
      </node>
      <node id="3663">
        <label>vt::runnable::RunnableNew</label>
        <link refid="structvt_1_1runnable_1_1_runnable_new"/>
        <childnode refid="3664" relation="usage">
          <edgelabel>contexts_</edgelabel>
        </childnode>
        <childnode refid="3675" relation="usage">
          <edgelabel>msg_</edgelabel>
        </childnode>
      </node>
      <node id="3675">
        <label>vt::messaging::MsgSharedPtr&lt; vt::messaging::ActiveMsg &gt;</label>
        <link refid="structvt_1_1messaging_1_1_msg_shared_ptr"/>
        <childnode refid="3676" relation="usage">
          <edgelabel>ptr_</edgelabel>
        </childnode>
        <childnode refid="3677" relation="usage">
          <edgelabel>impl_</edgelabel>
        </childnode>
      </node>
      <node id="3673">
        <label>Strong&lt; detail::EpochImplType, detail::no_epoch_impl, detail::EpochImplTag &gt;</label>
        <link refid="structvt_1_1util_1_1strong_1_1detail_1_1_strong"/>
        <childnode refid="3674" relation="usage">
          <edgelabel>v_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/runnable/runnable.h" line="96" column="1" bodyfile="src/vt/runnable/runnable.h" bodystart="96" bodyend="344"/>
    <listofallmembers>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1aa9c078712f8f2321bd247ffbccc8049a" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>addContextCol</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a0c551ef0da74a3b29028e390a5e15400" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>addContextCont</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a9c4377c29d2c8f1e3b85488038f31bdf" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>addContextLB</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a37c77d1949cd1590b74d286814bed1ef" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>addContextSetContext</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1ac2480a813d1adc735051314093b91e1d" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>addContextTD</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a067b986e570ea6cb09eeb46720b27971" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>contexts_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a44e2f15795876230e49c343b64c1414c" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>finish</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a591a5eaee30eea99711e14e050633d34" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>FnParamType</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a140176f3b035d504ad1e726e3c7b09fa" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>get</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1aed655dff826a821a3db9162259f33288" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>getMsg</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a1998ba5d1d29bada29c94d884f906d11" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>msg_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a1e5a02fffcec8b10eb11666a1e0f4120" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>operator delete</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a5d8c6436fb1652aa48d9b46798a068e5" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>operator new</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a12c7ddbd735a9bf704b06ecea7c26e60" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>operator=</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a3561cbcbc3197074cded8da204e98924" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>operator=</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a4d38f8f4d413457a40f134a57480449d" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>resume</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a3fa6c8ee2214c074c748000f782ad793" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>run</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a47b84af69a5444b9d837a3ffe4d4792b" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>RunnableNew</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a55ff785753c781903bf932a1e5faddd7" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>RunnableNew</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1ac7e1d836710c2d0cd2791f1a1c5ac03c" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>RunnableNew</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a4c34cf076ffd914c3d18aca7d2ff28db" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>RunnableNew</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1aa7e06ec59e7376d1d01dfa6ab9a9563b" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>send</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1aa30544adc03798c988a5e3bea2bfa3f3" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>setExplicitTask</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a87dbcf42b8723a70c174803afcdb1b57" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>setupHandler</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1aa494c41e589866c5a7f1669a5c2472b0" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>setupHandlerElement</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1aeaec7cf81fe97f2d6b57f35dbd408b5e" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>setupHandlerElement</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1adf45fe8ba5154d97455bccd8d8a3e2c9" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>start</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1aaeb0fefa5654a01600da2e0910f69ca7" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>suspend</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_new_1a8216711b400b7c1f36c5a9bafaa7133e" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableNew</scope><name>task_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
