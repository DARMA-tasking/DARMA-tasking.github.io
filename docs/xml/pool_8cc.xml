<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pool_8cc" kind="file" language="C++">
    <compoundname>pool.cc</compoundname>
    <includes refid="config_8h" local="yes">vt/config.h</includes>
    <includes refid="pool_8h" local="yes">vt/pool/pool.h</includes>
    <includes refid="memory__pool__equal_8h" local="yes">vt/pool/static_sized/memory_pool_equal.h</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">cassert</includes>
    <incdepgraph>
      <node id="178656">
        <label>list</label>
      </node>
      <node id="178534">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
      </node>
      <node id="178648">
        <label>atomic</label>
      </node>
      <node id="178601">
        <label>checkpoint/common.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2common_8h"/>
        <childnode refid="178602" relation="include">
        </childnode>
        <childnode refid="178571" relation="include">
        </childnode>
        <childnode refid="178533" relation="include">
        </childnode>
        <childnode refid="178603" relation="include">
        </childnode>
        <childnode refid="178557" relation="include">
        </childnode>
        <childnode refid="178572" relation="include">
        </childnode>
      </node>
      <node id="178579">
        <label>vt/runtime/component/component_pack.h</label>
        <link refid="component__pack_8h"/>
        <childnode refid="178580" relation="include">
        </childnode>
        <childnode refid="178693" relation="include">
        </childnode>
        <childnode refid="178656" relation="include">
        </childnode>
        <childnode refid="178643" relation="include">
        </childnode>
        <childnode refid="178582" relation="include">
        </childnode>
        <childnode refid="178611" relation="include">
        </childnode>
        <childnode refid="178541" relation="include">
        </childnode>
        <childnode refid="178694" relation="include">
        </childnode>
      </node>
      <node id="178693">
        <label>vt/runtime/component/movable_fn.h</label>
        <link refid="movable__fn_8h"/>
      </node>
      <node id="178541">
        <label>functional</label>
      </node>
      <node id="178679">
        <label>checkpoint/container/kokkos_complex_serialize.h</label>
        <link refid="kokkos__complex__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178654" relation="include">
        </childnode>
        <childnode refid="178619" relation="include">
        </childnode>
        <childnode refid="178632" relation="include">
        </childnode>
      </node>
      <node id="178662">
        <label>queue</label>
      </node>
      <node id="178583">
        <label>vt/runtime/component/component_dep.h</label>
        <link refid="component__dep_8h"/>
        <childnode refid="178581" relation="include">
        </childnode>
      </node>
      <node id="178702">
        <label>vt/messaging/envelope/envelope_get.h</label>
        <link refid="envelope__get_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178698" relation="include">
        </childnode>
        <childnode refid="178699" relation="include">
        </childnode>
        <childnode refid="178703" relation="include">
        </childnode>
      </node>
      <node id="178546">
        <label>vt/epoch/epoch_impl_type.h</label>
        <link refid="epoch__impl__type_8h"/>
        <childnode refid="178533" relation="include">
        </childnode>
        <childnode refid="178547" relation="include">
        </childnode>
      </node>
      <node id="178638">
        <label>checkpoint/dispatch/vrt/derived.h</label>
        <link refid="derived_8h"/>
        <childnode refid="178628" relation="include">
        </childnode>
        <childnode refid="178631" relation="include">
        </childnode>
        <childnode refid="178634" relation="include">
        </childnode>
        <childnode refid="178635" relation="include">
        </childnode>
        <childnode refid="178636" relation="include">
        </childnode>
      </node>
      <node id="178595">
        <label>limits</label>
      </node>
      <node id="178666">
        <label>checkpoint/container/string_serialize.h</label>
        <link refid="string__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
      </node>
      <node id="178649">
        <label>checkpoint/container/chrono_serialize.h</label>
        <link refid="chrono__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178650" relation="include">
        </childnode>
      </node>
      <node id="178552">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="178553" relation="include">
        </childnode>
        <childnode refid="178540" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
      </node>
      <node id="178553">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178555" relation="include">
        </childnode>
      </node>
      <node id="178688">
        <label>vt/timing/timing_type.h</label>
        <link refid="timing__type_8h"/>
      </node>
      <node id="178685">
        <label>vt/runtime/component/meter/timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178683" relation="include">
        </childnode>
        <childnode refid="178686" relation="include">
        </childnode>
      </node>
      <node id="178673">
        <label>checkpoint/container/view_serialize.h</label>
        <link refid="view__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178674" relation="include">
        </childnode>
        <childnode refid="178675" relation="include">
        </childnode>
        <childnode refid="178676" relation="include">
        </childnode>
      </node>
      <node id="178631">
        <label>checkpoint/dispatch/vrt/object_registry.h</label>
        <link refid="object__registry_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178628" relation="include">
        </childnode>
        <childnode refid="178632" relation="include">
        </childnode>
        <childnode refid="178541" relation="include">
        </childnode>
        <childnode refid="178555" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
      </node>
      <node id="178686">
        <label>vt/timing/timing.h</label>
        <link refid="timing_8h"/>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178687" relation="include">
        </childnode>
        <childnode refid="178558" relation="include">
        </childnode>
        <childnode refid="178688" relation="include">
        </childnode>
      </node>
      <node id="178600">
        <label>checkpoint/serializers/serializers_headers.h</label>
        <link refid="serializers__headers_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178604" relation="include">
        </childnode>
        <childnode refid="178605" relation="include">
        </childnode>
        <childnode refid="178606" relation="include">
        </childnode>
        <childnode refid="178607" relation="include">
        </childnode>
        <childnode refid="178617" relation="include">
        </childnode>
      </node>
      <node id="178606">
        <label>checkpoint/serializers/sizer.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2serializers_2sizer_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178604" relation="include">
        </childnode>
      </node>
      <node id="178651">
        <label>checkpoint/container/enum_serialize.h</label>
        <link refid="enum__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
      </node>
      <node id="178602">
        <label>checkpoint/cmake_config.h</label>
      </node>
      <node id="178594">
        <label>vt/utils/adt/histogram_approx.h</label>
        <link refid="histogram__approx_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178555" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178595" relation="include">
        </childnode>
        <childnode refid="178596" relation="include">
        </childnode>
        <childnode refid="178597" relation="include">
        </childnode>
        <childnode refid="178558" relation="include">
        </childnode>
      </node>
      <node id="178604">
        <label>checkpoint/serializers/base_serializer.h</label>
        <link refid="base__serializer_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
        <childnode refid="178571" relation="include">
        </childnode>
      </node>
      <node id="178529">
        <label>src/vt/pool/pool.cc</label>
        <link refid="pool_8cc"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178578" relation="include">
        </childnode>
        <childnode refid="178695" relation="include">
        </childnode>
        <childnode refid="178571" relation="include">
        </childnode>
        <childnode refid="178533" relation="include">
        </childnode>
        <childnode refid="178572" relation="include">
        </childnode>
      </node>
      <node id="178633">
        <label>checkpoint/traits/reconstructor_traits.h</label>
        <link refid="reconstructor__traits_8h"/>
        <childnode refid="178622" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
      </node>
      <node id="178533">
        <label>cstdint</label>
      </node>
      <node id="178624">
        <label>checkpoint/detector.h</label>
        <link refid="detector_8h"/>
        <childnode refid="178550" relation="include">
        </childnode>
      </node>
      <node id="178645">
        <label>checkpoint/container/array_serialize.h</label>
        <link refid="array__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178646" relation="include">
        </childnode>
      </node>
      <node id="178593">
        <label>vt/utils/adt/union.h</label>
        <link refid="union_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
      </node>
      <node id="178692">
        <label>vt/runtime/component/progressable.h</label>
        <link refid="progressable_8h"/>
      </node>
      <node id="178691">
        <label>vt/runtime/component/bufferable.h</label>
        <link refid="bufferable_8h"/>
      </node>
      <node id="178574">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="178562" relation="include">
        </childnode>
        <childnode refid="178540" relation="include">
        </childnode>
        <childnode refid="178568" relation="include">
        </childnode>
        <childnode refid="178573" relation="include">
        </childnode>
        <childnode refid="178575" relation="include">
        </childnode>
        <childnode refid="178552" relation="include">
        </childnode>
        <childnode refid="178572" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178577" relation="include">
        </childnode>
        <childnode refid="178558" relation="include">
        </childnode>
      </node>
      <node id="178699">
        <label>vt/messaging/envelope/envelope_base.h</label>
        <link refid="envelope__base_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178698" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
      </node>
      <node id="178548">
        <label>vt/epoch/epoch_type.h</label>
        <link refid="epoch__type_8h"/>
        <childnode refid="178549" relation="include">
        </childnode>
        <childnode refid="178546" relation="include">
        </childnode>
        <childnode refid="178551" relation="include">
        </childnode>
      </node>
      <node id="178677">
        <label>checkpoint/container/kokkos_unordered_map_serialize.h</label>
        <link refid="kokkos__unordered__map__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178654" relation="include">
        </childnode>
        <childnode refid="178619" relation="include">
        </childnode>
        <childnode refid="178632" relation="include">
        </childnode>
      </node>
      <node id="178621">
        <label>checkpoint/dispatch/dispatch_serializer.h</label>
        <link refid="dispatch__serializer_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178622" relation="include">
        </childnode>
        <childnode refid="178625" relation="include">
        </childnode>
        <childnode refid="178626" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178571" relation="include">
        </childnode>
      </node>
      <node id="178558">
        <label>fmt-vt/core.h</label>
      </node>
      <node id="178711">
        <label>vt/messaging/envelope/envelope_ref.impl.h</label>
        <link refid="envelope__ref_8impl_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178710" relation="include">
        </childnode>
      </node>
      <node id="178664">
        <label>checkpoint/container/raw_ptr_serialize.h</label>
        <link refid="raw__ptr__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
      </node>
      <node id="178654">
        <label>checkpoint/dispatch/allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="178619" relation="include">
        </childnode>
        <childnode refid="178611" relation="include">
        </childnode>
      </node>
      <node id="178596">
        <label>cmath</label>
      </node>
      <node id="178572">
        <label>cassert</label>
      </node>
      <node id="178569">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="178562" relation="include">
        </childnode>
        <childnode refid="178540" relation="include">
        </childnode>
        <childnode refid="178568" relation="include">
        </childnode>
        <childnode refid="178570" relation="include">
        </childnode>
        <childnode refid="178552" relation="include">
        </childnode>
        <childnode refid="178563" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178572" relation="include">
        </childnode>
        <childnode refid="178558" relation="include">
        </childnode>
      </node>
      <node id="178544">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="178545" relation="include">
        </childnode>
        <childnode refid="178546" relation="include">
        </childnode>
      </node>
      <node id="178678">
        <label>checkpoint/container/kokkos_pair_serialize.h</label>
        <link refid="kokkos__pair__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178654" relation="include">
        </childnode>
        <childnode refid="178619" relation="include">
        </childnode>
        <childnode refid="178632" relation="include">
        </childnode>
      </node>
      <node id="178644">
        <label>stdexcept</label>
      </node>
      <node id="178562">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="178540" relation="include">
        </childnode>
      </node>
      <node id="178652">
        <label>checkpoint/container/function_serialize.h</label>
        <link refid="function__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178541" relation="include">
        </childnode>
      </node>
      <node id="178632">
        <label>checkpoint/dispatch/reconstructor.h</label>
        <link refid="reconstructor_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178633" relation="include">
        </childnode>
        <childnode refid="178623" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178571" relation="include">
        </childnode>
      </node>
      <node id="178719">
        <label>vt/pool/header/pool_header.h</label>
        <link refid="pool__header_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
      </node>
      <node id="178680">
        <label>checkpoint/checkpoint_api.impl.h</label>
        <link refid="checkpoint__api_8impl_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178599" relation="include">
        </childnode>
        <childnode refid="178610" relation="include">
        </childnode>
        <childnode refid="178609" relation="include">
        </childnode>
        <childnode refid="178611" relation="include">
        </childnode>
      </node>
      <node id="178545">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
        <childnode refid="178540" relation="include">
        </childnode>
      </node>
      <node id="178607">
        <label>checkpoint/serializers/packer.h</label>
        <link refid="packer_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178608" relation="include">
        </childnode>
        <childnode refid="178609" relation="include">
        </childnode>
        <childnode refid="178612" relation="include">
        </childnode>
        <childnode refid="178613" relation="include">
        </childnode>
        <childnode refid="178614" relation="include">
        </childnode>
        <childnode refid="178615" relation="include">
        </childnode>
      </node>
      <node id="178559">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="178560" relation="include">
        </childnode>
        <childnode refid="178564" relation="include">
        </childnode>
        <childnode refid="178567" relation="include">
        </childnode>
      </node>
      <node id="178554">
        <label>string</label>
      </node>
      <node id="178613">
        <label>checkpoint/buffer/user_buffer.h</label>
        <link refid="user__buffer_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178609" relation="include">
        </childnode>
      </node>
      <node id="178672">
        <label>checkpoint/container/unique_ptr_serialize.h</label>
        <link refid="unique__ptr__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178632" relation="include">
        </childnode>
        <childnode refid="178629" relation="include">
        </childnode>
      </node>
      <node id="178585">
        <label>vt/runtime/component/base.h</label>
        <link refid="src_2vt_2runtime_2component_2base_8h"/>
        <childnode refid="178540" relation="include">
        </childnode>
        <childnode refid="178586" relation="include">
        </childnode>
        <childnode refid="178691" relation="include">
        </childnode>
        <childnode refid="178692" relation="include">
        </childnode>
      </node>
      <node id="178609">
        <label>checkpoint/buffer/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178610" relation="include">
        </childnode>
        <childnode refid="178611" relation="include">
        </childnode>
      </node>
      <node id="178676">
        <label>checkpoint/container/view_traverse_ndim.h</label>
        <link refid="view__traverse__ndim_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178674" relation="include">
        </childnode>
      </node>
      <node id="178659">
        <label>map</label>
      </node>
      <node id="178714">
        <label>vt/scheduler/priority.h</label>
        <link refid="priority_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178646" relation="include">
        </childnode>
        <childnode refid="178557" relation="include">
        </childnode>
      </node>
      <node id="178687">
        <label>EngFormat-Cpp/eng_format.hpp</label>
      </node>
      <node id="178626">
        <label>checkpoint/dispatch/dispatch_serializer_nonbyte.h</label>
        <link refid="dispatch__serializer__nonbyte_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178622" relation="include">
        </childnode>
        <childnode refid="178627" relation="include">
        </childnode>
        <childnode refid="178629" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178571" relation="include">
        </childnode>
        <childnode refid="178572" relation="include">
        </childnode>
      </node>
      <node id="178639">
        <label>checkpoint/dispatch/dispatch_byte_macro.h</label>
        <link refid="dispatch__byte__macro_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
      </node>
      <node id="178575">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="178571" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178555" relation="include">
        </childnode>
        <childnode refid="178576" relation="include">
        </childnode>
      </node>
      <node id="178576">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="178575" relation="include">
        </childnode>
        <childnode refid="178552" relation="include">
        </childnode>
        <childnode refid="178571" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178555" relation="include">
        </childnode>
        <childnode refid="178558" relation="include">
        </childnode>
      </node>
      <node id="178582">
        <label>unordered_set</label>
      </node>
      <node id="178709">
        <label>vt/messaging/envelope/envelope_test.impl.h</label>
        <link refid="envelope__test_8impl_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178704" relation="include">
        </childnode>
      </node>
      <node id="178551">
        <label>fmt-vt/format.h</label>
      </node>
      <node id="178698">
        <label>vt/messaging/envelope/envelope_type.h</label>
        <link refid="envelope__type_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
      </node>
      <node id="178623">
        <label>checkpoint/dispatch/reconstructor_tag.h</label>
        <link refid="reconstructor__tag_8h"/>
      </node>
      <node id="178628">
        <label>checkpoint/dispatch/vrt/registry_common.h</label>
        <link refid="registry__common_8h"/>
        <childnode refid="178550" relation="include">
        </childnode>
      </node>
      <node id="178681">
        <label>vt/runtime/component/diagnostic_meter.h</label>
        <link refid="diagnostic__meter_8h"/>
        <childnode refid="178682" relation="include">
        </childnode>
        <childnode refid="178684" relation="include">
        </childnode>
        <childnode refid="178685" relation="include">
        </childnode>
        <childnode refid="178689" relation="include">
        </childnode>
        <childnode refid="178688" relation="include">
        </childnode>
      </node>
      <node id="178655">
        <label>checkpoint/container/container_serialize.h</label>
        <link refid="container__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
      </node>
      <node id="178532">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="178533" relation="include">
        </childnode>
        <childnode refid="178534" relation="include">
        </childnode>
        <childnode refid="178535" relation="include">
        </childnode>
        <childnode refid="178537" relation="include">
        </childnode>
      </node>
      <node id="178622">
        <label>checkpoint/traits/serializable_traits.h</label>
        <link refid="serializable__traits_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178623" relation="include">
        </childnode>
        <childnode refid="178624" relation="include">
        </childnode>
        <childnode refid="178533" relation="include">
        </childnode>
        <childnode refid="178572" relation="include">
        </childnode>
      </node>
      <node id="178634">
        <label>checkpoint/dispatch/vrt/serializer_registry.h</label>
        <link refid="serializer__registry_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178628" relation="include">
        </childnode>
        <childnode refid="178541" relation="include">
        </childnode>
        <childnode refid="178555" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
      </node>
      <node id="178682">
        <label>vt/runtime/component/meter/counter.h</label>
        <link refid="counter_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178683" relation="include">
        </childnode>
      </node>
      <node id="178547">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="178540" relation="include">
        </childnode>
        <childnode refid="178542" relation="include">
        </childnode>
      </node>
      <node id="178713">
        <label>vt/messaging/envelope/envelope_setup.impl.h</label>
        <link refid="envelope__setup_8impl_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178712" relation="include">
        </childnode>
        <childnode refid="178714" relation="include">
        </childnode>
      </node>
      <node id="178669">
        <label>checkpoint/container/tuple_serialize.h</label>
        <link refid="tuple__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178557" relation="include">
        </childnode>
        <childnode refid="178670" relation="include">
        </childnode>
      </node>
      <node id="178618">
        <label>checkpoint/serializers/unpacker.impl.h</label>
        <link refid="unpacker_8impl_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178608" relation="include">
        </childnode>
        <childnode refid="178617" relation="include">
        </childnode>
        <childnode refid="178571" relation="include">
        </childnode>
        <childnode refid="178616" relation="include">
        </childnode>
      </node>
      <node id="178667">
        <label>checkpoint/container/thread_serialize.h</label>
        <link refid="thread__serialize_8h"/>
        <childnode refid="178668" relation="include">
        </childnode>
        <childnode refid="178601" relation="include">
        </childnode>
      </node>
      <node id="178629">
        <label>checkpoint/dispatch/vrt/virtual_serialize.h</label>
        <link refid="virtual__serialize_8h"/>
        <childnode refid="178630" relation="include">
        </childnode>
        <childnode refid="178638" relation="include">
        </childnode>
      </node>
      <node id="178584">
        <label>vt/runtime/component/component_traits.h</label>
        <link refid="component__traits_8h"/>
        <childnode refid="178550" relation="include">
        </childnode>
      </node>
      <node id="178641">
        <label>checkpoint/dispatch/type_registry.h</label>
        <link refid="type__registry_8h"/>
        <childnode refid="178642" relation="include">
        </childnode>
        <childnode refid="178533" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178643" relation="include">
        </childnode>
      </node>
      <node id="178588">
        <label>vt/runtime/component/component_reduce.h</label>
        <link refid="component__reduce_8h"/>
        <childnode refid="178540" relation="include">
        </childnode>
      </node>
      <node id="178581">
        <label>vt/runtime/component/component_registry.h</label>
        <link refid="component__registry_8h"/>
        <childnode refid="178540" relation="include">
        </childnode>
        <childnode refid="178555" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178582" relation="include">
        </childnode>
      </node>
      <node id="178531">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="178532" relation="include">
        </childnode>
        <childnode refid="178538" relation="include">
        </childnode>
      </node>
      <node id="178700">
        <label>vt/messaging/envelope/envelope_set.h</label>
        <link refid="envelope__set_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178698" relation="include">
        </childnode>
        <childnode refid="178699" relation="include">
        </childnode>
        <childnode refid="178701" relation="include">
        </childnode>
      </node>
      <node id="178561">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="178554" relation="include">
        </childnode>
      </node>
      <node id="178540">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="178533" relation="include">
        </childnode>
        <childnode refid="178541" relation="include">
        </childnode>
      </node>
      <node id="178565">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="178539" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
        <childnode refid="178566" relation="include">
        </childnode>
      </node>
      <node id="178636">
        <label>checkpoint/dispatch/vrt/serialize_instantiator.h</label>
        <link refid="serialize__instantiator_8h"/>
        <childnode refid="178634" relation="include">
        </childnode>
        <childnode refid="178637" relation="include">
        </childnode>
      </node>
      <node id="178610">
        <label>checkpoint/checkpoint_api.h</label>
        <link refid="checkpoint__api_8h"/>
        <childnode refid="178571" relation="include">
        </childnode>
        <childnode refid="178541" relation="include">
        </childnode>
        <childnode refid="178611" relation="include">
        </childnode>
      </node>
      <node id="178556">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
        <childnode refid="178557" relation="include">
        </childnode>
      </node>
      <node id="178689">
        <label>vt/runtime/component/meter/counter_gauge.h</label>
        <link refid="counter__gauge_8h"/>
        <childnode refid="178682" relation="include">
        </childnode>
        <childnode refid="178684" relation="include">
        </childnode>
      </node>
      <node id="178697">
        <label>vt/messaging/envelope/envelope.h</label>
        <link refid="envelope_2envelope_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178698" relation="include">
        </childnode>
        <childnode refid="178699" relation="include">
        </childnode>
        <childnode refid="178700" relation="include">
        </childnode>
        <childnode refid="178702" relation="include">
        </childnode>
        <childnode refid="178704" relation="include">
        </childnode>
        <childnode refid="178710" relation="include">
        </childnode>
        <childnode refid="178712" relation="include">
        </childnode>
        <childnode refid="178715" relation="include">
        </childnode>
        <childnode refid="178716" relation="include">
        </childnode>
      </node>
      <node id="178560">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="178561" relation="include">
        </childnode>
        <childnode refid="178540" relation="include">
        </childnode>
        <childnode refid="178562" relation="include">
        </childnode>
        <childnode refid="178563" relation="include">
        </childnode>
        <childnode refid="178535" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178558" relation="include">
        </childnode>
      </node>
      <node id="178589">
        <label>vt/runtime/component/diagnostic_types.h</label>
        <link refid="diagnostic__types_8h"/>
        <childnode refid="178533" relation="include">
        </childnode>
      </node>
      <node id="178718">
        <label>vt/messaging/envelope/payload_envelope.h</label>
        <link refid="payload__envelope_8h"/>
        <childnode refid="178697" relation="include">
        </childnode>
      </node>
      <node id="178603">
        <label>cstdio</label>
      </node>
      <node id="178627">
        <label>checkpoint/dispatch/vrt/virtual_serialize_traits.h</label>
        <link refid="virtual__serialize__traits_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178628" relation="include">
        </childnode>
        <childnode refid="178624" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
      </node>
      <node id="178578">
        <label>vt/pool/pool.h</label>
        <link refid="pool_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178579" relation="include">
        </childnode>
        <childnode refid="178695" relation="include">
        </childnode>
        <childnode refid="178719" relation="include">
        </childnode>
        <childnode refid="178555" relation="include">
        </childnode>
        <childnode refid="178533" relation="include">
        </childnode>
        <childnode refid="178572" relation="include">
        </childnode>
        <childnode refid="178611" relation="include">
        </childnode>
      </node>
      <node id="178665">
        <label>checkpoint/container/shared_ptr_serialize.h</label>
        <link refid="shared__ptr__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
      </node>
      <node id="178543">
        <label>tuple</label>
      </node>
      <node id="178615">
        <label>checkpoint/serializers/packer.impl.h</label>
        <link refid="packer_8impl_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178608" relation="include">
        </childnode>
        <childnode refid="178609" relation="include">
        </childnode>
        <childnode refid="178616" relation="include">
        </childnode>
      </node>
      <node id="178637">
        <label>checkpoint/dispatch/vrt/link_derived_to_base_idx.h</label>
        <link refid="link__derived__to__base__idx_8h"/>
        <childnode refid="178634" relation="include">
        </childnode>
      </node>
      <node id="178549">
        <label>vt/utils/strong/strong_type.h</label>
        <link refid="strong__type_8h"/>
        <childnode refid="178541" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
      </node>
      <node id="178683">
        <label>vt/runtime/component/meter/stats_pack.h</label>
        <link refid="stats__pack_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
      </node>
      <node id="178538">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="178539" relation="include">
        </childnode>
        <childnode refid="178532" relation="include">
        </childnode>
        <childnode refid="178552" relation="include">
        </childnode>
        <childnode refid="178556" relation="include">
        </childnode>
        <childnode refid="178558" relation="include">
        </childnode>
      </node>
      <node id="178684">
        <label>vt/runtime/component/meter/gauge.h</label>
        <link refid="gauge_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178683" relation="include">
        </childnode>
      </node>
      <node id="178703">
        <label>vt/messaging/envelope/envelope_get.impl.h</label>
        <link refid="envelope__get_8impl_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178702" relation="include">
        </childnode>
      </node>
      <node id="178663">
        <label>stack</label>
      </node>
      <node id="178555">
        <label>vector</label>
      </node>
      <node id="178705">
        <label>vt/context/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="178611" relation="include">
        </childnode>
        <childnode refid="178706" relation="include">
        </childnode>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178579" relation="include">
        </childnode>
        <childnode refid="178707" relation="include">
        </childnode>
        <childnode refid="178708" relation="include">
        </childnode>
      </node>
      <node id="178670">
        <label>new</label>
      </node>
      <node id="178620">
        <label>checkpoint/dispatch/clean_type.h</label>
        <link refid="clean__type_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
      </node>
      <node id="178625">
        <label>checkpoint/dispatch/dispatch_serializer_byte.h</label>
        <link refid="dispatch__serializer__byte_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178622" relation="include">
        </childnode>
        <childnode refid="178626" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178571" relation="include">
        </childnode>
      </node>
      <node id="178647">
        <label>checkpoint/container/atomic_serialize.h</label>
        <link refid="atomic__serialize_8h"/>
        <childnode refid="178648" relation="include">
        </childnode>
        <childnode refid="178601" relation="include">
        </childnode>
      </node>
      <node id="178557">
        <label>utility</label>
      </node>
      <node id="178671">
        <label>checkpoint/container/vector_serialize.h</label>
        <link refid="vector__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178654" relation="include">
        </childnode>
        <childnode refid="178619" relation="include">
        </childnode>
        <childnode refid="178632" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178555" relation="include">
        </childnode>
      </node>
      <node id="178646">
        <label>array</label>
      </node>
      <node id="178710">
        <label>vt/messaging/envelope/envelope_ref.h</label>
        <link refid="envelope__ref_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178698" relation="include">
        </childnode>
        <childnode refid="178699" relation="include">
        </childnode>
        <childnode refid="178711" relation="include">
        </childnode>
      </node>
      <node id="178577">
        <label>sstream</label>
      </node>
      <node id="178661">
        <label>checkpoint/container/queue_serialize.h</label>
        <link refid="queue__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178662" relation="include">
        </childnode>
        <childnode refid="178663" relation="include">
        </childnode>
      </node>
      <node id="178630">
        <label>checkpoint/dispatch/vrt/base.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2vrt_2base_8h"/>
        <childnode refid="178628" relation="include">
        </childnode>
        <childnode refid="178631" relation="include">
        </childnode>
        <childnode refid="178634" relation="include">
        </childnode>
        <childnode refid="178635" relation="include">
        </childnode>
        <childnode refid="178636" relation="include">
        </childnode>
      </node>
      <node id="178587">
        <label>vt/runtime/component/component_name.h</label>
        <link refid="component__name_8h"/>
        <childnode refid="178554" relation="include">
        </childnode>
      </node>
      <node id="178591">
        <label>vt/runtime/component/diagnostic_value.h</label>
        <link refid="diagnostic__value_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178589" relation="include">
        </childnode>
        <childnode refid="178592" relation="include">
        </childnode>
        <childnode refid="178598" relation="include">
        </childnode>
        <childnode refid="178594" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178596" relation="include">
        </childnode>
      </node>
      <node id="178536">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="178570">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="178571" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178555" relation="include">
        </childnode>
      </node>
      <node id="178535">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
        <childnode refid="178536" relation="include">
        </childnode>
      </node>
      <node id="178612">
        <label>checkpoint/buffer/managed_buffer.h</label>
        <link refid="managed__buffer_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178609" relation="include">
        </childnode>
        <childnode refid="178611" relation="include">
        </childnode>
      </node>
      <node id="178571">
        <label>cstdlib</label>
      </node>
      <node id="178619">
        <label>checkpoint/dispatch/dispatch.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178609" relation="include">
        </childnode>
        <childnode refid="178620" relation="include">
        </childnode>
        <childnode refid="178621" relation="include">
        </childnode>
        <childnode refid="178639" relation="include">
        </childnode>
        <childnode refid="178632" relation="include">
        </childnode>
        <childnode refid="178541" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178640" relation="include">
        </childnode>
      </node>
      <node id="178564">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="178562" relation="include">
        </childnode>
        <childnode refid="178565" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
      </node>
      <node id="178640">
        <label>checkpoint/dispatch/dispatch.impl.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8impl_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178619" relation="include">
        </childnode>
        <childnode refid="178641" relation="include">
        </childnode>
        <childnode refid="178644" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
      </node>
      <node id="178599">
        <label>checkpoint/checkpoint.h</label>
        <link refid="checkpoint_8h"/>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178619" relation="include">
        </childnode>
        <childnode refid="178622" relation="include">
        </childnode>
        <childnode refid="178645" relation="include">
        </childnode>
        <childnode refid="178647" relation="include">
        </childnode>
        <childnode refid="178649" relation="include">
        </childnode>
        <childnode refid="178651" relation="include">
        </childnode>
        <childnode refid="178652" relation="include">
        </childnode>
        <childnode refid="178653" relation="include">
        </childnode>
        <childnode refid="178658" relation="include">
        </childnode>
        <childnode refid="178661" relation="include">
        </childnode>
        <childnode refid="178664" relation="include">
        </childnode>
        <childnode refid="178665" relation="include">
        </childnode>
        <childnode refid="178666" relation="include">
        </childnode>
        <childnode refid="178667" relation="include">
        </childnode>
        <childnode refid="178669" relation="include">
        </childnode>
        <childnode refid="178671" relation="include">
        </childnode>
        <childnode refid="178672" relation="include">
        </childnode>
        <childnode refid="178673" relation="include">
        </childnode>
        <childnode refid="178677" relation="include">
        </childnode>
        <childnode refid="178678" relation="include">
        </childnode>
        <childnode refid="178679" relation="include">
        </childnode>
        <childnode refid="178610" relation="include">
        </childnode>
        <childnode refid="178680" relation="include">
        </childnode>
      </node>
      <node id="178707">
        <label>vt/context/context_attorney_fwd.h</label>
        <link refid="context__attorney__fwd_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
      </node>
      <node id="178717">
        <label>vt/messaging/envelope/envelope_extended_util.impl.h</label>
        <link refid="envelope__extended__util_8impl_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178716" relation="include">
        </childnode>
      </node>
      <node id="178642">
        <label>cstddef</label>
      </node>
      <node id="178715">
        <label>vt/messaging/envelope/envelope_extended.h</label>
        <link refid="envelope__extended_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178698" relation="include">
        </childnode>
        <childnode refid="178699" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
      </node>
      <node id="178658">
        <label>checkpoint/container/map_serialize.h</label>
        <link refid="map__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178654" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178655" relation="include">
        </childnode>
        <childnode refid="178659" relation="include">
        </childnode>
        <childnode refid="178643" relation="include">
        </childnode>
        <childnode refid="178660" relation="include">
        </childnode>
        <childnode refid="178582" relation="include">
        </childnode>
      </node>
      <node id="178657">
        <label>deque</label>
      </node>
      <node id="178643">
        <label>unordered_map</label>
      </node>
      <node id="178653">
        <label>checkpoint/container/list_serialize.h</label>
        <link refid="list__serialize_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178654" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178655" relation="include">
        </childnode>
        <childnode refid="178656" relation="include">
        </childnode>
        <childnode refid="178657" relation="include">
        </childnode>
      </node>
      <node id="178704">
        <label>vt/messaging/envelope/envelope_test.h</label>
        <link refid="envelope__test_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178705" relation="include">
        </childnode>
        <childnode refid="178698" relation="include">
        </childnode>
        <childnode refid="178699" relation="include">
        </childnode>
        <childnode refid="178709" relation="include">
        </childnode>
      </node>
      <node id="178701">
        <label>vt/messaging/envelope/envelope_set.impl.h</label>
        <link refid="envelope__set_8impl_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178700" relation="include">
        </childnode>
      </node>
      <node id="178695">
        <label>vt/pool/static_sized/memory_pool_equal.h</label>
        <link refid="memory__pool__equal_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178696" relation="include">
        </childnode>
        <childnode refid="178705" relation="include">
        </childnode>
        <childnode refid="178719" relation="include">
        </childnode>
        <childnode refid="178555" relation="include">
        </childnode>
        <childnode refid="178533" relation="include">
        </childnode>
      </node>
      <node id="178614">
        <label>checkpoint/buffer/io_buffer.h</label>
        <link refid="io__buffer_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178609" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
      </node>
      <node id="178539">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="178540" relation="include">
        </childnode>
        <childnode refid="178542" relation="include">
        </childnode>
        <childnode refid="178544" relation="include">
        </childnode>
        <childnode refid="178547" relation="include">
        </childnode>
        <childnode refid="178548" relation="include">
        </childnode>
      </node>
      <node id="178617">
        <label>checkpoint/serializers/unpacker.h</label>
        <link refid="unpacker_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178608" relation="include">
        </childnode>
        <childnode refid="178613" relation="include">
        </childnode>
        <childnode refid="178618" relation="include">
        </childnode>
      </node>
      <node id="178696">
        <label>vt/messaging/envelope.h</label>
        <link refid="envelope_8h"/>
        <childnode refid="178697" relation="include">
        </childnode>
        <childnode refid="178718" relation="include">
        </childnode>
      </node>
      <node id="178650">
        <label>chrono</label>
      </node>
      <node id="178568">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="178540" relation="include">
        </childnode>
        <childnode refid="178562" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178569" relation="include">
        </childnode>
      </node>
      <node id="178706">
        <label>mpi.h</label>
      </node>
      <node id="178712">
        <label>vt/messaging/envelope/envelope_setup.h</label>
        <link refid="envelope__setup_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178698" relation="include">
        </childnode>
        <childnode refid="178699" relation="include">
        </childnode>
        <childnode refid="178713" relation="include">
        </childnode>
      </node>
      <node id="178668">
        <label>thread</label>
      </node>
      <node id="178674">
        <label>checkpoint/container/view_traits_extract.h</label>
        <link refid="view__traits__extract_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
      </node>
      <node id="178694">
        <label>vt/runtime/component/component_pack.impl.h</label>
        <link refid="component__pack_8impl_8h"/>
        <childnode refid="178579" relation="include">
        </childnode>
      </node>
      <node id="178542">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="178540" relation="include">
        </childnode>
        <childnode refid="178533" relation="include">
        </childnode>
        <childnode refid="178541" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
      </node>
      <node id="178592">
        <label>vt/runtime/component/diagnostic_erased_value.h</label>
        <link refid="diagnostic__erased__value_8h"/>
        <childnode refid="178589" relation="include">
        </childnode>
        <childnode refid="178593" relation="include">
        </childnode>
        <childnode refid="178594" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
      </node>
      <node id="178586">
        <label>vt/runtime/component/diagnostic.h</label>
        <link refid="diagnostic_8h"/>
        <childnode refid="178587" relation="include">
        </childnode>
        <childnode refid="178588" relation="include">
        </childnode>
        <childnode refid="178589" relation="include">
        </childnode>
        <childnode refid="178590" relation="include">
        </childnode>
        <childnode refid="178591" relation="include">
        </childnode>
        <childnode refid="178681" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178611" relation="include">
        </childnode>
        <childnode refid="178643" relation="include">
        </childnode>
        <childnode refid="178541" relation="include">
        </childnode>
        <childnode refid="178690" relation="include">
        </childnode>
      </node>
      <node id="178550">
        <label>type_traits</label>
      </node>
      <node id="178660">
        <label>set</label>
      </node>
      <node id="178716">
        <label>vt/messaging/envelope/envelope_extended_util.h</label>
        <link refid="envelope__extended__util_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178698" relation="include">
        </childnode>
        <childnode refid="178699" relation="include">
        </childnode>
        <childnode refid="178715" relation="include">
        </childnode>
        <childnode refid="178717" relation="include">
        </childnode>
      </node>
      <node id="178563">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="178539" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
      </node>
      <node id="178530">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="178531" relation="include">
        </childnode>
        <childnode refid="178539" relation="include">
        </childnode>
        <childnode refid="178559" relation="include">
        </childnode>
      </node>
      <node id="178598">
        <label>vt/runtime/component/diagnostic_value_base.h</label>
        <link refid="diagnostic__value__base_8h"/>
        <childnode refid="178589" relation="include">
        </childnode>
        <childnode refid="178590" relation="include">
        </childnode>
        <childnode refid="178592" relation="include">
        </childnode>
        <childnode refid="178599" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
      </node>
      <node id="178597">
        <label>algorithm</label>
      </node>
      <node id="178675">
        <label>checkpoint/container/view_traverse_manual.h</label>
        <link refid="view__traverse__manual_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178600" relation="include">
        </childnode>
        <childnode refid="178674" relation="include">
        </childnode>
      </node>
      <node id="178635">
        <label>checkpoint/dispatch/vrt/inheritance_assert_helpers.h</label>
        <link refid="inheritance__assert__helpers_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
      </node>
      <node id="178608">
        <label>checkpoint/serializers/memory_serializer.h</label>
        <link refid="memory__serializer_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178604" relation="include">
        </childnode>
      </node>
      <node id="178580">
        <label>vt/runtime/component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="178564" relation="include">
        </childnode>
        <childnode refid="178581" relation="include">
        </childnode>
        <childnode refid="178583" relation="include">
        </childnode>
        <childnode refid="178584" relation="include">
        </childnode>
        <childnode refid="178585" relation="include">
        </childnode>
        <childnode refid="178611" relation="include">
        </childnode>
      </node>
      <node id="178537">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="178616">
        <label>cstring</label>
      </node>
      <node id="178708">
        <label>vt/runnable/runnable.fwd.h</label>
        <link refid="runnable_8fwd_8h"/>
      </node>
      <node id="178690">
        <label>vt/runtime/component/diagnostic.impl.h</label>
        <link refid="diagnostic_8impl_8h"/>
        <childnode refid="178530" relation="include">
        </childnode>
        <childnode refid="178586" relation="include">
        </childnode>
        <childnode refid="178591" relation="include">
        </childnode>
        <childnode refid="178611" relation="include">
        </childnode>
        <childnode refid="178595" relation="include">
        </childnode>
      </node>
      <node id="178590">
        <label>vt/runtime/component/diagnostic_units.h</label>
        <link refid="diagnostic__units_8h"/>
      </node>
      <node id="178611">
        <label>memory</label>
      </node>
      <node id="178567">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="178568" relation="include">
        </childnode>
        <childnode refid="178573" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
      </node>
      <node id="178573">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="178562" relation="include">
        </childnode>
        <childnode refid="178540" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178574" relation="include">
        </childnode>
      </node>
      <node id="178605">
        <label>checkpoint/serializers/footprinter.h</label>
        <link refid="footprinter_8h"/>
        <childnode refid="178601" relation="include">
        </childnode>
        <childnode refid="178604" relation="include">
        </childnode>
      </node>
      <node id="178566">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="178539" relation="include">
        </childnode>
        <childnode refid="178532" relation="include">
        </childnode>
        <childnode refid="178562" relation="include">
        </childnode>
        <childnode refid="178565" relation="include">
        </childnode>
        <childnode refid="178563" relation="include">
        </childnode>
        <childnode refid="178561" relation="include">
        </childnode>
        <childnode refid="178554" relation="include">
        </childnode>
        <childnode refid="178543" relation="include">
        </childnode>
        <childnode refid="178550" relation="include">
        </childnode>
        <childnode refid="178558" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1pool">vt::pool</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool.cc</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2021<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">vt/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pool_8h" kindref="compound">vt/pool/pool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memory__pool__equal_8h" kindref="compound">vt/pool/static_sized/memory_pool_equal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1a55a236c42c331940884370c85fb18e36" kindref="member">Pool::Pool</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>:<sp/>small_msg(initSPool()),<sp/>medium_msg(initMPool())</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1a9f94985824d12c43357cfe50eaaefd38" kindref="member">Pool::MemPoolSType</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1a833da3cd4d410ba607b6e7b000810882" kindref="member">Pool::initSPool</ref>()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;MemoryPoolType&lt;memory_size_small&gt;&gt;();</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a8a201b9a843e47cd4e7b568a8e4483da" kindref="member">Pool::MemPoolMType</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1ab768c364b348107112f960ce0704565d" kindref="member">Pool::initMPool</ref>()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;MemoryPoolType&lt;memory_size_medium&gt;&gt;(64);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1ace8d36439e5e599a8ee68b2f1a6a6b28" kindref="member">Pool::ePoolSize</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1a6b0dea52c80b6493431ce94840e7bc4a" kindref="member">Pool::getPoolType</ref>(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize</highlight></codeline>
<codeline lineno="68"><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Header<sp/>size<sp/>is<sp/>accounted<sp/>for<sp/>internally<sp/>in<sp/>MemoryPoolEqual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Blocks<sp/>will<sp/>include<sp/>header<sp/>size,<sp/>but<sp/>getNumBytes<sp/>won&apos;t<sp/>so<sp/>we<sp/>shouldn&apos;t<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>total_bytes<sp/>=<sp/>num_bytes<sp/>+<sp/>oversize;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_bytes<sp/>&lt;=<sp/>static_cast&lt;size_t&gt;(small_msg-&gt;getNumBytes()))<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ePoolSize::Small;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_bytes<sp/>&lt;=<sp/>static_cast&lt;size_t&gt;(medium_msg-&gt;getNumBytes()))<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ePoolSize::Medium;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ePoolSize::Malloc;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structvt_1_1pool_1_1_pool_1abd5f079910c28493ad3b0d5a9469f00a" kindref="member">Pool::tryPooledAlloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type<sp/>=<sp/>getPoolType(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>!=<sp/>ePoolSize::Malloc)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pooledAlloc(num_bytes,<sp/>oversize,<sp/>pool_type);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1adf32f4660575880101522e5d6b640edd" kindref="member">Pool::tryPooledDealloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buf_char<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(buf);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>actual_alloc_size<sp/>=<sp/>HeaderManagerType::getHeaderBytes(buf_char);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize<sp/>=<sp/>HeaderManagerType::getHeaderOversizeBytes(buf_char);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type<sp/>=<sp/>getPoolType(actual_alloc_size,<sp/>oversize);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>!=<sp/>ePoolSize::Malloc)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>poolDealloc(buf,<sp/>pool_type);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structvt_1_1pool_1_1_pool_1a8a6ff684a26b2229cbf263e99a1bc2ee" kindref="member">Pool::pooledAlloc</ref>(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize,<sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type</highlight></codeline>
<codeline lineno="108"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a6865573ccc58716514eb9a164a52c256" kindref="member">normal</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pool::pooled_alloc<sp/>of<sp/>size={},<sp/>type={},<sp/>ret={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>num_bytes,<sp/><ref refid="debug__printconst_8h_1a06faeab1b7400ff3ca7a00cfa8a32c06" kindref="member">print_pool_type</ref>(pool_type),<sp/>ret</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Small)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref><sp/>=<sp/>small_msg.get();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>-&gt;alloc(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Medium)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref><sp/>=<sp/>medium_msg.get();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>-&gt;alloc(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Pool<sp/>must<sp/>be<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1aa9ae08727c21035461d6f60b93ea19ab" kindref="member">Pool::poolDealloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf,<sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a6865573ccc58716514eb9a164a52c256" kindref="member">normal</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pool::pooled_dealloc<sp/>of<sp/>ptr={},<sp/>type={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug__printconst_8h_1a2a030f018eca8f4bd882d5cf74a80674" kindref="member">print_ptr</ref>(buf),<sp/><ref refid="debug__printconst_8h_1a06faeab1b7400ff3ca7a00cfa8a32c06" kindref="member">print_pool_type</ref>(pool_type)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Small)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>small_msg-&gt;dealloc(buf);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Medium)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>medium_msg-&gt;dealloc(buf);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Pool<sp/>must<sp/>be<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structvt_1_1pool_1_1_pool_1ad9eb4c0efa76dc46487e23e265554943" kindref="member">Pool::defaultAlloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>alloc_buf<sp/>=<sp/>std::malloc(num_bytes<sp/>+<sp/>oversize<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(HeaderType));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HeaderManagerType::setHeader(</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>num_bytes,<sp/>oversize,<sp/>static_cast&lt;char*&gt;(alloc_buf)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a8d8654019bf80cd274bea1797645db37" kindref="member">Pool::defaultDealloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>std::free(ptr);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structvt_1_1pool_1_1_pool_1a0bf20e8b4ad1b85fb8952d81d433da55" kindref="member">Pool::alloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>oversize)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>vt_check_enabled(memory_pool)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>tryPooledAlloc(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fall<sp/>back<sp/>to<sp/>the<sp/>default<sp/>allocated<sp/>if<sp/>the<sp/>pooled<sp/>allocated<sp/>fails<sp/>to<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>valid<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>defaultAlloc(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a6865573ccc58716514eb9a164a52c256" kindref="member">normal</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pool::alloc<sp/>of<sp/>size={},<sp/>ret={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>num_bytes,<sp/>ret</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a73ef123aa04b44ae875716e2c7b95cab" kindref="member">Pool::dealloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buf_char<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(buf);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>actual_alloc_size<sp/>=<sp/>HeaderManagerType::getHeaderBytes(buf_char);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ptr_actual<sp/>=<sp/>HeaderManagerType::getHeaderPtr(buf_char);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a6865573ccc58716514eb9a164a52c256" kindref="member">normal</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pool::dealloc<sp/>of<sp/>buf={},<sp/>alloc_size={},<sp/>ptr={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>buf,<sp/>actual_alloc_size,<sp/><ref refid="debug__printconst_8h_1a2a030f018eca8f4bd882d5cf74a80674" kindref="member">print_ptr</ref>(ptr_actual)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>vt_check_enabled(memory_pool)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/>tryPooledDealloc(buf);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>defaultDealloc(ptr_actual);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1a4030898e09d0160c24743a7b949c0d46" kindref="member">Pool::SizeType</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1a2e81bedc1cd986b9994f66f614dac28d" kindref="member">Pool::remainingSize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>vt_check_enabled(memory_pool)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buf_char<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(buf);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>actual_alloc_size<sp/>=<sp/>HeaderManagerType::getHeaderBytes(buf_char);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize<sp/>=<sp/>HeaderManagerType::getHeaderOversizeBytes(buf_char);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type<sp/>=<sp/>getPoolType(actual_alloc_size,<sp/>oversize);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Small)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>small_msg-&gt;getNumBytes()<sp/>-<sp/>actual_alloc_size;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Medium)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>medium_msg-&gt;getNumBytes()<sp/>-<sp/>actual_alloc_size;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oversize;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1a4030898e09d0160c24743a7b949c0d46" kindref="member">Pool::SizeType</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1aa973879eb9a13583ba3ec5da29c77a20" kindref="member">Pool::allocatedSize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buf_char<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(buf);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HeaderManagerType::getHeaderBytes(buf_char)<sp/>+<sp/>HeaderManagerType::getHeaderOversizeBytes(buf_char);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1a62e1e77caac8e11f24be61acd6f4474b" kindref="member">Pool::tryGrowAllocation</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>grow_amount)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>non-pooled<sp/>alloc,<sp/>this<sp/>condition<sp/>will<sp/>always<sp/>be<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>remainingSize(buf)<sp/>would<sp/>be<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>remainingSize(buf)<sp/>&lt;<sp/>grow_amount<sp/>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*header<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">Header*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(HeaderManagerType::getHeaderPtr(reinterpret_cast&lt;char*&gt;(buf)));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>header-&gt;alloc_size<sp/>+=<sp/>grow_amount;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a3f34112821d767815d5049dc83503033" kindref="member">Pool::active</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="features__defines_8h_1a62fe65c25c90d03bc704afc5d80d7210" kindref="member">vt_check_enabled</ref>(memory_pool);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1aa11bdd76d9f6491ac412d5abc5c63274" kindref="member">Pool::active_env</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="features__defines_8h_1a62fe65c25c90d03bc704afc5d80d7210" kindref="member">vt_check_enabled</ref>(memory_pool)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>!<ref refid="features__defines_8h_1a62fe65c25c90d03bc704afc5d80d7210" kindref="member">vt_check_enabled</ref>(no_pool_alloc_env);</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">}}<sp/></highlight><highlight class="comment">//end<sp/>namespace<sp/>vt::pool</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/vt/pool/pool.cc"/>
  </compounddef>
</doxygen>
