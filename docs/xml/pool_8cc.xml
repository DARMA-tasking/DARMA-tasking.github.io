<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pool_8cc" kind="file" language="C++">
    <compoundname>pool.cc</compoundname>
    <includes refid="config_8h" local="yes">vt/config.h</includes>
    <includes refid="pool_8h" local="yes">vt/pool/pool.h</includes>
    <includes refid="memory__pool__equal_8h" local="yes">vt/pool/static_sized/memory_pool_equal.h</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">cassert</includes>
    <incdepgraph>
      <node id="183837">
        <label>list</label>
      </node>
      <node id="183711">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
      </node>
      <node id="183829">
        <label>atomic</label>
      </node>
      <node id="183779">
        <label>checkpoint/common.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2common_8h"/>
        <childnode refid="183780" relation="include">
        </childnode>
        <childnode refid="183748" relation="include">
        </childnode>
        <childnode refid="183710" relation="include">
        </childnode>
        <childnode refid="183781" relation="include">
        </childnode>
        <childnode refid="183734" relation="include">
        </childnode>
        <childnode refid="183749" relation="include">
        </childnode>
      </node>
      <node id="183756">
        <label>vt/runtime/component/component_pack.h</label>
        <link refid="component__pack_8h"/>
        <childnode refid="183757" relation="include">
        </childnode>
        <childnode refid="183874" relation="include">
        </childnode>
        <childnode refid="183837" relation="include">
        </childnode>
        <childnode refid="183824" relation="include">
        </childnode>
        <childnode refid="183759" relation="include">
        </childnode>
        <childnode refid="183789" relation="include">
        </childnode>
        <childnode refid="183718" relation="include">
        </childnode>
        <childnode refid="183875" relation="include">
        </childnode>
      </node>
      <node id="183874">
        <label>vt/runtime/component/movable_fn.h</label>
        <link refid="movable__fn_8h"/>
      </node>
      <node id="183718">
        <label>functional</label>
      </node>
      <node id="183861">
        <label>checkpoint/container/kokkos_complex_serialize.h</label>
        <link refid="kokkos__complex__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183835" relation="include">
        </childnode>
        <childnode refid="183800" relation="include">
        </childnode>
        <childnode refid="183813" relation="include">
        </childnode>
      </node>
      <node id="183843">
        <label>queue</label>
      </node>
      <node id="183760">
        <label>vt/runtime/component/component_dep.h</label>
        <link refid="component__dep_8h"/>
        <childnode refid="183758" relation="include">
        </childnode>
      </node>
      <node id="183883">
        <label>vt/messaging/envelope/envelope_get.h</label>
        <link refid="envelope__get_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183879" relation="include">
        </childnode>
        <childnode refid="183880" relation="include">
        </childnode>
        <childnode refid="183884" relation="include">
        </childnode>
      </node>
      <node id="183723">
        <label>vt/epoch/epoch_impl_type.h</label>
        <link refid="epoch__impl__type_8h"/>
        <childnode refid="183710" relation="include">
        </childnode>
        <childnode refid="183724" relation="include">
        </childnode>
      </node>
      <node id="183819">
        <label>checkpoint/dispatch/vrt/derived.h</label>
        <link refid="derived_8h"/>
        <childnode refid="183809" relation="include">
        </childnode>
        <childnode refid="183812" relation="include">
        </childnode>
        <childnode refid="183815" relation="include">
        </childnode>
        <childnode refid="183816" relation="include">
        </childnode>
        <childnode refid="183817" relation="include">
        </childnode>
      </node>
      <node id="183771">
        <label>limits</label>
      </node>
      <node id="183847">
        <label>checkpoint/container/string_serialize.h</label>
        <link refid="string__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
      </node>
      <node id="183830">
        <label>checkpoint/container/chrono_serialize.h</label>
        <link refid="chrono__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183831" relation="include">
        </childnode>
      </node>
      <node id="183729">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="183730" relation="include">
        </childnode>
        <childnode refid="183717" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
      </node>
      <node id="183730">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183732" relation="include">
        </childnode>
      </node>
      <node id="183774">
        <label>vt/timing/timing_type.h</label>
        <link refid="timing__type_8h"/>
        <childnode refid="183771" relation="include">
        </childnode>
        <childnode refid="183773" relation="include">
        </childnode>
        <childnode refid="183772" relation="include">
        </childnode>
      </node>
      <node id="183867">
        <label>vt/runtime/component/meter/timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183865" relation="include">
        </childnode>
        <childnode refid="183868" relation="include">
        </childnode>
      </node>
      <node id="183854">
        <label>checkpoint/container/view_serialize.h</label>
        <link refid="view__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183855" relation="include">
        </childnode>
        <childnode refid="183856" relation="include">
        </childnode>
        <childnode refid="183857" relation="include">
        </childnode>
      </node>
      <node id="183812">
        <label>checkpoint/dispatch/vrt/object_registry.h</label>
        <link refid="object__registry_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183809" relation="include">
        </childnode>
        <childnode refid="183813" relation="include">
        </childnode>
        <childnode refid="183718" relation="include">
        </childnode>
        <childnode refid="183732" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
      </node>
      <node id="183868">
        <label>vt/timing/timing.h</label>
        <link refid="timing_8h"/>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183869" relation="include">
        </childnode>
        <childnode refid="183735" relation="include">
        </childnode>
        <childnode refid="183774" relation="include">
        </childnode>
      </node>
      <node id="183778">
        <label>checkpoint/serializers/serializers_headers.h</label>
        <link refid="serializers__headers_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183782" relation="include">
        </childnode>
        <childnode refid="183783" relation="include">
        </childnode>
        <childnode refid="183784" relation="include">
        </childnode>
        <childnode refid="183785" relation="include">
        </childnode>
        <childnode refid="183795" relation="include">
        </childnode>
        <childnode refid="183797" relation="include">
        </childnode>
      </node>
      <node id="183784">
        <label>checkpoint/serializers/sizer.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2serializers_2sizer_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183782" relation="include">
        </childnode>
      </node>
      <node id="183832">
        <label>checkpoint/container/enum_serialize.h</label>
        <link refid="enum__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
      </node>
      <node id="183780">
        <label>checkpoint/cmake_config.h</label>
      </node>
      <node id="183770">
        <label>vt/utils/adt/histogram_approx.h</label>
        <link refid="histogram__approx_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183732" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183771" relation="include">
        </childnode>
        <childnode refid="183772" relation="include">
        </childnode>
        <childnode refid="183773" relation="include">
        </childnode>
        <childnode refid="183735" relation="include">
        </childnode>
      </node>
      <node id="183782">
        <label>checkpoint/serializers/base_serializer.h</label>
        <link refid="base__serializer_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
        <childnode refid="183748" relation="include">
        </childnode>
      </node>
      <node id="183706">
        <label>src/vt/pool/pool.cc</label>
        <link refid="pool_8cc"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183755" relation="include">
        </childnode>
        <childnode refid="183876" relation="include">
        </childnode>
        <childnode refid="183748" relation="include">
        </childnode>
        <childnode refid="183710" relation="include">
        </childnode>
        <childnode refid="183749" relation="include">
        </childnode>
      </node>
      <node id="183814">
        <label>checkpoint/traits/reconstructor_traits.h</label>
        <link refid="reconstructor__traits_8h"/>
        <childnode refid="183803" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
      </node>
      <node id="183710">
        <label>cstdint</label>
      </node>
      <node id="183805">
        <label>checkpoint/detector.h</label>
        <link refid="detector_8h"/>
        <childnode refid="183727" relation="include">
        </childnode>
      </node>
      <node id="183826">
        <label>checkpoint/container/array_serialize.h</label>
        <link refid="array__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183827" relation="include">
        </childnode>
      </node>
      <node id="183873">
        <label>vt/runtime/component/progressable.h</label>
        <link refid="progressable_8h"/>
      </node>
      <node id="183872">
        <label>vt/runtime/component/bufferable.h</label>
        <link refid="bufferable_8h"/>
      </node>
      <node id="183775">
        <label>variant</label>
      </node>
      <node id="183751">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="183739" relation="include">
        </childnode>
        <childnode refid="183717" relation="include">
        </childnode>
        <childnode refid="183745" relation="include">
        </childnode>
        <childnode refid="183750" relation="include">
        </childnode>
        <childnode refid="183752" relation="include">
        </childnode>
        <childnode refid="183729" relation="include">
        </childnode>
        <childnode refid="183749" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183754" relation="include">
        </childnode>
        <childnode refid="183735" relation="include">
        </childnode>
      </node>
      <node id="183880">
        <label>vt/messaging/envelope/envelope_base.h</label>
        <link refid="envelope__base_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183879" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
      </node>
      <node id="183725">
        <label>vt/epoch/epoch_type.h</label>
        <link refid="epoch__type_8h"/>
        <childnode refid="183726" relation="include">
        </childnode>
        <childnode refid="183723" relation="include">
        </childnode>
        <childnode refid="183728" relation="include">
        </childnode>
      </node>
      <node id="183859">
        <label>checkpoint/container/kokkos_unordered_map_serialize.h</label>
        <link refid="kokkos__unordered__map__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183835" relation="include">
        </childnode>
        <childnode refid="183800" relation="include">
        </childnode>
        <childnode refid="183813" relation="include">
        </childnode>
      </node>
      <node id="183802">
        <label>checkpoint/dispatch/dispatch_serializer.h</label>
        <link refid="dispatch__serializer_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183803" relation="include">
        </childnode>
        <childnode refid="183806" relation="include">
        </childnode>
        <childnode refid="183807" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183748" relation="include">
        </childnode>
      </node>
      <node id="183735">
        <label>fmt-vt/core.h</label>
      </node>
      <node id="183892">
        <label>vt/messaging/envelope/envelope_ref.impl.h</label>
        <link refid="envelope__ref_8impl_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183891" relation="include">
        </childnode>
      </node>
      <node id="183845">
        <label>checkpoint/container/raw_ptr_serialize.h</label>
        <link refid="raw__ptr__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
      </node>
      <node id="183835">
        <label>checkpoint/dispatch/allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="183800" relation="include">
        </childnode>
        <childnode refid="183789" relation="include">
        </childnode>
      </node>
      <node id="183772">
        <label>cmath</label>
      </node>
      <node id="183749">
        <label>cassert</label>
      </node>
      <node id="183746">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="183739" relation="include">
        </childnode>
        <childnode refid="183717" relation="include">
        </childnode>
        <childnode refid="183745" relation="include">
        </childnode>
        <childnode refid="183747" relation="include">
        </childnode>
        <childnode refid="183729" relation="include">
        </childnode>
        <childnode refid="183740" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183749" relation="include">
        </childnode>
        <childnode refid="183735" relation="include">
        </childnode>
      </node>
      <node id="183721">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="183722" relation="include">
        </childnode>
        <childnode refid="183723" relation="include">
        </childnode>
      </node>
      <node id="183860">
        <label>checkpoint/container/kokkos_pair_serialize.h</label>
        <link refid="kokkos__pair__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183835" relation="include">
        </childnode>
        <childnode refid="183800" relation="include">
        </childnode>
        <childnode refid="183813" relation="include">
        </childnode>
      </node>
      <node id="183825">
        <label>stdexcept</label>
      </node>
      <node id="183739">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="183717" relation="include">
        </childnode>
      </node>
      <node id="183833">
        <label>checkpoint/container/function_serialize.h</label>
        <link refid="function__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183718" relation="include">
        </childnode>
      </node>
      <node id="183813">
        <label>checkpoint/dispatch/reconstructor.h</label>
        <link refid="reconstructor_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183814" relation="include">
        </childnode>
        <childnode refid="183804" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183748" relation="include">
        </childnode>
      </node>
      <node id="183900">
        <label>vt/pool/header/pool_header.h</label>
        <link refid="pool__header_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
      </node>
      <node id="183862">
        <label>checkpoint/checkpoint_api.impl.h</label>
        <link refid="checkpoint__api_8impl_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183777" relation="include">
        </childnode>
        <childnode refid="183788" relation="include">
        </childnode>
        <childnode refid="183787" relation="include">
        </childnode>
        <childnode refid="183789" relation="include">
        </childnode>
      </node>
      <node id="183722">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
        <childnode refid="183717" relation="include">
        </childnode>
      </node>
      <node id="183785">
        <label>checkpoint/serializers/packer.h</label>
        <link refid="packer_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183786" relation="include">
        </childnode>
        <childnode refid="183787" relation="include">
        </childnode>
        <childnode refid="183790" relation="include">
        </childnode>
        <childnode refid="183791" relation="include">
        </childnode>
        <childnode refid="183792" relation="include">
        </childnode>
        <childnode refid="183793" relation="include">
        </childnode>
      </node>
      <node id="183736">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="183737" relation="include">
        </childnode>
        <childnode refid="183741" relation="include">
        </childnode>
        <childnode refid="183744" relation="include">
        </childnode>
      </node>
      <node id="183731">
        <label>string</label>
      </node>
      <node id="183791">
        <label>checkpoint/buffer/user_buffer.h</label>
        <link refid="user__buffer_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183787" relation="include">
        </childnode>
      </node>
      <node id="183853">
        <label>checkpoint/container/unique_ptr_serialize.h</label>
        <link refid="unique__ptr__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183813" relation="include">
        </childnode>
        <childnode refid="183810" relation="include">
        </childnode>
      </node>
      <node id="183762">
        <label>vt/runtime/component/base.h</label>
        <link refid="src_2vt_2runtime_2component_2base_8h"/>
        <childnode refid="183717" relation="include">
        </childnode>
        <childnode refid="183763" relation="include">
        </childnode>
        <childnode refid="183872" relation="include">
        </childnode>
        <childnode refid="183873" relation="include">
        </childnode>
      </node>
      <node id="183787">
        <label>checkpoint/buffer/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183788" relation="include">
        </childnode>
        <childnode refid="183789" relation="include">
        </childnode>
      </node>
      <node id="183857">
        <label>checkpoint/container/view_traverse_ndim.h</label>
        <link refid="view__traverse__ndim_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183855" relation="include">
        </childnode>
      </node>
      <node id="183840">
        <label>map</label>
      </node>
      <node id="183895">
        <label>vt/scheduler/priority.h</label>
        <link refid="priority_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183827" relation="include">
        </childnode>
        <childnode refid="183734" relation="include">
        </childnode>
      </node>
      <node id="183869">
        <label>EngFormat-Cpp/eng_format.hpp</label>
      </node>
      <node id="183807">
        <label>checkpoint/dispatch/dispatch_serializer_nonbyte.h</label>
        <link refid="dispatch__serializer__nonbyte_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183803" relation="include">
        </childnode>
        <childnode refid="183808" relation="include">
        </childnode>
        <childnode refid="183810" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183748" relation="include">
        </childnode>
        <childnode refid="183749" relation="include">
        </childnode>
      </node>
      <node id="183820">
        <label>checkpoint/dispatch/dispatch_byte_macro.h</label>
        <link refid="dispatch__byte__macro_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
      </node>
      <node id="183752">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="183748" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183732" relation="include">
        </childnode>
        <childnode refid="183753" relation="include">
        </childnode>
      </node>
      <node id="183753">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="183752" relation="include">
        </childnode>
        <childnode refid="183729" relation="include">
        </childnode>
        <childnode refid="183748" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183732" relation="include">
        </childnode>
        <childnode refid="183735" relation="include">
        </childnode>
      </node>
      <node id="183759">
        <label>unordered_set</label>
      </node>
      <node id="183890">
        <label>vt/messaging/envelope/envelope_test.impl.h</label>
        <link refid="envelope__test_8impl_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183885" relation="include">
        </childnode>
      </node>
      <node id="183728">
        <label>fmt-vt/format.h</label>
      </node>
      <node id="183879">
        <label>vt/messaging/envelope/envelope_type.h</label>
        <link refid="envelope__type_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
      </node>
      <node id="183804">
        <label>checkpoint/dispatch/reconstructor_tag.h</label>
        <link refid="reconstructor__tag_8h"/>
      </node>
      <node id="183809">
        <label>checkpoint/dispatch/vrt/registry_common.h</label>
        <link refid="registry__common_8h"/>
        <childnode refid="183727" relation="include">
        </childnode>
      </node>
      <node id="183863">
        <label>vt/runtime/component/diagnostic_meter.h</label>
        <link refid="diagnostic__meter_8h"/>
        <childnode refid="183864" relation="include">
        </childnode>
        <childnode refid="183866" relation="include">
        </childnode>
        <childnode refid="183867" relation="include">
        </childnode>
        <childnode refid="183870" relation="include">
        </childnode>
        <childnode refid="183774" relation="include">
        </childnode>
      </node>
      <node id="183836">
        <label>checkpoint/container/container_serialize.h</label>
        <link refid="container__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
      </node>
      <node id="183798">
        <label>ostream</label>
      </node>
      <node id="183709">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="183710" relation="include">
        </childnode>
        <childnode refid="183711" relation="include">
        </childnode>
        <childnode refid="183712" relation="include">
        </childnode>
        <childnode refid="183714" relation="include">
        </childnode>
      </node>
      <node id="183803">
        <label>checkpoint/traits/serializable_traits.h</label>
        <link refid="serializable__traits_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183804" relation="include">
        </childnode>
        <childnode refid="183805" relation="include">
        </childnode>
        <childnode refid="183710" relation="include">
        </childnode>
        <childnode refid="183749" relation="include">
        </childnode>
      </node>
      <node id="183815">
        <label>checkpoint/dispatch/vrt/serializer_registry.h</label>
        <link refid="serializer__registry_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183809" relation="include">
        </childnode>
        <childnode refid="183718" relation="include">
        </childnode>
        <childnode refid="183732" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
      </node>
      <node id="183864">
        <label>vt/runtime/component/meter/counter.h</label>
        <link refid="counter_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183865" relation="include">
        </childnode>
      </node>
      <node id="183724">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="183717" relation="include">
        </childnode>
        <childnode refid="183719" relation="include">
        </childnode>
      </node>
      <node id="183894">
        <label>vt/messaging/envelope/envelope_setup.impl.h</label>
        <link refid="envelope__setup_8impl_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183893" relation="include">
        </childnode>
        <childnode refid="183895" relation="include">
        </childnode>
      </node>
      <node id="183850">
        <label>checkpoint/container/tuple_serialize.h</label>
        <link refid="tuple__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183734" relation="include">
        </childnode>
        <childnode refid="183851" relation="include">
        </childnode>
      </node>
      <node id="183796">
        <label>checkpoint/serializers/unpacker.impl.h</label>
        <link refid="unpacker_8impl_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183786" relation="include">
        </childnode>
        <childnode refid="183795" relation="include">
        </childnode>
        <childnode refid="183748" relation="include">
        </childnode>
        <childnode refid="183794" relation="include">
        </childnode>
      </node>
      <node id="183848">
        <label>checkpoint/container/thread_serialize.h</label>
        <link refid="thread__serialize_8h"/>
        <childnode refid="183849" relation="include">
        </childnode>
        <childnode refid="183779" relation="include">
        </childnode>
      </node>
      <node id="183810">
        <label>checkpoint/dispatch/vrt/virtual_serialize.h</label>
        <link refid="virtual__serialize_8h"/>
        <childnode refid="183811" relation="include">
        </childnode>
        <childnode refid="183819" relation="include">
        </childnode>
      </node>
      <node id="183761">
        <label>vt/runtime/component/component_traits.h</label>
        <link refid="component__traits_8h"/>
        <childnode refid="183727" relation="include">
        </childnode>
      </node>
      <node id="183822">
        <label>checkpoint/dispatch/type_registry.h</label>
        <link refid="type__registry_8h"/>
        <childnode refid="183823" relation="include">
        </childnode>
        <childnode refid="183710" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183824" relation="include">
        </childnode>
      </node>
      <node id="183765">
        <label>vt/runtime/component/component_reduce.h</label>
        <link refid="component__reduce_8h"/>
        <childnode refid="183717" relation="include">
        </childnode>
      </node>
      <node id="183758">
        <label>vt/runtime/component/component_registry.h</label>
        <link refid="component__registry_8h"/>
        <childnode refid="183717" relation="include">
        </childnode>
        <childnode refid="183732" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183759" relation="include">
        </childnode>
      </node>
      <node id="183708">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="183709" relation="include">
        </childnode>
        <childnode refid="183715" relation="include">
        </childnode>
      </node>
      <node id="183881">
        <label>vt/messaging/envelope/envelope_set.h</label>
        <link refid="envelope__set_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183879" relation="include">
        </childnode>
        <childnode refid="183880" relation="include">
        </childnode>
        <childnode refid="183882" relation="include">
        </childnode>
      </node>
      <node id="183738">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="183731" relation="include">
        </childnode>
      </node>
      <node id="183717">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="183710" relation="include">
        </childnode>
        <childnode refid="183718" relation="include">
        </childnode>
      </node>
      <node id="183742">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="183716" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
        <childnode refid="183743" relation="include">
        </childnode>
      </node>
      <node id="183817">
        <label>checkpoint/dispatch/vrt/serialize_instantiator.h</label>
        <link refid="serialize__instantiator_8h"/>
        <childnode refid="183815" relation="include">
        </childnode>
        <childnode refid="183818" relation="include">
        </childnode>
      </node>
      <node id="183788">
        <label>checkpoint/checkpoint_api.h</label>
        <link refid="checkpoint__api_8h"/>
        <childnode refid="183748" relation="include">
        </childnode>
        <childnode refid="183718" relation="include">
        </childnode>
        <childnode refid="183789" relation="include">
        </childnode>
      </node>
      <node id="183733">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
        <childnode refid="183734" relation="include">
        </childnode>
      </node>
      <node id="183870">
        <label>vt/runtime/component/meter/counter_gauge.h</label>
        <link refid="counter__gauge_8h"/>
        <childnode refid="183864" relation="include">
        </childnode>
        <childnode refid="183866" relation="include">
        </childnode>
      </node>
      <node id="183878">
        <label>vt/messaging/envelope/envelope.h</label>
        <link refid="envelope_2envelope_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183879" relation="include">
        </childnode>
        <childnode refid="183880" relation="include">
        </childnode>
        <childnode refid="183881" relation="include">
        </childnode>
        <childnode refid="183883" relation="include">
        </childnode>
        <childnode refid="183885" relation="include">
        </childnode>
        <childnode refid="183891" relation="include">
        </childnode>
        <childnode refid="183893" relation="include">
        </childnode>
        <childnode refid="183896" relation="include">
        </childnode>
        <childnode refid="183897" relation="include">
        </childnode>
      </node>
      <node id="183737">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="183738" relation="include">
        </childnode>
        <childnode refid="183717" relation="include">
        </childnode>
        <childnode refid="183739" relation="include">
        </childnode>
        <childnode refid="183740" relation="include">
        </childnode>
        <childnode refid="183712" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183735" relation="include">
        </childnode>
      </node>
      <node id="183766">
        <label>vt/runtime/component/diagnostic_types.h</label>
        <link refid="diagnostic__types_8h"/>
        <childnode refid="183710" relation="include">
        </childnode>
      </node>
      <node id="183899">
        <label>vt/messaging/envelope/payload_envelope.h</label>
        <link refid="payload__envelope_8h"/>
        <childnode refid="183878" relation="include">
        </childnode>
      </node>
      <node id="183781">
        <label>cstdio</label>
      </node>
      <node id="183808">
        <label>checkpoint/dispatch/vrt/virtual_serialize_traits.h</label>
        <link refid="virtual__serialize__traits_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183809" relation="include">
        </childnode>
        <childnode refid="183805" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
      </node>
      <node id="183755">
        <label>vt/pool/pool.h</label>
        <link refid="pool_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183756" relation="include">
        </childnode>
        <childnode refid="183876" relation="include">
        </childnode>
        <childnode refid="183900" relation="include">
        </childnode>
        <childnode refid="183732" relation="include">
        </childnode>
        <childnode refid="183710" relation="include">
        </childnode>
        <childnode refid="183749" relation="include">
        </childnode>
        <childnode refid="183789" relation="include">
        </childnode>
      </node>
      <node id="183846">
        <label>checkpoint/container/shared_ptr_serialize.h</label>
        <link refid="shared__ptr__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
      </node>
      <node id="183720">
        <label>tuple</label>
      </node>
      <node id="183793">
        <label>checkpoint/serializers/packer.impl.h</label>
        <link refid="packer_8impl_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183786" relation="include">
        </childnode>
        <childnode refid="183787" relation="include">
        </childnode>
        <childnode refid="183794" relation="include">
        </childnode>
      </node>
      <node id="183818">
        <label>checkpoint/dispatch/vrt/link_derived_to_base_idx.h</label>
        <link refid="link__derived__to__base__idx_8h"/>
        <childnode refid="183815" relation="include">
        </childnode>
      </node>
      <node id="183726">
        <label>vt/utils/strong/strong_type.h</label>
        <link refid="strong__type_8h"/>
        <childnode refid="183718" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
      </node>
      <node id="183865">
        <label>vt/runtime/component/meter/stats_pack.h</label>
        <link refid="stats__pack_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
      </node>
      <node id="183715">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="183716" relation="include">
        </childnode>
        <childnode refid="183709" relation="include">
        </childnode>
        <childnode refid="183729" relation="include">
        </childnode>
        <childnode refid="183733" relation="include">
        </childnode>
        <childnode refid="183735" relation="include">
        </childnode>
      </node>
      <node id="183866">
        <label>vt/runtime/component/meter/gauge.h</label>
        <link refid="gauge_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183865" relation="include">
        </childnode>
      </node>
      <node id="183884">
        <label>vt/messaging/envelope/envelope_get.impl.h</label>
        <link refid="envelope__get_8impl_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183883" relation="include">
        </childnode>
      </node>
      <node id="183844">
        <label>stack</label>
      </node>
      <node id="183732">
        <label>vector</label>
      </node>
      <node id="183886">
        <label>vt/context/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="183789" relation="include">
        </childnode>
        <childnode refid="183887" relation="include">
        </childnode>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183756" relation="include">
        </childnode>
        <childnode refid="183888" relation="include">
        </childnode>
        <childnode refid="183889" relation="include">
        </childnode>
      </node>
      <node id="183851">
        <label>new</label>
      </node>
      <node id="183801">
        <label>checkpoint/dispatch/clean_type.h</label>
        <link refid="clean__type_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
      </node>
      <node id="183806">
        <label>checkpoint/dispatch/dispatch_serializer_byte.h</label>
        <link refid="dispatch__serializer__byte_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183803" relation="include">
        </childnode>
        <childnode refid="183807" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183748" relation="include">
        </childnode>
      </node>
      <node id="183828">
        <label>checkpoint/container/atomic_serialize.h</label>
        <link refid="atomic__serialize_8h"/>
        <childnode refid="183829" relation="include">
        </childnode>
        <childnode refid="183779" relation="include">
        </childnode>
      </node>
      <node id="183734">
        <label>utility</label>
      </node>
      <node id="183852">
        <label>checkpoint/container/vector_serialize.h</label>
        <link refid="vector__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183835" relation="include">
        </childnode>
        <childnode refid="183800" relation="include">
        </childnode>
        <childnode refid="183813" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183732" relation="include">
        </childnode>
      </node>
      <node id="183827">
        <label>array</label>
      </node>
      <node id="183891">
        <label>vt/messaging/envelope/envelope_ref.h</label>
        <link refid="envelope__ref_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183879" relation="include">
        </childnode>
        <childnode refid="183880" relation="include">
        </childnode>
        <childnode refid="183892" relation="include">
        </childnode>
      </node>
      <node id="183754">
        <label>sstream</label>
      </node>
      <node id="183842">
        <label>checkpoint/container/queue_serialize.h</label>
        <link refid="queue__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183843" relation="include">
        </childnode>
        <childnode refid="183844" relation="include">
        </childnode>
      </node>
      <node id="183811">
        <label>checkpoint/dispatch/vrt/base.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2vrt_2base_8h"/>
        <childnode refid="183809" relation="include">
        </childnode>
        <childnode refid="183812" relation="include">
        </childnode>
        <childnode refid="183815" relation="include">
        </childnode>
        <childnode refid="183816" relation="include">
        </childnode>
        <childnode refid="183817" relation="include">
        </childnode>
      </node>
      <node id="183797">
        <label>checkpoint/serializers/stream_serializer.h</label>
        <link refid="stream__serializer_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183782" relation="include">
        </childnode>
        <childnode refid="183798" relation="include">
        </childnode>
        <childnode refid="183799" relation="include">
        </childnode>
      </node>
      <node id="183764">
        <label>vt/runtime/component/component_name.h</label>
        <link refid="component__name_8h"/>
        <childnode refid="183731" relation="include">
        </childnode>
      </node>
      <node id="183768">
        <label>vt/runtime/component/diagnostic_value.h</label>
        <link refid="diagnostic__value_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183766" relation="include">
        </childnode>
        <childnode refid="183769" relation="include">
        </childnode>
        <childnode refid="183776" relation="include">
        </childnode>
        <childnode refid="183770" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183772" relation="include">
        </childnode>
      </node>
      <node id="183713">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="183747">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="183710" relation="include">
        </childnode>
        <childnode refid="183748" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183732" relation="include">
        </childnode>
      </node>
      <node id="183712">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
        <childnode refid="183713" relation="include">
        </childnode>
      </node>
      <node id="183790">
        <label>checkpoint/buffer/managed_buffer.h</label>
        <link refid="managed__buffer_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183787" relation="include">
        </childnode>
        <childnode refid="183789" relation="include">
        </childnode>
      </node>
      <node id="183748">
        <label>cstdlib</label>
      </node>
      <node id="183800">
        <label>checkpoint/dispatch/dispatch.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183787" relation="include">
        </childnode>
        <childnode refid="183801" relation="include">
        </childnode>
        <childnode refid="183802" relation="include">
        </childnode>
        <childnode refid="183820" relation="include">
        </childnode>
        <childnode refid="183813" relation="include">
        </childnode>
        <childnode refid="183718" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183821" relation="include">
        </childnode>
      </node>
      <node id="183741">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="183739" relation="include">
        </childnode>
        <childnode refid="183742" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
      </node>
      <node id="183821">
        <label>checkpoint/dispatch/dispatch.impl.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8impl_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183800" relation="include">
        </childnode>
        <childnode refid="183822" relation="include">
        </childnode>
        <childnode refid="183825" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
      </node>
      <node id="183777">
        <label>checkpoint/checkpoint.h</label>
        <link refid="checkpoint_8h"/>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183800" relation="include">
        </childnode>
        <childnode refid="183803" relation="include">
        </childnode>
        <childnode refid="183826" relation="include">
        </childnode>
        <childnode refid="183828" relation="include">
        </childnode>
        <childnode refid="183830" relation="include">
        </childnode>
        <childnode refid="183832" relation="include">
        </childnode>
        <childnode refid="183833" relation="include">
        </childnode>
        <childnode refid="183834" relation="include">
        </childnode>
        <childnode refid="183839" relation="include">
        </childnode>
        <childnode refid="183842" relation="include">
        </childnode>
        <childnode refid="183845" relation="include">
        </childnode>
        <childnode refid="183846" relation="include">
        </childnode>
        <childnode refid="183847" relation="include">
        </childnode>
        <childnode refid="183848" relation="include">
        </childnode>
        <childnode refid="183850" relation="include">
        </childnode>
        <childnode refid="183852" relation="include">
        </childnode>
        <childnode refid="183853" relation="include">
        </childnode>
        <childnode refid="183854" relation="include">
        </childnode>
        <childnode refid="183858" relation="include">
        </childnode>
        <childnode refid="183859" relation="include">
        </childnode>
        <childnode refid="183860" relation="include">
        </childnode>
        <childnode refid="183861" relation="include">
        </childnode>
        <childnode refid="183788" relation="include">
        </childnode>
        <childnode refid="183862" relation="include">
        </childnode>
      </node>
      <node id="183888">
        <label>vt/context/context_attorney_fwd.h</label>
        <link refid="context__attorney__fwd_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
      </node>
      <node id="183898">
        <label>vt/messaging/envelope/envelope_extended_util.impl.h</label>
        <link refid="envelope__extended__util_8impl_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183897" relation="include">
        </childnode>
      </node>
      <node id="183823">
        <label>cstddef</label>
      </node>
      <node id="183896">
        <label>vt/messaging/envelope/envelope_extended.h</label>
        <link refid="envelope__extended_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183879" relation="include">
        </childnode>
        <childnode refid="183880" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
      </node>
      <node id="183839">
        <label>checkpoint/container/map_serialize.h</label>
        <link refid="map__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183835" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183836" relation="include">
        </childnode>
        <childnode refid="183840" relation="include">
        </childnode>
        <childnode refid="183824" relation="include">
        </childnode>
        <childnode refid="183841" relation="include">
        </childnode>
        <childnode refid="183759" relation="include">
        </childnode>
      </node>
      <node id="183838">
        <label>deque</label>
      </node>
      <node id="183824">
        <label>unordered_map</label>
      </node>
      <node id="183834">
        <label>checkpoint/container/list_serialize.h</label>
        <link refid="list__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183835" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183836" relation="include">
        </childnode>
        <childnode refid="183837" relation="include">
        </childnode>
        <childnode refid="183838" relation="include">
        </childnode>
      </node>
      <node id="183885">
        <label>vt/messaging/envelope/envelope_test.h</label>
        <link refid="envelope__test_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183886" relation="include">
        </childnode>
        <childnode refid="183879" relation="include">
        </childnode>
        <childnode refid="183880" relation="include">
        </childnode>
        <childnode refid="183890" relation="include">
        </childnode>
      </node>
      <node id="183882">
        <label>vt/messaging/envelope/envelope_set.impl.h</label>
        <link refid="envelope__set_8impl_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183881" relation="include">
        </childnode>
      </node>
      <node id="183876">
        <label>vt/pool/static_sized/memory_pool_equal.h</label>
        <link refid="memory__pool__equal_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183877" relation="include">
        </childnode>
        <childnode refid="183886" relation="include">
        </childnode>
        <childnode refid="183900" relation="include">
        </childnode>
        <childnode refid="183732" relation="include">
        </childnode>
        <childnode refid="183710" relation="include">
        </childnode>
      </node>
      <node id="183792">
        <label>checkpoint/buffer/io_buffer.h</label>
        <link refid="io__buffer_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183787" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
      </node>
      <node id="183716">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="183717" relation="include">
        </childnode>
        <childnode refid="183719" relation="include">
        </childnode>
        <childnode refid="183721" relation="include">
        </childnode>
        <childnode refid="183724" relation="include">
        </childnode>
        <childnode refid="183725" relation="include">
        </childnode>
      </node>
      <node id="183795">
        <label>checkpoint/serializers/unpacker.h</label>
        <link refid="unpacker_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183786" relation="include">
        </childnode>
        <childnode refid="183791" relation="include">
        </childnode>
        <childnode refid="183796" relation="include">
        </childnode>
      </node>
      <node id="183877">
        <label>vt/messaging/envelope.h</label>
        <link refid="envelope_8h"/>
        <childnode refid="183878" relation="include">
        </childnode>
        <childnode refid="183899" relation="include">
        </childnode>
      </node>
      <node id="183831">
        <label>chrono</label>
      </node>
      <node id="183745">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="183717" relation="include">
        </childnode>
        <childnode refid="183739" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183746" relation="include">
        </childnode>
      </node>
      <node id="183887">
        <label>mpi.h</label>
      </node>
      <node id="183893">
        <label>vt/messaging/envelope/envelope_setup.h</label>
        <link refid="envelope__setup_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183879" relation="include">
        </childnode>
        <childnode refid="183880" relation="include">
        </childnode>
        <childnode refid="183894" relation="include">
        </childnode>
      </node>
      <node id="183849">
        <label>thread</label>
      </node>
      <node id="183855">
        <label>checkpoint/container/view_traits_extract.h</label>
        <link refid="view__traits__extract_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
      </node>
      <node id="183875">
        <label>vt/runtime/component/component_pack.impl.h</label>
        <link refid="component__pack_8impl_8h"/>
        <childnode refid="183756" relation="include">
        </childnode>
      </node>
      <node id="183719">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="183717" relation="include">
        </childnode>
        <childnode refid="183710" relation="include">
        </childnode>
        <childnode refid="183718" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
      </node>
      <node id="183769">
        <label>vt/runtime/component/diagnostic_erased_value.h</label>
        <link refid="diagnostic__erased__value_8h"/>
        <childnode refid="183766" relation="include">
        </childnode>
        <childnode refid="183770" relation="include">
        </childnode>
        <childnode refid="183774" relation="include">
        </childnode>
        <childnode refid="183726" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183775" relation="include">
        </childnode>
      </node>
      <node id="183763">
        <label>vt/runtime/component/diagnostic.h</label>
        <link refid="diagnostic_8h"/>
        <childnode refid="183764" relation="include">
        </childnode>
        <childnode refid="183765" relation="include">
        </childnode>
        <childnode refid="183766" relation="include">
        </childnode>
        <childnode refid="183767" relation="include">
        </childnode>
        <childnode refid="183768" relation="include">
        </childnode>
        <childnode refid="183863" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183789" relation="include">
        </childnode>
        <childnode refid="183824" relation="include">
        </childnode>
        <childnode refid="183718" relation="include">
        </childnode>
        <childnode refid="183871" relation="include">
        </childnode>
      </node>
      <node id="183727">
        <label>type_traits</label>
      </node>
      <node id="183841">
        <label>set</label>
      </node>
      <node id="183897">
        <label>vt/messaging/envelope/envelope_extended_util.h</label>
        <link refid="envelope__extended__util_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183879" relation="include">
        </childnode>
        <childnode refid="183880" relation="include">
        </childnode>
        <childnode refid="183896" relation="include">
        </childnode>
        <childnode refid="183898" relation="include">
        </childnode>
      </node>
      <node id="183858">
        <label>checkpoint/container/variant_serialize.h</label>
        <link refid="variant__serialize_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183835" relation="include">
        </childnode>
        <childnode refid="183775" relation="include">
        </childnode>
      </node>
      <node id="183740">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="183716" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
      </node>
      <node id="183707">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="183708" relation="include">
        </childnode>
        <childnode refid="183716" relation="include">
        </childnode>
        <childnode refid="183736" relation="include">
        </childnode>
      </node>
      <node id="183776">
        <label>vt/runtime/component/diagnostic_value_base.h</label>
        <link refid="diagnostic__value__base_8h"/>
        <childnode refid="183766" relation="include">
        </childnode>
        <childnode refid="183767" relation="include">
        </childnode>
        <childnode refid="183769" relation="include">
        </childnode>
        <childnode refid="183777" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
      </node>
      <node id="183773">
        <label>algorithm</label>
      </node>
      <node id="183856">
        <label>checkpoint/container/view_traverse_manual.h</label>
        <link refid="view__traverse__manual_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183778" relation="include">
        </childnode>
        <childnode refid="183855" relation="include">
        </childnode>
      </node>
      <node id="183816">
        <label>checkpoint/dispatch/vrt/inheritance_assert_helpers.h</label>
        <link refid="inheritance__assert__helpers_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
      </node>
      <node id="183786">
        <label>checkpoint/serializers/memory_serializer.h</label>
        <link refid="memory__serializer_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183782" relation="include">
        </childnode>
      </node>
      <node id="183757">
        <label>vt/runtime/component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="183741" relation="include">
        </childnode>
        <childnode refid="183758" relation="include">
        </childnode>
        <childnode refid="183760" relation="include">
        </childnode>
        <childnode refid="183761" relation="include">
        </childnode>
        <childnode refid="183762" relation="include">
        </childnode>
        <childnode refid="183789" relation="include">
        </childnode>
      </node>
      <node id="183714">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="183794">
        <label>cstring</label>
      </node>
      <node id="183889">
        <label>vt/runnable/runnable.fwd.h</label>
        <link refid="runnable_8fwd_8h"/>
      </node>
      <node id="183871">
        <label>vt/runtime/component/diagnostic.impl.h</label>
        <link refid="diagnostic_8impl_8h"/>
        <childnode refid="183707" relation="include">
        </childnode>
        <childnode refid="183763" relation="include">
        </childnode>
        <childnode refid="183768" relation="include">
        </childnode>
        <childnode refid="183789" relation="include">
        </childnode>
        <childnode refid="183771" relation="include">
        </childnode>
      </node>
      <node id="183767">
        <label>vt/runtime/component/diagnostic_units.h</label>
        <link refid="diagnostic__units_8h"/>
      </node>
      <node id="183789">
        <label>memory</label>
      </node>
      <node id="183799">
        <label>istream</label>
      </node>
      <node id="183744">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="183745" relation="include">
        </childnode>
        <childnode refid="183750" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
      </node>
      <node id="183750">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="183739" relation="include">
        </childnode>
        <childnode refid="183717" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183751" relation="include">
        </childnode>
      </node>
      <node id="183783">
        <label>checkpoint/serializers/footprinter.h</label>
        <link refid="footprinter_8h"/>
        <childnode refid="183779" relation="include">
        </childnode>
        <childnode refid="183782" relation="include">
        </childnode>
      </node>
      <node id="183743">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="183716" relation="include">
        </childnode>
        <childnode refid="183709" relation="include">
        </childnode>
        <childnode refid="183739" relation="include">
        </childnode>
        <childnode refid="183742" relation="include">
        </childnode>
        <childnode refid="183740" relation="include">
        </childnode>
        <childnode refid="183738" relation="include">
        </childnode>
        <childnode refid="183731" relation="include">
        </childnode>
        <childnode refid="183720" relation="include">
        </childnode>
        <childnode refid="183727" relation="include">
        </childnode>
        <childnode refid="183735" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1pool">vt::pool</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool.cc</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2021<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">vt/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pool_8h" kindref="compound">vt/pool/pool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memory__pool__equal_8h" kindref="compound">vt/pool/static_sized/memory_pool_equal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1a55a236c42c331940884370c85fb18e36" kindref="member">Pool::Pool</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>:<sp/>small_msg(initSPool()),<sp/>medium_msg(initMPool())</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1a9f94985824d12c43357cfe50eaaefd38" kindref="member">Pool::MemPoolSType</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1a833da3cd4d410ba607b6e7b000810882" kindref="member">Pool::initSPool</ref>()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;MemoryPoolType&lt;memory_size_small&gt;&gt;();</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a8a201b9a843e47cd4e7b568a8e4483da" kindref="member">Pool::MemPoolMType</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1ab768c364b348107112f960ce0704565d" kindref="member">Pool::initMPool</ref>()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;MemoryPoolType&lt;memory_size_medium&gt;&gt;(64);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1ace8d36439e5e599a8ee68b2f1a6a6b28" kindref="member">Pool::ePoolSize</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1a6b0dea52c80b6493431ce94840e7bc4a" kindref="member">Pool::getPoolType</ref>(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize</highlight></codeline>
<codeline lineno="68"><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Header<sp/>size<sp/>is<sp/>accounted<sp/>for<sp/>internally<sp/>in<sp/>MemoryPoolEqual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Blocks<sp/>will<sp/>include<sp/>header<sp/>size,<sp/>but<sp/>getNumBytes<sp/>won&apos;t<sp/>so<sp/>we<sp/>shouldn&apos;t<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>total_bytes<sp/>=<sp/>num_bytes<sp/>+<sp/>oversize;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_bytes<sp/>&lt;=<sp/>static_cast&lt;size_t&gt;(small_msg-&gt;getNumBytes()))<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ePoolSize::Small;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_bytes<sp/>&lt;=<sp/>static_cast&lt;size_t&gt;(medium_msg-&gt;getNumBytes()))<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ePoolSize::Medium;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ePoolSize::Malloc;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">std::byte*<sp/><ref refid="structvt_1_1pool_1_1_pool_1a631cce45e88f1cf1e23a8ac149909f8f" kindref="member">Pool::tryPooledAlloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type<sp/>=<sp/>getPoolType(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>!=<sp/>ePoolSize::Malloc)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pooledAlloc(num_bytes,<sp/>oversize,<sp/>pool_type);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a9ee0259f4e26f6f51854726dd48a6f99" kindref="member">Pool::tryPooledDealloc</ref>(std::byte*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>actual_alloc_size<sp/>=<sp/>HeaderManagerType::getHeaderBytes(buf);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize<sp/>=<sp/>HeaderManagerType::getHeaderOversizeBytes(buf);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type<sp/>=<sp/>getPoolType(actual_alloc_size,<sp/>oversize);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>!=<sp/>ePoolSize::Malloc)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>poolDealloc(buf,<sp/>pool_type);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">std::byte*<sp/><ref refid="structvt_1_1pool_1_1_pool_1a666c21cfa0ccb0cdae9e2d2bb9c451d5" kindref="member">Pool::pooledAlloc</ref>(</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize,<sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type</highlight></codeline>
<codeline lineno="107"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>std::byte*<sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a6865573ccc58716514eb9a164a52c256" kindref="member">normal</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pool::pooled_alloc<sp/>of<sp/>size={},<sp/>type={},<sp/>ret={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>num_bytes,<sp/><ref refid="debug__printconst_8h_1a06faeab1b7400ff3ca7a00cfa8a32c06" kindref="member">print_pool_type</ref>(pool_type),<sp/><ref refid="debug__printconst_8h_1a2a030f018eca8f4bd882d5cf74a80674" kindref="member">print_ptr</ref>(ret)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Small)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref><sp/>=<sp/>small_msg.get();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>-&gt;alloc(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Medium)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref><sp/>=<sp/>medium_msg.get();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>-&gt;alloc(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Pool<sp/>must<sp/>be<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1ad2c9725e9fb05acffff18a4e67786960" kindref="member">Pool::poolDealloc</ref>(std::byte*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf,<sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a6865573ccc58716514eb9a164a52c256" kindref="member">normal</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pool::pooled_dealloc<sp/>of<sp/>ptr={},<sp/>type={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug__printconst_8h_1a2a030f018eca8f4bd882d5cf74a80674" kindref="member">print_ptr</ref>(buf),<sp/><ref refid="debug__printconst_8h_1a06faeab1b7400ff3ca7a00cfa8a32c06" kindref="member">print_pool_type</ref>(pool_type)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Small)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>small_msg-&gt;dealloc(buf);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Medium)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>medium_msg-&gt;dealloc(buf);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Pool<sp/>must<sp/>be<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">std::byte*<sp/><ref refid="structvt_1_1pool_1_1_pool_1a22428fa710aecd16480741c9326b21fd" kindref="member">Pool::defaultAlloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>alloc_buf<sp/>=<sp/>std::malloc(num_bytes<sp/>+<sp/>oversize<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(HeaderType));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HeaderManagerType::setHeader(</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>num_bytes,<sp/>oversize,<sp/>reinterpret_cast&lt;std::byte*&gt;(alloc_buf)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a568405bb08f51b476b51f50abcda1710" kindref="member">Pool::defaultDealloc</ref>(std::byte*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>std::free(ptr);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">std::byte*<sp/><ref refid="structvt_1_1pool_1_1_pool_1ab26d54516b6337e4a3b9d00a8ded8e7b" kindref="member">Pool::alloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>oversize)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>std::byte*<sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>vt_check_enabled(memory_pool)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>tryPooledAlloc(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fall<sp/>back<sp/>to<sp/>the<sp/>default<sp/>allocated<sp/>if<sp/>the<sp/>pooled<sp/>allocated<sp/>fails<sp/>to<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>valid<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>defaultAlloc(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a6865573ccc58716514eb9a164a52c256" kindref="member">normal</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pool::alloc<sp/>of<sp/>size={},<sp/>ret={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>num_bytes,<sp/><ref refid="debug__printconst_8h_1a2a030f018eca8f4bd882d5cf74a80674" kindref="member">print_ptr</ref>(ret)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a663e56d8623fa74119aede185dac5e1d" kindref="member">Pool::dealloc</ref>(std::byte*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>actual_alloc_size<sp/>=<sp/>HeaderManagerType::getHeaderBytes(buf);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ptr_actual<sp/>=<sp/>HeaderManagerType::getHeaderPtr(buf);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ab994f04eda64129ff010c6fcea609ecb" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a6865573ccc58716514eb9a164a52c256" kindref="member">normal</ref>,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pool::dealloc<sp/>of<sp/>buf={},<sp/>alloc_size={},<sp/>ptr={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug__printconst_8h_1a2a030f018eca8f4bd882d5cf74a80674" kindref="member">print_ptr</ref>(buf),<sp/>actual_alloc_size,<sp/><ref refid="debug__printconst_8h_1a2a030f018eca8f4bd882d5cf74a80674" kindref="member">print_ptr</ref>(ptr_actual)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>vt_check_enabled(memory_pool)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/>tryPooledDealloc(buf);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>defaultDealloc(ptr_actual);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1a4030898e09d0160c24743a7b949c0d46" kindref="member">Pool::SizeType</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1a0ad85d6ace3fda593f75aed336b67b8b" kindref="member">Pool::remainingSize</ref>(std::byte*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>vt_check_enabled(memory_pool)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>actual_alloc_size<sp/>=<sp/>HeaderManagerType::getHeaderBytes(buf);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize<sp/>=<sp/>HeaderManagerType::getHeaderOversizeBytes(buf);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type<sp/>=<sp/>getPoolType(actual_alloc_size,<sp/>oversize);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Small)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>small_msg-&gt;getNumBytes()<sp/>-<sp/>actual_alloc_size;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Medium)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>medium_msg-&gt;getNumBytes()<sp/>-<sp/>actual_alloc_size;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oversize;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1a4030898e09d0160c24743a7b949c0d46" kindref="member">Pool::SizeType</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1a63f58f48115ea54006b33fff98bb0888" kindref="member">Pool::allocatedSize</ref>(std::byte*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HeaderManagerType::getHeaderBytes(buf)<sp/>+<sp/>HeaderManagerType::getHeaderOversizeBytes(buf);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1a530440f3cd5728541404fa21742db67b" kindref="member">Pool::tryGrowAllocation</ref>(std::byte*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>grow_amount)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>non-pooled<sp/>alloc,<sp/>this<sp/>condition<sp/>will<sp/>always<sp/>be<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>remainingSize(buf)<sp/>would<sp/>be<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>remainingSize(buf)<sp/>&lt;<sp/>grow_amount<sp/>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*header<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">Header*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(HeaderManagerType::getHeaderPtr(buf));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>header-&gt;alloc_size<sp/>+=<sp/>grow_amount;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a3f34112821d767815d5049dc83503033" kindref="member">Pool::active</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="features__defines_8h_1a62fe65c25c90d03bc704afc5d80d7210" kindref="member">vt_check_enabled</ref>(memory_pool);</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1aa11bdd76d9f6491ac412d5abc5c63274" kindref="member">Pool::active_env</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="features__defines_8h_1a62fe65c25c90d03bc704afc5d80d7210" kindref="member">vt_check_enabled</ref>(memory_pool)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>!<ref refid="features__defines_8h_1a62fe65c25c90d03bc704afc5d80d7210" kindref="member">vt_check_enabled</ref>(no_pool_alloc_env);</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">}}<sp/></highlight><highlight class="comment">//end<sp/>namespace<sp/>vt::pool</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/vt/pool/pool.cc"/>
  </compounddef>
</doxygen>
