<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pool_8cc" kind="file" language="C++">
    <compoundname>pool.cc</compoundname>
    <includes refid="config_8h" local="yes">vt/config.h</includes>
    <includes refid="pool_8h" local="yes">vt/pool/pool.h</includes>
    <includes refid="worker__headers_8h" local="yes">vt/worker/worker_headers.h</includes>
    <includes refid="memory__pool__equal_8h" local="yes">vt/pool/static_sized/memory_pool_equal.h</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">cassert</includes>
    <incdepgraph>
      <node id="164155">
        <label>list</label>
      </node>
      <node id="164043">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
        <childnode refid="164044" relation="include">
        </childnode>
      </node>
      <node id="164148">
        <label>atomic</label>
      </node>
      <node id="164106">
        <label>checkpoint/common.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2common_8h"/>
        <childnode refid="164107" relation="include">
        </childnode>
        <childnode refid="164076" relation="include">
        </childnode>
        <childnode refid="164042" relation="include">
        </childnode>
        <childnode refid="164108" relation="include">
        </childnode>
        <childnode refid="164109" relation="include">
        </childnode>
        <childnode refid="164077" relation="include">
        </childnode>
      </node>
      <node id="164084">
        <label>vt/runtime/component/component_pack.h</label>
        <link refid="component__pack_8h"/>
        <childnode refid="164085" relation="include">
        </childnode>
        <childnode refid="164188" relation="include">
        </childnode>
        <childnode refid="164155" relation="include">
        </childnode>
        <childnode refid="164159" relation="include">
        </childnode>
        <childnode refid="164087" relation="include">
        </childnode>
        <childnode refid="164117" relation="include">
        </childnode>
        <childnode refid="164054" relation="include">
        </childnode>
        <childnode refid="164189" relation="include">
        </childnode>
      </node>
      <node id="164188">
        <label>vt/runtime/component/movable_fn.h</label>
        <link refid="movable__fn_8h"/>
      </node>
      <node id="164054">
        <label>functional</label>
      </node>
      <node id="164162">
        <label>queue</label>
      </node>
      <node id="164088">
        <label>vt/runtime/component/component_dep.h</label>
        <link refid="component__dep_8h"/>
        <childnode refid="164086" relation="include">
        </childnode>
      </node>
      <node id="164197">
        <label>vt/messaging/envelope/envelope_get.h</label>
        <link refid="envelope__get_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164193" relation="include">
        </childnode>
        <childnode refid="164194" relation="include">
        </childnode>
        <childnode refid="164198" relation="include">
        </childnode>
      </node>
      <node id="164062">
        <label>fmt/format.h</label>
      </node>
      <node id="164142">
        <label>checkpoint/dispatch/vrt/derived.h</label>
        <link refid="derived_8h"/>
        <childnode refid="164133" relation="include">
        </childnode>
        <childnode refid="164136" relation="include">
        </childnode>
        <childnode refid="164138" relation="include">
        </childnode>
        <childnode refid="164139" relation="include">
        </childnode>
        <childnode refid="164140" relation="include">
        </childnode>
      </node>
      <node id="164100">
        <label>limits</label>
      </node>
      <node id="164045">
        <label>vt/configs/features/features_metafeatures.h</label>
        <link refid="features__metafeatures_8h"/>
        <childnode refid="164044" relation="include">
        </childnode>
      </node>
      <node id="164166">
        <label>checkpoint/container/string_serialize.h</label>
        <link refid="string__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
      </node>
      <node id="164149">
        <label>checkpoint/container/chrono_serialize.h</label>
        <link refid="chrono__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164150" relation="include">
        </childnode>
      </node>
      <node id="164060">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="164049" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
      </node>
      <node id="164049">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164051" relation="include">
        </childnode>
      </node>
      <node id="164183">
        <label>vt/timing/timing_type.h</label>
        <link refid="timing__type_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
      </node>
      <node id="164181">
        <label>vt/runtime/component/meter/timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164179" relation="include">
        </childnode>
        <childnode refid="164182" relation="include">
        </childnode>
      </node>
      <node id="164172">
        <label>checkpoint/container/view_serialize.h</label>
        <link refid="view__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164105" relation="include">
        </childnode>
        <childnode refid="164173" relation="include">
        </childnode>
        <childnode refid="164174" relation="include">
        </childnode>
        <childnode refid="164175" relation="include">
        </childnode>
      </node>
      <node id="164136">
        <label>checkpoint/dispatch/vrt/object_registry.h</label>
        <link refid="object__registry_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164133" relation="include">
        </childnode>
        <childnode refid="164137" relation="include">
        </childnode>
        <childnode refid="164054" relation="include">
        </childnode>
        <childnode refid="164051" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
      </node>
      <node id="164182">
        <label>vt/timing/timing.h</label>
        <link refid="timing_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164183" relation="include">
        </childnode>
      </node>
      <node id="164105">
        <label>checkpoint/serializers/serializers_headers.h</label>
        <link refid="serializers__headers_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164110" relation="include">
        </childnode>
        <childnode refid="164111" relation="include">
        </childnode>
        <childnode refid="164112" relation="include">
        </childnode>
        <childnode refid="164113" relation="include">
        </childnode>
        <childnode refid="164123" relation="include">
        </childnode>
      </node>
      <node id="164112">
        <label>checkpoint/serializers/sizer.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2serializers_2sizer_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164110" relation="include">
        </childnode>
      </node>
      <node id="164151">
        <label>checkpoint/container/enum_serialize.h</label>
        <link refid="enum__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164105" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
      </node>
      <node id="164107">
        <label>checkpoint/cmake_config.h</label>
      </node>
      <node id="164099">
        <label>vt/utils/adt/histogram_approx.h</label>
        <link refid="histogram__approx_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164051" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164100" relation="include">
        </childnode>
        <childnode refid="164101" relation="include">
        </childnode>
        <childnode refid="164102" relation="include">
        </childnode>
        <childnode refid="164062" relation="include">
        </childnode>
      </node>
      <node id="164110">
        <label>checkpoint/serializers/base_serializer.h</label>
        <link refid="base__serializer_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
        <childnode refid="164076" relation="include">
        </childnode>
      </node>
      <node id="164037">
        <label>src/vt/pool/pool.cc</label>
        <link refid="pool_8cc"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164083" relation="include">
        </childnode>
        <childnode refid="164218" relation="include">
        </childnode>
        <childnode refid="164190" relation="include">
        </childnode>
        <childnode refid="164076" relation="include">
        </childnode>
        <childnode refid="164042" relation="include">
        </childnode>
        <childnode refid="164077" relation="include">
        </childnode>
      </node>
      <node id="164042">
        <label>cstdint</label>
      </node>
      <node id="164145">
        <label>checkpoint/container/array_serialize.h</label>
        <link refid="array__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164105" relation="include">
        </childnode>
        <childnode refid="164146" relation="include">
        </childnode>
      </node>
      <node id="164098">
        <label>vt/utils/adt/union.h</label>
        <link refid="union_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
      </node>
      <node id="164187">
        <label>vt/runtime/component/progressable.h</label>
        <link refid="progressable_8h"/>
      </node>
      <node id="164186">
        <label>vt/runtime/component/bufferable.h</label>
        <link refid="bufferable_8h"/>
      </node>
      <node id="164079">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="164065" relation="include">
        </childnode>
        <childnode refid="164053" relation="include">
        </childnode>
        <childnode refid="164073" relation="include">
        </childnode>
        <childnode refid="164078" relation="include">
        </childnode>
        <childnode refid="164080" relation="include">
        </childnode>
        <childnode refid="164060" relation="include">
        </childnode>
        <childnode refid="164077" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164082" relation="include">
        </childnode>
        <childnode refid="164062" relation="include">
        </childnode>
      </node>
      <node id="164194">
        <label>vt/messaging/envelope/envelope_base.h</label>
        <link refid="envelope__base_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164193" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
      </node>
      <node id="164127">
        <label>checkpoint/dispatch/dispatch_serializer.h</label>
        <link refid="dispatch__serializer_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164128" relation="include">
        </childnode>
        <childnode refid="164130" relation="include">
        </childnode>
        <childnode refid="164131" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164076" relation="include">
        </childnode>
      </node>
      <node id="164202">
        <label>vt/messaging/envelope/envelope_ref.impl.h</label>
        <link refid="envelope__ref_8impl_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164201" relation="include">
        </childnode>
      </node>
      <node id="164164">
        <label>checkpoint/container/raw_ptr_serialize.h</label>
        <link refid="raw__ptr__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
      </node>
      <node id="164101">
        <label>cmath</label>
      </node>
      <node id="164077">
        <label>cassert</label>
      </node>
      <node id="164074">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="164065" relation="include">
        </childnode>
        <childnode refid="164053" relation="include">
        </childnode>
        <childnode refid="164073" relation="include">
        </childnode>
        <childnode refid="164075" relation="include">
        </childnode>
        <childnode refid="164060" relation="include">
        </childnode>
        <childnode refid="164067" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164077" relation="include">
        </childnode>
        <childnode refid="164062" relation="include">
        </childnode>
      </node>
      <node id="164057">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="164058" relation="include">
        </childnode>
      </node>
      <node id="164065">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="164052" relation="include">
        </childnode>
        <childnode refid="164066" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
      </node>
      <node id="164152">
        <label>checkpoint/container/function_serialize.h</label>
        <link refid="function__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164054" relation="include">
        </childnode>
      </node>
      <node id="164137">
        <label>checkpoint/dispatch/reconstructor.h</label>
        <link refid="reconstructor_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164128" relation="include">
        </childnode>
        <childnode refid="164129" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164076" relation="include">
        </childnode>
      </node>
      <node id="164217">
        <label>vt/pool/header/pool_header.h</label>
        <link refid="pool__header_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
      </node>
      <node id="164176">
        <label>checkpoint/checkpoint_api.impl.h</label>
        <link refid="checkpoint__api_8impl_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164104" relation="include">
        </childnode>
        <childnode refid="164116" relation="include">
        </childnode>
        <childnode refid="164115" relation="include">
        </childnode>
        <childnode refid="164117" relation="include">
        </childnode>
      </node>
      <node id="164058">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
      </node>
      <node id="164113">
        <label>checkpoint/serializers/packer.h</label>
        <link refid="packer_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164114" relation="include">
        </childnode>
        <childnode refid="164115" relation="include">
        </childnode>
        <childnode refid="164118" relation="include">
        </childnode>
        <childnode refid="164119" relation="include">
        </childnode>
        <childnode refid="164120" relation="include">
        </childnode>
        <childnode refid="164121" relation="include">
        </childnode>
      </node>
      <node id="164063">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="164064" relation="include">
        </childnode>
        <childnode refid="164068" relation="include">
        </childnode>
        <childnode refid="164072" relation="include">
        </childnode>
      </node>
      <node id="164050">
        <label>string</label>
      </node>
      <node id="164119">
        <label>checkpoint/buffer/user_buffer.h</label>
        <link refid="user__buffer_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164115" relation="include">
        </childnode>
      </node>
      <node id="164171">
        <label>checkpoint/container/unique_ptr_serialize.h</label>
        <link refid="unique__ptr__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164137" relation="include">
        </childnode>
        <childnode refid="164134" relation="include">
        </childnode>
      </node>
      <node id="164090">
        <label>vt/runtime/component/base.h</label>
        <link refid="src_2vt_2runtime_2component_2base_8h"/>
        <childnode refid="164053" relation="include">
        </childnode>
        <childnode refid="164091" relation="include">
        </childnode>
        <childnode refid="164186" relation="include">
        </childnode>
        <childnode refid="164187" relation="include">
        </childnode>
      </node>
      <node id="164115">
        <label>checkpoint/buffer/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164116" relation="include">
        </childnode>
        <childnode refid="164117" relation="include">
        </childnode>
      </node>
      <node id="164175">
        <label>checkpoint/container/view_traverse_ndim.h</label>
        <link refid="view__traverse__ndim_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164105" relation="include">
        </childnode>
        <childnode refid="164173" relation="include">
        </childnode>
      </node>
      <node id="164158">
        <label>map</label>
      </node>
      <node id="164205">
        <label>vt/scheduler/priority.h</label>
        <link refid="priority_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164146" relation="include">
        </childnode>
        <childnode refid="164109" relation="include">
        </childnode>
      </node>
      <node id="164131">
        <label>checkpoint/dispatch/dispatch_serializer_nonbyte.h</label>
        <link refid="dispatch__serializer__nonbyte_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164128" relation="include">
        </childnode>
        <childnode refid="164132" relation="include">
        </childnode>
        <childnode refid="164134" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164076" relation="include">
        </childnode>
        <childnode refid="164077" relation="include">
        </childnode>
      </node>
      <node id="164143">
        <label>checkpoint/dispatch/dispatch_byte_macro.h</label>
        <link refid="dispatch__byte__macro_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
      </node>
      <node id="164080">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="164065" relation="include">
        </childnode>
        <childnode refid="164041" relation="include">
        </childnode>
        <childnode refid="164076" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164051" relation="include">
        </childnode>
        <childnode refid="164081" relation="include">
        </childnode>
      </node>
      <node id="164081">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="164080" relation="include">
        </childnode>
        <childnode refid="164060" relation="include">
        </childnode>
        <childnode refid="164076" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164051" relation="include">
        </childnode>
        <childnode refid="164062" relation="include">
        </childnode>
      </node>
      <node id="164087">
        <label>unordered_set</label>
      </node>
      <node id="164200">
        <label>vt/messaging/envelope/envelope_test.impl.h</label>
        <link refid="envelope__test_8impl_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164199" relation="include">
        </childnode>
      </node>
      <node id="164046">
        <label>vt/configs/features/features_enableif.h</label>
        <link refid="features__enableif_8h"/>
        <childnode refid="164043" relation="include">
        </childnode>
        <childnode refid="164044" relation="include">
        </childnode>
      </node>
      <node id="164193">
        <label>vt/messaging/envelope/envelope_type.h</label>
        <link refid="envelope__type_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
      </node>
      <node id="164129">
        <label>checkpoint/dispatch/reconstructor_tag.h</label>
        <link refid="reconstructor__tag_8h"/>
      </node>
      <node id="164133">
        <label>checkpoint/dispatch/vrt/registry_common.h</label>
        <link refid="registry__common_8h"/>
        <childnode refid="164070" relation="include">
        </childnode>
      </node>
      <node id="164177">
        <label>vt/runtime/component/diagnostic_meter.h</label>
        <link refid="diagnostic__meter_8h"/>
        <childnode refid="164178" relation="include">
        </childnode>
        <childnode refid="164180" relation="include">
        </childnode>
        <childnode refid="164181" relation="include">
        </childnode>
        <childnode refid="164184" relation="include">
        </childnode>
        <childnode refid="164183" relation="include">
        </childnode>
      </node>
      <node id="164154">
        <label>checkpoint/container/container_serialize.h</label>
        <link refid="container__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164105" relation="include">
        </childnode>
      </node>
      <node id="164041">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="164042" relation="include">
        </childnode>
        <childnode refid="164043" relation="include">
        </childnode>
        <childnode refid="164044" relation="include">
        </childnode>
        <childnode refid="164045" relation="include">
        </childnode>
        <childnode refid="164046" relation="include">
        </childnode>
        <childnode refid="164047" relation="include">
        </childnode>
      </node>
      <node id="164128">
        <label>checkpoint/traits/serializable_traits.h</label>
        <link refid="serializable__traits_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164105" relation="include">
        </childnode>
        <childnode refid="164129" relation="include">
        </childnode>
        <childnode refid="164042" relation="include">
        </childnode>
        <childnode refid="164077" relation="include">
        </childnode>
      </node>
      <node id="164138">
        <label>checkpoint/dispatch/vrt/serializer_registry.h</label>
        <link refid="serializer__registry_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164133" relation="include">
        </childnode>
        <childnode refid="164054" relation="include">
        </childnode>
        <childnode refid="164051" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
      </node>
      <node id="164178">
        <label>vt/runtime/component/meter/counter.h</label>
        <link refid="counter_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164179" relation="include">
        </childnode>
      </node>
      <node id="164059">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="164039" relation="include">
        </childnode>
        <childnode refid="164053" relation="include">
        </childnode>
        <childnode refid="164055" relation="include">
        </childnode>
      </node>
      <node id="164204">
        <label>vt/messaging/envelope/envelope_setup.impl.h</label>
        <link refid="envelope__setup_8impl_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164203" relation="include">
        </childnode>
        <childnode refid="164205" relation="include">
        </childnode>
      </node>
      <node id="164169">
        <label>checkpoint/container/tuple_serialize.h</label>
        <link refid="tuple__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164105" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164109" relation="include">
        </childnode>
      </node>
      <node id="164124">
        <label>checkpoint/serializers/unpacker.impl.h</label>
        <link refid="unpacker_8impl_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164114" relation="include">
        </childnode>
        <childnode refid="164123" relation="include">
        </childnode>
        <childnode refid="164076" relation="include">
        </childnode>
        <childnode refid="164122" relation="include">
        </childnode>
      </node>
      <node id="164167">
        <label>checkpoint/container/thread_serialize.h</label>
        <link refid="thread__serialize_8h"/>
        <childnode refid="164168" relation="include">
        </childnode>
        <childnode refid="164106" relation="include">
        </childnode>
      </node>
      <node id="164134">
        <label>checkpoint/dispatch/vrt/virtual_serialize.h</label>
        <link refid="virtual__serialize_8h"/>
        <childnode refid="164135" relation="include">
        </childnode>
        <childnode refid="164142" relation="include">
        </childnode>
      </node>
      <node id="164089">
        <label>vt/runtime/component/component_traits.h</label>
        <link refid="component__traits_8h"/>
        <childnode refid="164070" relation="include">
        </childnode>
      </node>
      <node id="164093">
        <label>vt/runtime/component/component_reduce.h</label>
        <link refid="component__reduce_8h"/>
        <childnode refid="164053" relation="include">
        </childnode>
      </node>
      <node id="164086">
        <label>vt/runtime/component/component_registry.h</label>
        <link refid="component__registry_8h"/>
        <childnode refid="164053" relation="include">
        </childnode>
        <childnode refid="164051" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164087" relation="include">
        </childnode>
      </node>
      <node id="164039">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="164040" relation="include">
        </childnode>
        <childnode refid="164041" relation="include">
        </childnode>
        <childnode refid="164048" relation="include">
        </childnode>
      </node>
      <node id="164195">
        <label>vt/messaging/envelope/envelope_set.h</label>
        <link refid="envelope__set_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164193" relation="include">
        </childnode>
        <childnode refid="164194" relation="include">
        </childnode>
        <childnode refid="164196" relation="include">
        </childnode>
      </node>
      <node id="164066">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="164050" relation="include">
        </childnode>
      </node>
      <node id="164053">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="164042" relation="include">
        </childnode>
        <childnode refid="164054" relation="include">
        </childnode>
      </node>
      <node id="164069">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="164052" relation="include">
        </childnode>
        <childnode refid="164041" relation="include">
        </childnode>
        <childnode refid="164065" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
        <childnode refid="164071" relation="include">
        </childnode>
      </node>
      <node id="164140">
        <label>checkpoint/dispatch/vrt/serialize_instantiator.h</label>
        <link refid="serialize__instantiator_8h"/>
        <childnode refid="164138" relation="include">
        </childnode>
        <childnode refid="164141" relation="include">
        </childnode>
      </node>
      <node id="164116">
        <label>checkpoint/checkpoint_api.h</label>
        <link refid="checkpoint__api_8h"/>
        <childnode refid="164076" relation="include">
        </childnode>
        <childnode refid="164054" relation="include">
        </childnode>
        <childnode refid="164117" relation="include">
        </childnode>
      </node>
      <node id="164061">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
        <childnode refid="164056" relation="include">
        </childnode>
      </node>
      <node id="164184">
        <label>vt/runtime/component/meter/counter_gauge.h</label>
        <link refid="counter__gauge_8h"/>
        <childnode refid="164178" relation="include">
        </childnode>
        <childnode refid="164180" relation="include">
        </childnode>
      </node>
      <node id="164192">
        <label>vt/messaging/envelope/envelope.h</label>
        <link refid="envelope_2envelope_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164193" relation="include">
        </childnode>
        <childnode refid="164194" relation="include">
        </childnode>
        <childnode refid="164195" relation="include">
        </childnode>
        <childnode refid="164197" relation="include">
        </childnode>
        <childnode refid="164199" relation="include">
        </childnode>
        <childnode refid="164201" relation="include">
        </childnode>
        <childnode refid="164203" relation="include">
        </childnode>
        <childnode refid="164206" relation="include">
        </childnode>
        <childnode refid="164208" relation="include">
        </childnode>
      </node>
      <node id="164064">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="164041" relation="include">
        </childnode>
        <childnode refid="164053" relation="include">
        </childnode>
        <childnode refid="164065" relation="include">
        </childnode>
        <childnode refid="164067" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164062" relation="include">
        </childnode>
      </node>
      <node id="164094">
        <label>vt/runtime/component/diagnostic_types.h</label>
        <link refid="diagnostic__types_8h"/>
      </node>
      <node id="164210">
        <label>vt/messaging/envelope/payload_envelope.h</label>
        <link refid="payload__envelope_8h"/>
        <childnode refid="164192" relation="include">
        </childnode>
      </node>
      <node id="164108">
        <label>cstdio</label>
      </node>
      <node id="164132">
        <label>checkpoint/dispatch/vrt/virtual_serialize_traits.h</label>
        <link refid="virtual__serialize__traits_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164133" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
      </node>
      <node id="164218">
        <label>vt/worker/worker_headers.h</label>
        <link refid="worker__headers_8h"/>
      </node>
      <node id="164083">
        <label>vt/pool/pool.h</label>
        <link refid="pool_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164084" relation="include">
        </childnode>
        <childnode refid="164190" relation="include">
        </childnode>
        <childnode refid="164217" relation="include">
        </childnode>
        <childnode refid="164051" relation="include">
        </childnode>
        <childnode refid="164042" relation="include">
        </childnode>
        <childnode refid="164077" relation="include">
        </childnode>
        <childnode refid="164117" relation="include">
        </childnode>
      </node>
      <node id="164165">
        <label>checkpoint/container/shared_ptr_serialize.h</label>
        <link refid="shared__ptr__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
      </node>
      <node id="164056">
        <label>tuple</label>
      </node>
      <node id="164121">
        <label>checkpoint/serializers/packer.impl.h</label>
        <link refid="packer_8impl_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164114" relation="include">
        </childnode>
        <childnode refid="164115" relation="include">
        </childnode>
        <childnode refid="164122" relation="include">
        </childnode>
      </node>
      <node id="164141">
        <label>checkpoint/dispatch/vrt/link_derived_to_base_idx.h</label>
        <link refid="link__derived__to__base__idx_8h"/>
        <childnode refid="164138" relation="include">
        </childnode>
      </node>
      <node id="164216">
        <label>vt/utils/tls/tls.impl.h</label>
        <link refid="tls_8impl_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
      </node>
      <node id="164179">
        <label>vt/runtime/component/meter/stats_pack.h</label>
        <link refid="stats__pack_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
      </node>
      <node id="164048">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="164049" relation="include">
        </childnode>
        <childnode refid="164052" relation="include">
        </childnode>
        <childnode refid="164041" relation="include">
        </childnode>
        <childnode refid="164060" relation="include">
        </childnode>
        <childnode refid="164061" relation="include">
        </childnode>
        <childnode refid="164062" relation="include">
        </childnode>
      </node>
      <node id="164180">
        <label>vt/runtime/component/meter/gauge.h</label>
        <link refid="gauge_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164179" relation="include">
        </childnode>
      </node>
      <node id="164198">
        <label>vt/messaging/envelope/envelope_get.impl.h</label>
        <link refid="envelope__get_8impl_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164197" relation="include">
        </childnode>
      </node>
      <node id="164163">
        <label>stack</label>
      </node>
      <node id="164051">
        <label>vector</label>
      </node>
      <node id="164211">
        <label>vt/context/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="164117" relation="include">
        </childnode>
        <childnode refid="164212" relation="include">
        </childnode>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164084" relation="include">
        </childnode>
        <childnode refid="164213" relation="include">
        </childnode>
        <childnode refid="164214" relation="include">
        </childnode>
      </node>
      <node id="164126">
        <label>checkpoint/dispatch/clean_type.h</label>
        <link refid="clean__type_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
      </node>
      <node id="164130">
        <label>checkpoint/dispatch/dispatch_serializer_byte.h</label>
        <link refid="dispatch__serializer__byte_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164128" relation="include">
        </childnode>
        <childnode refid="164131" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164076" relation="include">
        </childnode>
      </node>
      <node id="164147">
        <label>checkpoint/container/atomic_serialize.h</label>
        <link refid="atomic__serialize_8h"/>
        <childnode refid="164148" relation="include">
        </childnode>
        <childnode refid="164106" relation="include">
        </childnode>
      </node>
      <node id="164109">
        <label>utility</label>
      </node>
      <node id="164170">
        <label>checkpoint/container/vector_serialize.h</label>
        <link refid="vector__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164105" relation="include">
        </childnode>
        <childnode refid="164051" relation="include">
        </childnode>
      </node>
      <node id="164146">
        <label>array</label>
      </node>
      <node id="164201">
        <label>vt/messaging/envelope/envelope_ref.h</label>
        <link refid="envelope__ref_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164193" relation="include">
        </childnode>
        <childnode refid="164194" relation="include">
        </childnode>
        <childnode refid="164202" relation="include">
        </childnode>
      </node>
      <node id="164082">
        <label>sstream</label>
      </node>
      <node id="164161">
        <label>checkpoint/container/queue_serialize.h</label>
        <link refid="queue__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164162" relation="include">
        </childnode>
        <childnode refid="164163" relation="include">
        </childnode>
      </node>
      <node id="164135">
        <label>checkpoint/dispatch/vrt/base.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2vrt_2base_8h"/>
        <childnode refid="164133" relation="include">
        </childnode>
        <childnode refid="164136" relation="include">
        </childnode>
        <childnode refid="164138" relation="include">
        </childnode>
        <childnode refid="164139" relation="include">
        </childnode>
        <childnode refid="164140" relation="include">
        </childnode>
      </node>
      <node id="164092">
        <label>vt/runtime/component/component_name.h</label>
        <link refid="component__name_8h"/>
        <childnode refid="164050" relation="include">
        </childnode>
      </node>
      <node id="164096">
        <label>vt/runtime/component/diagnostic_value.h</label>
        <link refid="diagnostic__value_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164094" relation="include">
        </childnode>
        <childnode refid="164097" relation="include">
        </childnode>
        <childnode refid="164103" relation="include">
        </childnode>
        <childnode refid="164099" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164101" relation="include">
        </childnode>
      </node>
      <node id="164040">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="164075">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="164076" relation="include">
        </childnode>
        <childnode refid="164051" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
      </node>
      <node id="164044">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
      </node>
      <node id="164118">
        <label>checkpoint/buffer/managed_buffer.h</label>
        <link refid="managed__buffer_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164115" relation="include">
        </childnode>
        <childnode refid="164117" relation="include">
        </childnode>
      </node>
      <node id="164076">
        <label>cstdlib</label>
      </node>
      <node id="164125">
        <label>checkpoint/dispatch/dispatch.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164115" relation="include">
        </childnode>
        <childnode refid="164126" relation="include">
        </childnode>
        <childnode refid="164127" relation="include">
        </childnode>
        <childnode refid="164143" relation="include">
        </childnode>
        <childnode refid="164137" relation="include">
        </childnode>
        <childnode refid="164054" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164144" relation="include">
        </childnode>
      </node>
      <node id="164068">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="164041" relation="include">
        </childnode>
        <childnode refid="164065" relation="include">
        </childnode>
        <childnode refid="164069" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
      </node>
      <node id="164144">
        <label>checkpoint/dispatch/dispatch.impl.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8impl_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164125" relation="include">
        </childnode>
      </node>
      <node id="164104">
        <label>checkpoint/checkpoint.h</label>
        <link refid="checkpoint_8h"/>
        <childnode refid="164105" relation="include">
        </childnode>
        <childnode refid="164125" relation="include">
        </childnode>
        <childnode refid="164128" relation="include">
        </childnode>
        <childnode refid="164145" relation="include">
        </childnode>
        <childnode refid="164147" relation="include">
        </childnode>
        <childnode refid="164149" relation="include">
        </childnode>
        <childnode refid="164151" relation="include">
        </childnode>
        <childnode refid="164152" relation="include">
        </childnode>
        <childnode refid="164153" relation="include">
        </childnode>
        <childnode refid="164157" relation="include">
        </childnode>
        <childnode refid="164161" relation="include">
        </childnode>
        <childnode refid="164164" relation="include">
        </childnode>
        <childnode refid="164165" relation="include">
        </childnode>
        <childnode refid="164166" relation="include">
        </childnode>
        <childnode refid="164167" relation="include">
        </childnode>
        <childnode refid="164169" relation="include">
        </childnode>
        <childnode refid="164170" relation="include">
        </childnode>
        <childnode refid="164171" relation="include">
        </childnode>
        <childnode refid="164172" relation="include">
        </childnode>
        <childnode refid="164116" relation="include">
        </childnode>
        <childnode refid="164176" relation="include">
        </childnode>
      </node>
      <node id="164213">
        <label>vt/context/context_attorney_fwd.h</label>
        <link refid="context__attorney__fwd_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
      </node>
      <node id="164209">
        <label>vt/messaging/envelope/envelope_extended_util.impl.h</label>
        <link refid="envelope__extended__util_8impl_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164208" relation="include">
        </childnode>
      </node>
      <node id="164206">
        <label>vt/messaging/envelope/envelope_extended.h</label>
        <link refid="envelope__extended_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164193" relation="include">
        </childnode>
        <childnode refid="164194" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
        <childnode refid="164207" relation="include">
        </childnode>
      </node>
      <node id="164157">
        <label>checkpoint/container/map_serialize.h</label>
        <link refid="map__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164105" relation="include">
        </childnode>
        <childnode refid="164154" relation="include">
        </childnode>
        <childnode refid="164158" relation="include">
        </childnode>
        <childnode refid="164159" relation="include">
        </childnode>
        <childnode refid="164160" relation="include">
        </childnode>
        <childnode refid="164087" relation="include">
        </childnode>
      </node>
      <node id="164156">
        <label>deque</label>
      </node>
      <node id="164159">
        <label>unordered_map</label>
      </node>
      <node id="164153">
        <label>checkpoint/container/list_serialize.h</label>
        <link refid="list__serialize_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164105" relation="include">
        </childnode>
        <childnode refid="164154" relation="include">
        </childnode>
        <childnode refid="164155" relation="include">
        </childnode>
        <childnode refid="164156" relation="include">
        </childnode>
      </node>
      <node id="164199">
        <label>vt/messaging/envelope/envelope_test.h</label>
        <link refid="envelope__test_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164193" relation="include">
        </childnode>
        <childnode refid="164194" relation="include">
        </childnode>
        <childnode refid="164200" relation="include">
        </childnode>
      </node>
      <node id="164196">
        <label>vt/messaging/envelope/envelope_set.impl.h</label>
        <link refid="envelope__set_8impl_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164195" relation="include">
        </childnode>
      </node>
      <node id="164190">
        <label>vt/pool/static_sized/memory_pool_equal.h</label>
        <link refid="memory__pool__equal_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164191" relation="include">
        </childnode>
        <childnode refid="164211" relation="include">
        </childnode>
        <childnode refid="164217" relation="include">
        </childnode>
        <childnode refid="164051" relation="include">
        </childnode>
        <childnode refid="164042" relation="include">
        </childnode>
      </node>
      <node id="164120">
        <label>checkpoint/buffer/io_buffer.h</label>
        <link refid="io__buffer_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164115" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
      </node>
      <node id="164052">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="164053" relation="include">
        </childnode>
        <childnode refid="164055" relation="include">
        </childnode>
        <childnode refid="164057" relation="include">
        </childnode>
        <childnode refid="164059" relation="include">
        </childnode>
      </node>
      <node id="164123">
        <label>checkpoint/serializers/unpacker.h</label>
        <link refid="unpacker_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164114" relation="include">
        </childnode>
        <childnode refid="164119" relation="include">
        </childnode>
        <childnode refid="164124" relation="include">
        </childnode>
      </node>
      <node id="164191">
        <label>vt/messaging/envelope.h</label>
        <link refid="envelope_8h"/>
        <childnode refid="164192" relation="include">
        </childnode>
        <childnode refid="164210" relation="include">
        </childnode>
      </node>
      <node id="164150">
        <label>chrono</label>
      </node>
      <node id="164073">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="164053" relation="include">
        </childnode>
        <childnode refid="164065" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164074" relation="include">
        </childnode>
      </node>
      <node id="164212">
        <label>mpi.h</label>
      </node>
      <node id="164207">
        <label>vt/messaging/envelope/envelope_extended.impl.h</label>
        <link refid="envelope__extended_8impl_8h"/>
      </node>
      <node id="164203">
        <label>vt/messaging/envelope/envelope_setup.h</label>
        <link refid="envelope__setup_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164193" relation="include">
        </childnode>
        <childnode refid="164194" relation="include">
        </childnode>
        <childnode refid="164204" relation="include">
        </childnode>
      </node>
      <node id="164168">
        <label>thread</label>
      </node>
      <node id="164173">
        <label>checkpoint/container/view_traits_extract.h</label>
        <link refid="view__traits__extract_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164105" relation="include">
        </childnode>
      </node>
      <node id="164214">
        <label>vt/utils/tls/tls.h</label>
        <link refid="tls_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164215" relation="include">
        </childnode>
        <childnode refid="164216" relation="include">
        </childnode>
      </node>
      <node id="164189">
        <label>vt/runtime/component/component_pack.impl.h</label>
        <link refid="component__pack_8impl_8h"/>
        <childnode refid="164084" relation="include">
        </childnode>
      </node>
      <node id="164055">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="164039" relation="include">
        </childnode>
        <childnode refid="164053" relation="include">
        </childnode>
        <childnode refid="164042" relation="include">
        </childnode>
        <childnode refid="164054" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
      </node>
      <node id="164097">
        <label>vt/runtime/component/diagnostic_erased_value.h</label>
        <link refid="diagnostic__erased__value_8h"/>
        <childnode refid="164094" relation="include">
        </childnode>
        <childnode refid="164098" relation="include">
        </childnode>
        <childnode refid="164099" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
      </node>
      <node id="164091">
        <label>vt/runtime/component/diagnostic.h</label>
        <link refid="diagnostic_8h"/>
        <childnode refid="164092" relation="include">
        </childnode>
        <childnode refid="164093" relation="include">
        </childnode>
        <childnode refid="164094" relation="include">
        </childnode>
        <childnode refid="164095" relation="include">
        </childnode>
        <childnode refid="164096" relation="include">
        </childnode>
        <childnode refid="164177" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164117" relation="include">
        </childnode>
        <childnode refid="164159" relation="include">
        </childnode>
        <childnode refid="164054" relation="include">
        </childnode>
        <childnode refid="164185" relation="include">
        </childnode>
      </node>
      <node id="164070">
        <label>type_traits</label>
      </node>
      <node id="164160">
        <label>set</label>
      </node>
      <node id="164208">
        <label>vt/messaging/envelope/envelope_extended_util.h</label>
        <link refid="envelope__extended__util_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164193" relation="include">
        </childnode>
        <childnode refid="164194" relation="include">
        </childnode>
        <childnode refid="164206" relation="include">
        </childnode>
        <childnode refid="164209" relation="include">
        </childnode>
      </node>
      <node id="164067">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="164052" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164062" relation="include">
        </childnode>
      </node>
      <node id="164215">
        <label>vt/utils/tls/null_tls.h</label>
        <link refid="null__tls_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
      </node>
      <node id="164038">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="164039" relation="include">
        </childnode>
        <childnode refid="164052" relation="include">
        </childnode>
        <childnode refid="164063" relation="include">
        </childnode>
      </node>
      <node id="164103">
        <label>vt/runtime/component/diagnostic_value_base.h</label>
        <link refid="diagnostic__value__base_8h"/>
        <childnode refid="164094" relation="include">
        </childnode>
        <childnode refid="164095" relation="include">
        </childnode>
        <childnode refid="164097" relation="include">
        </childnode>
        <childnode refid="164104" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
      </node>
      <node id="164102">
        <label>algorithm</label>
      </node>
      <node id="164174">
        <label>checkpoint/container/view_traverse_manual.h</label>
        <link refid="view__traverse__manual_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164105" relation="include">
        </childnode>
        <childnode refid="164173" relation="include">
        </childnode>
      </node>
      <node id="164139">
        <label>checkpoint/dispatch/vrt/inheritance_assert_helpers.h</label>
        <link refid="inheritance__assert__helpers_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
      </node>
      <node id="164114">
        <label>checkpoint/serializers/memory_serializer.h</label>
        <link refid="memory__serializer_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164110" relation="include">
        </childnode>
      </node>
      <node id="164085">
        <label>vt/runtime/component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="164068" relation="include">
        </childnode>
        <childnode refid="164086" relation="include">
        </childnode>
        <childnode refid="164088" relation="include">
        </childnode>
        <childnode refid="164089" relation="include">
        </childnode>
        <childnode refid="164090" relation="include">
        </childnode>
        <childnode refid="164117" relation="include">
        </childnode>
      </node>
      <node id="164047">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="164122">
        <label>cstring</label>
      </node>
      <node id="164185">
        <label>vt/runtime/component/diagnostic.impl.h</label>
        <link refid="diagnostic_8impl_8h"/>
        <childnode refid="164038" relation="include">
        </childnode>
        <childnode refid="164091" relation="include">
        </childnode>
        <childnode refid="164096" relation="include">
        </childnode>
        <childnode refid="164117" relation="include">
        </childnode>
        <childnode refid="164100" relation="include">
        </childnode>
      </node>
      <node id="164095">
        <label>vt/runtime/component/diagnostic_units.h</label>
        <link refid="diagnostic__units_8h"/>
      </node>
      <node id="164117">
        <label>memory</label>
      </node>
      <node id="164072">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="164041" relation="include">
        </childnode>
        <childnode refid="164053" relation="include">
        </childnode>
        <childnode refid="164065" relation="include">
        </childnode>
        <childnode refid="164073" relation="include">
        </childnode>
        <childnode refid="164078" relation="include">
        </childnode>
        <childnode refid="164080" relation="include">
        </childnode>
        <childnode refid="164077" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
      </node>
      <node id="164078">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="164065" relation="include">
        </childnode>
        <childnode refid="164053" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164079" relation="include">
        </childnode>
      </node>
      <node id="164111">
        <label>checkpoint/serializers/footprinter.h</label>
        <link refid="footprinter_8h"/>
        <childnode refid="164106" relation="include">
        </childnode>
        <childnode refid="164110" relation="include">
        </childnode>
      </node>
      <node id="164071">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="164052" relation="include">
        </childnode>
        <childnode refid="164041" relation="include">
        </childnode>
        <childnode refid="164065" relation="include">
        </childnode>
        <childnode refid="164069" relation="include">
        </childnode>
        <childnode refid="164067" relation="include">
        </childnode>
        <childnode refid="164050" relation="include">
        </childnode>
        <childnode refid="164056" relation="include">
        </childnode>
        <childnode refid="164070" relation="include">
        </childnode>
        <childnode refid="164062" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1pool">vt::pool</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool.cc</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA<sp/>Toolkit<sp/>v.<sp/>1.0.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="42"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="43"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">vt/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pool_8h" kindref="compound">vt/pool/pool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="worker__headers_8h" kindref="compound">vt/worker/worker_headers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memory__pool__equal_8h" kindref="compound">vt/pool/static_sized/memory_pool_equal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1a55a236c42c331940884370c85fb18e36" kindref="member">Pool::Pool</ref>()</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>:<sp/>small_msg(initSPool()),<sp/>medium_msg(initMPool())</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1a9f94985824d12c43357cfe50eaaefd38" kindref="member">Pool::MemPoolSType</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1a833da3cd4d410ba607b6e7b000810882" kindref="member">Pool::initSPool</ref>()<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;MemoryPoolType&lt;memory_size_small&gt;&gt;();</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a8a201b9a843e47cd4e7b568a8e4483da" kindref="member">Pool::MemPoolMType</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1ab768c364b348107112f960ce0704565d" kindref="member">Pool::initMPool</ref>()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;MemoryPoolType&lt;memory_size_medium&gt;&gt;(64);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1ace8d36439e5e599a8ee68b2f1a6a6b28" kindref="member">Pool::ePoolSize</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1a9aa5afbbea5a61265746c4d461502d62" kindref="member">Pool::getPoolType</ref>(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize</highlight></codeline>
<codeline lineno="70"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>total_bytes<sp/>=<sp/>num_bytes<sp/>+<sp/>oversize;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_bytes<sp/>&lt;=<sp/>static_cast&lt;size_t&gt;(small_msg-&gt;getNumBytes()))<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ePoolSize::Small;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_bytes<sp/>&lt;=<sp/>static_cast&lt;size_t&gt;(medium_msg-&gt;getNumBytes()))<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ePoolSize::Medium;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ePoolSize::Malloc;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structvt_1_1pool_1_1_pool_1abd5f079910c28493ad3b0d5a9469f00a" kindref="member">Pool::tryPooledAlloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type<sp/>=<sp/>getPoolType(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>!=<sp/>ePoolSize::Malloc)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pooledAlloc(num_bytes,<sp/>oversize,<sp/>pool_type);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1adf32f4660575880101522e5d6b640edd" kindref="member">Pool::tryPooledDealloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buf_char<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(buf);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>actual_alloc_size<sp/>=<sp/>HeaderManagerType::getHeaderBytes(buf_char);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize<sp/>=<sp/>HeaderManagerType::getHeaderOversizeBytes(buf_char);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type<sp/>=<sp/>getPoolType(actual_alloc_size,<sp/>oversize);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>!=<sp/>ePoolSize::Malloc)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>poolDealloc(buf,<sp/>pool_type);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structvt_1_1pool_1_1_pool_1a8a6ff684a26b2229cbf263e99a1bc2ee" kindref="member">Pool::pooledAlloc</ref>(</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize,<sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type</highlight></codeline>
<codeline lineno="107"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a24771d4179e70d6e207872dbca07e2ef" kindref="member">worker</ref><sp/>=<sp/><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">theContext</ref>()-&gt;<ref refid="structvt_1_1ctx_1_1_context_1a1e39e0561109fd30b45a427ddb055cd2" kindref="member">getWorker</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>comm_thread<sp/>=<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a24771d4179e70d6e207872dbca07e2ef" kindref="member">worker</ref><sp/>==<sp/>worker_id_comm_thread;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ad7b20c67ccffd7217fda0227eeaf4650" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>,<sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pool::pooled_alloc<sp/>of<sp/>size={},<sp/>type={},<sp/>ret={},<sp/>worker={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>num_bytes,<sp/><ref refid="debug__printconst_8h_1a06faeab1b7400ff3ca7a00cfa8a32c06" kindref="member">print_pool_type</ref>(pool_type),<sp/>ret,<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a24771d4179e70d6e207872dbca07e2ef" kindref="member">worker</ref></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Small)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref><sp/>=<sp/>comm_thread<sp/>?<sp/>small_msg.get()<sp/>:<sp/>s_msg_worker_[<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a24771d4179e70d6e207872dbca07e2ef" kindref="member">worker</ref>].get();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(comm_thread<sp/>||<sp/>s_msg_worker_.size()<sp/>&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a24771d4179e70d6e207872dbca07e2ef" kindref="member">worker</ref>)),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>have<sp/>worker<sp/>pool&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>-&gt;alloc(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Medium)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref><sp/>=<sp/>comm_thread<sp/>?<sp/>medium_msg.get()<sp/>:<sp/>m_msg_worker_[<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a24771d4179e70d6e207872dbca07e2ef" kindref="member">worker</ref>].get();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(comm_thread<sp/>||<sp/>m_msg_worker_.size()<sp/>&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a24771d4179e70d6e207872dbca07e2ef" kindref="member">worker</ref>)),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>have<sp/>worker<sp/>pool&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>-&gt;alloc(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Pool<sp/>must<sp/>be<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1aa9ae08727c21035461d6f60b93ea19ab" kindref="member">Pool::poolDealloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf,<sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ad7b20c67ccffd7217fda0227eeaf4650" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>,<sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pool::pooled_dealloc<sp/>of<sp/>ptr={},<sp/>type={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug__printconst_8h_1a2a030f018eca8f4bd882d5cf74a80674" kindref="member">print_ptr</ref>(buf),<sp/><ref refid="debug__printconst_8h_1a06faeab1b7400ff3ca7a00cfa8a32c06" kindref="member">print_pool_type</ref>(pool_type)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Small)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>small_msg-&gt;dealloc(buf);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Medium)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>medium_msg-&gt;dealloc(buf);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Pool<sp/>must<sp/>be<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structvt_1_1pool_1_1_pool_1ad9eb4c0efa76dc46487e23e265554943" kindref="member">Pool::defaultAlloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>alloc_buf<sp/>=<sp/>std::malloc(num_bytes<sp/>+<sp/>oversize<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(HeaderType));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HeaderManagerType::setHeader(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>num_bytes,<sp/>oversize,<sp/>static_cast&lt;char*&gt;(alloc_buf)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a8d8654019bf80cd274bea1797645db37" kindref="member">Pool::defaultDealloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>std::free(ptr);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structvt_1_1pool_1_1_pool_1a0bf20e8b4ad1b85fb8952d81d433da55" kindref="member">Pool::alloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>oversize)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Padding<sp/>for<sp/>the<sp/>extra<sp/>handler<sp/>typically<sp/>required<sp/>for<sp/>oversize<sp/>serialized</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/>*<sp/>sends</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oversize<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>oversize<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>vt_check_enabled(memory_pool)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>tryPooledAlloc(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fall<sp/>back<sp/>to<sp/>the<sp/>default<sp/>allocated<sp/>if<sp/>the<sp/>pooled<sp/>allocated<sp/>fails<sp/>to<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>valid<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>defaultAlloc(num_bytes,<sp/>oversize);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ad7b20c67ccffd7217fda0227eeaf4650" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>,<sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pool::alloc<sp/>of<sp/>size={},<sp/>ret={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>num_bytes,<sp/>ret</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a73ef123aa04b44ae875716e2c7b95cab" kindref="member">Pool::dealloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buf_char<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(buf);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>actual_alloc_size<sp/>=<sp/>HeaderManagerType::getHeaderBytes(buf_char);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>alloc_worker<sp/>=<sp/>HeaderManagerType::getHeaderWorker(buf_char);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ptr_actual<sp/>=<sp/>HeaderManagerType::getHeaderPtr(buf_char);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize<sp/>=<sp/>HeaderManagerType::getHeaderOversizeBytes(buf_char);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a24771d4179e70d6e207872dbca07e2ef" kindref="member">worker</ref><sp/>=<sp/><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">theContext</ref>()-&gt;<ref refid="structvt_1_1ctx_1_1_context_1a1e39e0561109fd30b45a427ddb055cd2" kindref="member">getWorker</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type<sp/>=<sp/>getPoolType(actual_alloc_size,<sp/>oversize);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="debug__print_8h_1ad7b20c67ccffd7217fda0227eeaf4650" kindref="member">vt_debug_print</ref>(</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a50ba0efa092380eb92cee1d921d6e40f" kindref="member">pool</ref>,<sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pool::dealloc<sp/>of<sp/>buf={},<sp/>type={},<sp/>alloc_size={},<sp/>worker={},<sp/>ptr={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>buf,<sp/><ref refid="debug__printconst_8h_1a06faeab1b7400ff3ca7a00cfa8a32c06" kindref="member">print_pool_type</ref>(pool_type),<sp/>actual_alloc_size,<sp/>alloc_worker,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug__printconst_8h_1a2a030f018eca8f4bd882d5cf74a80674" kindref="member">print_ptr</ref>(ptr_actual)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>!=<sp/>ePoolSize::Malloc<sp/>&amp;&amp;<sp/>alloc_worker<sp/>!=<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a24771d4179e70d6e207872dbca07e2ef" kindref="member">worker</ref>)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>vt_threading_enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>theWorkerGrp()-&gt;enqueueForWorker(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a24771d4179e70d6e207872dbca07e2ef" kindref="member">worker</ref>,<sp/>[buf]{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevt_1aab3530d89a64e5ea903b0ccf303ecbb7" kindref="member">thePool</ref>()-&gt;<ref refid="structvt_1_1pool_1_1_pool_1a73ef123aa04b44ae875716e2c7b95cab" kindref="member">dealloc</ref>(buf);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1aab3530d89a64e5ea903b0ccf303ecbb7" kindref="member">thePool</ref>()-&gt;<ref refid="structvt_1_1pool_1_1_pool_1a73ef123aa04b44ae875716e2c7b95cab" kindref="member">dealloc</ref>(buf);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>vt_check_enabled(memory_pool)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/>tryPooledDealloc(buf);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>defaultDealloc(ptr_actual);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><ref refid="structvt_1_1pool_1_1_pool_1a4030898e09d0160c24743a7b949c0d46" kindref="member">Pool::SizeType</ref><sp/><ref refid="structvt_1_1pool_1_1_pool_1a7d6742d6abc615255e25363a1be067be" kindref="member">Pool::remainingSize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>vt_check_enabled(memory_pool)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buf_char<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(buf);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>actual_alloc_size<sp/>=<sp/>HeaderManagerType::getHeaderBytes(buf_char);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>oversize<sp/>=<sp/>HeaderManagerType::getHeaderOversizeBytes(buf_char);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>ePoolSize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pool_type<sp/>=<sp/>getPoolType(actual_alloc_size,<sp/>oversize);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Small)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>small_msg-&gt;getNumBytes()<sp/>-<sp/>actual_alloc_size;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/>ePoolSize::Medium)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>medium_msg-&gt;getNumBytes()<sp/>-<sp/>actual_alloc_size;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oversize;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1aeb8ad6a3ac3cf168dc4f2d2be2714edc" kindref="member">Pool::initWorkerPools</ref>(<ref refid="namespacevt_1aa93398ea48f2cb6c188512250f7cc248" kindref="member">WorkerCountType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_workers)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>vt_check_enabled(memory_pool)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_workers;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s_msg_worker_.emplace_back(initSPool());</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_msg_worker_.emplace_back(initMPool());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a45a2880809625a77bb93c3dfcd9c7603" kindref="member">Pool::finalize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>vt_check_enabled(memory_pool)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>s_msg_worker_.clear();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>m_msg_worker_.clear();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1a3f34112821d767815d5049dc83503033" kindref="member">Pool::active</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="features__enableif_8h_1a62fe65c25c90d03bc704afc5d80d7210" kindref="member">vt_check_enabled</ref>(memory_pool);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1pool_1_1_pool_1aa11bdd76d9f6491ac412d5abc5c63274" kindref="member">Pool::active_env</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="features__enableif_8h_1a62fe65c25c90d03bc704afc5d80d7210" kindref="member">vt_check_enabled</ref>(memory_pool)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>!<ref refid="features__enableif_8h_1a62fe65c25c90d03bc704afc5d80d7210" kindref="member">vt_check_enabled</ref>(no_pool_alloc_env);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">}}<sp/></highlight><highlight class="comment">//end<sp/>namespace<sp/>vt::pool</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/vt/pool/pool.cc"/>
  </compounddef>
</doxygen>
