<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structvt_1_1rdma_1_1_r_d_m_a_manager" kind="struct" language="C++" prot="public">
    <compoundname>vt::rdma::RDMAManager</compoundname>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component" prot="public" virt="non-virtual">vt::runtime::component::Component&lt; RDMAManager &gt;</basecompoundref>
    <includes refid="rdma_8h" local="no">rdma.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a1fd134fc514587ac616aec8530c7cc87" prot="public" static="no">
        <type><ref refid="namespacevt_1_1rdma_1a91e7211515508952960ca446ea609f65" kindref="member">Bits</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_BitsType =  Bits</definition>
        <argsstring></argsstring>
        <name>RDMA_BitsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="93" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1aad42879902ea82c4de357ad482d9333d" prot="public" static="no">
        <type><ref refid="structvt_1_1rdma_1_1_state" kindref="compound">State</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_StateType =  State</definition>
        <argsstring></argsstring>
        <name>RDMA_StateType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="94" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a7f4369a60dfe2ca11abe39a4ce8c2f5e" prot="public" static="no">
        <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">Type</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_TypeType =  Type</definition>
        <argsstring></argsstring>
        <name>RDMA_TypeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="95" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a81658757dd2c692d5c31048d2d53cb3d" prot="public" static="no">
        <type><ref refid="structvt_1_1rdma_1_1_info" kindref="compound">Info</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_InfoType =  Info</definition>
        <argsstring></argsstring>
        <name>RDMA_InfoType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="96" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a1239149a2070897c56e94e65c2016a7a" prot="public" static="no">
        <type><ref refid="structvt_1_1rdma_1_1_pending" kindref="compound">Pending</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_PendingType =  Pending</definition>
        <argsstring></argsstring>
        <name>RDMA_PendingType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="97" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1ad6a7e417dca07fe5743318e1153677a8" prot="public" static="no">
        <type><ref refid="structvt_1_1rdma_1_1_channel" kindref="compound">Channel</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_ChannelType =  Channel</definition>
        <argsstring></argsstring>
        <name>RDMA_ChannelType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="98" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1aafc574f533ebf5b34c1389ef504448bf" prot="public" static="no">
        <type><ref refid="structvt_1_1rdma_1_1_region" kindref="compound">Region</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_RegionType =  Region</definition>
        <argsstring></argsstring>
        <name>RDMA_RegionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="99" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a16e12d11cf7d771df0d3dc6947a4f95c" prot="public" static="no">
        <type><ref refid="structvt_1_1rdma_1_1_map" kindref="compound">Map</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_MapType =  Map</definition>
        <argsstring></argsstring>
        <name>RDMA_MapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="100" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a578dd586d6982be7476b4df7656cd024" prot="public" static="no">
        <type><ref refid="structvt_1_1rdma_1_1_group" kindref="compound">Group</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_GroupType =  Group</definition>
        <argsstring></argsstring>
        <name>RDMA_GroupType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="101" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a7b857edc3e489efd9e65e160a4e55a68" prot="public" static="no">
        <type><ref refid="structvt_1_1rdma_1_1_action" kindref="compound">Action</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_ActionType =  Action</definition>
        <argsstring></argsstring>
        <name>RDMA_ActionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="102" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a3df5b264f344d9d4530a96264782a725" prot="public" static="no">
        <type><ref refid="structvt_1_1rdma_1_1_channel_lookup" kindref="compound">ChannelLookup</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_ChannelLookupType =  ChannelLookup</definition>
        <argsstring></argsstring>
        <name>RDMA_ChannelLookupType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="103" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a106350721a187d2cfb94a9017ef66a07" prot="public" static="no">
        <type><ref refid="structvt_1_1rdma_1_1_endpoint" kindref="compound">Endpoint</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_EndpointType =  Endpoint</definition>
        <argsstring></argsstring>
        <name>RDMA_EndpointType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="104" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a55dd81ff646ebb9d61ebf3a7239ec3b8" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref>, <ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aad42879902ea82c4de357ad482d9333d" kindref="member">RDMA_StateType</ref> &gt;</type>
        <definition>using vt::rdma::RDMAManager::RDMA_ContainerType =  std::unordered_map&lt;RDMA_HandleType, RDMA_StateType&gt;</definition>
        <argsstring></argsstring>
        <name>RDMA_ContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="105" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a689c48ff97319fd83c19e7230b8e9d62" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a3df5b264f344d9d4530a96264782a725" kindref="member">RDMA_ChannelLookupType</ref>, <ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ad6a7e417dca07fe5743318e1153677a8" kindref="member">RDMA_ChannelType</ref> &gt;</type>
        <definition>using vt::rdma::RDMAManager::RDMA_LiveChannelsType =  std::unordered_map&lt;RDMA_ChannelLookupType, RDMA_ChannelType&gt;</definition>
        <argsstring></argsstring>
        <name>RDMA_LiveChannelsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="106" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a8c9def755fab6d3eb1f529175243f38a" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1rdma_1a9b966d9780a2b41afe7cd7b7b4b20300" kindref="member">RDMA_OpType</ref>, <ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a1239149a2070897c56e94e65c2016a7a" kindref="member">RDMA_PendingType</ref> &gt;</type>
        <definition>using vt::rdma::RDMAManager::RDMA_OpContainerType =  std::unordered_map&lt;RDMA_OpType, RDMA_PendingType&gt;</definition>
        <argsstring></argsstring>
        <name>RDMA_OpContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="107" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a77d00c37a45276b36ef64b9226a8ef0f" prot="public" static="no">
        <type><ref refid="structvt_1_1rdma_1_1_state_1af0baaa6ac5c3b7b256d032f2ee845676" kindref="member">RDMA_StateType::RDMA_GetFunctionType</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_GetFunctionType =  RDMA_StateType::RDMA_GetFunctionType</definition>
        <argsstring></argsstring>
        <name>RDMA_GetFunctionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="108" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a714321626dc5613772ac43564c6b7d85" prot="public" static="no">
        <type><ref refid="structvt_1_1rdma_1_1_state_1aa43a5d043fe01086818e9c5c364341d4" kindref="member">RDMA_StateType::RDMA_PutFunctionType</ref></type>
        <definition>using vt::rdma::RDMAManager::RDMA_PutFunctionType =  RDMA_StateType::RDMA_PutFunctionType</definition>
        <argsstring></argsstring>
        <name>RDMA_PutFunctionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="109" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a8bce76d1b441ca17daf84835eb9a7dec" prot="public" static="no">
        <type>std::tuple&lt; <ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref>, <ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> &gt;</type>
        <definition>using vt::rdma::RDMAManager::RDMA_DirectType =  std::tuple&lt;RDMA_PtrType, ActionType&gt;</definition>
        <argsstring></argsstring>
        <name>RDMA_DirectType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="110" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a0d865535d118fe9dcab074fd3df74ce1" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename MsgType</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1rdma_1_1_state_1a95b006a568982435e63aa18feb5fc202" kindref="member">RDMA_StateType::RDMA_GetTypedFunctionType</ref>&lt; MsgType &gt;</type>
        <definition>using vt::rdma::RDMAManager::RDMA_GetTypedFunctionType =  RDMA_StateType::RDMA_GetTypedFunctionType&lt;MsgType&gt;</definition>
        <argsstring></argsstring>
        <name>RDMA_GetTypedFunctionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="112" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1ad9746ec3367968e16945ef88c1ac45ce" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename MsgType</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1rdma_1_1_state_1a3f76d1ccdab20ed3091e36d8fb9ecda5" kindref="member">RDMA_StateType::RDMA_PutTypedFunctionType</ref>&lt; MsgType &gt;</type>
        <definition>using vt::rdma::RDMAManager::RDMA_PutTypedFunctionType =  RDMA_StateType::RDMA_PutTypedFunctionType&lt;MsgType&gt;</definition>
        <argsstring></argsstring>
        <name>RDMA_PutTypedFunctionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="115" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1ab2b109454390c41ea74e72a2850edd12" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1_collective_scope" kindref="compound">collective::CollectiveScope</ref></type>
        <definition>using vt::rdma::RDMAManager::CollectiveScopeType =  collective::CollectiveScope</definition>
        <argsstring></argsstring>
        <name>CollectiveScopeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="117" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a59e73ef8c81ddf4094802bfda5ac42cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct RDMACollectionManager</definition>
        <argsstring></argsstring>
        <name>RDMACollectionManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="889" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="889" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a5786d652b263a505c6c74f25e7c0994a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct Channel</definition>
        <argsstring></argsstring>
        <name>Channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="890" column="3" bodyfile="src/vt/rdma/rdma.h" bodystart="890" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a4cd37fd70b9598a06a8edbadb44a9eb4" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a9530efb893c0f3846e8ac5f0507e0f49" kindref="member">RDMA_HandlerType</ref></type>
        <definition>RDMA_HandlerType vt::rdma::RDMAManager::cur_rdma_handler_</definition>
        <argsstring></argsstring>
        <name>cur_rdma_handler_</name>
        <initializer>= first_rdma_handler</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="922" column="20" bodyfile="src/vt/rdma/rdma.h" bodystart="922" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1abcdb9005492e7a1145c9b8c9e9e271b0" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1rdma_1a3b7f2eba1e9063a37d9301061c1432f1" kindref="member">RDMA_IdentifierType</ref></type>
        <definition>RDMA_IdentifierType vt::rdma::RDMAManager::cur_ident_</definition>
        <argsstring></argsstring>
        <name>cur_ident_</name>
        <initializer>= first_rdma_identifier</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="925" column="23" bodyfile="src/vt/rdma/rdma.h" bodystart="925" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a4369f821141f2e140441f1b590661a7b" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1rdma_1a3b7f2eba1e9063a37d9301061c1432f1" kindref="member">RDMA_IdentifierType</ref></type>
        <definition>RDMA_IdentifierType vt::rdma::RDMAManager::cur_collective_ident_</definition>
        <argsstring></argsstring>
        <name>cur_collective_ident_</name>
        <initializer>= first_rdma_identifier</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="928" column="23" bodyfile="src/vt/rdma/rdma.h" bodystart="928" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1ab5a0e70728339dd6955d355754f4892a" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a55dd81ff646ebb9d61ebf3a7239ec3b8" kindref="member">RDMA_ContainerType</ref></type>
        <definition>RDMA_ContainerType vt::rdma::RDMAManager::holder_</definition>
        <argsstring></argsstring>
        <name>holder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="931" column="22" bodyfile="src/vt/rdma/rdma.h" bodystart="931" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a64c6d7af9b79b175cfbcfe86e40db23e" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1rdma_1a9b966d9780a2b41afe7cd7b7b4b20300" kindref="member">RDMA_OpType</ref></type>
        <definition>RDMA_OpType vt::rdma::RDMAManager::cur_op_</definition>
        <argsstring></argsstring>
        <name>cur_op_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="934" column="15" bodyfile="src/vt/rdma/rdma.h" bodystart="934" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1aa4007bae161761451dc033f5555d0461" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a8c9def755fab6d3eb1f529175243f38a" kindref="member">RDMA_OpContainerType</ref></type>
        <definition>RDMA_OpContainerType vt::rdma::RDMAManager::pending_ops_</definition>
        <argsstring></argsstring>
        <name>pending_ops_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="937" column="24" bodyfile="src/vt/rdma/rdma.h" bodystart="937" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1aaedab94d025b3aa711c48e881d81d048" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a689c48ff97319fd83c19e7230b8e9d62" kindref="member">RDMA_LiveChannelsType</ref></type>
        <definition>RDMA_LiveChannelsType vt::rdma::RDMAManager::channels_</definition>
        <argsstring></argsstring>
        <name>channels_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="940" column="25" bodyfile="src/vt/rdma/rdma.h" bodystart="940" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a583736edf4cc08a6072d5284df9e4560" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref></type>
        <definition>TagType vt::rdma::RDMAManager::next_channel_tag_</definition>
        <argsstring></argsstring>
        <name>next_channel_tag_</name>
        <initializer>= first_rdma_channel_tag</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="943" column="11" bodyfile="src/vt/rdma/rdma.h" bodystart="943" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1ada74c89614007b46c007876825dd73a5" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ab2b109454390c41ea74e72a2850edd12" kindref="member">CollectiveScopeType</ref></type>
        <definition>CollectiveScopeType vt::rdma::RDMAManager::collective_scope_</definition>
        <argsstring></argsstring>
        <name>collective_scope_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="946" column="23" bodyfile="src/vt/rdma/rdma.h" bodystart="946" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1aef98ba273bd7756fcf6ff71c96db391b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::rdma::RDMAManager::RDMAManager</definition>
        <argsstring>()</argsstring>
        <name>RDMAManager</name>
        <briefdescription>
<para>Construct the <ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager" kindref="compound">RDMAManager</ref>. </para>
        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="122" column="3" bodyfile="src/vt/rdma/rdma.cc" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1add0f236b62fd550b8eb3d78156a97403" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string vt::rdma::RDMAManager::name</definition>
        <argsstring>() override</argsstring>
        <name>name</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_name_1a33c06229bb605a2b2ceff68830d6d773">name</reimplements>
        <briefdescription>
<para>Get the name of the component. </para>
        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="124" column="15" bodyfile="src/vt/rdma/rdma.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a30167dbd8b0165a273a9d91c84acded1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::putTypedData</definition>
        <argsstring>(RDMA_HandleType const &amp;rdma_handle, T ptr, ByteType const &amp;num_elems, ByteType const &amp;offset, TagType const &amp;tag, ActionType action_after_put=no_action)</argsstring>
        <name>putTypedData</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type>T</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_elems</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>action_after_put</declname>
          <defval>no_action</defval>
        </param>
        <briefdescription>
<para>Put typed data to registered RDMA handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rdma_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to put </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_elems</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements to put from the pointer start </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset<mdash/>number of typed elements from start </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>tag to identify put </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action_after_put</parametername>
</parameternamelist>
<parameterdescription>
<para>action to execute after put completes locally </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="137" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="137" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a553764f2d91b42cf97991bbeadb75a5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::putTypedData</definition>
        <argsstring>(RDMA_HandleType const &amp;han, T ptr, ByteType const &amp;num_elems=no_byte, ByteType const &amp;offset=no_byte, ActionType action_after_put=no_action)</argsstring>
        <name>putTypedData</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type>T</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_elems</declname>
          <defval>no_byte</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>offset</declname>
          <defval>no_byte</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>action_after_put</declname>
          <defval>no_action</defval>
        </param>
        <briefdescription>
<para>Put typed data to registered RDMA handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to put </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_elems</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements to put from the pointer start </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset<mdash/>number of typed elements from start </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action_after_put</parametername>
</parameternamelist>
<parameterdescription>
<para>action to execute after put completes locally </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="160" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="160" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a651ca7aaa9fdbf404c41157b883407e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::putData</definition>
        <argsstring>(RDMA_HandleType const &amp;rdma_handle, RDMA_PtrType const &amp;ptr, ByteType const &amp;num_bytes, ActionType action_after_put=no_action)</argsstring>
        <name>putData</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref> const &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>action_after_put</declname>
          <defval>no_action</defval>
        </param>
        <briefdescription>
<para>Put raw data to registered RDMA handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rdma_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to put </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to put </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action_after_put</parametername>
</parameternamelist>
<parameterdescription>
<para>action to execute after put completes locally </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="178" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="178" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a839c0031a48c5341494b119b0f10bafa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::putData</definition>
        <argsstring>(RDMA_HandleType const &amp;rdma_handle, RDMA_PtrType const &amp;ptr, ByteType const &amp;num_bytes, ByteType const &amp;offset, TagType const &amp;tag, ByteType const &amp;elm_size=rdma_default_byte_size, ActionType action_after_put=no_action, NodeType const &amp;collective_node=uninitialized_destination, bool const direct_message_send=false)</argsstring>
        <name>putData</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref> const &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>elm_size</declname>
          <defval>rdma_default_byte_size</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>action_after_put</declname>
          <defval>no_action</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>collective_node</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <param>
          <type>bool const</type>
          <declname>direct_message_send</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Put raw data to registered RDMA handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rdma_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to put </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to put </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset from point start to put </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>tag to identify put </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elm_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of an element </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action_after_put</parametername>
</parameternamelist>
<parameterdescription>
<para>action to execute after put completes locally </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">collective_node</parametername>
</parameternamelist>
<parameterdescription>
<para>node to target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">direct_message_send</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the <computeroutput>ptr</computeroutput> provided has an envelope with it </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="203" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="606" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1aa97aeb2fee7d1a1b2228ff063d64eb5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::getDataIntoBuf</definition>
        <argsstring>(RDMA_HandleType const &amp;rdma_handle, RDMA_PtrType const &amp;ptr, ByteType const &amp;num_bytes, ByteType const &amp;offset, TagType const &amp;tag=no_tag, ActionType next_action=no_action, ByteType const &amp;elm_size=rdma_default_byte_size, NodeType const &amp;collective_node=uninitialized_destination)</argsstring>
        <name>getDataIntoBuf</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref> const &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>next_action</declname>
          <defval>no_action</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>elm_size</declname>
          <defval>rdma_default_byte_size</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>collective_node</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <briefdescription>
<para>Get data into user buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rdma_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>destination for data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset on the remote node, relative to <computeroutput>rdma_handle</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>tag to identify get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">next_action</parametername>
</parameternamelist>
<parameterdescription>
<para>action when get completes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elm_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of each element </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">collective_node</parametername>
</parameternamelist>
<parameterdescription>
<para>node to target </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="224" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="919" bodyend="991"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a9f5bbbbdc2d6cca20f3bd5a259ecaf62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::putDataIntoBufCollective</definition>
        <argsstring>(RDMA_HandleType const &amp;rdma_handle, RDMA_PtrType const &amp;ptr, ByteType const &amp;num_bytes, ByteType const &amp;elm_size, ByteType const &amp;offset, ActionType after_put_action=no_action)</argsstring>
        <name>putDataIntoBufCollective</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref> const &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>elm_size</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>after_put_action</declname>
          <defval>no_action</defval>
        </param>
        <briefdescription>
<para>Collectively put data into a buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rdma_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>data to put </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elm_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of each element </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset to put </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">after_put_action</parametername>
</parameternamelist>
<parameterdescription>
<para>action to execute after put completes locally </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="242" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="882" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a68bf3378ec4132a81b728c180aa63686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::getDataIntoBufCollective</definition>
        <argsstring>(RDMA_HandleType const &amp;rdma_handle, RDMA_PtrType const &amp;ptr, ByteType const &amp;num_bytes, ByteType const &amp;elm_size, ByteType const &amp;offset, ActionType next_action=no_action)</argsstring>
        <name>getDataIntoBufCollective</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref> const &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>elm_size</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>next_action</declname>
          <defval>no_action</defval>
        </param>
        <briefdescription>
<para>Collectively get data into buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rdma_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to get into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elm_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of each element </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset to get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">next_action</parametername>
</parameternamelist>
<parameterdescription>
<para>action to execute after get completes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="258" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="901" bodyend="917"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a108e405a633745d46c2d68a1a0727b7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::getRegionTypeless</definition>
        <argsstring>(RDMA_HandleType const &amp;rdma_handle, RDMA_PtrType const &amp;ptr, RDMA_RegionType const &amp;region, ActionType next_action)</argsstring>
        <name>getRegionTypeless</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref> const &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aafc574f533ebf5b34c1389ef504448bf" kindref="member">RDMA_RegionType</ref> const &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>next_action</declname>
        </param>
        <briefdescription>
<para>Get a dimensional region. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rdma_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to get into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">region</parametername>
</parameternamelist>
<parameterdescription>
<para>region to get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">next_action</parametername>
</parameternamelist>
<parameterdescription>
<para>action to execute after get completes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="272" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="814" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a2e34becca8d5f72a7d460e6574f8f623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::putRegionTypeless</definition>
        <argsstring>(RDMA_HandleType const &amp;rdma_handle, RDMA_PtrType const &amp;ptr, RDMA_RegionType const &amp;region, ActionType after_put_action)</argsstring>
        <name>putRegionTypeless</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref> const &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aafc574f533ebf5b34c1389ef504448bf" kindref="member">RDMA_RegionType</ref> const &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>after_put_action</declname>
        </param>
        <briefdescription>
<para>Put a dimensional region. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rdma_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to get into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">region</parametername>
</parameternamelist>
<parameterdescription>
<para>region to get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">after_put_action</parametername>
</parameternamelist>
<parameterdescription>
<para>action to execute after put completes locally </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="285" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="753" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a06506f3abad91d02456d88f4b1e4db1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::getRegion</definition>
        <argsstring>(RDMA_HandleType const &amp;rdma_handle, T ptr, RDMA_RegionType const &amp;region, ActionType next_action=no_action)</argsstring>
        <name>getRegion</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type>T</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aafc574f533ebf5b34c1389ef504448bf" kindref="member">RDMA_RegionType</ref> const &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>next_action</declname>
          <defval>no_action</defval>
        </param>
        <briefdescription>
<para>Get a region with typed data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rdma_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to get into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">region</parametername>
</parameternamelist>
<parameterdescription>
<para>region to get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">next_action</parametername>
</parameternamelist>
<parameterdescription>
<para>action to execute after get completes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="299" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="299" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a267d1a2da52abf259119da964b9051f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::getTypedDataInfoBuf</definition>
        <argsstring>(RDMA_HandleType const &amp;rdma_handle, T ptr, ByteType const &amp;num_elems, ByteType const &amp;elm_offset=no_byte, TagType const &amp;tag=no_tag, ActionType next_action=no_action)</argsstring>
        <name>getTypedDataInfoBuf</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type>T</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_elems</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>elm_offset</declname>
          <defval>no_byte</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>next_action</declname>
          <defval>no_action</defval>
        </param>
        <briefdescription>
<para>Get typed data into buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rdma_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>destination for data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_elems</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elm_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset<mdash/>number of typed elements from start </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>tag to identify get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">next_action</parametername>
</parameternamelist>
<parameterdescription>
<para>action when get completes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="321" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="321" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a59f4ee000f6c382289fa6c186962d1d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::getTypedDataInfoBuf</definition>
        <argsstring>(RDMA_HandleType const &amp;rdma_handle, T ptr, ByteType const &amp;num_elems, ActionType na)</argsstring>
        <name>getTypedDataInfoBuf</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type>T</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_elems</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>na</declname>
        </param>
        <briefdescription>
<para>Get typed data into buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rdma_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to get into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_elems</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">na</parametername>
</parameternamelist>
<parameterdescription>
<para>action to execute after get </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="344" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="344" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1aebefa1395f990efb66284adc1495f6d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::getData</definition>
        <argsstring>(RDMA_HandleType const &amp;rdma_handle, RDMA_RecvType cont)</argsstring>
        <name>getData</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1a36020f2b7ae371b6ddc8ec9caffb72d2" kindref="member">RDMA_RecvType</ref></type>
          <declname>cont</declname>
        </param>
        <briefdescription>
<para>Get data with continuation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rdma_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cont</parametername>
</parameternamelist>
<parameterdescription>
<para>continuation with data and length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="359" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="359" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a214cf0d741a5dd197e12a3fcd6ea2c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::getData</definition>
        <argsstring>(RDMA_HandleType const &amp;rdma_handle, TagType const &amp;tag, ByteType const &amp;num_bytes, ByteType const &amp;offset, RDMA_RecvType cont)</argsstring>
        <name>getData</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1a36020f2b7ae371b6ddc8ec9caffb72d2" kindref="member">RDMA_RecvType</ref></type>
          <declname>cont</declname>
        </param>
        <briefdescription>
<para>Get data with continuation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rdma_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>tag for get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset to get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cont</parametername>
</parameternamelist>
<parameterdescription>
<para>continuation with data and length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="372" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="993" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a69d6fc1f017047de79f3c1190e55ac53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref></type>
        <definition>RDMA_HandleType vt::rdma::RDMAManager::registerNewTypedRdmaHandler</definition>
        <argsstring>(T ptr, ByteType const &amp;num_elems)</argsstring>
        <name>registerNewTypedRdmaHandler</name>
        <param>
          <type>T</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_elems</declname>
        </param>
        <briefdescription>
<para>Register a new typed RDMA handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data to register </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_elems</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the RDMA handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="386" column="19" bodyfile="src/vt/rdma/rdma.h" bodystart="386" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1ab68308f4b3b72714f81a00755736b0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref></type>
        <definition>RDMA_HandleType vt::rdma::RDMAManager::registerNewRdmaHandler</definition>
        <argsstring>(bool const &amp;use_default=false, RDMA_PtrType const &amp;ptr=nullptr, ByteType const &amp;num_bytes=no_byte, bool const &amp;is_collective=false)</argsstring>
        <name>registerNewRdmaHandler</name>
        <param>
          <type>bool const &amp;</type>
          <declname>use_default</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref> const &amp;</type>
          <declname>ptr</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
          <defval>no_byte</defval>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_collective</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Register a typeless RDMA handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">use_default</parametername>
</parameternamelist>
<parameterdescription>
<para>use default handler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>point to data to register </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_collective</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it&apos;s a collective registration</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the RDMA handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="408" column="19" bodyfile="src/vt/rdma/rdma.cc" bodystart="329" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a526b7c441125a9d5ed9528736be97819" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref></type>
        <definition>RDMA_HandleType vt::rdma::RDMAManager::collectiveRegisterRdmaHandler</definition>
        <argsstring>(bool const &amp;use_default, RDMA_PtrType const &amp;ptr, ByteType const &amp;num_bytes)</argsstring>
        <name>collectiveRegisterRdmaHandler</name>
        <param>
          <type>bool const &amp;</type>
          <declname>use_default</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref> const &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
        </param>
        <briefdescription>
<para>Collectively register a typeless RDMA handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">use_default</parametername>
</parameternamelist>
<parameterdescription>
<para>use default handler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>point to data to register </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the RDMA handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="422" column="19" bodyfile="src/vt/rdma/rdma.h" bodystart="422" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1ad851bdc250182163eb4996888ba1b863" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref></type>
        <definition>RDMA_HandleType vt::rdma::RDMAManager::registerCollectiveTyped</definition>
        <argsstring>(T ptr, ByteType const &amp;num_total_elems, ByteType const &amp;num_elems, RDMA_MapType const &amp;map=default_map)</argsstring>
        <name>registerCollectiveTyped</name>
        <param>
          <type>T</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_total_elems</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_elems</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a16e12d11cf7d771df0d3dc6947a4f95c" kindref="member">RDMA_MapType</ref> const &amp;</type>
          <declname>map</declname>
          <defval>default_map</defval>
        </param>
        <briefdescription>
<para>Collectively register a new typed RDMA handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data to register </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_total_elems</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of elements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_elems</parametername>
</parameternamelist>
<parameterdescription>
<para>element size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">map</parametername>
</parameternamelist>
<parameterdescription>
<para>map for data to node</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the RDMA handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="439" column="19" bodyfile="src/vt/rdma/rdma.h" bodystart="439" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a339763a690f218c3df58268a691ecfe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref></type>
        <definition>RDMA_HandleType vt::rdma::RDMAManager::registerNewCollective</definition>
        <argsstring>(bool const &amp;use_default, RDMA_PtrType const &amp;ptr, ByteType const &amp;num_bytes, ByteType const &amp;num_total_bytes, ByteType const &amp;elm_size=rdma_default_byte_size, RDMA_MapType const &amp;map=default_map)</argsstring>
        <name>registerNewCollective</name>
        <param>
          <type>bool const &amp;</type>
          <declname>use_default</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref> const &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_total_bytes</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>elm_size</declname>
          <defval>rdma_default_byte_size</defval>
        </param>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a16e12d11cf7d771df0d3dc6947a4f95c" kindref="member">RDMA_MapType</ref> const &amp;</type>
          <declname>map</declname>
          <defval>default_map</defval>
        </param>
        <briefdescription>
<para>Collectively register a new typeless RDMA handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">use_default</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to use default handler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to register </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_total_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>total bytes for across all nodes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elm_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of an element </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">map</parametername>
</parameternamelist>
<parameterdescription>
<para>map for data to node</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the RDMA handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="462" column="19" bodyfile="src/vt/rdma/rdma.cc" bodystart="308" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a59de11a7b7a8034a2e8e27a10897ce01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::unregisterRdmaHandler</definition>
        <argsstring>(RDMA_HandleType const &amp;handle, RDMA_TypeType const &amp;type=RDMA_TypeType::GetOrPut, TagType const &amp;tag=no_tag, bool const &amp;use_default=false)</argsstring>
        <name>unregisterRdmaHandler</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMA_TypeType</ref> const &amp;</type>
          <declname>type</declname>
          <defval>RDMA_TypeType::GetOrPut</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>use_default</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Unregister a RDMA handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of handlers (GET or PUT) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">use_default</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it&apos;s a default handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="476" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="369" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a34e50e7536bddd880c97b60b276b63ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::unregisterRdmaHandler</definition>
        <argsstring>(RDMA_HandleType const &amp;handle, RDMA_HandlerType const &amp;handler, TagType const &amp;tag=no_tag)</argsstring>
        <name>unregisterRdmaHandler</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a9530efb893c0f3846e8ac5f0507e0f49" kindref="member">RDMA_HandlerType</ref> const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
<para>Unregister a RDMA handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="488" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="382" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1abcddc1a18794163032758fcf035ff406" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgType</type>
            <defval><ref refid="namespacevt_1ac34f95a5e2b8109b55bfba52b074443d" kindref="member">BaseMessage</ref></defval>
          </param>
          <param>
            <type><ref refid="namespacevt_1add83fe11410931719f6543a575acfe87" kindref="member">ActiveTypedRDMAGetFnType</ref>&lt; MsgType &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1a9530efb893c0f3846e8ac5f0507e0f49" kindref="member">RDMA_HandlerType</ref></type>
        <definition>RDMA_HandlerType vt::rdma::RDMAManager::associateGetFunction</definition>
        <argsstring>(MsgType *msg, RDMA_HandleType const &amp;han, RDMA_GetTypedFunctionType&lt; MsgType &gt; const &amp;fn, bool const &amp;any_tag=false, TagType const &amp;tag=no_tag)</argsstring>
        <name>associateGetFunction</name>
        <param>
          <type>MsgType *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a0d865535d118fe9dcab074fd3df74ce1" kindref="member">RDMA_GetTypedFunctionType</ref>&lt; MsgType &gt; const &amp;</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>any_tag</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
<para>Associate a get function handler with a RDMA handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message passed on handler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fn</parametername>
</parameternamelist>
<parameterdescription>
<para>the active function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">any_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>whether any tag triggers this handler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>the specific tag to match</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the RDMA handler </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="505" column="20" bodyfile="src/vt/rdma/rdma.h" bodystart="505" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a5092afb73c1a6fb69cb211f23eb704cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgType</type>
            <defval><ref refid="namespacevt_1ac34f95a5e2b8109b55bfba52b074443d" kindref="member">BaseMessage</ref></defval>
          </param>
          <param>
            <type><ref refid="namespacevt_1a881ee9bd1e4e71905da1f563ee26ce25" kindref="member">ActiveTypedRDMAPutFnType</ref>&lt; MsgType &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1a9530efb893c0f3846e8ac5f0507e0f49" kindref="member">RDMA_HandlerType</ref></type>
        <definition>RDMA_HandlerType vt::rdma::RDMAManager::associatePutFunction</definition>
        <argsstring>(MsgType *msg, RDMA_HandleType const &amp;han, RDMA_PutTypedFunctionType&lt; MsgType &gt; const &amp;fn, bool const &amp;any_tag=false, TagType const &amp;tag=no_tag)</argsstring>
        <name>associatePutFunction</name>
        <param>
          <type>MsgType *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ad9746ec3367968e16945ef88c1ac45ce" kindref="member">RDMA_PutTypedFunctionType</ref>&lt; MsgType &gt; const &amp;</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>any_tag</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
<para>Associate a put function handler with a RDMA handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message passed on handler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fn</parametername>
</parameternamelist>
<parameterdescription>
<para>the active function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">any_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>whether any tag triggers this handler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>the specific tag to match</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the RDMA handler </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="527" column="20" bodyfile="src/vt/rdma/rdma.h" bodystart="527" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1add2a57acf8b38758b2e53f71d92d452a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::newChannel</definition>
        <argsstring>(RDMA_TypeType const &amp;type, RDMA_HandleType const &amp;han, NodeType const &amp;target, NodeType const &amp;non_target, ActionType const &amp;action)</argsstring>
        <name>newChannel</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMA_TypeType</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>non_target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Create a new RDMA channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of channel (GET/PUT) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">target</parametername>
</parameternamelist>
<parameterdescription>
<para>target node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">non_target</parametername>
</parameternamelist>
<parameterdescription>
<para>non-target node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action when complete </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="546" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="1030" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1af300aa329bab5b4fe851025525659454" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::newGetChannel</definition>
        <argsstring>(RDMA_HandleType const &amp;han, RDMA_EndpointType const &amp;target, RDMA_EndpointType const &amp;non_target, ActionType const &amp;action=nullptr)</argsstring>
        <name>newGetChannel</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a106350721a187d2cfb94a9017ef66a07" kindref="member">RDMA_EndpointType</ref> const &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a106350721a187d2cfb94a9017ef66a07" kindref="member">RDMA_EndpointType</ref> const &amp;</type>
          <declname>non_target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Create a new GET RDMA channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">target</parametername>
</parameternamelist>
<parameterdescription>
<para>target node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">non_target</parametername>
</parameternamelist>
<parameterdescription>
<para>non-target node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action when complete </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="559" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="559" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a8eee749e5fe32977a1666b176acec4b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::newGetChannel</definition>
        <argsstring>([[maybe_unused]] RDMA_HandleType const &amp;han, [[maybe_unused]] NodeType const &amp;target, [[maybe_unused]] NodeType const &amp;non_target, [[maybe_unused]] ActionType const &amp;action=nullptr)</argsstring>
        <name>newGetChannel</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>non_target</declname>
        </param>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Create a new GET RDMA channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">target</parametername>
</parameternamelist>
<parameterdescription>
<para>target node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">non_target</parametername>
</parameternamelist>
<parameterdescription>
<para>non-target node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action when complete </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="576" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="576" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a393ba342c05cac5c5fe98d61d00de6c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::newPutChannel</definition>
        <argsstring>([[maybe_unused]] RDMA_HandleType const &amp;han, [[maybe_unused]] NodeType const &amp;target, [[maybe_unused]] NodeType const &amp;non_target, [[maybe_unused]] ActionType const &amp;action=nullptr)</argsstring>
        <name>newPutChannel</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>non_target</declname>
        </param>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Create a new PUT RDMA channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">target</parametername>
</parameternamelist>
<parameterdescription>
<para>target node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">non_target</parametername>
</parameternamelist>
<parameterdescription>
<para>non-target node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action when complete </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="599" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="599" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a85e3bd458484375b762492ed0d65d9f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::syncLocalGetChannel</definition>
        <argsstring>(RDMA_HandleType const &amp;han, ActionType const &amp;action)</argsstring>
        <name>syncLocalGetChannel</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Sync locally a GET channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action when sync completes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="621" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="621" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1aa38b010741db4c375e22662870549dd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::syncLocalGetChannel</definition>
        <argsstring>(RDMA_HandleType const &amp;han, NodeType const &amp;in_target, ActionType const &amp;action=nullptr)</argsstring>
        <name>syncLocalGetChannel</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>in_target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Sync locally on a GET channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_target</parametername>
</parameternamelist>
<parameterdescription>
<para>the target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action when sync completes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="634" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="634" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1ad09037e1408af7037ca87fc4708700aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::syncLocalPutChannel</definition>
        <argsstring>(RDMA_HandleType const &amp;han, NodeType const &amp;dest, ActionType const &amp;action=nullptr)</argsstring>
        <name>syncLocalPutChannel</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Sync locally on a PUT channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dest</parametername>
</parameternamelist>
<parameterdescription>
<para>the target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action when sync completes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="654" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="654" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a3b4e56f84f35786f8225baffeaa921ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::syncLocalPutChannel</definition>
        <argsstring>(RDMA_HandleType const &amp;han, NodeType const &amp;dest, NodeType const &amp;in_target, ActionType const &amp;action=nullptr)</argsstring>
        <name>syncLocalPutChannel</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>in_target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Sync locally on a PUT channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dest</parametername>
</parameternamelist>
<parameterdescription>
<para>destination node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_target</parametername>
</parameternamelist>
<parameterdescription>
<para>the target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action when sync completes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="668" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="668" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1afaa2ab82b754c4a231c3d728fe0a9e88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::syncRemoteGetChannel</definition>
        <argsstring>(RDMA_HandleType const &amp;han, NodeType const &amp;in_target=uninitialized_destination, ActionType const &amp;action=nullptr)</argsstring>
        <name>syncRemoteGetChannel</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>in_target</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Remotely sync GET on channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_target</parametername>
</parameternamelist>
<parameterdescription>
<para>target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action after completion </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="684" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="684" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a9b6fb7fac7c6b534659705cf4ad20658" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::syncRemotePutChannel</definition>
        <argsstring>(RDMA_HandleType const &amp;han, ActionType const &amp;action)</argsstring>
        <name>syncRemotePutChannel</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Remotely sync PUT on channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action after completion </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="703" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="703" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1aae382995709cd7827f256f9d5f3e45e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::syncRemotePutChannel</definition>
        <argsstring>(RDMA_HandleType const &amp;han, NodeType const &amp;in_target, ActionType const &amp;action=nullptr)</argsstring>
        <name>syncRemotePutChannel</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>in_target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Remotely sync PUT on channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_target</parametername>
</parameternamelist>
<parameterdescription>
<para>target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action after completion </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="716" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="716" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a9767f9beafd9a352ae2b9f0a189f7346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::removeDirectChannel</definition>
        <argsstring>(RDMA_HandleType const &amp;han, NodeType const &amp;override_target=uninitialized_destination, ActionType const &amp;action=nullptr)</argsstring>
        <name>removeDirectChannel</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>override_target</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Remove channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the RDMA handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">override_target</parametername>
</parameternamelist>
<parameterdescription>
<para>the target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action after removal </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="736" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="1322" bodyend="1356"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a9b393c6dbd360c0b7bfb899e3fc0451b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a9530efb893c0f3846e8ac5f0507e0f49" kindref="member">RDMA_HandlerType</ref></type>
        <definition>RDMA_HandlerType vt::rdma::RDMAManager::allocateNewRdmaHandler</definition>
        <argsstring>()</argsstring>
        <name>allocateNewRdmaHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="893" column="20" bodyfile="src/vt/rdma/rdma.cc" bodystart="395" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a3836ae3598530ab0c5486695f4fcf180" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="908" column="8" bodyfile="src/vt/rdma/rdma.h" bodystart="908" bodyend="918"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1abde2782a98e21ad696be5aa621461814" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>static NodeType vt::rdma::RDMAManager::getTarget</definition>
        <argsstring>(RDMA_HandleType const &amp;han, NodeType const &amp;in_tar=uninitialized_destination)</argsstring>
        <name>getTarget</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>in_tar</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="742" column="19" bodyfile="src/vt/rdma/rdma.h" bodystart="742" bodyend="748"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a4dd6beec7e4e1d3cc4c0ad3e8d0e7837" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::syncChannel</definition>
        <argsstring>(bool const &amp;is_local, RDMA_HandleType const &amp;han, RDMA_TypeType const &amp;type, NodeType const &amp;target, NodeType const &amp;non_target, ActionType const &amp;action)</argsstring>
        <name>syncChannel</name>
        <param>
          <type>bool const &amp;</type>
          <declname>is_local</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMA_TypeType</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>non_target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="750" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="550" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1abd4b573102bf0a4c7dd0687d257f7a0d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::setupChannelWithRemote</definition>
        <argsstring>(RDMA_TypeType const &amp;type, RDMA_HandleType const &amp;han, NodeType const &amp;dest, ActionType const &amp;action, NodeType const &amp;override_target=uninitialized_destination)</argsstring>
        <name>setupChannelWithRemote</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMA_TypeType</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>override_target</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="755" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="1073" bodyend="1110"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1acef2971a0d793bc8462beac8ef03ef51" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::sendDataChannel</definition>
        <argsstring>(RDMA_TypeType const &amp;type, RDMA_HandleType const &amp;han, RDMA_PtrType const &amp;ptr, ByteType const &amp;num_bytes, ByteType const &amp;offset, NodeType const &amp;target, NodeType const &amp;non_target, ActionType action_after_put)</argsstring>
        <name>sendDataChannel</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMA_TypeType</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref> const &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>non_target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>action_after_put</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="761" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="574" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a0007e2a8fba26477bd9bb52887e855e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::createDirectChannel</definition>
        <argsstring>(RDMA_TypeType const &amp;type, RDMA_HandleType const &amp;han, ActionType const &amp;action=nullptr, NodeType const &amp;override_target=uninitialized_destination)</argsstring>
        <name>createDirectChannel</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMA_TypeType</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>override_target</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="767" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="1112" bodyend="1127"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1ab512ce0c45479a8544e8a1eb6b2ed88a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::createDirectChannelInternal</definition>
        <argsstring>(RDMA_TypeType const &amp;type, RDMA_HandleType const &amp;han, NodeType const &amp;non_target, ActionType const &amp;action=nullptr, NodeType const &amp;override_target=uninitialized_destination, TagType const &amp;channel_tag=no_tag, ByteType const &amp;num_bytes=no_byte)</argsstring>
        <name>createDirectChannelInternal</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMA_TypeType</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>non_target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>override_target</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>channel_tag</declname>
          <defval>no_tag</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
          <defval>no_byte</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="773" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="1225" bodyend="1310"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a3b0d77f20a7c6395fd239b3579056798" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::createDirectChannelFinish</definition>
        <argsstring>(RDMA_TypeType const &amp;type, RDMA_HandleType const &amp;han, NodeType const &amp;non_target, ActionType const &amp;action, TagType const &amp;channel_tag, bool const &amp;is_target, ByteType const &amp;num_bytes, NodeType const &amp;override_target=uninitialized_destination)</argsstring>
        <name>createDirectChannelFinish</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMA_TypeType</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>non_target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>channel_tag</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>override_target</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="780" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="1129" bodyend="1189"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1ab5737cb6eab4f266c495db156907b24c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMAManager::RDMA_TypeType</ref></type>
            <declname>rdma_type</declname>
            <defname>rdma_type</defname>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename FunctionT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1add83fe11410931719f6543a575acfe87" kindref="member">ActiveTypedRDMAGetFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1a9530efb893c0f3846e8ac5f0507e0f49" kindref="member">RDMA_HandlerType</ref></type>
        <definition>RDMA_HandlerType vt::rdma::RDMAManager::associateRdmaGetFunction</definition>
        <argsstring>(MsgT *msg, RDMA_HandleType const &amp;han, FunctionT const &amp;fn, bool const &amp;any_tag, TagType const &amp;tag)</argsstring>
        <name>associateRdmaGetFunction</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type>FunctionT const &amp;</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>any_tag</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="791" column="20" bodyfile="src/vt/rdma/rdma.h" bodystart="791" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a08df53322f7811c8a80911506d3db362" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMAManager::RDMA_TypeType</ref></type>
            <declname>rdma_type</declname>
            <defname>rdma_type</defname>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename FunctionT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a881ee9bd1e4e71905da1f563ee26ce25" kindref="member">ActiveTypedRDMAPutFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1a9530efb893c0f3846e8ac5f0507e0f49" kindref="member">RDMA_HandlerType</ref></type>
        <definition>RDMA_HandlerType vt::rdma::RDMAManager::associateRdmaPutFunction</definition>
        <argsstring>(MsgT *msg, RDMA_HandleType const &amp;han, FunctionT const &amp;fn, bool const &amp;any_tag, TagType const &amp;tag)</argsstring>
        <name>associateRdmaPutFunction</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type>FunctionT const &amp;</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>any_tag</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="823" column="20" bodyfile="src/vt/rdma/rdma.h" bodystart="823" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1aee554383c0376e3751d0957b2c04cc75" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::requestGetData</definition>
        <argsstring>(GetMessage *msg, bool const &amp;is_user_msg, RDMA_HandleType const &amp;rdma_handle, TagType const &amp;tag, ByteType const &amp;num_bytes, ByteType const &amp;offset, bool const &amp;is_local, RDMA_PtrType const &amp;ptr=nullptr, NodeType const &amp;from_node=uninitialized_destination, RDMA_ContinuationType cont=no_action, ActionType next_action=no_action)</argsstring>
        <name>requestGetData</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1acce0da4c9ea1233c3f132c1971943653" kindref="member">GetMessage</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_user_msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>rdma_handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_local</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref> const &amp;</type>
          <declname>ptr</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>from_node</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a9880273f1697d78c2171f8d8f044de51" kindref="member">RDMA_ContinuationType</ref></type>
          <declname>cont</declname>
          <defval>no_action</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>next_action</declname>
          <defval>no_action</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="851" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="400" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a38e87a342616670eb3679e649e3c39cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::triggerGetRecvData</definition>
        <argsstring>(RDMA_OpType const &amp;op, TagType const &amp;tag, RDMA_PtrType ptr, ByteType const &amp;num_bytes, ActionType const &amp;action=no_action)</argsstring>
        <name>triggerGetRecvData</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1a9b966d9780a2b41afe7cd7b7b4b20300" kindref="member">RDMA_OpType</ref> const &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref></type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
          <defval>no_action</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="860" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="429" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a7670a52bb5673c5e15a6ff21097847f3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::triggerPutRecvData</definition>
        <argsstring>(RDMA_HandleType const &amp;han, TagType const &amp;tag, RDMA_PtrType ptr, ByteType const &amp;num_bytes, ByteType const &amp;offset, ActionType const &amp;action, bool const &amp;is_local, NodeType const &amp;from_node)</argsstring>
        <name>triggerPutRecvData</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref></type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>num_bytes</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref> const &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> const &amp;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_local</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>from_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="865" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="486" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a49b9fd1ac1fcc391a45b7a4c8c796a2b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a8bce76d1b441ca17daf84835eb9a7dec" kindref="member">RDMA_DirectType</ref></type>
        <definition>RDMAManager::RDMA_DirectType vt::rdma::RDMAManager::tryGetDataPtrDirect</definition>
        <argsstring>(RDMA_OpType const &amp;op)</argsstring>
        <name>tryGetDataPtrDirect</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1a9b966d9780a2b41afe7cd7b7b4b20300" kindref="member">RDMA_OpType</ref> const &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="871" column="19" bodyfile="src/vt/rdma/rdma.cc" bodystart="452" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1afe917ba8c9a44175dd0766f3f0321e61" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1aab05b4a584f7ee835a6d0f66915cf59b" kindref="member">RDMA_PtrType</ref></type>
        <definition>RDMA_PtrType vt::rdma::RDMAManager::tryPutPtr</definition>
        <argsstring>(RDMA_HandleType const &amp;han, TagType const &amp;tag)</argsstring>
        <name>tryPutPtr</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="872" column="16" bodyfile="src/vt/rdma/rdma.cc" bodystart="524" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a02d9c1d18f6f15797ee2592613175069" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::triggerPutBackData</definition>
        <argsstring>(RDMA_OpType const &amp;op)</argsstring>
        <name>triggerPutBackData</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1a9b966d9780a2b41afe7cd7b7b4b20300" kindref="member">RDMA_OpType</ref> const &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="873" column="8" bodyfile="src/vt/rdma/rdma.cc" bodystart="474" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a0c9f73f027924ee73cb2d9a8af520e1e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref></type>
        <definition>TagType vt::rdma::RDMAManager::nextRdmaChannelTag</definition>
        <argsstring>()</argsstring>
        <name>nextRdmaChannelTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="874" column="11" bodyfile="src/vt/rdma/rdma.cc" bodystart="1358" bodyend="1363"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a3d8b57617a652d55cf2714930d618c05" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1aab8d55968084610ce3b17057981e9300" kindref="member">ByteType</ref></type>
        <definition>ByteType vt::rdma::RDMAManager::lookupBytesHandler</definition>
        <argsstring>(RDMA_HandleType const &amp;han)</argsstring>
        <name>lookupBytesHandler</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="875" column="12" bodyfile="src/vt/rdma/rdma.cc" bodystart="1312" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a8f6d4973f9ea76e2be99d1aac105fff7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a3df5b264f344d9d4530a96264782a725" kindref="member">RDMA_ChannelLookupType</ref></type>
        <definition>RDMAManager::RDMA_ChannelLookupType vt::rdma::RDMAManager::makeChannelLookup</definition>
        <argsstring>(RDMA_HandleType const &amp;han, RDMA_TypeType const &amp;rdma_op_type, NodeType const &amp;target, NodeType const &amp;non_target)</argsstring>
        <name>makeChannelLookup</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMA_TypeType</ref> const &amp;</type>
          <declname>rdma_op_type</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>non_target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="877" column="26" bodyfile="src/vt/rdma/rdma.cc" bodystart="1191" bodyend="1198"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a51f828fcbb55e1b4c883746c490b77f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ad6a7e417dca07fe5743318e1153677a8" kindref="member">RDMA_ChannelType</ref> *</type>
        <definition>RDMAManager::RDMA_ChannelType * vt::rdma::RDMAManager::findChannel</definition>
        <argsstring>(RDMA_HandleType const &amp;han, RDMA_TypeType const &amp;rdma_op_type, NodeType const &amp;target, NodeType const &amp;non_target, bool const &amp;should_insert=false, bool const &amp;must_exist=false)</argsstring>
        <name>findChannel</name>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMA_TypeType</ref> const &amp;</type>
          <declname>rdma_op_type</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>non_target</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>should_insert</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>must_exist</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="882" column="20" bodyfile="src/vt/rdma/rdma.cc" bodystart="1200" bodyend="1223"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1aba5002562451e1264979003dcf1e659e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::getRDMAMsg</definition>
        <argsstring>(GetMessage *msg)</argsstring>
        <name>getRDMAMsg</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1acce0da4c9ea1233c3f132c1971943653" kindref="member">GetMessage</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="896" column="15" bodyfile="src/vt/rdma/rdma.cc" bodystart="57" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a1c11e7b5616c22d03fd3884f99d3e7ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::getRecvMsg</definition>
        <argsstring>(GetBackMessage *msg)</argsstring>
        <name>getRecvMsg</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1a72a94b92eba75ec9fec43b2a9a4ad878" kindref="member">GetBackMessage</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="897" column="15" bodyfile="src/vt/rdma/rdma.cc" bodystart="111" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1ad8525c38d7d47c1e96a6ed4399e5b1ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::putBackMsg</definition>
        <argsstring>(PutBackMessage *msg)</argsstring>
        <name>putBackMsg</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1a07a52401fe8185d190371b3333dc61ac" kindref="member">PutBackMessage</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="898" column="15" bodyfile="src/vt/rdma/rdma.cc" bodystart="153" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a87d44e05aeeb404290ac2a38b4631fe0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::putRecvMsg</definition>
        <argsstring>(PutMessage *msg)</argsstring>
        <name>putRecvMsg</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ae0a0330c647ec5ac5d508750f4cd4a06" kindref="member">PutMessage</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="899" column="15" bodyfile="src/vt/rdma/rdma.cc" bodystart="164" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a5189682bba9e4b73faa010bf78f96469" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::setupChannel</definition>
        <argsstring>(CreateChannel *msg)</argsstring>
        <name>setupChannel</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_create_channel" kindref="compound">CreateChannel</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="902" column="15" bodyfile="src/vt/rdma/rdma.cc" bodystart="266" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a240f9f8c6697b4fc94c8a8b1b4d6c737" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::removeChannel</definition>
        <argsstring>(DestroyChannel *msg)</argsstring>
        <name>removeChannel</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1a1273aeddd73c1ffac0d7383ef7a314d8" kindref="member">DestroyChannel</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="903" column="15" bodyfile="src/vt/rdma/rdma.cc" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a8c2cb5f8770dfe6265065c6040314399" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::RDMAManager::remoteChannel</definition>
        <argsstring>(ChannelMessage *msg)</argsstring>
        <name>remoteChannel</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_channel_message" kindref="compound">ChannelMessage</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="904" column="15" bodyfile="src/vt/rdma/rdma.cc" bodystart="292" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_r_d_m_a_manager_1a7e01a11f17c52dee2d564341866e2e29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vt::rdma::RDMAManager::getInfoChannel</definition>
        <argsstring>(GetInfoChannel *msg)</argsstring>
        <name>getInfoChannel</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_get_info_channel" kindref="compound">GetInfoChannel</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma.h" line="905" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Core component of VT used to send pure data to registered RDMA handlers or memory locations. </para>
    </briefdescription>
    <detaileddescription>
<para>Allows the registration of RDMA handlers and registered memory locations. The registered handlers trigger a function when the data arrives (GET) or is sent (PUT). If registered memory locations are used directly, one may create a RDMA channel which backs the GET/PUT by MPI_Get/MPI_Put.</para>
<para><simplesect kind="warning"><para>The RDMA manager is experimental and does not operate on over-decomposed entities. See <computeroutput><ref refid="namespacevt_1abc3449a4b87363b942453d0b8cc18a7d" kindref="member">vt::HandleRDMA</ref></computeroutput> for the production version of RDMA. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="1">
        <label>vt::rdma::RDMAManager</label>
        <link refid="structvt_1_1rdma_1_1_r_d_m_a_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="2">
        <label>vt::runtime::component::Component&lt; RDMAManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="8">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="9">
        <label>vt::collective::CollectiveScope</label>
        <link refid="structvt_1_1collective_1_1_collective_scope"/>
      </node>
      <node id="1">
        <label>vt::rdma::RDMAManager</label>
        <link refid="structvt_1_1rdma_1_1_r_d_m_a_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>collective_scope_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="2">
        <label>vt::runtime::component::Component&lt; RDMAManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="8">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/rdma/rdma.h" line="92" column="49" bodyfile="src/vt/rdma/rdma.h" bodystart="92" bodyend="947"/>
    <listofallmembers>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a9b393c6dbd360c0b7bfb899e3fc0451b" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>allocateNewRdmaHandler</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1abcddc1a18794163032758fcf035ff406" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>associateGetFunction</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a5092afb73c1a6fb69cb211f23eb704cb" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>associatePutFunction</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ab5737cb6eab4f266c495db156907b24c" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>associateRdmaGetFunction</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a08df53322f7811c8a80911506d3db362" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>associateRdmaPutFunction</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a5786d652b263a505c6c74f25e7c0994a" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>Channel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aaedab94d025b3aa711c48e881d81d048" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>channels_</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ada74c89614007b46c007876825dd73a5" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>collective_scope_</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a526b7c441125a9d5ed9528736be97819" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>collectiveRegisterRdmaHandler</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ab2b109454390c41ea74e72a2850edd12" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>CollectiveScopeType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ab954824329584814bb652ea810cd62e3" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1ac9c39c6eafc72a1a240ed67ea12b3e66" prot="protected" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>component_id_</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a0007e2a8fba26477bd9bb52887e855e3" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>createDirectChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a3b0d77f20a7c6395fd239b3579056798" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>createDirectChannelFinish</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ab512ce0c45479a8544e8a1eb6b2ed88a" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>createDirectChannelInternal</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a4369f821141f2e140441f1b590661a7b" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>cur_collective_ident_</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1abcdb9005492e7a1145c9b8c9e9e271b0" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>cur_ident_</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a64c6d7af9b79b175cfbcfe86e40db23e" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>cur_op_</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a4cd37fd70b9598a06a8edbadb44a9eb4" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>cur_rdma_handler_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ad95ea698535524d0f82c5da9beaaaf37" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>DiagnosticBasePtrType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>dumpState</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a43eeed44aa64c77f5491abb4f5a39e9a" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>fatalError</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a098e362de01af6054e5491fba671a959" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>finalize</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a51f828fcbb55e1b4c883746c490b77f0" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>findChannel</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a1d6951af40ad0b4020860c0b21b1a85c" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>foreachDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1a45ab90398777ffdbb2ad5b62fe183d99" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getComponentID</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aebefa1395f990efb66284adc1495f6d4" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getData</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a214cf0d741a5dd197e12a3fcd6ea2c47" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getData</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aa97aeb2fee7d1a1b2228ff063d64eb5f" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getDataIntoBuf</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a68bf3378ec4132a81b728c180aa63686" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getDataIntoBufCollective</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a9c1f4174ac87bb6ae0ec186a08adbbbb" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getDiagnosticsFootprint</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a7e01a11f17c52dee2d564341866e2e29" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getInfoChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aba5002562451e1264979003dcf1e659e" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getRDMAMsg</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a1c11e7b5616c22d03fd3884f99d3e7ff" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getRecvMsg</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a06506f3abad91d02456d88f4b1e4db1b" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getRegion</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a108e405a633745d46c2d68a1a0727b7c" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getRegionTypeless</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1abde2782a98e21ad696be5aa621461814" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getTarget</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a267d1a2da52abf259119da964b9051f0" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getTypedDataInfoBuf</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a59f4ee000f6c382289fa6c186962d1d1" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>getTypedDataInfoBuf</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ab5a0e70728339dd6955d355754f4892a" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>holder_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a7f07384d294e59796add9ce6be2d6410" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>initialize</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a3d8b57617a652d55cf2714930d618c05" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>lookupBytesHandler</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a8f6d4973f9ea76e2be99d1aac105fff7" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>makeChannelLookup</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1add0f236b62fd550b8eb3d78156a97403" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>name</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_progressable_1a86dd4c58e43f7dbf6bd67f7a8e6df088" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>needsCurrentTime</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1add2a57acf8b38758b2e53f71d92d452a" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>newChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1af300aa329bab5b4fe851025525659454" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>newGetChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a8eee749e5fe32977a1666b176acec4b7" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>newGetChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a393ba342c05cac5c5fe98d61d00de6c8" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>newPutChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a583736edf4cc08a6072d5284df9e4560" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>next_channel_tag_</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a0c9f73f027924ee73cb2d9a8af520e1e" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>nextRdmaChannelTag</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aa4007bae161761451dc033f5555d0461" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>pending_ops_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a5a15bd0369a9d3765a6c70249bada96f" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>pollable</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a4e64b5a12ffc1874065aa8b09e6309a9" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>preDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1d9147ecabbb0ebc43be3517d9e500c4" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>progress</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_progressable_1a75f1e623643f2273835fdf047d3d0cd3" prot="public" virt="pure-virtual" ambiguityscope="vt::runtime::component::BaseComponent::"><scope>vt::rdma::RDMAManager</scope><name>progress</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ad8525c38d7d47c1e96a6ed4399e5b1ef" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>putBackMsg</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a651ca7aaa9fdbf404c41157b883407e2" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>putData</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a839c0031a48c5341494b119b0f10bafa" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>putData</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a9f5bbbbdc2d6cca20f3bd5a259ecaf62" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>putDataIntoBufCollective</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a87d44e05aeeb404290ac2a38b4631fe0" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>putRecvMsg</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a2e34becca8d5f72a7d460e6574f8f623" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>putRegionTypeless</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a30167dbd8b0165a273a9d91c84acded1" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>putTypedData</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a553764f2d91b42cf97991bbeadb75a5c" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>putTypedData</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a7b857edc3e489efd9e65e160a4e55a68" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_ActionType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a1fd134fc514587ac616aec8530c7cc87" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_BitsType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a3df5b264f344d9d4530a96264782a725" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_ChannelLookupType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ad6a7e417dca07fe5743318e1153677a8" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_ChannelType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a55dd81ff646ebb9d61ebf3a7239ec3b8" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_ContainerType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a8bce76d1b441ca17daf84835eb9a7dec" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_DirectType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a106350721a187d2cfb94a9017ef66a07" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_EndpointType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a77d00c37a45276b36ef64b9226a8ef0f" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_GetFunctionType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a0d865535d118fe9dcab074fd3df74ce1" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_GetTypedFunctionType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a578dd586d6982be7476b4df7656cd024" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_GroupType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a81658757dd2c692d5c31048d2d53cb3d" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_InfoType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a689c48ff97319fd83c19e7230b8e9d62" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_LiveChannelsType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a16e12d11cf7d771df0d3dc6947a4f95c" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_MapType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a8c9def755fab6d3eb1f529175243f38a" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_OpContainerType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a1239149a2070897c56e94e65c2016a7a" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_PendingType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a714321626dc5613772ac43564c6b7d85" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_PutFunctionType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ad9746ec3367968e16945ef88c1ac45ce" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_PutTypedFunctionType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aafc574f533ebf5b34c1389ef504448bf" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_RegionType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aad42879902ea82c4de357ad482d9333d" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_StateType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a7f4369a60dfe2ca11abe39a4ce8c2f5e" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMA_TypeType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a59e73ef8c81ddf4094802bfda5ac42cc" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMACollectionManager</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aef98ba273bd7756fcf6ff71c96db391b" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>RDMAManager</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1af9d694f9d62d973a2cde6e52c55bef14" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>reducer</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ad851bdc250182163eb4996888ba1b863" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>registerCollectiveTyped</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa2cd54632710e7cdf1b20dfb676c752c" prot="protected" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>registerCounter</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1abb1ee7f09f05c143dbdfd3346f6cdcba" prot="protected" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>registerCounterT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ab71509224f5716107ef5c781ba5ff487" prot="protected" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>registerDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a20417bbb4fe4c4d7648aef3a2699b787" prot="protected" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>registerGauge</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa220905292aeb726254d3dff2e672b00" prot="protected" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>registerGaugeT</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a339763a690f218c3df58268a691ecfe4" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>registerNewCollective</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ab68308f4b3b72714f81a00755736b0b5" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>registerNewRdmaHandler</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a69d6fc1f017047de79f3c1190e55ac53" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>registerNewTypedRdmaHandler</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a5c6035a56d54cc3de270efedad3f026e" prot="protected" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>registerTimer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a328ecca78c6aa309bb764f3dde083c3e" prot="protected" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>registerTimerT</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a8c2cb5f8770dfe6265065c6040314399" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>remoteChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a240f9f8c6697b4fc94c8a8b1b4d6c737" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>removeChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a9767f9beafd9a352ae2b9f0a189f7346" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>removeDirectChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aee554383c0376e3751d0957b2c04cc75" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>requestGetData</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1acef2971a0d793bc8462beac8ef03ef51" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>sendDataChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a3836ae3598530ab0c5486695f4fcf180" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>serialize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a9586588232a204f1a8755bc67b65b307" prot="public" virt="non-virtual" ambiguityscope="Component&lt; RDMAManager &gt;::"><scope>vt::rdma::RDMAManager</scope><name>serialize</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a5189682bba9e4b73faa010bf78f96469" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>setupChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1abd4b573102bf0a4c7dd0687d257f7a0d" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>setupChannelWithRemote</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aad3974307ab3b2e1df389a91310f68c2" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>startup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ac969a635e579cf7be3af696f500bf260" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>staticInit</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a4dd6beec7e4e1d3cc4c0ad3e8d0e7837" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>syncChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a85e3bd458484375b762492ed0d65d9f5" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>syncLocalGetChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aa38b010741db4c375e22662870549dd9" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>syncLocalGetChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1ad09037e1408af7037ca87fc4708700aa" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>syncLocalPutChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a3b4e56f84f35786f8225baffeaa921ea" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>syncLocalPutChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1afaa2ab82b754c4a231c3d728fe0a9e88" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>syncRemoteGetChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a9b6fb7fac7c6b534659705cf4ad20658" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>syncRemotePutChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1aae382995709cd7827f256f9d5f3e45e4" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>syncRemotePutChannel</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a38e87a342616670eb3679e649e3c39cf" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>triggerGetRecvData</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a02d9c1d18f6f15797ee2592613175069" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>triggerPutBackData</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a7670a52bb5673c5e15a6ff21097847f3" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>triggerPutRecvData</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a49b9fd1ac1fcc391a45b7a4c8c796a2b" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>tryGetDataPtrDirect</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1afe917ba8c9a44175dd0766f3f0321e61" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>tryPutPtr</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a2bcd1016fcdb6395844d4fd15d84a570" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>UnitType</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a59de11a7b7a8034a2e8e27a10897ce01" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>unregisterRdmaHandler</name></member>
      <member refid="structvt_1_1rdma_1_1_r_d_m_a_manager_1a34e50e7536bddd880c97b60b276b63ad" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>unregisterRdmaHandler</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a97b0e8ff394c8aa04035ff15165eb087" prot="protected" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>updateDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a75e737294bb63e1898d9ac4515f0cf63" prot="public" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>UpdateType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ab4cb6c67b01b76f91cc806a79169da69" prot="private" virt="non-virtual"><scope>vt::rdma::RDMAManager</scope><name>values_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a9190b5cb499f9cfdacc1e0bd98a1805a" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>~BaseComponent</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_name_1a3b826c5eee9d015afd67d9b8353aac30" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>~ComponentName</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1af8a579aa590d81a18cd9e70854ed7f2f" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>~Diagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_progressable_1a6c4025ca0a513de3a011ce214dc5417d" prot="public" virt="virtual"><scope>vt::rdma::RDMAManager</scope><name>~Progressable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
