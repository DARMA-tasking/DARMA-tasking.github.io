<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1pipe_1_1callback_1_1_callback_base" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>vt::pipe::callback::CallbackBase</compoundname>
    <derivedcompoundref refid="structvt_1_1pipe_1_1callback_1_1_anon_listener" prot="public" virt="non-virtual">vt::pipe::callback::AnonListener&lt; SignalT &gt;</derivedcompoundref>
    <includes refid="callback__base_8h" local="no">callback_base.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>SignalT</declname>
        <defname>SignalT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1ae1d258fb58ce12e88ae0c16bf66e5e60" prot="public" static="no">
        <type>SignalT</type>
        <definition>using vt::pipe::callback::CallbackBase&lt; SignalT &gt;::SignalType =  SignalT</definition>
        <argsstring></argsstring>
        <name>SignalType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="65" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1aa1c1fd83b75220a50f6dcd7c1617726e" prot="public" static="no">
        <type>typename SignalT::DataType</type>
        <definition>using vt::pipe::callback::CallbackBase&lt; SignalT &gt;::SignalDataType =  typename SignalT::DataType</definition>
        <argsstring></argsstring>
        <name>SignalDataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="66" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1a5b996f1bdf68fe4ef90c8c1fe2241c59" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::pipe::callback::CallbackBase&lt; SignalT &gt;::reference_counted_</definition>
        <argsstring></argsstring>
        <name>reference_counted_</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="137" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1af5a2e880ab1ebf223e6f1372835a71a3" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a9b39ce9494bb04674d0d5b895a5aa50f" kindref="member">RefType</ref></type>
        <definition>RefType vt::pipe::callback::CallbackBase&lt; SignalT &gt;::triggered_</definition>
        <argsstring></argsstring>
        <name>triggered_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="138" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1aced0bdc19ac44bcb9f3ff3739e148143" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a9b39ce9494bb04674d0d5b895a5aa50f" kindref="member">RefType</ref></type>
        <definition>RefType vt::pipe::callback::CallbackBase&lt; SignalT &gt;::refs_</definition>
        <argsstring></argsstring>
        <name>refs_</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="139" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1aed02135f19f5d5ca4899d488ce402b64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBase&lt; SignalT &gt;::CallbackBase</definition>
        <argsstring>(CallbackBase const &amp;)=default</argsstring>
        <name>CallbackBase</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_base" kindref="compound">CallbackBase</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1aa90843711601bd1174ba64f69f754eb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBase&lt; SignalT &gt;::CallbackBase</definition>
        <argsstring>(CallbackBase &amp;&amp;)=default</argsstring>
        <name>CallbackBase</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_base" kindref="compound">CallbackBase</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1a078375aa25cb0c0e2968804ef3a86a5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_base" kindref="compound">CallbackBase</ref> &amp;</type>
        <definition>CallbackBase&amp; vt::pipe::callback::CallbackBase&lt; SignalT &gt;::operator=</definition>
        <argsstring>(CallbackBase const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_base" kindref="compound">CallbackBase</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1a683cee48109181768cd44354bc98e3e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBase&lt; SignalT &gt;::CallbackBase</definition>
        <argsstring>()</argsstring>
        <name>CallbackBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="72" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1ae96d1355aa94b4fd32469bbb9280717c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBase&lt; SignalT &gt;::CallbackBase</definition>
        <argsstring>(CallbackPersistTagType)</argsstring>
        <name>CallbackBase</name>
        <param>
          <type>CallbackPersistTagType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="75" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1a18840ed75fb94811cb34c17da8703588" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBase&lt; SignalT &gt;::CallbackBase</definition>
        <argsstring>(CallbackSingleUseTagType)</argsstring>
        <name>CallbackBase</name>
        <param>
          <type>CallbackSingleUseTagType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="78" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1a87a0d70f0b3a7c8d94eb62c278ba9e0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBase&lt; SignalT &gt;::CallbackBase</definition>
        <argsstring>(CallbackMultiUseTagType, RefType const &amp;in_num_refs)</argsstring>
        <name>CallbackBase</name>
        <param>
          <type>CallbackMultiUseTagType</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1a9b39ce9494bb04674d0d5b895a5aa50f" kindref="member">RefType</ref> const &amp;</type>
          <declname>in_num_refs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="82" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1a182bd31e2c3f804bb61a4b43907061d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackBase&lt; SignalT &gt;::CallbackBase</definition>
        <argsstring>(CallbackExplicitTagType, bool const &amp;persist, RefType const &amp;in_refs=-1)</argsstring>
        <name>CallbackBase</name>
        <param>
          <type>CallbackExplicitTagType</type>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>persist</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a9b39ce9494bb04674d0d5b895a5aa50f" kindref="member">RefType</ref> const &amp;</type>
          <declname>in_refs</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="86" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1adc39148be97af3105f9b5765431bdc9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vt::pipe::callback::CallbackBase&lt; SignalT &gt;::~CallbackBase</definition>
        <argsstring>()=default</argsstring>
        <name>~CallbackBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1a9ef1595197b291a660e6d19aadb0203e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::callback::CallbackBase&lt; SignalT &gt;::expired</definition>
        <argsstring>() const</argsstring>
        <name>expired</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="94" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1ad54d116447acb7f1d051db946b2e875c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackBase&lt; SignalT &gt;::trigger</definition>
        <argsstring>(SignalDataType *data, PipeType const &amp;pipe_id)</argsstring>
        <name>trigger</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aa1c1fd83b75220a50f6dcd7c1617726e" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pipe_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="104" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="104" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1a20ed519d03b62560080ce3bdb8986f03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::callback::CallbackBase&lt; SignalT &gt;::finished</definition>
        <argsstring>() const</argsstring>
        <name>finished</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="122" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="122" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1a4baca91fd4545ca13f34c75255209edd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackBase&lt; SignalT &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="132" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="132" bodyend="134"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1a75a9b0103e0129f536385b10b86400c3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vt::pipe::callback::CallbackBase&lt; SignalT &gt;::trigger_</definition>
        <argsstring>(SignalDataType *data)=0</argsstring>
        <name>trigger_</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aa1c1fd83b75220a50f6dcd7c1617726e" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_base_1ac14c6c68a45c6f7e18c73daa45b23b83" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void vt::pipe::callback::CallbackBase&lt; SignalT &gt;::trigger_</definition>
        <argsstring>(SignalDataType *data, PipeType const &amp;pipe_id)</argsstring>
        <name>trigger_</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aa1c1fd83b75220a50f6dcd7c1617726e" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pipe_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/callback_base.h" line="99" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="99" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="430">
        <label>vt::pipe::callback::CallbackBase&lt; SignalT &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base"/>
      </node>
      <node id="431">
        <label>vt::pipe::callback::AnonListener&lt; SignalT &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_anon_listener"/>
        <childnode refid="430" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/vt/pipe/callback/callback_base.h" line="64" column="1" bodyfile="src/vt/pipe/callback/callback_base.h" bodystart="64" bodyend="140"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aed02135f19f5d5ca4899d488ce402b64" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aa90843711601bd1174ba64f69f754eb8" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a683cee48109181768cd44354bc98e3e1" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ae96d1355aa94b4fd32469bbb9280717c" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a18840ed75fb94811cb34c17da8703588" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a87a0d70f0b3a7c8d94eb62c278ba9e0e" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a182bd31e2c3f804bb61a4b43907061d2" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a9ef1595197b291a660e6d19aadb0203e" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>expired</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a20ed519d03b62560080ce3bdb8986f03" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>finished</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a078375aa25cb0c0e2968804ef3a86a5f" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>operator=</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a5b996f1bdf68fe4ef90c8c1fe2241c59" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>reference_counted_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aced0bdc19ac44bcb9f3ff3739e148143" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>refs_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a4baca91fd4545ca13f34c75255209edd" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>serialize</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aa1c1fd83b75220a50f6dcd7c1617726e" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>SignalDataType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ae1d258fb58ce12e88ae0c16bf66e5e60" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>SignalType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ad54d116447acb7f1d051db946b2e875c" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>trigger</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a75a9b0103e0129f536385b10b86400c3" prot="protected" virt="pure-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ac14c6c68a45c6f7e18c73daa45b23b83" prot="protected" virt="virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1af5a2e880ab1ebf223e6f1372835a71a3" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>triggered_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1adc39148be97af3105f9b5765431bdc9a" prot="public" virt="virtual"><scope>vt::pipe::callback::CallbackBase</scope><name>~CallbackBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
