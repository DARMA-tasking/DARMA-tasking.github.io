<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="read__lb_8h" kind="file" language="C++">
    <compoundname>read_lb.h</compoundname>
    <includes refid="config_8h" local="yes">vt/config.h</includes>
    <includes refid="lb__type_8h" local="yes">vt/vrt/collection/balance/lb_type.h</includes>
    <includes local="no">string</includes>
    <includes local="no">fstream</includes>
    <includes local="no">map</includes>
    <includes local="no">cstdlib</includes>
    <includedby refid="runtime__banner_8cc" local="yes">src/vt/runtime/runtime_banner.cc</includedby>
    <includedby refid="baselb_8cc" local="yes">src/vt/vrt/collection/balance/baselb/baselb.cc</includedby>
    <includedby refid="baselb_8h" local="yes">src/vt/vrt/collection/balance/baselb/baselb.h</includedby>
    <includedby refid="greedylb_8cc" local="yes">src/vt/vrt/collection/balance/greedylb/greedylb.cc</includedby>
    <includedby refid="hierlb_8cc" local="yes">src/vt/vrt/collection/balance/hierarchicallb/hierlb.cc</includedby>
    <includedby refid="lb__args__enum__converter_8h" local="yes">src/vt/vrt/collection/balance/lb_args_enum_converter.h</includedby>
    <includedby refid="lb__manager_8cc" local="yes">src/vt/vrt/collection/balance/lb_invoke/lb_manager.cc</includedby>
    <includedby refid="read__lb_8cc" local="yes">src/vt/vrt/collection/balance/read_lb.cc</includedby>
    <incdepgraph>
      <node id="323954">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
      </node>
      <node id="323964">
        <label>functional</label>
      </node>
      <node id="323967">
        <label>vt/epoch/epoch_impl_type.h</label>
        <link refid="epoch__impl__type_8h"/>
        <childnode refid="323968" relation="include">
        </childnode>
      </node>
      <node id="323971">
        <label>fmt/format.h</label>
      </node>
      <node id="323974">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="323959" relation="include">
        </childnode>
        <childnode refid="323963" relation="include">
        </childnode>
        <childnode refid="323960" relation="include">
        </childnode>
      </node>
      <node id="323959">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="323960" relation="include">
        </childnode>
        <childnode refid="323961" relation="include">
        </childnode>
      </node>
      <node id="323953">
        <label>cstdint</label>
      </node>
      <node id="323993">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="323979" relation="include">
        </childnode>
        <childnode refid="323963" relation="include">
        </childnode>
        <childnode refid="323987" relation="include">
        </childnode>
        <childnode refid="323992" relation="include">
        </childnode>
        <childnode refid="323994" relation="include">
        </childnode>
        <childnode refid="323974" relation="include">
        </childnode>
        <childnode refid="323991" relation="include">
        </childnode>
        <childnode refid="323970" relation="include">
        </childnode>
        <childnode refid="323984" relation="include">
        </childnode>
        <childnode refid="323960" relation="include">
        </childnode>
        <childnode refid="323996" relation="include">
        </childnode>
        <childnode refid="323976" relation="include">
        </childnode>
      </node>
      <node id="323965">
        <label>vt/epoch/epoch_type.h</label>
        <link refid="epoch__type_8h"/>
        <childnode refid="323966" relation="include">
        </childnode>
        <childnode refid="323967" relation="include">
        </childnode>
        <childnode refid="323971" relation="include">
        </childnode>
      </node>
      <node id="323991">
        <label>cassert</label>
      </node>
      <node id="323988">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="323979" relation="include">
        </childnode>
        <childnode refid="323963" relation="include">
        </childnode>
        <childnode refid="323987" relation="include">
        </childnode>
        <childnode refid="323989" relation="include">
        </childnode>
        <childnode refid="323974" relation="include">
        </childnode>
        <childnode refid="323981" relation="include">
        </childnode>
        <childnode refid="323970" relation="include">
        </childnode>
        <childnode refid="323984" relation="include">
        </childnode>
        <childnode refid="323960" relation="include">
        </childnode>
        <childnode refid="323991" relation="include">
        </childnode>
        <childnode refid="323976" relation="include">
        </childnode>
      </node>
      <node id="323972">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="323973" relation="include">
        </childnode>
        <childnode refid="323967" relation="include">
        </childnode>
      </node>
      <node id="323979">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="323962" relation="include">
        </childnode>
        <childnode refid="323980" relation="include">
        </childnode>
      </node>
      <node id="323973">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
      </node>
      <node id="323977">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="323978" relation="include">
        </childnode>
        <childnode refid="323982" relation="include">
        </childnode>
        <childnode refid="323986" relation="include">
        </childnode>
      </node>
      <node id="323960">
        <label>string</label>
      </node>
      <node id="323997">
        <label>vt/vrt/collection/balance/lb_type.h</label>
        <link refid="lb__type_8h"/>
        <childnode refid="323949" relation="include">
        </childnode>
        <childnode refid="323998" relation="include">
        </childnode>
        <childnode refid="323960" relation="include">
        </childnode>
        <childnode refid="323984" relation="include">
        </childnode>
      </node>
      <node id="324000">
        <label>map</label>
      </node>
      <node id="323994">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="323979" relation="include">
        </childnode>
        <childnode refid="323952" relation="include">
        </childnode>
        <childnode refid="323990" relation="include">
        </childnode>
        <childnode refid="323970" relation="include">
        </childnode>
        <childnode refid="323984" relation="include">
        </childnode>
        <childnode refid="323960" relation="include">
        </childnode>
        <childnode refid="323961" relation="include">
        </childnode>
        <childnode refid="323995" relation="include">
        </childnode>
      </node>
      <node id="323995">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="323994" relation="include">
        </childnode>
        <childnode refid="323974" relation="include">
        </childnode>
        <childnode refid="323990" relation="include">
        </childnode>
        <childnode refid="323970" relation="include">
        </childnode>
        <childnode refid="323984" relation="include">
        </childnode>
        <childnode refid="323960" relation="include">
        </childnode>
        <childnode refid="323961" relation="include">
        </childnode>
        <childnode refid="323976" relation="include">
        </childnode>
      </node>
      <node id="323956">
        <label>vt/configs/features/features_enableif.h</label>
        <link refid="features__enableif_8h"/>
        <childnode refid="323955" relation="include">
        </childnode>
      </node>
      <node id="323999">
        <label>fstream</label>
      </node>
      <node id="323952">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="323953" relation="include">
        </childnode>
        <childnode refid="323954" relation="include">
        </childnode>
        <childnode refid="323955" relation="include">
        </childnode>
        <childnode refid="323956" relation="include">
        </childnode>
        <childnode refid="323957" relation="include">
        </childnode>
      </node>
      <node id="323968">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="323950" relation="include">
        </childnode>
        <childnode refid="323963" relation="include">
        </childnode>
        <childnode refid="323969" relation="include">
        </childnode>
      </node>
      <node id="323976">
        <label>fmt/core.h</label>
      </node>
      <node id="323950">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="323951" relation="include">
        </childnode>
        <childnode refid="323952" relation="include">
        </childnode>
        <childnode refid="323958" relation="include">
        </childnode>
      </node>
      <node id="323980">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="323960" relation="include">
        </childnode>
      </node>
      <node id="323963">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="323953" relation="include">
        </childnode>
        <childnode refid="323964" relation="include">
        </childnode>
        <childnode refid="323965" relation="include">
        </childnode>
      </node>
      <node id="323983">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="323962" relation="include">
        </childnode>
        <childnode refid="323952" relation="include">
        </childnode>
        <childnode refid="323979" relation="include">
        </childnode>
        <childnode refid="323960" relation="include">
        </childnode>
        <childnode refid="323970" relation="include">
        </childnode>
        <childnode refid="323984" relation="include">
        </childnode>
        <childnode refid="323985" relation="include">
        </childnode>
      </node>
      <node id="323975">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
      </node>
      <node id="323978">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="323963" relation="include">
        </childnode>
        <childnode refid="323979" relation="include">
        </childnode>
        <childnode refid="323981" relation="include">
        </childnode>
        <childnode refid="323960" relation="include">
        </childnode>
        <childnode refid="323976" relation="include">
        </childnode>
      </node>
      <node id="323970">
        <label>tuple</label>
      </node>
      <node id="323966">
        <label>vt/utils/strong/strong_type.h</label>
        <link refid="strong__type_8h"/>
      </node>
      <node id="323958">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="323959" relation="include">
        </childnode>
        <childnode refid="323962" relation="include">
        </childnode>
        <childnode refid="323952" relation="include">
        </childnode>
        <childnode refid="323974" relation="include">
        </childnode>
        <childnode refid="323975" relation="include">
        </childnode>
        <childnode refid="323976" relation="include">
        </childnode>
      </node>
      <node id="323961">
        <label>vector</label>
      </node>
      <node id="323996">
        <label>sstream</label>
      </node>
      <node id="323948">
        <label>src/vt/vrt/collection/balance/read_lb.h</label>
        <link refid="read__lb_8h"/>
        <childnode refid="323949" relation="include">
        </childnode>
        <childnode refid="323997" relation="include">
        </childnode>
        <childnode refid="323960" relation="include">
        </childnode>
        <childnode refid="323999" relation="include">
        </childnode>
        <childnode refid="324000" relation="include">
        </childnode>
        <childnode refid="323990" relation="include">
        </childnode>
      </node>
      <node id="323951">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="323989">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="323990" relation="include">
        </childnode>
        <childnode refid="323961" relation="include">
        </childnode>
        <childnode refid="323970" relation="include">
        </childnode>
      </node>
      <node id="323955">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
      </node>
      <node id="323990">
        <label>cstdlib</label>
      </node>
      <node id="323982">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="323979" relation="include">
        </childnode>
        <childnode refid="323983" relation="include">
        </childnode>
        <childnode refid="323970" relation="include">
        </childnode>
      </node>
      <node id="323998">
        <label>unordered_map</label>
      </node>
      <node id="323962">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="323963" relation="include">
        </childnode>
        <childnode refid="323969" relation="include">
        </childnode>
        <childnode refid="323972" relation="include">
        </childnode>
        <childnode refid="323968" relation="include">
        </childnode>
      </node>
      <node id="323987">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="323963" relation="include">
        </childnode>
        <childnode refid="323979" relation="include">
        </childnode>
        <childnode refid="323970" relation="include">
        </childnode>
        <childnode refid="323984" relation="include">
        </childnode>
        <childnode refid="323960" relation="include">
        </childnode>
        <childnode refid="323988" relation="include">
        </childnode>
      </node>
      <node id="323969">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="323950" relation="include">
        </childnode>
        <childnode refid="323963" relation="include">
        </childnode>
        <childnode refid="323953" relation="include">
        </childnode>
        <childnode refid="323964" relation="include">
        </childnode>
        <childnode refid="323970" relation="include">
        </childnode>
      </node>
      <node id="323984">
        <label>type_traits</label>
      </node>
      <node id="323981">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="323962" relation="include">
        </childnode>
        <childnode refid="323960" relation="include">
        </childnode>
      </node>
      <node id="323949">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="323950" relation="include">
        </childnode>
        <childnode refid="323962" relation="include">
        </childnode>
        <childnode refid="323977" relation="include">
        </childnode>
      </node>
      <node id="323957">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="323986">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="323952" relation="include">
        </childnode>
        <childnode refid="323963" relation="include">
        </childnode>
        <childnode refid="323979" relation="include">
        </childnode>
        <childnode refid="323987" relation="include">
        </childnode>
        <childnode refid="323992" relation="include">
        </childnode>
        <childnode refid="323994" relation="include">
        </childnode>
        <childnode refid="323970" relation="include">
        </childnode>
        <childnode refid="323984" relation="include">
        </childnode>
      </node>
      <node id="323992">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="323979" relation="include">
        </childnode>
        <childnode refid="323963" relation="include">
        </childnode>
        <childnode refid="323970" relation="include">
        </childnode>
        <childnode refid="323960" relation="include">
        </childnode>
        <childnode refid="323993" relation="include">
        </childnode>
      </node>
      <node id="323985">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="323962" relation="include">
        </childnode>
        <childnode refid="323952" relation="include">
        </childnode>
        <childnode refid="323979" relation="include">
        </childnode>
        <childnode refid="323983" relation="include">
        </childnode>
        <childnode refid="323981" relation="include">
        </childnode>
        <childnode refid="323960" relation="include">
        </childnode>
        <childnode refid="323970" relation="include">
        </childnode>
        <childnode refid="323984" relation="include">
        </childnode>
        <childnode refid="323976" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="324006">
        <label>src/vt/vrt/collection/balance/baselb/load_sampler.cc</label>
        <link refid="load__sampler_8cc"/>
      </node>
      <node id="324007">
        <label>src/vt/vrt/collection/balance/greedylb/greedylb.h</label>
        <link refid="greedylb_8h"/>
        <childnode refid="324008" relation="include">
        </childnode>
        <childnode refid="324009" relation="include">
        </childnode>
      </node>
      <node id="324013">
        <label>src/vt/vrt/collection/balance/elm_stats.impl.h</label>
        <link refid="elm__stats_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324026">
        <label>src/vt/vrt/collection/collection_headers.h</label>
        <link refid="collection__headers_8h"/>
        <childnode refid="324027" relation="include">
        </childnode>
        <childnode refid="324028" relation="include">
        </childnode>
        <childnode refid="324029" relation="include">
        </childnode>
      </node>
      <node id="324031">
        <label>src/vt/vrt/collection/destroy/destroyable.impl.h</label>
        <link refid="destroyable_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324014">
        <label>src/vt/vrt/collection/manager.h</label>
        <link refid="vrt_2collection_2manager_8h"/>
        <childnode refid="324015" relation="include">
        </childnode>
        <childnode refid="324016" relation="include">
        </childnode>
        <childnode refid="324017" relation="include">
        </childnode>
        <childnode refid="324018" relation="include">
        </childnode>
        <childnode refid="324019" relation="include">
        </childnode>
        <childnode refid="324020" relation="include">
        </childnode>
        <childnode refid="324013" relation="include">
        </childnode>
        <childnode refid="324008" relation="include">
        </childnode>
        <childnode refid="324011" relation="include">
        </childnode>
        <childnode refid="324009" relation="include">
        </childnode>
        <childnode refid="324021" relation="include">
        </childnode>
        <childnode refid="324022" relation="include">
        </childnode>
        <childnode refid="324023" relation="include">
        </childnode>
        <childnode refid="324024" relation="include">
        </childnode>
        <childnode refid="324026" relation="include">
        </childnode>
        <childnode refid="324031" relation="include">
        </childnode>
        <childnode refid="324032" relation="include">
        </childnode>
        <childnode refid="324033" relation="include">
        </childnode>
        <childnode refid="324034" relation="include">
        </childnode>
        <childnode refid="324035" relation="include">
        </childnode>
        <childnode refid="324036" relation="include">
        </childnode>
        <childnode refid="324037" relation="include">
        </childnode>
        <childnode refid="324025" relation="include">
        </childnode>
        <childnode refid="324038" relation="include">
        </childnode>
        <childnode refid="324039" relation="include">
        </childnode>
        <childnode refid="324040" relation="include">
        </childnode>
        <childnode refid="324041" relation="include">
        </childnode>
      </node>
      <node id="324024">
        <label>src/vt/vrt/collection/collection_builder.impl.h</label>
        <link refid="collection__builder_8impl_8h"/>
        <childnode refid="324025" relation="include">
        </childnode>
      </node>
      <node id="324020">
        <label>src/vt/scheduler/scheduler.cc</label>
        <link refid="scheduler_8cc"/>
      </node>
      <node id="324027">
        <label>src/vt/runtime/runtime.cc</label>
        <link refid="runtime_8cc"/>
      </node>
      <node id="324016">
        <label>src/vt/context/runnable_context/lb_stats.impl.h</label>
        <link refid="lb__stats_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324039">
        <label>src/vt/vrt/collection/send/sendable.impl.h</label>
        <link refid="sendable_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324022">
        <label>src/vt/vrt/collection/balance/rotatelb/rotatelb.cc</label>
        <link refid="rotatelb_8cc"/>
      </node>
      <node id="324012">
        <label>src/vt/vrt/collection/balance/lb_invoke/lb_manager.h</label>
        <link refid="lb__manager_8h"/>
        <childnode refid="324003" relation="include">
        </childnode>
        <childnode refid="324013" relation="include">
        </childnode>
        <childnode refid="324009" relation="include">
        </childnode>
        <childnode refid="324037" relation="include">
        </childnode>
      </node>
      <node id="324050">
        <label>src/vt/vrt/collection/balance/lb_args_enum_converter.h</label>
        <link refid="lb__args__enum__converter_8h"/>
        <childnode refid="324008" relation="include">
        </childnode>
        <childnode refid="324046" relation="include">
        </childnode>
      </node>
      <node id="324018">
        <label>src/vt/pipe/callback/proxy_send/callback_proxy_send.impl.h</label>
        <link refid="callback__proxy__send_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324038">
        <label>src/vt/vrt/collection/reducable/reducable.impl.h</label>
        <link refid="reducable_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324034">
        <label>src/vt/vrt/collection/insert/insertable.impl.h</label>
        <link refid="insertable_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324025">
        <label>src/vt/vrt/collection/manager.impl.h</label>
        <link refid="vrt_2collection_2manager_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324028">
        <label>src/vt/runtime/runtime_get.cc</label>
        <link refid="runtime__get_8cc"/>
      </node>
      <node id="324008">
        <label>src/vt/vrt/collection/balance/greedylb/greedylb.cc</label>
        <link refid="greedylb_8cc"/>
      </node>
      <node id="324032">
        <label>src/vt/vrt/collection/dispatch/dispatch.impl.h</label>
        <link refid="src_2vt_2vrt_2collection_2dispatch_2dispatch_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324041">
        <label>src/vt/vrt/collection/types/migratable.cc</label>
        <link refid="migratable_8cc"/>
      </node>
      <node id="324005">
        <label>src/vt/vrt/collection/balance/baselb/load_sampler.h</label>
        <link refid="load__sampler_8h"/>
        <childnode refid="324006" relation="include">
        </childnode>
        <childnode refid="324007" relation="include">
        </childnode>
        <childnode refid="324010" relation="include">
        </childnode>
      </node>
      <node id="324003">
        <label>src/vt/vrt/collection/balance/baselb/baselb.cc</label>
        <link refid="baselb_8cc"/>
      </node>
      <node id="324047">
        <label>src/vt/vrt/collection/balance/temperedlb/temperedlb.h</label>
        <link refid="temperedlb_8h"/>
        <childnode refid="324009" relation="include">
        </childnode>
        <childnode refid="324046" relation="include">
        </childnode>
      </node>
      <node id="324033">
        <label>src/vt/vrt/collection/gettable/gettable.impl.h</label>
        <link refid="gettable_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324048">
        <label>src/vt/vrt/collection/balance/zoltanlb/zoltanlb.h</label>
        <link refid="zoltanlb_8h"/>
        <childnode refid="324009" relation="include">
        </childnode>
        <childnode refid="324049" relation="include">
        </childnode>
      </node>
      <node id="324042">
        <label>src/vt/vrt/collection/balance/randomlb/randomlb.h</label>
        <link refid="randomlb_8h"/>
        <childnode refid="324009" relation="include">
        </childnode>
        <childnode refid="324043" relation="include">
        </childnode>
      </node>
      <node id="324043">
        <label>src/vt/vrt/collection/balance/randomlb/randomlb.cc</label>
        <link refid="randomlb_8cc"/>
      </node>
      <node id="324049">
        <label>src/vt/vrt/collection/balance/zoltanlb/zoltanlb.cc</label>
        <link refid="zoltanlb_8cc"/>
      </node>
      <node id="324036">
        <label>src/vt/vrt/collection/invoke/invokable.impl.h</label>
        <link refid="invokable_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324030">
        <label>src/vt/vt.h</label>
        <link refid="vt_8h"/>
      </node>
      <node id="324023">
        <label>src/vt/vrt/collection/broadcast/broadcastable.impl.h</label>
        <link refid="broadcastable_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324002">
        <label>src/vt/runtime/runtime_banner.cc</label>
        <link refid="runtime__banner_8cc"/>
      </node>
      <node id="324045">
        <label>src/vt/vrt/collection/balance/statsmaplb/statsmaplb.cc</label>
        <link refid="statsmaplb_8cc"/>
      </node>
      <node id="324001">
        <label>src/vt/vrt/collection/balance/read_lb.h</label>
        <link refid="read__lb_8h"/>
        <childnode refid="324002" relation="include">
        </childnode>
        <childnode refid="324003" relation="include">
        </childnode>
        <childnode refid="324004" relation="include">
        </childnode>
        <childnode refid="324008" relation="include">
        </childnode>
        <childnode refid="324011" relation="include">
        </childnode>
        <childnode refid="324050" relation="include">
        </childnode>
        <childnode refid="324009" relation="include">
        </childnode>
        <childnode refid="324051" relation="include">
        </childnode>
      </node>
      <node id="324037">
        <label>src/vt/vrt/collection/manager.cc</label>
        <link refid="vrt_2collection_2manager_8cc"/>
      </node>
      <node id="324044">
        <label>src/vt/vrt/collection/balance/rotatelb/rotatelb.h</label>
        <link refid="rotatelb_8h"/>
        <childnode refid="324009" relation="include">
        </childnode>
        <childnode refid="324022" relation="include">
        </childnode>
      </node>
      <node id="324017">
        <label>src/vt/pipe/callback/proxy_bcast/callback_proxy_bcast.impl.h</label>
        <link refid="callback__proxy__bcast_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324015">
        <label>src/vt/context/runnable_context/lb_stats.cc</label>
        <link refid="lb__stats_8cc"/>
      </node>
      <node id="324051">
        <label>src/vt/vrt/collection/balance/read_lb.cc</label>
        <link refid="read__lb_8cc"/>
      </node>
      <node id="324040">
        <label>src/vt/vrt/collection/types/indexable.impl.h</label>
        <link refid="indexable_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324011">
        <label>src/vt/vrt/collection/balance/hierarchicallb/hierlb.cc</label>
        <link refid="hierlb_8cc"/>
      </node>
      <node id="324021">
        <label>src/vt/vrt/collection/balance/node_stats.cc</label>
        <link refid="node__stats_8cc"/>
      </node>
      <node id="324009">
        <label>src/vt/vrt/collection/balance/lb_invoke/lb_manager.cc</label>
        <link refid="lb__manager_8cc"/>
      </node>
      <node id="324010">
        <label>src/vt/vrt/collection/balance/hierarchicallb/hierlb.h</label>
        <link refid="hierlb_8h"/>
        <childnode refid="324011" relation="include">
        </childnode>
        <childnode refid="324009" relation="include">
        </childnode>
      </node>
      <node id="324004">
        <label>src/vt/vrt/collection/balance/baselb/baselb.h</label>
        <link refid="baselb_8h"/>
        <childnode refid="324003" relation="include">
        </childnode>
        <childnode refid="324005" relation="include">
        </childnode>
        <childnode refid="324012" relation="include">
        </childnode>
        <childnode refid="324042" relation="include">
        </childnode>
        <childnode refid="324044" relation="include">
        </childnode>
        <childnode refid="324045" relation="include">
        </childnode>
        <childnode refid="324046" relation="include">
        </childnode>
        <childnode refid="324047" relation="include">
        </childnode>
        <childnode refid="324048" relation="include">
        </childnode>
      </node>
      <node id="324029">
        <label>src/vt/transport.h</label>
        <link refid="transport_8h"/>
        <childnode refid="324030" relation="include">
        </childnode>
      </node>
      <node id="324046">
        <label>src/vt/vrt/collection/balance/temperedlb/temperedlb.cc</label>
        <link refid="temperedlb_8cc"/>
      </node>
      <node id="324035">
        <label>src/vt/vrt/collection/insert/modifyable.impl.h</label>
        <link refid="modifyable_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
      <node id="324019">
        <label>src/vt/rdmahandle/manager.collection.impl.h</label>
        <link refid="manager_8collection_8impl_8h"/>
        <childnode refid="324014" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter" prot="public">vt::vrt::collection::balance::Converter</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01double_01_4" prot="public">vt::vrt::collection::balance::Converter&lt; double &gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01bool_01_4" prot="public">vt::vrt::collection::balance::Converter&lt; bool &gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01int32__t_01_4" prot="public">vt::vrt::collection::balance::Converter&lt; int32_t &gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01std_1_1string_01_4" prot="public">vt::vrt::collection::balance::Converter&lt; std::string &gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry" prot="public">vt::vrt::collection::balance::SpecEntry</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec" prot="public">vt::vrt::collection::balance::ReadLBSpec</innerclass>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt">vt::vrt</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection">vt::vrt::collection</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection_1_1balance">vt::vrt::collection::balance</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_lb.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2021<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_VT_VRT_COLLECTION_BALANCE_READ_LB_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_VT_VRT_COLLECTION_BALANCE_READ_LB_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">vt/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lb__type_8h" kindref="compound">vt/vrt/collection/balance/lb_type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a012d139c89a14e56a85f32fd82e7c7d3" kindref="member">vrt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">collection<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">balance<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a72a5e0d9936ddf57f8e6c64e0e9fd123" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a72a5e0d9936ddf57f8e6c64e0e9fd123" kindref="member">SpecIndex</ref><sp/>=<sp/>int64_t;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="60" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter" kindref="compound">Converter</ref><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_1a46076033d0cf03ba76b5f50269322da4" kindref="member">convert</ref>(std::string<sp/>val,<sp/>T<sp/>default_);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="65" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01double_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter" kindref="compound">Converter</ref>&lt;double&gt;<sp/>{</highlight></codeline>
<codeline lineno="66" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01double_01_4_1ada5a90823d588341cae52777b5d0537c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01double_01_4_1ada5a90823d588341cae52777b5d0537c" kindref="member">convert</ref>(std::string<sp/>val,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>default_)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::stod(val);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="76" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01bool_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter" kindref="compound">Converter</ref>&lt;bool&gt;<sp/>{</highlight></codeline>
<codeline lineno="77" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01bool_01_4_1a37060c9cc732078e45d034bfe868b689" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01bool_01_4_1a37060c9cc732078e45d034bfe868b689" kindref="member">convert</ref>(std::string<sp/>val,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>default_)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>or<sp/>val<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>or<sp/>val<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>or<sp/>val<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal"><sp/>or<sp/>val<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="89" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01int32__t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter" kindref="compound">Converter</ref>&lt;int32_t&gt;<sp/>{</highlight></codeline>
<codeline lineno="90" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01int32__t_01_4_1a306f25d48360a46333f753caf0b43b91" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01int32__t_01_4_1a306f25d48360a46333f753caf0b43b91" kindref="member">convert</ref>(std::string<sp/>val,<sp/>int32_t<sp/>default_)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::stoi(val);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="100" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01std_1_1string_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter" kindref="compound">Converter</ref>&lt;<ref refid="namespacestd" kindref="compound">std</ref>::string&gt;<sp/>{</highlight></codeline>
<codeline lineno="101" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01std_1_1string_01_4_1ad43fb755f9c2df3190f9c86b0c74c84b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01std_1_1string_01_4_1ad43fb755f9c2df3190f9c86b0c74c84b" kindref="member">convert</ref>(std::string<sp/>val,<sp/>std::string<sp/>default_)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry" kindref="compound">SpecEntry</ref><sp/>{</highlight></codeline>
<codeline lineno="111" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a2ec68beff648a236f7f527dc5deeb4c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a2ec68beff648a236f7f527dc5deeb4c5" kindref="member">ParamMapType</ref><sp/>=<sp/>std::map&lt;std::string,<sp/>std::string&gt;;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a40db52d556685cb73056409096a4d4f7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a40db52d556685cb73056409096a4d4f7" kindref="member">SpecEntry</ref>(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a72a5e0d9936ddf57f8e6c64e0e9fd123" kindref="member">SpecIndex</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>in_idx,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>in_name,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a2ec68beff648a236f7f527dc5deeb4c5" kindref="member">ParamMapType</ref><sp/>in_params</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>)<sp/>:<sp/>idx_(in_idx),<sp/>lb_name_(in_name),<sp/>params_(in_params)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a665d82dc37723e5392d215973eb1e73b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a72a5e0d9936ddf57f8e6c64e0e9fd123" kindref="member">SpecIndex</ref><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a665d82dc37723e5392d215973eb1e73b" kindref="member">getIdx</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idx_;<sp/>}</highlight></codeline>
<codeline lineno="120" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a1a6b18669456c0d4c9c311c63fd912c8" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a1a6b18669456c0d4c9c311c63fd912c8" kindref="member">getName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lb_name_;<sp/>}</highlight></codeline>
<codeline lineno="121" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1acfc8e49ab1e8b1c10cd8b0330386476c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a2ec68beff648a236f7f527dc5deeb4c5" kindref="member">ParamMapType</ref><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1acfc8e49ab1e8b1c10cd8b0330386476c" kindref="member">getParams</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>params_;<sp/>}</highlight></codeline>
<codeline lineno="122" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a265df7d1bc8ac20e92c7799fd4973018" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5c" kindref="member">LBType</ref><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a265df7d1bc8ac20e92c7799fd4973018" kindref="member">getLB</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>elm<sp/>:<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1ab24424d5cc677e1c6dfe67d5e03efc70" kindref="member">get_lb_names</ref>())<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lb_name_<sp/>==<sp/>elm.second)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elm.first;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5cad12268b59a4f1098aee001f9a1750020" kindref="member">LBType::NoLB</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="132" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1ae5c35506e15c2123029d071a284b9367" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1ae5c35506e15c2123029d071a284b9367" kindref="member">getOrDefault</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>key,<sp/>T<sp/>default_)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>params_.find(key);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/>params_.end())<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_1a46076033d0cf03ba76b5f50269322da4" kindref="member">Converter&lt;T&gt;::convert</ref>(val,<sp/>default_);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a86ea05b64615f7be99e8db3baf195aae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a86ea05b64615f7be99e8db3baf195aae" kindref="member">checkAllowedKeys</ref>(std::vector&lt;std::string&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>allowed)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>p<sp/>:<sp/>params_)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>key<sp/>:<sp/>allowed)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>==<sp/>p.first)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>found)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>allowed_str;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>key<sp/>:<sp/>allowed)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed_str<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;\&quot;{}\&quot;;<sp/>&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>fmt::format(</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LB<sp/>does<sp/>not<sp/>support<sp/>key={},<sp/>allowed<sp/>keys:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>p.first,<sp/>allowed_str</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hard__error_8h_1afc4cdafa6d3b99f94c26a5d4290999a9" kindref="member">vtAbort</ref>(err);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1ab76105257ea98781af7e039dba9cb63b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a72a5e0d9936ddf57f8e6c64e0e9fd123" kindref="member">SpecIndex</ref><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1ab76105257ea98781af7e039dba9cb63b" kindref="member">idx_</ref>;</highlight></codeline>
<codeline lineno="165" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1ad163d019f9d92288f78026d95a55e175" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1ad163d019f9d92288f78026d95a55e175" kindref="member">lb_name_</ref>;</highlight></codeline>
<codeline lineno="166" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1ac7737db80a6be7a5da8152aad45e93b9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1a2ec68beff648a236f7f527dc5deeb4c5" kindref="member">ParamMapType</ref><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry_1ac7737db80a6be7a5da8152aad45e93b9" kindref="member">params_</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>Reads<sp/>the<sp/>following<sp/>file<sp/>format<sp/>for<sp/>LB<sp/>spec---example:</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>%10<sp/>TemperedLB<sp/>c=1<sp/>k=5<sp/>f=2<sp/>i=10</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>0<sp/>HierarchicalLB<sp/>min=0.9<sp/>max=1.1<sp/>auto=false</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>%<sp/>5<sp/>GreedyLB<sp/>min=1.0</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>120<sp/>GreedyLB<sp/>c=0<sp/>k=2<sp/>f=3<sp/>i=3</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec" kindref="compound">ReadLBSpec</ref><sp/>{</highlight></codeline>
<codeline lineno="180" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1aa73c3611c615832402eeeed6fb7b8049" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1aa73c3611c615832402eeeed6fb7b8049" kindref="member">SpecMapType</ref><sp/><sp/>=<sp/>std::map&lt;SpecIndex,SpecEntry&gt;;</highlight></codeline>
<codeline lineno="181" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a05e30b32f0ca5df2cb160514fa0eeb41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a05e30b32f0ca5df2cb160514fa0eeb41" kindref="member">ParamMapType</ref><sp/>=<sp/>std::map&lt;std::string,<sp/>std::string&gt;;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>openSpec(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1ab7a988ed27206ee728474ad200c47291" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a72a5e0d9936ddf57f8e6c64e0e9fd123" kindref="member">SpecIndex</ref><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1ab7a988ed27206ee728474ad200c47291" kindref="member">numEntries</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spec_mod_.size()<sp/>+<sp/>spec_exact_.size();<sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry" kindref="compound">SpecEntry</ref>*<sp/>entry(<ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a72a5e0d9936ddf57f8e6c64e0e9fd123" kindref="member">SpecIndex</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>idx);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5c" kindref="member">LBType</ref><sp/>getLB(<ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a72a5e0d9936ddf57f8e6c64e0e9fd123" kindref="member">SpecIndex</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>idx);</highlight></codeline>
<codeline lineno="200" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a8fbbc8343a79844abdfd16536ff4ea2b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1aa73c3611c615832402eeeed6fb7b8049" kindref="member">SpecMapType</ref><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a8fbbc8343a79844abdfd16536ff4ea2b" kindref="member">getModEntries</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spec_mod_;<sp/>};</highlight></codeline>
<codeline lineno="201" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a9a982a88b574472a21a3e574cc6c27ba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1aa73c3611c615832402eeeed6fb7b8049" kindref="member">SpecMapType</ref><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a9a982a88b574472a21a3e574cc6c27ba" kindref="member">getExactEntries</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spec_exact_;<sp/>};</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a05e30b32f0ca5df2cb160514fa0eeb41" kindref="member">ParamMapType</ref><sp/>parseParams(std::vector&lt;std::string&gt;<sp/>params);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry" kindref="compound">SpecEntry</ref><sp/>makeSpecFromParams(std::string<sp/>params);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>toString();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readFile(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1af5c8b5f02b64bb47b59351d6facf465e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1af5c8b5f02b64bb47b59351d6facf465e" kindref="member">read_complete_</ref>;</highlight></codeline>
<codeline lineno="211" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1af801f1e2bc280248d841f74d6afe012f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1af801f1e2bc280248d841f74d6afe012f" kindref="member">open_filename_</ref>;</highlight></codeline>
<codeline lineno="212" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a72033347ba73a23dd3494ead118e44d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1aa73c3611c615832402eeeed6fb7b8049" kindref="member">SpecMapType</ref><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a72033347ba73a23dd3494ead118e44d1" kindref="member">spec_mod_</ref>;</highlight></codeline>
<codeline lineno="213" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a40226a2163e4cc03bc48f766df0bb78d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1aa73c3611c615832402eeeed6fb7b8049" kindref="member">SpecMapType</ref><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a40226a2163e4cc03bc48f766df0bb78d" kindref="member">spec_exact_</ref>;</highlight></codeline>
<codeline lineno="214" refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a53d7c8950db9d6b4d8b7d895d0a264d0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;SpecIndex&gt;<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a53d7c8950db9d6b4d8b7d895d0a264d0" kindref="member">spec_prec_</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">}}}}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::vrt::collection::balance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_VT_VRT_COLLECTION_BALANCE_READ_LB_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/vt/vrt/collection/balance/read_lb.h"/>
  </compounddef>
</doxygen>
