<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1group_1_1_group_msg" kind="struct" language="C++" prot="public">
    <compoundname>vt::group::GroupMsg</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MsgT</basecompoundref>
    <includes refid="group__msg_8h" local="no">group_msg.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>MsgT</declname>
        <defname>MsgT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structvt_1_1group_1_1_group_msg_1a490c257a68f857c6833804c065cb5d4f" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref></type>
        <definition>GroupType vt::group::GroupMsg&lt; MsgT &gt;::group_</definition>
        <argsstring></argsstring>
        <name>group_</name>
        <initializer>= no_group</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="83" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1_group_msg_1a7914cacc92ff971aca0b9b2dc3cb86a3" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1group_1a73f2624ddeb535b39a08b6524f26b244" kindref="member">RemoteOperationIDType</ref></type>
        <definition>RemoteOperationIDType vt::group::GroupMsg&lt; MsgT &gt;::op_id_</definition>
        <argsstring></argsstring>
        <name>op_id_</name>
        <initializer>= no_op_id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="84" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1_group_msg_1a79b75c7a2a3e2788132bd494148e5952" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::group::GroupMsg&lt; MsgT &gt;::root_</definition>
        <argsstring></argsstring>
        <name>root_</name>
        <initializer>= uninitialized_destination</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="85" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1_group_msg_1a42bcb186fa2675b7a16411a959dd936e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::group::GroupMsg&lt; MsgT &gt;::default_group_</definition>
        <argsstring></argsstring>
        <name>default_group_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="86" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1group_1_1_group_msg_1a219a5c51a93a60b1ace49a17503fdfc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::group::GroupMsg&lt; MsgT &gt;::GroupMsg</definition>
        <argsstring>()=default</argsstring>
        <name>GroupMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_msg_1af022390a490fffce73208c94efb4545b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::group::GroupMsg&lt; MsgT &gt;::GroupMsg</definition>
        <argsstring>(GroupType const &amp;in_group, RemoteOperationIDType const &amp;in_op)</argsstring>
        <name>GroupMsg</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>in_group</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1group_1a73f2624ddeb535b39a08b6524f26b244" kindref="member">RemoteOperationIDType</ref> const &amp;</type>
          <declname>in_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="62" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_msg_1a9ce944b6890d16ade1cb58d3f326c3b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::group::GroupMsg&lt; MsgT &gt;::GroupMsg</definition>
        <argsstring>(GroupType const &amp;in_group, RemoteOperationIDType const &amp;in_op, NodeType const &amp;in_root, bool const &amp;in_default_group)</argsstring>
        <name>GroupMsg</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>in_group</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1group_1a73f2624ddeb535b39a08b6524f26b244" kindref="member">RemoteOperationIDType</ref> const &amp;</type>
          <declname>in_op</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>in_root</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>in_default_group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="66" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_msg_1ad0879ce5e25a0dae015bef8eae74f507" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref></type>
        <definition>GroupType vt::group::GroupMsg&lt; MsgT &gt;::getGroup</definition>
        <argsstring>() const</argsstring>
        <name>getGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="73" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_msg_1a5dd1bb7ec287e2ff5d93537a6652c89e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1group_1a73f2624ddeb535b39a08b6524f26b244" kindref="member">RemoteOperationIDType</ref></type>
        <definition>RemoteOperationIDType vt::group::GroupMsg&lt; MsgT &gt;::getOpID</definition>
        <argsstring>() const</argsstring>
        <name>getOpID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="74" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_msg_1ad37e50e1a83cf6dd1101a34b36818707" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::group::GroupMsg&lt; MsgT &gt;::getRoot</definition>
        <argsstring>() const</argsstring>
        <name>getRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="75" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_msg_1aedab140ac671d3a1830bafd787d8f780" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::group::GroupMsg&lt; MsgT &gt;::isDefault</definition>
        <argsstring>() const</argsstring>
        <name>isDefault</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="76" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_msg_1a69b6ab8f196f0e84ffa52a2c71ddbe3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupMsg&lt; MsgT &gt;::setGroup</definition>
        <argsstring>(GroupType const &amp;group)</argsstring>
        <name>setGroup</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="78" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_msg_1a73a11643f98e6407ca3045ce36191955" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupMsg&lt; MsgT &gt;::setOpID</definition>
        <argsstring>(RemoteOperationIDType const &amp;op)</argsstring>
        <name>setOpID</name>
        <param>
          <type><ref refid="namespacevt_1_1group_1a73f2624ddeb535b39a08b6524f26b244" kindref="member">RemoteOperationIDType</ref> const &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="79" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_msg_1a057bd3c887231efe7824679ad9cb6e8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupMsg&lt; MsgT &gt;::setRoot</definition>
        <argsstring>(NodeType const &amp;root)</argsstring>
        <name>setRoot</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/msg/group_msg.h" line="80" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="80" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1525">
        <label>MsgT</label>
      </node>
      <node id="1524">
        <label>vt::group::GroupMsg&lt; MsgT &gt;</label>
        <link refid="structvt_1_1group_1_1_group_msg"/>
        <childnode refid="1525" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1527">
        <label>MsgT</label>
      </node>
      <node id="1526">
        <label>vt::group::GroupMsg&lt; MsgT &gt;</label>
        <link refid="structvt_1_1group_1_1_group_msg"/>
        <childnode refid="1527" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/group/msg/group_msg.h" line="59" column="1" bodyfile="src/vt/group/msg/group_msg.h" bodystart="59" bodyend="87"/>
    <listofallmembers>
      <member refid="structvt_1_1group_1_1_group_msg_1a42bcb186fa2675b7a16411a959dd936e" prot="protected" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>default_group_</name></member>
      <member refid="structvt_1_1group_1_1_group_msg_1ad0879ce5e25a0dae015bef8eae74f507" prot="public" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>getGroup</name></member>
      <member refid="structvt_1_1group_1_1_group_msg_1a5dd1bb7ec287e2ff5d93537a6652c89e" prot="public" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>getOpID</name></member>
      <member refid="structvt_1_1group_1_1_group_msg_1ad37e50e1a83cf6dd1101a34b36818707" prot="public" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>getRoot</name></member>
      <member refid="structvt_1_1group_1_1_group_msg_1a490c257a68f857c6833804c065cb5d4f" prot="protected" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>group_</name></member>
      <member refid="structvt_1_1group_1_1_group_msg_1a219a5c51a93a60b1ace49a17503fdfc0" prot="public" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>GroupMsg</name></member>
      <member refid="structvt_1_1group_1_1_group_msg_1af022390a490fffce73208c94efb4545b" prot="public" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>GroupMsg</name></member>
      <member refid="structvt_1_1group_1_1_group_msg_1a9ce944b6890d16ade1cb58d3f326c3b2" prot="public" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>GroupMsg</name></member>
      <member refid="structvt_1_1group_1_1_group_msg_1aedab140ac671d3a1830bafd787d8f780" prot="public" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>isDefault</name></member>
      <member refid="structvt_1_1group_1_1_group_msg_1a7914cacc92ff971aca0b9b2dc3cb86a3" prot="protected" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>op_id_</name></member>
      <member refid="structvt_1_1group_1_1_group_msg_1a79b75c7a2a3e2788132bd494148e5952" prot="protected" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>root_</name></member>
      <member refid="structvt_1_1group_1_1_group_msg_1a69b6ab8f196f0e84ffa52a2c71ddbe3f" prot="public" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>setGroup</name></member>
      <member refid="structvt_1_1group_1_1_group_msg_1a73a11643f98e6407ca3045ce36191955" prot="public" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>setOpID</name></member>
      <member refid="structvt_1_1group_1_1_group_msg_1a057bd3c887231efe7824679ad9cb6e8d" prot="public" virt="non-virtual"><scope>vt::group::GroupMsg</scope><name>setRoot</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
