<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1group_1_1_info_base" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>vt::group::InfoBase</compoundname>
    <derivedcompoundref refid="structvt_1_1group_1_1_info_coll" prot="public" virt="virtual">vt::group::InfoColl</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1group_1_1_info_rooted" prot="public" virt="virtual">vt::group::InfoRooted</derivedcompoundref>
    <includes refid="group__info__base_8h" local="no">group_info_base.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1group_1_1_info_base_1a0924de8df3a2ec72ebdd499ad8a28abf" prot="public" static="no">
        <type>int32_t</type>
        <definition>using vt::group::InfoBase::WaitCountType =  int32_t</definition>
        <argsstring></argsstring>
        <name>WaitCountType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/base/group_info_base.h" line="59" column="1" bodyfile="src/vt/group/base/group_info_base.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1_info_base_1a96e01b6097ed7b2bc299027d0a7a1b1e" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1tree_1_1_tree" kindref="compound">collective::tree::Tree</ref></type>
        <definition>using vt::group::InfoBase::TreeType =  collective::tree::Tree</definition>
        <argsstring></argsstring>
        <name>TreeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/base/group_info_base.h" line="60" column="1" bodyfile="src/vt/group/base/group_info_base.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1_info_base_1af1111ac71e1ee7a009f00ebece27c3a3" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1group_1_1_info_base_1a96e01b6097ed7b2bc299027d0a7a1b1e" kindref="member">TreeType</ref> &gt;</type>
        <definition>using vt::group::InfoBase::TreePtrType =  std::unique_ptr&lt;TreeType&gt;</definition>
        <argsstring></argsstring>
        <name>TreePtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/base/group_info_base.h" line="61" column="1" bodyfile="src/vt/group/base/group_info_base.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1group_1_1_info_base_1afbb8a9919c924c50be2b99e2dc7cbca2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref></type>
        <definition>virtual GroupType vt::group::InfoBase::getGroupID</definition>
        <argsstring>() const =0</argsstring>
        <name>getGroupID</name>
        <reimplementedby refid="structvt_1_1group_1_1_info_1a09fcb16e74a5ae3043859ae70b5b57a9">getGroupID</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/base/group_info_base.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_info_base_1a643adfea212db8b896b201832bed0445" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
        <definition>virtual ActionType vt::group::InfoBase::getAction</definition>
        <argsstring>() const =0</argsstring>
        <name>getAction</name>
        <reimplementedby refid="structvt_1_1group_1_1_info_1a399b8266c01f53484469b3b14cdc8640">getAction</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/base/group_info_base.h" line="65" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2184">
        <label>vt::group::Info</label>
        <link refid="structvt_1_1group_1_1_info"/>
        <childnode refid="2183" relation="public-inheritance">
        </childnode>
        <childnode refid="2185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2182">
        <label>vt::group::InfoBase</label>
        <link refid="structvt_1_1group_1_1_info_base"/>
      </node>
      <node id="2185">
        <label>vt::group::InfoRooted</label>
        <link refid="structvt_1_1group_1_1_info_rooted"/>
        <childnode refid="2182" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2183">
        <label>vt::group::InfoColl</label>
        <link refid="structvt_1_1group_1_1_info_coll"/>
        <childnode refid="2182" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/vt/group/base/group_info_base.h" line="58" column="1" bodyfile="src/vt/group/base/group_info_base.h" bodystart="58" bodyend="66"/>
    <listofallmembers>
      <member refid="structvt_1_1group_1_1_info_base_1a643adfea212db8b896b201832bed0445" prot="protected" virt="pure-virtual"><scope>vt::group::InfoBase</scope><name>getAction</name></member>
      <member refid="structvt_1_1group_1_1_info_base_1afbb8a9919c924c50be2b99e2dc7cbca2" prot="protected" virt="pure-virtual"><scope>vt::group::InfoBase</scope><name>getGroupID</name></member>
      <member refid="structvt_1_1group_1_1_info_base_1af1111ac71e1ee7a009f00ebece27c3a3" prot="public" virt="non-virtual"><scope>vt::group::InfoBase</scope><name>TreePtrType</name></member>
      <member refid="structvt_1_1group_1_1_info_base_1a96e01b6097ed7b2bc299027d0a7a1b1e" prot="public" virt="non-virtual"><scope>vt::group::InfoBase</scope><name>TreeType</name></member>
      <member refid="structvt_1_1group_1_1_info_base_1a0924de8df3a2ec72ebdd499ad8a28abf" prot="public" virt="non-virtual"><scope>vt::group::InfoBase</scope><name>WaitCountType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
