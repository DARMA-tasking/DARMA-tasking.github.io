<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::balance::LBDataHolder</compoundname>
    <includes refid="lb__data__holder_8h" local="no">lb_data_holder.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a5339303db2e1ce964d783a53fd74e6b1" kindref="member">LoadMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, LoadMapType&gt; vt::vrt::collection::balance::LBDataHolder::node_data_</definition>
        <argsstring></argsstring>
        <name>node_data_</name>
        <briefdescription>
<para>Node timings for each local object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="129" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a01ee1fb0ae2da1d2ab7fdca3be9ae351" kindref="member">CommMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, CommMapType&gt; vt::vrt::collection::balance::LBDataHolder::node_comm_</definition>
        <argsstring></argsstring>
        <name>node_comm_</name>
        <briefdescription>
<para>Node communication graph for each local object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="131" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a733c6d7b9fb2bb0c67588eed9b9cd5fc" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::unordered_map&lt; <ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a01ee1fb0ae2da1d2ab7fdca3be9ae351" kindref="member">CommMapType</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, std::unordered_map&lt;SubphaseType, CommMapType&gt; &gt; vt::vrt::collection::balance::LBDataHolder::node_subphase_comm_</definition>
        <argsstring></argsstring>
        <name>node_subphase_comm_</name>
        <briefdescription>
<para>Node communication graph for each subphase. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="133" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a38dc8aada18756357212f4229ea363da" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>, std::shared_ptr&lt; nlohmann::json &gt; &gt; &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, std::unordered_map&lt; ElementIDStruct, std::shared_ptr&lt;nlohmann::json&gt; &gt; &gt; vt::vrt::collection::balance::LBDataHolder::user_defined_json_</definition>
        <argsstring></argsstring>
        <name>user_defined_json_</name>
        <briefdescription>
<para>User-defined data from each phase for JSON output. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="137" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aa4b11a094d2f858d29e4a91d61942ddf" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::shared_ptr&lt; nlohmann::json &gt; &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, std::shared_ptr&lt;nlohmann::json&gt; &gt; vt::vrt::collection::balance::LBDataHolder::user_per_phase_json_</definition>
        <argsstring></argsstring>
        <name>user_per_phase_json_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="139" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ad5b8a5a6093c4edd34a10069551c1d19" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1acf152c668ed9e2e9c6b29784181d2435" kindref="member">DataMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, DataMapType&gt; vt::vrt::collection::balance::LBDataHolder::user_defined_lb_info_</definition>
        <argsstring></argsstring>
        <name>user_defined_lb_info_</name>
        <briefdescription>
<para>User-defined data from each phase for LB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="141" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>, std::tuple&lt; <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref>, std::vector&lt; uint64_t &gt; &gt; &gt;</type>
        <definition>std::unordered_map&lt;ElementIDStruct, std::tuple&lt;VirtualProxyType, std::vector&lt;uint64_t&gt; &gt; &gt; vt::vrt::collection::balance::LBDataHolder::node_idx_</definition>
        <argsstring></argsstring>
        <name>node_idx_</name>
        <briefdescription>
<para>Node indices for each ID along with the proxy ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="143" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ab862d2f1b884256fc88634757f37bb80" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>, <ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDStruct, ObjGroupProxyType&gt; vt::vrt::collection::balance::LBDataHolder::node_objgroup_</definition>
        <argsstring></argsstring>
        <name>node_objgroup_</name>
        <briefdescription>
<para>Map from id to objgroup proxy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="145" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ac7d4f40440b458c101af292dd3357558" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
        <definition>PhaseType vt::vrt::collection::balance::LBDataHolder::count_</definition>
        <argsstring></argsstring>
        <name>count_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="147" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a66a5410c689d1515c9462495d3225a79" prot="public" static="no" mutable="no">
        <type>std::set&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref> &gt;</type>
        <definition>std::set&lt;PhaseType&gt; vt::vrt::collection::balance::LBDataHolder::skipped_phases_</definition>
        <argsstring></argsstring>
        <name>skipped_phases_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="149" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a190018ee0726acb12d7d416476de5bfd" prot="public" static="no" mutable="no">
        <type>std::set&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref> &gt;</type>
        <definition>std::set&lt;PhaseType&gt; vt::vrt::collection::balance::LBDataHolder::identical_phases_</definition>
        <argsstring></argsstring>
        <name>identical_phases_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="151" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aa1785b744e5b844588f9e8038aa2ef1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::balance::LBDataHolder::LBDataHolder</definition>
        <argsstring>()=default</argsstring>
        <name>LBDataHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a0bf21f167ccc736cd1f763aceda3a90d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::balance::LBDataHolder::LBDataHolder</definition>
        <argsstring>(nlohmann::json const &amp;j)</argsstring>
        <name>LBDataHolder</name>
        <param>
          <type>nlohmann::json const &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Create <computeroutput><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder" kindref="compound">LBDataHolder</ref></computeroutput> from input JSON. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">j</parametername>
</parameternamelist>
<parameterdescription>
<para>the json that contains the LB data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="74" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="232" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ae7701331d40846773d0dc359621fab25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::balance::LBDataHolder::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="77" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="77" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aeea29fc72556da9038290ef94fb01bc9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; nlohmann::json &gt;</type>
        <definition>std::unique_ptr&lt; nlohmann::json &gt; vt::vrt::collection::balance::LBDataHolder::toJson</definition>
        <argsstring>(PhaseType phase) const</argsstring>
        <name>toJson</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Output a phase&apos;s LB data to JSON. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the json data structure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="97" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="128" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aff15ecfd3ffecaa3f6754621c496fc8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; nlohmann::json &gt;</type>
        <definition>std::unique_ptr&lt; nlohmann::json &gt; vt::vrt::collection::balance::LBDataHolder::metadataToJson</definition>
        <argsstring>() const</argsstring>
        <name>metadataToJson</name>
        <briefdescription>
<para>Output a LB phase&apos;s metdadata to JSON. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the json data structure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="104" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="71" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a77ed15a18bb662403a65fa8fe4d4d6dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::LBDataHolder::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Clear all LB data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="109" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="447" bodyend="455"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::LBDataHolder::outputEntity</definition>
        <argsstring>(nlohmann::json &amp;j, ElementIDStruct const &amp;elm_id) const</argsstring>
        <name>outputEntity</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref> const &amp;</type>
          <declname>elm_id</declname>
        </param>
        <briefdescription>
<para>Output an entity to json. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">j</parametername>
</parameternamelist>
<parameterdescription>
<para>the json </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elm_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the element to output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="118" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="51" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a5cd0145d09eb1b0a1bdf6b5b6853267d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::LBDataHolder::readMetadata</definition>
        <argsstring>(nlohmann::json const &amp;j)</argsstring>
        <name>readMetadata</name>
        <param>
          <type>nlohmann::json const &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Read the LB phase&apos;s metadata. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">j</parametername>
</parameternamelist>
<parameterdescription>
<para>the json </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="125" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="403" bodyend="445"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Data structure that holds LB data for a set of phases. Can output them as JSON. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="66" column="1" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="66" bodyend="152"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a77ed15a18bb662403a65fa8fe4d4d6dc" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>clear</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ac7d4f40440b458c101af292dd3357558" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>count_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a190018ee0726acb12d7d416476de5bfd" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>identical_phases_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aa1785b744e5b844588f9e8038aa2ef1e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>LBDataHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a0bf21f167ccc736cd1f763aceda3a90d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>LBDataHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aff15ecfd3ffecaa3f6754621c496fc8c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>metadataToJson</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>node_comm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>node_data_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>node_idx_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ab862d2f1b884256fc88634757f37bb80" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>node_objgroup_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a733c6d7b9fb2bb0c67588eed9b9cd5fc" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>node_subphase_comm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>outputEntity</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a5cd0145d09eb1b0a1bdf6b5b6853267d" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>readMetadata</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ae7701331d40846773d0dc359621fab25" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a66a5410c689d1515c9462495d3225a79" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>skipped_phases_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aeea29fc72556da9038290ef94fb01bc9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>toJson</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a38dc8aada18756357212f4229ea363da" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>user_defined_json_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ad5b8a5a6093c4edd34a10069551c1d19" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>user_defined_lb_info_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aa4b11a094d2f858d29e4a91d61942ddf" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>user_per_phase_json_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
