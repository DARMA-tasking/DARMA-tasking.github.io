<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::balance::LBDataHolder</compoundname>
    <includes refid="lb__data__holder_8h" local="no">lb_data_holder.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a59ffb1059d0583e704c5b7cb5c3baefd" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::vrt::collection::balance::LBDataHolder::this_node_</definition>
        <argsstring></argsstring>
        <name>this_node_</name>
        <initializer>= vt::uninitialized_destination</initializer>
        <briefdescription>
<para>The current node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="183" column="12" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a09eb4cd8fb13f5e64250a538646daf77" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1abf9eea0f4c24e41036ab844025e7d4c8" kindref="member">ElmUserDataType</ref></type>
        <definition>ElmUserDataType vt::vrt::collection::balance::LBDataHolder::rank_attributes_</definition>
        <argsstring></argsstring>
        <name>rank_attributes_</name>
        <briefdescription>
<para>Node attributes for the current rank. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="185" column="19" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a5339303db2e1ce964d783a53fd74e6b1" kindref="member">LoadMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, LoadMapType&gt; vt::vrt::collection::balance::LBDataHolder::node_data_</definition>
        <argsstring></argsstring>
        <name>node_data_</name>
        <briefdescription>
<para>Node timings for each local object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="187" column="22" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a01ee1fb0ae2da1d2ab7fdca3be9ae351" kindref="member">CommMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, CommMapType&gt; vt::vrt::collection::balance::LBDataHolder::node_comm_</definition>
        <argsstring></argsstring>
        <name>node_comm_</name>
        <briefdescription>
<para>Node communication graph for each local object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="189" column="22" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a733c6d7b9fb2bb0c67588eed9b9cd5fc" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::unordered_map&lt; <ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a01ee1fb0ae2da1d2ab7fdca3be9ae351" kindref="member">CommMapType</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, std::unordered_map&lt;SubphaseType, CommMapType&gt; &gt; vt::vrt::collection::balance::LBDataHolder::node_subphase_comm_</definition>
        <argsstring></argsstring>
        <name>node_subphase_comm_</name>
        <briefdescription>
<para>Node communication graph for each subphase. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="191" column="22" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a38dc8aada18756357212f4229ea363da" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>, std::shared_ptr&lt; nlohmann::json &gt; &gt; &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, std::unordered_map&lt; ElementIDStruct, std::shared_ptr&lt;nlohmann::json&gt; &gt; &gt; vt::vrt::collection::balance::LBDataHolder::user_defined_json_</definition>
        <argsstring></argsstring>
        <name>user_defined_json_</name>
        <briefdescription>
<para>User-defined data from each phase for JSON output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="195" column="2" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aa4b11a094d2f858d29e4a91d61942ddf" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::shared_ptr&lt; nlohmann::json &gt; &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, std::shared_ptr&lt;nlohmann::json&gt; &gt; vt::vrt::collection::balance::LBDataHolder::user_per_phase_json_</definition>
        <argsstring></argsstring>
        <name>user_per_phase_json_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="197" column="22" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ad5b8a5a6093c4edd34a10069551c1d19" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1acf152c668ed9e2e9c6b29784181d2435" kindref="member">DataMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, DataMapType&gt; vt::vrt::collection::balance::LBDataHolder::user_defined_lb_info_</definition>
        <argsstring></argsstring>
        <name>user_defined_lb_info_</name>
        <briefdescription>
<para>User-defined data from each phase for LB. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="199" column="22" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a24fff50ee98c5fc97ea1e3b6155fea9e" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1acf152c668ed9e2e9c6b29784181d2435" kindref="member">DataMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, DataMapType&gt; vt::vrt::collection::balance::LBDataHolder::node_user_attributes_</definition>
        <argsstring></argsstring>
        <name>node_user_attributes_</name>
        <briefdescription>
<para>User-defined attributes from each phase. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="201" column="22" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>, std::tuple&lt; <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref>, std::vector&lt; uint64_t &gt; &gt; &gt;</type>
        <definition>std::unordered_map&lt;ElementIDStruct, std::tuple&lt;VirtualProxyType, std::vector&lt;uint64_t&gt; &gt; &gt; vt::vrt::collection::balance::LBDataHolder::node_idx_</definition>
        <argsstring></argsstring>
        <name>node_idx_</name>
        <briefdescription>
<para>Node indices for each ID along with the proxy ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="203" column="22" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ab862d2f1b884256fc88634757f37bb80" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>, <ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDStruct, ObjGroupProxyType&gt; vt::vrt::collection::balance::LBDataHolder::node_objgroup_</definition>
        <argsstring></argsstring>
        <name>node_objgroup_</name>
        <briefdescription>
<para>Map from id to objgroup proxy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="205" column="22" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a66a5410c689d1515c9462495d3225a79" prot="public" static="no" mutable="no">
        <type>std::set&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref> &gt;</type>
        <definition>std::set&lt;PhaseType&gt; vt::vrt::collection::balance::LBDataHolder::skipped_phases_</definition>
        <argsstring></argsstring>
        <name>skipped_phases_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="207" column="12" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a190018ee0726acb12d7d416476de5bfd" prot="public" static="no" mutable="no">
        <type>std::set&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref> &gt;</type>
        <definition>std::set&lt;PhaseType&gt; vt::vrt::collection::balance::LBDataHolder::identical_phases_</definition>
        <argsstring></argsstring>
        <name>identical_phases_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="209" column="12" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aa1785b744e5b844588f9e8038aa2ef1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::balance::LBDataHolder::LBDataHolder</definition>
        <argsstring>()=default</argsstring>
        <name>LBDataHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="68" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a0bf21f167ccc736cd1f763aceda3a90d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::balance::LBDataHolder::LBDataHolder</definition>
        <argsstring>(nlohmann::json const &amp;j)</argsstring>
        <name>LBDataHolder</name>
        <param>
          <type>nlohmann::json const &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Create <computeroutput><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder" kindref="compound">LBDataHolder</ref></computeroutput> from input JSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">j</parametername>
</parameternamelist>
<parameterdescription>
<para>the json that contains the LB data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="75" column="3" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="429" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ae7701331d40846773d0dc359621fab25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::balance::LBDataHolder::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="78" column="8" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="78" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aeea29fc72556da9038290ef94fb01bc9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; nlohmann::json &gt;</type>
        <definition>std::unique_ptr&lt; nlohmann::json &gt; vt::vrt::collection::balance::LBDataHolder::toJson</definition>
        <argsstring>(PhaseType phase) const</argsstring>
        <name>toJson</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Output a phase&apos;s LB data to JSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the json data structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="99" column="19" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="201" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aff15ecfd3ffecaa3f6754621c496fc8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; nlohmann::json &gt;</type>
        <definition>std::unique_ptr&lt; nlohmann::json &gt; vt::vrt::collection::balance::LBDataHolder::metadataToJson</definition>
        <argsstring>() const</argsstring>
        <name>metadataToJson</name>
        <briefdescription>
<para>Output a LB phase&apos;s metadata to JSON. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the json data structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="126" column="19" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="116" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a92eb060e578a7fb8c317d9184a7236db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; nlohmann::json &gt;</type>
        <definition>std::unique_ptr&lt; nlohmann::json &gt; vt::vrt::collection::balance::LBDataHolder::rankAttributesToJson</definition>
        <argsstring>() const</argsstring>
        <name>rankAttributesToJson</name>
        <briefdescription>
<para>Output a LB rank attributes metadata to JSON. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the json data structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="133" column="19" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="172" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a77ed15a18bb662403a65fa8fe4d4d6dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::LBDataHolder::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Clear all LB data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="138" column="8" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="687" bodyend="694"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::LBDataHolder::outputEntity</definition>
        <argsstring>(nlohmann::json &amp;j, ElementIDStruct const &amp;elm_id) const</argsstring>
        <name>outputEntity</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref> const &amp;</type>
          <declname>elm_id</declname>
        </param>
        <briefdescription>
<para>Output an entity to json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">j</parametername>
</parameternamelist>
<parameterdescription>
<para>the json </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elm_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the element to output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="147" column="8" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="96" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a0299b1703a83e9858d4514ce7d500f16" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::LBDataHolder::addInitialTask</definition>
        <argsstring>(nlohmann::json &amp;j, std::size_t n) const</argsstring>
        <name>addInitialTask</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="149" column="8" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="192" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a369e6e3c856e6ee5545b72510b762672" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
        <definition>ElementIDStruct vt::vrt::collection::balance::LBDataHolder::getElmFromCommObject_</definition>
        <argsstring>(nlohmann::json const &amp;field) const</argsstring>
        <name>getElmFromCommObject_</name>
        <param>
          <type>nlohmann::json const &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Create an ElementIDStruct for the communication object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">field</parametername>
</parameternamelist>
<parameterdescription>
<para>the communication field for the desired object e.g. communications[&quot;to&quot;] or communications[&quot;from&quot;] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="172" column="19" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="75" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a5cd0145d09eb1b0a1bdf6b5b6853267d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::LBDataHolder::readMetadata</definition>
        <argsstring>(nlohmann::json const &amp;j)</argsstring>
        <name>readMetadata</name>
        <param>
          <type>nlohmann::json const &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Read the LB phase&apos;s metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">j</parametername>
</parameternamelist>
<parameterdescription>
<para>the json </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="179" column="8" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="634" bodyend="685"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a1fc66e9335603b8abc2b982d667abe71" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::LBDataHolder::getObjectFromJsonField_</definition>
        <argsstring>(nlohmann::json const &amp;field, nlohmann::json &amp;object, bool &amp;is_bitpacked, bool &amp;is_collection)</argsstring>
        <name>getObjectFromJsonField_</name>
        <param>
          <type>nlohmann::json const &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>object</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>is_bitpacked</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>is_collection</declname>
        </param>
        <briefdescription>
<para>Determine the object ID from the tasks or communication field of input JSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">field</parametername>
</parameternamelist>
<parameterdescription>
<para>the json field containing an object ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>empty json object to be populated with the object&apos;s ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_bitpacked</parametername>
</parameternamelist>
<parameterdescription>
<para>empty bool to be populated with whether or not the ID is bit-encoded </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_collection</parametername>
</parameternamelist>
<parameterdescription>
<para>empty bool to be populated with whether or not the object belongs to a collection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="162" column="15" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.cc" bodystart="56" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Data structure that holds LB data for a set of phases. Can output them as JSON. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/vrt/collection/balance/lb_data_holder.h" line="67" column="19" bodyfile="src/vt/vrt/collection/balance/lb_data_holder.h" bodystart="67" bodyend="210"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a0299b1703a83e9858d4514ce7d500f16" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>addInitialTask</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a77ed15a18bb662403a65fa8fe4d4d6dc" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>clear</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a369e6e3c856e6ee5545b72510b762672" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>getElmFromCommObject_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a1fc66e9335603b8abc2b982d667abe71" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>getObjectFromJsonField_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a190018ee0726acb12d7d416476de5bfd" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>identical_phases_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aa1785b744e5b844588f9e8038aa2ef1e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>LBDataHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a0bf21f167ccc736cd1f763aceda3a90d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>LBDataHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aff15ecfd3ffecaa3f6754621c496fc8c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>metadataToJson</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>node_comm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>node_data_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>node_idx_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ab862d2f1b884256fc88634757f37bb80" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>node_objgroup_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a733c6d7b9fb2bb0c67588eed9b9cd5fc" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>node_subphase_comm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a24fff50ee98c5fc97ea1e3b6155fea9e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>node_user_attributes_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>outputEntity</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a09eb4cd8fb13f5e64250a538646daf77" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>rank_attributes_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a92eb060e578a7fb8c317d9184a7236db" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>rankAttributesToJson</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a5cd0145d09eb1b0a1bdf6b5b6853267d" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>readMetadata</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ae7701331d40846773d0dc359621fab25" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a66a5410c689d1515c9462495d3225a79" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>skipped_phases_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a59ffb1059d0583e704c5b7cb5c3baefd" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>this_node_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aeea29fc72556da9038290ef94fb01bc9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>toJson</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a38dc8aada18756357212f4229ea363da" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>user_defined_json_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ad5b8a5a6093c4edd34a10069551c1d19" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>user_defined_lb_info_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aa4b11a094d2f858d29e4a91d61942ddf" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LBDataHolder</scope><name>user_per_phase_json_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
