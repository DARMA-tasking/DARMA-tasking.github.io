<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1util_1_1container_1_1_process_buffer" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::container::ProcessBuffer</compoundname>
    <includes refid="process__ready__buffer_8h" local="no">process_ready_buffer.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1util_1_1container_1_1_process_buffer_1a20be3480fb453096015a6fe5ca370816" prot="public" static="no">
        <type>std::function&lt; void(T &amp;)&gt;</type>
        <definition>using vt::util::container::ProcessBuffer&lt; T &gt;::ProcessFnType =  std::function&lt;void(T&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>ProcessFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="62" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1container_1_1_process_buffer_1a860ed8f4073f16af078cca408ec69a66" prot="private" static="no" mutable="no">
        <type>std::list&lt; T &gt;</type>
        <definition>std::list&lt;T&gt; vt::util::container::ProcessBuffer&lt; T &gt;::buffer_</definition>
        <argsstring></argsstring>
        <name>buffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="117" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1container_1_1_process_buffer_1af4c963364ec90b9384aaf850a95b9531" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::util::container::ProcessBuffer&lt; T &gt;::needs_lock_</definition>
        <argsstring></argsstring>
        <name>needs_lock_</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="118" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1container_1_1_process_buffer_1a8da1ebe17962ddcccd229f8f75f62fca" prot="private" static="no" mutable="no">
        <type>MutexType</type>
        <definition>MutexType vt::util::container::ProcessBuffer&lt; T &gt;::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="119" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1container_1_1_process_buffer_1aff23f09609cea327a6c6550d51d6b155" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a656e362091da17b9b93d0655b36e3392" kindref="member">WorkerIDType</ref></type>
        <definition>WorkerIDType vt::util::container::ProcessBuffer&lt; T &gt;::worker_</definition>
        <argsstring></argsstring>
        <name>worker_</name>
        <initializer>= no_worker_id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="120" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1container_1_1_process_buffer_1afb8da7548c7c6b2ce3015edd4560a48d" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1util_1_1container_1_1_process_buffer_1a20be3480fb453096015a6fe5ca370816" kindref="member">ProcessFnType</ref></type>
        <definition>ProcessFnType vt::util::container::ProcessBuffer&lt; T &gt;::process_fn_</definition>
        <argsstring></argsstring>
        <name>process_fn_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="121" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_process_buffer_1a1fab9ef25e64fdab844f3e3d40699ad9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::ProcessBuffer&lt; T &gt;::push</definition>
        <argsstring>(T const &amp;elm)</argsstring>
        <name>push</name>
        <param>
          <type>T const &amp;</type>
          <declname>elm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="64" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="64" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_process_buffer_1ae1bff94f45b85fa126a63b98c6c2e869" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::ProcessBuffer&lt; T &gt;::emplace</definition>
        <argsstring>(T &amp;&amp;elm)</argsstring>
        <name>emplace</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>elm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="70" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_process_buffer_1ab8b25ce1820da72a1770778252dabfea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::ProcessBuffer&lt; T &gt;::attach</definition>
        <argsstring>(ProcessFnType fn, WorkerIDType worker=no_worker_id)</argsstring>
        <name>attach</name>
        <param>
          <type><ref refid="structvt_1_1util_1_1container_1_1_process_buffer_1a20be3480fb453096015a6fe5ca370816" kindref="member">ProcessFnType</ref></type>
          <declname>fn</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a656e362091da17b9b93d0655b36e3392" kindref="member">WorkerIDType</ref></type>
          <declname>worker</declname>
          <defval>no_worker_id</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="76" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_process_buffer_1aab87efa377b2b94320ba7c83b568b227" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::ProcessBuffer&lt; T &gt;::progress</definition>
        <argsstring>()</argsstring>
        <name>progress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="83" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="83" bodyend="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_process_buffer_1a92dc3217faf1e869406094e875e6a68b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::ProcessBuffer&lt; T &gt;::apply</definition>
        <argsstring>(ProcessFnType fn, bool locked)</argsstring>
        <name>apply</name>
        <param>
          <type><ref refid="structvt_1_1util_1_1container_1_1_process_buffer_1a20be3480fb453096015a6fe5ca370816" kindref="member">ProcessFnType</ref></type>
          <declname>fn</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>locked</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="86" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="86" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_process_buffer_1a5cdedc99fc186a4bdfc98e274e4ad74f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::ProcessBuffer&lt; T &gt;::progressEngine</definition>
        <argsstring>(bool has_lock)</argsstring>
        <name>progressEngine</name>
        <param>
          <type>bool</type>
          <declname>has_lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="108" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_process_buffer_1a334d729082827b50b57cde7aa27f137e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::util::container::ProcessBuffer&lt; T &gt;::isProcessWorker</definition>
        <argsstring>() const</argsstring>
        <name>isProcessWorker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="111" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_process_buffer_1aae71d070e3eb87d11a7cd5442aacdaed" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>MutexType *</type>
        <definition>MutexType* vt::util::container::ProcessBuffer&lt; T &gt;::getMutex</definition>
        <argsstring>()</argsstring>
        <name>getMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/process_ready_buffer.h" line="114" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="114" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/utils/container/process_ready_buffer.h" line="61" column="1" bodyfile="src/vt/utils/container/process_ready_buffer.h" bodystart="61" bodyend="122"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1a92dc3217faf1e869406094e875e6a68b" prot="private" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>apply</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1ab8b25ce1820da72a1770778252dabfea" prot="public" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>attach</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1a860ed8f4073f16af078cca408ec69a66" prot="private" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>buffer_</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1ae1bff94f45b85fa126a63b98c6c2e869" prot="public" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>emplace</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1aae71d070e3eb87d11a7cd5442aacdaed" prot="private" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>getMutex</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1a334d729082827b50b57cde7aa27f137e" prot="private" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>isProcessWorker</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1a8da1ebe17962ddcccd229f8f75f62fca" prot="private" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>mutex_</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1af4c963364ec90b9384aaf850a95b9531" prot="private" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>needs_lock_</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1afb8da7548c7c6b2ce3015edd4560a48d" prot="private" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>process_fn_</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1a20be3480fb453096015a6fe5ca370816" prot="public" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>ProcessFnType</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1aab87efa377b2b94320ba7c83b568b227" prot="public" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>progress</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1a5cdedc99fc186a4bdfc98e274e4ad74f" prot="private" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>progressEngine</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1a1fab9ef25e64fdab844f3e3d40699ad9" prot="public" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>push</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_process_buffer_1aff23f09609cea327a6c6550d51d6b155" prot="private" virt="non-virtual"><scope>vt::util::container::ProcessBuffer</scope><name>worker_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
