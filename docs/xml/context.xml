<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="context" kind="page">
    <compoundname>context</compoundname>
    <title>Context</title>
    <briefdescription>
<para>Node-aware context. </para>
    </briefdescription>
    <detaileddescription>
<para>Node-aware context</para>
<para>The context component <computeroutput><ref refid="structvt_1_1ctx_1_1_context" kindref="compound">vt::ctx::Context</ref></computeroutput>, accessed via <computeroutput><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">vt::theContext()</ref></computeroutput>, provides context-aware querying of the current node (analogous to MPI&apos;s <computeroutput>MPI_Comm_rank</computeroutput>), number of nodes (analogous to MPI&apos;s <computeroutput>MPI_Comm_size</computeroutput>), and kernel threading/ULT information if worker threads are enabled. The context also provides the MPI communicator that an instance of <bold><emphasis>vt</emphasis></bold> is currently using.</para>
<para>Used to obtain the current node and other context where a handler executes. Context is a core VT component that provides the ability to pass initialization arguments (through the <computeroutput>vt::Runtime</computeroutput>) and obtain info about the node on which a handler is executing or the number of nodes. It provides functionality analogous to <computeroutput>MPI_Comm_size</computeroutput> and <computeroutput>MPI_Comm_rank</computeroutput>.</para>
<sect2 id="context_1get-node">
<title>Current node/rank</title>
<para>Gets the current node (analogous to MPI&apos;s rank) currently being used.</para>
<para>To get the current node, one may query this method:</para>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref><sp/>this_node<sp/>=<sp/><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">vt::theContext</ref>()-&gt;<ref refid="structvt_1_1ctx_1_1_context_1a0d52c263ce8516546a67443d9a86fa5f" kindref="member">getNode</ref>();</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="context_1get-num-nodes">
<title>Number of nodes/ranks</title>
<para>Get the number of nodes (analogous to MPI&apos;s num ranks) being used.</para>
<para>To get the number of nodes or ranks that an instance of <bold><emphasis>vt</emphasis></bold> is using, one may query this method:</para>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref><sp/>num_nodes<sp/>=<sp/><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">vt::theContext</ref>()-&gt;<ref refid="structvt_1_1ctx_1_1_context_1a7f41071aadf6d5fa9e1b6c703c5ff19d" kindref="member">getNumNodes</ref>();</highlight></codeline>
</programlisting></para>
<para><simplesect kind="note"><para>The result from <computeroutput>getNode</computeroutput> or <computeroutput>getNumNodes</computeroutput> will depend on the communicator that was passed to VT during initialization. </para>
</simplesect>
</para>
</sect2>
    </detaileddescription>
  </compounddef>
</doxygen>
