<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1trace_1_1_trace_lite" kind="struct" language="C++" prot="public">
    <compoundname>vt::trace::TraceLite</compoundname>
    <derivedcompoundref refid="structvt_1_1trace_1_1_trace" prot="public" virt="non-virtual">vt::trace::Trace</derivedcompoundref>
    <includes refid="trace__lite_8h" local="no">trace_lite.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1trace_1_1_trace_lite_1aeb73e523d31829d3163c877b145afa2a" prot="public" static="no">
        <type><ref refid="structvt_1_1trace_1_1_log" kindref="compound">Log</ref></type>
        <definition>using vt::trace::TraceLite::LogType =  Log</definition>
        <argsstring></argsstring>
        <name>LogType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="66" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1trace_1_1_trace_lite_1a55bd5754c9786ae91a33bcf57f32acc8" prot="public" static="no">
        <type><ref refid="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1d" kindref="member">eTraceConstants</ref></type>
        <definition>using vt::trace::TraceLite::TraceConstantsType =  eTraceConstants</definition>
        <argsstring></argsstring>
        <name>TraceConstantsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="67" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1trace_1_1_trace_lite_1a301955b0e2e8d76ca5974c10be8125c4" prot="public" static="no">
        <type>int64_t</type>
        <definition>using vt::trace::TraceLite::TimeIntegerType =  int64_t</definition>
        <argsstring></argsstring>
        <name>TimeIntegerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="68" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1trace_1_1_trace_lite_1af9e05e83b3d0adfb9d45cf13c0bb7525" prot="public" static="no">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>using vt::trace::TraceLite::EventHoldStackType =  std::vector&lt;std::size_t&gt;</definition>
        <argsstring></argsstring>
        <name>EventHoldStackType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="69" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1trace_1_1_trace_lite_1a346a7751a544de425345a8983ed52146" prot="public" static="no">
        <type>std::queue&lt; <ref refid="structvt_1_1trace_1_1_trace_lite_1aeb73e523d31829d3163c877b145afa2a" kindref="member">LogType</ref> &gt;</type>
        <definition>using vt::trace::TraceLite::TraceContainerType =  std::queue&lt;LogType&gt;</definition>
        <argsstring></argsstring>
        <name>TraceContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="71" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1trace_1_1_trace_lite_1ae827dd1c4f37ac2dbcb6f4898a664b99" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structvt_1_1trace_1_1_trace_lite_1aeb73e523d31829d3163c877b145afa2a" kindref="member">LogType</ref> &gt;</type>
        <definition>using vt::trace::TraceLite::TraceStackType =  std::vector&lt;LogType&gt;</definition>
        <argsstring></argsstring>
        <name>TraceStackType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="74" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a0f5139a30b7eef896d0b49b22b97fec3" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::trace::TraceLite::incremental_flush_mode_</definition>
        <argsstring></argsstring>
        <name>incremental_flush_mode_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="362" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a7dcadada68a0b250898d7838de01458b" prot="protected" static="no" mutable="no">
        <type><ref refid="structvt_1_1trace_1_1_user_event_registry" kindref="compound">UserEventRegistry</ref></type>
        <definition>UserEventRegistry vt::trace::TraceLite::user_event_</definition>
        <argsstring></argsstring>
        <name>user_event_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="364" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a323d77bc03ed78b44e632c595433b7ba" prot="protected" static="no" mutable="no">
        <type><ref refid="structvt_1_1trace_1_1_trace_lite_1af9e05e83b3d0adfb9d45cf13c0bb7525" kindref="member">EventHoldStackType</ref></type>
        <definition>EventHoldStackType vt::trace::TraceLite::event_holds_</definition>
        <argsstring></argsstring>
        <name>event_holds_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="365" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a11cf264af89fe8dd3703e8897d0bb77b" prot="protected" static="no" mutable="no">
        <type><ref refid="structvt_1_1trace_1_1_trace_lite_1ae827dd1c4f37ac2dbcb6f4898a664b99" kindref="member">TraceStackType</ref></type>
        <definition>TraceStackType vt::trace::TraceLite::open_events_</definition>
        <argsstring></argsstring>
        <name>open_events_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="366" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a3751cf984ddc83e14f120daf5d533a2c" prot="protected" static="no" mutable="no">
        <type><ref refid="structvt_1_1trace_1_1_trace_lite_1a346a7751a544de425345a8983ed52146" kindref="member">TraceContainerType</ref></type>
        <definition>TraceContainerType vt::trace::TraceLite::traces_</definition>
        <argsstring></argsstring>
        <name>traces_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="367" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a06815b5d345c41f07105dd382b4c3c2b" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref></type>
        <definition>TraceEventIDType vt::trace::TraceLite::cur_event_</definition>
        <argsstring></argsstring>
        <name>cur_event_</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="368" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1acba836a9cc25aee679f7738c8f2721eb" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::TraceLite::flush_event_</definition>
        <argsstring></argsstring>
        <name>flush_event_</name>
        <initializer>= no_user_event_id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="369" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a414bdf6f5d6e031264b392aed0e8e320" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::trace::TraceLite::enabled_</definition>
        <argsstring></argsstring>
        <name>enabled_</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="370" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a5f5c81900355ce74b084ef64ab69edc4" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double vt::trace::TraceLite::start_time_</definition>
        <argsstring></argsstring>
        <name>start_time_</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="371" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a8bd3836d6fad28bb428ce3b824a00595" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::trace::TraceLite::prog_name_</definition>
        <argsstring></argsstring>
        <name>prog_name_</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="372" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1ae6209336c8aabf62ec626fa6b8fbc8ee" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::trace::TraceLite::trace_name_</definition>
        <argsstring></argsstring>
        <name>trace_name_</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="373" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a0381e516d389555b3b40b954d276eff9" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::trace::TraceLite::full_trace_name_</definition>
        <argsstring></argsstring>
        <name>full_trace_name_</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="374" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1aa7236609212e978252ddefd9c0131537" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::trace::TraceLite::full_sts_name_</definition>
        <argsstring></argsstring>
        <name>full_sts_name_</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="375" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a3871cf535ca6f31bfb499a46cde4c80c" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::trace::TraceLite::full_dir_name_</definition>
        <argsstring></argsstring>
        <name>full_dir_name_</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="376" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a3af89ea00d5dfcf4341aabf9c2b33aef" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::trace::TraceLite::wrote_sts_file_</definition>
        <argsstring></argsstring>
        <name>wrote_sts_file_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="377" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1ac4f99b5bd44df7b4aa07b700fab162c7" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t vt::trace::TraceLite::trace_write_count_</definition>
        <argsstring></argsstring>
        <name>trace_write_count_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="378" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a1c41f9e975ef1ba41cc6550bab7b2375" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::trace::TraceLite::standalone_initalized_</definition>
        <argsstring></argsstring>
        <name>standalone_initalized_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="379" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1ae75d01f083974fe39f81455377ac3842" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::trace::TraceLite::trace_enabled_cur_phase_</definition>
        <argsstring></argsstring>
        <name>trace_enabled_cur_phase_</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="380" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1a75ffdb0ab1dea68a665085596ece7b96" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::trace::TraceLite::idle_begun_</definition>
        <argsstring></argsstring>
        <name>idle_begun_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="381" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_lite_1ab074b4892ac4fd0508c03150710eb46d" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1trace_1_1vt__gz_file" kindref="compound">vt_gzFile</ref> &gt;</type>
        <definition>std::unique_ptr&lt;vt_gzFile&gt; vt::trace::TraceLite::log_file_</definition>
        <argsstring></argsstring>
        <name>log_file_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="382" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a328b735cfc479d3bf3339638aeb96a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::trace::TraceLite::TraceLite</definition>
        <argsstring>(std::string const &amp;in_prog_name)</argsstring>
        <name>TraceLite</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in_prog_name</declname>
        </param>
        <briefdescription>
<para>System call to construct the trace component. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_prog_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the program name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="81" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="101" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a08eca22659dc1f361d534c2b9c03b90b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>vt::trace::TraceLite::~TraceLite</definition>
        <argsstring>()</argsstring>
        <name>~TraceLite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="83" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a8f9ba027397787cf6b580e397d8da484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::setFlushType</definition>
        <argsstring>(int flush_type)</argsstring>
        <name>setFlushType</name>
        <param>
          <type>int</type>
          <declname>flush_type</declname>
        </param>
        <briefdescription>
<para>Set zlib incremental flush mode for trace file. </para>        </briefdescription>
        <detaileddescription>
<para>Available options:<itemizedlist>
<listitem><para>Z_NO_FLUSH = 0</para></listitem><listitem><para>Z_PARTIAL_FLUSH = 1</para></listitem><listitem><para>Z_SYNC_FLUSH = 2</para></listitem><listitem><para>Z_FULL_FLUSH = 3</para></listitem><listitem><para>Z_FINISH = 4</para></listitem><listitem><para>Z_BLOCK = 5</para></listitem><listitem><para>Z_TREES = 6</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flush_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the zlib flush mode </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="99" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="138" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1aa0cff75782c7c6fb3f90731b98b49c2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vt::trace::TraceLite::getTraceName</definition>
        <argsstring>() const</argsstring>
        <name>getTraceName</name>
        <briefdescription>
<para>Get the trace file name for this node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the file name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="106" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1af62ce95a0cd54b4d729e730e9dd94311" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vt::trace::TraceLite::getSTSName</definition>
        <argsstring>() const</argsstring>
        <name>getSTSName</name>
        <briefdescription>
<para>Get the sts file name that holds meta-data. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the sts file name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="113" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1aee5f10410a94c3149eefe595ccb2bbab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vt::trace::TraceLite::getDirectory</definition>
        <argsstring>() const</argsstring>
        <name>getDirectory</name>
        <briefdescription>
<para>Get the trace directory for output. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the directory path </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="120" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a095a8bb2aaebbaf340b52c421101f918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::TraceLite::registerUserEventColl</definition>
        <argsstring>(std::string const &amp;name)</argsstring>
        <name>registerUserEventColl</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Collectively register a user event. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>For users, it is recommended that the free function be called <computeroutput>registerEventCollective</computeroutput> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>name for the user event</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the user event ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="148" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a1f8e52289799bcd6b469b20be7d1e149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::setupNames</definition>
        <argsstring>(std::string const &amp;in_prog_name)</argsstring>
        <name>setupNames</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in_prog_name</declname>
        </param>
        <briefdescription>
<para>Setup the file names for output. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_prog_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the program name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="155" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="179" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a99c538b6e3cd2521bba5cba161ac4240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::enableTracing</definition>
        <argsstring>()</argsstring>
        <name>enableTracing</name>
        <briefdescription>
<para>Enable logging of events at runtime. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="160" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="399" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1ac494fd6858647fd548b6554cf066568b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::disableTracing</definition>
        <argsstring>()</argsstring>
        <name>disableTracing</name>
        <briefdescription>
<para>Disable logging of events. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Events already logged may still be written to the trace log. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="167" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="401" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1ac683bae25af871b4e7b0deaf73bde529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::addUserEventBracketed</definition>
        <argsstring>(UserEventIDType event, double begin, double end)</argsstring>
        <name>addUserEventBracketed</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>double</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para><ref refid="structvt_1_1trace_1_1_log" kindref="compound">Log</ref> a bracketed user event with start and end time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID for the sts file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>the begin time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>the end time </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="176" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="245" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1aac43836481f9848a210f935837167bc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::addUserBracketedNote</definition>
        <argsstring>(double const begin, double const end, std::string const &amp;note, TraceEventIDType const event=no_trace_event)</argsstring>
        <name>addUserBracketedNote</name>
        <param>
          <type>double const</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>end</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>note</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref> const</type>
          <declname>event</declname>
          <defval>no_trace_event</defval>
        </param>
        <briefdescription>
<para><ref refid="structvt_1_1trace_1_1_log" kindref="compound">Log</ref> a user bracketed event with a note. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>the begin time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>the end time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">note</parametername>
</parameternamelist>
<parameterdescription>
<para>the note to log </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>the event ID </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="186" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="262" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a48ffd3b44801a6d79681086e2c031983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::beginIdle</definition>
        <argsstring>(double const time=getCurrentTime())</argsstring>
        <name>beginIdle</name>
        <param>
          <type>double const</type>
          <declname>time</declname>
          <defval><ref refid="structvt_1_1trace_1_1_trace_lite_1ad1d8159d645a3b7047ce3f2e0c080f8d" kindref="member">getCurrentTime</ref>()</defval>
        </param>
        <briefdescription>
<para>Scheduler trigger for <computeroutput>sched::SchedulerEvent::BeginIdle</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>time it begins idle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="196" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="345" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a72c44d3d5e8361560104f8b91332a22c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::endIdle</definition>
        <argsstring>(double const time=getCurrentTime())</argsstring>
        <name>endIdle</name>
        <param>
          <type>double const</type>
          <declname>time</declname>
          <defval><ref refid="structvt_1_1trace_1_1_trace_lite_1ad1d8159d645a3b7047ce3f2e0c080f8d" kindref="member">getCurrentTime</ref>()</defval>
        </param>
        <briefdescription>
<para>Scheduler trigger for <computeroutput>sched::SchedulerEvent::EndIdle</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>time it ends idle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="203" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="363" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a8c80920e23cef1aeedbb2282fb6769f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::trace::TraceLite::checkDynamicRuntimeEnabled</definition>
        <argsstring>(bool is_end_event=false)</argsstring>
        <name>checkDynamicRuntimeEnabled</name>
        <param>
          <type>bool</type>
          <declname>is_end_event</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Check if tracing is enabled. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_end_event</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the event that is being considering to write out in the calling context is actually an end event that needs to be closed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether tracing is enabled </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="214" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="229" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a31513ed82d3b3c74369fde81491eb3a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::flushTracesFile</definition>
        <argsstring>(bool useGlobalSync=false)</argsstring>
        <name>flushTracesFile</name>
        <param>
          <type>bool</type>
          <declname>useGlobalSync</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Flush traces to file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">useGlobalSync</parametername>
</parameternamelist>
<parameterdescription>
<para>whether a global sync should be invoked before flushing output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="222" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="423" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1ac412f235b5e5b4510d848fa0b3b6a539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::cleanupTracesFile</definition>
        <argsstring>()</argsstring>
        <name>cleanupTracesFile</name>
        <briefdescription>
<para>Cleanup traces data, write to disk and close. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="227" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="403" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1ad3b81920d008e46dff0eb205ca99bd22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::trace::TraceLite::inIdleEvent</definition>
        <argsstring>() const</argsstring>
        <name>inIdleEvent</name>
        <briefdescription>
<para>Check if trace is in a idle event. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether in an idle eveent </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="234" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1ad1d8159d645a3b7047ce3f2e0c080f8d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double vt::trace::TraceLite::getCurrentTime</definition>
        <argsstring>()</argsstring>
        <name>getCurrentTime</name>
        <briefdescription>
<para>Get the current time. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>query the current clock time </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="241" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="241" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a54f5dd2119d3de0bb5df60d7986ea7aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1trace_1_1_trace_lite_1a301955b0e2e8d76ca5974c10be8125c4" kindref="member">TimeIntegerType</ref></type>
        <definition>static TimeIntegerType vt::trace::TraceLite::timeToMicros</definition>
        <argsstring>(double const time)</argsstring>
        <name>timeToMicros</name>
        <param>
          <type>double const</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Convert time in seconds to integer in microseconds. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>the time in seconds as double</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>time in microsecond as integer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="252" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="252" bodyend="254"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a6d33deb4bef608ff3c68dcf80b2fcc42" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::emitTraceForTopProcessingEvent</definition>
        <argsstring>(double const time, TraceConstantsType const type)</argsstring>
        <name>emitTraceForTopProcessingEvent</name>
        <param>
          <type>double const</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1d" kindref="member">TraceConstantsType</ref> const</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Emit a &apos;stop&apos; trace for previous open event or a &apos;[re]start&apos; trace for a reactivated open event. This assists with output flattening. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>the time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of event to emit </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="264" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="381" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1aa385172051bc8f3fc58a345fec10eae2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::writeTracesFile</definition>
        <argsstring>(int flush, bool is_incremental_flush)</argsstring>
        <name>writeTracesFile</name>
        <param>
          <type>int</type>
          <declname>flush</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_incremental_flush</declname>
        </param>
        <briefdescription>
<para>Write traces to file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flush</parametername>
</parameternamelist>
<parameterdescription>
<para>the flush mode </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_incremental_flush</parametername>
</parameternamelist>
<parameterdescription>
<para>whether this is an incremental flush </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="310" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="444" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a7b60eedbf68a4989a1566f2cf85d94dd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::outputControlFile</definition>
        <argsstring>(std::ofstream &amp;file)</argsstring>
        <name>outputControlFile</name>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Output the sts (control) file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>the file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="317" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="620" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1aeb468f1222761674e4ffb0cfa27f0641" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref></type>
        <definition>TraceEventIDType vt::trace::TraceLite::logEvent</definition>
        <argsstring>(LogType &amp;&amp;log)</argsstring>
        <name>logEvent</name>
        <param>
          <type><ref refid="structvt_1_1trace_1_1_trace_lite_1aeb73e523d31829d3163c877b145afa2a" kindref="member">LogType</ref> &amp;&amp;</type>
          <declname>log</declname>
        </param>
        <briefdescription>
<para><ref refid="structvt_1_1trace_1_1_log" kindref="compound">Log</ref> an event, returning a trace event ID if accepted or <computeroutput>no_trace_event</computeroutput> if not accepted (eg. no tracing on node). The log object is invalidated after the call. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">log</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity to log</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the trace event ID for that new log </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="346" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="282" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a1cdbccebe00aec90174e93b3d1fa0bcf" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::trace::TraceLite::getTracesSize</definition>
        <argsstring>() const</argsstring>
        <name>getTracesSize</name>
        <briefdescription>
<para>Get the current traces size. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>computed bytes used for tracing (lower bound) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="353" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="353" bodyend="355"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1a90769de4b190c30fb016990f36ef032e" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::outputTraces</definition>
        <argsstring>(vt_gzFile *file, TraceContainerType &amp;traces, double start_time, int flush)</argsstring>
        <name>outputTraces</name>
        <param>
          <type><ref refid="structvt_1_1trace_1_1vt__gz_file" kindref="compound">vt_gzFile</ref> *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1trace_1_1_trace_lite_1a346a7751a544de425345a8983ed52146" kindref="member">TraceContainerType</ref> &amp;</type>
          <declname>traces</declname>
        </param>
        <param>
          <type>double</type>
          <declname>start_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flush</declname>
        </param>
        <briefdescription>
<para>Writes traces to file, optionally flushing. The traces collection is modified. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>the gzip file to write to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">traces</parametername>
</parameternamelist>
<parameterdescription>
<para>the container of collected traces </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_time</parametername>
</parameternamelist>
<parameterdescription>
<para>the start time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flush</parametername>
</parameternamelist>
<parameterdescription>
<para>the flush mode </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="277" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="493" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1af48d0cba490b7d15dc35ee2cfcc88a3f" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::outputHeader</definition>
        <argsstring>(vt_gzFile *file, NodeType const node, double const start)</argsstring>
        <name>outputHeader</name>
        <param>
          <type><ref refid="structvt_1_1trace_1_1vt__gz_file" kindref="compound">vt_gzFile</ref> *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const</type>
          <declname>node</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>start</declname>
        </param>
        <briefdescription>
<para>Output the tracing header. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>the gzip file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node outputting on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>the start time </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="289" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="698" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1af0dc30a8b2b52fc291d90f606f585a2d" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::TraceLite::outputFooter</definition>
        <argsstring>(vt_gzFile *file, NodeType const node, double const start)</argsstring>
        <name>outputFooter</name>
        <param>
          <type><ref refid="structvt_1_1trace_1_1vt__gz_file" kindref="compound">vt_gzFile</ref> *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const</type>
          <declname>node</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>start</declname>
        </param>
        <briefdescription>
<para>Output the tracing footer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>the gzip file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node outputting on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>the start time </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="300" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="707" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1aaf2192758f67bc57ab66766523bd96ad" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::trace::TraceLite::traceWritingEnabled</definition>
        <argsstring>(NodeType node)</argsstring>
        <name>traceWritingEnabled</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Check if tracing is enabled on a certain node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it is enabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="326" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="388" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_lite_1acfad34ebd68c53547dcff4115dd54388" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::trace::TraceLite::isStsOutputNode</definition>
        <argsstring>(NodeType node)</argsstring>
        <name>isStsOutputNode</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Check if a node will output the sts file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it will output </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_lite.h" line="335" column="1" bodyfile="src/vt/trace/trace_lite.cc" bodystart="395" bodyend="397"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4027">
        <label>vt::trace::Trace</label>
        <link refid="structvt_1_1trace_1_1_trace"/>
        <childnode refid="4026" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4026">
        <label>vt::trace::TraceLite</label>
        <link refid="structvt_1_1trace_1_1_trace_lite"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4028">
        <label>vt::trace::TraceLite</label>
        <link refid="structvt_1_1trace_1_1_trace_lite"/>
        <childnode refid="4029" relation="usage">
          <edgelabel>user_event_</edgelabel>
        </childnode>
      </node>
      <node id="4029">
        <label>vt::trace::UserEventRegistry</label>
        <link refid="structvt_1_1trace_1_1_user_event_registry"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/trace/trace_lite.h" line="65" column="1" bodyfile="src/vt/trace/trace_lite.h" bodystart="65" bodyend="383"/>
    <listofallmembers>
      <member refid="structvt_1_1trace_1_1_trace_lite_1aac43836481f9848a210f935837167bc5" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>addUserBracketedNote</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1ac683bae25af871b4e7b0deaf73bde529" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>addUserEventBracketed</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a48ffd3b44801a6d79681086e2c031983" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>beginIdle</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a8c80920e23cef1aeedbb2282fb6769f2" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>checkDynamicRuntimeEnabled</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1ac412f235b5e5b4510d848fa0b3b6a539" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>cleanupTracesFile</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a06815b5d345c41f07105dd382b4c3c2b" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>cur_event_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1ac494fd6858647fd548b6554cf066568b" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>disableTracing</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a6d33deb4bef608ff3c68dcf80b2fcc42" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>emitTraceForTopProcessingEvent</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a414bdf6f5d6e031264b392aed0e8e320" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>enabled_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a99c538b6e3cd2521bba5cba161ac4240" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>enableTracing</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a72c44d3d5e8361560104f8b91332a22c" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>endIdle</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a323d77bc03ed78b44e632c595433b7ba" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>event_holds_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1af9e05e83b3d0adfb9d45cf13c0bb7525" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>EventHoldStackType</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1acba836a9cc25aee679f7738c8f2721eb" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>flush_event_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a31513ed82d3b3c74369fde81491eb3a2" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>flushTracesFile</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a3871cf535ca6f31bfb499a46cde4c80c" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>full_dir_name_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1aa7236609212e978252ddefd9c0131537" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>full_sts_name_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a0381e516d389555b3b40b954d276eff9" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>full_trace_name_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1ad1d8159d645a3b7047ce3f2e0c080f8d" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>getCurrentTime</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1aee5f10410a94c3149eefe595ccb2bbab" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>getDirectory</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1af62ce95a0cd54b4d729e730e9dd94311" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>getSTSName</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1aa0cff75782c7c6fb3f90731b98b49c2f" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>getTraceName</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a1cdbccebe00aec90174e93b3d1fa0bcf" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>getTracesSize</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a75ffdb0ab1dea68a665085596ece7b96" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>idle_begun_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a0f5139a30b7eef896d0b49b22b97fec3" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>incremental_flush_mode_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1ad3b81920d008e46dff0eb205ca99bd22" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>inIdleEvent</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1acfad34ebd68c53547dcff4115dd54388" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>isStsOutputNode</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1ab074b4892ac4fd0508c03150710eb46d" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>log_file_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1aeb468f1222761674e4ffb0cfa27f0641" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>logEvent</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1aeb73e523d31829d3163c877b145afa2a" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>LogType</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a11cf264af89fe8dd3703e8897d0bb77b" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>open_events_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a7b60eedbf68a4989a1566f2cf85d94dd" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>outputControlFile</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1af0dc30a8b2b52fc291d90f606f585a2d" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>outputFooter</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1af48d0cba490b7d15dc35ee2cfcc88a3f" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>outputHeader</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a90769de4b190c30fb016990f36ef032e" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>outputTraces</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a8bd3836d6fad28bb428ce3b824a00595" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>prog_name_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a095a8bb2aaebbaf340b52c421101f918" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>registerUserEventColl</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a8f9ba027397787cf6b580e397d8da484" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>setFlushType</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a1f8e52289799bcd6b469b20be7d1e149" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>setupNames</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a1c41f9e975ef1ba41cc6550bab7b2375" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>standalone_initalized_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a5f5c81900355ce74b084ef64ab69edc4" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>start_time_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a301955b0e2e8d76ca5974c10be8125c4" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>TimeIntegerType</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a54f5dd2119d3de0bb5df60d7986ea7aa" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>timeToMicros</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1ae75d01f083974fe39f81455377ac3842" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>trace_enabled_cur_phase_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1ae6209336c8aabf62ec626fa6b8fbc8ee" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>trace_name_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1ac4f99b5bd44df7b4aa07b700fab162c7" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>trace_write_count_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a55bd5754c9786ae91a33bcf57f32acc8" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>TraceConstantsType</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a346a7751a544de425345a8983ed52146" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>TraceContainerType</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a328b735cfc479d3bf3339638aeb96a10" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>TraceLite</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a3751cf984ddc83e14f120daf5d533a2c" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>traces_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1ae827dd1c4f37ac2dbcb6f4898a664b99" prot="public" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>TraceStackType</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1aaf2192758f67bc57ab66766523bd96ad" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>traceWritingEnabled</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a7dcadada68a0b250898d7838de01458b" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>user_event_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1aa385172051bc8f3fc58a345fec10eae2" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>writeTracesFile</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a3af89ea00d5dfcf4341aabf9c2b33aef" prot="protected" virt="non-virtual"><scope>vt::trace::TraceLite</scope><name>wrote_sts_file_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_lite_1a08eca22659dc1f361d534c2b9c03b90b" prot="public" virt="virtual"><scope>vt::trace::TraceLite</scope><name>~TraceLite</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
