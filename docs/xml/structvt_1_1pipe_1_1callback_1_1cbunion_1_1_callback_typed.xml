<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed" kind="struct" language="C++" prot="public">
    <compoundname>vt::pipe::callback::cbunion::CallbackTyped</compoundname>
    <basecompoundref refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single" prot="public" virt="non-virtual">vt::pipe::callback::cbunion::CallbackRawBaseSingle</basecompoundref>
    <includes refid="cb__raw__base_8h" local="no">cb_raw_base.h</includes>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1ae236a8bcffe928ee956fbd9df57181d3" prot="public" static="no">
        <type>std::tuple&lt; Args... &gt;</type>
        <definition>using vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::TupleType =  std::tuple&lt;Args...&gt;</definition>
        <argsstring></argsstring>
        <name>TupleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="164" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a98d90baa0ff16d16c1918810edce406f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::CallbackTyped</definition>
        <argsstring>()=default</argsstring>
        <name>CallbackTyped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1afb15554d9e94dd6714ddfc0bf88e848c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::CallbackTyped</definition>
        <argsstring>(CallbackTyped const &amp;)=default</argsstring>
        <name>CallbackTyped</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed" kindref="compound">CallbackTyped</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a156131d8b268766113f8c2dd81b6a199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::CallbackTyped</definition>
        <argsstring>(CallbackTyped &amp;&amp;)=default</argsstring>
        <name>CallbackTyped</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed" kindref="compound">CallbackTyped</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a8a2b82218dbe268ee3ddef305654507b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed" kindref="compound">CallbackTyped</ref> &amp;</type>
        <definition>CallbackTyped&amp; vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::operator=</definition>
        <argsstring>(CallbackTyped const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed" kindref="compound">CallbackTyped</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a1356407fa70109f76c0ab5fa415db743" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::CallbackTyped</definition>
        <argsstring>(RawSendMsgTagType, PipeType const &amp;in_pipe, HandlerType const in_handler, NodeType const &amp;in_node)</argsstring>
        <name>CallbackTyped</name>
        <param>
          <type>RawSendMsgTagType</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>in_handler</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>in_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="172" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1ac1ff87450b46cb1324c0b62ac1cca106" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::CallbackTyped</definition>
        <argsstring>(RawBcastMsgTagType, PipeType const &amp;in_pipe, HandlerType const in_handler)</argsstring>
        <name>CallbackTyped</name>
        <param>
          <type>RawBcastMsgTagType</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>in_handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="177" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a9923c7ce924c0f2d52cdd19a69dfcfec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::CallbackTyped</definition>
        <argsstring>(RawAnonTagType, PipeType const &amp;in_pipe)</argsstring>
        <name>CallbackTyped</name>
        <param>
          <type>RawAnonTagType</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="181" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="181" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a4ac5a9e8138b2dc50264533a5a7334ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::CallbackTyped</definition>
        <argsstring>(RawSendColMsgTagType, PipeType const &amp;in_pipe)</argsstring>
        <name>CallbackTyped</name>
        <param>
          <type>RawSendColMsgTagType</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="184" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a36657b73ab1715cf79691e7a2ddb83e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::CallbackTyped</definition>
        <argsstring>(RawBcastColMsgTagType, PipeType const &amp;in_pipe)</argsstring>
        <name>CallbackTyped</name>
        <param>
          <type>RawBcastColMsgTagType</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="187" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a53449646d77256c5ecb4deba498cac60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::CallbackTyped</definition>
        <argsstring>(RawBcastColDirTagType, PipeType const &amp;in_pipe, HandlerType const in_handler, AutoHandlerType const in_vrt, VirtualProxyType const &amp;in_proxy)</argsstring>
        <name>CallbackTyped</name>
        <param>
          <type>RawBcastColDirTagType</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>in_handler</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a734a9c83099de5bc1cd85f9da8dba7bb" kindref="member">AutoHandlerType</ref> const</type>
          <declname>in_vrt</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>in_proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="190" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="190" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a24eedca0271b07c996a46fd79830f22a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::CallbackTyped</definition>
        <argsstring>(RawSendColDirTagType, PipeType const &amp;in_pipe, HandlerType const in_handler, AutoHandlerType const in_vrt_handler, void *index_bits)</argsstring>
        <name>CallbackTyped</name>
        <param>
          <type>RawSendColDirTagType</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>in_handler</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a734a9c83099de5bc1cd85f9da8dba7bb" kindref="member">AutoHandlerType</ref> const</type>
          <declname>in_vrt_handler</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>index_bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="198" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="198" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a5ac854c689dea58e9063903a460d8f9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::CallbackTyped</definition>
        <argsstring>(RawBcastObjGrpTagType, PipeType in_pipe, HandlerType in_handler, ObjGroupProxyType in_proxy)</argsstring>
        <name>CallbackTyped</name>
        <param>
          <type>RawBcastObjGrpTagType</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref></type>
          <declname>in_pipe</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>in_handler</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref></type>
          <declname>in_proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="206" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="206" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1aa4dab73febea8b4e76bf20881fb9993d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::CallbackTyped</definition>
        <argsstring>(RawSendObjGrpTagType, PipeType in_pipe, HandlerType in_handler, ObjGroupProxyType in_proxy, NodeType in_node)</argsstring>
        <name>CallbackTyped</name>
        <param>
          <type>RawSendObjGrpTagType</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref></type>
          <declname>in_pipe</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>in_handler</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref></type>
          <declname>in_proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>in_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="213" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="213" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a1256a1709839698421b422baa622f8c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::operator==</definition>
        <argsstring>(CallbackTyped&lt; Args... &gt; const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed" kindref="compound">CallbackTyped</ref>&lt; Args... &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="221" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="221" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1ad6e3b2becf075db7375919d6072f12d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::operator==</definition>
        <argsstring>(CallbackRawBaseSingle const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single" kindref="compound">CallbackRawBaseSingle</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="224" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="224" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1ae71e236d0851fa19672e2777edfe81dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::equal</definition>
        <argsstring>(CallbackT const &amp;other) const</argsstring>
        <name>equal</name>
        <param>
          <type>CallbackT const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="229" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="229" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a6214b3bfdc8eba01bdfff2afb98bcf67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Params</declname>
            <defname>Params</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::sendTuple</definition>
        <argsstring>(std::tuple&lt; Params... &gt; tup)</argsstring>
        <name>sendTuple</name>
        <param>
          <type>std::tuple&lt; Params... &gt;</type>
          <declname>tup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="234" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="234" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a7977d8ee9e8e28158865f0ad72ea91a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Params</declname>
            <defname>Params</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::send</definition>
        <argsstring>(Params &amp;&amp;... params)</argsstring>
        <name>send</name>
        <param>
          <type>Params &amp;&amp;...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="242" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="242" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1aa1cd1c0c5877d75e9ee3e34b910f95b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::send</definition>
        <argsstring>(typename CBTraits&lt; Args... &gt;::MsgT *msg)</argsstring>
        <name>send</name>
        <param>
          <type>typename <ref refid="structvt_1_1_c_b_traits" kindref="compound">CBTraits</ref>&lt; Args... &gt;::MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="255" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="255" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a241a0a2bab21374bb792873935eeba19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::send</definition>
        <argsstring>(messaging::MsgPtrThief&lt; MsgT &gt; msg)</argsstring>
        <name>send</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_ptr_thief" kindref="compound">messaging::MsgPtrThief</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="263" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a9dc1f441d1444b9b3404509cc2afe768" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::sendMsg</definition>
        <argsstring>(messaging::MsgPtrThief&lt; typename CBTraits&lt; Args... &gt;::MsgT &gt; msg)</argsstring>
        <name>sendMsg</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_ptr_thief" kindref="compound">messaging::MsgPtrThief</ref>&lt; typename <ref refid="structvt_1_1_c_b_traits" kindref="compound">CBTraits</ref>&lt; Args... &gt;::MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="267" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="267" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1aa8d1b59ff3d662bea81b5f359fdd6d3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::sendMsg</definition>
        <argsstring>(typename CBTraits&lt; Args... &gt;::MsgT *msg)</argsstring>
        <name>sendMsg</name>
        <param>
          <type>typename <ref refid="structvt_1_1_c_b_traits" kindref="compound">CBTraits</ref>&lt; Args... &gt;::MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="274" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="274" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1af8158d7a51fd77c604849970aecc3780" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="282" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="282" bodyend="284"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="758">
        <label>vt::pipe::callback::cbunion::CallbackRawBaseSingle</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single"/>
      </node>
      <node id="757">
        <label>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed"/>
        <childnode refid="758" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="779">
        <label>vt::pipe::callback::cbunion::BcastColMsgCB</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_bcast_col_msg_c_b"/>
        <childnode refid="780" relation="public-inheritance">
        </childnode>
      </node>
      <node id="787">
        <label>vt::pipe::callback::CallbackBaseTL&lt; CallbackProxySendTypeless &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l"/>
      </node>
      <node id="778">
        <label>vt::pipe::callback::CallbackBaseTL&lt; CallbackAnonTypeless &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l"/>
      </node>
      <node id="770">
        <label>vt::pipe::callback::CallbackProxyBcastDirect</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_proxy_bcast_direct"/>
        <childnode refid="771" relation="public-inheritance">
        </childnode>
      </node>
      <node id="763">
        <label>vt::pipe::callback::cbunion::BcastObjGrpCB</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_bcast_obj_grp_c_b"/>
        <childnode refid="764" relation="public-inheritance">
        </childnode>
      </node>
      <node id="780">
        <label>vt::pipe::callback::CallbackProxyBcastTypeless</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_proxy_bcast_typeless"/>
        <childnode refid="781" relation="public-inheritance">
        </childnode>
      </node>
      <node id="760">
        <label>vt::pipe::callback::cbunion::CallbackRawBaseSingle</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single"/>
        <childnode refid="761" relation="usage">
          <edgelabel>cb_</edgelabel>
        </childnode>
      </node>
      <node id="772">
        <label>vt::pipe::callback::cbunion::BcastMsgCB</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_bcast_msg_c_b"/>
        <childnode refid="773" relation="public-inheritance">
        </childnode>
      </node>
      <node id="759">
        <label>vt::pipe::callback::cbunion::CallbackTyped&lt; Args &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed"/>
        <childnode refid="760" relation="public-inheritance">
        </childnode>
      </node>
      <node id="776">
        <label>vt::pipe::callback::cbunion::AnonCB</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_anon_c_b"/>
        <childnode refid="777" relation="public-inheritance">
        </childnode>
      </node>
      <node id="782">
        <label>vt::pipe::callback::cbunion::SendObjGrpCB</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_send_obj_grp_c_b"/>
        <childnode refid="783" relation="public-inheritance">
        </childnode>
      </node>
      <node id="785">
        <label>vt::pipe::callback::cbunion::SendColMsgCB</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_send_col_msg_c_b"/>
        <childnode refid="786" relation="public-inheritance">
        </childnode>
      </node>
      <node id="761">
        <label>vt::pipe::callback::cbunion::GeneralCallback</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_general_callback"/>
        <childnode refid="762" relation="usage">
          <edgelabel>u_</edgelabel>
        </childnode>
      </node>
      <node id="781">
        <label>vt::pipe::callback::CallbackBaseTL&lt; CallbackProxyBcastTypeless &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l"/>
      </node>
      <node id="767">
        <label>vt::pipe::callback::CallbackSendTypeless</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless"/>
        <childnode refid="768" relation="public-inheritance">
        </childnode>
      </node>
      <node id="771">
        <label>vt::pipe::callback::CallbackBaseTL&lt; CallbackProxyBcastDirect &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l"/>
      </node>
      <node id="762">
        <label>vt::pipe::callback::cbunion::CallbackUnion</label>
        <link refid="unionvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_union"/>
        <childnode refid="763" relation="usage">
          <edgelabel>bcast_obj_cb_</edgelabel>
        </childnode>
        <childnode refid="766" relation="usage">
          <edgelabel>send_msg_cb_</edgelabel>
        </childnode>
        <childnode refid="769" relation="usage">
          <edgelabel>bcast_col_dir_cb_</edgelabel>
        </childnode>
        <childnode refid="772" relation="usage">
          <edgelabel>bcast_msg_cb_</edgelabel>
        </childnode>
        <childnode refid="775" relation="usage">
          <edgelabel>send_col_dir_cb_</edgelabel>
        </childnode>
        <childnode refid="776" relation="usage">
          <edgelabel>anon_cb_</edgelabel>
        </childnode>
        <childnode refid="779" relation="usage">
          <edgelabel>bcast_col_msg_cb_</edgelabel>
        </childnode>
        <childnode refid="782" relation="usage">
          <edgelabel>send_obj_cb_</edgelabel>
        </childnode>
        <childnode refid="785" relation="usage">
          <edgelabel>send_col_msg_cb_</edgelabel>
        </childnode>
      </node>
      <node id="777">
        <label>vt::pipe::callback::CallbackAnonTypeless</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_typeless"/>
        <childnode refid="778" relation="public-inheritance">
        </childnode>
      </node>
      <node id="769">
        <label>vt::pipe::callback::cbunion::BcastColDirCB</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_bcast_col_dir_c_b"/>
        <childnode refid="770" relation="public-inheritance">
        </childnode>
      </node>
      <node id="765">
        <label>vt::pipe::callback::CallbackBaseTL&lt; CallbackObjGroupBcast &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l"/>
      </node>
      <node id="775">
        <label>vt::pipe::callback::cbunion::SendColDirCB</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_send_col_dir_c_b"/>
        <childnode refid="770" relation="public-inheritance">
        </childnode>
      </node>
      <node id="786">
        <label>vt::pipe::callback::CallbackProxySendTypeless</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_proxy_send_typeless"/>
        <childnode refid="787" relation="public-inheritance">
        </childnode>
      </node>
      <node id="764">
        <label>vt::pipe::callback::CallbackObjGroupBcast</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_obj_group_bcast"/>
        <childnode refid="765" relation="public-inheritance">
        </childnode>
      </node>
      <node id="774">
        <label>vt::pipe::callback::CallbackBaseTL&lt; CallbackBcastTypeless &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l"/>
      </node>
      <node id="783">
        <label>vt::pipe::callback::CallbackObjGroupSend</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_obj_group_send"/>
        <childnode refid="784" relation="public-inheritance">
        </childnode>
      </node>
      <node id="784">
        <label>vt::pipe::callback::CallbackBaseTL&lt; CallbackObjGroupSend &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l"/>
      </node>
      <node id="768">
        <label>vt::pipe::callback::CallbackBaseTL&lt; CallbackSendTypeless &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l"/>
      </node>
      <node id="773">
        <label>vt::pipe::callback::CallbackBcastTypeless</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_bcast_typeless"/>
        <childnode refid="774" relation="public-inheritance">
        </childnode>
      </node>
      <node id="766">
        <label>vt::pipe::callback::cbunion::SendMsgCB</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_send_msg_c_b"/>
        <childnode refid="767" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/pipe/callback/cb_union/cb_raw_base.h" line="73" column="1" bodyfile="src/vt/pipe/callback/cb_union/cb_raw_base.h" bodystart="73" bodyend="-1"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a734a9c83099de5bc1cd85f9da8dba7bb" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>AutoHandlerType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a54c1e88b04174314284479d39f31c46a" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackRawBaseSingle</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a80569ca80e358052d839a15a0bcd287c" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackRawBaseSingle</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a8b2961b281dbf416f6d2eec2b7c11192" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackRawBaseSingle</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a00a840a889e6ca98c250d3f663972ade" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackRawBaseSingle</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a3d37003d95cb6fe474caa7f3053b9460" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackRawBaseSingle</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1aae697d509dacb338315d99b86602eeb7" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackRawBaseSingle</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a2586495207c03c2fb5247e19ee189984" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackRawBaseSingle</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1ada70fbd67b17be3a4eb86fd497b2c409" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackRawBaseSingle</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a1bdc68ca7ce795dc6acbc0b42a97216f" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackRawBaseSingle</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a750671c1804c21f4cd981f7a27d7177a" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackRawBaseSingle</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a1b045f50fce73d1bd4347cb2de6e45f5" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackRawBaseSingle</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a2ff2eebe15a6b270473f61cfa2a9804a" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackRawBaseSingle</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a8db688e82d3fb4d8f7f0a37817a0d929" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackRawBaseSingle</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a98d90baa0ff16d16c1918810edce406f" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackTyped</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1afb15554d9e94dd6714ddfc0bf88e848c" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackTyped</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a156131d8b268766113f8c2dd81b6a199" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackTyped</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a1356407fa70109f76c0ab5fa415db743" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackTyped</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1ac1ff87450b46cb1324c0b62ac1cca106" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackTyped</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a9923c7ce924c0f2d52cdd19a69dfcfec" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackTyped</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a4ac5a9e8138b2dc50264533a5a7334ef" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackTyped</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a36657b73ab1715cf79691e7a2ddb83e1" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackTyped</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a53449646d77256c5ecb4deba498cac60" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackTyped</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a24eedca0271b07c996a46fd79830f22a" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackTyped</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a5ac854c689dea58e9063903a460d8f9d" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackTyped</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1aa4dab73febea8b4e76bf20881fb9993d" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>CallbackTyped</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a6535ef3d7baf0130dcf2c23f63496f3d" prot="protected" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>cb_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1ae71e236d0851fa19672e2777edfe81dd" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>equal</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a3422df77d381724e530631720ec9720b" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>getPipe</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a69279b16198da6a06c5cfb28203c9819" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>null</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a8a2b82218dbe268ee3ddef305654507b" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>operator=</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a7037c612d471371061a32dc7b1bdea3a" prot="public" virt="non-virtual" ambiguityscope="vt::pipe::callback::cbunion::CallbackRawBaseSingle::"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>operator=</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a1256a1709839698421b422baa622f8c8" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>operator==</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1ad6e3b2becf075db7375919d6072f12d2" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>operator==</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a0ed7e09c29d285f662731495b0a61ad0" prot="public" virt="non-virtual" ambiguityscope="vt::pipe::callback::cbunion::CallbackRawBaseSingle::"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>operator==</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a7cff39d219279b2075d7db56e6b87944" prot="protected" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>pipe_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a7977d8ee9e8e28158865f0ad72ea91a4" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>send</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1aa1cd1c0c5877d75e9ee3e34b910f95b5" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>send</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a241a0a2bab21374bb792873935eeba19" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>send</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a4b09f1ec8917085ba9934764c16b29d6" prot="public" virt="non-virtual" ambiguityscope="vt::pipe::callback::cbunion::CallbackRawBaseSingle::"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>send</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a9dc1f441d1444b9b3404509cc2afe768" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1aa8d1b59ff3d662bea81b5f359fdd6d3b" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a6c2172d17e709df20b797dabcd339785" prot="public" virt="non-virtual" ambiguityscope="vt::pipe::callback::cbunion::CallbackRawBaseSingle::"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1a00c44780961d5d7e0085321872f5e805" prot="public" virt="non-virtual" ambiguityscope="vt::pipe::callback::cbunion::CallbackRawBaseSingle::"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1a6214b3bfdc8eba01bdfff2afb98bcf67" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>sendTuple</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1abc038ad02640796e9074fbb89b932403" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>sendVoid</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1af8158d7a51fd77c604849970aecc3780" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>serialize</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed_1ae236a8bcffe928ee956fbd9df57181d3" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>TupleType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single_1ae71a381a339f3e46adea8f93a6726bd5" prot="public" virt="non-virtual"><scope>vt::pipe::callback::cbunion::CallbackTyped</scope><name>valid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
