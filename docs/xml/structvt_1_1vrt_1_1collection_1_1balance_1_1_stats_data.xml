<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::balance::StatsData</compoundname>
    <includes refid="stats__data_8h" local="no">stats_data.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a34a782537ef1b33bfc1c7b1f635e1c72" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a824290c4323836ba7541a39845a200c3" kindref="member">LoadMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, LoadMapType&gt; vt::vrt::collection::balance::StatsData::node_data_</definition>
        <argsstring></argsstring>
        <name>node_data_</name>
        <briefdescription>
<para>Node timings for each local object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/stats_data.h" line="99" column="1" bodyfile="src/vt/vrt/collection/balance/stats_data.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a5ee2aea35e48a4855c8f99c16b588287" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a10860c956804d644db54a16012352728" kindref="member">CommMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, CommMapType&gt; vt::vrt::collection::balance::StatsData::node_comm_</definition>
        <argsstring></argsstring>
        <name>node_comm_</name>
        <briefdescription>
<para>Node communication graph for each local object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/stats_data.h" line="101" column="1" bodyfile="src/vt/vrt/collection/balance/stats_data.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1ab4c0793fa752d0404dc52ccb95be0285" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a8bdadb2583f128dd256e7d5a10826542" kindref="member">SubphaseLoadMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, SubphaseLoadMapType&gt; vt::vrt::collection::balance::StatsData::node_subphase_data_</definition>
        <argsstring></argsstring>
        <name>node_subphase_data_</name>
        <briefdescription>
<para>Node subphase timings for each local object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/stats_data.h" line="103" column="1" bodyfile="src/vt/vrt/collection/balance/stats_data.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1ac78802ff554a4d802a163afa5756412e" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::unordered_map&lt; <ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a10860c956804d644db54a16012352728" kindref="member">CommMapType</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, std::unordered_map&lt;SubphaseType, CommMapType&gt; &gt; vt::vrt::collection::balance::StatsData::node_subphase_comm_</definition>
        <argsstring></argsstring>
        <name>node_subphase_comm_</name>
        <briefdescription>
<para>Node communication graph for each subphase. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/stats_data.h" line="105" column="1" bodyfile="src/vt/vrt/collection/balance/stats_data.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a28e705281f97d1afd659848de7af7d7b" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref>, std::tuple&lt; <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref>, std::vector&lt; uint64_t &gt; &gt; &gt;</type>
        <definition>std::unordered_map&lt;ElementIDStruct, std::tuple&lt;VirtualProxyType, std::vector&lt;uint64_t&gt; &gt; &gt; vt::vrt::collection::balance::StatsData::node_idx_</definition>
        <argsstring></argsstring>
        <name>node_idx_</name>
        <briefdescription>
<para>Node indices for each ID along with the proxy ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/stats_data.h" line="107" column="1" bodyfile="src/vt/vrt/collection/balance/stats_data.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a4456eb9f50cab15ee7cbd079603a4b6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::balance::StatsData::StatsData</definition>
        <argsstring>()=default</argsstring>
        <name>StatsData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/stats_data.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1abcae1ce289482ae58eab2beb9a4ac013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::balance::StatsData::StatsData</definition>
        <argsstring>(nlohmann::json const &amp;j)</argsstring>
        <name>StatsData</name>
        <param>
          <type>nlohmann::json const &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Create <computeroutput><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data" kindref="compound">StatsData</ref></computeroutput> from input JSON. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">j</parametername>
</parameternamelist>
<parameterdescription>
<para>the json that contains the stats </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/stats_data.h" line="72" column="1" bodyfile="src/vt/vrt/collection/balance/stats_data.cc" bodystart="159" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a333902a2dd2dd9d8a9471f51a5d94e5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::balance::StatsData::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/stats_data.h" line="75" column="1" bodyfile="src/vt/vrt/collection/balance/stats_data.h" bodystart="75" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1ac864e580e764d093b427e459d46b2bd4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; nlohmann::json &gt;</type>
        <definition>std::unique_ptr&lt; nlohmann::json &gt; vt::vrt::collection::balance::StatsData::toJson</definition>
        <argsstring>(PhaseType phase) const</argsstring>
        <name>toJson</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Output a phase&apos;s stats to JSON. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the json data structure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/stats_data.h" line="90" column="1" bodyfile="src/vt/vrt/collection/balance/stats_data.cc" bodystart="51" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a48628fce8e2356413520fed69a800bc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::StatsData::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Clear all statistics. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/stats_data.h" line="95" column="1" bodyfile="src/vt/vrt/collection/balance/stats_data.cc" bodystart="233" bodyend="239"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Data structure that holds LB statistics for a set of phases. Can output them as JSON. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/vrt/collection/balance/stats_data.h" line="64" column="1" bodyfile="src/vt/vrt/collection/balance/stats_data.h" bodystart="64" bodyend="108"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a48628fce8e2356413520fed69a800bc4" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::StatsData</scope><name>clear</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a5ee2aea35e48a4855c8f99c16b588287" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::StatsData</scope><name>node_comm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a34a782537ef1b33bfc1c7b1f635e1c72" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::StatsData</scope><name>node_data_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a28e705281f97d1afd659848de7af7d7b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::StatsData</scope><name>node_idx_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1ac78802ff554a4d802a163afa5756412e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::StatsData</scope><name>node_subphase_comm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1ab4c0793fa752d0404dc52ccb95be0285" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::StatsData</scope><name>node_subphase_data_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a333902a2dd2dd9d8a9471f51a5d94e5f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::StatsData</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a4456eb9f50cab15ee7cbd079603a4b6d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::StatsData</scope><name>StatsData</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1abcae1ce289482ae58eab2beb9a4ac013" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::StatsData</scope><name>StatsData</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1ac864e580e764d093b427e459d46b2bd4" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::StatsData</scope><name>toJson</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
