<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="namespacevt_1_1trace" kind="namespace" language="C++">
    <compoundname>vt::trace</compoundname>
    <innerclass refid="structvt_1_1trace_1_1_event" prot="public">vt::trace::Event</innerclass>
    <innerclass refid="structvt_1_1trace_1_1_event_class" prot="public">vt::trace::EventClass</innerclass>
    <innerclass refid="structvt_1_1trace_1_1_log" prot="public">vt::trace::Log</innerclass>
    <innerclass refid="structvt_1_1trace_1_1_trace" prot="public">vt::trace::Trace</innerclass>
    <innerclass refid="classvt_1_1trace_1_1_trace_containers" prot="public">vt::trace::TraceContainers</innerclass>
    <innerclass refid="structvt_1_1trace_1_1_trace_event_seq_compare" prot="public">vt::trace::TraceEventSeqCompare</innerclass>
    <innerclass refid="structvt_1_1trace_1_1_trace_lite" prot="public">vt::trace::TraceLite</innerclass>
    <innerclass refid="structvt_1_1trace_1_1_trace_processing_tag" prot="public">vt::trace::TraceProcessingTag</innerclass>
    <innerclass refid="structvt_1_1trace_1_1_trace_registry" prot="public">vt::trace::TraceRegistry</innerclass>
    <innerclass refid="structvt_1_1trace_1_1_trace_scoped_event" prot="public">vt::trace::TraceScopedEvent</innerclass>
    <innerclass refid="structvt_1_1trace_1_1_trace_scoped_event_hash" prot="public">vt::trace::TraceScopedEventHash</innerclass>
    <innerclass refid="structvt_1_1trace_1_1_trace_scoped_note" prot="public">vt::trace::TraceScopedNote</innerclass>
    <innerclass refid="structvt_1_1trace_1_1_user_event_registry" prot="public">vt::trace::UserEventRegistry</innerclass>
    <innerclass refid="structvt_1_1trace_1_1vt__gz_file" prot="public">vt::trace::vt_gzFile</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1d" prot="public" static="no" strong="yes">
        <type>int32_t</type>
        <name>eTraceConstants</name>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da319f6b5fbfb85275879d449149167c7e" prot="public">
          <name>InvalidTraceType</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da67d5168b4f2b5424a3d118ea9ef99372" prot="public">
          <name>Creation</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da933e53e33f27ed240a0eb7a9e6b94c14" prot="public">
          <name>BeginProcessing</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1daa7d31e56ac5fe25c3f6428a0b204efba" prot="public">
          <name>EndProcessing</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da96bf1b732678e7cf773fe37c7841e174" prot="public">
          <name>Enqueue</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da39b05f67b082f7a27d7616d09f98954a" prot="public">
          <name>Dequeue</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da1d6f50408ca94554baa985218dd4fe94" prot="public">
          <name>BeginComputation</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da0d5ba4cd78a559f54b16584d58d231ab" prot="public">
          <name>EndComputation</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1daa88e8548ff90dfb2101e853549a6e085" prot="public">
          <name>BeginInterrupt</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1dae90a6cca7a2c508d5e1ce3ab001bb382" prot="public">
          <name>EndInterrupt</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da19244372c09c79f8cd692613d9797420" prot="public">
          <name>MessageRecv</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da052e139ef40865e0ea57809542259e2e" prot="public">
          <name>BeginTrace</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da22a9e52079c3ba87b855e9d83c31d54b" prot="public">
          <name>EndTrace</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1dab84a8f283221ed88a8bec0fdaf2d13b4" prot="public">
          <name>UserEvent</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1dab150de1fcda8b6535c4fab64f1e54d4e" prot="public">
          <name>BeginIdle</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da2dd778ead15b8f5225df691786cba86c" prot="public">
          <name>EndIdle</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da139b31a46ec7a806d66751cafd0d822f" prot="public">
          <name>BeginPack</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da9ba237cf1d372313b154c22e4de8a148" prot="public">
          <name>EndPack</name>
          <initializer>= 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da345ded25a364981430ac7be0702dd6ad" prot="public">
          <name>BeginUnpack</name>
          <initializer>= 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da83473e3dd00fc1a54eb21ea1b7e5e590" prot="public">
          <name>EndUnpack</name>
          <initializer>= 19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da1c59d19f5179646a2346647cf7898c35" prot="public">
          <name>CreationBcast</name>
          <initializer>= 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da290b95be3f6ea24e211b65a485f95138" prot="public">
          <name>CreationMulticast</name>
          <initializer>= 21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da6f47258ff208cf1cad4424f5031bb50b" prot="public">
          <name>BeginFunc</name>
          <initializer>= 22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1dac7bdf66ce4d86bdc8cb3ae7a08ef2896" prot="public">
          <name>EndFunc</name>
          <initializer>= 23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da5e5983c9162dc8f45b2154848599abbf" prot="public">
          <name>MemoryMalloc</name>
          <initializer>= 24</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da183cc2f17a6c69923fc44e71f41e21d2" prot="public">
          <name>MemoryFree</name>
          <initializer>= 25</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da8b3d24f749b695a052af82e2d1e6097e" prot="public">
          <name>UserSupplied</name>
          <initializer>= 26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1dad042d19d714f2a9996f219b290e9f293" prot="public">
          <name>MemoryUsageCurrent</name>
          <initializer>= 27</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da509a8f8444372bac7c6cfc7c481f1957" prot="public">
          <name>UserSuppliedNote</name>
          <initializer>= 28</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da7f1f128014669206fd5dd2da69c9e705" prot="public">
          <name>UserSuppliedBracketedNote</name>
          <initializer>= 29</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da1191f047047152bb875666aa7d54fccb" prot="public">
          <name>EndPhase</name>
          <initializer>= 30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da1804069086100b7787935bb9deab7302" prot="public">
          <name>SurrogateBlock</name>
          <initializer>= 31</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da0576dfaf01928a8726c8586a4f5dcc62" prot="public">
          <name>UserStat</name>
          <initializer>= 32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da566366b99702f7603997d1407afee876" prot="public">
          <name>BeginUserEventPair</name>
          <initializer>= 98</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1daa3a7bdadf312a942594ff66d98fe1675" prot="public">
          <name>EndUserEventPair</name>
          <initializer>= 99</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1da93e1a6af5dc75034578e8140d1c4dc1a" prot="public">
          <name>UserEventPair</name>
          <initializer>= 100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_constants.h" line="49" column="27" bodyfile="src/vt/trace/trace_constants.h" bodystart="49" bodyend="86"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79e" prot="public" static="no" strong="no">
        <type></type>
        <name>eTraceEnvelopeTypes</name>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79eab52a3c8440b59e6e4e823341c2235ead" prot="public">
          <name>NewChareMsg</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79ea16b796b829928034055e16221a3798d0" prot="public">
          <name>NewVChareMsg</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79ea73578cc48815262a4bbdaa2da8bdbc60" prot="public">
          <name>BocInitMsg</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79ea93ca49bcc6bded05165cb4efdbae6bb5" prot="public">
          <name>ForChareMsg</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79eaa3ce6e46f0554f800a109f72c6463a97" prot="public">
          <name>ForBocMsg</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79ea935f49fe60c938c9cc1b0dae945432c7" prot="public">
          <name>ForVidMsg</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79eaedb4167fe2517a9a6880da3d230441d2" prot="public">
          <name>FillVidMsg</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79ea7a9e606332d10af6e8e9c8d75d7efddb" prot="public">
          <name>DeleteVidMsg</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79ea8e6cd7fce645bd4666f05491d7ae9a21" prot="public">
          <name>RODataMsg</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79ea09bbab67779987ee507b5e261f92d8b9" prot="public">
          <name>ROMsgMsg</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79eaf238a00c29282b3dfa0e07371168fc93" prot="public">
          <name>StartExitMsg</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79ea586d1c3fef924d2b2f0c0a8580436086" prot="public">
          <name>ExitMsg</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79eace6c5e6f2ca4c2ec0d3257ec10740684" prot="public">
          <name>ReqStatMsg</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79ea6f7b858bb59c79485a8babe54de62e23" prot="public">
          <name>StatMsg</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79eaba14871248009cab8f27ec99089d6c44" prot="public">
          <name>StatDoneMsg</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79ea0652f454e578873eb4257d9bcaf4cb94" prot="public">
          <name>NodeBocInitMsg</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79ea66b4ad75943da332b46abecc82a58d6c" prot="public">
          <name>ForNodeBocMsg</name>
          <initializer>= 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79ead00a54412c9e53aae62181a452a7d3ff" prot="public">
          <name>ArrayEltInitMsg</name>
          <initializer>= 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79eabbc8fa262b92a316cd83bc9a1dfbc97b" prot="public">
          <name>ForArrayEltMsg</name>
          <initializer>= 19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a698098d397e4f62b8330d18279a3b79ea575ae87fc9cbb792ab28974dda7ff608" prot="public">
          <name>ForIDedObjMsg</name>
          <initializer>= 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_constants.h" line="90" column="25" bodyfile="src/vt/trace/trace_constants.h" bodystart="90" bodyend="111"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1trace_1a3ca7cf1ae2abfada66c406044aad2bc6" prot="public" static="no" strong="no">
        <type></type>
        <name>eUserEventLayoutBits</name>
        <enumvalue id="namespacevt_1_1trace_1a3ca7cf1ae2abfada66c406044aad2bc6ac56923da578010b0d0f49c47cc6ed18a" prot="public">
          <name>Manu</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a3ca7cf1ae2abfada66c406044aad2bc6a8c67b09b2de7f4bd3371d6239b02a045" prot="public">
          <name>Root</name>
          <initializer>= eUserEventLayoutBits::Manu + manu_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a3ca7cf1ae2abfada66c406044aad2bc6a6732f36a551215fcc6c89d5eab8c1478" prot="public">
          <name>Hash</name>
          <initializer>= eUserEventLayoutBits::Root + root_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a3ca7cf1ae2abfada66c406044aad2bc6a225a862f9f3aba0fb78351c8df4a0432" prot="public">
          <name>Node</name>
          <initializer>= eUserEventLayoutBits::Hash + hash_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1trace_1a3ca7cf1ae2abfada66c406044aad2bc6ae7b246c0e556cff074e238cd9a223076" prot="public">
          <name>ID</name>
          <initializer>= eUserEventLayoutBits::Node + node_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="71" column="26" bodyfile="src/vt/trace/trace_user_event.h" bodystart="71" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacevt_1_1trace_1aaddb48ba5ca26191fce6c8565b662322" prot="public" static="no">
        <type><ref refid="classvt_1_1trace_1_1_trace_containers" kindref="compound">TraceContainers</ref></type>
        <definition>typedef TraceContainers vt::trace::TraceContainersType</definition>
        <argsstring></argsstring>
        <name>TraceContainersType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.cc" line="70" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1trace_1a6e7b7f2c6cb0a14d5b01dde877174a71" prot="public" static="no">
        <type><ref refid="structvt_1_1trace_1_1_trace_lite_1aeb73e523d31829d3163c877b145afa2a" kindref="member">Trace::LogType</ref></type>
        <definition>typedef TraceLite::LogType vt::trace::LogType</definition>
        <argsstring></argsstring>
        <name>LogType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.cc" line="72" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1trace_1a3c14050715ba9eceaeff51fb3de64f2f" prot="public" static="no">
        <type>size_t</type>
        <definition>using vt::trace::TraceEntryIDType = typedef size_t</definition>
        <argsstring></argsstring>
        <name>TraceEntryIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_common.h" line="55" column="1" bodyfile="src/vt/trace/trace_common.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1trace_1a522028dd2a7d056f0ec3d417836fdecd" prot="public" static="no">
        <type>uint32_t</type>
        <definition>using vt::trace::TraceEntrySeqType = typedef uint32_t</definition>
        <argsstring></argsstring>
        <name>TraceEntrySeqType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_common.h" line="56" column="1" bodyfile="src/vt/trace/trace_common.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" prot="public" static="no">
        <type>uint32_t</type>
        <definition>using vt::trace::TraceEventIDType = typedef uint32_t</definition>
        <argsstring></argsstring>
        <name>TraceEventIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_common.h" line="62" column="1" bodyfile="src/vt/trace/trace_common.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1trace_1aeb598f45d67d41db7902e494f2f0ce59" prot="public" static="no">
        <type>size_t</type>
        <definition>using vt::trace::TraceMsgLenType = typedef size_t</definition>
        <argsstring></argsstring>
        <name>TraceMsgLenType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_common.h" line="63" column="1" bodyfile="src/vt/trace/trace_common.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1trace_1a70c43e0e1596eea236912d4197d3120a" prot="public" static="no">
        <type>int32_t</type>
        <definition>using vt::trace::UserSpecEventIDType = typedef int32_t</definition>
        <argsstring></argsstring>
        <name>UserSpecEventIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_common.h" line="64" column="1" bodyfile="src/vt/trace/trace_common.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" prot="public" static="no">
        <type>int64_t</type>
        <definition>using vt::trace::UserEventIDType = typedef int64_t</definition>
        <argsstring></argsstring>
        <name>UserEventIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_common.h" line="65" column="1" bodyfile="src/vt/trace/trace_common.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1trace_1a79b7fa947245c08d04a3ea67fbff2c30" prot="public" static="no">
        <type><ref refid="structvt_1_1trace_1_1_event" kindref="compound">Event</ref></type>
        <definition>using vt::trace::TraceEventType = typedef Event</definition>
        <argsstring></argsstring>
        <name>TraceEventType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_containers.h" line="55" column="1" bodyfile="src/vt/trace/trace_containers.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1trace_1afc5456ac95b0d3e9bb63a21597f5660c" prot="public" static="no">
        <type><ref refid="structvt_1_1trace_1_1_event_class" kindref="compound">EventClass</ref></type>
        <definition>using vt::trace::EventClassType = typedef EventClass</definition>
        <argsstring></argsstring>
        <name>EventClassType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_containers.h" line="56" column="1" bodyfile="src/vt/trace/trace_containers.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1trace_1a80118aaa48fed940af3899800bba2303" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1trace_1a3c14050715ba9eceaeff51fb3de64f2f" kindref="member">TraceEntryIDType</ref>, <ref refid="namespacevt_1_1trace_1a79b7fa947245c08d04a3ea67fbff2c30" kindref="member">TraceEventType</ref> &gt;</type>
        <definition>using vt::trace::TraceContainerEventType = typedef std::unordered_map&lt;TraceEntryIDType, TraceEventType&gt;</definition>
        <argsstring></argsstring>
        <name>TraceContainerEventType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_containers.h" line="57" column="1" bodyfile="src/vt/trace/trace_containers.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1trace_1a352c8799ee88afa3f1b7008952ed8485" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1trace_1a3c14050715ba9eceaeff51fb3de64f2f" kindref="member">TraceEntryIDType</ref>, <ref refid="namespacevt_1_1trace_1afc5456ac95b0d3e9bb63a21597f5660c" kindref="member">EventClassType</ref> &gt;</type>
        <definition>using vt::trace::TraceContainerEventClassType = typedef std::unordered_map&lt;TraceEntryIDType, EventClassType&gt;</definition>
        <argsstring></argsstring>
        <name>TraceContainerEventClassType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_containers.h" line="58" column="1" bodyfile="src/vt/trace/trace_containers.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1trace_1adaea26e8c53d9ebab065c1d72f70abea" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1_1trace_1a3c14050715ba9eceaeff51fb3de64f2f" kindref="member">TraceEntryIDType</ref></type>
        <definition>constexpr const TraceEntryIDType vt::trace::no_trace_entry_id</definition>
        <argsstring></argsstring>
        <name>no_trace_entry_id</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_common.h" line="58" column="41" bodyfile="src/vt/trace/trace_common.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1trace_1aa1ced3ff2446bdd84d3432b7e507e1bc" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1_1trace_1a522028dd2a7d056f0ec3d417836fdecd" kindref="member">TraceEntrySeqType</ref></type>
        <definition>constexpr const TraceEntrySeqType vt::trace::no_trace_entry_seq</definition>
        <argsstring></argsstring>
        <name>no_trace_entry_seq</name>
        <initializer>= ~0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_common.h" line="59" column="42" bodyfile="src/vt/trace/trace_common.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1trace_1a6de2caa9475c1297eb3ac81d8444c532" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref></type>
        <definition>constexpr const TraceEventIDType vt::trace::no_trace_event</definition>
        <argsstring></argsstring>
        <name>no_trace_event</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_common.h" line="67" column="41" bodyfile="src/vt/trace/trace_common.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1trace_1a8e9e089c0d11d47da8fd0f7b11eba440" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref></type>
        <definition>constexpr const BitCountType vt::trace::trace_event_num_bits</definition>
        <argsstring></argsstring>
        <name>trace_event_num_bits</name>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_common.h" line="68" column="37" bodyfile="src/vt/trace/trace_common.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1trace_1a8c0d723ef0faa375724c0b4b7a7c4115" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>constexpr const UserEventIDType vt::trace::no_user_event_id</definition>
        <argsstring></argsstring>
        <name>no_user_event_id</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_common.h" line="69" column="40" bodyfile="src/vt/trace/trace_common.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1trace_1a6cb840bf22a32a6db30bec6e733a028d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>constexpr const NodeType vt::trace::designated_root_node</definition>
        <argsstring></argsstring>
        <name>designated_root_node</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_common.h" line="71" column="33" bodyfile="src/vt/trace/trace_common.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1trace_1a9476f352429ed2f39fbdec91bc1a3d64" prot="public" static="yes" mutable="no">
        <type><ref refid="namespacevt_1_1trace_1afc5456ac95b0d3e9bb63a21597f5660c" kindref="member">EventClassType</ref></type>
        <definition>EventClassType vt::trace::not_found_</definition>
        <argsstring></argsstring>
        <name>not_found_</name>
        <initializer>= <ref refid="namespacevt_1_1trace_1afc5456ac95b0d3e9bb63a21597f5660c" kindref="member">EventClassType</ref>{
  no_trace_entry_id, no_trace_entry_seq, std::string{}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_registry.cc" line="160" column="23" bodyfile="src/vt/trace/trace_registry.cc" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1trace_1a930a4e3db001b399c0ecedc832ad3596" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref></type>
        <definition>constexpr const BitCountType vt::trace::user_bits</definition>
        <argsstring></argsstring>
        <name>user_bits</name>
        <initializer>= <ref refid="namespacevt_1a34b3eb2eea8db3cf4ae27ced35b19b46" kindref="member">BitCounterType</ref>&lt;<ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref>&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="64" column="37" bodyfile="src/vt/trace/trace_user_event.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1trace_1a21e8474169fb5aa67e600bb8bc77fc75" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref></type>
        <definition>constexpr const BitCountType vt::trace::root_bits</definition>
        <argsstring></argsstring>
        <name>root_bits</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="65" column="37" bodyfile="src/vt/trace/trace_user_event.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1trace_1a96e4f969fceb2f99d00e7d28f2402782" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref></type>
        <definition>constexpr const BitCountType vt::trace::manu_bits</definition>
        <argsstring></argsstring>
        <name>manu_bits</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="66" column="37" bodyfile="src/vt/trace/trace_user_event.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1trace_1a6ec19f3856b53c6c4132fb6f5d077557" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref></type>
        <definition>constexpr const BitCountType vt::trace::hash_bits</definition>
        <argsstring></argsstring>
        <name>hash_bits</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="67" column="37" bodyfile="src/vt/trace/trace_user_event.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1trace_1a7cf145b90949f4abe40bafdcdcd08538" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref></type>
        <definition>constexpr const BitCountType vt::trace::node_bits</definition>
        <argsstring></argsstring>
        <name>node_bits</name>
        <initializer>= <ref refid="namespacevt_1a34b3eb2eea8db3cf4ae27ced35b19b46" kindref="member">BitCounterType</ref>&lt;<ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref>&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="68" column="37" bodyfile="src/vt/trace/trace_user_event.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1trace_1a3a820bb5bac0a251c4d5763b3788de53" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref></type>
        <definition>constexpr const BitCountType vt::trace::spec_bits</definition>
        <argsstring></argsstring>
        <name>spec_bits</name>
        <initializer>= user_bits - (root_bits + node_bits)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="69" column="37" bodyfile="src/vt/trace/trace_user_event.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1trace_1a26d638ea5b121d4b01fac8fcdc0eaa3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::reducedEventsHan</definition>
        <argsstring>([[maybe_unused]] const UserEventRegistry &amp;gathered_user_events)</argsstring>
        <name>reducedEventsHan</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] const <ref refid="structvt_1_1trace_1_1_user_event_registry" kindref="compound">UserEventRegistry</ref> &amp;</type>
          <declname>gathered_user_events</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.cc" line="241" column="6" bodyfile="src/vt/trace/trace.cc" bodystart="241" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1ad8215db5be893bda922be84a8bc586e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::insertNewUserEvent</definition>
        <argsstring>([[maybe_unused]] UserEventIDType event, [[maybe_unused]] std::string const &amp;name)</argsstring>
        <name>insertNewUserEvent</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.cc" line="250" column="6" bodyfile="src/vt/trace/trace.cc" bodystart="250" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1a5132ab0ff1087dac8cf758b4f014bf6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::reducedEventsHan</definition>
        <argsstring>(const UserEventRegistry &amp;gathered_user_events)</argsstring>
        <name>reducedEventsHan</name>
        <param>
          <type>const <ref refid="structvt_1_1trace_1_1_user_event_registry" kindref="compound">UserEventRegistry</ref> &amp;</type>
          <declname>gathered_user_events</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="72" column="6" declfile="src/vt/trace/trace.h" declline="72" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1ac7c4c6c55b38e5c03f0e541946bcf375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a3c14050715ba9eceaeff51fb3de64f2f" kindref="member">TraceEntryIDType</ref></type>
        <definition>TraceEntryIDType vt::trace::getEventId</definition>
        <argsstring>(std::string const &amp;str)</argsstring>
        <name>getEventId</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_registry.cc" line="55" column="18" bodyfile="src/vt/trace/trace_registry.cc" bodystart="55" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1ac5d9cb0fb4e3151a7d613bac126c2143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::registerEventCollective</definition>
        <argsstring>([[maybe_unused]] std::string const &amp;name)</argsstring>
        <name>registerEventCollective</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.cc" line="54" column="17" bodyfile="src/vt/trace/trace_user.cc" bodystart="54" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1a52a73af92d5434f89ee960e8830f09ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::registerEventRooted</definition>
        <argsstring>([[maybe_unused]] std::string const &amp;name)</argsstring>
        <name>registerEventRooted</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.cc" line="64" column="17" bodyfile="src/vt/trace/trace_user.cc" bodystart="64" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1aefbbd34012ffc01030aad7e3ed1b05ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::registerEventHashed</definition>
        <argsstring>([[maybe_unused]] std::string const &amp;name)</argsstring>
        <name>registerEventHashed</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.cc" line="72" column="17" bodyfile="src/vt/trace/trace_user.cc" bodystart="72" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1a780c57bc3a00801318ce086479b05251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::addUserEvent</definition>
        <argsstring>([[maybe_unused]] UserEventIDType event)</argsstring>
        <name>addUserEvent</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.cc" line="80" column="6" bodyfile="src/vt/trace/trace_user.cc" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1ab2de61fae25783f0f209470372c8f6d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::addUserNote</definition>
        <argsstring>([[maybe_unused]] std::string const &amp;note)</argsstring>
        <name>addUserNote</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] std::string const &amp;</type>
          <declname>note</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.cc" line="86" column="6" bodyfile="src/vt/trace/trace_user.cc" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1ab2821c4abac4417f0c9e88c67ed57435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::addUserData</definition>
        <argsstring>([[maybe_unused]] int32_t data)</argsstring>
        <name>addUserData</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] int32_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.cc" line="92" column="6" bodyfile="src/vt/trace/trace_user.cc" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1aa40ddb76a423d7455cddc67d1ec809e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::addUserNotePre</definition>
        <argsstring>([[maybe_unused]] std::string const &amp;in_note, [[maybe_unused]] TraceEventIDType const in_event)</argsstring>
        <name>addUserNotePre</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] std::string const &amp;</type>
          <declname>in_note</declname>
        </param>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref> const</type>
          <declname>in_event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.cc" line="98" column="6" bodyfile="src/vt/trace/trace_user.cc" bodystart="98" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1adf857bfe26769050d0a5d484bfac2c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::addUserNoteEpi</definition>
        <argsstring>([[maybe_unused]] std::string const &amp;in_note, [[maybe_unused]] TraceEventIDType const in_event)</argsstring>
        <name>addUserNoteEpi</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] std::string const &amp;</type>
          <declname>in_note</declname>
        </param>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] <ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref> const</type>
          <declname>in_event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.cc" line="109" column="6" bodyfile="src/vt/trace/trace_user.cc" bodystart="109" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1a91e24c3e4f4145f8178050065befeda6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::registerEventCollective</definition>
        <argsstring>(std::string const &amp;name)</argsstring>
        <name>registerEventCollective</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Register a user event collectively. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the user event ID for logging </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.h" line="63" column="17" declfile="src/vt/trace/trace_user.h" declline="63" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1ab2627c07d28361b471d0b9008de2f20c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::registerEventRooted</definition>
        <argsstring>(std::string const &amp;name)</argsstring>
        <name>registerEventRooted</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Register a user event (rooted) on a single node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the user event ID for logging </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.h" line="72" column="17" declfile="src/vt/trace/trace_user.h" declline="72" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1a9d0309860e6216c541fe5c3af74a5426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::registerEventHashed</definition>
        <argsstring>(std::string const &amp;name)</argsstring>
        <name>registerEventHashed</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Idempotent registration of a user event on a single node. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This call can be dangerous because while it does allow impromptu user event creation, any collisions in the hash will cause multiple events to be conflated to the same event</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the user event ID for logging </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.h" line="85" column="17" declfile="src/vt/trace/trace_user.h" declline="85" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1ac973a9573bd3cc0a3fead674a4551ac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::addUserEvent</definition>
        <argsstring>(UserEventIDType event)</argsstring>
        <name>addUserEvent</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para><ref refid="structvt_1_1trace_1_1_log" kindref="compound">Log</ref> a user event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>the event ID to log </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.h" line="92" column="6" declfile="src/vt/trace/trace_user.h" declline="92" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1a40f3744bfeb2281ce300d12271f3d48c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::addUserNote</definition>
        <argsstring>(std::string const &amp;note)</argsstring>
        <name>addUserNote</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>note</declname>
        </param>
        <briefdescription>
<para><ref refid="structvt_1_1trace_1_1_log" kindref="compound">Log</ref> a user note. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">note</parametername>
</parameternamelist>
<parameterdescription>
<para>the note to log </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.h" line="99" column="6" declfile="src/vt/trace/trace_user.h" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1a0ec1ac44fb179f29245a36b887f588f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::addUserData</definition>
        <argsstring>(int32_t data)</argsstring>
        <name>addUserData</name>
        <param>
          <type>int32_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para><ref refid="structvt_1_1trace_1_1_log" kindref="compound">Log</ref> user data as an integer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>the integer to log </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.h" line="106" column="6" declfile="src/vt/trace/trace_user.h" declline="106" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1ac0b0b0a9f767ff83a2b97bb8d013a74f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::addUserNotePre</definition>
        <argsstring>(std::string const &amp;note, TraceEventIDType const event)</argsstring>
        <name>addUserNotePre</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>note</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref> const</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para><ref refid="structvt_1_1trace_1_1_log" kindref="compound">Log</ref> the start for a bracketed user event with a note. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>See <computeroutput><ref refid="structvt_1_1trace_1_1_trace_scoped_note" kindref="compound">TraceScopedNote</ref></computeroutput> for a safer scope-based logging mechanism for bracketed user events with a note.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">note</parametername>
</parameternamelist>
<parameterdescription>
<para>the note </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>the pre-registered user event ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.h" line="117" column="6" declfile="src/vt/trace/trace_user.h" declline="117" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1a44c28c2bd54ed805974c79c8aea5a55e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::addUserNoteEpi</definition>
        <argsstring>(std::string const &amp;note, TraceEventIDType const event)</argsstring>
        <name>addUserNoteEpi</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>note</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref> const</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para><ref refid="structvt_1_1trace_1_1_log" kindref="compound">Log</ref> the end for a bracketed user event with a note. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>See <computeroutput><ref refid="structvt_1_1trace_1_1_trace_scoped_note" kindref="compound">TraceScopedNote</ref></computeroutput> for a safer scope-based logging mechanism for bracketed user events with a note.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">note</parametername>
</parameternamelist>
<parameterdescription>
<para>the note </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>the pre-registered user event ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user.h" line="128" column="6" declfile="src/vt/trace/trace_user.h" declline="128" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1a74637d8f5a991b24c86a0060d2346732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1trace_1_1_user_event_registry" kindref="compound">UserEventRegistry</ref></type>
        <definition>UserEventRegistry vt::trace::operator+</definition>
        <argsstring>(UserEventRegistry r1, UserEventRegistry const &amp;r2)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structvt_1_1trace_1_1_user_event_registry" kindref="compound">UserEventRegistry</ref></type>
          <declname>r1</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1trace_1_1_user_event_registry" kindref="compound">UserEventRegistry</ref> const &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.cc" line="135" column="19" bodyfile="src/vt/trace/trace_user_event.cc" bodystart="135" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1trace_1acbaabde4144cf5291fcc65983e7dc7a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::insertNewUserEvent</definition>
        <argsstring>(UserEventIDType event, std::string const &amp;name)</argsstring>
        <name>insertNewUserEvent</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace_user_event.h" line="79" column="6" declfile="src/vt/trace/trace_user_event.h" declline="79" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/trace/trace.cc" line="68" column="26"/>
  </compounddef>
</doxygen>
