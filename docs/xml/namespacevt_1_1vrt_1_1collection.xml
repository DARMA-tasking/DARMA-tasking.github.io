<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacevt_1_1vrt_1_1collection" kind="namespace" language="C++">
    <compoundname>vt::vrt::collection</compoundname>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_base_collection_elm_proxy" prot="public">vt::vrt::collection::BaseCollectionElmProxy</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_base_collection_proxy" prot="public">vt::vrt::collection::BaseCollectionProxy</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_base_elm_proxy" prot="public">vt::vrt::collection::BaseElmProxy</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_base_holder" prot="public">vt::vrt::collection::BaseHolder</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_broadcastable" prot="public">vt::vrt::collection::Broadcastable</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection" prot="public">vt::vrt::collection::Collection</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection_base" prot="public">vt::vrt::collection::CollectionBase</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection_context_holder" prot="public">vt::vrt::collection::CollectionContextHolder</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection_directory" prot="public">vt::vrt::collection::CollectionDirectory</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection_elm_attorney" prot="public">vt::vrt::collection::CollectionElmAttorney</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection_elm_destroy_attorney" prot="public">vt::vrt::collection::CollectionElmDestroyAttorney</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection_holder" prot="public">vt::vrt::collection::CollectionHolder</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection_info" prot="public">vt::vrt::collection::CollectionInfo</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection_manager" prot="public">vt::vrt::collection::CollectionManager</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection_message" prot="public">vt::vrt::collection::CollectionMessage</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy" prot="public">vt::vrt::collection::CollectionProxy</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection_stamp_msg" prot="public">vt::vrt::collection::CollectionStampMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection_type_attorney" prot="public">vt::vrt::collection::CollectionTypeAttorney</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_collection_untyped_proxy" prot="public">vt::vrt::collection::CollectionUntypedProxy</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_col_msg_traits" prot="public">vt::vrt::collection::ColMsgTraits</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_col_msg_wrap" prot="public">vt::vrt::collection::ColMsgWrap</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_col_msg_wrap_tag_type" prot="public">vt::vrt::collection::ColMsgWrapTagType</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_default_map" prot="public">vt::vrt::collection::DefaultMap</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_default_map_base" prot="public">vt::vrt::collection::DefaultMapBase</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_destroyable" prot="public">vt::vrt::collection::Destroyable</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_destroy_elm_msg" prot="public">vt::vrt::collection::DestroyElmMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_destroy_handlers" prot="public">vt::vrt::collection::DestroyHandlers</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_destroy_msg" prot="public">vt::vrt::collection::DestroyMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_dispatch_collection" prot="public">vt::vrt::collection::DispatchCollection</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_dispatch_collection_base" prot="public">vt::vrt::collection::DispatchCollectionBase</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_element_holder" prot="public">vt::vrt::collection::ElementHolder</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_elm_insertable" prot="public">vt::vrt::collection::ElmInsertable</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_entire_holder" prot="public">vt::vrt::collection::EntireHolder</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_gettable" prot="public">vt::vrt::collection::Gettable</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_has_migrate" prot="public">vt::vrt::collection::HasMigrate</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_holder" prot="public">vt::vrt::collection::Holder</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_indexable" prot="public">vt::vrt::collection::Indexable</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_insert_msg" prot="public">vt::vrt::collection::InsertMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_insert_null_msg" prot="public">vt::vrt::collection::InsertNullMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_invokable" prot="public">vt::vrt::collection::Invokable</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_mapped_node" prot="public">vt::vrt::collection::MappedNode</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_migratable" prot="public">vt::vrt::collection::Migratable</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_migrate_handlers" prot="public">vt::vrt::collection::MigrateHandlers</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base" prot="public">vt::vrt::collection::MigrateHookBase</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_interface" prot="public">vt::vrt::collection::MigrateHookInterface</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_migrate_msg" prot="public">vt::vrt::collection::MigrateMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_modifier_token" prot="public">vt::vrt::collection::ModifierToken</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_modifyable" prot="public">vt::vrt::collection::Modifyable</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_elm_traits" prot="public">vt::vrt::collection::ProxyCollectionElmTraits</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_traits" prot="public">vt::vrt::collection::ProxyCollectionTraits</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable" prot="public">vt::vrt::collection::RDMAable</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_reducable" prot="public">vt::vrt::collection::Reducable</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_registrar_vrt" prot="public">vt::vrt::collection::RegistrarVrt</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_registrar_wrapper_vrt" prot="public">vt::vrt::collection::RegistrarWrapperVrt</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_sendable" prot="public">vt::vrt::collection::Sendable</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_typeless_holder" prot="public">vt::vrt::collection::TypelessHolder</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_untyped_collection" prot="public">vt::vrt::collection::UntypedCollection</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_default_map_3_01_collection_t_00_01typename_01std_1_1enable__id31d055881d6867942086ee5834ad7b4" prot="public">vt::vrt::collection::DefaultMap&lt; CollectionT, typename std::enable_if_t&lt; std::is_same&lt; typename CollectionT::IndexType, typename ::vt::index::Index3D&lt; typename CollectionT::IndexType::DenseIndexType &gt; &gt;::value &gt;&gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_default_map_3_01_collection_t_00_01typename_01std_1_1enable__ib7e55b659c64f165e6a671fb7294e371" prot="public">vt::vrt::collection::DefaultMap&lt; CollectionT, typename std::enable_if_t&lt; std::is_same&lt; typename CollectionT::IndexType, typename ::vt::index::Index2D&lt; typename CollectionT::IndexType::DenseIndexType &gt; &gt;::value &gt;&gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_default_map_3_01_collection_t_00_01typename_01std_1_1enable__i0c13cd14d7af17b34311bb8ce93d9804" prot="public">vt::vrt::collection::DefaultMap&lt; CollectionT, typename std::enable_if_t&lt; std::is_same&lt; typename CollectionT::IndexType, typename ::vt::index::Index1D&lt; typename CollectionT::IndexType::DenseIndexType &gt; &gt;::value &gt;&gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1virtual__proxy__elm__empty" prot="public">vt::vrt::collection::virtual_proxy_elm_empty</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_virtual_elem_proxy_builder" prot="public">vt::vrt::collection::VirtualElemProxyBuilder</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_vrt_dispatch_holder" prot="public">vt::vrt::collection::VrtDispatchHolder</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1_vrt_elm_proxy" prot="public">vt::vrt::collection::VrtElmProxy</innerclass>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection_1_1balance">vt::vrt::collection::balance</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection_1_1col__proxy">vt::vrt::collection::col_proxy</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection_1_1detail">vt::vrt::collection::detail</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection_1_1elm__proxy">vt::vrt::collection::elm_proxy</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection_1_1lb">vt::vrt::collection::lb</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection_1_1listener">vt::vrt::collection::listener</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection_1_1param">vt::vrt::collection::param</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection_1_1storage">vt::vrt::collection::storage</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1ad221ad8aea9e586689b4335f5bcd9804" prot="public" static="no">
        <name>MigrateStatus</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1ad221ad8aea9e586689b4335f5bcd9804a6fcc5f078b0602e1e322782c537538c2" prot="public">
          <name>MigratedToRemote</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1ad221ad8aea9e586689b4335f5bcd9804a647a5be7aa591e4cf8c5119f2a3d5634" prot="public">
          <name>MigrateInLocal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1ad221ad8aea9e586689b4335f5bcd9804ac91f9652bd569b0888f3c2b24b3a6f62" prot="public">
          <name>ElementNotLocal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1ad221ad8aea9e586689b4335f5bcd9804a78899246a56068be54717497c5ccc112" prot="public">
          <name>NoMigrationNecessary</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1ad221ad8aea9e586689b4335f5bcd9804afca2d7bacf50e8f90b444635d97b497f" prot="public">
          <name>MigrateError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1ad221ad8aea9e586689b4335f5bcd9804a5470923d68625570211944d98a6a0562" prot="public">
          <name>PendingLocalAction</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1ad221ad8aea9e586689b4335f5bcd9804a54ee5350e7d23f1bd354973851799599" prot="public">
          <name>DestroyedDuringMigrated</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/migrate/migrate_status.h" line="51" column="1" bodyfile="src/vt/vrt/collection/migrate/migrate_status.h" bodystart="51" bodyend="59"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1a216d0b183a155808303b12c258f259a0" prot="public" static="no">
        <name>eVirtualCollectionElemProxyBits</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1a216d0b183a155808303b12c258f259a0a0af778d966820c09e81e6d33599fa217" prot="public">
          <name>Index</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/proxy_builder/elm_proxy_builder.h" line="56" column="1" bodyfile="src/vt/vrt/collection/proxy_builder/elm_proxy_builder.h" bodystart="56" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1ab2e800e37837a2afe33996fe8f5fabea" prot="public" static="no">
        <type>void(*)(::<ref refid="namespacevt_1ac34f95a5e2b8109b55bfba52b074443d" kindref="member">vt::BaseMessage</ref> *, <ref refid="structvt_1_1vrt_1_1collection_1_1_untyped_collection" kindref="compound">UntypedCollection</ref> *)</type>
        <definition>using vt::vrt::collection::ActiveColFnPtrType = typedef void(*)( ::vt::BaseMessage*, UntypedCollection* )</definition>
        <argsstring></argsstring>
        <name>ActiveColFnPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/active/active_funcs.h" line="54" column="1" bodyfile="src/vt/vrt/collection/active/active_funcs.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" prot="public" static="no">
        <type>void(MsgT *, ColT *)</type>
        <definition>using vt::vrt::collection::ActiveColTypedFnType = typedef void(MsgT*, ColT*)</definition>
        <argsstring></argsstring>
        <name>ActiveColTypedFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/active/active_funcs.h" line="59" column="1" bodyfile="src/vt/vrt/collection/active/active_funcs.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1aa4614a0de67301c62259b0763a86f473" prot="public" static="no">
        <type>void(UntypedCollection::*)(::<ref refid="namespacevt_1ac34f95a5e2b8109b55bfba52b074443d" kindref="member">vt::BaseMessage</ref> *)</type>
        <definition>using vt::vrt::collection::ActiveColMemberFnPtrType = typedef void(UntypedCollection::*)(::vt::BaseMessage*)</definition>
        <argsstring></argsstring>
        <name>ActiveColMemberFnPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/active/active_funcs.h" line="61" column="1" bodyfile="src/vt/vrt/collection/active/active_funcs.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" prot="public" static="no">
        <type>void(ColT::*)(MsgT *)</type>
        <definition>using vt::vrt::collection::ActiveColMemberTypedFnType = typedef void(ColT::*)(MsgT*)</definition>
        <argsstring></argsstring>
        <name>ActiveColMemberTypedFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/active/active_funcs.h" line="65" column="1" bodyfile="src/vt/vrt/collection/active/active_funcs.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1af50831782f9d77f86d626f858f295c37" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1ae295e18699146815bb7d7674594d95d7" kindref="member">auto_registry::AutoHandlerType</ref></type>
        <definition>using vt::vrt::collection::AutoHandlerType = typedef auto_registry::AutoHandlerType</definition>
        <argsstring></argsstring>
        <name>AutoHandlerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/dispatch/registry.h" line="56" column="1" bodyfile="src/vt/vrt/collection/dispatch/registry.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1a9e2462f78f56998464ffc7f35369c70f" prot="public" static="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_dispatch_collection_base" kindref="compound">DispatchCollectionBase</ref></type>
        <definition>using vt::vrt::collection::DispatchBaseType = typedef DispatchCollectionBase</definition>
        <argsstring></argsstring>
        <name>DispatchBaseType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/dispatch/registry.h" line="57" column="1" bodyfile="src/vt/vrt/collection/dispatch/registry.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1aa3b9731ae16d60fac43d68840f3606a5" prot="public" static="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_dispatch_collection_base" kindref="compound">DispatchCollectionBase</ref> *</type>
        <definition>using vt::vrt::collection::DispatchBasePtrType = typedef DispatchCollectionBase*</definition>
        <argsstring></argsstring>
        <name>DispatchBasePtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/dispatch/registry.h" line="58" column="1" bodyfile="src/vt/vrt/collection/dispatch/registry.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1a124f83d203352b6bccc4f12ca489b68b" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1_dispatch_collection_base" kindref="compound">DispatchCollectionBase</ref> &gt;</type>
        <definition>using vt::vrt::collection::DispatchBaseOwningPtrType = typedef std::unique_ptr&lt;DispatchCollectionBase&gt;</definition>
        <argsstring></argsstring>
        <name>DispatchBaseOwningPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/dispatch/registry.h" line="59" column="1" bodyfile="src/vt/vrt/collection/dispatch/registry.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1aecdad7ed4df3be1bab2a6bb9c5945964" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1a124f83d203352b6bccc4f12ca489b68b" kindref="member">DispatchBaseOwningPtrType</ref> &gt;</type>
        <definition>using vt::vrt::collection::RegistryTLType = typedef std::vector&lt;DispatchBaseOwningPtrType&gt;</definition>
        <argsstring></argsstring>
        <name>RegistryTLType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/dispatch/registry.h" line="60" column="1" bodyfile="src/vt/vrt/collection/dispatch/registry.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1a1bbc628be0955797f2d45227ee526346" prot="public" static="no">
        <type><ref refid="namespacevt_1a0cb65f2151629893480ef391def4e733" kindref="member">LocationRoutedMsg</ref>&lt; ::<ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">vt::vrt::VirtualElmProxyType</ref>&lt; ColT, typename ColT::IndexType &gt;, MessageT &gt;</type>
        <definition>using vt::vrt::collection::RoutedMessageType = typedef LocationRoutedMsg&lt; ::vt::vrt::VirtualElmProxyType&lt;ColT, typename ColT::IndexType&gt;, MessageT &gt;</definition>
        <argsstring></argsstring>
        <name>RoutedMessageType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/messages/user.h" line="61" column="1" bodyfile="src/vt/vrt/collection/messages/user.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1ad67e34b0fc744ae35557e8619f5f0a43" prot="public" static="yes" mutable="no">
        <type>struct vt::vrt::collection::ColMsgWrapTagType</type>
        <definition>struct vt::vrt::collection::ColMsgWrapTagType  vt::vrt::collection::ColMsgWrapTag</definition>
        <argsstring></argsstring>
        <name>ColMsgWrapTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/messages/user.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1a95fa6257743d33b11eb1921a4765f6a8" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref> const</type>
        <definition>constexpr BitCountType const vt::vrt::collection::virtual_elm_index_num_bits</definition>
        <argsstring></argsstring>
        <name>virtual_elm_index_num_bits</name>
        <initializer>=
  <ref refid="namespacevt_1a34b3eb2eea8db3cf4ae27ced35b19b46" kindref="member">BitCounterType</ref>&lt;<ref refid="namespacevt_1a913e1f07b5228dd8bb64040dc6dcea14" kindref="member">UniqueIndexBitType</ref>&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/proxy_builder/elm_proxy_builder.h" line="52" column="1" bodyfile="src/vt/vrt/collection/proxy_builder/elm_proxy_builder.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1a0f0254032e1772ef81ab0fe28a401457" prot="public" static="yes" mutable="no">
        <type>struct vt::vrt::collection::virtual_proxy_elm_empty</type>
        <definition>struct vt::vrt::collection::virtual_proxy_elm_empty  vt::vrt::collection::virtual_proxy_elm_empty_tag</definition>
        <argsstring></argsstring>
        <name>virtual_proxy_elm_empty_tag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/base_elm_proxy.h" line="57" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1a37734c53d0e2984a2f914b4d0561ea30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1aecdad7ed4df3be1bab2a6bb9c5945964" kindref="member">RegistryTLType</ref> &amp;</type>
        <definition>RegistryTLType &amp; vt::vrt::collection::getTLRegistry</definition>
        <argsstring>()</argsstring>
        <name>getTLRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/dispatch/registry.h" line="62" column="1" bodyfile="src/vt/vrt/collection/dispatch/registry.impl.h" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1a649287c1f71fd197febb94ecafbb3ca8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1af50831782f9d77f86d626f858f295c37" kindref="member">AutoHandlerType</ref></type>
        <definition>AutoHandlerType vt::vrt::collection::registerVrtDispatch</definition>
        <argsstring>()</argsstring>
        <name>registerVrtDispatch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/dispatch/registry.h" line="81" column="1" bodyfile="src/vt/vrt/collection/dispatch/registry.impl.h" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1a5d5e4ddb8eeaea0b7d0d5ff6917a829e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1aa3b9731ae16d60fac43d68840f3606a5" kindref="member">DispatchBasePtrType</ref></type>
        <definition>DispatchBasePtrType vt::vrt::collection::getDispatch</definition>
        <argsstring>(AutoHandlerType const han)</argsstring>
        <name>getDispatch</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1af50831782f9d77f86d626f858f295c37" kindref="member">AutoHandlerType</ref> const</type>
          <declname>han</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/dispatch/registry.h" line="83" column="1" bodyfile="src/vt/vrt/collection/dispatch/registry.impl.h" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1ae4a11c02df4ec2be06edba8ecca82683" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1af50831782f9d77f86d626f858f295c37" kindref="member">AutoHandlerType</ref></type>
        <definition>AutoHandlerType vt::vrt::collection::makeVrtDispatch</definition>
        <argsstring>(VirtualProxyType const &amp;default_proxy=no_vrt_proxy)</argsstring>
        <name>makeVrtDispatch</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>default_proxy</declname>
          <defval>no_vrt_proxy</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/dispatch/registry.h" line="86" column="1" bodyfile="src/vt/vrt/collection/dispatch/registry.impl.h" bodystart="82" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1aba53c1c5f5d08b1ca34097046d285a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1aa3b9731ae16d60fac43d68840f3606a5" kindref="member">DispatchBasePtrType</ref></type>
        <definition>DispatchBasePtrType vt::vrt::collection::getDispatcher</definition>
        <argsstring>(auto_registry::AutoHandlerType const han)</argsstring>
        <name>getDispatcher</name>
        <param>
          <type><ref refid="namespacevt_1_1auto__registry_1ae295e18699146815bb7d7674594d95d7" kindref="member">auto_registry::AutoHandlerType</ref> const</type>
          <declname>han</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.cc" line="82" column="1" bodyfile="src/vt/vrt/collection/manager.cc" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1a45a536f39c0184e25512607398b7c364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; vt::vrt::collection::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, VrtElmProxy&lt; ColT, IndexT &gt; const &amp;vrt)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_vrt_elm_proxy" kindref="compound">VrtElmProxy</ref>&lt; ColT, IndexT &gt; const &amp;</type>
          <declname>vrt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/collection_elm_proxy.h" line="100" column="1" bodyfile="src/vt/vrt/proxy/collection_elm_proxy.h" bodystart="100" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/context/runnable_context/collection.h" line="49" column="1"/>
  </compounddef>
</doxygen>
