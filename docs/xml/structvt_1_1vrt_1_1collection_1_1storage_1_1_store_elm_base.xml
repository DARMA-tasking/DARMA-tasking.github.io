<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>vt::vrt::collection::storage::StoreElmBase</compoundname>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd" prot="public" virt="non-virtual">vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_f645d7011e081ebef1092328b0917bfc" prot="public" virt="non-virtual">vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;</derivedcompoundref>
    <includes refid="store__elm_8h" local="no">store_elm.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a7bd87e77194a384ecb0a7450d9e7a24a" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::storage::StoreElmBase::dump_to_json_</definition>
        <argsstring></argsstring>
        <name>dump_to_json_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="190" column="8" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a2818c3e0d6a4c0705170f98c0b51347e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::storage::StoreElmBase::provide_to_lb_</definition>
        <argsstring></argsstring>
        <name>provide_to_lb_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="191" column="8" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1ac60d51135f5498642631bd0d8e515a20" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::storage::StoreElmBase::dump_to_attributes_</definition>
        <argsstring></argsstring>
        <name>dump_to_attributes_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="192" column="8" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1ace4bb0073e5de18f3743ca10c31fdf2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::storage::StoreElmBase::checkpoint_virtual_serialize_root</definition>
        <argsstring>() using json</argsstring>
        <name>checkpoint_virtual_serialize_root</name>
        <briefdescription>
<para>uses polymorphic serialization </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="66" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a7fa798418159b33d18f1b4a687c727c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::storage::StoreElmBase::StoreElmBase</definition>
        <argsstring>()=default</argsstring>
        <name>StoreElmBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="70" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1af8642b88e64da984612fd8c7ccdb7778" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::storage::StoreElmBase::StoreElmBase</definition>
        <argsstring>(bool dump_to_json, bool provide_to_lb, bool dump_to_attributes)</argsstring>
        <name>StoreElmBase</name>
        <param>
          <type>bool</type>
          <declname>dump_to_json</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>provide_to_lb</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dump_to_attributes</declname>
        </param>
        <briefdescription>
<para>Store element base class constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dump_to_json</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to dump to JSON output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">provide_to_lb</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to provide to the LB </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dump_to_attributes</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to dump to attributes in JSON output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="79" column="3" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a564f20122fff98f72f65752ce610f05e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual vt::vrt::collection::storage::StoreElmBase::~StoreElmBase</definition>
        <argsstring>()</argsstring>
        <name>~StoreElmBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="85" column="11" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a3c207bb3612dba2db9fef7e0e7f2e717" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>nlohmann::json</type>
        <definition>virtual nlohmann::json vt::vrt::collection::storage::StoreElmBase::toJson</definition>
        <argsstring>()=0</argsstring>
        <name>toJson</name>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1aea4bf3c797fb58b2e53fcbf6010c31d1">toJson</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_f645d7011e081ebef1092328b0917bfc_1aea4bf3c797fb58b2e53fcbf6010c31d1">toJson</reimplementedby>
        <briefdescription>
<para>Generate the json if applicable. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the json </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="92" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a1cfa9cc885ea3f22678b80701498c0ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::variant&lt; int, double, std::string &gt;</type>
        <definition>virtual std::variant&lt;int, double, std::string&gt; vt::vrt::collection::storage::StoreElmBase::toVariant</definition>
        <argsstring>()=0</argsstring>
        <name>toVariant</name>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1a7eea2c008b62018472a0b5f544320788">toVariant</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_f645d7011e081ebef1092328b0917bfc_1a7eea2c008b62018472a0b5f544320788">toVariant</reimplementedby>
        <briefdescription>
<para>Generate variant for LB. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the variant </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="99" column="24"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1aa20aab1f18c5c993151f556d03296441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T &amp; vt::vrt::collection::storage::StoreElmBase::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
<para>Get the value as <computeroutput>T</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="107" column="5" bodyfile="src/vt/vrt/collection/types/storage/store_elm.impl.h" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1aee7baa6c42334cd792c76888cd07cc18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T const  &amp;</type>
        <definition>T const  &amp; vt::vrt::collection::storage::StoreElmBase::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
<para>Get the const value as <computeroutput>T</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="115" column="11" bodyfile="src/vt/vrt/collection/types/storage/store_elm.impl.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a6552c32f1795ca501635036adc4e21d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::storage::StoreElmBase::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Serialize the base class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the serializer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="123" column="8" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1add1ac8f8fa0142bebb916bfd0474cc16" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::collection::storage::StoreElmBase::shouldJson</definition>
        <argsstring>() const</argsstring>
        <name>shouldJson</name>
        <briefdescription>
<para>Whether the value should be dumped to the json LB data file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether to dump </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="134" column="8" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1ae28a8d2455a7429f43937fbe03249a4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::collection::storage::StoreElmBase::provideToLB</definition>
        <argsstring>() const</argsstring>
        <name>provideToLB</name>
        <briefdescription>
<para>Whether to provide to the LB. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>is it for LB </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="141" column="8" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a0ba036b143b32129e29749300133a943" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::collection::storage::StoreElmBase::isAttribute</definition>
        <argsstring>() const</argsstring>
        <name>isAttribute</name>
        <briefdescription>
<para>Whether the value should be dumped to the json attributes field. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it is an attribute </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="150" column="8" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="150" bodyend="152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1ad10346011cc11fffcfb52bf4b124f207" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>json</type>
        <definition>static json vt::vrt::collection::storage::StoreElmBase::maybeGenerateJson</definition>
        <argsstring>(U const &amp;u)</argsstring>
        <name>maybeGenerateJson</name>
        <param>
          <type>U const &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Generate the json because it is jsonable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u</parametername>
</parameternamelist>
<parameterdescription>
<para>the data to convert to json </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="160" column="15" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="160" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a2da42349fb45cd9bc61c71073cf5dc76" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto vt::vrt::collection::storage::StoreElmBase::maybeGenerateVariant</definition>
        <argsstring>(U const &amp;u)</argsstring>
        <name>maybeGenerateVariant</name>
        <param>
          <type>U const &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Generate the variant if matches types. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u</parametername>
</parameternamelist>
<parameterdescription>
<para>the data to convert to json </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="176" column="15" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="176" bodyend="187"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Polymorphic, untyped base class for stored values in collection elements. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>vt::vrt::collection::storage::StoreElmBase</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base"/>
      </node>
    </inheritancegraph>
    <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="64" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="64" bodyend="193"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1ace4bb0073e5de18f3743ca10c31fdf2d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>checkpoint_virtual_serialize_root</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1ac60d51135f5498642631bd0d8e515a20" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>dump_to_attributes_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a7bd87e77194a384ecb0a7450d9e7a24a" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>dump_to_json_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1aa20aab1f18c5c993151f556d03296441" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>get</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1aee7baa6c42334cd792c76888cd07cc18" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>get</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a0ba036b143b32129e29749300133a943" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>isAttribute</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1ad10346011cc11fffcfb52bf4b124f207" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>maybeGenerateJson</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a2da42349fb45cd9bc61c71073cf5dc76" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>maybeGenerateVariant</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a2818c3e0d6a4c0705170f98c0b51347e" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>provide_to_lb_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1ae28a8d2455a7429f43937fbe03249a4a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>provideToLB</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a6552c32f1795ca501635036adc4e21d7" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1add1ac8f8fa0142bebb916bfd0474cc16" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>shouldJson</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a7fa798418159b33d18f1b4a687c727c1" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>StoreElmBase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1af8642b88e64da984612fd8c7ccdb7778" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>StoreElmBase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a3c207bb3612dba2db9fef7e0e7f2e717" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>toJson</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a1cfa9cc885ea3f22678b80701498c0ff" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>toVariant</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a564f20122fff98f72f65752ce610f05e" prot="public" virt="virtual"><scope>vt::vrt::collection::storage::StoreElmBase</scope><name>~StoreElmBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
