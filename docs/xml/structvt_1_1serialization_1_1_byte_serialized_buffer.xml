<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1serialization_1_1_byte_serialized_buffer" kind="struct" language="C++" prot="public">
    <compoundname>vt::serialization::ByteSerializedBuffer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">SerializedInfo</basecompoundref>
    <includes refid="mock__serializer_8h" local="no">mock_serializer.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1serialization_1_1_byte_serialized_buffer_1a26d694dbba219f7c127ab9fc65d840ef" prot="public" static="no">
        <type><ref refid="namespacevt_1_1serialization_1a74f8d1a55940f9c38fc29522de66d926" kindref="member">SerialByteType</ref>[]</type>
        <definition>using vt::serialization::ByteSerializedBuffer::ByteType =  SerialByteType[]</definition>
        <argsstring></argsstring>
        <name>ByteType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="73" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1serialization_1_1_byte_serialized_buffer_1aa4c085dc45caa2314816d785338082cc" prot="private" static="no" mutable="no">
        <type>SizeType</type>
        <definition>SizeType vt::serialization::ByteSerializedBuffer::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="88" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1serialization_1_1_byte_serialized_buffer_1a0fc8af18cd78ec57d4920bc75418c999" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1serialization_1_1_byte_serialized_buffer_1a26d694dbba219f7c127ab9fc65d840ef" kindref="member">ByteType</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ByteType&gt; vt::serialization::ByteSerializedBuffer::buffer_</definition>
        <argsstring></argsstring>
        <name>buffer_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="90" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1serialization_1_1_byte_serialized_buffer_1acd835ccd045487a2aff8fc7a6a0bac8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::serialization::ByteSerializedBuffer::ByteSerializedBuffer</definition>
        <argsstring>(SizeType const &amp;size)</argsstring>
        <name>ByteSerializedBuffer</name>
        <param>
          <type>SizeType const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="75" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1serialization_1_1_byte_serialized_buffer_1a3d2538f777f43a80670da3c38fbb4274" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacevt_1_1serialization_1a74f8d1a55940f9c38fc29522de66d926" kindref="member">SerialByteType</ref> *</type>
        <definition>virtual SerialByteType* vt::serialization::ByteSerializedBuffer::getBuffer</definition>
        <argsstring>() const override</argsstring>
        <name>getBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="79" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1serialization_1_1_byte_serialized_buffer_1a433e7f8720272818a6c0eed616c6e5af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>SizeType</type>
        <definition>virtual SizeType vt::serialization::ByteSerializedBuffer::getSize</definition>
        <argsstring>() const override</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="83" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="83" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="403">
        <label>SerializedInfo</label>
      </node>
      <node id="402">
        <label>vt::serialization::ByteSerializedBuffer</label>
        <link refid="structvt_1_1serialization_1_1_byte_serialized_buffer"/>
        <childnode refid="403" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="405">
        <label>SerializedInfo</label>
      </node>
      <node id="404">
        <label>vt::serialization::ByteSerializedBuffer</label>
        <link refid="structvt_1_1serialization_1_1_byte_serialized_buffer"/>
        <childnode refid="405" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/serialization/mock_serializer.h" line="72" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="72" bodyend="91"/>
    <listofallmembers>
      <member refid="structvt_1_1serialization_1_1_byte_serialized_buffer_1a0fc8af18cd78ec57d4920bc75418c999" prot="private" virt="non-virtual"><scope>vt::serialization::ByteSerializedBuffer</scope><name>buffer_</name></member>
      <member refid="structvt_1_1serialization_1_1_byte_serialized_buffer_1acd835ccd045487a2aff8fc7a6a0bac8e" prot="public" virt="non-virtual"><scope>vt::serialization::ByteSerializedBuffer</scope><name>ByteSerializedBuffer</name></member>
      <member refid="structvt_1_1serialization_1_1_byte_serialized_buffer_1a26d694dbba219f7c127ab9fc65d840ef" prot="public" virt="non-virtual"><scope>vt::serialization::ByteSerializedBuffer</scope><name>ByteType</name></member>
      <member refid="structvt_1_1serialization_1_1_byte_serialized_buffer_1a3d2538f777f43a80670da3c38fbb4274" prot="public" virt="virtual"><scope>vt::serialization::ByteSerializedBuffer</scope><name>getBuffer</name></member>
      <member refid="structvt_1_1serialization_1_1_byte_serialized_buffer_1a433e7f8720272818a6c0eed616c6e5af" prot="public" virt="virtual"><scope>vt::serialization::ByteSerializedBuffer</scope><name>getSize</name></member>
      <member refid="structvt_1_1serialization_1_1_byte_serialized_buffer_1aa4c085dc45caa2314816d785338082cc" prot="private" virt="non-virtual"><scope>vt::serialization::ByteSerializedBuffer</scope><name>size_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
