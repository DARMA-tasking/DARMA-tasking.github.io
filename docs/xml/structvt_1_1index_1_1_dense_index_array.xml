<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1index_1_1_dense_index_array" kind="struct" language="C++" prot="public">
    <compoundname>vt::index::DenseIndexArray</compoundname>
    <basecompoundref refid="structvt_1_1index_1_1_base_index" prot="public" virt="non-virtual">vt::index::BaseIndex</basecompoundref>
    <basecompoundref refid="structvt_1_1serialization_1_1_byte_copy_trait" prot="public" virt="non-virtual">vt::serialization::ByteCopyTrait</basecompoundref>
    <includes refid="dense__array_8h" local="no">dense_array.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>IndexType</declname>
        <defname>IndexType</defname>
      </param>
      <param>
        <type><ref refid="namespacevt_1_1index_1a97aa9370711425850c86bcb7a20d73e8" kindref="member">NumDimensionsType</ref></type>
        <declname>ndim</declname>
        <defname>ndim</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1index_1_1_dense_index_array_1a6915511f6a82dff2522d6e8c2be20f2a" prot="public" static="no">
        <type><ref refid="structvt_1_1index_1_1_dense_index_array" kindref="compound">DenseIndexArray</ref>&lt; IndexType, ndim &gt;</type>
        <definition>using vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::ThisIndexType =  DenseIndexArray&lt;IndexType, ndim&gt;</definition>
        <argsstring></argsstring>
        <name>ThisIndexType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="79" column="1" bodyfile="src/vt/topos/index/dense/dense_array.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1index_1_1_dense_index_array_1ae2999552165f16fc69a2940e0589819f" prot="public" static="no">
        <type>size_t</type>
        <definition>using vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::IndexSizeType =  size_t</definition>
        <argsstring></argsstring>
        <name>IndexSizeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="80" column="1" bodyfile="src/vt/topos/index/dense/dense_array.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1index_1_1_dense_index_array_1ab44b9e5a65d28520268523fbe99f6a9d" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="structvt_1_1index_1_1_dense_index_array_1a6915511f6a82dff2522d6e8c2be20f2a" kindref="member">ThisIndexType</ref>)&gt;</type>
        <definition>using vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::ApplyType =  std::function&lt;void(ThisIndexType)&gt;</definition>
        <argsstring></argsstring>
        <name>ApplyType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="81" column="1" bodyfile="src/vt/topos/index/dense/dense_array.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1index_1_1_dense_index_array_1a0d13f3168c5d8b4b3abc6cb083d34bc3" prot="public" static="no">
        <type><ref refid="structvt_1_1serialization_1_1_byte_copy_trait" kindref="compound">serialization::ByteCopyTrait</ref></type>
        <definition>using vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::IsByteCopyable =  serialization::ByteCopyTrait</definition>
        <argsstring></argsstring>
        <name>IsByteCopyable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="82" column="1" bodyfile="src/vt/topos/index/dense/dense_array.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1index_1_1_dense_index_array_1aec95c4ed1b4071d31d24142f02429dbd" prot="public" static="no">
        <type><ref refid="structvt_1_1index_1_1_dense_index_array" kindref="compound">DenseIndexArray</ref>&lt; IndexType, ndim &gt;</type>
        <definition>using vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::DenseIndexArrayType =  DenseIndexArray&lt;IndexType, ndim&gt;</definition>
        <argsstring></argsstring>
        <name>DenseIndexArrayType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="83" column="1" bodyfile="src/vt/topos/index/dense/dense_array.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1index_1_1_dense_index_array_1a7a66b5cd270377310119da3d0c884224" prot="public" static="no">
        <type>uint64_t</type>
        <definition>using vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::DenseArraySizeType =  uint64_t</definition>
        <argsstring></argsstring>
        <name>DenseArraySizeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="84" column="1" bodyfile="src/vt/topos/index/dense/dense_array.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1index_1_1_dense_index_array_1a36698427e28045290d1fb072573275ec" prot="public" static="no">
        <type>IndexType</type>
        <definition>using vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::DenseIndexType =  IndexType</definition>
        <argsstring></argsstring>
        <name>DenseIndexType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="85" column="1" bodyfile="src/vt/topos/index/dense/dense_array.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1index_1_1_dense_index_array_1a84d2aa360d257c9b1d7e324088c7763b" prot="public" static="no">
        <type>IndexType</type>
        <definition>using vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::BuildIndexType =  IndexType</definition>
        <argsstring></argsstring>
        <name>BuildIndexType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="86" column="1" bodyfile="src/vt/topos/index/dense/dense_array.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1index_1_1_dense_index_array_1a85e08cf36301f829ba9a15257c65f39c" prot="private" static="no" mutable="no">
        <type>std::array&lt; IndexType, ndim &gt;</type>
        <definition>std::array&lt;IndexType, ndim&gt; vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::dims</definition>
        <argsstring></argsstring>
        <name>dims</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="150" column="1" bodyfile="src/vt/topos/index/dense/dense_array.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1afcd3d27f0c86b6c37540ae78f9afc2d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::DenseIndexArray</definition>
        <argsstring>()=default</argsstring>
        <name>DenseIndexArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a835d59e4ac4c01436b7068c2fa05137b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::DenseIndexArray</definition>
        <argsstring>(DenseIndexArray const &amp;)=default</argsstring>
        <name>DenseIndexArray</name>
        <param>
          <type><ref refid="structvt_1_1index_1_1_dense_index_array" kindref="compound">DenseIndexArray</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a5f8e772873b44f670de731fe087e3a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1index_1_1_dense_index_array" kindref="compound">DenseIndexArray</ref> &amp;</type>
        <definition>DenseIndexArray&amp; vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::operator=</definition>
        <argsstring>(DenseIndexArray const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1index_1_1_dense_index_array" kindref="compound">DenseIndexArray</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a2a9e543ccf3fa97a217ad1c981911634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::DenseIndexArray</definition>
        <argsstring>(DenseIndexArray &amp;&amp;)=default</argsstring>
        <name>DenseIndexArray</name>
        <param>
          <type><ref refid="structvt_1_1index_1_1_dense_index_array" kindref="compound">DenseIndexArray</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1aa866f038df37f085bc6a48a57bcdaaa3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Idxs</declname>
            <defname>Idxs</defname>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;      <ref refid="namespacevt_1_1util_1aaa76da2983f12be56a31a96c017e8dd1" kindref="member">util::meta_type_eq</ref>&lt;IndexType, typename std::decay&lt;Idxs&gt;::type...&gt;::value and      sizeof...(Idxs) == ndim    &gt;::type</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::DenseIndexArray</definition>
        <argsstring>(Idxs &amp;&amp;... init)</argsstring>
        <name>DenseIndexArray</name>
        <param>
          <type>Idxs &amp;&amp;...</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="100" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a2d67c042ae2ac46fb32063ac63c994e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::DenseIndexArray</definition>
        <argsstring>(std::array&lt; IndexType, ndim &gt; in_array)</argsstring>
        <name>DenseIndexArray</name>
        <param>
          <type>std::array&lt; IndexType, ndim &gt;</type>
          <declname>in_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="102" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1aa53dfdb3cad352ad2d1d5701d5a4eb3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::DenseIndexArray</definition>
        <argsstring>(DenseIndexArraySingleInitTag, IndexType const &amp;init_value)</argsstring>
        <name>DenseIndexArray</name>
        <param>
          <type>DenseIndexArraySingleInitTag</type>
        </param>
        <param>
          <type>IndexType const &amp;</type>
          <declname>init_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="103" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="74" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1ab157c3c1d228b385f2c7be5f78634d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IndexType &amp;</type>
        <definition>IndexType &amp; vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::operator[]</definition>
        <argsstring>(IndexType const &amp;index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>IndexType const &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="107" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1ac46f5310e8a39ad248ab55b71d60eac0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>IndexType const  &amp;</type>
        <definition>IndexType const  &amp; vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::operator[]</definition>
        <argsstring>(IndexType const &amp;index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>IndexType const &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="108" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1aab1b5d089af92c070f2327bc15006251" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>IndexType</type>
        <definition>IndexType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::get</definition>
        <argsstring>(IndexType const &amp;index) const</argsstring>
        <name>get</name>
        <param>
          <type>IndexType const &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="109" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a2bde995d206bb72e0f5973a78e100eea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>IndexType const  *</type>
        <definition>IndexType const  * vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::raw</definition>
        <argsstring>() const</argsstring>
        <name>raw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="110" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1aaf03d65faf2c1916de7309f2602ee13a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1index_1_1_dense_index_array_1ae2999552165f16fc69a2940e0589819f" kindref="member">IndexSizeType</ref></type>
        <definition>DenseIndexArray&lt; IndexType, ndim &gt;::IndexSizeType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::packedSize</definition>
        <argsstring>() const</argsstring>
        <name>packedSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="111" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a2c47c2a4cb636879e03281d185e19fad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::indexIsByteCopyable</definition>
        <argsstring>() const</argsstring>
        <name>indexIsByteCopyable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="112" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a96f8e639c73347b326a31a750a0f9e2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1index_1_1_dense_index_array_1a7a66b5cd270377310119da3d0c884224" kindref="member">DenseArraySizeType</ref></type>
        <definition>DenseIndexArray&lt; IndexType, ndim &gt;::DenseArraySizeType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="113" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="164" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a102b9fa9d7a34a9a6630ab89eb9d8a7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="114" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="173" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1abe8fc4be882d51e37404e44e87da5caa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::foreach</definition>
        <argsstring>(ThisIndexType max, ApplyType fn) const</argsstring>
        <name>foreach</name>
        <param>
          <type><ref refid="structvt_1_1index_1_1_dense_index_array_1a6915511f6a82dff2522d6e8c2be20f2a" kindref="member">ThisIndexType</ref></type>
          <declname>max</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1index_1_1_dense_index_array_1ab44b9e5a65d28520268523fbe99f6a9d" kindref="member">ApplyType</ref></type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="115" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="118" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1ab4306357a93fe2e34179d6a907f31782" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::foreach</definition>
        <argsstring>(ApplyType fn) const</argsstring>
        <name>foreach</name>
        <param>
          <type><ref refid="structvt_1_1index_1_1_dense_index_array_1ab44b9e5a65d28520268523fbe99f6a9d" kindref="member">ApplyType</ref></type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="116" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a41531f28f011127ee1714452dd4debef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a913e1f07b5228dd8bb64040dc6dcea14" kindref="member">UniqueIndexBitType</ref></type>
        <definition>UniqueIndexBitType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::uniqueBits</definition>
        <argsstring>() const</argsstring>
        <name>uniqueBits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="117" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="139" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1aa407d7e96709099c4a7ee179c65c627f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::operator==</definition>
        <argsstring>(DenseIndexArrayType const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structvt_1_1index_1_1_dense_index_array_1aec95c4ed1b4071d31d24142f02429dbd" kindref="member">DenseIndexArrayType</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="121" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="184" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a7d1d02c9c0a50822d63afeb3358a7a0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::operator&lt;</definition>
        <argsstring>(DenseIndexArrayType const &amp;other) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structvt_1_1index_1_1_dense_index_array_1aec95c4ed1b4071d31d24142f02429dbd" kindref="member">DenseIndexArrayType</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="122" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="201" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a2f63f2603e58cf017c07f11f9e233409" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1index_1_1_dense_index_array_1aec95c4ed1b4071d31d24142f02429dbd" kindref="member">DenseIndexArrayType</ref></type>
        <definition>DenseIndexArray&lt; IndexType, ndim &gt;::DenseIndexArrayType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::operator+</definition>
        <argsstring>(DenseIndexArrayType const &amp;other) const</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structvt_1_1index_1_1_dense_index_array_1aec95c4ed1b4071d31d24142f02429dbd" kindref="member">DenseIndexArrayType</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="125" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="216" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a828670d9617980741517481c39b8212f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1index_1_1_dense_index_array_1aec95c4ed1b4071d31d24142f02429dbd" kindref="member">DenseIndexArrayType</ref></type>
        <definition>DenseIndexArray&lt; IndexType, ndim &gt;::DenseIndexArrayType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::operator-</definition>
        <argsstring>(DenseIndexArrayType const &amp;other) const</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="structvt_1_1index_1_1_dense_index_array_1aec95c4ed1b4071d31d24142f02429dbd" kindref="member">DenseIndexArrayType</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="126" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="226" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a0604b24914af854d09d4da97eae4ef74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>void</defval>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;ndim &gt;= 1</defval>
          </param>
          <param>
            <type>T</type>
          </param>
        </templateparamlist>
        <type>::type IndexType</type>
        <definition>::type IndexType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::x</definition>
        <argsstring>() const</argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a6f150c2dbed44d633b4dc3b62aea2c9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>void</defval>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;ndim &gt;= 2</defval>
          </param>
          <param>
            <type>T</type>
          </param>
        </templateparamlist>
        <type>::type IndexType</type>
        <definition>::type IndexType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::y</definition>
        <argsstring>() const</argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a8de61716f67863e9c1eca84f8c99de22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>void</defval>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;ndim &gt;= 3</defval>
          </param>
          <param>
            <type>T</type>
          </param>
        </templateparamlist>
        <type>::type IndexType</type>
        <definition>::type IndexType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::z</definition>
        <argsstring>() const</argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1af5731c29e392485535d090b57b66a6f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>IndexType</type>
        <definition>IndexType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::x</definition>
        <argsstring>() const</argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.impl.h" line="237" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a23d6673153f284a46bad6e1be6781e08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>IndexType</type>
        <definition>IndexType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::y</definition>
        <argsstring>() const</argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.impl.h" line="243" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a9bd7a86415c7ce861f5cf17dd5a849e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>IndexType</type>
        <definition>IndexType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::z</definition>
        <argsstring>() const</argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.impl.h" line="249" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="249" bodyend="251"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1a7a9a9e350279381589bfe1c75526c12a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="namespacevt_1_1index_1a97aa9370711425850c86bcb7a20d73e8" kindref="member">NumDimensionsType</ref></type>
        <definition>static constexpr NumDimensionsType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::ndims</definition>
        <argsstring>()</argsstring>
        <name>ndims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="105" column="1" bodyfile="src/vt/topos/index/dense/dense_array.h" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1index_1_1_dense_index_array_1ad9f18d4b0c0b5082c533286288c42529" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1index_1_1_dense_index_array_1a6915511f6a82dff2522d6e8c2be20f2a" kindref="member">ThisIndexType</ref></type>
        <definition>DenseIndexArray&lt; IndexType, ndim &gt;::ThisIndexType vt::index::DenseIndexArray&lt; IndexType, ndim &gt;::uniqueBitsToIndex</definition>
        <argsstring>(UniqueIndexBitType const &amp;bits)</argsstring>
        <name>uniqueBitsToIndex</name>
        <param>
          <type><ref refid="namespacevt_1a913e1f07b5228dd8bb64040dc6dcea14" kindref="member">UniqueIndexBitType</ref> const &amp;</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="119" column="1" bodyfile="src/vt/topos/index/dense/dense_array.impl.h" bodystart="150" bodyend="160"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1index_1_1_dense_index_array_1ad8dd7b7925f5c66e3264bd14c3e4f2ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1index_1a97aa9370711425850c86bcb7a20d73e8" kindref="member">NumDimensionsType</ref></type>
            <declname>nd</declname>
            <defname>nd</defname>
          </param>
        </templateparamlist>
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, DenseIndexArray&lt; IndexT, nd &gt; const &amp;idx)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1index_1_1_dense_index_array" kindref="compound">DenseIndexArray</ref>&lt; IndexT, nd &gt; const &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/index/dense/dense_array.h" line="145" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1492">
        <label>vt::index::DenseIndexArray&lt; IndexType, ndim &gt;</label>
        <link refid="structvt_1_1index_1_1_dense_index_array"/>
        <childnode refid="1493" relation="public-inheritance">
        </childnode>
        <childnode refid="1494" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1493">
        <label>vt::index::BaseIndex</label>
        <link refid="structvt_1_1index_1_1_base_index"/>
      </node>
      <node id="1494">
        <label>vt::serialization::ByteCopyTrait</label>
        <link refid="structvt_1_1serialization_1_1_byte_copy_trait"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1495">
        <label>vt::index::DenseIndexArray&lt; IndexType, ndim &gt;</label>
        <link refid="structvt_1_1index_1_1_dense_index_array"/>
        <childnode refid="1496" relation="public-inheritance">
        </childnode>
        <childnode refid="1497" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1496">
        <label>vt::index::BaseIndex</label>
        <link refid="structvt_1_1index_1_1_base_index"/>
      </node>
      <node id="1497">
        <label>vt::serialization::ByteCopyTrait</label>
        <link refid="structvt_1_1serialization_1_1_byte_copy_trait"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/topos/index/dense/dense_array.h" line="70" column="1" bodyfile="src/vt/topos/index/dense/dense_array.h" bodystart="70" bodyend="-1"/>
    <listofallmembers>
      <member refid="structvt_1_1index_1_1_dense_index_array_1ab44b9e5a65d28520268523fbe99f6a9d" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>ApplyType</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a84d2aa360d257c9b1d7e324088c7763b" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>BuildIndexType</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a7a66b5cd270377310119da3d0c884224" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>DenseArraySizeType</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1afcd3d27f0c86b6c37540ae78f9afc2d1" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>DenseIndexArray</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a835d59e4ac4c01436b7068c2fa05137b" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>DenseIndexArray</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a2a9e543ccf3fa97a217ad1c981911634" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>DenseIndexArray</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1aa866f038df37f085bc6a48a57bcdaaa3" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>DenseIndexArray</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a2d67c042ae2ac46fb32063ac63c994e8" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>DenseIndexArray</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1aa53dfdb3cad352ad2d1d5701d5a4eb3f" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>DenseIndexArray</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1aec95c4ed1b4071d31d24142f02429dbd" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>DenseIndexArrayType</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a36698427e28045290d1fb072573275ec" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>DenseIndexType</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a85e08cf36301f829ba9a15257c65f39c" prot="private" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>dims</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1abe8fc4be882d51e37404e44e87da5caa" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>foreach</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1ab4306357a93fe2e34179d6a907f31782" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>foreach</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1aab1b5d089af92c070f2327bc15006251" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>get</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a96f8e639c73347b326a31a750a0f9e2d" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>getSize</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a2c47c2a4cb636879e03281d185e19fad" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>indexIsByteCopyable</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1ae2999552165f16fc69a2940e0589819f" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>IndexSizeType</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a0d13f3168c5d8b4b3abc6cb083d34bc3" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>IsByteCopyable</name></member>
      <member refid="structvt_1_1serialization_1_1_byte_copy_trait_1a9f2c1bdf8bb5401b693861dc79d4ca38" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>isByteCopyable</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a7a9a9e350279381589bfe1c75526c12a" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>ndims</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a2f63f2603e58cf017c07f11f9e233409" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>operator+</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a828670d9617980741517481c39b8212f" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>operator-</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a7d1d02c9c0a50822d63afeb3358a7a0f" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>operator&lt;</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1ad8dd7b7925f5c66e3264bd14c3e4f2ce" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>operator&lt;&lt;</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a5f8e772873b44f670de731fe087e3a5a" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>operator=</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1aa407d7e96709099c4a7ee179c65c627f" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>operator==</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1ab157c3c1d228b385f2c7be5f78634d93" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>operator[]</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1ac46f5310e8a39ad248ab55b71d60eac0" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>operator[]</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1aaf03d65faf2c1916de7309f2602ee13a" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>packedSize</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a2bde995d206bb72e0f5973a78e100eea" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>raw</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a6915511f6a82dff2522d6e8c2be20f2a" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>ThisIndexType</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a102b9fa9d7a34a9a6630ab89eb9d8a7f" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>toString</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a41531f28f011127ee1714452dd4debef" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>uniqueBits</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1ad9f18d4b0c0b5082c533286288c42529" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>uniqueBitsToIndex</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a0604b24914af854d09d4da97eae4ef74" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>x</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1af5731c29e392485535d090b57b66a6f5" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>x</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a6f150c2dbed44d633b4dc3b62aea2c9b" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>y</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a23d6673153f284a46bad6e1be6781e08" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>y</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a8de61716f67863e9c1eca84f8c99de22" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>z</name></member>
      <member refid="structvt_1_1index_1_1_dense_index_array_1a9bd7a86415c7ce861f5cf17dd5a849e0" prot="public" virt="non-virtual"><scope>vt::index::DenseIndexArray</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
