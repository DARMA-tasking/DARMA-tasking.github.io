<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry" kind="struct" language="C++" prot="private">
    <compoundname>vt::trace::file_spec::TraceSpec::SpecEntry</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a2e3a4320945c22b1e4a2f5a3adac2ec5" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1a4dd2e8fb971930351812d0f286baece2" kindref="member">SpecIndex</ref></type>
        <definition>SpecIndex vt::trace::file_spec::TraceSpec::SpecEntry::idx_</definition>
        <argsstring></argsstring>
        <name>idx_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Index for spec entry (mod or phase) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/file_spec/spec.h" line="153" column="1" bodyfile="src/vt/trace/file_spec/spec.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a93c7f24ea10d3e82e6fce6965c14ce04" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1a4dd2e8fb971930351812d0f286baece2" kindref="member">SpecIndex</ref></type>
        <definition>SpecIndex vt::trace::file_spec::TraceSpec::SpecEntry::neg_</definition>
        <argsstring></argsstring>
        <name>neg_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Negative offset for spec entry </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/file_spec/spec.h" line="154" column="1" bodyfile="src/vt/trace/file_spec/spec.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a5c6a8881ac5c657c4e2a72ae863968f5" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1a4dd2e8fb971930351812d0f286baece2" kindref="member">SpecIndex</ref></type>
        <definition>SpecIndex vt::trace::file_spec::TraceSpec::SpecEntry::pos_</definition>
        <argsstring></argsstring>
        <name>pos_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Positive offset for spec entry </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/file_spec/spec.h" line="155" column="1" bodyfile="src/vt/trace/file_spec/spec.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a7194a8db86b82c3a98b3e5f39d9cd479" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::trace::file_spec::TraceSpec::SpecEntry::is_mod_</definition>
        <argsstring></argsstring>
        <name>is_mod_</name>
        <initializer>=  false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether this entry is a mod-entry </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/file_spec/spec.h" line="156" column="1" bodyfile="src/vt/trace/file_spec/spec.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a84fd2cd12c47dbef7c5c5daf41880d48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::trace::file_spec::TraceSpec::SpecEntry::SpecEntry</definition>
        <argsstring>()=default</argsstring>
        <name>SpecEntry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/file_spec/spec.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a88637cca75e7e629e94194d031f6695b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::trace::file_spec::TraceSpec::SpecEntry::SpecEntry</definition>
        <argsstring>(SpecIndex in_idx, SpecIndex in_neg, SpecIndex in_pos, bool in_mod)</argsstring>
        <name>SpecEntry</name>
        <param>
          <type><ref refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1a4dd2e8fb971930351812d0f286baece2" kindref="member">SpecIndex</ref></type>
          <declname>in_idx</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1a4dd2e8fb971930351812d0f286baece2" kindref="member">SpecIndex</ref></type>
          <declname>in_neg</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1a4dd2e8fb971930351812d0f286baece2" kindref="member">SpecIndex</ref></type>
          <declname>in_pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/file_spec/spec.h" line="110" column="1" bodyfile="src/vt/trace/file_spec/spec.h" bodystart="110" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a288d88c01c82a6ba85c5565f359b5ba7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1a4dd2e8fb971930351812d0f286baece2" kindref="member">SpecIndex</ref></type>
        <definition>SpecIndex vt::trace::file_spec::TraceSpec::SpecEntry::getIdx</definition>
        <argsstring>() const</argsstring>
        <name>getIdx</name>
        <briefdescription>
<para>Get the spec index for this entry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the spec index </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/file_spec/spec.h" line="122" column="1" bodyfile="src/vt/trace/file_spec/spec.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a9e82463df70d9eef5b019fe01ba6c8ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::trace::file_spec::TraceSpec::SpecEntry::testTraceEnabledFor</definition>
        <argsstring>(SpecIndex in_idx) const</argsstring>
        <name>testTraceEnabledFor</name>
        <param>
          <type><ref refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1a4dd2e8fb971930351812d0f286baece2" kindref="member">SpecIndex</ref></type>
          <declname>in_idx</declname>
        </param>
        <briefdescription>
<para>Check if a given phase is enabled within this spec entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>the index to check</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether tracing is enabled based on this entry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/file_spec/spec.h" line="131" column="1" bodyfile="src/vt/trace/file_spec/spec.h" bodystart="131" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1aedd34ee25948ee8f8ee4a7909c554313" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::trace::file_spec::TraceSpec::SpecEntry::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Serializer for <computeroutput><ref refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry" kindref="compound">SpecEntry</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>serializer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/file_spec/spec.h" line="148" column="1" bodyfile="src/vt/trace/file_spec/spec.h" bodystart="148" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds a single entry in a trace spec file; checks if a given phase is enabled within that spec. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/trace/file_spec/spec.h" line="108" column="1" bodyfile="src/vt/trace/file_spec/spec.h" bodystart="108" bodyend="157"/>
    <listofallmembers>
      <member refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a288d88c01c82a6ba85c5565f359b5ba7" prot="public" virt="non-virtual"><scope>vt::trace::file_spec::TraceSpec::SpecEntry</scope><name>getIdx</name></member>
      <member refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a2e3a4320945c22b1e4a2f5a3adac2ec5" prot="private" virt="non-virtual"><scope>vt::trace::file_spec::TraceSpec::SpecEntry</scope><name>idx_</name></member>
      <member refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a7194a8db86b82c3a98b3e5f39d9cd479" prot="private" virt="non-virtual"><scope>vt::trace::file_spec::TraceSpec::SpecEntry</scope><name>is_mod_</name></member>
      <member refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a93c7f24ea10d3e82e6fce6965c14ce04" prot="private" virt="non-virtual"><scope>vt::trace::file_spec::TraceSpec::SpecEntry</scope><name>neg_</name></member>
      <member refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a5c6a8881ac5c657c4e2a72ae863968f5" prot="private" virt="non-virtual"><scope>vt::trace::file_spec::TraceSpec::SpecEntry</scope><name>pos_</name></member>
      <member refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1aedd34ee25948ee8f8ee4a7909c554313" prot="public" virt="non-virtual"><scope>vt::trace::file_spec::TraceSpec::SpecEntry</scope><name>serialize</name></member>
      <member refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a84fd2cd12c47dbef7c5c5daf41880d48" prot="public" virt="non-virtual"><scope>vt::trace::file_spec::TraceSpec::SpecEntry</scope><name>SpecEntry</name></member>
      <member refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a88637cca75e7e629e94194d031f6695b" prot="public" virt="non-virtual"><scope>vt::trace::file_spec::TraceSpec::SpecEntry</scope><name>SpecEntry</name></member>
      <member refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_entry_1a9e82463df70d9eef5b019fe01ba6c8ec" prot="public" virt="non-virtual"><scope>vt::trace::file_spec::TraceSpec::SpecEntry</scope><name>testTraceEnabledFor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
