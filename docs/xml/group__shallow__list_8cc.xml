<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__shallow__list_8cc" kind="file" language="C++">
    <compoundname>group_shallow_list.cc</compoundname>
    <includes refid="config_8h" local="yes">vt/config.h</includes>
    <includes refid="group__region_8h" local="yes">vt/group/region/group_region.h</includes>
    <includes refid="group__shallow__list_8h" local="yes">vt/group/region/group_shallow_list.h</includes>
    <includes refid="group__list_8h" local="yes">vt/group/region/group_list.h</includes>
    <includes local="no">cassert</includes>
    <incdepgraph>
      <node id="55203">
        <label>list</label>
      </node>
      <node id="55156">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
        <childnode refid="55157" relation="include">
        </childnode>
      </node>
      <node id="55193">
        <label>vt/runtime/component/component_pack.h</label>
        <link refid="component__pack_8h"/>
        <childnode refid="55194" relation="include">
        </childnode>
        <childnode refid="55203" relation="include">
        </childnode>
        <childnode refid="55204" relation="include">
        </childnode>
        <childnode refid="55196" relation="include">
        </childnode>
        <childnode refid="55205" relation="include">
        </childnode>
      </node>
      <node id="55164">
        <label>functional</label>
      </node>
      <node id="55197">
        <label>vt/runtime/component/component_dep.h</label>
        <link refid="component__dep_8h"/>
        <childnode refid="55195" relation="include">
        </childnode>
      </node>
      <node id="55175">
        <label>fmt/format.h</label>
      </node>
      <node id="55158">
        <label>vt/configs/features/features_metafeatures.h</label>
        <link refid="features__metafeatures_8h"/>
        <childnode refid="55157" relation="include">
        </childnode>
      </node>
      <node id="55170">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="55171" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
      </node>
      <node id="55155">
        <label>cstdint</label>
      </node>
      <node id="55202">
        <label>vt/runtime/component/progressable.h</label>
        <link refid="progressable_8h"/>
      </node>
      <node id="55201">
        <label>vt/runtime/component/bufferable.h</label>
        <link refid="bufferable_8h"/>
      </node>
      <node id="55212">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="55178" relation="include">
        </childnode>
        <childnode refid="55163" relation="include">
        </childnode>
        <childnode refid="55186" relation="include">
        </childnode>
        <childnode refid="55211" relation="include">
        </childnode>
        <childnode refid="55213" relation="include">
        </childnode>
        <childnode refid="55170" relation="include">
        </childnode>
        <childnode refid="55210" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
        <childnode refid="55183" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
        <childnode refid="55215" relation="include">
        </childnode>
        <childnode refid="55175" relation="include">
        </childnode>
      </node>
      <node id="55210">
        <label>cassert</label>
      </node>
      <node id="55187">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="55178" relation="include">
        </childnode>
        <childnode refid="55163" relation="include">
        </childnode>
        <childnode refid="55186" relation="include">
        </childnode>
        <childnode refid="55188" relation="include">
        </childnode>
        <childnode refid="55170" relation="include">
        </childnode>
        <childnode refid="55180" relation="include">
        </childnode>
        <childnode refid="55190" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
        <childnode refid="55183" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
        <childnode refid="55210" relation="include">
        </childnode>
        <childnode refid="55175" relation="include">
        </childnode>
      </node>
      <node id="55167">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="55168" relation="include">
        </childnode>
      </node>
      <node id="55178">
        <label>vt/configs/error/common.h</label>
        <link refid="configs_2error_2common_8h"/>
        <childnode refid="55162" relation="include">
        </childnode>
        <childnode refid="55179" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
      </node>
      <node id="55168">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
      </node>
      <node id="55176">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="55177" relation="include">
        </childnode>
        <childnode refid="55181" relation="include">
        </childnode>
        <childnode refid="55185" relation="include">
        </childnode>
      </node>
      <node id="55172">
        <label>string</label>
      </node>
      <node id="55199">
        <label>vt/runtime/component/base.h</label>
        <link refid="runtime_2component_2base_8h"/>
        <childnode refid="55163" relation="include">
        </childnode>
        <childnode refid="55200" relation="include">
        </childnode>
        <childnode refid="55201" relation="include">
        </childnode>
        <childnode refid="55202" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
      </node>
      <node id="55213">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="55178" relation="include">
        </childnode>
        <childnode refid="55154" relation="include">
        </childnode>
        <childnode refid="55189" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
        <childnode refid="55183" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
        <childnode refid="55173" relation="include">
        </childnode>
        <childnode refid="55214" relation="include">
        </childnode>
      </node>
      <node id="55214">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="55213" relation="include">
        </childnode>
        <childnode refid="55170" relation="include">
        </childnode>
        <childnode refid="55189" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
        <childnode refid="55183" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
        <childnode refid="55173" relation="include">
        </childnode>
        <childnode refid="55175" relation="include">
        </childnode>
      </node>
      <node id="55196">
        <label>unordered_set</label>
      </node>
      <node id="55159">
        <label>vt/configs/features/features_enableif.h</label>
        <link refid="features__enableif_8h"/>
        <childnode refid="55156" relation="include">
        </childnode>
        <childnode refid="55157" relation="include">
        </childnode>
      </node>
      <node id="55154">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="55155" relation="include">
        </childnode>
        <childnode refid="55156" relation="include">
        </childnode>
        <childnode refid="55157" relation="include">
        </childnode>
        <childnode refid="55158" relation="include">
        </childnode>
        <childnode refid="55159" relation="include">
        </childnode>
        <childnode refid="55160" relation="include">
        </childnode>
      </node>
      <node id="55171">
        <label>vt/configs/arguments/args.h</label>
        <link refid="args_8h"/>
        <childnode refid="55164" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
        <childnode refid="55173" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
      </node>
      <node id="55169">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="55152" relation="include">
        </childnode>
        <childnode refid="55163" relation="include">
        </childnode>
        <childnode refid="55165" relation="include">
        </childnode>
      </node>
      <node id="55217">
        <label>vt/group/group_common.h</label>
        <link refid="group__common_8h"/>
        <childnode refid="55189" relation="include">
        </childnode>
      </node>
      <node id="55198">
        <label>vt/runtime/component/component_traits.h</label>
        <link refid="component__traits_8h"/>
        <childnode refid="55183" relation="include">
        </childnode>
      </node>
      <node id="55195">
        <label>vt/runtime/component/component_registry.h</label>
        <link refid="component__registry_8h"/>
        <childnode refid="55163" relation="include">
        </childnode>
        <childnode refid="55173" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
        <childnode refid="55196" relation="include">
        </childnode>
      </node>
      <node id="55152">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="55153" relation="include">
        </childnode>
        <childnode refid="55154" relation="include">
        </childnode>
        <childnode refid="55161" relation="include">
        </childnode>
      </node>
      <node id="55179">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="55172" relation="include">
        </childnode>
      </node>
      <node id="55163">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="55155" relation="include">
        </childnode>
        <childnode refid="55164" relation="include">
        </childnode>
      </node>
      <node id="55182">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="55162" relation="include">
        </childnode>
        <childnode refid="55154" relation="include">
        </childnode>
        <childnode refid="55178" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
        <childnode refid="55183" relation="include">
        </childnode>
        <childnode refid="55184" relation="include">
        </childnode>
      </node>
      <node id="55174">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
        <childnode refid="55166" relation="include">
        </childnode>
      </node>
      <node id="55177">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="55154" relation="include">
        </childnode>
        <childnode refid="55163" relation="include">
        </childnode>
        <childnode refid="55178" relation="include">
        </childnode>
        <childnode refid="55180" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
        <childnode refid="55175" relation="include">
        </childnode>
      </node>
      <node id="55216">
        <label>vt/group/region/group_region.h</label>
        <link refid="group__region_8h"/>
        <childnode refid="55151" relation="include">
        </childnode>
        <childnode refid="55217" relation="include">
        </childnode>
        <childnode refid="55173" relation="include">
        </childnode>
        <childnode refid="55189" relation="include">
        </childnode>
        <childnode refid="55191" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
        <childnode refid="55164" relation="include">
        </childnode>
      </node>
      <node id="55166">
        <label>tuple</label>
      </node>
      <node id="55209">
        <label>vt/utils/tls/tls.impl.h</label>
        <link refid="tls_8impl_8h"/>
        <childnode refid="55151" relation="include">
        </childnode>
      </node>
      <node id="55161">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="55162" relation="include">
        </childnode>
        <childnode refid="55154" relation="include">
        </childnode>
        <childnode refid="55170" relation="include">
        </childnode>
        <childnode refid="55174" relation="include">
        </childnode>
        <childnode refid="55175" relation="include">
        </childnode>
      </node>
      <node id="55173">
        <label>vector</label>
      </node>
      <node id="55190">
        <label>vt/context/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="55191" relation="include">
        </childnode>
        <childnode refid="55192" relation="include">
        </childnode>
        <childnode refid="55151" relation="include">
        </childnode>
        <childnode refid="55193" relation="include">
        </childnode>
        <childnode refid="55206" relation="include">
        </childnode>
        <childnode refid="55207" relation="include">
        </childnode>
      </node>
      <node id="55215">
        <label>sstream</label>
      </node>
      <node id="55153">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="55188">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="55189" relation="include">
        </childnode>
        <childnode refid="55173" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
      </node>
      <node id="55157">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
      </node>
      <node id="55189">
        <label>cstdlib</label>
      </node>
      <node id="55181">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="55154" relation="include">
        </childnode>
        <childnode refid="55178" relation="include">
        </childnode>
        <childnode refid="55182" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
        <childnode refid="55183" relation="include">
        </childnode>
      </node>
      <node id="55206">
        <label>vt/context/context_attorney_fwd.h</label>
        <link refid="context__attorney__fwd_8h"/>
        <childnode refid="55151" relation="include">
        </childnode>
      </node>
      <node id="55204">
        <label>unordered_map</label>
      </node>
      <node id="55150">
        <label>src/vt/group/region/group_shallow_list.cc</label>
        <link refid="group__shallow__list_8cc"/>
        <childnode refid="55151" relation="include">
        </childnode>
        <childnode refid="55216" relation="include">
        </childnode>
        <childnode refid="55218" relation="include">
        </childnode>
        <childnode refid="55219" relation="include">
        </childnode>
        <childnode refid="55210" relation="include">
        </childnode>
      </node>
      <node id="55162">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="55163" relation="include">
        </childnode>
        <childnode refid="55165" relation="include">
        </childnode>
        <childnode refid="55167" relation="include">
        </childnode>
        <childnode refid="55169" relation="include">
        </childnode>
      </node>
      <node id="55186">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="55163" relation="include">
        </childnode>
        <childnode refid="55178" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
        <childnode refid="55183" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
        <childnode refid="55187" relation="include">
        </childnode>
      </node>
      <node id="55192">
        <label>mpi.h</label>
      </node>
      <node id="55207">
        <label>vt/utils/tls/tls.h</label>
        <link refid="tls_8h"/>
        <childnode refid="55151" relation="include">
        </childnode>
        <childnode refid="55208" relation="include">
        </childnode>
        <childnode refid="55209" relation="include">
        </childnode>
      </node>
      <node id="55205">
        <label>vt/runtime/component/component_pack.impl.h</label>
        <link refid="component__pack_8impl_8h"/>
        <childnode refid="55193" relation="include">
        </childnode>
      </node>
      <node id="55165">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="55152" relation="include">
        </childnode>
        <childnode refid="55163" relation="include">
        </childnode>
        <childnode refid="55155" relation="include">
        </childnode>
        <childnode refid="55164" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
      </node>
      <node id="55218">
        <label>vt/group/region/group_shallow_list.h</label>
        <link refid="group__shallow__list_8h"/>
        <childnode refid="55151" relation="include">
        </childnode>
        <childnode refid="55190" relation="include">
        </childnode>
        <childnode refid="55217" relation="include">
        </childnode>
        <childnode refid="55216" relation="include">
        </childnode>
      </node>
      <node id="55200">
        <label>vt/runtime/component/diagnostic.h</label>
        <link refid="diagnostic_8h"/>
      </node>
      <node id="55183">
        <label>type_traits</label>
      </node>
      <node id="55180">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="55162" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
        <childnode refid="55175" relation="include">
        </childnode>
      </node>
      <node id="55208">
        <label>vt/utils/tls/null_tls.h</label>
        <link refid="null__tls_8h"/>
        <childnode refid="55151" relation="include">
        </childnode>
      </node>
      <node id="55151">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="55152" relation="include">
        </childnode>
        <childnode refid="55162" relation="include">
        </childnode>
        <childnode refid="55176" relation="include">
        </childnode>
      </node>
      <node id="55219">
        <label>vt/group/region/group_list.h</label>
        <link refid="group__list_8h"/>
      </node>
      <node id="55194">
        <label>vt/runtime/component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="55181" relation="include">
        </childnode>
        <childnode refid="55195" relation="include">
        </childnode>
        <childnode refid="55197" relation="include">
        </childnode>
        <childnode refid="55198" relation="include">
        </childnode>
        <childnode refid="55199" relation="include">
        </childnode>
        <childnode refid="55191" relation="include">
        </childnode>
      </node>
      <node id="55160">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="55191">
        <label>memory</label>
      </node>
      <node id="55185">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="55154" relation="include">
        </childnode>
        <childnode refid="55163" relation="include">
        </childnode>
        <childnode refid="55178" relation="include">
        </childnode>
        <childnode refid="55186" relation="include">
        </childnode>
        <childnode refid="55211" relation="include">
        </childnode>
        <childnode refid="55213" relation="include">
        </childnode>
        <childnode refid="55210" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
        <childnode refid="55183" relation="include">
        </childnode>
      </node>
      <node id="55211">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="55178" relation="include">
        </childnode>
        <childnode refid="55163" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
        <childnode refid="55212" relation="include">
        </childnode>
      </node>
      <node id="55184">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="55162" relation="include">
        </childnode>
        <childnode refid="55154" relation="include">
        </childnode>
        <childnode refid="55178" relation="include">
        </childnode>
        <childnode refid="55182" relation="include">
        </childnode>
        <childnode refid="55180" relation="include">
        </childnode>
        <childnode refid="55172" relation="include">
        </childnode>
        <childnode refid="55166" relation="include">
        </childnode>
        <childnode refid="55183" relation="include">
        </childnode>
        <childnode refid="55175" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1group">vt::group</innernamespace>
    <innernamespace refid="namespacevt_1_1group_1_1region">vt::group::region</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group_shallow_list.cc</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA<sp/>Toolkit<sp/>v.<sp/>1.0.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="42"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="43"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">vt/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="group__region_8h" kindref="compound">vt/group/region/group_region.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="group__shallow__list_8h" kindref="compound">vt/group/region/group_shallow_list.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="group__list_8h" kindref="compound">vt/group/region/group_list.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a132506d2b8e888d0a91ae4470d4197c1" kindref="member">group</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">region<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1a603d4964e6b51c9883b3f7ef1f7de997" kindref="member">ShallowList::ShallowList</ref>(BoundType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>in_bound,<sp/><ref refid="namespacevt_1_1serialization_1ac7b555941c0bfd470bee3df22b967ff9" kindref="member">SizeType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>in_size)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>:<sp/>size_(in_size),<sp/>bound_(in_bound)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1a603d4964e6b51c9883b3f7ef1f7de997" kindref="member">ShallowList::ShallowList</ref>(List<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>in_list)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>:<sp/>ShallowList(in_list.list_)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1a603d4964e6b51c9883b3f7ef1f7de997" kindref="member">ShallowList::ShallowList</ref>(<ref refid="structvt_1_1group_1_1region_1_1_region_1a4e35b2fc6dca06aca0b7bc0e19b35c5a" kindref="member">ListType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>in_list)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>:<sp/>ShallowList(&amp;in_list[0],<sp/>in_list.size())</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*virtual*/</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1group_1_1region_1_1_region_1a9bb381adf31111aae34dbc644bad6c1f" kindref="member">ShallowList::SizeType</ref><sp/><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1a6b8fe82607fdcf88ac33ad387192fbb2" kindref="member">ShallowList::getSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*virtual*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1a1c2ba4da8b89771a0361ff34763d7f62" kindref="member">ShallowList::sort</ref>()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Can<sp/>not<sp/>be<sp/>sorted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*virtual*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1a58313e5cab61f196ff5fb1d6ac109d1c" kindref="member">ShallowList::contains</ref>(<ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(decltype(size_)<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bound_[i]<sp/>==<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*virtual*/</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1group_1_1region_1_1_region_1a4e35b2fc6dca06aca0b7bc0e19b35c5a" kindref="member">ShallowList::ListType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1aecf1849757306e2d8a3c339a4bdb6453" kindref="member">ShallowList::makeList</ref>()<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Can<sp/>not<sp/>be<sp/>implemented<sp/>for<sp/>ShallowList&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>empty_list;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*virtual*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1a5d83012cacf2a8ebeb3edb55603fceaa" kindref="member">ShallowList::isList</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*virtual*/</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">ShallowList::BoundType</ref><sp/><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1a249b65b9cc1a44131cf52488baea9a41" kindref="member">ShallowList::head</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*bound_;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*virtual*/</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" kindref="member">ShallowList::RegionUPtrType</ref><sp/><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1a358a60631cc0d1dd55d72af82e287014" kindref="member">ShallowList::tail</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;ShallowList&gt;(bound_+1,<sp/>size_-1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*virtual*/</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1group_1_1region_1_1_region_1ab8d05c0978c7f38292a9ed5a15498a4b" kindref="member">ShallowList::SplitRegionType</ref><sp/><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1a766a07e9f1c8580a1b986a71bb80ea66" kindref="member">ShallowList::split</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>size_<sp/>&gt;=<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;Size<sp/>must<sp/>be<sp/>at<sp/>least<sp/>2<sp/>to<sp/>split&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>c1_size<sp/>=<sp/>size_<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>c2_size<sp/>=<sp/>size_<sp/>-<sp/>c1_size;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r1<sp/>=<sp/>std::make_unique&lt;ShallowList&gt;(bound_,<sp/>c1_size);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r2<sp/>=<sp/>std::make_unique&lt;ShallowList&gt;(bound_<sp/>+<sp/>c1_size,<sp/>c2_size);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(std::move(r1),std::move(r2));</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*virtual*/</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">ShallowList::BoundType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1a3ca4276a7602a1ed44f02dfa7e600e88" kindref="member">ShallowList::getBound</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bound_;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*virtual*/</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" kindref="member">ShallowList::RegionUPtrType</ref><sp/><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1a43434547454d02f9069873282675058f" kindref="member">ShallowList::copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;List&gt;(bound_,<sp/>size_,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*virtual*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1group_1_1region_1_1_shallow_list_1ac41946e0f130b3d4b42f9edbe20f3605" kindref="member">ShallowList::splitN</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsplits,<sp/><ref refid="structvt_1_1group_1_1region_1_1_region_1a7c9e99b1157d2fe2f3e6fc36a1463a96" kindref="member">ApplyFnType</ref><sp/>apply)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>size<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structvt_1_1group_1_1region_1_1_region_1ab0db5f78c57943b4b9973ba2c7c619f7" kindref="member">getSize</ref>());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>num_splits<sp/>=<sp/>std::min(nsplits,<sp/>size);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>cur_bound<sp/>=<sp/>bound_;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1group_1_1region_1_1_region_1a2cbbbff6358f0f63235d95501858f512" kindref="member">split</ref><sp/>=<sp/>0;<sp/><ref refid="structvt_1_1group_1_1region_1_1_region_1a2cbbbff6358f0f63235d95501858f512" kindref="member">split</ref><sp/>&lt;<sp/>num_splits;<sp/><ref refid="structvt_1_1group_1_1region_1_1_region_1a2cbbbff6358f0f63235d95501858f512" kindref="member">split</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>child_size<sp/>=<sp/>size<sp/>/<sp/>num_splits;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>max_left<sp/>=<sp/>(bound_<sp/>+<sp/>size)-cur_bound;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>min_val<sp/>=<sp/><ref refid="structvt_1_1group_1_1region_1_1_region_1a2cbbbff6358f0f63235d95501858f512" kindref="member">split</ref><sp/>==<sp/>num_splits<sp/>-<sp/>1<sp/>?</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_left<sp/>:<sp/>std::min(child_size,<sp/>static_cast&lt;int&gt;(max_left));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r1<sp/>=<sp/>std::make_unique&lt;ShallowList&gt;(cur_bound,<sp/>min_val);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>apply(std::move(r1));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_bound<sp/>+=<sp/>min_val;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}}}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::group::region<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/vt/group/region/group_shallow_list.cc"/>
  </compounddef>
</doxygen>
