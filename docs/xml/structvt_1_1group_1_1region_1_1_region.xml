<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1group_1_1region_1_1_region" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>vt::group::region::Region</compoundname>
    <derivedcompoundref refid="structvt_1_1group_1_1region_1_1_list" prot="public" virt="non-virtual">vt::group::region::List</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1group_1_1region_1_1_range" prot="public" virt="non-virtual">vt::group::region::Range</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1group_1_1region_1_1_shallow_list" prot="public" virt="non-virtual">vt::group::region::ShallowList</derivedcompoundref>
    <includes refid="group__region_8h" local="no">group_region.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" prot="public" static="no">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>using vt::group::region::Region::BoundType =  NodeType</definition>
        <argsstring></argsstring>
        <name>BoundType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="59" column="1" bodyfile="src/vt/group/region/group_region.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1region_1_1_region_1a9bb381adf31111aae34dbc644bad6c1f" prot="public" static="no">
        <type>size_t</type>
        <definition>using vt::group::region::Region::SizeType =  size_t</definition>
        <argsstring></argsstring>
        <name>SizeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="60" column="1" bodyfile="src/vt/group/region/group_region.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1region_1_1_region_1a79f6795196ce4fd9fff863cf2a5bf30d" prot="public" static="no">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region" kindref="compound">Region</ref> *</type>
        <definition>using vt::group::region::Region::RegionPtr =  Region*</definition>
        <argsstring></argsstring>
        <name>RegionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="61" column="1" bodyfile="src/vt/group/region/group_region.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1group_1_1region_1_1_region" kindref="compound">Region</ref> &gt;</type>
        <definition>using vt::group::region::Region::RegionUPtrType =  std::unique_ptr&lt;Region&gt;</definition>
        <argsstring></argsstring>
        <name>RegionUPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="62" column="1" bodyfile="src/vt/group/region/group_region.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1region_1_1_region_1ab8d05c0978c7f38292a9ed5a15498a4b" prot="public" static="no">
        <type>std::tuple&lt; <ref refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" kindref="member">RegionUPtrType</ref>, <ref refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" kindref="member">RegionUPtrType</ref> &gt;</type>
        <definition>using vt::group::region::Region::SplitRegionType =  std::tuple&lt;RegionUPtrType, RegionUPtrType&gt;</definition>
        <argsstring></argsstring>
        <name>SplitRegionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="63" column="1" bodyfile="src/vt/group/region/group_region.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1region_1_1_region_1a4e35b2fc6dca06aca0b7bc0e19b35c5a" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref> &gt;</type>
        <definition>using vt::group::region::Region::ListType =  std::vector&lt;BoundType&gt;</definition>
        <argsstring></argsstring>
        <name>ListType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="64" column="1" bodyfile="src/vt/group/region/group_region.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1region_1_1_region_1a7c9e99b1157d2fe2f3e6fc36a1463a96" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" kindref="member">RegionUPtrType</ref>)&gt;</type>
        <definition>using vt::group::region::Region::ApplyFnType =  std::function&lt;void(RegionUPtrType)&gt;</definition>
        <argsstring></argsstring>
        <name>ApplyFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="65" column="1" bodyfile="src/vt/group/region/group_region.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_region_1adb017be8010659a0da19f66c8265fe10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual vt::group::region::Region::~Region</definition>
        <argsstring>()</argsstring>
        <name>~Region</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="67" column="1" bodyfile="src/vt/group/region/group_region.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_region_1ab0db5f78c57943b4b9973ba2c7c619f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a9bb381adf31111aae34dbc644bad6c1f" kindref="member">SizeType</ref></type>
        <definition>virtual SizeType vt::group::region::Region::getSize</definition>
        <argsstring>() const =0</argsstring>
        <name>getSize</name>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_shallow_list_1a6b8fe82607fdcf88ac33ad387192fbb2">getSize</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_list_1a9a74188a75483097c41253616527ac46">getSize</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_range_1a111a632a4bba6b6940a3d036bd4cba76">getSize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_region_1a169304bf82a87ff958333595bed2603d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vt::group::region::Region::sort</definition>
        <argsstring>()=0</argsstring>
        <name>sort</name>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_shallow_list_1a1c2ba4da8b89771a0361ff34763d7f62">sort</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_list_1acebca171776662bdf481ed1eb7ee4c09">sort</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_range_1aa24e09be54662ffd11413803689ed7f8">sort</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_region_1a1e0ebd7367476fb397faf06a03b5583c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool vt::group::region::Region::contains</definition>
        <argsstring>(NodeType const &amp;node)=0</argsstring>
        <name>contains</name>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_shallow_list_1a58313e5cab61f196ff5fb1d6ac109d1c">contains</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_list_1ac85ec02f77a44a2dadc1b51231e113a7">contains</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_range_1a1e8b87b37b06d3803fd3b287fde3564b">contains</reimplementedby>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_region_1a5c05e6ebee5a6d7e77d9ebf33c9ff50c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool vt::group::region::Region::isList</definition>
        <argsstring>() const =0</argsstring>
        <name>isList</name>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_shallow_list_1a5d83012cacf2a8ebeb3edb55603fceaa">isList</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_list_1abdde7f8c33453db1938e9a27b3f18bd9">isList</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_range_1aaa2df0017d61507802bcc90a88fcda91">isList</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_region_1ac85c027b3c402c712c888aefc198c6be" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a4e35b2fc6dca06aca0b7bc0e19b35c5a" kindref="member">ListType</ref> const  &amp;</type>
        <definition>virtual ListType const&amp; vt::group::region::Region::makeList</definition>
        <argsstring>()=0</argsstring>
        <name>makeList</name>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_shallow_list_1aecf1849757306e2d8a3c339a4bdb6453">makeList</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_list_1ade171ca43a1bef2feef9952625fba71a">makeList</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_range_1abd64b2d424a89ab0f603be15957d0fd4">makeList</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_region_1a040d20a4f8c6fa351d7fe1cbfcae3a03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" kindref="member">RegionUPtrType</ref></type>
        <definition>virtual RegionUPtrType vt::group::region::Region::copy</definition>
        <argsstring>() const =0</argsstring>
        <name>copy</name>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_list_1ac5885572f4cd651003cd6012ba247cda">copy</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_shallow_list_1a43434547454d02f9069873282675058f">copy</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_range_1a9b7985ec60471524e11bb933fd0f6821">copy</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_region_1a09d21333389937f11dd5d3e6ba566c54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref></type>
        <definition>virtual BoundType vt::group::region::Region::head</definition>
        <argsstring>() const =0</argsstring>
        <name>head</name>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_shallow_list_1a249b65b9cc1a44131cf52488baea9a41">head</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_list_1a99c726e227dbac4f8efaa45a37033238">head</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_range_1ab6abce20eb32475d0ae734770b6586c0">head</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_region_1a7d5bc5711c1b7954e27defa4dc94af40" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" kindref="member">RegionUPtrType</ref></type>
        <definition>virtual RegionUPtrType vt::group::region::Region::tail</definition>
        <argsstring>() const =0</argsstring>
        <name>tail</name>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_shallow_list_1a358a60631cc0d1dd55d72af82e287014">tail</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_list_1aaa38a1cc3062ed93fd6d6fbe2c65f1cf">tail</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_range_1a409f171c688707fa71e4aea1099ce691">tail</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_region_1a2cbbbff6358f0f63235d95501858f512" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1ab8d05c0978c7f38292a9ed5a15498a4b" kindref="member">SplitRegionType</ref></type>
        <definition>virtual SplitRegionType vt::group::region::Region::split</definition>
        <argsstring>() const =0</argsstring>
        <name>split</name>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_shallow_list_1a766a07e9f1c8580a1b986a71bb80ea66">split</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_list_1a0f8352e79bb541ad17ea80843a363304">split</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_range_1a0d2542edc1fccecc5ba898484f0ccd3f">split</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_region_1ae8660d4218b57e91664dedfa807cd936" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vt::group::region::Region::splitN</definition>
        <argsstring>(int nsplits, ApplyFnType apply) const =0</argsstring>
        <name>splitN</name>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_list_1ad1950419288564d76527c24bd6d4f3a3">splitN</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_shallow_list_1ac41946e0f130b3d4b42f9edbe20f3605">splitN</reimplementedby>
        <reimplementedby refid="structvt_1_1group_1_1region_1_1_range_1a6fcfec2c3fabe024559c2f278a8d12e5">splitN</reimplementedby>
        <param>
          <type>int</type>
          <declname>nsplits</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a7c9e99b1157d2fe2f3e6fc36a1463a96" kindref="member">ApplyFnType</ref></type>
          <declname>apply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_region.h" line="77" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3508">
        <label>vt::group::region::List</label>
        <link refid="structvt_1_1group_1_1region_1_1_list"/>
        <childnode refid="3507" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3510">
        <label>vt::group::region::ShallowList</label>
        <link refid="structvt_1_1group_1_1region_1_1_shallow_list"/>
        <childnode refid="3507" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3507">
        <label>vt::group::region::Region</label>
        <link refid="structvt_1_1group_1_1region_1_1_region"/>
      </node>
      <node id="3509">
        <label>vt::group::region::Range</label>
        <link refid="structvt_1_1group_1_1region_1_1_range"/>
        <childnode refid="3507" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/vt/group/region/group_region.h" line="58" column="1" bodyfile="src/vt/group/region/group_region.h" bodystart="58" bodyend="78"/>
    <listofallmembers>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a7c9e99b1157d2fe2f3e6fc36a1463a96" prot="public" virt="non-virtual"><scope>vt::group::region::Region</scope><name>ApplyFnType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" prot="public" virt="non-virtual"><scope>vt::group::region::Region</scope><name>BoundType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a1e0ebd7367476fb397faf06a03b5583c" prot="public" virt="pure-virtual"><scope>vt::group::region::Region</scope><name>contains</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a040d20a4f8c6fa351d7fe1cbfcae3a03" prot="public" virt="pure-virtual"><scope>vt::group::region::Region</scope><name>copy</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1ab0db5f78c57943b4b9973ba2c7c619f7" prot="public" virt="pure-virtual"><scope>vt::group::region::Region</scope><name>getSize</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a09d21333389937f11dd5d3e6ba566c54" prot="public" virt="pure-virtual"><scope>vt::group::region::Region</scope><name>head</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a5c05e6ebee5a6d7e77d9ebf33c9ff50c" prot="public" virt="pure-virtual"><scope>vt::group::region::Region</scope><name>isList</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a4e35b2fc6dca06aca0b7bc0e19b35c5a" prot="public" virt="non-virtual"><scope>vt::group::region::Region</scope><name>ListType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1ac85c027b3c402c712c888aefc198c6be" prot="public" virt="pure-virtual"><scope>vt::group::region::Region</scope><name>makeList</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a79f6795196ce4fd9fff863cf2a5bf30d" prot="public" virt="non-virtual"><scope>vt::group::region::Region</scope><name>RegionPtr</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" prot="public" virt="non-virtual"><scope>vt::group::region::Region</scope><name>RegionUPtrType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a9bb381adf31111aae34dbc644bad6c1f" prot="public" virt="non-virtual"><scope>vt::group::region::Region</scope><name>SizeType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a169304bf82a87ff958333595bed2603d" prot="public" virt="pure-virtual"><scope>vt::group::region::Region</scope><name>sort</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a2cbbbff6358f0f63235d95501858f512" prot="public" virt="pure-virtual"><scope>vt::group::region::Region</scope><name>split</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1ae8660d4218b57e91664dedfa807cd936" prot="public" virt="pure-virtual"><scope>vt::group::region::Region</scope><name>splitN</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1ab8d05c0978c7f38292a9ed5a15498a4b" prot="public" virt="non-virtual"><scope>vt::group::region::Region</scope><name>SplitRegionType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a7d5bc5711c1b7954e27defa4dc94af40" prot="public" virt="pure-virtual"><scope>vt::group::region::Region</scope><name>tail</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1adb017be8010659a0da19f66c8265fe10" prot="public" virt="virtual"><scope>vt::group::region::Region</scope><name>~Region</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
