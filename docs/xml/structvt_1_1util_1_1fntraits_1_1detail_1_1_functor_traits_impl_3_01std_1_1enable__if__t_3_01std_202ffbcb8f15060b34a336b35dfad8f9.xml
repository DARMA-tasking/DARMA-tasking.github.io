<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_202ffbcb8f15060b34a336b35dfad8f9" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_convertible&lt; Msg *, vt::Message * &gt;::value or std::is_convertible&lt; Msg *, vt::ShortMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::EpochMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::PayloadMessage * &gt;::value &gt;, FunctorT, Return(FunctorT::*)(Msg *)&gt;</compoundname>
    <includes refid="fntraits_8h" local="no">fntraits.h</includes>
    <templateparamlist>
      <param>
        <type>typename FunctorT</type>
      </param>
      <param>
        <type>typename Return</type>
      </param>
      <param>
        <type>typename Msg</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_202ffbcb8f15060b34a336b35dfad8f9_1a0ba29facde142da7fbd83d4eb764058f" prot="public" static="no">
        <type>Msg</type>
        <definition>using vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_convertible&lt; Msg *, vt::Message * &gt;::value or std::is_convertible&lt; Msg *, vt::ShortMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::EpochMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::PayloadMessage * &gt;::value &gt;, FunctorT, Return(FunctorT::*)(Msg *)&gt;::MsgT =  Msg</definition>
        <argsstring></argsstring>
        <name>MsgT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="234" column="3" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_202ffbcb8f15060b34a336b35dfad8f9_1a088105dc83d132558d08a800d83b3b84" prot="public" static="no">
        <type>Return</type>
        <definition>using vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_convertible&lt; Msg *, vt::Message * &gt;::value or std::is_convertible&lt; Msg *, vt::ShortMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::EpochMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::PayloadMessage * &gt;::value &gt;, FunctorT, Return(FunctorT::*)(Msg *)&gt;::ReturnT =  Return</definition>
        <argsstring></argsstring>
        <name>ReturnT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="235" column="3" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_202ffbcb8f15060b34a336b35dfad8f9_1a5f8160c291fafd3ce8cd25cdadf7774c" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>template&lt; typename... &gt; class</type>
            <declname>U</declname>
            <defname>U</defname>
          </param>
        </templateparamlist>
        <type>U&lt; <ref refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_202ffbcb8f15060b34a336b35dfad8f9_1a0ba29facde142da7fbd83d4eb764058f" kindref="member">MsgT</ref> &gt;</type>
        <definition>using vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_convertible&lt; Msg *, vt::Message * &gt;::value or std::is_convertible&lt; Msg *, vt::ShortMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::EpochMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::PayloadMessage * &gt;::value &gt;, FunctorT, Return(FunctorT::*)(Msg *)&gt;::WrapType =  U&lt;MsgT&gt;</definition>
        <argsstring></argsstring>
        <name>WrapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="237" column="3" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_202ffbcb8f15060b34a336b35dfad8f9_1a4d4657233da19a86eb4193705f1d5ca4" prot="public" static="no">
        <type>Return(*)(Msg *)</type>
        <definition>using vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_convertible&lt; Msg *, vt::Message * &gt;::value or std::is_convertible&lt; Msg *, vt::ShortMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::EpochMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::PayloadMessage * &gt;::value &gt;, FunctorT, Return(FunctorT::*)(Msg *)&gt;::FuncPtrType =  Return(*)(Msg*)</definition>
        <argsstring></argsstring>
        <name>FuncPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="238" column="3" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_202ffbcb8f15060b34a336b35dfad8f9_1a95d059e9ce9b47fab01e01fe6de91581" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_convertible&lt; Msg *, vt::Message * &gt;::value or std::is_convertible&lt; Msg *, vt::ShortMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::EpochMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::PayloadMessage * &gt;::value &gt;, FunctorT, Return(FunctorT::*)(Msg *)&gt;::is_member</definition>
        <argsstring></argsstring>
        <name>is_member</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="233" column="25" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/utils/fntraits/fntraits.h" line="232" column="2" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="223" bodyend="239"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_202ffbcb8f15060b34a336b35dfad8f9_1a4d4657233da19a86eb4193705f1d5ca4" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_convertible&lt; Msg *, vt::Message * &gt;::value or std::is_convertible&lt; Msg *, vt::ShortMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::EpochMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::PayloadMessage * &gt;::value &gt;, FunctorT, Return(FunctorT::*)(Msg *)&gt;</scope><name>FuncPtrType</name></member>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_202ffbcb8f15060b34a336b35dfad8f9_1a95d059e9ce9b47fab01e01fe6de91581" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_convertible&lt; Msg *, vt::Message * &gt;::value or std::is_convertible&lt; Msg *, vt::ShortMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::EpochMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::PayloadMessage * &gt;::value &gt;, FunctorT, Return(FunctorT::*)(Msg *)&gt;</scope><name>is_member</name></member>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_202ffbcb8f15060b34a336b35dfad8f9_1a0ba29facde142da7fbd83d4eb764058f" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_convertible&lt; Msg *, vt::Message * &gt;::value or std::is_convertible&lt; Msg *, vt::ShortMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::EpochMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::PayloadMessage * &gt;::value &gt;, FunctorT, Return(FunctorT::*)(Msg *)&gt;</scope><name>MsgT</name></member>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_202ffbcb8f15060b34a336b35dfad8f9_1a088105dc83d132558d08a800d83b3b84" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_convertible&lt; Msg *, vt::Message * &gt;::value or std::is_convertible&lt; Msg *, vt::ShortMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::EpochMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::PayloadMessage * &gt;::value &gt;, FunctorT, Return(FunctorT::*)(Msg *)&gt;</scope><name>ReturnT</name></member>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_202ffbcb8f15060b34a336b35dfad8f9_1a5f8160c291fafd3ce8cd25cdadf7774c" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_convertible&lt; Msg *, vt::Message * &gt;::value or std::is_convertible&lt; Msg *, vt::ShortMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::EpochMessage * &gt;::value or std::is_convertible&lt; Msg *, vt::PayloadMessage * &gt;::value &gt;, FunctorT, Return(FunctorT::*)(Msg *)&gt;</scope><name>WrapType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
