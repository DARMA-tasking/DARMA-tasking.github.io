<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1serialization_1_1has_byte_copy_trait" kind="struct" language="C++" prot="public">
    <compoundname>vt::serialization::hasByteCopyTrait</compoundname>
    <includes refid="mock__serializer_8h" local="no">mock_serializer.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structvt_1_1serialization_1_1has_byte_copy_trait_1ab0e433e90af4c3f2b8b6353fb2bbd34c" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool vt::serialization::hasByteCopyTrait&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <initializer>= decltype(<ref refid="structvt_1_1serialization_1_1has_byte_copy_trait_1aff4ab3bf26b647e42f63359adeab1355" kindref="member">test</ref>&lt;T&gt;(0))::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="140" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1serialization_1_1has_byte_copy_trait_1aff4ab3bf26b647e42f63359adeab1355" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename C</type>
          </param>
          <param>
            <type>typename</type>
            <defval>typename C::isByteCopyable</defval>
          </param>
        </templateparamlist>
        <type>C::isByteCopyable</type>
        <definition>static C::isByteCopyable vt::serialization::hasByteCopyTrait&lt; T &gt;::test</definition>
        <argsstring>(int)</argsstring>
        <name>test</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1serialization_1_1has_byte_copy_trait_1a16ee865dfb170e91f41e16de170b835e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename C</type>
          </param>
        </templateparamlist>
        <type>std::false_type</type>
        <definition>static std::false_type vt::serialization::hasByteCopyTrait&lt; T &gt;::test</definition>
        <argsstring>(...)</argsstring>
        <name>test</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="138" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/serialization/mock_serializer.h" line="133" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="133" bodyend="141"/>
    <listofallmembers>
      <member refid="structvt_1_1serialization_1_1has_byte_copy_trait_1aff4ab3bf26b647e42f63359adeab1355" prot="public" virt="non-virtual"><scope>vt::serialization::hasByteCopyTrait</scope><name>test</name></member>
      <member refid="structvt_1_1serialization_1_1has_byte_copy_trait_1a16ee865dfb170e91f41e16de170b835e" prot="public" virt="non-virtual"><scope>vt::serialization::hasByteCopyTrait</scope><name>test</name></member>
      <member refid="structvt_1_1serialization_1_1has_byte_copy_trait_1ab0e433e90af4c3f2b8b6353fb2bbd34c" prot="public" virt="non-virtual"><scope>vt::serialization::hasByteCopyTrait</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
