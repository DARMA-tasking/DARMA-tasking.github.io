<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1util_1_1stats_1_1_linear_regression" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::stats::LinearRegression</compoundname>
    <includes refid="linear__regression_8h" local="no">linear_regression.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1stats_1_1_linear_regression_1a46208bdabbdb35abead50111765242df" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt; const  &amp;</type>
        <definition>std::vector&lt;double&gt; const&amp; vt::util::stats::LinearRegression::x_</definition>
        <argsstring></argsstring>
        <name>x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/stats/linear_regression.h" line="125" column="1" bodyfile="src/vt/utils/stats/linear_regression.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1stats_1_1_linear_regression_1acf0f3fc5c18fae9943d03c3f507f8acb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt; const  &amp;</type>
        <definition>std::vector&lt;double&gt; const&amp; vt::util::stats::LinearRegression::y_</definition>
        <argsstring></argsstring>
        <name>y_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/stats/linear_regression.h" line="126" column="1" bodyfile="src/vt/utils/stats/linear_regression.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1stats_1_1_linear_regression_1a855d9e0f0470f875387f8490428e9acd" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vt::util::stats::LinearRegression::slope_</definition>
        <argsstring></argsstring>
        <name>slope_</name>
        <initializer>= 0.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/stats/linear_regression.h" line="127" column="1" bodyfile="src/vt/utils/stats/linear_regression.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1stats_1_1_linear_regression_1a1228e3f973040a4b30a015c50cc6481b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vt::util::stats::LinearRegression::intercept_</definition>
        <argsstring></argsstring>
        <name>intercept_</name>
        <initializer>= 0.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/stats/linear_regression.h" line="128" column="1" bodyfile="src/vt/utils/stats/linear_regression.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1stats_1_1_linear_regression_1a4c87edbed1fca305b729e037c3c760f3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::util::stats::LinearRegression::computed_</definition>
        <argsstring></argsstring>
        <name>computed_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/stats/linear_regression.h" line="129" column="1" bodyfile="src/vt/utils/stats/linear_regression.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1stats_1_1_linear_regression_1a5ee7e2cca72dbd2d06acbd86529e40b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::util::stats::LinearRegression::LinearRegression</definition>
        <argsstring>(std::vector&lt; double &gt; const &amp;in_x, std::vector&lt; double &gt; const &amp;in_y)</argsstring>
        <name>LinearRegression</name>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>in_x</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>in_y</declname>
        </param>
        <briefdescription>
<para>Construct a linear regression. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x-values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y-values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/stats/linear_regression.h" line="68" column="1" bodyfile="src/vt/utils/stats/linear_regression.h" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1stats_1_1_linear_regression_1a6922dca6390a6285d68952debccd4c26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::stats::LinearRegression::compute</definition>
        <argsstring>()</argsstring>
        <name>compute</name>
        <briefdescription>
<para>Perform the regression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/stats/linear_regression.h" line="76" column="1" bodyfile="src/vt/utils/stats/linear_regression.h" bodystart="76" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1stats_1_1_linear_regression_1ad367d0b3bbcd51aed5513c0918b7fc9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::util::stats::LinearRegression::getSlope</definition>
        <argsstring>() const</argsstring>
        <name>getSlope</name>
        <briefdescription>
<para>Get the slope. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the slope of the line </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/stats/linear_regression.h" line="101" column="1" bodyfile="src/vt/utils/stats/linear_regression.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1stats_1_1_linear_regression_1a23b4e2e170789dc9632ad780fe4a4290" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::util::stats::LinearRegression::getIntercept</definition>
        <argsstring>() const</argsstring>
        <name>getIntercept</name>
        <briefdescription>
<para>Get the y-intercept. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the y-intercept </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/stats/linear_regression.h" line="108" column="1" bodyfile="src/vt/utils/stats/linear_regression.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1stats_1_1_linear_regression_1a102993019adc0717da79336f8b631170" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::util::stats::LinearRegression::predict</definition>
        <argsstring>(double in_x)</argsstring>
        <name>predict</name>
        <param>
          <type>double</type>
          <declname>in_x</declname>
        </param>
        <briefdescription>
<para>Predict a value using the linear model. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x value to predict</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the y value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/stats/linear_regression.h" line="117" column="1" bodyfile="src/vt/utils/stats/linear_regression.h" bodystart="117" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Perform a simple linear regression to predict values with a linear model. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/utils/stats/linear_regression.h" line="60" column="1" bodyfile="src/vt/utils/stats/linear_regression.h" bodystart="60" bodyend="130"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1stats_1_1_linear_regression_1a6922dca6390a6285d68952debccd4c26" prot="public" virt="non-virtual"><scope>vt::util::stats::LinearRegression</scope><name>compute</name></member>
      <member refid="structvt_1_1util_1_1stats_1_1_linear_regression_1a4c87edbed1fca305b729e037c3c760f3" prot="private" virt="non-virtual"><scope>vt::util::stats::LinearRegression</scope><name>computed_</name></member>
      <member refid="structvt_1_1util_1_1stats_1_1_linear_regression_1a23b4e2e170789dc9632ad780fe4a4290" prot="public" virt="non-virtual"><scope>vt::util::stats::LinearRegression</scope><name>getIntercept</name></member>
      <member refid="structvt_1_1util_1_1stats_1_1_linear_regression_1ad367d0b3bbcd51aed5513c0918b7fc9f" prot="public" virt="non-virtual"><scope>vt::util::stats::LinearRegression</scope><name>getSlope</name></member>
      <member refid="structvt_1_1util_1_1stats_1_1_linear_regression_1a1228e3f973040a4b30a015c50cc6481b" prot="private" virt="non-virtual"><scope>vt::util::stats::LinearRegression</scope><name>intercept_</name></member>
      <member refid="structvt_1_1util_1_1stats_1_1_linear_regression_1a5ee7e2cca72dbd2d06acbd86529e40b4" prot="public" virt="non-virtual"><scope>vt::util::stats::LinearRegression</scope><name>LinearRegression</name></member>
      <member refid="structvt_1_1util_1_1stats_1_1_linear_regression_1a102993019adc0717da79336f8b631170" prot="public" virt="non-virtual"><scope>vt::util::stats::LinearRegression</scope><name>predict</name></member>
      <member refid="structvt_1_1util_1_1stats_1_1_linear_regression_1a855d9e0f0470f875387f8490428e9acd" prot="private" virt="non-virtual"><scope>vt::util::stats::LinearRegression</scope><name>slope_</name></member>
      <member refid="structvt_1_1util_1_1stats_1_1_linear_regression_1a46208bdabbdb35abead50111765242df" prot="private" virt="non-virtual"><scope>vt::util::stats::LinearRegression</scope><name>x_</name></member>
      <member refid="structvt_1_1util_1_1stats_1_1_linear_regression_1acf0f3fc5c18fae9943d03c3f507f8acb" prot="private" virt="non-virtual"><scope>vt::util::stats::LinearRegression</scope><name>y_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
