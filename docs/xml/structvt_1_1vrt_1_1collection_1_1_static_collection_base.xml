<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1_static_collection_base" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::StaticCollectionBase</compoundname>
    <basecompoundref refid="structvt_1_1vrt_1_1collection_1_1_collection_base" prot="public" virt="non-virtual">vt::vrt::collection::CollectionBase&lt; ColT, IndexT &gt;</basecompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_collection" prot="public" virt="non-virtual">vt::vrt::collection::Collection&lt; ColT, IndexT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_static_insertable_collection_base" prot="public" virt="non-virtual">vt::vrt::collection::StaticInsertableCollectionBase&lt; ColT, IndexT &gt;</derivedcompoundref>
    <includes refid="static__size_8h" local="no">static_size.h</includes>
    <templateparamlist>
      <param>
        <type>typename ColT</type>
      </param>
      <param>
        <type>typename IndexT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1vrt_1_1collection_1_1_static_collection_base_1abb4eb03ec2c75b459ceec69021d22a2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct CollectionTypeAttorney</definition>
        <argsstring></argsstring>
        <name>CollectionTypeAttorney</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/static_size.h" line="65" column="1" bodyfile="src/vt/vrt/collection/types/static_size.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_static_collection_base_1a5737915628a89a38b382ccfccbe73c40" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::StaticCollectionBase&lt; ColT, IndexT &gt;::StaticCollectionBase</definition>
        <argsstring>(VirtualElmCountType const inNumElems)</argsstring>
        <name>StaticCollectionBase</name>
        <param>
          <type><ref refid="namespacevt_1ac115668758184050beff7a9281a2c490" kindref="member">VirtualElmCountType</ref> const</type>
          <declname>inNumElems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/static_size.h" line="59" column="1" bodyfile="src/vt/vrt/collection/types/static_size.impl.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_static_collection_base_1ae304da84e3f97d1349cf9892e759efc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::StaticCollectionBase&lt; ColT, IndexT &gt;::StaticCollectionBase</definition>
        <argsstring>()</argsstring>
        <name>StaticCollectionBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/static_size.h" line="60" column="1" bodyfile="src/vt/vrt/collection/types/static_size.impl.h" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_static_collection_base_1ac2858ef1bc952a6caf8fb299199aa703" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1ac115668758184050beff7a9281a2c490" kindref="member">VirtualElmCountType</ref></type>
        <definition>VirtualElmCountType vt::vrt::collection::StaticCollectionBase&lt; ColT, IndexT &gt;::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/static_size.h" line="62" column="1" bodyfile="src/vt/vrt/collection/types/static_size.impl.h" bodystart="66" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_static_collection_base_1a2220acb376a93897e2dfde15eaaadedc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::collection::StaticCollectionBase&lt; ColT, IndexT &gt;::isStaticSized</definition>
        <argsstring>()</argsstring>
        <name>isStaticSized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/static_size.h" line="63" column="1" bodyfile="src/vt/vrt/collection/types/static_size.impl.h" bodystart="71" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2501">
        <label>vt::vrt::collection::CollectionBase&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_base"/>
        <childnode refid="2502" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2502">
        <label>vt::vrt::collection::Indexable&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_indexable"/>
        <childnode refid="2503" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2504">
        <label>vt::vrt::collection::MigrateHookBase</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base"/>
        <childnode refid="2505" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2503">
        <label>vt::vrt::collection::Migratable&lt; ColT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migratable"/>
        <childnode refid="2504" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2507">
        <label>vt::vrt::VrtBase</label>
        <link refid="structvt_1_1vrt_1_1_vrt_base"/>
      </node>
      <node id="2500">
        <label>vt::vrt::collection::StaticCollectionBase&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_static_collection_base"/>
        <childnode refid="2501" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2505">
        <label>vt::vrt::collection::MigrateHookInterface</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_interface"/>
        <childnode refid="2506" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2510">
        <label>vt::vrt::collection::StaticInsertableCollectionBase&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_static_insertable_collection_base"/>
        <childnode refid="2500" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2511">
        <label>vt::vrt::collection::InsertableCollection&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_insertable_collection"/>
        <childnode refid="2510" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2506">
        <label>vt::vrt::collection::UntypedCollection</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_untyped_collection"/>
        <childnode refid="2507" relation="public-inheritance">
        </childnode>
        <childnode refid="2508" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2509">
        <label>vt::vrt::collection::Collection&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection"/>
        <childnode refid="2500" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2508">
        <label>vt::HasMigrate</label>
        <link refid="structvt_1_1_has_migrate"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2513">
        <label>vt::vrt::collection::CollectionBase&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_base"/>
        <childnode refid="2514" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2514">
        <label>vt::vrt::collection::Indexable&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_indexable"/>
        <childnode refid="2515" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2516">
        <label>vt::vrt::collection::MigrateHookBase</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base"/>
        <childnode refid="2517" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2515">
        <label>vt::vrt::collection::Migratable&lt; ColT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migratable"/>
        <childnode refid="2516" relation="public-inheritance">
        </childnode>
        <childnode refid="2521" relation="usage">
          <edgelabel>stats_</edgelabel>
        </childnode>
      </node>
      <node id="2519">
        <label>vt::vrt::VrtBase</label>
        <link refid="structvt_1_1vrt_1_1_vrt_base"/>
      </node>
      <node id="2521">
        <label>vt::vrt::collection::balance::ElementStats</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_element_stats"/>
      </node>
      <node id="2512">
        <label>vt::vrt::collection::StaticCollectionBase&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_static_collection_base"/>
        <childnode refid="2513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2517">
        <label>vt::vrt::collection::MigrateHookInterface</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_interface"/>
        <childnode refid="2518" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2518">
        <label>vt::vrt::collection::UntypedCollection</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_untyped_collection"/>
        <childnode refid="2519" relation="public-inheritance">
        </childnode>
        <childnode refid="2520" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2520">
        <label>vt::HasMigrate</label>
        <link refid="structvt_1_1_has_migrate"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/types/static_size.h" line="58" column="1" bodyfile="src/vt/vrt/collection/types/static_size.h" bodystart="56" bodyend="66"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1ab2134eca144d6b2703fffb12c71d9f9b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>CollectionBase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1a265f5fb675e04d9ea6ec332743bc6d14" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>CollectionBase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1af40b40a2ee128748bcb917f14a0152b4" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>CollectionProxyType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_static_collection_base_1abb4eb03ec2c75b459ceec69021d22a2b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>CollectionTypeAttorney</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1a5f4feabd19ea4a986ee9da06bd7aeae0" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>cur_bcast_epoch_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1a06210254fae9b543b5db7543760ae33d" prot="public" virt="virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>destroy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1a190e044fe11ef42d34d0af49c78e49ca" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>elmsFixedAtCreation_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base_1a9b687a96cbba5d12d1c87aee0e985997" prot="public" virt="virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>epiMigrateIn</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base_1aa5bdff485cc373da8828e845a45bccb6" prot="public" virt="virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>epiMigrateOut</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1ad97d9ab1a28fb535c5d7f82c15e99791" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>getCollectionProxy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1acf2b3173e77b083920e3d4a06728e4c6" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>getElementProxy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1acf870053154679cbcda64e42ff479302" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>getElmID</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_indexable_1abbb101f9344176d40171f54362b8a9b5" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>getIndex</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1a30ea8cc8e915777f3106038c73cdb499" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>getProxy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_static_collection_base_1ac2858ef1bc952a6caf8fb299199aa703" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>getSize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1aad0c3895e538ca34ff2e75ec0e121dfa" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>getStats</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1ad4b0d23e17edfa41221af6eefb05ad69" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>getTempID</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1a0894dcc0522db61d302b14d9d28bffdf" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>hasStaticSize_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_indexable_1ad398d2870a2cd045a87adf71722eb3d3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>Indexable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_indexable_1a6ead4d5d60a5ae95fd846f0a81916e96" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>Indexable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1ac1fbcd7655ac53ee681964cee23c5d1e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>IndexType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1a526626889fb46b7206e1fc3a7a97a646" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>isStatic</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_static_collection_base_1a2220acb376a93897e2dfde15eaaadedc" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>isStaticSized</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1aed21a92808d62ff482cb44d750267b0c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>Migratable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1a34f089d6f08e84b1745a265ad865807a" prot="public" virt="virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>migrate</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base_1abed6481a2a5fd65b9c50bf190a9b8282" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>MigrateHookBase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_interface_1a7fcec6d6a05c806ba91d418ee4dd6910" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>MigrateHookInterface</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1a51c5c2114bb9b849878e384c25c4497b" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>numElems_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base_1aca3947e263443c0460cea7d75fbae2bf" prot="public" virt="virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>preMigrateIn</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base_1aefb49af057c90295e89ae029fd7ba8bb" prot="public" virt="virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>preMigrateOut</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1a0c2fd2443732bebc963f6278b7ba089b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>ProxyType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1a8f5dc077e523958ea8b7290b8a10846f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_indexable_1a065dbf0bf541f5adbe25b62d9c29106b" prot="public" virt="non-virtual" ambiguityscope="vt::vrt::collection::Indexable::"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1aa85b1aa3096a2adffe229927d76cebfd" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>setProxy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1a17f8b36a4b4035d9d8ac977d844edb8c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>setSize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_static_collection_base_1a5737915628a89a38b382ccfccbe73c40" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>StaticCollectionBase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_static_collection_base_1ae304da84e3f97d1349cf9892e759efc7" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>StaticCollectionBase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1a311e171ef2dafb9d26975f3677e4fdaa" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>stats_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1a905932dd92539fb68fa811c8a21e8e30" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>stats_elm_id_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1a0a6e381b0220dbb905a755e8262c8695" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>temp_elm_id_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_untyped_collection_1aebf5af4f6a9b0376dd35e1fb3fd85bac" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>UntypedCollection</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1a5f98da4f22c55e58f5759eb84ac7cd06" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>VrtBase</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1a7cc2b4f4ad3f2807e73b3d7a0a5b3676" prot="public" virt="non-virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>VrtBase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_base_1aa343e5527cb05addb8bbb04994ebc23e" prot="public" virt="virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>~CollectionBase</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1a16d15fcaabbf2e477315466dcaaa6f84" prot="public" virt="virtual"><scope>vt::vrt::collection::StaticCollectionBase</scope><name>~VrtBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
