<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1util_1_1json_1_1_output_adaptor" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::json::OutputAdaptor</compoundname>
    <basecompoundref prot="public" virt="non-virtual">nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</basecompoundref>
    <includes refid="output__adaptor_8h" local="no">output_adaptor.h</includes>
    <templateparamlist>
      <param>
        <type>typename StreamLike</type>
      </param>
      <param>
        <type>typename CharType</type>
        <defval>char</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_output_adaptor_1a13ebcf1c0ce85c2f255d72af9f9b6422" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1util_1_1compress_1_1_compressor" kindref="compound">compress::Compressor</ref> &gt;</type>
        <definition>std::unique_ptr&lt;compress::Compressor&gt; vt::util::json::OutputAdaptor&lt; StreamLike, CharType &gt;::c_</definition>
        <argsstring></argsstring>
        <name>c_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The compressor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/output_adaptor.h" line="106" column="1" bodyfile="src/vt/utils/json/output_adaptor.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_output_adaptor_1aef3a9e890ea22507fe71186a33dd8aff" prot="private" static="no" mutable="no">
        <type>StreamLike &amp;</type>
        <definition>StreamLike&amp; vt::util::json::OutputAdaptor&lt; StreamLike, CharType &gt;::os_</definition>
        <argsstring></argsstring>
        <name>os_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The output stream </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/output_adaptor.h" line="107" column="1" bodyfile="src/vt/utils/json/output_adaptor.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_output_adaptor_1a7a8ffe897d20ef9637522d7745d40842" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::util::json::OutputAdaptor&lt; StreamLike, CharType &gt;::OutputAdaptor</definition>
        <argsstring>(StreamLike &amp;in_os, bool compress)</argsstring>
        <name>OutputAdaptor</name>
        <param>
          <type>StreamLike &amp;</type>
          <declname>in_os</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>compress</declname>
        </param>
        <briefdescription>
<para>Construct with a stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_os</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">compress</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to compress the output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/output_adaptor.h" line="68" column="1" bodyfile="src/vt/utils/json/output_adaptor.h" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_output_adaptor_1a78b899ff96a6540a7f50545c2d527602" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::json::OutputAdaptor&lt; StreamLike, CharType &gt;::write_character</definition>
        <argsstring>(CharType c) override</argsstring>
        <name>write_character</name>
        <param>
          <type>CharType</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Write a single character to the output. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>the character </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/output_adaptor.h" line="78" column="1" bodyfile="src/vt/utils/json/output_adaptor.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_output_adaptor_1a15247f9d55e0fb68e91031360be5952d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::json::OutputAdaptor&lt; StreamLike, CharType &gt;::write_characters</definition>
        <argsstring>(CharType const *s, std::size_t length) override</argsstring>
        <name>write_characters</name>
        <param>
          <type>CharType const *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Write an array of characters to the output. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the array </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/output_adaptor.h" line="88" column="1" bodyfile="src/vt/utils/json/output_adaptor.h" bodystart="88" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_output_adaptor_1af564b111175dfa476ac7e942b5378012" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual vt::util::json::OutputAdaptor&lt; StreamLike, CharType &gt;::~OutputAdaptor</definition>
        <argsstring>()</argsstring>
        <name>~OutputAdaptor</name>
        <briefdescription>
<para>Finalize output, flush, and finish compression if need be. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/output_adaptor.h" line="99" column="1" bodyfile="src/vt/utils/json/output_adaptor.h" bodystart="99" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A custom output adaptor for optionally compressing the data before outputting to a stream. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2965">
        <label>vt::util::json::OutputAdaptor&lt; StreamLike, CharType &gt;</label>
        <link refid="structvt_1_1util_1_1json_1_1_output_adaptor"/>
        <childnode refid="2966" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2966">
        <label>nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2967">
        <label>vt::util::json::OutputAdaptor&lt; StreamLike, CharType &gt;</label>
        <link refid="structvt_1_1util_1_1json_1_1_output_adaptor"/>
        <childnode refid="2968" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2968">
        <label>nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</label>
      </node>
    </collaborationgraph>
    <location file="src/vt/utils/json/output_adaptor.h" line="60" column="1" bodyfile="src/vt/utils/json/output_adaptor.h" bodystart="60" bodyend="108"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1json_1_1_output_adaptor_1a13ebcf1c0ce85c2f255d72af9f9b6422" prot="private" virt="non-virtual"><scope>vt::util::json::OutputAdaptor</scope><name>c_</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_output_adaptor_1aef3a9e890ea22507fe71186a33dd8aff" prot="private" virt="non-virtual"><scope>vt::util::json::OutputAdaptor</scope><name>os_</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_output_adaptor_1a7a8ffe897d20ef9637522d7745d40842" prot="public" virt="non-virtual"><scope>vt::util::json::OutputAdaptor</scope><name>OutputAdaptor</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_output_adaptor_1a78b899ff96a6540a7f50545c2d527602" prot="public" virt="non-virtual"><scope>vt::util::json::OutputAdaptor</scope><name>write_character</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_output_adaptor_1a15247f9d55e0fb68e91031360be5952d" prot="public" virt="non-virtual"><scope>vt::util::json::OutputAdaptor</scope><name>write_characters</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_output_adaptor_1af564b111175dfa476ac7e942b5378012" prot="public" virt="virtual"><scope>vt::util::json::OutputAdaptor</scope><name>~OutputAdaptor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
