<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::param::ConstructParams</compoundname>
    <includes refid="construct__params_8h" local="no">construct_params.h</includes>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1_1_builder_tag" prot="private">vt::vrt::collection::param::ConstructParams::BuilderTag</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>ColT</declname>
        <defname>ColT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" prot="public" static="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params" kindref="compound">ConstructParams</ref>&lt; ColT &gt;</type>
        <definition>using vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::ThisType =  ConstructParams&lt;ColT&gt;</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="78" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7bc8d5d57e377e0f2e60031582eeb7e6" prot="public" static="no">
        <type>typename ColT::IndexType</type>
        <definition>using vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::IndexType =  typename ColT::IndexType</definition>
        <argsstring></argsstring>
        <name>IndexType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="79" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a837fb2b2a036f898fb65da72d3ee2fb0" prot="public" static="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy" kindref="compound">CollectionProxy</ref>&lt; ColT &gt;</type>
        <definition>using vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::ProxyType =  CollectionProxy&lt;ColT&gt;</definition>
        <argsstring></argsstring>
        <name>ProxyType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="80" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a4275ecc44239ac1aeedea9d31e93c78f" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7bc8d5d57e377e0f2e60031582eeb7e6" kindref="member">IndexType</ref>)&gt;</type>
        <definition>using vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::ApplyFnType =  std::function&lt;void(IndexType)&gt;</definition>
        <argsstring></argsstring>
        <name>ApplyFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="81" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ae1b51eac652fafee85f4c370e2c3b585" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a837fb2b2a036f898fb65da72d3ee2fb0" kindref="member">ProxyType</ref>)&gt;</type>
        <definition>using vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::ProxyFnType =  std::function&lt;void(ProxyType)&gt;</definition>
        <argsstring></argsstring>
        <name>ProxyFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="82" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a51c2b552a29b508b728b2e903d6073b1" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_base" kindref="compound">CollectionBase</ref>&lt; ColT, <ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7bc8d5d57e377e0f2e60031582eeb7e6" kindref="member">IndexType</ref> &gt; &gt;</type>
        <definition>using vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::VirtualPtrType =  std::unique_ptr&lt;CollectionBase&lt;ColT,IndexType&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>VirtualPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="83" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7ad7bdf4220701e54b485f45e08b1736" prot="public" static="no">
        <type>std::function&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a51c2b552a29b508b728b2e903d6073b1" kindref="member">VirtualPtrType</ref>(<ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7bc8d5d57e377e0f2e60031582eeb7e6" kindref="member">IndexType</ref>)&gt;</type>
        <definition>using vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::ConstructFnType =  std::function&lt;VirtualPtrType(IndexType)&gt;</definition>
        <argsstring></argsstring>
        <name>ConstructFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="84" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1aabef3a4ec2a70d29d2b5161daf66e153" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a4275ecc44239ac1aeedea9d31e93c78f" kindref="member">ApplyFnType</ref>)&gt;</type>
        <definition>using vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::ListInsertType =  std::function&lt;void(ApplyFnType)&gt;</definition>
        <argsstring></argsstring>
        <name>ListInsertType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="85" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ac04e58216ca54c39b91f15f6bb46afc9" prot="public" static="no">
        <type>std::tuple&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7bc8d5d57e377e0f2e60031582eeb7e6" kindref="member">IndexType</ref>, std::unique_ptr&lt; ColT &gt; &gt;</type>
        <definition>using vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::ListInsertElmType =  std::tuple&lt;IndexType, std::unique_ptr&lt;ColT&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ListInsertElmType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="86" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a8a00b8a2017cec4453e2be8dd90742c7" prot="public" static="no" mutable="no">
        <type>friend</type>
        <definition>friend vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::CollectionManager</definition>
        <argsstring></argsstring>
        <name>CollectionManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="130" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a07775dd24ad9720f285dfcdc1cb67183" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7bc8d5d57e377e0f2e60031582eeb7e6" kindref="member">IndexType</ref></type>
        <definition>IndexType vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::bounds_</definition>
        <argsstring></argsstring>
        <name>bounds_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="387" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1aa95c1b3041766b6ad0b804abb9a5f356" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::has_bounds_</definition>
        <argsstring></argsstring>
        <name>has_bounds_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="388" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a4de8932b1c4f4e4e0998630cbe6ed08f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7bc8d5d57e377e0f2e60031582eeb7e6" kindref="member">IndexType</ref> &gt;</type>
        <definition>std::vector&lt;IndexType&gt; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::bulk_inserts_</definition>
        <argsstring></argsstring>
        <name>bulk_inserts_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="389" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a46f83ed1ec69ebea9d27112fc2d90ce6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1aabef3a4ec2a70d29d2b5161daf66e153" kindref="member">ListInsertType</ref> &gt;</type>
        <definition>std::vector&lt;ListInsertType&gt; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::list_inserts_</definition>
        <argsstring></argsstring>
        <name>list_inserts_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="390" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a8ffde01cec988a409f7858f27e0c99a1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ac04e58216ca54c39b91f15f6bb46afc9" kindref="member">ListInsertElmType</ref> &gt;</type>
        <definition>std::vector&lt;ListInsertElmType&gt; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::list_insert_here_</definition>
        <argsstring></argsstring>
        <name>list_insert_here_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="391" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1aa847998b769d10a8badfc95543113f52" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::bulk_insert_bounds_</definition>
        <argsstring></argsstring>
        <name>bulk_insert_bounds_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="392" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a2321e2cd2e2ca8086ed5c4fa691a8900" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7ad7bdf4220701e54b485f45e08b1736" kindref="member">ConstructFnType</ref></type>
        <definition>ConstructFnType vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::cons_fn_</definition>
        <argsstring></argsstring>
        <name>cons_fn_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="393" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ab032b5a40a6ffdd0b763af5968cec42a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::dynamic_membership_</definition>
        <argsstring></argsstring>
        <name>dynamic_membership_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="394" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ac642a152bed0d228e9831b4e9b5d3ca4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::collective_</definition>
        <argsstring></argsstring>
        <name>collective_</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="395" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1afa286d4b8ca9798c7cf70f2a039ee49d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::constructed_</definition>
        <argsstring></argsstring>
        <name>constructed_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="396" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a811d67f8d46e6b6ad2736bba81201354" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::migratable_</definition>
        <argsstring></argsstring>
        <name>migratable_</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="397" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1adfb5a4ecef96e720c6f8d48ac3f52706" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::map_han_</definition>
        <argsstring></argsstring>
        <name>map_han_</name>
        <initializer>= uninitialized_handler</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="398" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a459e1541fd22e637a616ca1f1f899124" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
        <definition>VirtualProxyType vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::proxy_bits_</definition>
        <argsstring></argsstring>
        <name>proxy_bits_</name>
        <initializer>= no_vrt_proxy</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="399" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a91859be49e51c141fd83e27499d5d582" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref></type>
        <definition>ObjGroupProxyType vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::map_object_</definition>
        <argsstring></argsstring>
        <name>map_object_</name>
        <initializer>= no_obj_group</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="400" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a41900d135214f06c2d2b4e7c9d9ae1aa" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::ConstructParams</definition>
        <argsstring>(BuilderTag, bool const in_is_collective)</argsstring>
        <name>ConstructParams</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1_1_builder_tag" kindref="compound">BuilderTag</ref></type>
        </param>
        <param>
          <type>bool const</type>
          <declname>in_is_collective</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="91" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ae6f31177ec60c98d598b6df9eda8d06a" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7ad7bdf4220701e54b485f45e08b1736" kindref="member">ConstructFnType</ref></type>
        <definition>ConstructFnType vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::getConsFn</definition>
        <argsstring>(typename std::enable_if_t&lt; std::is_default_constructible&lt; U &gt;::value &gt; *=nullptr) const</argsstring>
        <name>getConsFn</name>
        <param>
          <type>typename std::enable_if_t&lt; std::is_default_constructible&lt; U &gt;::value &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Get the element constructor function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="334" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="334" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ab0d89974dff84686c16173b93881c0e8" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7ad7bdf4220701e54b485f45e08b1736" kindref="member">ConstructFnType</ref></type>
        <definition>ConstructFnType vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::getConsFn</definition>
        <argsstring>(typename std::enable_if_t&lt;!std::is_default_constructible&lt; U &gt;::value &gt; *=nullptr) const</argsstring>
        <name>getConsFn</name>
        <param>
          <type>typename std::enable_if_t&lt;!std::is_default_constructible&lt; U &gt;::value &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Get the element constructor function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="348" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="348" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a6290541ab30870daf78af1984ddc164d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::validateInputs</definition>
        <argsstring>()</argsstring>
        <name>validateInputs</name>
        <briefdescription>
<para>Validate the configuration inputs before constructing the collection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="358" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="358" bodyend="365"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a5953d04785ee9f3eeaab29a45a012076" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref></type>
        <definition>ThisType makeCollectionImpl</definition>
        <argsstring>(bool const)</argsstring>
        <name>makeCollectionImpl</name>
        <param>
          <type>bool</type>
          <declname>const</declname>
          <defname>is_collective</defname>
        </param>
        <briefdescription>
<para>fwd-declare the builder helper function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="95" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="404" bodyend="408"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a0ea4f0b3c357c821f2de1147b40b8406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::ConstructParams</definition>
        <argsstring>()=default</argsstring>
        <name>ConstructParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ab64595f80b2c21decb1052b8182bc065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::ConstructParams</definition>
        <argsstring>(ConstructParams &amp;&amp;)=default</argsstring>
        <name>ConstructParams</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params" kindref="compound">ConstructParams</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a430216ddd65cdd399c97c0e32cbc5e35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::ConstructParams</definition>
        <argsstring>(ConstructParams const &amp;x)</argsstring>
        <name>ConstructParams</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params" kindref="compound">ConstructParams</ref> const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="101" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="101" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a554d80e7579966d403ab9ce3192cc917" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::~ConstructParams</definition>
        <argsstring>()</argsstring>
        <name>~ConstructParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="132" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="132" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a51f2e63f9685930f39c646886e778c32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::bounds</definition>
        <argsstring>(IndexType in_bounds)</argsstring>
        <name>bounds</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7bc8d5d57e377e0f2e60031582eeb7e6" kindref="member">IndexType</ref></type>
          <declname>in_bounds</declname>
        </param>
        <briefdescription>
<para>Specify the bounds for the collection. If it doesn&apos;t have dynamic membership this whole range will be constructed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>the collection bounds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="146" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ae84568f9ea86b3b5a5aa86eca8962db0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::migratable</definition>
        <argsstring>(bool is_migratable)</argsstring>
        <name>migratable</name>
        <param>
          <type>bool</type>
          <declname>is_migratable</declname>
        </param>
        <briefdescription>
<para>Whether this is collection is migratable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_migratable</parametername>
</parameternamelist>
<parameterdescription>
<para>is migratable? </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="157" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="157" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1af1b7987a920abbb7bed2cc49e4cfb85e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespacevt_1_1mapping_1ad7c0812428b339edd904a865e0080ecd" kindref="member">mapping::ActiveMapTypedFnType</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7bc8d5d57e377e0f2e60031582eeb7e6" kindref="member">IndexType</ref> &gt;</type>
            <declname>fn</declname>
            <defname>fn</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::mapperFunc</definition>
        <argsstring>()</argsstring>
        <name>mapperFunc</name>
        <briefdescription>
<para>Explicitly specify and register a map for the collection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="167" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a6e8498d29e4daaade3e4cb4b6dfa05de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::mapperHandler</definition>
        <argsstring>(HandlerType in_map_han)</argsstring>
        <name>mapperHandler</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>in_map_han</declname>
        </param>
        <briefdescription>
<para>Explicitly specify and register a map for the collection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="175" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7b87280234cb49d5732ac4224d0ecf31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename ProxyT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::mapperObjGroup</definition>
        <argsstring>(ProxyT proxy)</argsstring>
        <name>mapperObjGroup</name>
        <param>
          <type>ProxyT</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
<para>Explicitly specify an existing objgroup for the mapper. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="184" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1abceacbbd603ff24555e8878a051fb81c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::mapperObjGroup</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>mapperObjGroup</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Explicitly specify an existing objgroup for the mapper. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Only valid as a collective invocation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="195" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="195" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a1a9710ed590f69867feccae0f432b724" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::elementConstructor</definition>
        <argsstring>(ConstructFnType in_cons_fn)</argsstring>
        <name>elementConstructor</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7ad7bdf4220701e54b485f45e08b1736" kindref="member">ConstructFnType</ref></type>
          <declname>in_cons_fn</declname>
        </param>
        <briefdescription>
<para>Specify a non-default constructor for each element. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Only valid with collective construction</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_cons_fn</parametername>
</parameternamelist>
<parameterdescription>
<para>the construction function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="209" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a2f27d980a653cfa641723f03e7b13e87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::dynamicMembership</definition>
        <argsstring>(bool is_dynamic_membership)</argsstring>
        <name>dynamicMembership</name>
        <param>
          <type>bool</type>
          <declname>is_dynamic_membership</declname>
        </param>
        <briefdescription>
<para>Specify whether the collection has dynamic membership. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_dynamic_membership</parametername>
</parameternamelist>
<parameterdescription>
<para>dynamic membership? </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="219" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1af03cf3f305c56e36de87c537e8356f0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::bulkInsert</definition>
        <argsstring>(IndexType in_bulk_range)</argsstring>
        <name>bulkInsert</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7bc8d5d57e377e0f2e60031582eeb7e6" kindref="member">IndexType</ref></type>
          <declname>in_bulk_range</declname>
        </param>
        <briefdescription>
<para>Bulk insert a range for the collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_bulk_range</parametername>
</parameternamelist>
<parameterdescription>
<para>the bulk insertion range </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="229" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1abf7e7faa810ea7d6c3a3abf0ad732a01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::bulkInsert</definition>
        <argsstring>()</argsstring>
        <name>bulkInsert</name>
        <briefdescription>
<para>Bulk insert the entire bounds of a collection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="237" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a3338b667df3ff4cb3977d90e7cb09470" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iter</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::listInsert</definition>
        <argsstring>(Iter begin, Iter end)</argsstring>
        <name>listInsert</name>
        <param>
          <type>Iter</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Insert a list of elements. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Only valid with collective construction</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>begin iterator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>end iterator </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="251" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="251" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a1eead7ea3a977ef78a82c81da0fb7d65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Container</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::listInsert</definition>
        <argsstring>(Container const &amp;c)</argsstring>
        <name>listInsert</name>
        <param>
          <type>Container const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Insert a list of elements. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Only valid with collective construction</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>the iterable container of elements to insert </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="268" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="268" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7e41be76dfbb53f0709983801f7dec83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Container</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::listInsertHere</definition>
        <argsstring>(Container &amp;&amp;c)</argsstring>
        <name>listInsertHere</name>
        <param>
          <type>Container &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Insert a list of elements here (on this node) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Only valid with collective construction</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>the iterable container of elements to insert </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="280" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="280" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a76b651b37044ec8602f04ac97c90035b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iter</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::listInsertHere</definition>
        <argsstring>(Iter begin, Iter end)</argsstring>
        <name>listInsertHere</name>
        <param>
          <type>Iter</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Insert a list of elements here (on this node) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Only valid with collective construction</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>the iterable container of elements to insert </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="292" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="292" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ae74cccae180eb7f0aedf0650396fb8cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::deferWithEpoch</definition>
        <argsstring>(ProxyFnType cb)</argsstring>
        <name>deferWithEpoch</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ae1b51eac652fafee85f4c370e2c3b585" kindref="member">ProxyFnType</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Construct and return an epoch to wait on for construction to finish. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>callback with the proxy once the collection&apos;s construction is complete</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the epoch to wait on </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="307" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.impl.h" bodystart="52" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1adc5b2150526c86cb3ce556f7cd865a0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a837fb2b2a036f898fb65da72d3ee2fb0" kindref="member">ProxyType</ref></type>
        <definition>ConstructParams&lt; ColT &gt;::ProxyType vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::wait</definition>
        <argsstring>()</argsstring>
        <name>wait</name>
        <briefdescription>
<para>Wait for construction to complete and then return the proxy. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the proxy after the construction is complete </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="314" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.impl.h" bodystart="73" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1aded96b7d8b93f3ae8b91c419cbce6ddd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" kindref="member">ThisType</ref> &amp;&amp;</type>
        <definition>ThisType&amp;&amp; vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::collective</definition>
        <argsstring>(bool is_collective)</argsstring>
        <name>collective</name>
        <param>
          <type>bool</type>
          <declname>is_collective</declname>
        </param>
        <briefdescription>
<para>Specify whether this is a collective construction of the collection. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="warning"><para>Only for use internally for testing</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_collective</parametername>
</parameternamelist>
<parameterdescription>
<para>is collective? </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="324" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="324" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a315a60ef3b90e398f68a8abf02561b05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::param::ConstructParams&lt; ColT &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/param/construct_params.h" line="369" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="369" bodyend="384"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>fwd-declare the PO constructor </para>    </briefdescription>
    <detaileddescription>
<para>A parameter configuration object for building a collection. </para>    </detaileddescription>
    <location file="src/vt/vrt/collection/param/construct_params.h" line="65" column="1" bodyfile="src/vt/vrt/collection/param/construct_params.h" bodystart="65" bodyend="-1"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a4275ecc44239ac1aeedea9d31e93c78f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>ApplyFnType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a51f2e63f9685930f39c646886e778c32" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>bounds</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a07775dd24ad9720f285dfcdc1cb67183" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>bounds_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1aa847998b769d10a8badfc95543113f52" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>bulk_insert_bounds_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a4de8932b1c4f4e4e0998630cbe6ed08f" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>bulk_inserts_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1af03cf3f305c56e36de87c537e8356f0a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>bulkInsert</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1abf7e7faa810ea7d6c3a3abf0ad732a01" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>bulkInsert</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a8a00b8a2017cec4453e2be8dd90742c7" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>CollectionManager</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1aded96b7d8b93f3ae8b91c419cbce6ddd" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>collective</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ac642a152bed0d228e9831b4e9b5d3ca4" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>collective_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a2321e2cd2e2ca8086ed5c4fa691a8900" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>cons_fn_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1afa286d4b8ca9798c7cf70f2a039ee49d" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>constructed_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7ad7bdf4220701e54b485f45e08b1736" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>ConstructFnType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a41900d135214f06c2d2b4e7c9d9ae1aa" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>ConstructParams</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a0ea4f0b3c357c821f2de1147b40b8406" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>ConstructParams</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ab64595f80b2c21decb1052b8182bc065" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>ConstructParams</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a430216ddd65cdd399c97c0e32cbc5e35" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>ConstructParams</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ae74cccae180eb7f0aedf0650396fb8cc" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>deferWithEpoch</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ab032b5a40a6ffdd0b763af5968cec42a" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>dynamic_membership_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a2f27d980a653cfa641723f03e7b13e87" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>dynamicMembership</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a1a9710ed590f69867feccae0f432b724" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>elementConstructor</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ae6f31177ec60c98d598b6df9eda8d06a" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>getConsFn</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ab0d89974dff84686c16173b93881c0e8" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>getConsFn</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1aa95c1b3041766b6ad0b804abb9a5f356" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>has_bounds_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7bc8d5d57e377e0f2e60031582eeb7e6" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>IndexType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a8ffde01cec988a409f7858f27e0c99a1" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>list_insert_here_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a46f83ed1ec69ebea9d27112fc2d90ce6" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>list_inserts_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a3338b667df3ff4cb3977d90e7cb09470" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>listInsert</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a1eead7ea3a977ef78a82c81da0fb7d65" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>listInsert</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ac04e58216ca54c39b91f15f6bb46afc9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>ListInsertElmType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7e41be76dfbb53f0709983801f7dec83" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>listInsertHere</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a76b651b37044ec8602f04ac97c90035b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>listInsertHere</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1aabef3a4ec2a70d29d2b5161daf66e153" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>ListInsertType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a5953d04785ee9f3eeaab29a45a012076" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>makeCollectionImpl</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1adfb5a4ecef96e720c6f8d48ac3f52706" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>map_han_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a91859be49e51c141fd83e27499d5d582" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>map_object_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1af1b7987a920abbb7bed2cc49e4cfb85e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>mapperFunc</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a6e8498d29e4daaade3e4cb4b6dfa05de" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>mapperHandler</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a7b87280234cb49d5732ac4224d0ecf31" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>mapperObjGroup</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1abceacbbd603ff24555e8878a051fb81c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>mapperObjGroup</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ae84568f9ea86b3b5a5aa86eca8962db0" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>migratable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a811d67f8d46e6b6ad2736bba81201354" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>migratable_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a459e1541fd22e637a616ca1f1f899124" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>proxy_bits_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1ae1b51eac652fafee85f4c370e2c3b585" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>ProxyFnType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a837fb2b2a036f898fb65da72d3ee2fb0" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>ProxyType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a315a60ef3b90e398f68a8abf02561b05" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a13d4910c0f6825c7b0ddfebce5288bea" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>ThisType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a6290541ab30870daf78af1984ddc164d" prot="private" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>validateInputs</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a51c2b552a29b508b728b2e903d6073b1" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>VirtualPtrType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1adc5b2150526c86cb3ce556f7cd865a0c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>wait</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1param_1_1_construct_params_1a554d80e7579966d403ab9ce3192cc917" prot="public" virt="non-virtual"><scope>vt::vrt::collection::param::ConstructParams</scope><name>~ConstructParams</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
