<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacevt_1_1util_1_1memory" kind="namespace" language="C++">
    <compoundname>vt::util::memory</compoundname>
    <innerclass refid="structvt_1_1util_1_1memory_1_1_comma_delimit" prot="public">vt::util::memory::CommaDelimit</innerclass>
    <innerclass refid="structvt_1_1util_1_1memory_1_1_getrusage" prot="public">vt::util::memory::Getrusage</innerclass>
    <innerclass refid="structvt_1_1util_1_1memory_1_1_mach_task_info" prot="public">vt::util::memory::MachTaskInfo</innerclass>
    <innerclass refid="structvt_1_1util_1_1memory_1_1_mallinfo" prot="public">vt::util::memory::Mallinfo</innerclass>
    <innerclass refid="structvt_1_1util_1_1memory_1_1_memory_usage" prot="public">vt::util::memory::MemoryUsage</innerclass>
    <innerclass refid="structvt_1_1util_1_1memory_1_1_mimalloc" prot="public">vt::util::memory::Mimalloc</innerclass>
    <innerclass refid="structvt_1_1util_1_1memory_1_1_mstats" prot="public">vt::util::memory::Mstats</innerclass>
    <innerclass refid="structvt_1_1util_1_1memory_1_1_p_s" prot="public">vt::util::memory::PS</innerclass>
    <innerclass refid="structvt_1_1util_1_1memory_1_1_reporter" prot="public">vt::util::memory::Reporter</innerclass>
    <innerclass refid="structvt_1_1util_1_1memory_1_1_sbrk" prot="public">vt::util::memory::Sbrk</innerclass>
    <innerclass refid="structvt_1_1util_1_1memory_1_1_stat" prot="public">vt::util::memory::Stat</innerclass>
    <innerclass refid="structvt_1_1util_1_1memory_1_1_stat_m" prot="public">vt::util::memory::StatM</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacevt_1_1util_1_1memory_1a64df3d84293b34009f78e2a1db2f9bb6" prot="public" static="no">
        <name>MemoryUnitEnum</name>
        <enumvalue id="namespacevt_1_1util_1_1memory_1a64df3d84293b34009f78e2a1db2f9bb6a600e754f49b68aa0fc90a9cd64eb7051" prot="public">
          <name>Bytes</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1util_1_1memory_1a64df3d84293b34009f78e2a1db2f9bb6aa3a6c675a174320497f3bed7e8dc3329" prot="public">
          <name>Kilobytes</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1util_1_1memory_1a64df3d84293b34009f78e2a1db2f9bb6a2276a1b157f2813f3b65d04c0b1c56f6" prot="public">
          <name>Megabytes</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1util_1_1memory_1a64df3d84293b34009f78e2a1db2f9bb6af6f7ad0fd5914138fb449b9011c8de7a" prot="public">
          <name>Gigabytes</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_units.h" line="54" column="1" bodyfile="src/vt/utils/memory/memory_units.h" bodystart="54" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1util_1_1memory_1aa772e07fd4860ed4086654c53eed51c2" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1util_1_1memory_1a64df3d84293b34009f78e2a1db2f9bb6" kindref="member">MemoryUnitEnum</ref>, std::string &gt;</type>
        <definition>std::unordered_map&lt;MemoryUnitEnum, std::string&gt; vt::util::memory::memory_unit_names</definition>
        <argsstring></argsstring>
        <name>memory_unit_names</name>
        <initializer>= {
  {<ref refid="namespacevt_1_1util_1_1memory_1a64df3d84293b34009f78e2a1db2f9bb6a600e754f49b68aa0fc90a9cd64eb7051" kindref="member">MemoryUnitEnum::Bytes</ref>,     std::string{&quot;B&quot;}},
  {MemoryUnitEnum::Kilobytes, std::string{&quot;KiB&quot;}},
  {MemoryUnitEnum::Megabytes, std::string{&quot;MiB&quot;}},
  {MemoryUnitEnum::Gigabytes, std::string{&quot;GiB&quot;}}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_units.cc" line="52" column="1" bodyfile="src/vt/utils/memory/memory_units.cc" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1util_1_1memory_1a6a1de4e8806e74e6e0ef92e4262b654b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vt::util::memory::getMemoryUnitName</definition>
        <argsstring>(MemoryUnitEnum unit)</argsstring>
        <name>getMemoryUnitName</name>
        <param>
          <type><ref refid="namespacevt_1_1util_1_1memory_1a64df3d84293b34009f78e2a1db2f9bb6" kindref="member">MemoryUnitEnum</ref></type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_units.cc" line="59" column="1" bodyfile="src/vt/utils/memory/memory_units.cc" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1util_1_1memory_1aeceb7d7ac924dd3d88a58eab5ebf64f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1util_1_1memory_1a64df3d84293b34009f78e2a1db2f9bb6" kindref="member">MemoryUnitEnum</ref></type>
        <definition>MemoryUnitEnum vt::util::memory::getUnitFromString</definition>
        <argsstring>(std::string const &amp;unit)</argsstring>
        <name>getUnitFromString</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_units.cc" line="63" column="1" bodyfile="src/vt/utils/memory/memory_units.cc" bodystart="63" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1util_1_1memory_1afe1acbbca9aa1bd7310548cefd40045c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream&amp; vt::util::memory::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, CommaDelimit &amp;output)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1util_1_1memory_1_1_comma_delimit" kindref="compound">CommaDelimit</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.cc" line="301" column="1" bodyfile="src/vt/utils/memory/memory_usage.cc" bodystart="301" bodyend="304"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/runtime/runtime_component_fwd.h" line="108" column="1"/>
  </compounddef>
</doxygen>
