<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="raw__data_8cc" kind="file" language="C++">
    <compoundname>raw_data.cc</compoundname>
    <includes refid="raw__data_8h" local="yes">vt/vrt/collection/balance/model/raw_data.h</includes>
    <incdepgraph>
      <node id="305245">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
      </node>
      <node id="305255">
        <label>functional</label>
      </node>
      <node id="305261">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="305250" relation="include">
        </childnode>
        <childnode refid="305254" relation="include">
        </childnode>
        <childnode refid="305251" relation="include">
        </childnode>
      </node>
      <node id="305250">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="305251" relation="include">
        </childnode>
        <childnode refid="305252" relation="include">
        </childnode>
      </node>
      <node id="305285">
        <label>vt/timing/timing_type.h</label>
        <link refid="timing__type_8h"/>
        <childnode refid="305240" relation="include">
        </childnode>
      </node>
      <node id="305244">
        <label>cstdint</label>
      </node>
      <node id="305280">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="305266" relation="include">
        </childnode>
        <childnode refid="305254" relation="include">
        </childnode>
        <childnode refid="305274" relation="include">
        </childnode>
        <childnode refid="305279" relation="include">
        </childnode>
        <childnode refid="305281" relation="include">
        </childnode>
        <childnode refid="305261" relation="include">
        </childnode>
        <childnode refid="305278" relation="include">
        </childnode>
        <childnode refid="305257" relation="include">
        </childnode>
        <childnode refid="305271" relation="include">
        </childnode>
        <childnode refid="305251" relation="include">
        </childnode>
        <childnode refid="305283" relation="include">
        </childnode>
        <childnode refid="305263" relation="include">
        </childnode>
      </node>
      <node id="305237">
        <label>src/vt/vrt/collection/balance/model/raw_data.cc</label>
        <link refid="raw__data_8cc"/>
        <childnode refid="305238" relation="include">
        </childnode>
      </node>
      <node id="305278">
        <label>cassert</label>
      </node>
      <node id="305275">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="305266" relation="include">
        </childnode>
        <childnode refid="305254" relation="include">
        </childnode>
        <childnode refid="305274" relation="include">
        </childnode>
        <childnode refid="305276" relation="include">
        </childnode>
        <childnode refid="305261" relation="include">
        </childnode>
        <childnode refid="305268" relation="include">
        </childnode>
        <childnode refid="305257" relation="include">
        </childnode>
        <childnode refid="305271" relation="include">
        </childnode>
        <childnode refid="305251" relation="include">
        </childnode>
        <childnode refid="305278" relation="include">
        </childnode>
        <childnode refid="305263" relation="include">
        </childnode>
      </node>
      <node id="305288">
        <label>fmt/ostream.h</label>
      </node>
      <node id="305258">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="305259" relation="include">
        </childnode>
      </node>
      <node id="305266">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="305253" relation="include">
        </childnode>
        <childnode refid="305267" relation="include">
        </childnode>
      </node>
      <node id="305259">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
      </node>
      <node id="305264">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="305265" relation="include">
        </childnode>
        <childnode refid="305269" relation="include">
        </childnode>
        <childnode refid="305273" relation="include">
        </childnode>
      </node>
      <node id="305251">
        <label>string</label>
      </node>
      <node id="305281">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="305266" relation="include">
        </childnode>
        <childnode refid="305243" relation="include">
        </childnode>
        <childnode refid="305277" relation="include">
        </childnode>
        <childnode refid="305257" relation="include">
        </childnode>
        <childnode refid="305271" relation="include">
        </childnode>
        <childnode refid="305251" relation="include">
        </childnode>
        <childnode refid="305252" relation="include">
        </childnode>
        <childnode refid="305282" relation="include">
        </childnode>
      </node>
      <node id="305282">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="305281" relation="include">
        </childnode>
        <childnode refid="305261" relation="include">
        </childnode>
        <childnode refid="305277" relation="include">
        </childnode>
        <childnode refid="305257" relation="include">
        </childnode>
        <childnode refid="305271" relation="include">
        </childnode>
        <childnode refid="305251" relation="include">
        </childnode>
        <childnode refid="305252" relation="include">
        </childnode>
        <childnode refid="305263" relation="include">
        </childnode>
      </node>
      <node id="305247">
        <label>vt/configs/features/features_enableif.h</label>
        <link refid="features__enableif_8h"/>
        <childnode refid="305246" relation="include">
        </childnode>
      </node>
      <node id="305287">
        <label>ostream</label>
      </node>
      <node id="305243">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="305244" relation="include">
        </childnode>
        <childnode refid="305245" relation="include">
        </childnode>
        <childnode refid="305246" relation="include">
        </childnode>
        <childnode refid="305247" relation="include">
        </childnode>
        <childnode refid="305248" relation="include">
        </childnode>
      </node>
      <node id="305239">
        <label>vt/vrt/collection/balance/model/load_model.h</label>
        <link refid="load__model_8h"/>
        <childnode refid="305240" relation="include">
        </childnode>
        <childnode refid="305284" relation="include">
        </childnode>
        <childnode refid="305289" relation="include">
        </childnode>
      </node>
      <node id="305260">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="305241" relation="include">
        </childnode>
        <childnode refid="305254" relation="include">
        </childnode>
        <childnode refid="305256" relation="include">
        </childnode>
      </node>
      <node id="305263">
        <label>fmt/core.h</label>
      </node>
      <node id="305241">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="305242" relation="include">
        </childnode>
        <childnode refid="305243" relation="include">
        </childnode>
        <childnode refid="305249" relation="include">
        </childnode>
      </node>
      <node id="305267">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="305251" relation="include">
        </childnode>
      </node>
      <node id="305254">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="305244" relation="include">
        </childnode>
        <childnode refid="305255" relation="include">
        </childnode>
      </node>
      <node id="305270">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="305253" relation="include">
        </childnode>
        <childnode refid="305243" relation="include">
        </childnode>
        <childnode refid="305266" relation="include">
        </childnode>
        <childnode refid="305251" relation="include">
        </childnode>
        <childnode refid="305257" relation="include">
        </childnode>
        <childnode refid="305271" relation="include">
        </childnode>
        <childnode refid="305272" relation="include">
        </childnode>
      </node>
      <node id="305262">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
      </node>
      <node id="305265">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="305254" relation="include">
        </childnode>
        <childnode refid="305266" relation="include">
        </childnode>
        <childnode refid="305268" relation="include">
        </childnode>
        <childnode refid="305251" relation="include">
        </childnode>
        <childnode refid="305263" relation="include">
        </childnode>
      </node>
      <node id="305257">
        <label>tuple</label>
      </node>
      <node id="305249">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="305250" relation="include">
        </childnode>
        <childnode refid="305253" relation="include">
        </childnode>
        <childnode refid="305243" relation="include">
        </childnode>
        <childnode refid="305261" relation="include">
        </childnode>
        <childnode refid="305262" relation="include">
        </childnode>
        <childnode refid="305263" relation="include">
        </childnode>
      </node>
      <node id="305252">
        <label>vector</label>
      </node>
      <node id="305283">
        <label>sstream</label>
      </node>
      <node id="305242">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="305276">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="305277" relation="include">
        </childnode>
        <childnode refid="305252" relation="include">
        </childnode>
        <childnode refid="305257" relation="include">
        </childnode>
      </node>
      <node id="305246">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
      </node>
      <node id="305277">
        <label>cstdlib</label>
      </node>
      <node id="305269">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="305266" relation="include">
        </childnode>
        <childnode refid="305270" relation="include">
        </childnode>
        <childnode refid="305257" relation="include">
        </childnode>
      </node>
      <node id="305286">
        <label>unordered_map</label>
      </node>
      <node id="305253">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="305254" relation="include">
        </childnode>
        <childnode refid="305256" relation="include">
        </childnode>
        <childnode refid="305258" relation="include">
        </childnode>
        <childnode refid="305260" relation="include">
        </childnode>
      </node>
      <node id="305289">
        <label>vt/vrt/collection/balance/lb_comm.h</label>
        <link refid="lb__comm_8h"/>
        <childnode refid="305240" relation="include">
        </childnode>
        <childnode refid="305284" relation="include">
        </childnode>
        <childnode refid="305286" relation="include">
        </childnode>
      </node>
      <node id="305274">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="305254" relation="include">
        </childnode>
        <childnode refid="305266" relation="include">
        </childnode>
        <childnode refid="305257" relation="include">
        </childnode>
        <childnode refid="305271" relation="include">
        </childnode>
        <childnode refid="305251" relation="include">
        </childnode>
        <childnode refid="305275" relation="include">
        </childnode>
      </node>
      <node id="305256">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="305241" relation="include">
        </childnode>
        <childnode refid="305254" relation="include">
        </childnode>
        <childnode refid="305244" relation="include">
        </childnode>
        <childnode refid="305255" relation="include">
        </childnode>
        <childnode refid="305257" relation="include">
        </childnode>
      </node>
      <node id="305271">
        <label>type_traits</label>
      </node>
      <node id="305268">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="305253" relation="include">
        </childnode>
        <childnode refid="305251" relation="include">
        </childnode>
      </node>
      <node id="305240">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="305241" relation="include">
        </childnode>
        <childnode refid="305253" relation="include">
        </childnode>
        <childnode refid="305264" relation="include">
        </childnode>
      </node>
      <node id="305238">
        <label>vt/vrt/collection/balance/model/raw_data.h</label>
        <link refid="raw__data_8h"/>
        <childnode refid="305239" relation="include">
        </childnode>
        <childnode refid="305289" relation="include">
        </childnode>
        <childnode refid="305286" relation="include">
        </childnode>
      </node>
      <node id="305248">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="305284">
        <label>vt/vrt/collection/balance/lb_common.h</label>
        <link refid="lb__common_8h"/>
        <childnode refid="305240" relation="include">
        </childnode>
        <childnode refid="305285" relation="include">
        </childnode>
        <childnode refid="305277" relation="include">
        </childnode>
        <childnode refid="305286" relation="include">
        </childnode>
        <childnode refid="305287" relation="include">
        </childnode>
        <childnode refid="305288" relation="include">
        </childnode>
      </node>
      <node id="305273">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="305243" relation="include">
        </childnode>
        <childnode refid="305254" relation="include">
        </childnode>
        <childnode refid="305266" relation="include">
        </childnode>
        <childnode refid="305274" relation="include">
        </childnode>
        <childnode refid="305279" relation="include">
        </childnode>
        <childnode refid="305281" relation="include">
        </childnode>
        <childnode refid="305257" relation="include">
        </childnode>
        <childnode refid="305271" relation="include">
        </childnode>
      </node>
      <node id="305279">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="305266" relation="include">
        </childnode>
        <childnode refid="305254" relation="include">
        </childnode>
        <childnode refid="305257" relation="include">
        </childnode>
        <childnode refid="305251" relation="include">
        </childnode>
        <childnode refid="305280" relation="include">
        </childnode>
      </node>
      <node id="305272">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="305253" relation="include">
        </childnode>
        <childnode refid="305243" relation="include">
        </childnode>
        <childnode refid="305266" relation="include">
        </childnode>
        <childnode refid="305270" relation="include">
        </childnode>
        <childnode refid="305268" relation="include">
        </childnode>
        <childnode refid="305251" relation="include">
        </childnode>
        <childnode refid="305257" relation="include">
        </childnode>
        <childnode refid="305271" relation="include">
        </childnode>
        <childnode refid="305263" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt">vt::vrt</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection">vt::vrt::collection</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection_1_1balance">vt::vrt::collection::balance</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_data.cc</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2021<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="raw__data_8h" kindref="compound">vt/vrt/collection/balance/model/raw_data.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a012d139c89a14e56a85f32fd82e7c7d3" kindref="member">vrt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">collection<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">balance<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a4aaae24a53ead0248b873911ce560a34" kindref="member">RawData::updateLoads</ref>(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/>last_completed_phase)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a9ceb9cf1dd88772821658e506d015397" kindref="member">last_completed_phase_</ref><sp/>=<sp/>last_completed_phase;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a782bcf1ecfd0a88ded3e98c83f08cc6f" kindref="member">RawData::setLoads</ref>(std::unordered_map&lt;PhaseType,<sp/>LoadMapType&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>proc_load,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;PhaseType,<sp/>SubphaseLoadMapType&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>proc_subphase_load,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;PhaseType,<sp/>CommMapType&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>proc_comm)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a8ba841120376e38c83484365b57fc719" kindref="member">proc_load_</ref><sp/>=<sp/>proc_load;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1afc0c2273b3e7987e386c5d1b77289413" kindref="member">proc_subphase_load_</ref><sp/>=<sp/>proc_subphase_load;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a1e350ebf1bd9b3c94fdbc371779b8832" kindref="member">proc_comm_</ref><sp/>=<sp/>proc_comm;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">ObjectIterator<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a54351249212ade8b2d25a857e71b256f" kindref="member">RawData::begin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a8ba841120376e38c83484365b57fc719" kindref="member">proc_load_</ref>-&gt;find(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a9ceb9cf1dd88772821658e506d015397" kindref="member">last_completed_phase_</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a8ba841120376e38c83484365b57fc719" kindref="member">proc_load_</ref>-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ObjectIterator(iter-&gt;second.cbegin());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ObjectIterator{</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LoadMapType::const_iterator{}};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">ObjectIterator<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a07ae6234d91c2daa7c2d51117b224f7d" kindref="member">RawData::end</ref>()<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a8ba841120376e38c83484365b57fc719" kindref="member">proc_load_</ref>-&gt;find(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a9ceb9cf1dd88772821658e506d015397" kindref="member">last_completed_phase_</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a8ba841120376e38c83484365b57fc719" kindref="member">proc_load_</ref>-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ObjectIterator(iter-&gt;second.cend());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ObjectIterator{</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LoadMapType::const_iterator{}};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a586c3223d1f69ee9d5eb2930ff659051" kindref="member">RawData::getNumObjects</ref>()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a07ae6234d91c2daa7c2d51117b224f7d" kindref="member">end</ref>()<sp/>-<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a54351249212ade8b2d25a857e71b256f" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a151f3230094feacd15015f51980b8e9e" kindref="member">RawData::getNumCompletedPhases</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a9ceb9cf1dd88772821658e506d015397" kindref="member">last_completed_phase_</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1aeb7830328dfb72f11740e79eed6a23aa" kindref="member">RawData::getNumSubphases</ref>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>last_phase<sp/>=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1afc0c2273b3e7987e386c5d1b77289413" kindref="member">proc_subphase_load_</ref>-&gt;at(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a9ceb9cf1dd88772821658e506d015397" kindref="member">last_completed_phase_</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>an_object<sp/>=<sp/>*last_phase.begin();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>subphases<sp/>=<sp/>an_object.second;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subphases.size();</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a2fc0e286efee8f9950a7a8ff13f3261d" kindref="member">RawData::getWork</ref>(ElementIDStruct<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>PhaseOffset<sp/>offset)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(offset.phases<sp/>&lt;<sp/>0,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RawData<sp/>makes<sp/>no<sp/>predictions.<sp/>Compose<sp/>with<sp/>NaivePersistence<sp/>or<sp/>some<sp/>longer-range<sp/>forecasting<sp/>model<sp/>as<sp/>needed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref><sp/>=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a151f3230094feacd15015f51980b8e9e" kindref="member">getNumCompletedPhases</ref>()<sp/>+<sp/>offset.phases;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset.subphase<sp/>==<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset_1a0eb2d2db9e2d4329e2f76332c1fb2429" kindref="member">PhaseOffset::WHOLE_PHASE</ref>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a8ba841120376e38c83484365b57fc719" kindref="member">proc_load_</ref>-&gt;at(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref>).at(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;phase_data<sp/>=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1afc0c2273b3e7987e386c5d1b77289413" kindref="member">proc_subphase_load_</ref>-&gt;at(<ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;object_data<sp/>=<sp/>phase_data.at(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/>object_data.at(offset.subphase);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a8f709c3aeaf10e92c746d773d7ba6f9c" kindref="member">RawData::getNumPastPhasesNeeded</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>look_back)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>look_back;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}}}}</highlight></codeline>
    </programlisting>
    <location file="src/vt/vrt/collection/balance/model/raw_data.cc"/>
  </compounddef>
</doxygen>
