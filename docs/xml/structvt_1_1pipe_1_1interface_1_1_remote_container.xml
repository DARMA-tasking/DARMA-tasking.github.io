<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1pipe_1_1interface_1_1_remote_container" kind="struct" language="C++" prot="public">
    <compoundname>vt::pipe::interface::RemoteContainer</compoundname>
    <basecompoundref refid="structvt_1_1pipe_1_1interface_1_1_base_container" prot="public" virt="non-virtual">vt::pipe::interface::BaseContainer&lt; MsgT &gt;</basecompoundref>
    <derivedcompoundref refid="structvt_1_1pipe_1_1interface_1_1_callback_direct_send_multi" prot="public" virt="non-virtual">vt::pipe::interface::CallbackDirectSendMulti&lt; MsgT, TupleT &gt;</derivedcompoundref>
    <includes refid="remote__container_8h" local="no">remote_container.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>MsgT</declname>
        <defname>MsgT</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>TupleT</declname>
        <defname>TupleT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1a04acc410a9a9da0ec211043db91b7559" prot="public" static="no">
        <type><ref refid="namespacevt_1_1pipe_1_1signal_1acbe257d1ae44f20fa9fd9b6ed3057caf" kindref="member">signal::SigVoidType</ref></type>
        <definition>using vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::VoidSigType =  signal::SigVoidType</definition>
        <argsstring></argsstring>
        <name>VoidSigType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="62" column="1" bodyfile="src/vt/pipe/interface/remote_container.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1a0cf5387a6b1db885a7a224bab60ce16d" prot="public" static="no">
        <type>std::enable_if_t&lt; std::is_same&lt; T, <ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a04acc410a9a9da0ec211043db91b7559" kindref="member">VoidSigType</ref> &gt;::value, U &gt;</type>
        <definition>using vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::IsVoidType =  std::enable_if_t&lt;std::is_same&lt;T,VoidSigType&gt;::value,U&gt;</definition>
        <argsstring></argsstring>
        <name>IsVoidType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="64" column="1" bodyfile="src/vt/pipe/interface/remote_container.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1a1dc69f6cfa1318c856a412940e3dbb50" prot="public" static="no">
        <type>std::enable_if_t&lt;!std::is_same&lt; T, <ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a04acc410a9a9da0ec211043db91b7559" kindref="member">VoidSigType</ref> &gt;::value, U &gt;</type>
        <definition>using vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::IsNotVoidType =  std::enable_if_t&lt;!std::is_same&lt;T,VoidSigType&gt;::value,U&gt;</definition>
        <argsstring></argsstring>
        <name>IsNotVoidType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="66" column="1" bodyfile="src/vt/pipe/interface/remote_container.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1a37a4c4a4fcd3a7daa27f697f01f3ac81" prot="private" static="no" mutable="no">
        <type>TupleT</type>
        <definition>TupleT vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::trigger_list_</definition>
        <argsstring></argsstring>
        <name>trigger_list_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="101" column="1" bodyfile="src/vt/pipe/interface/remote_container.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1a5bb09812f8bb6778051d9cc6b4662dc5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::RemoteContainer</definition>
        <argsstring>(PipeType const &amp;in_pipe, Args... args)</argsstring>
        <name>RemoteContainer</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="69" column="1" bodyfile="src/vt/pipe/interface/remote_container.impl.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1afcd73686512c7d7d25beeb8a9f9d1c73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::RemoteContainer</definition>
        <argsstring>(PipeType const &amp;in_pipe, std::tuple&lt; Args... &gt; tup)</argsstring>
        <name>RemoteContainer</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <param>
          <type>std::tuple&lt; Args... &gt;</type>
          <declname>tup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="72" column="1" bodyfile="src/vt/pipe/interface/remote_container.impl.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1a1c52032c6536ca384aa0769846b01424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgU</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::trigger</definition>
        <argsstring>(MsgU *data)</argsstring>
        <name>trigger</name>
        <param>
          <type>MsgU *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="95" column="1" bodyfile="src/vt/pipe/interface/remote_container.impl.h" bodystart="118" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1ad272af02305b8a050f8e393dd551538b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="98" column="1" bodyfile="src/vt/pipe/interface/remote_container.impl.h" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1ac109c549822ea32fe268e09d37e21822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgU</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container" kindref="compound">RemoteContainer</ref>&lt; MsgT, TupleT &gt;::template <ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a0cf5387a6b1db885a7a224bab60ce16d" kindref="member">IsVoidType</ref>&lt; MsgU &gt;</type>
        <definition>RemoteContainer&lt;MsgT,TupleT&gt;::template IsVoidType&lt;MsgU&gt; vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::triggerDirect</definition>
        <argsstring>(CallbackT cb, MsgU *)</argsstring>
        <name>triggerDirect</name>
        <param>
          <type>CallbackT</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>MsgU *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.impl.h" line="81" column="1" bodyfile="src/vt/pipe/interface/remote_container.impl.h" bodystart="81" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1a50eb531253f7ef5a31fcf43861c4b39a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgU</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container" kindref="compound">RemoteContainer</ref>&lt; MsgT, TupleT &gt;::template <ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a1dc69f6cfa1318c856a412940e3dbb50" kindref="member">IsNotVoidType</ref>&lt; MsgU &gt;</type>
        <definition>RemoteContainer&lt;MsgT,TupleT&gt;::template IsNotVoidType&lt;MsgU&gt; vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::triggerDirect</definition>
        <argsstring>(CallbackT cb, MsgU *data)</argsstring>
        <name>triggerDirect</name>
        <param>
          <type>CallbackT</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>MsgU *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.impl.h" line="95" column="1" bodyfile="src/vt/pipe/interface/remote_container.impl.h" bodystart="95" bodyend="114"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1af36cc75474ed355b20355de51e06206c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgU</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a1dc69f6cfa1318c856a412940e3dbb50" kindref="member">IsNotVoidType</ref>&lt; MsgU &gt;</type>
        <definition>IsNotVoidType&lt;MsgU&gt; vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::triggerDirect</definition>
        <argsstring>(CallbackT cb, MsgU *data)</argsstring>
        <name>triggerDirect</name>
        <param>
          <type>CallbackT</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>MsgU *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1ade1e4348b3f29b9fdb2fec5966b673f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgU</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a0cf5387a6b1db885a7a224bab60ce16d" kindref="member">IsVoidType</ref>&lt; MsgU &gt;</type>
        <definition>IsVoidType&lt;MsgU&gt; vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::triggerDirect</definition>
        <argsstring>(CallbackT cb, MsgU *data)</argsstring>
        <name>triggerDirect</name>
        <param>
          <type>CallbackT</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>MsgU *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1ac699178c54ddc68c0e670b747629b396" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::triggerDirect</definition>
        <argsstring>(MsgT *data)</argsstring>
        <name>triggerDirect</name>
        <param>
          <type>MsgT *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="81" column="1" bodyfile="src/vt/pipe/interface/remote_container.impl.h" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1a1e76b8bdf55de44a4daa54517036e3b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::foreach</definition>
        <argsstring>(std::tuple&lt; Ts... &gt; const &amp;t, MsgT *data)</argsstring>
        <name>foreach</name>
        <param>
          <type>std::tuple&lt; Ts... &gt; const &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="84" column="1" bodyfile="src/vt/pipe/interface/remote_container.impl.h" bodystart="142" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1ab582dacea24fd4f46e991f79368803b9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Idx</declname>
            <defname>Idx</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::foreach</definition>
        <argsstring>(std::tuple&lt; Ts... &gt; const &amp;tup, std::index_sequence&lt; Idx... &gt;, MsgT *data)</argsstring>
        <name>foreach</name>
        <param>
          <type>std::tuple&lt; Ts... &gt; const &amp;</type>
          <declname>tup</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Idx... &gt;</type>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="87" column="1" bodyfile="src/vt/pipe/interface/remote_container.impl.h" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_1a6e50085da5d33822dde0c556ff027614" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;::isSendBack</definition>
        <argsstring>() const</argsstring>
        <name>isSendBack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container.h" line="91" column="1" bodyfile="src/vt/pipe/interface/remote_container.impl.h" bodystart="135" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3355">
        <label>vt::pipe::interface::BaseContainer&lt; MsgT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_base_container"/>
      </node>
      <node id="3354">
        <label>vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_remote_container"/>
        <childnode refid="3355" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3356">
        <label>vt::pipe::interface::CallbackDirectSendMulti&lt; MsgT, TupleT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_callback_direct_send_multi"/>
        <childnode refid="3354" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3358">
        <label>vt::pipe::interface::BaseContainer&lt; MsgT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_base_container"/>
      </node>
      <node id="3357">
        <label>vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_remote_container"/>
        <childnode refid="3358" relation="public-inheritance">
        </childnode>
        <childnode refid="3359" relation="usage">
          <edgelabel>trigger_list_</edgelabel>
        </childnode>
      </node>
      <node id="3359">
        <label>TupleT</label>
      </node>
    </collaborationgraph>
    <location file="src/vt/pipe/interface/remote_container.h" line="61" column="1" bodyfile="src/vt/pipe/interface/remote_container.h" bodystart="61" bodyend="102"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1interface_1_1_base_container_1a096a87229f8c5b3b3bd0cca47cc7f45a" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>BaseContainer</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a1e76b8bdf55de44a4daa54517036e3b4" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>foreach</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1ab582dacea24fd4f46e991f79368803b9" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>foreach</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_base_container_1a5301aebfd709a96a3de5e03218c9300f" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>getPipe</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a1dc69f6cfa1318c856a412940e3dbb50" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>IsNotVoidType</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a6e50085da5d33822dde0c556ff027614" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>isSendBack</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a0cf5387a6b1db885a7a224bab60ce16d" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>IsVoidType</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a5bb09812f8bb6778051d9cc6b4662dc5" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>RemoteContainer</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1afcd73686512c7d7d25beeb8a9f9d1c73" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>RemoteContainer</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1ad272af02305b8a050f8e393dd551538b" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>serialize</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a1c52032c6536ca384aa0769846b01424" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>trigger</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a37a4c4a4fcd3a7daa27f697f01f3ac81" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>trigger_list_</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1af36cc75474ed355b20355de51e06206c" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>triggerDirect</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1ade1e4348b3f29b9fdb2fec5966b673f1" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>triggerDirect</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1ac699178c54ddc68c0e670b747629b396" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>triggerDirect</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1ac109c549822ea32fe268e09d37e21822" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>triggerDirect</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a50eb531253f7ef5a31fcf43861c4b39a" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>triggerDirect</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_1a04acc410a9a9da0ec211043db91b7559" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainer</scope><name>VoidSigType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
