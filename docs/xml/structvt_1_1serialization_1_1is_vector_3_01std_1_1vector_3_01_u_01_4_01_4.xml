<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1serialization_1_1is_vector_3_01std_1_1vector_3_01_u_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>vt::serialization::isVector&lt; std::vector&lt; U &gt; &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">true_type</basecompoundref>
    <includes refid="mock__serializer_8h" local="no">mock_serializer.h</includes>
    <templateparamlist>
      <param>
        <type>typename U</type>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1707">
        <label>true_type</label>
      </node>
      <node id="1706">
        <label>vt::serialization::isVector&lt; std::vector&lt; U &gt; &gt;</label>
        <link refid="structvt_1_1serialization_1_1is_vector_3_01std_1_1vector_3_01_u_01_4_01_4"/>
        <childnode refid="1707" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1709">
        <label>true_type</label>
      </node>
      <node id="1708">
        <label>vt::serialization::isVector&lt; std::vector&lt; U &gt; &gt;</label>
        <link refid="structvt_1_1serialization_1_1is_vector_3_01std_1_1vector_3_01_u_01_4_01_4"/>
        <childnode refid="1709" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/serialization/mock_serializer.h" line="130" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="130" bodyend="130"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
