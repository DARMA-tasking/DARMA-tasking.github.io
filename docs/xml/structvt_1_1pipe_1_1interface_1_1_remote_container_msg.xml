<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg" kind="struct" language="C++" prot="public">
    <compoundname>vt::pipe::interface::RemoteContainerMsg</compoundname>
    <basecompoundref refid="structvt_1_1pipe_1_1interface_1_1_base_container" prot="public" virt="non-virtual">vt::pipe::interface::BaseContainer&lt; MsgT &gt;</basecompoundref>
    <derivedcompoundref refid="structvt_1_1pipe_1_1interface_1_1_callback_direct_send_multi" prot="public" virt="non-virtual">vt::pipe::interface::CallbackDirectSendMulti&lt; MsgT, TupleT &gt;</derivedcompoundref>
    <includes refid="remote__container__msg_8h" local="no">remote_container_msg.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>MsgT</declname>
        <defname>MsgT</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>TupleT</declname>
        <defname>TupleT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1ae2139dd54fd8fb4bf561241bf03b56ec" prot="public" static="no">
        <type><ref refid="namespacevt_1_1pipe_1_1signal_1acbe257d1ae44f20fa9fd9b6ed3057caf" kindref="member">signal::SigVoidType</ref></type>
        <definition>using vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::VoidSigType =  signal::SigVoidType</definition>
        <argsstring></argsstring>
        <name>VoidSigType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="62" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1af3f6ea130372986d8d0b4c39f35f59b6" prot="public" static="no">
        <type>std::enable_if_t&lt; std::is_same&lt; T, <ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1ae2139dd54fd8fb4bf561241bf03b56ec" kindref="member">VoidSigType</ref> &gt;::value, U &gt;</type>
        <definition>using vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::IsVoidType =  std::enable_if_t&lt;std::is_same&lt;T,VoidSigType&gt;::value,U&gt;</definition>
        <argsstring></argsstring>
        <name>IsVoidType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="64" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1ab12f66d491cc0783269a302390f76a1d" prot="public" static="no">
        <type>std::enable_if_t&lt;!std::is_same&lt; T, <ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1ae2139dd54fd8fb4bf561241bf03b56ec" kindref="member">VoidSigType</ref> &gt;::value, U &gt;</type>
        <definition>using vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::IsNotVoidType =  std::enable_if_t&lt;!std::is_same&lt;T,VoidSigType&gt;::value,U&gt;</definition>
        <argsstring></argsstring>
        <name>IsNotVoidType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="66" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1add2408f1e4944909d498d87be742b03a" prot="private" static="no" mutable="no">
        <type>TupleT</type>
        <definition>TupleT vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::trigger_list_</definition>
        <argsstring></argsstring>
        <name>trigger_list_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="101" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a008403aabc55d4d862a5fe5b40879624" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::RemoteContainerMsg</definition>
        <argsstring>(PipeType const &amp;in_pipe, Args... args)</argsstring>
        <name>RemoteContainerMsg</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="69" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.impl.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a3c058a9ea2b7f176f4d0604e596ec83a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::RemoteContainerMsg</definition>
        <argsstring>(PipeType const &amp;in_pipe, std::tuple&lt; Args... &gt; tup)</argsstring>
        <name>RemoteContainerMsg</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <param>
          <type>std::tuple&lt; Args... &gt;</type>
          <declname>tup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="72" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.impl.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a7710e198b9f5482c6239cc9c470c5bcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgU</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::trigger</definition>
        <argsstring>(MsgU *data)</argsstring>
        <name>trigger</name>
        <param>
          <type>MsgU *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="95" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.impl.h" bodystart="123" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a9c131bd45d1c897a6b4e54c7512da4ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="98" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.impl.h" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a5875d056f5e8a41ea1c69f173ae9dfa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgU</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg" kindref="compound">RemoteContainerMsg</ref>&lt; MsgT, TupleT &gt;::template <ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1af3f6ea130372986d8d0b4c39f35f59b6" kindref="member">IsVoidType</ref>&lt; MsgU &gt;</type>
        <definition>RemoteContainerMsg&lt;MsgT,TupleT&gt;::template IsVoidType&lt;MsgU&gt; vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::triggerDirect</definition>
        <argsstring>(CallbackT cb, MsgU *)</argsstring>
        <name>triggerDirect</name>
        <param>
          <type>CallbackT</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>MsgU *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.impl.h" line="81" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.impl.h" bodystart="81" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1ae4913666223bebdeda5d7da19beec782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgU</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg" kindref="compound">RemoteContainerMsg</ref>&lt; MsgT, TupleT &gt;::template <ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1ab12f66d491cc0783269a302390f76a1d" kindref="member">IsNotVoidType</ref>&lt; MsgU &gt;</type>
        <definition>RemoteContainerMsg&lt;MsgT,TupleT&gt;::template IsNotVoidType&lt;MsgU&gt; vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::triggerDirect</definition>
        <argsstring>(CallbackT cb, MsgU *data)</argsstring>
        <name>triggerDirect</name>
        <param>
          <type>CallbackT</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>MsgU *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.impl.h" line="95" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.impl.h" bodystart="95" bodyend="119"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a2bbf7d7988ff06d6e72805a3a8271bd9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgU</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1ab12f66d491cc0783269a302390f76a1d" kindref="member">IsNotVoidType</ref>&lt; MsgU &gt;</type>
        <definition>IsNotVoidType&lt;MsgU&gt; vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::triggerDirect</definition>
        <argsstring>(CallbackT cb, MsgU *data)</argsstring>
        <name>triggerDirect</name>
        <param>
          <type>CallbackT</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>MsgU *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a1461c1d76c16b9a2810e7efb00840ae0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgU</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1af3f6ea130372986d8d0b4c39f35f59b6" kindref="member">IsVoidType</ref>&lt; MsgU &gt;</type>
        <definition>IsVoidType&lt;MsgU&gt; vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::triggerDirect</definition>
        <argsstring>(CallbackT cb, MsgU *data)</argsstring>
        <name>triggerDirect</name>
        <param>
          <type>CallbackT</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>MsgU *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1aa0b1a3642c0bc976856a7d81413a796c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::triggerDirect</definition>
        <argsstring>(MsgT *data)</argsstring>
        <name>triggerDirect</name>
        <param>
          <type>MsgT *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="81" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.impl.h" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1aa693e7d0c76f4a80726cc5b688317e0d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::foreach</definition>
        <argsstring>(std::tuple&lt; Ts... &gt; const &amp;t, MsgT *data)</argsstring>
        <name>foreach</name>
        <param>
          <type>std::tuple&lt; Ts... &gt; const &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="84" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.impl.h" bodystart="147" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1abdda927f3b4a22464aa061147dc6b9f4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Idx</declname>
            <defname>Idx</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::foreach</definition>
        <argsstring>(std::tuple&lt; Ts... &gt; const &amp;tup, std::index_sequence&lt; Idx... &gt;, MsgT *data)</argsstring>
        <name>foreach</name>
        <param>
          <type>std::tuple&lt; Ts... &gt; const &amp;</type>
          <declname>tup</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Idx... &gt;</type>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="87" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.impl.h" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a3f8a27a0750018eb04a0c535cbf3dafb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;::isSendBack</definition>
        <argsstring>() const</argsstring>
        <name>isSendBack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/remote_container_msg.h" line="91" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.impl.h" bodystart="140" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2433">
        <label>vt::pipe::interface::BaseContainer&lt; MsgT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_base_container"/>
      </node>
      <node id="2434">
        <label>vt::pipe::interface::CallbackDirectSendMulti&lt; MsgT, TupleT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_callback_direct_send_multi"/>
        <childnode refid="2432" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2432">
        <label>vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg"/>
        <childnode refid="2433" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2436">
        <label>vt::pipe::interface::BaseContainer&lt; MsgT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_base_container"/>
      </node>
      <node id="2435">
        <label>vt::pipe::interface::RemoteContainerMsg&lt; MsgT, TupleT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg"/>
        <childnode refid="2436" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/pipe/interface/remote_container_msg.h" line="61" column="1" bodyfile="src/vt/pipe/interface/remote_container_msg.h" bodystart="61" bodyend="102"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1interface_1_1_base_container_1a096a87229f8c5b3b3bd0cca47cc7f45a" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>BaseContainer</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1aa693e7d0c76f4a80726cc5b688317e0d" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>foreach</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1abdda927f3b4a22464aa061147dc6b9f4" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>foreach</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_base_container_1a5301aebfd709a96a3de5e03218c9300f" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>getPipe</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1ab12f66d491cc0783269a302390f76a1d" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>IsNotVoidType</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a3f8a27a0750018eb04a0c535cbf3dafb" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>isSendBack</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1af3f6ea130372986d8d0b4c39f35f59b6" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>IsVoidType</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a008403aabc55d4d862a5fe5b40879624" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>RemoteContainerMsg</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a3c058a9ea2b7f176f4d0604e596ec83a" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>RemoteContainerMsg</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a9c131bd45d1c897a6b4e54c7512da4ce" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>serialize</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a7710e198b9f5482c6239cc9c470c5bcd" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>trigger</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1add2408f1e4944909d498d87be742b03a" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>trigger_list_</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a2bbf7d7988ff06d6e72805a3a8271bd9" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>triggerDirect</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a1461c1d76c16b9a2810e7efb00840ae0" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>triggerDirect</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1aa0b1a3642c0bc976856a7d81413a796c" prot="private" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>triggerDirect</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1a5875d056f5e8a41ea1c69f173ae9dfa7" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>triggerDirect</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1ae4913666223bebdeda5d7da19beec782" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>triggerDirect</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_remote_container_msg_1ae2139dd54fd8fb4bf561241bf03b56ec" prot="public" virt="non-virtual"><scope>vt::pipe::interface::RemoteContainerMsg</scope><name>VoidSigType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
