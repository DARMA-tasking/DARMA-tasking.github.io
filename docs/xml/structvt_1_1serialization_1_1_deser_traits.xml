<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1serialization_1_1_deser_traits" kind="struct" language="C++" prot="public">
    <compoundname>vt::serialization::DeserTraits</compoundname>
    <includes refid="mock__serializer_8h" local="no">mock_serializer.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1serialization_1_1_deser_traits_1a597577985e3b199e73cf052e445c9a5e" prot="public" static="no">
        <type>typename std::enable_if&lt; <ref refid="structvt_1_1serialization_1_1_serialization_traits" kindref="compound">SerializationTraits</ref>&lt; U &gt;::is_vec, T &gt;::type</type>
        <definition>using vt::serialization::DeserTraits&lt; T &gt;::isVecType =  typename std::enable_if&lt;SerializationTraits&lt;U&gt;::is_vec, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>isVecType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="232" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1serialization_1_1_deser_traits_1a76eb20c400792b9288eabf2a7ffca4ba" prot="public" static="no">
        <type>typename std::enable_if&lt;!<ref refid="structvt_1_1serialization_1_1_serialization_traits" kindref="compound">SerializationTraits</ref>&lt; U &gt;::is_vec, T &gt;::type</type>
        <definition>using vt::serialization::DeserTraits&lt; T &gt;::isNotVecType =  typename std::enable_if&lt;!SerializationTraits&lt;U&gt;::is_vec, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>isNotVecType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="235" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1serialization_1_1_deser_traits_1a26d43fcff6357964eed8a8f0172f28b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::serialization::DeserTraits&lt; T &gt;::operator()</definition>
        <argsstring>(SerialByteType *buf, T &amp;vec, SizeType size, isVecType&lt; U &gt; *x=nullptr)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespacevt_1_1serialization_1a74f8d1a55940f9c38fc29522de66d926" kindref="member">SerialByteType</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>SizeType</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1serialization_1_1_deser_traits_1a597577985e3b199e73cf052e445c9a5e" kindref="member">isVecType</ref>&lt; U &gt; *</type>
          <declname>x</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="238" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="238" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1serialization_1_1_deser_traits_1a2562604ed89ca8421bed0266bd581c79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::serialization::DeserTraits&lt; T &gt;::operator()</definition>
        <argsstring>(SerialByteType *buf, T &amp;val, SizeType num, isNotVecType&lt; U &gt; *x=nullptr)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespacevt_1_1serialization_1a74f8d1a55940f9c38fc29522de66d926" kindref="member">SerialByteType</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>SizeType</type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1serialization_1_1_deser_traits_1a76eb20c400792b9288eabf2a7ffca4ba" kindref="member">isNotVecType</ref>&lt; U &gt; *</type>
          <declname>x</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="246" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="246" bodyend="248"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/serialization/mock_serializer.h" line="230" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="230" bodyend="249"/>
    <listofallmembers>
      <member refid="structvt_1_1serialization_1_1_deser_traits_1a76eb20c400792b9288eabf2a7ffca4ba" prot="public" virt="non-virtual"><scope>vt::serialization::DeserTraits</scope><name>isNotVecType</name></member>
      <member refid="structvt_1_1serialization_1_1_deser_traits_1a597577985e3b199e73cf052e445c9a5e" prot="public" virt="non-virtual"><scope>vt::serialization::DeserTraits</scope><name>isVecType</name></member>
      <member refid="structvt_1_1serialization_1_1_deser_traits_1a26d43fcff6357964eed8a8f0172f28b8" prot="public" virt="non-virtual"><scope>vt::serialization::DeserTraits</scope><name>operator()</name></member>
      <member refid="structvt_1_1serialization_1_1_deser_traits_1a2562604ed89ca8421bed0266bd581c79" prot="public" virt="non-virtual"><scope>vt::serialization::DeserTraits</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
