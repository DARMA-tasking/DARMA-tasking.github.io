<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1elm_1_1_element_l_b_data" kind="struct" language="C++" prot="public">
    <compoundname>vt::elm::ElementLBData</compoundname>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_collection_l_b_data" prot="public" virt="non-virtual">vt::vrt::collection::balance::CollectionLBData</derivedcompoundref>
    <includes refid="elm__lb__data_8h" local="no">elm_lb_data.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_l_b_data_1a9ce3cd9a49893c3d976e68919656050e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref></type>
        <definition>constexpr const SubphaseType vt::elm::ElementLBData::no_subphase</definition>
        <argsstring></argsstring>
        <name>no_subphase</name>
        <initializer>=
    std::numeric_limits&lt;<ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref>&gt;::max()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="122" column="39" bodyfile="src/vt/elm/elm_lb_data.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1elm_1_1_element_l_b_data_1a311da2f5cb4a09f74eaf7c15569996a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct vrt::collection::balance::NodeLBData</definition>
        <argsstring></argsstring>
        <name>vrt::collection::balance::NodeLBData</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data" kindref="compound">vrt::collection::balance::NodeLBData</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="131" column="3" bodyfile="src/vt/elm/elm_lb_data.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_l_b_data_1ae2b4a8fc5193e7aa7bc691ab1a7011ce" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::elm::ElementLBData::cur_time_started_</definition>
        <argsstring></argsstring>
        <name>cur_time_started_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="134" column="8" bodyfile="src/vt/elm/elm_lb_data.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_l_b_data_1a025fe8411b1c1458109afd4d793e9280" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1a2b9f28078dc309ad0706b69ded743e69" kindref="member">TimeType</ref></type>
        <definition>TimeType vt::elm::ElementLBData::cur_time_</definition>
        <argsstring></argsstring>
        <name>cur_time_</name>
        <initializer>= <ref refid="namespacevt_1a2b9f28078dc309ad0706b69ded743e69" kindref="member">TimeType</ref>{0.0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="135" column="12" bodyfile="src/vt/elm/elm_lb_data.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_l_b_data_1af82526bf8ad50c6460ba51ffc1c92a43" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
        <definition>PhaseType vt::elm::ElementLBData::cur_phase_</definition>
        <argsstring></argsstring>
        <name>cur_phase_</name>
        <initializer>= fst_lb_phase</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="136" column="13" bodyfile="src/vt/elm/elm_lb_data.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_l_b_data_1af806cbf36d30d07e340577aeffe06810" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, LoadType&gt; vt::elm::ElementLBData::phase_timings_</definition>
        <argsstring></argsstring>
        <name>phase_timings_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="137" column="22" bodyfile="src/vt/elm/elm_lb_data.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_l_b_data_1a343d66fb777c54e0bdaaddf6f54eda85" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1elm_1a38487cb8896b9b4763efa9022fab560e" kindref="member">CommMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, CommMapType&gt; vt::elm::ElementLBData::phase_comm_</definition>
        <argsstring></argsstring>
        <name>phase_comm_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="138" column="22" bodyfile="src/vt/elm/elm_lb_data.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_l_b_data_1a0489c5190d8a81bd5a4fba5d80d03d5d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref></type>
        <definition>SubphaseType vt::elm::ElementLBData::cur_subphase_</definition>
        <argsstring></argsstring>
        <name>cur_subphase_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="140" column="16" bodyfile="src/vt/elm/elm_lb_data.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_l_b_data_1a4307d2e80d236ad36f8d161febcb239a" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::vector&lt; <ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, std::vector&lt;LoadType&gt; &gt; vt::elm::ElementLBData::subphase_timings_</definition>
        <argsstring></argsstring>
        <name>subphase_timings_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="141" column="22" bodyfile="src/vt/elm/elm_lb_data.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_element_l_b_data_1a3f4708b0c2d8af6627ee6df925b95890" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::vector&lt; <ref refid="namespacevt_1_1elm_1a38487cb8896b9b4763efa9022fab560e" kindref="member">CommMapType</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, std::vector&lt;CommMapType&gt; &gt; vt::elm::ElementLBData::subphase_comm_</definition>
        <argsstring></argsstring>
        <name>subphase_comm_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="142" column="22" bodyfile="src/vt/elm/elm_lb_data.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1aa7a5f68f276e0d3ae1279bb0f3050e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::elm::ElementLBData::ElementLBData</definition>
        <argsstring>()=default</argsstring>
        <name>ElementLBData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="60" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a2aa0d177c123d04ac24342b9558f3c46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::elm::ElementLBData::ElementLBData</definition>
        <argsstring>(ElementLBData const &amp;)=default</argsstring>
        <name>ElementLBData</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_l_b_data" kindref="compound">ElementLBData</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="61" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a8ab77d61c0c9351e21329445e7a7b844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::elm::ElementLBData::ElementLBData</definition>
        <argsstring>(ElementLBData &amp;&amp;)=default</argsstring>
        <name>ElementLBData</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_l_b_data" kindref="compound">ElementLBData</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="62" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a19e990ccbc5b1090e8d8385e19af760a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::start</definition>
        <argsstring>(TimeType time)</argsstring>
        <name>start</name>
        <param>
          <type><ref refid="namespacevt_1a2b9f28078dc309ad0706b69ded743e69" kindref="member">TimeType</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="64" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="53" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a96ccd1c4f6ec13365ca9d483eab8944c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::stop</definition>
        <argsstring>(TimeType time)</argsstring>
        <name>stop</name>
        <param>
          <type><ref refid="namespacevt_1a2b9f28078dc309ad0706b69ded743e69" kindref="member">TimeType</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="65" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="65" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1ada678fdc6f4b80c29bbe0f1c973a13e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::addTime</definition>
        <argsstring>(LoadType const timeLoad)</argsstring>
        <name>addTime</name>
        <param>
          <type><ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref> const</type>
          <declname>timeLoad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="66" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="143" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a144c7d6efa4c672a450aa9de612f3bff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::setTime</definition>
        <argsstring>(LoadType const timeLoad, std::vector&lt; LoadType &gt; const &amp;subphaseLoads)</argsstring>
        <name>setTime</name>
        <param>
          <type><ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref> const</type>
          <declname>timeLoad</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref> &gt; const &amp;</type>
          <declname>subphaseLoads</declname>
        </param>
        <briefdescription>
<para>warning: this will override any existing time that might be there </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="68" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="157" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1aa4d5faecce53f1ad3d4565a4e7b1cd10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::sendToEntity</definition>
        <argsstring>(ElementIDStruct to, ElementIDStruct from, double bytes)</argsstring>
        <name>sendToEntity</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="72" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="82" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1ab7360fde34acf4dafafc8335617d8b6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::sendComm</definition>
        <argsstring>(elm::CommKey key, double bytes)</argsstring>
        <name>sendComm</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_comm_key" kindref="compound">elm::CommKey</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="73" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1ab78d94cea0d5f69a1d7db43802509af4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::addWritableSharedID</definition>
        <argsstring>(NodeType home, int shared_id, double bytes)</argsstring>
        <name>addWritableSharedID</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shared_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="75" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="89" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a49b798bf1d14f52f6eea23519db3391a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::addReadOnlySharedID</definition>
        <argsstring>(NodeType home, int shared_id, double bytes)</argsstring>
        <name>addReadOnlySharedID</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shared_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="76" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="97" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1af19f7cc95b8139b7aeec788e6450f28f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::recvComm</definition>
        <argsstring>(elm::CommKey key, double bytes)</argsstring>
        <name>recvComm</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_comm_key" kindref="compound">elm::CommKey</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="78" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="111" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1abe5161d28be7bccf79081ee9e8408ead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::recvObjData</definition>
        <argsstring>(ElementIDStruct to_perm, ElementIDStruct from_perm, double bytes, bool bcast)</argsstring>
        <name>recvObjData</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>to_perm</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>from_perm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bcast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="79" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="119" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1aadd1fa3ab5c86886b970989d05286901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::recvFromNode</definition>
        <argsstring>(ElementIDStruct to_perm, NodeType from, double bytes, bool bcast)</argsstring>
        <name>recvFromNode</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>to_perm</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bcast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="83" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="127" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1ac9fefbad98060214e8720b46a5a8aaf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::recvToNode</definition>
        <argsstring>(NodeType to, ElementIDStruct from_perm, double bytes, bool bcast)</argsstring>
        <name>recvToNode</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>from_perm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bcast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="87" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="135" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1afd6173ea281a044490a08976cb859dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::setPhase</definition>
        <argsstring>(PhaseType const &amp;new_phase)</argsstring>
        <name>setPhase</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref> const &amp;</type>
          <declname>new_phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="91" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="173" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1acb64ab9bcd98f12bd5cae08ebbefd943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::updatePhase</definition>
        <argsstring>(PhaseType const &amp;inc=1)</argsstring>
        <name>updatePhase</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref> const &amp;</type>
          <declname>inc</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="92" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="187" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1aa6547718a29385a1600e29ae4b0792dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::resetPhase</definition>
        <argsstring>()</argsstring>
        <name>resetPhase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="93" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1ab3e11f3720c9c8ce83b23610eccbef08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
        <definition>PhaseType vt::elm::ElementLBData::getPhase</definition>
        <argsstring>() const</argsstring>
        <name>getPhase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="94" column="13" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a839f0515eda6316ee2d6e64bb145e1f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref></type>
        <definition>LoadType vt::elm::ElementLBData::getLoad</definition>
        <argsstring>(PhaseType const &amp;phase) const</argsstring>
        <name>getLoad</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref> const &amp;</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="95" column="12" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="205" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1abbc3c3c8a7c969b0a291f25b8e0d0a62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref></type>
        <definition>LoadType vt::elm::ElementLBData::getLoad</definition>
        <argsstring>(PhaseType phase, SubphaseType subphase) const</argsstring>
        <name>getLoad</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref></type>
          <declname>subphase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="96" column="12" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="223" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a9a59e8546283b731702d07f2360d527d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1elm_1a38487cb8896b9b4763efa9022fab560e" kindref="member">CommMapType</ref> const  &amp;</type>
        <definition>CommMapType const  &amp; vt::elm::ElementLBData::getComm</definition>
        <argsstring>(PhaseType const &amp;phase)</argsstring>
        <name>getComm</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref> const &amp;</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="98" column="21" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="246" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a32d430c814238614d01cc4bc87c3b22b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacevt_1_1elm_1a38487cb8896b9b4763efa9022fab560e" kindref="member">CommMapType</ref> &gt; const  &amp;</type>
        <definition>std::vector&lt; CommMapType &gt; const  &amp; vt::elm::ElementLBData::getSubphaseComm</definition>
        <argsstring>(PhaseType phase)</argsstring>
        <name>getSubphaseComm</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="99" column="21" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="258" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a60f723efc5e2ce332d3aeb7f72738306" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref> &gt; const  &amp;</type>
        <definition>std::vector&lt; LoadType &gt; const  &amp; vt::elm::ElementLBData::getSubphaseTimes</definition>
        <argsstring>(PhaseType phase)</argsstring>
        <name>getSubphaseTimes</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="100" column="21" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="241" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a93c02f4370d1622fefe6a63f0f360d96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::setSubPhase</definition>
        <argsstring>(SubphaseType subphase)</argsstring>
        <name>setSubPhase</name>
        <param>
          <type><ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref></type>
          <declname>subphase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="101" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a00c4afedbaa4b2cbebf877ea194297c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref></type>
        <definition>SubphaseType vt::elm::ElementLBData::getSubPhase</definition>
        <argsstring>() const</argsstring>
        <name>getSubPhase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="102" column="16" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a2caf9adf8c33a1d2dda021388b84bb00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::elm::ElementLBData::getLoadPhaseCount</definition>
        <argsstring>() const</argsstring>
        <name>getLoadPhaseCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="105" column="15" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a5164aaf6b9aa619465454b7d24273f10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::elm::ElementLBData::getCommPhaseCount</definition>
        <argsstring>() const</argsstring>
        <name>getCommPhaseCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="106" column="15" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="292" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1ab8778cab537f8428281088d47c18eebc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::elm::ElementLBData::getSubphaseLoadPhaseCount</definition>
        <argsstring>() const</argsstring>
        <name>getSubphaseLoadPhaseCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="107" column="15" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="296" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1ae042437f8dcaff5822b670b73b4e724b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::elm::ElementLBData::getSubphaseCommPhaseCount</definition>
        <argsstring>() const</argsstring>
        <name>getSubphaseCommPhaseCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="108" column="15" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="300" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1a621cfc47dbcd0505e25d9060a78f080f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Serializer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::elm::ElementLBData::serialize</definition>
        <argsstring>(Serializer &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>Serializer &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="111" column="8" bodyfile="src/vt/elm/elm_lb_data.h" bodystart="111" bodyend="120"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1elm_1_1_element_l_b_data_1ad74e3a2d52dc65533df25846211c9aa4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::elm::ElementLBData::releaseLBDataFromUnneededPhases</definition>
        <argsstring>(PhaseType phase, unsigned int look_back)</argsstring>
        <name>releaseLBDataFromUnneededPhases</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>look_back</declname>
        </param>
        <briefdescription>
<para>Release LB data from phases prior to lookback. </para>
        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_lb_data.h" line="129" column="8" bodyfile="src/vt/elm/elm_lb_data.cc" bodystart="279" bodyend="286"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>vt::elm::ElementLBData</label>
        <link refid="structvt_1_1elm_1_1_element_l_b_data"/>
      </node>
      <node id="2">
        <label>vt::vrt::collection::balance::CollectionLBData</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_collection_l_b_data"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>vt::elm::ElementLBData</label>
        <link refid="structvt_1_1elm_1_1_element_l_b_data"/>
        <childnode refid="2" relation="usage">
          <edgelabel>cur_time_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>vt::TimeTypeWrapper</label>
        <link refid="structvt_1_1_time_type_wrapper"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/elm/elm_lb_data.h" line="59" column="1" bodyfile="src/vt/elm/elm_lb_data.h" bodystart="59" bodyend="143"/>
    <listofallmembers>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a49b798bf1d14f52f6eea23519db3391a" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>addReadOnlySharedID</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1ada678fdc6f4b80c29bbe0f1c973a13e3" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>addTime</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1ab78d94cea0d5f69a1d7db43802509af4" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>addWritableSharedID</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1af82526bf8ad50c6460ba51ffc1c92a43" prot="protected" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>cur_phase_</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a0489c5190d8a81bd5a4fba5d80d03d5d" prot="protected" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>cur_subphase_</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a025fe8411b1c1458109afd4d793e9280" prot="protected" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>cur_time_</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1ae2b4a8fc5193e7aa7bc691ab1a7011ce" prot="protected" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>cur_time_started_</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1aa7a5f68f276e0d3ae1279bb0f3050e4d" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>ElementLBData</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a2aa0d177c123d04ac24342b9558f3c46" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>ElementLBData</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a8ab77d61c0c9351e21329445e7a7b844" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>ElementLBData</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a9a59e8546283b731702d07f2360d527d" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>getComm</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a5164aaf6b9aa619465454b7d24273f10" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>getCommPhaseCount</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a839f0515eda6316ee2d6e64bb145e1f4" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>getLoad</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1abbc3c3c8a7c969b0a291f25b8e0d0a62" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>getLoad</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a2caf9adf8c33a1d2dda021388b84bb00" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>getLoadPhaseCount</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1ab3e11f3720c9c8ce83b23610eccbef08" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>getPhase</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a00c4afedbaa4b2cbebf877ea194297c3" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>getSubPhase</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a32d430c814238614d01cc4bc87c3b22b" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>getSubphaseComm</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1ae042437f8dcaff5822b670b73b4e724b" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>getSubphaseCommPhaseCount</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1ab8778cab537f8428281088d47c18eebc" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>getSubphaseLoadPhaseCount</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a60f723efc5e2ce332d3aeb7f72738306" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>getSubphaseTimes</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a9ce3cd9a49893c3d976e68919656050e" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>no_subphase</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a343d66fb777c54e0bdaaddf6f54eda85" prot="protected" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>phase_comm_</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1af806cbf36d30d07e340577aeffe06810" prot="protected" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>phase_timings_</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1af19f7cc95b8139b7aeec788e6450f28f" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>recvComm</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1aadd1fa3ab5c86886b970989d05286901" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>recvFromNode</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1abe5161d28be7bccf79081ee9e8408ead" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>recvObjData</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1ac9fefbad98060214e8720b46a5a8aaf6" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>recvToNode</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1ad74e3a2d52dc65533df25846211c9aa4" prot="protected" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>releaseLBDataFromUnneededPhases</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1aa6547718a29385a1600e29ae4b0792dd" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>resetPhase</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1ab7360fde34acf4dafafc8335617d8b6b" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>sendComm</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1aa4d5faecce53f1ad3d4565a4e7b1cd10" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>sendToEntity</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a621cfc47dbcd0505e25d9060a78f080f" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>serialize</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1afd6173ea281a044490a08976cb859dfc" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>setPhase</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a93c02f4370d1622fefe6a63f0f360d96" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>setSubPhase</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a144c7d6efa4c672a450aa9de612f3bff" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>setTime</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a19e990ccbc5b1090e8d8385e19af760a" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>start</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a96ccd1c4f6ec13365ca9d483eab8944c" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>stop</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a3f4708b0c2d8af6627ee6df925b95890" prot="protected" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>subphase_comm_</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a4307d2e80d236ad36f8d161febcb239a" prot="protected" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>subphase_timings_</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1acb64ab9bcd98f12bd5cae08ebbefd943" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>updatePhase</name></member>
      <member refid="structvt_1_1elm_1_1_element_l_b_data_1a311da2f5cb4a09f74eaf7c15569996a9" prot="public" virt="non-virtual"><scope>vt::elm::ElementLBData</scope><name>vrt::collection::balance::NodeLBData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
