<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1pipe_1_1interface_1_1_base_container" kind="struct" language="C++" prot="public">
    <compoundname>vt::pipe::interface::BaseContainer</compoundname>
    <derivedcompoundref refid="structvt_1_1pipe_1_1interface_1_1_remote_container" prot="public" virt="non-virtual">vt::pipe::interface::RemoteContainer&lt; MsgT, std::tuple&lt; CallbackT &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1pipe_1_1interface_1_1_remote_container" prot="public" virt="non-virtual">vt::pipe::interface::RemoteContainer&lt; MsgT, TupleT &gt;</derivedcompoundref>
    <includes refid="base__container_8h" local="no">base_container.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>MsgT</declname>
        <defname>MsgT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1pipe_1_1interface_1_1_base_container_1a3cada477b55c1201fabef5539825109c" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref></type>
        <definition>PipeType vt::pipe::interface::BaseContainer&lt; MsgT &gt;::pipe_</definition>
        <argsstring></argsstring>
        <name>pipe_</name>
        <initializer>= no_pipe</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/base_container.h" line="68" column="1" bodyfile="src/vt/pipe/interface/base_container.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_base_container_1a096a87229f8c5b3b3bd0cca47cc7f45a" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::interface::BaseContainer&lt; MsgT &gt;::BaseContainer</definition>
        <argsstring>(PipeType const &amp;in_pipe)</argsstring>
        <name>BaseContainer</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/base_container.h" line="56" column="1" bodyfile="src/vt/pipe/interface/base_container.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_base_container_1af042ddd27d8c1d683af861e2d12e0940" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::interface::BaseContainer&lt; MsgT &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/base_container.h" line="61" column="1" bodyfile="src/vt/pipe/interface/base_container.h" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1interface_1_1_base_container_1a5301aebfd709a96a3de5e03218c9300f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref></type>
        <definition>PipeType vt::pipe::interface::BaseContainer&lt; MsgT &gt;::getPipe</definition>
        <argsstring>() const</argsstring>
        <name>getPipe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/base_container.h" line="65" column="1" bodyfile="src/vt/pipe/interface/base_container.h" bodystart="65" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="354">
        <label>vt::pipe::interface::RemoteContainer&lt; MsgT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_remote_container"/>
        <childnode refid="351" relation="public-inheritance">
        </childnode>
      </node>
      <node id="351">
        <label>vt::pipe::interface::BaseContainer&lt; MsgT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_base_container"/>
      </node>
      <node id="353">
        <label>vt::pipe::interface::CallbackDirect&lt; MsgT, CallbackT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_callback_direct"/>
        <childnode refid="352" relation="public-inheritance">
        </childnode>
      </node>
      <node id="352">
        <label>RemoteContainer&lt; MsgT, std::tuple&lt; CallbackT &gt; &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_remote_container"/>
        <childnode refid="351" relation="public-inheritance">
        </childnode>
      </node>
      <node id="355">
        <label>vt::pipe::interface::CallbackDirectSendMulti&lt; MsgT, TupleT &gt;</label>
        <link refid="structvt_1_1pipe_1_1interface_1_1_callback_direct_send_multi"/>
        <childnode refid="354" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/vt/pipe/interface/base_container.h" line="54" column="1" bodyfile="src/vt/pipe/interface/base_container.h" bodystart="54" bodyend="69"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1interface_1_1_base_container_1a096a87229f8c5b3b3bd0cca47cc7f45a" prot="public" virt="non-virtual"><scope>vt::pipe::interface::BaseContainer</scope><name>BaseContainer</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_base_container_1a5301aebfd709a96a3de5e03218c9300f" prot="public" virt="non-virtual"><scope>vt::pipe::interface::BaseContainer</scope><name>getPipe</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_base_container_1a3cada477b55c1201fabef5539825109c" prot="private" virt="non-virtual"><scope>vt::pipe::interface::BaseContainer</scope><name>pipe_</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_base_container_1af042ddd27d8c1d683af861e2d12e0940" prot="public" virt="non-virtual"><scope>vt::pipe::interface::BaseContainer</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
