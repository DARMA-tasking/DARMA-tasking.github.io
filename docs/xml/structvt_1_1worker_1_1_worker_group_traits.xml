<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1worker_1_1_worker_group_traits" kind="struct" language="C++" prot="public">
    <compoundname>vt::worker::WorkerGroupTraits</compoundname>
    <includes refid="worker__group__traits_8h" local="no">worker_group_traits.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a977cb0db3e7ff57c4eb45f6ca2cdd38c" prot="public" static="no">
        <type>typename U::WorkerType</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::WorkerType_t =  typename U::WorkerType</definition>
        <argsstring></argsstring>
        <name>WorkerType_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="58" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a6780167e5822e2608ec4f79258e08b5d" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1a977cb0db3e7ff57c4eb45f6ca2cdd38c" kindref="member">WorkerType_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::has_WorkerType =  detection::is_detected&lt;WorkerType_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_WorkerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="59" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a637c87b51f757c6925f235f64c426f4e" prot="public" static="no">
        <type>decltype(U(std::declval&lt; Vs &gt;()...))</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::constructor_t =  decltype(U(std::declval&lt;Vs&gt;()...))</definition>
        <argsstring></argsstring>
        <name>constructor_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="62" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1ab532e883384999599393386ba277a84a" prot="public" static="no">
        <type><ref refid="namespacevt_1aa93398ea48f2cb6c188512250f7cc248" kindref="member">WorkerCountType</ref> const  &amp;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::worker_cnt_t =  WorkerCountType const&amp;</definition>
        <argsstring></argsstring>
        <name>worker_cnt_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="63" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1af77f44bab3ba4312e75b6088e93db9e2" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1a637c87b51f757c6925f235f64c426f4e" kindref="member">constructor_t</ref>, T, <ref refid="structvt_1_1worker_1_1_worker_group_traits_1ab532e883384999599393386ba277a84a" kindref="member">worker_cnt_t</ref> &gt;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::has_constructor =  detection::is_detected&lt;constructor_t, T, worker_cnt_t&gt;</definition>
        <argsstring></argsstring>
        <name>has_constructor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="64" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1abc35e0b7a80a06de230522956e50f741" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1a637c87b51f757c6925f235f64c426f4e" kindref="member">constructor_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::has_default_constructor =  detection::is_detected&lt;constructor_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_default_constructor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="65" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a9a4aa1adc4280b6689a7c0212eca4577" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().spawnWorkers())</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::spawnWorkers_t =  decltype(std::declval&lt;U&gt;().spawnWorkers())</definition>
        <argsstring></argsstring>
        <name>spawnWorkers_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="68" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a991fbf48784303601281452f8d3c53c8" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1a9a4aa1adc4280b6689a7c0212eca4577" kindref="member">spawnWorkers_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::has_spawnWorkers =  detection::is_detected&lt;spawnWorkers_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_spawnWorkers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="69" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a23a7958cfe2a25001735c4d8eff808e8" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().spawnWorkersBlock(std::declval&lt; <ref refid="namespacevt_1_1worker_1af5cc6dd44a4444b2e5498ca279a9f04d" kindref="member">WorkerCommFnType</ref> &gt;()))</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::spawnWorkersBlock_t =  decltype(std::declval&lt;U&gt;().spawnWorkersBlock( std::declval&lt;WorkerCommFnType&gt;() ))</definition>
        <argsstring></argsstring>
        <name>spawnWorkersBlock_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="72" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1afbef955b75a4d9397000bb9258050c3b" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1a23a7958cfe2a25001735c4d8eff808e8" kindref="member">spawnWorkersBlock_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::has_spawnWorkersBlock =  detection::is_detected&lt;spawnWorkersBlock_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_spawnWorkersBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="75" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a002c86e937f3022ee8320ec1d9eb488b" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().joinWorkers())</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::joinWorkers_t =  decltype(std::declval&lt;U&gt;().joinWorkers())</definition>
        <argsstring></argsstring>
        <name>joinWorkers_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="78" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a1341eeadf82a951575948a73e0dfbe71" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1a002c86e937f3022ee8320ec1d9eb488b" kindref="member">joinWorkers_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::has_joinWorkers =  detection::is_detected&lt;joinWorkers_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_joinWorkers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="79" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1ae36a285568af422079494454bd4bdeae" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().progress())</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::progress_t =  decltype(std::declval&lt;U&gt;().progress())</definition>
        <argsstring></argsstring>
        <name>progress_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="82" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a53b49db498da05de17fea98afe4e6677" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1ae36a285568af422079494454bd4bdeae" kindref="member">progress_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::has_progress =  detection::is_detected&lt;progress_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_progress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="83" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a227b8add8f3fae6004adc05d5e85204f" prot="public" static="no">
        <type><ref refid="namespacevt_1a656e362091da17b9b93d0655b36e3392" kindref="member">WorkerIDType</ref> const  &amp;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::worker_id_t =  WorkerIDType const&amp;</definition>
        <argsstring></argsstring>
        <name>worker_id_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="85" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1ae7c108d04180f59f3e2cd4fa065be4b0" prot="public" static="no">
        <type><ref refid="namespacevt_1_1worker_1a59d2fcdafa81fc0af7f921a258e42202" kindref="member">WorkUnitType</ref> const  &amp;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::work_unit_t =  WorkUnitType const&amp;</definition>
        <argsstring></argsstring>
        <name>work_unit_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="86" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1af8719962bd8fc468206bb7a0de8e29be" prot="public" static="no">
        <type><ref refid="namespacevt_1_1worker_1a8080c49350b0520151601a8b24d6c6cf" kindref="member">WorkUnitCountType</ref></type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::work_unit_cnt_t =  WorkUnitCountType</definition>
        <argsstring></argsstring>
        <name>work_unit_cnt_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="87" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a6553b883b8acf8e1f1eb3ee24534d093" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().finished(std::declval&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1a227b8add8f3fae6004adc05d5e85204f" kindref="member">worker_id_t</ref> &gt;(), std::declval&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1af8719962bd8fc468206bb7a0de8e29be" kindref="member">work_unit_cnt_t</ref> &gt;()))</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::finished_t =  decltype(std::declval&lt;U&gt;().finished( std::declval&lt;worker_id_t&gt;(), std::declval&lt;work_unit_cnt_t&gt;() ))</definition>
        <argsstring></argsstring>
        <name>finished_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="90" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a7f0610934ac19a57667b48a2af1d42f1" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1a6553b883b8acf8e1f1eb3ee24534d093" kindref="member">finished_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::has_finished =  detection::is_detected&lt;finished_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_finished</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="94" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a2eaad9ce43633046cc98b466dc1088ac" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().enqueueAnyWorker(std::declval&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1ae7c108d04180f59f3e2cd4fa065be4b0" kindref="member">work_unit_t</ref> &gt;()))</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::enqueueAnyWorker_t =  decltype(std::declval&lt;U&gt;().enqueueAnyWorker( std::declval&lt;work_unit_t&gt;()) )</definition>
        <argsstring></argsstring>
        <name>enqueueAnyWorker_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="97" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1aab410614bd95041609fc12566b34d407" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1a2eaad9ce43633046cc98b466dc1088ac" kindref="member">enqueueAnyWorker_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::has_enqueueAnyWorker =  detection::is_detected&lt;enqueueAnyWorker_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_enqueueAnyWorker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="100" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1abc65803c8886a88507e51c0798fe38a7" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().enqueueForWorker(std::declval&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1a227b8add8f3fae6004adc05d5e85204f" kindref="member">worker_id_t</ref> &gt;(), std::declval&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1ae7c108d04180f59f3e2cd4fa065be4b0" kindref="member">work_unit_t</ref> &gt;()))</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::enqueueForWorker_t =  decltype(std::declval&lt;U&gt;().enqueueForWorker( std::declval&lt;worker_id_t&gt;(), std::declval&lt;work_unit_t&gt;() ))</definition>
        <argsstring></argsstring>
        <name>enqueueForWorker_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="103" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a44c2ef67f7c30419b35c8e550aa73d91" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1abc65803c8886a88507e51c0798fe38a7" kindref="member">enqueueForWorker_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::has_enqueueForWorker =  detection::is_detected&lt;enqueueForWorker_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_enqueueForWorker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="107" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a408b704c65e78ddd4f90963eb4e48cf0" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().enqueueAllWorkers(std::declval&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1ae7c108d04180f59f3e2cd4fa065be4b0" kindref="member">work_unit_t</ref> &gt;()))</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::enqueueAllWorkers_t =  decltype(std::declval&lt;U&gt;().enqueueAllWorkers( std::declval&lt;work_unit_t&gt;() ))</definition>
        <argsstring></argsstring>
        <name>enqueueAllWorkers_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="110" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1ae2e54acc294e8701af36511ffef93af3" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1a408b704c65e78ddd4f90963eb4e48cf0" kindref="member">enqueueAllWorkers_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::has_enqueueAllWorkers =  detection::is_detected&lt;enqueueAllWorkers_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_enqueueAllWorkers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="113" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a576f8d9a2343be8a876df90d1eb9c955" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().enqueueCommThread(std::declval&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1ae7c108d04180f59f3e2cd4fa065be4b0" kindref="member">work_unit_t</ref> &gt;()))</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::enqueueCommThread_t =  decltype(std::declval&lt;U&gt;().enqueueCommThread( std::declval&lt;work_unit_t&gt;()) )</definition>
        <argsstring></argsstring>
        <name>enqueueCommThread_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="116" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1ad12299517527c3a0b977d06da86a637e" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_group_traits_1a576f8d9a2343be8a876df90d1eb9c955" kindref="member">enqueueCommThread_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::has_enqueueCommThread =  detection::is_detected&lt;enqueueCommThread_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_enqueueCommThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="119" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a97c79042b7a6588067d2fdf836fc38ab" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().commScheduler())</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::commScheduler_t =  decltype(std::declval&lt;U&gt;().commScheduler())</definition>
        <argsstring></argsstring>
        <name>commScheduler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="122" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_traits_1a865df688c9b5f7fc67ebfcee3bca1273" prot="public" static="no">
        <type>detection::is_detected_convertible&lt; bool, <ref refid="structvt_1_1worker_1_1_worker_group_traits_1a97c79042b7a6588067d2fdf836fc38ab" kindref="member">commScheduler_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerGroupTraits&lt; T &gt;::has_commScheduler =  detection::is_detected_convertible&lt; bool, commScheduler_t, T &gt;</definition>
        <argsstring></argsstring>
        <name>has_commScheduler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="123" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structvt_1_1worker_1_1_worker_group_traits_1ad95cbaac5da30e1904ed5ad8b7f61edc" prot="public" static="yes" mutable="no">
        <type>constexpr auto const</type>
        <definition>constexpr auto const vt::worker::WorkerGroupTraits&lt; T &gt;::is_worker</definition>
        <argsstring></argsstring>
        <name>is_worker</name>
        <initializer>=
    
    has_constructor::value and has_default_constructor::value and
    
    has_WorkerType::value and
    
    
    has_spawnWorkers::value and has_spawnWorkersBlock::value and
    has_joinWorkers::value and has_enqueueAnyWorker::value and
    has_enqueueForWorker::value and has_enqueueAllWorkers::value and
    has_progress::value and has_finished::value and has_commScheduler::value and
    has_enqueueCommThread::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_traits.h" line="128" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/worker/worker_group_traits.h" line="56" column="1" bodyfile="src/vt/worker/worker_group_traits.h" bodystart="56" bodyend="140"/>
    <listofallmembers>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a97c79042b7a6588067d2fdf836fc38ab" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>commScheduler_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a637c87b51f757c6925f235f64c426f4e" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>constructor_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a408b704c65e78ddd4f90963eb4e48cf0" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>enqueueAllWorkers_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a2eaad9ce43633046cc98b466dc1088ac" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>enqueueAnyWorker_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a576f8d9a2343be8a876df90d1eb9c955" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>enqueueCommThread_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1abc65803c8886a88507e51c0798fe38a7" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>enqueueForWorker_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a6553b883b8acf8e1f1eb3ee24534d093" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>finished_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a865df688c9b5f7fc67ebfcee3bca1273" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>has_commScheduler</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1af77f44bab3ba4312e75b6088e93db9e2" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>has_constructor</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1abc35e0b7a80a06de230522956e50f741" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>has_default_constructor</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1ae2e54acc294e8701af36511ffef93af3" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>has_enqueueAllWorkers</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1aab410614bd95041609fc12566b34d407" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>has_enqueueAnyWorker</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1ad12299517527c3a0b977d06da86a637e" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>has_enqueueCommThread</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a44c2ef67f7c30419b35c8e550aa73d91" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>has_enqueueForWorker</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a7f0610934ac19a57667b48a2af1d42f1" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>has_finished</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a1341eeadf82a951575948a73e0dfbe71" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>has_joinWorkers</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a53b49db498da05de17fea98afe4e6677" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>has_progress</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a991fbf48784303601281452f8d3c53c8" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>has_spawnWorkers</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1afbef955b75a4d9397000bb9258050c3b" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>has_spawnWorkersBlock</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a6780167e5822e2608ec4f79258e08b5d" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>has_WorkerType</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1ad95cbaac5da30e1904ed5ad8b7f61edc" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>is_worker</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a002c86e937f3022ee8320ec1d9eb488b" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>joinWorkers_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1ae36a285568af422079494454bd4bdeae" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>progress_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a9a4aa1adc4280b6689a7c0212eca4577" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>spawnWorkers_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a23a7958cfe2a25001735c4d8eff808e8" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>spawnWorkersBlock_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1af8719962bd8fc468206bb7a0de8e29be" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>work_unit_cnt_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1ae7c108d04180f59f3e2cd4fa065be4b0" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>work_unit_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1ab532e883384999599393386ba277a84a" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>worker_cnt_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a227b8add8f3fae6004adc05d5e85204f" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>worker_id_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_traits_1a977cb0db3e7ff57c4eb45f6ca2cdd38c" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupTraits</scope><name>WorkerType_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
