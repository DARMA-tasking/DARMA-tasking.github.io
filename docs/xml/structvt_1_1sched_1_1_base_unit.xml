<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1sched_1_1_base_unit" kind="struct" language="C++" prot="public">
    <compoundname>vt::sched::BaseUnit</compoundname>
    <derivedcompoundref refid="structvt_1_1sched_1_1_priority_unit" prot="public" virt="non-virtual">vt::sched::PriorityUnit</derivedcompoundref>
    <includes refid="base__unit_8h" local="no">base_unit.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1sched_1_1_base_unit_1ab635b72e57c53fa666d30bbfe5a0df17" prot="public" static="no">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">runnable::RunnableNew</ref> *</type>
        <definition>using vt::sched::BaseUnit::RunnablePtrType =  runnable::RunnableNew*</definition>
        <argsstring></argsstring>
        <name>RunnablePtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/base_unit.h" line="61" column="1" bodyfile="src/vt/scheduler/base_unit.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structvt_1_1sched_1_1_base_unit_1a0d126796f0ee5a8e0f3304e6ca02d0fc" prot="protected" static="no" mutable="no">
        <type><ref refid="structvt_1_1sched_1_1_base_unit_1ab635b72e57c53fa666d30bbfe5a0df17" kindref="member">RunnablePtrType</ref></type>
        <definition>RunnablePtrType vt::sched::BaseUnit::r_</definition>
        <argsstring></argsstring>
        <name>r_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the runnable task </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/base_unit.h" line="105" column="1" bodyfile="src/vt/scheduler/base_unit.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_base_unit_1ab425435c3b6c1cdf2fc208f1e50ea84c" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
        <definition>ActionType vt::sched::BaseUnit::work_</definition>
        <argsstring></argsstring>
        <name>work_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the lambda task </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/base_unit.h" line="106" column="1" bodyfile="src/vt/scheduler/base_unit.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_base_unit_1a5aab7332c91c6ccdc76bdb55de9cc502" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::sched::BaseUnit::is_term_</definition>
        <argsstring></argsstring>
        <name>is_term_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>whether it&apos;s a termination task </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/base_unit.h" line="107" column="1" bodyfile="src/vt/scheduler/base_unit.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1sched_1_1_base_unit_1a32cf291cd87b43dffa1f086d0ddb6c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::sched::BaseUnit::BaseUnit</definition>
        <argsstring>()=default</argsstring>
        <name>BaseUnit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/base_unit.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_base_unit_1a4223dce0bcccbb989eb49106d2e37abe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::sched::BaseUnit::BaseUnit</definition>
        <argsstring>(bool in_is_term, RunnablePtrType in_r)</argsstring>
        <name>BaseUnit</name>
        <param>
          <type>bool</type>
          <declname>in_is_term</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1sched_1_1_base_unit_1ab635b72e57c53fa666d30bbfe5a0df17" kindref="member">RunnablePtrType</ref></type>
          <declname>in_r</declname>
        </param>
        <briefdescription>
<para>Construct with a runnable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_is_term</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it&apos;s a termination task </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_r</parametername>
</parameternamelist>
<parameterdescription>
<para>the runnable moved in </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/base_unit.h" line="71" column="1" bodyfile="src/vt/scheduler/base_unit.h" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_base_unit_1a46072cff720f9dbcf7a1af4f9794ba90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::sched::BaseUnit::BaseUnit</definition>
        <argsstring>(bool in_is_term, ActionType in_work)</argsstring>
        <name>BaseUnit</name>
        <param>
          <type>bool</type>
          <declname>in_is_term</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>in_work</declname>
        </param>
        <briefdescription>
<para>Construct with a general lambda. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_is_term</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it&apos;s a termination task </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_work</parametername>
</parameternamelist>
<parameterdescription>
<para>the action to execute </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/base_unit.h" line="82" column="1" bodyfile="src/vt/scheduler/base_unit.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_base_unit_1a18e4bf669d499be8e9443011bf9c6b02" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::sched::BaseUnit::isTerm</definition>
        <argsstring>() const</argsstring>
        <name>isTerm</name>
        <briefdescription>
<para>Check if this work unit is a termination task. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it&apos;s a termination task </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/base_unit.h" line="92" column="1" bodyfile="src/vt/scheduler/base_unit.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_base_unit_1accbb274436789b6b8ed99c3ee42a8114" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::sched::BaseUnit::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
<para>Execute the work. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/base_unit.h" line="97" column="1" bodyfile="src/vt/scheduler/base_unit.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_base_unit_1aba3a1772f8a5efb922656dfba6434136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::sched::BaseUnit::execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <briefdescription>
<para>Execute the work. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/base_unit.h" line="102" column="1" bodyfile="src/vt/scheduler/base_unit.cc" bodystart="50" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The base class for a work unit that either holds a <computeroutput>std::unique_ptr</computeroutput> to a runnable or contains a general lambda to execute. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="437">
        <label>vt::sched::PriorityUnit</label>
        <link refid="structvt_1_1sched_1_1_priority_unit"/>
        <childnode refid="436" relation="public-inheritance">
        </childnode>
      </node>
      <node id="436">
        <label>vt::sched::BaseUnit</label>
        <link refid="structvt_1_1sched_1_1_base_unit"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="447">
        <label>vt::ctx::TD</label>
        <link refid="structvt_1_1ctx_1_1_t_d"/>
        <childnode refid="448" relation="usage">
          <edgelabel>ep_</edgelabel>
        </childnode>
      </node>
      <node id="450">
        <label>T</label>
      </node>
      <node id="443">
        <label>vt::elm::ElementIDStruct</label>
        <link refid="structvt_1_1elm_1_1_element_i_d_struct"/>
      </node>
      <node id="448">
        <label>vt::epoch::EpochType</label>
        <link refid="structvt_1_1epoch_1_1_epoch_type"/>
        <childnode refid="449" relation="public-inheritance">
        </childnode>
      </node>
      <node id="444">
        <label>vt::ctx::SetContext</label>
        <link refid="structvt_1_1ctx_1_1_set_context"/>
        <childnode refid="445" relation="usage">
          <edgelabel>suspended_task_</edgelabel>
          <edgelabel>cur_task_</edgelabel>
          <edgelabel>prev_task_</edgelabel>
        </childnode>
      </node>
      <node id="453">
        <label>vt::messaging::MsgPtrImplBase</label>
        <link refid="structvt_1_1messaging_1_1_msg_ptr_impl_base"/>
      </node>
      <node id="452">
        <label>vt::messaging::BaseMsg</label>
        <link refid="structvt_1_1messaging_1_1_base_msg"/>
      </node>
      <node id="442">
        <label>vt::elm::ElementLBData</label>
        <link refid="structvt_1_1elm_1_1_element_l_b_data"/>
      </node>
      <node id="440">
        <label>vt::runnable::detail::Contexts</label>
        <link refid="structvt_1_1runnable_1_1detail_1_1_contexts"/>
        <childnode refid="441" relation="usage">
          <edgelabel>lb</edgelabel>
        </childnode>
        <childnode refid="444" relation="usage">
          <edgelabel>setcontext</edgelabel>
        </childnode>
        <childnode refid="446" relation="usage">
          <edgelabel>cont</edgelabel>
        </childnode>
        <childnode refid="447" relation="usage">
          <edgelabel>td</edgelabel>
        </childnode>
      </node>
      <node id="446">
        <label>vt::ctx::Continuation</label>
        <link refid="structvt_1_1ctx_1_1_continuation"/>
      </node>
      <node id="445">
        <label>vt::util::ptr::ObserverPtr&lt; vt::runnable::RunnableNew &gt;</label>
        <link refid="structvt_1_1util_1_1ptr_1_1_observer_ptr"/>
        <childnode refid="439" relation="usage">
          <edgelabel>p_</edgelabel>
        </childnode>
      </node>
      <node id="438">
        <label>vt::sched::BaseUnit</label>
        <link refid="structvt_1_1sched_1_1_base_unit"/>
        <childnode refid="439" relation="usage">
          <edgelabel>r_</edgelabel>
        </childnode>
      </node>
      <node id="441">
        <label>vt::ctx::LBData</label>
        <link refid="structvt_1_1ctx_1_1_l_b_data"/>
        <childnode refid="442" relation="usage">
          <edgelabel>lb_data_</edgelabel>
        </childnode>
        <childnode refid="443" relation="usage">
          <edgelabel>cur_elm_id_</edgelabel>
        </childnode>
      </node>
      <node id="439">
        <label>vt::runnable::RunnableNew</label>
        <link refid="structvt_1_1runnable_1_1_runnable_new"/>
        <childnode refid="440" relation="usage">
          <edgelabel>contexts_</edgelabel>
        </childnode>
        <childnode refid="451" relation="usage">
          <edgelabel>msg_</edgelabel>
        </childnode>
      </node>
      <node id="451">
        <label>vt::messaging::MsgSharedPtr&lt; vt::messaging::ActiveMsg &gt;</label>
        <link refid="structvt_1_1messaging_1_1_msg_shared_ptr"/>
        <childnode refid="452" relation="usage">
          <edgelabel>ptr_</edgelabel>
        </childnode>
        <childnode refid="453" relation="usage">
          <edgelabel>impl_</edgelabel>
        </childnode>
      </node>
      <node id="449">
        <label>Strong&lt; detail::EpochImplType, detail::no_epoch_impl, detail::EpochImplTag &gt;</label>
        <link refid="structvt_1_1util_1_1strong_1_1detail_1_1_strong"/>
        <childnode refid="450" relation="usage">
          <edgelabel>v_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/scheduler/base_unit.h" line="60" column="1" bodyfile="src/vt/scheduler/base_unit.h" bodystart="60" bodyend="108"/>
    <listofallmembers>
      <member refid="structvt_1_1sched_1_1_base_unit_1a32cf291cd87b43dffa1f086d0ddb6c30" prot="public" virt="non-virtual"><scope>vt::sched::BaseUnit</scope><name>BaseUnit</name></member>
      <member refid="structvt_1_1sched_1_1_base_unit_1a4223dce0bcccbb989eb49106d2e37abe" prot="public" virt="non-virtual"><scope>vt::sched::BaseUnit</scope><name>BaseUnit</name></member>
      <member refid="structvt_1_1sched_1_1_base_unit_1a46072cff720f9dbcf7a1af4f9794ba90" prot="public" virt="non-virtual"><scope>vt::sched::BaseUnit</scope><name>BaseUnit</name></member>
      <member refid="structvt_1_1sched_1_1_base_unit_1aba3a1772f8a5efb922656dfba6434136" prot="public" virt="non-virtual"><scope>vt::sched::BaseUnit</scope><name>execute</name></member>
      <member refid="structvt_1_1sched_1_1_base_unit_1a5aab7332c91c6ccdc76bdb55de9cc502" prot="protected" virt="non-virtual"><scope>vt::sched::BaseUnit</scope><name>is_term_</name></member>
      <member refid="structvt_1_1sched_1_1_base_unit_1a18e4bf669d499be8e9443011bf9c6b02" prot="public" virt="non-virtual"><scope>vt::sched::BaseUnit</scope><name>isTerm</name></member>
      <member refid="structvt_1_1sched_1_1_base_unit_1accbb274436789b6b8ed99c3ee42a8114" prot="public" virt="non-virtual"><scope>vt::sched::BaseUnit</scope><name>operator()</name></member>
      <member refid="structvt_1_1sched_1_1_base_unit_1a0d126796f0ee5a8e0f3304e6ca02d0fc" prot="protected" virt="non-virtual"><scope>vt::sched::BaseUnit</scope><name>r_</name></member>
      <member refid="structvt_1_1sched_1_1_base_unit_1ab635b72e57c53fa666d30bbfe5a0df17" prot="public" virt="non-virtual"><scope>vt::sched::BaseUnit</scope><name>RunnablePtrType</name></member>
      <member refid="structvt_1_1sched_1_1_base_unit_1ab425435c3b6c1cdf2fc208f1e50ea84c" prot="protected" virt="non-virtual"><scope>vt::sched::BaseUnit</scope><name>work_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
