<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::balance::NodeStats</compoundname>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component" prot="public" virt="non-virtual">vt::runtime::component::Component&lt; NodeStats &gt;</basecompoundref>
    <includes refid="node__stats_8h" local="no">node_stats.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1af702e521887d9015e33a7aedda48d09d" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref>)&gt;</type>
        <definition>using vt::vrt::collection::balance::NodeStats::MigrateFnType =  std::function&lt;void(NodeType)&gt;</definition>
        <argsstring></argsstring>
        <name>MigrateFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="79" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ab0f4d7d14401bec36a6bfca304935032" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">objgroup::proxy::Proxy</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" kindref="compound">NodeStats</ref> &gt;</type>
        <definition>objgroup::proxy::Proxy&lt;NodeStats&gt; vt::vrt::collection::balance::NodeStats::proxy_</definition>
        <argsstring></argsstring>
        <name>proxy_</name>
        <briefdescription>
<para>Local proxy to objgroup. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="259" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ab6fa4f5cc9789586b7a8adc59fe8a184" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a45306ee4bf38fe3fb586d1ee2fa3d147" kindref="member">LoadMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, LoadMapType&gt; vt::vrt::collection::balance::NodeStats::node_data_</definition>
        <argsstring></argsstring>
        <name>node_data_</name>
        <briefdescription>
<para>Node timings for each local object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="261" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1aa9c06fa76c472858769ebe545f29d7a2" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a3d91523158c1025b7b665240072f3b7e" kindref="member">SubphaseLoadMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, SubphaseLoadMapType&gt; vt::vrt::collection::balance::NodeStats::node_subphase_data_</definition>
        <argsstring></argsstring>
        <name>node_subphase_data_</name>
        <briefdescription>
<para>Node subphase timings for each local object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="263" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1afa1909d31a49209692d1c1cb04f64f44" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1af702e521887d9015e33a7aedda48d09d" kindref="member">MigrateFnType</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDType,MigrateFnType&gt; vt::vrt::collection::balance::NodeStats::node_migrate_</definition>
        <argsstring></argsstring>
        <name>node_migrate_</name>
        <briefdescription>
<para>Local migration type-free lambdas for each object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="265" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a77870b801c582f3f497e8bc3d885902d" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDType,ElementIDType&gt; vt::vrt::collection::balance::NodeStats::node_temp_to_perm_</definition>
        <argsstring></argsstring>
        <name>node_temp_to_perm_</name>
        <briefdescription>
<para>Map of temporary ID to permanent ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="267" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a1891fa27b425a3e99cac4c17fc6da97c" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDType,ElementIDType&gt; vt::vrt::collection::balance::NodeStats::node_perm_to_temp_</definition>
        <argsstring></argsstring>
        <name>node_perm_to_temp_</name>
        <briefdescription>
<para>Map of permanent ID to temporary ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="269" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ac21ddf1bec029ea8dde5a1b221db7c46" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref>, <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDType,VirtualProxyType&gt; vt::vrt::collection::balance::NodeStats::node_collection_lookup_</definition>
        <argsstring></argsstring>
        <name>node_collection_lookup_</name>
        <briefdescription>
<para>Map from element temporary ID to the collection&apos;s virtual proxy (untyped) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="271" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ad07d8cd0a63ec07559711162e0da8157" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a10860c956804d644db54a16012352728" kindref="member">CommMapType</ref> &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, CommMapType&gt; vt::vrt::collection::balance::NodeStats::node_comm_</definition>
        <argsstring></argsstring>
        <name>node_comm_</name>
        <briefdescription>
<para>Node communication graph for each local object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="273" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a70b5f9052ce87030b3476800e428bcb2" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::unordered_map&lt; <ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a10860c956804d644db54a16012352728" kindref="member">CommMapType</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, std::unordered_map&lt;SubphaseType, CommMapType&gt; &gt; vt::vrt::collection::balance::NodeStats::node_subphase_comm_</definition>
        <argsstring></argsstring>
        <name>node_subphase_comm_</name>
        <briefdescription>
<para>Node communication graph for each subphase. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="275" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a7b1b992f34d07739e854c95ef921f0ab" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref></type>
        <definition>ElementIDType vt::vrt::collection::balance::NodeStats::next_elm_</definition>
        <argsstring></argsstring>
        <name>next_elm_</name>
        <briefdescription>
<para>The current element ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="277" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a8f2c59c675643634d8e4d2d5ba89ecbd" prot="private" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* vt::vrt::collection::balance::NodeStats::stats_file_</definition>
        <argsstring></argsstring>
        <name>stats_file_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>The stats file name for outputting instrumentation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="279" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a41cafe7ec8557587a5e922c2289de342" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::balance::NodeStats::created_dir_</definition>
        <argsstring></argsstring>
        <name>created_dir_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether the stats directory has been created. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="281" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a05936543d7f0f41a55c77fe5265ca8ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::balance::NodeStats::NodeStats</definition>
        <argsstring>()=default</argsstring>
        <name>NodeStats</name>
        <briefdescription>
<para>System call to construct <computeroutput><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" kindref="compound">NodeStats</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1adfd9b278e017ccc02ed418c8f46bea2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string vt::vrt::collection::balance::NodeStats::name</definition>
        <argsstring>() override</argsstring>
        <name>name</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_name_1a33c06229bb605a2b2ceff68830d6d773">name</reimplements>
        <briefdescription>
<para>Get the name of the component. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="86" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a8bf0798c086f7e9c28b81463672f31d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref></type>
        <definition>ElementIDType vt::vrt::collection::balance::NodeStats::addNodeStats</definition>
        <argsstring>(Migratable *col_elm, PhaseType const &amp;phase, TimeType const &amp;time, std::vector&lt; TimeType &gt; const &amp;subphase_time, CommMapType const &amp;comm, std::vector&lt; CommMapType &gt; const &amp;subphase_comm)</argsstring>
        <name>addNodeStats</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_migratable" kindref="compound">Migratable</ref> *</type>
          <declname>col_elm</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref> const &amp;</type>
          <declname>phase</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref> const &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref> &gt; const &amp;</type>
          <declname>subphase_time</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a10860c956804d644db54a16012352728" kindref="member">CommMapType</ref> const &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a10860c956804d644db54a16012352728" kindref="member">CommMapType</ref> &gt; const &amp;</type>
          <declname>subphase_comm</declname>
        </param>
        <briefdescription>
<para>Add node statistics for local object. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">col_elm</parametername>
</parameternamelist>
<parameterdescription>
<para>the collection element pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the current phase </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>the time the object took </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">comm</parametername>
</parameternamelist>
<parameterdescription>
<para>the comm graph for the object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the temporary ID for the object assigned for this phase </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="114" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="296" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a99adbf5c5165b274dd5abd761ed72c45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeStats::clearStats</definition>
        <argsstring>()</argsstring>
        <name>clearStats</name>
        <briefdescription>
<para>Clear/reset all statistics and IDs on this node. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="124" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="124" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ae76790d41701769b86ef15e4924d661d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeStats::startIterCleanup</definition>
        <argsstring>(PhaseType phase, unsigned int look_back)</argsstring>
        <name>startIterCleanup</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>look_back</declname>
        </param>
        <briefdescription>
<para>Cleanup after LB runs; convert temporary to permanent IDs. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="129" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="134" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1aa6e33fd5ae9275515557ada40ef3d489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeStats::outputStatsForPhase</definition>
        <argsstring>(PhaseType phase)</argsstring>
        <name>outputStatsForPhase</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Output stats file for given phase based on instrumented data. </para>        </briefdescription>
        <detaileddescription>
<para>contents of the file consist of a series of records separated by newlines. Each record consists of comma separated fields. The first field of each record is a decimal integer phase which the record describes.</para><para>The first batch of records representing object workloads contain 5 fields. The first field is the phase, as above. The second field contains a unique object identifier, as a decimal integer. The third field contains the object&apos;s total workload during the phase, measured by elapsed time, and represented as a floating-point decimal number. The fourth field contains the number of subphases that made up the phase, as a decimal integer. The fifth field contains a &quot;[]&quot;-bracketed list of workloads, one decimal floating point value per subphase, separate by commas.</para><para>The second batch of records representing communication graph edges contain 5 fields. The first field is the phase, as above. The second and third fields are the recipient and source of a communication, as decimal integers. The fourth field is the weight of the edge, representing the number of bytes transmitted between the end-points, as a decimal integer. The fifth field is the category of the communication, relating the sender and recipient and distinguishing point-to-point messages from broadcasts, as a decimal integer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="160" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="249" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ac1b800713117d8f017746985a66dfbd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref></type>
        <definition>ElementIDType vt::vrt::collection::balance::NodeStats::getNextElm</definition>
        <argsstring>()</argsstring>
        <name>getNextElm</name>
        <briefdescription>
<para>Generate the next object element ID for LB. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="165" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="162" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a5b34d26f9e10f7ff3ceb92b95f0ed2f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a45306ee4bf38fe3fb586d1ee2fa3d147" kindref="member">LoadMapType</ref> &gt; const  *</type>
        <definition>std::unordered_map&lt; PhaseType, LoadMapType &gt; const  * vt::vrt::collection::balance::NodeStats::getNodeLoad</definition>
        <argsstring>() const</argsstring>
        <name>getNodeLoad</name>
        <briefdescription>
<para>Get stored object loads. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>an observer pointer to the load map </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="172" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a24660f52ff5e6a734a443ebbd1852519" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a3d91523158c1025b7b665240072f3b7e" kindref="member">SubphaseLoadMapType</ref> &gt; const  *</type>
        <definition>std::unordered_map&lt; PhaseType, SubphaseLoadMapType &gt; const  * vt::vrt::collection::balance::NodeStats::getNodeSubphaseLoad</definition>
        <argsstring>() const</argsstring>
        <name>getNodeSubphaseLoad</name>
        <briefdescription>
<para>Get stored object loads for individual subphases. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>an observer pointer to the subphase load map </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="179" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a236c9f6b9ba7446a35cbc1052949d558" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a10860c956804d644db54a16012352728" kindref="member">CommMapType</ref> &gt; const  *</type>
        <definition>std::unordered_map&lt; PhaseType, CommMapType &gt; const  * vt::vrt::collection::balance::NodeStats::getNodeComm</definition>
        <argsstring>() const</argsstring>
        <name>getNodeComm</name>
        <briefdescription>
<para>Get stored object comm graph. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>an observer pointer to the comm graph </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="186" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ae44b616cad5c50a36faeb2cc78457a52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::unordered_map&lt; <ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a10860c956804d644db54a16012352728" kindref="member">CommMapType</ref> &gt; &gt; const  *</type>
        <definition>std::unordered_map&lt; PhaseType, std::unordered_map&lt; SubphaseType, CommMapType &gt; &gt; const  * vt::vrt::collection::balance::NodeStats::getNodeSubphaseComm</definition>
        <argsstring>() const</argsstring>
        <name>getNodeSubphaseComm</name>
        <briefdescription>
<para>Get stored object comm subphase graph. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>an observer pointer to the comm subphase graph </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="193" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a06128ad9d9dff72bad160b015054b054" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::collection::balance::NodeStats::hasObjectToMigrate</definition>
        <argsstring>(ElementIDType obj_id) const</argsstring>
        <name>hasObjectToMigrate</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref></type>
          <declname>obj_id</declname>
        </param>
        <briefdescription>
<para>Test if this node has an object to migrate. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the object temporary ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether this node has the object </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="202" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a4beddbda7ae149a3470eba3a2fe80db5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::collection::balance::NodeStats::migrateObjTo</definition>
        <argsstring>(ElementIDType obj_id, NodeType to_node)</argsstring>
        <name>migrateObjTo</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref></type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>to_node</declname>
        </param>
        <briefdescription>
<para>Migrate an local object to another node. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the object temporary ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">to_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node to migrate to</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether this node has the object </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="212" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="94" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a259d49b9aa4759b9d94be3e093fa2e6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref></type>
        <definition>ElementIDType vt::vrt::collection::balance::NodeStats::tempToPerm</definition>
        <argsstring>(ElementIDType temp_id) const</argsstring>
        <name>tempToPerm</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref></type>
          <declname>temp_id</declname>
        </param>
        <briefdescription>
<para>Convert temporary element ID to permanent Returns <computeroutput>no_element_id</computeroutput> if not found. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">temp_id</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>permanent ID </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="221" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="73" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a6e13d373b5365771b1f08fc0bd5c0bda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref></type>
        <definition>ElementIDType vt::vrt::collection::balance::NodeStats::permToTemp</definition>
        <argsstring>(ElementIDType perm_id) const</argsstring>
        <name>permToTemp</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref></type>
          <declname>perm_id</declname>
        </param>
        <briefdescription>
<para>Convert permanent element ID to temporary. Returns <computeroutput>no_element_id</computeroutput> if not found. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">perm_id</parametername>
</parameternamelist>
<parameterdescription>
<para>permanent ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>temporary ID </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="231" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="81" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1aee43291b1cc63a189b3851f92e83040b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
        <definition>VirtualProxyType vt::vrt::collection::balance::NodeStats::getCollectionProxyForElement</definition>
        <argsstring>(ElementIDType temp_id) const</argsstring>
        <name>getCollectionProxyForElement</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref></type>
          <declname>temp_id</declname>
        </param>
        <briefdescription>
<para>Get the collection proxy for a given element ID. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">temp_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the temporary ID for the element for a given phase</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the virtual proxy if the element is part of the collection; otherwise <computeroutput>no_vrt_proxy</computeroutput> </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="241" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="363" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a0c60d1566daa6465f56b09e27058d6a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeStats::initialize</definition>
        <argsstring>() override</argsstring>
        <name>initialize</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_1a7f07384d294e59796add9ce6be2d6410">initialize</reimplements>
        <briefdescription>
<para>Empty default overridden initialize method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="243" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="168" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a267ac0f73734b89797be774b0bd6e7d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeStats::finalize</definition>
        <argsstring>() override</argsstring>
        <name>finalize</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_1a098e362de01af6054e5491fba671a959">finalize</reimplements>
        <briefdescription>
<para>Empty default overridden finalize method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="244" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="207" bodyend="215"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a30e9e5def6e7d6d31cd6597c5fea2345" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeStats::setProxy</definition>
        <argsstring>(objgroup::proxy::Proxy&lt; NodeStats &gt; in_proxy)</argsstring>
        <name>setProxy</name>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">objgroup::proxy::Proxy</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" kindref="compound">NodeStats</ref> &gt;</type>
          <declname>in_proxy</declname>
        </param>
        <briefdescription>
<para>Setup the proxy for <computeroutput><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" kindref="compound">NodeStats</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the objgroup proxy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="94" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a2da26dd82180cbc721fce9c8aa1814a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeStats::createStatsFile</definition>
        <argsstring>()</argsstring>
        <name>createStatsFile</name>
        <briefdescription>
<para>Create the stats file. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="250" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="176" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1abd5133b734537e6a9190e9976f009f89" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeStats::closeStatsFile</definition>
        <argsstring>()</argsstring>
        <name>closeStatsFile</name>
        <briefdescription>
<para>Close the stats file. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="255" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="217" bodyend="222"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a6c57b741ccef7c6d51155c3630dc380a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" kindref="compound">NodeStats</ref> &gt;</type>
        <definition>std::unique_ptr&lt; NodeStats &gt; vt::vrt::collection::balance::NodeStats::construct</definition>
        <argsstring>()</argsstring>
        <name>construct</name>
        <briefdescription>
<para>Construct the <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" kindref="compound">NodeStats</ref> component. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>pointer to the component </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.h" line="102" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="66" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A VT component that backs the instrumentation of virtualized entities on each node, such as the objects that the collection manager orchestrates, to provide data to the load balancing framework. The actual instrumentation occurs in <computeroutput>vt::vrt:collection:</computeroutput>:<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_element_stats" kindref="compound">balance::ElementStats</ref> which is composed into the elements of a collection. </para>    </briefdescription>
    <detaileddescription>
<para>Collects statistics/timings on active function/methods for objects and communication between them on each node. After collecting this data, passes it to the load balancing framework, specifically the <computeroutput>*</computeroutput> <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_manager" kindref="compound">vt::vrt::collection::balance::LBManager</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2614">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="2615" relation="public-inheritance">
        </childnode>
        <childnode refid="2618" relation="public-inheritance">
        </childnode>
        <childnode refid="2619" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2617">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="2612">
        <label>vt::vrt::collection::balance::NodeStats</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats"/>
        <childnode refid="2613" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2615">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="2616" relation="public-inheritance">
        </childnode>
        <childnode refid="2617" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2616">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="2613">
        <label>vt::runtime::component::Component&lt; NodeStats &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="2614" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2618">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="2619">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2622">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="2623" relation="public-inheritance">
        </childnode>
        <childnode refid="2626" relation="public-inheritance">
        </childnode>
        <childnode refid="2627" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2625">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="2620">
        <label>vt::vrt::collection::balance::NodeStats</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats"/>
        <childnode refid="2621" relation="public-inheritance">
        </childnode>
        <childnode refid="2628" relation="usage">
          <edgelabel>proxy_</edgelabel>
        </childnode>
      </node>
      <node id="2623">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="2624" relation="public-inheritance">
        </childnode>
        <childnode refid="2625" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2624">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="2621">
        <label>vt::runtime::component::Component&lt; NodeStats &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="2622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2626">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="2627">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="2628">
        <label>vt::objgroup::proxy::Proxy&lt; vt::vrt::collection::balance::NodeStats &gt;</label>
        <link refid="structvt_1_1objgroup_1_1proxy_1_1_proxy"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/balance/node_stats.h" line="78" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.h" bodystart="78" bodyend="282"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a8bf0798c086f7e9c28b81463672f31d8" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>addNodeStats</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a99adbf5c5165b274dd5abd761ed72c45" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>clearStats</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1abd5133b734537e6a9190e9976f009f89" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>closeStatsFile</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ab954824329584814bb652ea810cd62e3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1a94c1d493860adff6ae69c5eb31bb3f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1ac9c39c6eafc72a1a240ed67ea12b3e66" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>component_id_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a6c57b741ccef7c6d51155c3630dc380a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>construct</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a41cafe7ec8557587a5e922c2289de342" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>created_dir_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a2da26dd82180cbc721fce9c8aa1814a4" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>createStatsFile</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ad95ea698535524d0f82c5da9beaaaf37" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>DiagnosticBasePtrType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>dumpState</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a267ac0f73734b89797be774b0bd6e7d1" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>finalize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a1d6951af40ad0b4020860c0b21b1a85c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>foreachDiagnostic</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1aee43291b1cc63a189b3851f92e83040b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>getCollectionProxyForElement</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1a45ab90398777ffdbb2ad5b62fe183d99" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>getComponentID</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ac1b800713117d8f017746985a66dfbd2" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>getNextElm</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a236c9f6b9ba7446a35cbc1052949d558" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>getNodeComm</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a5b34d26f9e10f7ff3ceb92b95f0ed2f6" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>getNodeLoad</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ae44b616cad5c50a36faeb2cc78457a52" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>getNodeSubphaseComm</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a24660f52ff5e6a734a443ebbd1852519" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>getNodeSubphaseLoad</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a06128ad9d9dff72bad160b015054b054" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>hasObjectToMigrate</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a0c60d1566daa6465f56b09e27058d6a1" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>initialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1af702e521887d9015e33a7aedda48d09d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>MigrateFnType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a4beddbda7ae149a3470eba3a2fe80db5" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>migrateObjTo</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1adfd9b278e017ccc02ed418c8f46bea2c" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>name</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a7b1b992f34d07739e854c95ef921f0ab" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>next_elm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ac21ddf1bec029ea8dde5a1b221db7c46" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>node_collection_lookup_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ad07d8cd0a63ec07559711162e0da8157" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>node_comm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ab6fa4f5cc9789586b7a8adc59fe8a184" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>node_data_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1afa1909d31a49209692d1c1cb04f64f44" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>node_migrate_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a1891fa27b425a3e99cac4c17fc6da97c" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>node_perm_to_temp_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a70b5f9052ce87030b3476800e428bcb2" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>node_subphase_comm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1aa9c06fa76c472858769ebe545f29d7a2" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>node_subphase_data_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a77870b801c582f3f497e8bc3d885902d" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>node_temp_to_perm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a05936543d7f0f41a55c77fe5265ca8ed" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>NodeStats</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1aa6e33fd5ae9275515557ada40ef3d489" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>outputStatsForPhase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a6e13d373b5365771b1f08fc0bd5c0bda" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>permToTemp</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a5a15bd0369a9d3765a6c70249bada96f" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>pollable</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a4e64b5a12ffc1874065aa8b09e6309a9" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>preDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1dab11d9eb5bed8dfd5a3bb8fdf67f5a" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>progress</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ab0f4d7d14401bec36a6bfca304935032" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>proxy_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1af9d694f9d62d973a2cde6e52c55bef14" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>reducer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa2cd54632710e7cdf1b20dfb676c752c" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>registerCounter</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1abb1ee7f09f05c143dbdfd3346f6cdcba" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>registerCounterT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ab71509224f5716107ef5c781ba5ff487" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>registerDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a20417bbb4fe4c4d7648aef3a2699b787" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>registerGauge</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa220905292aeb726254d3dff2e672b00" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>registerGaugeT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a5c6035a56d54cc3de270efedad3f026e" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>registerTimer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a328ecca78c6aa309bb764f3dde083c3e" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>registerTimerT</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a30e9e5def6e7d6d31cd6597c5fea2345" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>setProxy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1ae76790d41701769b86ef15e4924d661d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>startIterCleanup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aad3974307ab3b2e1df389a91310f68c2" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>startup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ac969a635e579cf7be3af696f500bf260" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>staticInit</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a8f2c59c675643634d8e4d2d5ba89ecbd" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>stats_file_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_1a259d49b9aa4759b9d94be3e093fa2e6b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>tempToPerm</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a2bcd1016fcdb6395844d4fd15d84a570" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>UnitType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a97b0e8ff394c8aa04035ff15165eb087" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>updateDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a75e737294bb63e1898d9ac4515f0cf63" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>UpdateType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a9190b5cb499f9cfdacc1e0bd98a1805a" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeStats</scope><name>~BaseComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
