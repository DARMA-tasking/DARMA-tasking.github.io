<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte" kind="struct" language="C++" prot="public">
    <compoundname>checkpoint::dispatch::SerializerDispatchNonByte</compoundname>
    <includes refid="dispatch__serializer__nonbyte_8h" local="no">dispatch_serializer_nonbyte.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>SerializerT</declname>
        <defname>SerializerT</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>Dispatcher</declname>
        <defname>Dispatcher</defname>
        <defval><ref refid="structcheckpoint_1_1dispatch_1_1_basic_dispatcher" kindref="compound">BasicDispatcher</ref>&lt;SerializerT, T&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a456d0c02fc35667989d79ddbb0393776" prot="public" static="no">
        <type>SerializerT</type>
        <definition>using checkpoint::dispatch::SerializerDispatchNonByte&lt; SerializerT, T, Dispatcher &gt;::S =  SerializerT</definition>
        <argsstring></argsstring>
        <name>S</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="96" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a7f2203710503e6ea7a5c4a565795a1d0" prot="public" static="no">
        <type>typename std::enable_if&lt; <ref refid="structcheckpoint_1_1dispatch_1_1has_serialize" kindref="compound">hasSerialize</ref>&lt; SerializerT, U &gt;::value, T &gt;::type</type>
        <definition>using checkpoint::dispatch::SerializerDispatchNonByte&lt; SerializerT, T, Dispatcher &gt;::hasInSerialize =  typename std::enable_if&lt;hasSerialize&lt;SerializerT, U&gt;::value, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>hasInSerialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="145" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1ad59e5c933a762ce90d1ab5f7ca04ca9f" prot="public" static="no">
        <type>typename std::enable_if&lt;!<ref refid="structcheckpoint_1_1dispatch_1_1has_serialize" kindref="compound">hasSerialize</ref>&lt; SerializerT, U &gt;::value, T &gt;::type</type>
        <definition>using checkpoint::dispatch::SerializerDispatchNonByte&lt; SerializerT, T, Dispatcher &gt;::hasNoninSerialize =  typename std::enable_if&lt;!hasSerialize&lt;SerializerT, U&gt;::value, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>hasNoninSerialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="149" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a6cf01feb8acb29ef56c37d3180b63671" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void checkpoint::dispatch::SerializerDispatchNonByte&lt; SerializerT, T, Dispatcher &gt;::operator()</definition>
        <argsstring>(SerializerT &amp;s, T *val, SerialSizeType num)</argsstring>
        <name>operator()</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="100" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a3bbb12db16d00e1c76e51b52452187aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void checkpoint::dispatch::SerializerDispatchNonByte&lt; SerializerT, T, Dispatcher &gt;::applyElm</definition>
        <argsstring>(SerializerT &amp;s, T *val, hasSplitSerialize&lt; U &gt; *=nullptr)</argsstring>
        <name>applyElm</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>hasSplitSerialize&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="154" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="154" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a88fe1c00864f170cd59deb25a2bf2695" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void checkpoint::dispatch::SerializerDispatchNonByte&lt; SerializerT, T, Dispatcher &gt;::applyElm</definition>
        <argsstring>(SerializerT &amp;s, T *val, hasNotSplitSerialize&lt; U &gt; *=nullptr)</argsstring>
        <name>applyElm</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>hasNotSplitSerialize&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="162" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a7cd7decd9c65f3f5d68a2e593275f8d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void checkpoint::dispatch::SerializerDispatchNonByte&lt; SerializerT, T, Dispatcher &gt;::applyElm</definition>
        <argsstring>(SerializerT &amp;s, T *val, isEnum&lt; U &gt; *=nullptr)</argsstring>
        <name>applyElm</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>isEnum&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="167" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a38d952156a857c4eba994db912725590" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void checkpoint::dispatch::SerializerDispatchNonByte&lt; SerializerT, T, Dispatcher &gt;::applyStatic</definition>
        <argsstring>(SerializerT &amp;s, T *val, SerialSizeType num, justFootprint&lt; U &gt; *=nullptr)</argsstring>
        <name>applyStatic</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>justFootprint&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Dispatch non-serializable types when footprinting. </para>        </briefdescription>
        <detaileddescription>
<para>Allow simplified footprinting of classes that do not support serialization by just applying &apos;sizeof&apos; operator on them. Note: this means that complex objects will not be traversed further.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>serializer to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the array of objects </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of objects in the array </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="185" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="185" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a5c76cadd528c3d2348a3963d44402aea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void checkpoint::dispatch::SerializerDispatchNonByte&lt; SerializerT, T, Dispatcher &gt;::applyStatic</definition>
        <argsstring>(SerializerT &amp;s, T *val, SerialSizeType num, hasInSerialize&lt; U &gt; *=nullptr)</argsstring>
        <name>applyStatic</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a7f2203710503e6ea7a5c4a565795a1d0" kindref="member">hasInSerialize</ref>&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="207" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="207" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a1bdb0ab1fae98f7c72d5770d0803494b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void checkpoint::dispatch::SerializerDispatchNonByte&lt; SerializerT, T, Dispatcher &gt;::applyStatic</definition>
        <argsstring>(SerializerT &amp;s, T *val, SerialSizeType num, hasNoninSerialize&lt; U &gt; *=nullptr)</argsstring>
        <name>applyStatic</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1ad59e5c933a762ce90d1ab5f7ca04ca9f" kindref="member">hasNoninSerialize</ref>&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="222" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="222" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a0aec94a0c69c27fc13f6dc0f923d2f50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void checkpoint::dispatch::SerializerDispatchNonByte&lt; SerializerT, T, Dispatcher &gt;::applyStatic</definition>
        <argsstring>(SerializerT &amp;s, T *val, SerialSizeType num, isEnum&lt; U &gt; *=nullptr)</argsstring>
        <name>applyStatic</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>isEnum&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="236" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="236" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a12e7e180be642ec9eaaac93972e28856" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void checkpoint::dispatch::SerializerDispatchNonByte&lt; SerializerT, T, Dispatcher &gt;::apply</definition>
        <argsstring>(SerializerT &amp;s, T *val, SerialSizeType num, hasVirtualSerialize&lt; U &gt; *=nullptr)</argsstring>
        <name>apply</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>hasVirtualSerialize&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="250" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="250" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1ae6e291caec4d650a7d91e78a209a1964" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void checkpoint::dispatch::SerializerDispatchNonByte&lt; SerializerT, T, Dispatcher &gt;::apply</definition>
        <argsstring>(SerializerT &amp;s, T *val, SerialSizeType num, hasNotVirtualSerialize&lt; U &gt; *=nullptr)</argsstring>
        <name>apply</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>hasNotVirtualSerialize&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="262" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="262" bodyend="266"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" line="95" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/dispatch_serializer_nonbyte.h" bodystart="95" bodyend="267"/>
    <listofallmembers>
      <member refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a12e7e180be642ec9eaaac93972e28856" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::SerializerDispatchNonByte</scope><name>apply</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1ae6e291caec4d650a7d91e78a209a1964" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::SerializerDispatchNonByte</scope><name>apply</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a3bbb12db16d00e1c76e51b52452187aa" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::SerializerDispatchNonByte</scope><name>applyElm</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a88fe1c00864f170cd59deb25a2bf2695" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::SerializerDispatchNonByte</scope><name>applyElm</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a7cd7decd9c65f3f5d68a2e593275f8d1" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::SerializerDispatchNonByte</scope><name>applyElm</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a38d952156a857c4eba994db912725590" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::SerializerDispatchNonByte</scope><name>applyStatic</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a5c76cadd528c3d2348a3963d44402aea" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::SerializerDispatchNonByte</scope><name>applyStatic</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a1bdb0ab1fae98f7c72d5770d0803494b" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::SerializerDispatchNonByte</scope><name>applyStatic</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a0aec94a0c69c27fc13f6dc0f923d2f50" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::SerializerDispatchNonByte</scope><name>applyStatic</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a7f2203710503e6ea7a5c4a565795a1d0" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::SerializerDispatchNonByte</scope><name>hasInSerialize</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1ad59e5c933a762ce90d1ab5f7ca04ca9f" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::SerializerDispatchNonByte</scope><name>hasNoninSerialize</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a6cf01feb8acb29ef56c37d3180b63671" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::SerializerDispatchNonByte</scope><name>operator()</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte_1a456d0c02fc35667989d79ddbb0393776" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::SerializerDispatchNonByte</scope><name>S</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
