<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1util_1_1memory_1_1_memory_usage" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::memory::MemoryUsage</compoundname>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component" prot="public" virt="non-virtual">vt::runtime::component::Component&lt; MemoryUsage &gt;</basecompoundref>
    <includes refid="memory__usage_8h" local="no">memory_usage.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1memory_1_1_memory_usage_1afe2db27e57d4fb6f0356c06a376cd568" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="structvt_1_1util_1_1memory_1_1_reporter" kindref="compound">Reporter</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;Reporter&gt; &gt; vt::util::memory::MemoryUsage::reporters_</definition>
        <argsstring></argsstring>
        <name>reporters_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="195" column="1" bodyfile="src/vt/utils/memory/memory_usage.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1memory_1_1_memory_usage_1a714d3de79740091fce1761c7c0a858bd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::util::memory::MemoryUsage::first_valid_reporter_</definition>
        <argsstring></argsstring>
        <name>first_valid_reporter_</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="196" column="1" bodyfile="src/vt/utils/memory/memory_usage.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1memory_1_1_memory_usage_1a5838280c7b2b24ab8ed2aff450b5e98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::util::memory::MemoryUsage::MemoryUsage</definition>
        <argsstring>()</argsstring>
        <name>MemoryUsage</name>
        <briefdescription>
<para>Construct a memory usage component. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="126" column="1" bodyfile="src/vt/utils/memory/memory_usage.cc" bodystart="308" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1memory_1_1_memory_usage_1add66c6cdabed24194310380c5a28951a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::util::memory::MemoryUsage::initialize</definition>
        <argsstring>() override</argsstring>
        <name>initialize</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_1a7f07384d294e59796add9ce6be2d6410">initialize</reimplements>
        <briefdescription>
<para>Empty default overridden initialize method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="128" column="1" bodyfile="src/vt/utils/memory/memory_usage.cc" bodystart="359" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1memory_1_1_memory_usage_1abd58d8e05874fa3da64e15fef0b9e87f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string vt::util::memory::MemoryUsage::name</definition>
        <argsstring>() override</argsstring>
        <name>name</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_name_1a33c06229bb605a2b2ceff68830d6d773">name</reimplements>
        <briefdescription>
<para>Get the name of the component. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="130" column="1" bodyfile="src/vt/utils/memory/memory_usage.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1memory_1_1_memory_usage_1a59d87ec931fe37d4300ba72b00e63d8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::util::memory::MemoryUsage::getAverageUsage</definition>
        <argsstring>()</argsstring>
        <name>getAverageUsage</name>
        <briefdescription>
<para>Get mean current usage in bytes over all working reporters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>average usage in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="137" column="1" bodyfile="src/vt/utils/memory/memory_usage.cc" bodystart="382" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1memory_1_1_memory_usage_1ab02282aab80eb52e5f8f43095af05304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::util::memory::MemoryUsage::getFirstUsage</definition>
        <argsstring>()</argsstring>
        <name>getFirstUsage</name>
        <briefdescription>
<para>Get current usage from first working reporter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>usage in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="144" column="1" bodyfile="src/vt/utils/memory/memory_usage.cc" bodystart="399" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1memory_1_1_memory_usage_1a5baf0fd6bf753755c4602fcb91a7c268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vt::util::memory::MemoryUsage::getFirstReporter</definition>
        <argsstring>()</argsstring>
        <name>getFirstReporter</name>
        <briefdescription>
<para>Get the first working reporter name. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="151" column="1" bodyfile="src/vt/utils/memory/memory_usage.cc" bodystart="418" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1memory_1_1_memory_usage_1aa37f5b634fb87151fc1688cdba759298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vt::util::memory::MemoryUsage::getUsageAll</definition>
        <argsstring>(bool pretty=true, MemoryUnitEnum unit=MemoryUnitEnum::Megabytes)</argsstring>
        <name>getUsageAll</name>
        <param>
          <type>bool</type>
          <declname>pretty</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1util_1_1memory_1a64df3d84293b34009f78e2a1db2f9bb6" kindref="member">MemoryUnitEnum</ref></type>
          <declname>unit</declname>
          <defval><ref refid="namespacevt_1_1util_1_1memory_1a64df3d84293b34009f78e2a1db2f9bb6a2276a1b157f2813f3b65d04c0b1c56f6" kindref="member">MemoryUnitEnum::Megabytes</ref></defval>
        </param>
        <briefdescription>
<para>Get string of (optionally pretty-printed) usage from all reporters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pretty</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to pretty-print </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">unit</parametername>
</parameternamelist>
<parameterdescription>
<para>unit requested for usage</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string output of usage </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="161" column="1" bodyfile="src/vt/utils/memory/memory_usage.cc" bodystart="427" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1memory_1_1_memory_usage_1aee12dfad3c08673967dd1fcd6a6adfb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::util::memory::MemoryUsage::hasWorkingReporter</definition>
        <argsstring>() const</argsstring>
        <name>hasWorkingReporter</name>
        <briefdescription>
<para>Check if there exists a working reporter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether there is a working reporter </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="170" column="1" bodyfile="src/vt/utils/memory/memory_usage.cc" bodystart="477" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1memory_1_1_memory_usage_1a23bded824e4360e4389d9869c3bd7f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; vt::util::memory::MemoryUsage::getWorkingReporters</definition>
        <argsstring>()</argsstring>
        <name>getWorkingReporters</name>
        <briefdescription>
<para>Get list of working reporters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>working reporters </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="177" column="1" bodyfile="src/vt/utils/memory/memory_usage.cc" bodystart="455" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1memory_1_1_memory_usage_1ad047c8acc218403b53ec97c82fa7d7e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::util::memory::MemoryUsage::convertBytesFromString</definition>
        <argsstring>(std::string const &amp;in)</argsstring>
        <name>convertBytesFromString</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Convert bytes to string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>string with bytes</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="186" column="1" bodyfile="src/vt/utils/memory/memory_usage.cc" bodystart="465" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1memory_1_1_memory_usage_1a04cb38c64eee80c2e874088529a77cda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::util::memory::MemoryUsage::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="189" column="1" bodyfile="src/vt/utils/memory/memory_usage.h" bodystart="189" bodyend="192"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An optional VT component that records memory usage for tracing and general profiling. </para>    </briefdescription>
    <detaileddescription>
<para>The memory usage component is backed by a list of memory reporters that can be selected from depending on the platform and accuracy needed. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2491">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="2492" relation="public-inheritance">
        </childnode>
        <childnode refid="2495" relation="public-inheritance">
        </childnode>
        <childnode refid="2496" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2494">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="2490">
        <label>vt::runtime::component::Component&lt; MemoryUsage &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="2491" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2489">
        <label>vt::util::memory::MemoryUsage</label>
        <link refid="structvt_1_1util_1_1memory_1_1_memory_usage"/>
        <childnode refid="2490" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2492">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="2493" relation="public-inheritance">
        </childnode>
        <childnode refid="2494" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2493">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="2495">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="2496">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2499">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="2500" relation="public-inheritance">
        </childnode>
        <childnode refid="2503" relation="public-inheritance">
        </childnode>
        <childnode refid="2504" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2502">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="2498">
        <label>vt::runtime::component::Component&lt; MemoryUsage &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="2499" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2497">
        <label>vt::util::memory::MemoryUsage</label>
        <link refid="structvt_1_1util_1_1memory_1_1_memory_usage"/>
        <childnode refid="2498" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2500">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="2501" relation="public-inheritance">
        </childnode>
        <childnode refid="2502" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2501">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="2503">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="2504">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/utils/memory/memory_usage.h" line="122" column="1" bodyfile="src/vt/utils/memory/memory_usage.h" bodystart="122" bodyend="197"/>
    <listofallmembers>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ab954824329584814bb652ea810cd62e3" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1a94c1d493860adff6ae69c5eb31bb3f" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1ac9c39c6eafc72a1a240ed67ea12b3e66" prot="protected" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>component_id_</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_memory_usage_1ad047c8acc218403b53ec97c82fa7d7e3" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>convertBytesFromString</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ad95ea698535524d0f82c5da9beaaaf37" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>DiagnosticBasePtrType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695" prot="public" virt="virtual"><scope>vt::util::memory::MemoryUsage</scope><name>dumpState</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a098e362de01af6054e5491fba671a959" prot="public" virt="virtual"><scope>vt::util::memory::MemoryUsage</scope><name>finalize</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_memory_usage_1a714d3de79740091fce1761c7c0a858bd" prot="private" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>first_valid_reporter_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a1d6951af40ad0b4020860c0b21b1a85c" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>foreachDiagnostic</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_memory_usage_1a59d87ec931fe37d4300ba72b00e63d8e" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>getAverageUsage</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1a45ab90398777ffdbb2ad5b62fe183d99" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>getComponentID</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a9c1f4174ac87bb6ae0ec186a08adbbbb" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>getDiagnosticsFootprint</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_memory_usage_1a5baf0fd6bf753755c4602fcb91a7c268" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>getFirstReporter</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_memory_usage_1ab02282aab80eb52e5f8f43095af05304" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>getFirstUsage</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_memory_usage_1aa37f5b634fb87151fc1688cdba759298" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>getUsageAll</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_memory_usage_1a23bded824e4360e4389d9869c3bd7f18" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>getWorkingReporters</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_memory_usage_1aee12dfad3c08673967dd1fcd6a6adfb5" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>hasWorkingReporter</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_memory_usage_1add66c6cdabed24194310380c5a28951a" prot="public" virt="virtual"><scope>vt::util::memory::MemoryUsage</scope><name>initialize</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_memory_usage_1a5838280c7b2b24ab8ed2aff450b5e98f" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>MemoryUsage</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_memory_usage_1abd58d8e05874fa3da64e15fef0b9e87f" prot="public" virt="virtual"><scope>vt::util::memory::MemoryUsage</scope><name>name</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a5a15bd0369a9d3765a6c70249bada96f" prot="public" virt="virtual"><scope>vt::util::memory::MemoryUsage</scope><name>pollable</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a4e64b5a12ffc1874065aa8b09e6309a9" prot="public" virt="virtual"><scope>vt::util::memory::MemoryUsage</scope><name>preDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1dab11d9eb5bed8dfd5a3bb8fdf67f5a" prot="public" virt="virtual"><scope>vt::util::memory::MemoryUsage</scope><name>progress</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1af9d694f9d62d973a2cde6e52c55bef14" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>reducer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa2cd54632710e7cdf1b20dfb676c752c" prot="protected" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>registerCounter</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1abb1ee7f09f05c143dbdfd3346f6cdcba" prot="protected" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>registerCounterT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ab71509224f5716107ef5c781ba5ff487" prot="protected" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>registerDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a20417bbb4fe4c4d7648aef3a2699b787" prot="protected" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>registerGauge</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa220905292aeb726254d3dff2e672b00" prot="protected" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>registerGaugeT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a5c6035a56d54cc3de270efedad3f026e" prot="protected" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>registerTimer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a328ecca78c6aa309bb764f3dde083c3e" prot="protected" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>registerTimerT</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_memory_usage_1afe2db27e57d4fb6f0356c06a376cd568" prot="private" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>reporters_</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_memory_usage_1a04cb38c64eee80c2e874088529a77cda" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>serialize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1abe85836f57c42a695fdc292cd78b10cb" prot="public" virt="non-virtual" ambiguityscope="Component&lt; MemoryUsage &gt;::"><scope>vt::util::memory::MemoryUsage</scope><name>serialize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aad3974307ab3b2e1df389a91310f68c2" prot="public" virt="virtual"><scope>vt::util::memory::MemoryUsage</scope><name>startup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ac969a635e579cf7be3af696f500bf260" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>staticInit</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a2bcd1016fcdb6395844d4fd15d84a570" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>UnitType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a97b0e8ff394c8aa04035ff15165eb087" prot="protected" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>updateDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a75e737294bb63e1898d9ac4515f0cf63" prot="public" virt="non-virtual"><scope>vt::util::memory::MemoryUsage</scope><name>UpdateType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a9190b5cb499f9cfdacc1e0bd98a1805a" prot="public" virt="virtual"><scope>vt::util::memory::MemoryUsage</scope><name>~BaseComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
