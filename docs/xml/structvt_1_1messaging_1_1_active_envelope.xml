<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structvt_1_1messaging_1_1_active_envelope" kind="struct" language="C++" prot="public">
    <compoundname>vt::messaging::ActiveEnvelope</compoundname>
    <includes refid="envelope__base_8h" local="no">envelope_base.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1messaging_1_1_active_envelope_1ad9d4a03838736cf7240bd25bc317fd3c" prot="public" static="no">
        <type>std::true_type</type>
        <definition>using vt::messaging::ActiveEnvelope::isByteCopyable =  std::true_type</definition>
        <argsstring></argsstring>
        <name>isByteCopyable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/envelope/envelope_base.h" line="68" column="3" bodyfile="src/vt/messaging/envelope/envelope_base.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1messaging_1_1_active_envelope_1aaa2cebe2e468e71249feff85841521d4" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1a2740126d59f361d9ba46f66b3b4b0d3d" kindref="member">EnvelopeDataType</ref></type>
        <definition>EnvelopeDataType vt::messaging::ActiveEnvelope::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <bitfield> envelope_num_bits</bitfield>
        <briefdescription>
<para>The envelope type bits: <computeroutput>eEnvelopeType</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/envelope/envelope_base.h" line="71" column="20" bodyfile="src/vt/messaging/envelope/envelope_base.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1messaging_1_1_active_envelope_1ad82d63430ef2ae4d03c1a986fa2f9350" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::messaging::ActiveEnvelope::dest</definition>
        <argsstring></argsstring>
        <name>dest</name>
        <bitfield> node_num_bits</bitfield>
        <briefdescription>
<para>Destination node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/envelope/envelope_base.h" line="73" column="12" bodyfile="src/vt/messaging/envelope/envelope_base.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1messaging_1_1_active_envelope_1a0d27da3b0da69281b7572ea29fcf61fc" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::messaging::ActiveEnvelope::han</definition>
        <argsstring></argsstring>
        <name>han</name>
        <bitfield> handler_num_bits</bitfield>
        <briefdescription>
<para>Handler to execute on arrival. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/envelope/envelope_base.h" line="75" column="15" bodyfile="src/vt/messaging/envelope/envelope_base.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1messaging_1_1_active_envelope_1a61861e4316e9c65f7a18ba792da412e2" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1a60fda95dc2316580f0ccf87d570f1d9e" kindref="member">RefType</ref></type>
        <definition>RefType vt::messaging::ActiveEnvelope::ref</definition>
        <argsstring></argsstring>
        <name>ref</name>
        <bitfield> ref_num_bits</bitfield>
        <briefdescription>
<para>Local reference count for the outer message to manage memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/envelope/envelope_base.h" line="77" column="11" bodyfile="src/vt/messaging/envelope/envelope_base.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1messaging_1_1_active_envelope_1a99173c33673ca13d681910bb07b9a7a0" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref></type>
        <definition>GroupType vt::messaging::ActiveEnvelope::group</definition>
        <argsstring></argsstring>
        <name>group</name>
        <bitfield> group_num_bits</bitfield>
        <briefdescription>
<para>The associated group: may imply a non-standard spanning tree or node subset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/envelope/envelope_base.h" line="79" column="13" bodyfile="src/vt/messaging/envelope/envelope_base.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1messaging_1_1_active_envelope_1a340d6eae2a23ce99dc3e06f1ae2a5b81" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::messaging::ActiveEnvelope::has_been_serialized</definition>
        <argsstring></argsstring>
        <name>has_been_serialized</name>
        <bitfield> 1</bitfield>
        <briefdescription>
<para>True iff serialization is performed (through to base type). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/envelope/envelope_base.h" line="95" column="8" bodyfile="src/vt/messaging/envelope/envelope_base.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1messaging_1_1_active_envelope_1a17ded970dbc5c61160848d5ecf5c57ab" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::messaging::ActiveEnvelope::is_locked</definition>
        <argsstring></argsstring>
        <name>is_locked</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True iff the message is considered locked. If locked, changes to the envelope will result in failure. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/envelope/envelope_base.h" line="99" column="8" bodyfile="src/vt/messaging/envelope/envelope_base.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1messaging_1_1_active_envelope_1aba7a8aaed2a99d0bfd72890e07397c0b" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::messaging::ActiveEnvelope::deliver_bcast_to_sender</definition>
        <argsstring></argsstring>
        <name>deliver_bcast_to_sender</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/envelope/envelope_base.h" line="103" column="8" bodyfile="src/vt/messaging/envelope/envelope_base.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1messaging_1_1_active_envelope_1afa732eed06a62623137230d15189ac63" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::messaging::ActiveEnvelope::comm_lb_data_recorded_above_bare_handler</definition>
        <argsstring></argsstring>
        <name>comm_lb_data_recorded_above_bare_handler</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to denote that the message&apos;s bare handlers shouldn&apos;t record communication LB data due to redundancy </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/envelope/envelope_base.h" line="107" column="8" bodyfile="src/vt/messaging/envelope/envelope_base.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The foundational basic envelope that every VT message has as the first member. </para>
    </briefdescription>
    <detaileddescription>
<para>Used to contain the associated handler function and other control bits required to process the message. Extended envelopes contain this as the first member so the type bits can be used to cast to the specific extended envelope. </para>
    </detaileddescription>
    <location file="src/vt/messaging/envelope/envelope_base.h" line="67" column="21" bodyfile="src/vt/messaging/envelope/envelope_base.h" bodystart="67" bodyend="108"/>
    <listofallmembers>
      <member refid="structvt_1_1messaging_1_1_active_envelope_1afa732eed06a62623137230d15189ac63" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveEnvelope</scope><name>comm_lb_data_recorded_above_bare_handler</name></member>
      <member refid="structvt_1_1messaging_1_1_active_envelope_1aba7a8aaed2a99d0bfd72890e07397c0b" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveEnvelope</scope><name>deliver_bcast_to_sender</name></member>
      <member refid="structvt_1_1messaging_1_1_active_envelope_1ad82d63430ef2ae4d03c1a986fa2f9350" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveEnvelope</scope><name>dest</name></member>
      <member refid="structvt_1_1messaging_1_1_active_envelope_1a99173c33673ca13d681910bb07b9a7a0" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveEnvelope</scope><name>group</name></member>
      <member refid="structvt_1_1messaging_1_1_active_envelope_1a0d27da3b0da69281b7572ea29fcf61fc" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveEnvelope</scope><name>han</name></member>
      <member refid="structvt_1_1messaging_1_1_active_envelope_1a340d6eae2a23ce99dc3e06f1ae2a5b81" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveEnvelope</scope><name>has_been_serialized</name></member>
      <member refid="structvt_1_1messaging_1_1_active_envelope_1a17ded970dbc5c61160848d5ecf5c57ab" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveEnvelope</scope><name>is_locked</name></member>
      <member refid="structvt_1_1messaging_1_1_active_envelope_1ad9d4a03838736cf7240bd25bc317fd3c" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveEnvelope</scope><name>isByteCopyable</name></member>
      <member refid="structvt_1_1messaging_1_1_active_envelope_1a61861e4316e9c65f7a18ba792da412e2" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveEnvelope</scope><name>ref</name></member>
      <member refid="structvt_1_1messaging_1_1_active_envelope_1aaa2cebe2e468e71249feff85841521d4" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveEnvelope</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
