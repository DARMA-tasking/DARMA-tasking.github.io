<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1pipe_1_1signal_1_1_signal_holder" kind="struct" language="C++" prot="public">
    <compoundname>vt::pipe::signal::SignalHolder</compoundname>
    <includes refid="signal__holder_8h" local="no">signal_holder.h</includes>
    <templateparamlist>
      <param>
        <type>typename SignalT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a4c1ad2d2a961f4d381d9c9455bc0d901" prot="public" static="no">
        <type>typename SignalT::DataType</type>
        <definition>using vt::pipe::signal::SignalHolder&lt; SignalT &gt;::DataType =  typename SignalT::DataType</definition>
        <argsstring></argsstring>
        <name>DataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="66" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aad5bfc2b46dfa071ae638385324d7e31" prot="public" static="no">
        <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a4c1ad2d2a961f4d381d9c9455bc0d901" kindref="member">DataType</ref> *</type>
        <definition>using vt::pipe::signal::SignalHolder&lt; SignalT &gt;::DataPtrType =  DataType*</definition>
        <argsstring></argsstring>
        <name>DataPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="67" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aced54515f402b63f6dea174e5b027c81" prot="public" static="no">
        <type>int32_t</type>
        <definition>using vt::pipe::signal::SignalHolder&lt; SignalT &gt;::SigCountType =  int32_t</definition>
        <argsstring></argsstring>
        <name>SigCountType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="68" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ab04d27c1c48b28813fdd8af29a4cda92" prot="public" static="no">
        <type>std::vector&lt; SignalT &gt;</type>
        <definition>using vt::pipe::signal::SignalHolder&lt; SignalT &gt;::SignalListType =  std::vector&lt;SignalT&gt;</definition>
        <argsstring></argsstring>
        <name>SignalListType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="69" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a84b564235f6d400782769c94a75d6622" prot="public" static="no">
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_base" kindref="compound">callback::CallbackBase</ref>&lt; SignalT &gt;</type>
        <definition>using vt::pipe::signal::SignalHolder&lt; SignalT &gt;::ListenerBaseType =  callback::CallbackBase&lt;SignalT&gt;</definition>
        <argsstring></argsstring>
        <name>ListenerBaseType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="70" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a23af418129e6e8ecb4ee9621e6fd6f90" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a84b564235f6d400782769c94a75d6622" kindref="member">ListenerBaseType</ref> &gt;</type>
        <definition>using vt::pipe::signal::SignalHolder&lt; SignalT &gt;::ListenerType =  std::unique_ptr&lt;ListenerBaseType&gt;</definition>
        <argsstring></argsstring>
        <name>ListenerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="71" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ae37fd15e6a901de2f90620780e936f6e" prot="public" static="no">
        <type>std::list&lt; <ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a23af418129e6e8ecb4ee9621e6fd6f90" kindref="member">ListenerType</ref> &gt;</type>
        <definition>using vt::pipe::signal::SignalHolder&lt; SignalT &gt;::ListenerListType =  std::list&lt;ListenerType&gt;</definition>
        <argsstring></argsstring>
        <name>ListenerListType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="72" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1af0d3ccf4a8700979f414a0485cf41df5" prot="public" static="no">
        <type>typename ListenerListType::iterator</type>
        <definition>using vt::pipe::signal::SignalHolder&lt; SignalT &gt;::ListenerListIterType =  typename ListenerListType::iterator</definition>
        <argsstring></argsstring>
        <name>ListenerListIterType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="73" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a68114d1ad5804c71e014736b18e41e08" prot="public" static="no">
        <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a84b564235f6d400782769c94a75d6622" kindref="member">ListenerBaseType</ref> *</type>
        <definition>using vt::pipe::signal::SignalHolder&lt; SignalT &gt;::ListenerPtrType =  ListenerBaseType*</definition>
        <argsstring></argsstring>
        <name>ListenerPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="74" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a47bf4c2ab16e94467e6e5d3a29820276" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref>, <ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ae37fd15e6a901de2f90620780e936f6e" kindref="member">ListenerListType</ref> &gt;</type>
        <definition>using vt::pipe::signal::SignalHolder&lt; SignalT &gt;::ListenerMapType =  std::unordered_map&lt;PipeType,ListenerListType&gt;</definition>
        <argsstring></argsstring>
        <name>ListenerMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="75" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a064e16bdc96f93675bc7fb967121a527" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref>, <ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ab04d27c1c48b28813fdd8af29a4cda92" kindref="member">SignalListType</ref> &gt;</type>
        <definition>using vt::pipe::signal::SignalHolder&lt; SignalT &gt;::SignalMapType =  std::unordered_map&lt;PipeType,SignalListType&gt;</definition>
        <argsstring></argsstring>
        <name>SignalMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="76" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ade6904d6f651a864bf2e5a657a4b1a13" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref>, <ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aced54515f402b63f6dea174e5b027c81" kindref="member">SigCountType</ref> &gt;</type>
        <definition>using vt::pipe::signal::SignalHolder&lt; SignalT &gt;::CountMapType =  std::unordered_map&lt;PipeType,SigCountType&gt;</definition>
        <argsstring></argsstring>
        <name>CountMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="77" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a7f6eed09a10f9b4f679c99ae85983879" prot="public" static="no">
        <type>typename ListenerMapType::iterator</type>
        <definition>using vt::pipe::signal::SignalHolder&lt; SignalT &gt;::ListenerMapIterType =  typename ListenerMapType::iterator</definition>
        <argsstring></argsstring>
        <name>ListenerMapIterType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="78" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1abc4dda923a2844f99d62b8e0555fc2d8" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a064e16bdc96f93675bc7fb967121a527" kindref="member">SignalMapType</ref></type>
        <definition>SignalMapType vt::pipe::signal::SignalHolder&lt; SignalT &gt;::pending_holder_</definition>
        <argsstring></argsstring>
        <name>pending_holder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="105" column="17" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ab9ff9df04d2407c4fc5d9e0658f9baa0" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ade6904d6f651a864bf2e5a657a4b1a13" kindref="member">CountMapType</ref></type>
        <definition>CountMapType vt::pipe::signal::SignalHolder&lt; SignalT &gt;::listener_count_</definition>
        <argsstring></argsstring>
        <name>listener_count_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="106" column="16" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ad8784f84675b031bfb829da534f70fe9" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a47bf4c2ab16e94467e6e5d3a29820276" kindref="member">ListenerMapType</ref></type>
        <definition>ListenerMapType vt::pipe::signal::SignalHolder&lt; SignalT &gt;::listeners_</definition>
        <argsstring></argsstring>
        <name>listeners_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="107" column="19" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ae20bae26dbb331089cab143f97fe2c92" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned vt::pipe::signal::SignalHolder&lt; SignalT &gt;::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="108" column="12" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a9b8fde895ed00689216a5e4a7540cefa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::signal::SignalHolder&lt; SignalT &gt;::SignalHolder</definition>
        <argsstring>()</argsstring>
        <name>SignalHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="80" column="3" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ae32b546852bc4518b6d75f2e43a5eb5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::signal::SignalHolder&lt; SignalT &gt;::addSignal</definition>
        <argsstring>(PipeType const &amp;pid, DataPtrType in_data)</argsstring>
        <name>addSignal</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aad5bfc2b46dfa071ae638385324d7e31" kindref="member">DataPtrType</ref></type>
          <declname>in_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="84" column="8" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="60" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a5be1905ef30b9c0e8764daa5f471d445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::signal::SignalHolder&lt; SignalT &gt;::removeListener</definition>
        <argsstring>(PipeType const &amp;pid, ListenerPtrType listener)</argsstring>
        <name>removeListener</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a68114d1ad5804c71e014736b18e41e08" kindref="member">ListenerPtrType</ref></type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="85" column="8" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="76" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a08a8e0ba7a1eac7df48561112f5859ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1af0d3ccf4a8700979f414a0485cf41df5" kindref="member">ListenerListIterType</ref></type>
        <definition>SignalHolder&lt; SignalT &gt;::ListenerListIterType vt::pipe::signal::SignalHolder&lt; SignalT &gt;::removeListener</definition>
        <argsstring>(ListenerMapIterType map_iter, ListenerListIterType iter)</argsstring>
        <name>removeListener</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a7f6eed09a10f9b4f679c99ae85983879" kindref="member">ListenerMapIterType</ref></type>
          <declname>map_iter</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1af0d3ccf4a8700979f414a0485cf41df5" kindref="member">ListenerListIterType</ref></type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="86" column="24" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="122" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a5ef82532eb8d0d65fe7b07f7fb53491d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::signal::SignalHolder&lt; SignalT &gt;::clearAllListeners</definition>
        <argsstring>(PipeType const &amp;pid)</argsstring>
        <name>clearAllListeners</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="89" column="8" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="99" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a9907ff2a131c6aafe6771c09b6ae9415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::signal::SignalHolder&lt; SignalT &gt;::clearAllSignals</definition>
        <argsstring>(PipeType const &amp;pid)</argsstring>
        <name>clearAllSignals</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="90" column="8" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="107" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a9f31fab057a4e9af38547859572b6127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::signal::SignalHolder&lt; SignalT &gt;::clearPipe</definition>
        <argsstring>(PipeType const &amp;pid)</argsstring>
        <name>clearPipe</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="91" column="8" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a3e04f57a784e41c422357dfda7871304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::signal::SignalHolder&lt; SignalT &gt;::deliverAll</definition>
        <argsstring>(PipeType const &amp;pid, DataPtrType data)</argsstring>
        <name>deliverAll</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aad5bfc2b46dfa071ae638385324d7e31" kindref="member">DataPtrType</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="92" column="8" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="161" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aee30c3b7c07d695450e1d6a9953ee98a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::signal::SignalHolder&lt; SignalT &gt;::addListener</definition>
        <argsstring>(PipeType const &amp;pid, ListenerType &amp;&amp;cb)</argsstring>
        <name>addListener</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a23af418129e6e8ecb4ee9621e6fd6f90" kindref="member">ListenerType</ref> &amp;&amp;</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="93" column="8" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="186" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aa15cf43c4602a9d866f8060746696a45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::signal::SignalHolder&lt; SignalT &gt;::setCount</definition>
        <argsstring>(PipeType const &amp;pid, SigCountType const &amp;count)</argsstring>
        <name>setCount</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aced54515f402b63f6dea174e5b027c81" kindref="member">SigCountType</ref> const &amp;</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="94" column="8" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="145" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aefb0dca5bdcb08b867c24b29f1d48429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aced54515f402b63f6dea174e5b027c81" kindref="member">SigCountType</ref></type>
        <definition>SignalHolder&lt; SignalT &gt;::SigCountType vt::pipe::signal::SignalHolder&lt; SignalT &gt;::getCount</definition>
        <argsstring>(PipeType const &amp;pid)</argsstring>
        <name>getCount</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="95" column="16" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="135" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a611fe4b2ce38900245e2f4a9dd40d5dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::signal::SignalHolder&lt; SignalT &gt;::applySignal</definition>
        <argsstring>(ListenerPtrType listener, DataPtrType data, PipeType const &amp;pid)</argsstring>
        <name>applySignal</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a68114d1ad5804c71e014736b18e41e08" kindref="member">ListenerPtrType</ref></type>
          <declname>listener</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aad5bfc2b46dfa071ae638385324d7e31" kindref="member">DataPtrType</ref></type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="96" column="8" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="211" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aa2d3f4de74295a26df20f26e84f99c4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::signal::SignalHolder&lt; SignalT &gt;::finished</definition>
        <argsstring>(ListenerPtrType listener) const</argsstring>
        <name>finished</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a68114d1ad5804c71e014736b18e41e08" kindref="member">ListenerPtrType</ref></type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="99" column="8" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aeea971b494ab1e9bd716d4a127194ea3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::signal::SignalHolder&lt; SignalT &gt;::exists</definition>
        <argsstring>(PipeType const &amp;pipe) const</argsstring>
        <name>exists</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="100" column="8" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a5a7daec96f1824691dbeefd9567974b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned vt::pipe::signal::SignalHolder&lt; SignalT &gt;::getID</definition>
        <argsstring>() const</argsstring>
        <name>getID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="101" column="12" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1signal_1_1_signal_holder_1abcd78906fca701244f0f13089b5f5057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::signal::SignalHolder&lt; SignalT &gt;::clearAll</definition>
        <argsstring>()</argsstring>
        <name>clearAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/signal/signal_holder.h" line="102" column="8" bodyfile="src/vt/pipe/signal/signal_holder.impl.h" bodystart="92" bodyend="96"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/pipe/signal/signal_holder.h" line="65" column="1" bodyfile="src/vt/pipe/signal/signal_holder.h" bodystart="65" bodyend="109"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aee30c3b7c07d695450e1d6a9953ee98a" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>addListener</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ae32b546852bc4518b6d75f2e43a5eb5f" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>addSignal</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a611fe4b2ce38900245e2f4a9dd40d5dc" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>applySignal</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1abcd78906fca701244f0f13089b5f5057" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>clearAll</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a5ef82532eb8d0d65fe7b07f7fb53491d" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>clearAllListeners</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a9907ff2a131c6aafe6771c09b6ae9415" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>clearAllSignals</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a9f31fab057a4e9af38547859572b6127" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>clearPipe</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ade6904d6f651a864bf2e5a657a4b1a13" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>CountMapType</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aad5bfc2b46dfa071ae638385324d7e31" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>DataPtrType</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a4c1ad2d2a961f4d381d9c9455bc0d901" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>DataType</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a3e04f57a784e41c422357dfda7871304" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>deliverAll</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aeea971b494ab1e9bd716d4a127194ea3" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>exists</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aa2d3f4de74295a26df20f26e84f99c4e" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>finished</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aefb0dca5bdcb08b867c24b29f1d48429" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>getCount</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a5a7daec96f1824691dbeefd9567974b9" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>getID</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ae20bae26dbb331089cab143f97fe2c92" prot="private" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>id_</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ab9ff9df04d2407c4fc5d9e0658f9baa0" prot="private" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>listener_count_</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a84b564235f6d400782769c94a75d6622" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>ListenerBaseType</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1af0d3ccf4a8700979f414a0485cf41df5" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>ListenerListIterType</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ae37fd15e6a901de2f90620780e936f6e" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>ListenerListType</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a7f6eed09a10f9b4f679c99ae85983879" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>ListenerMapIterType</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a47bf4c2ab16e94467e6e5d3a29820276" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>ListenerMapType</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a68114d1ad5804c71e014736b18e41e08" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>ListenerPtrType</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ad8784f84675b031bfb829da534f70fe9" prot="private" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>listeners_</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a23af418129e6e8ecb4ee9621e6fd6f90" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>ListenerType</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1abc4dda923a2844f99d62b8e0555fc2d8" prot="private" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>pending_holder_</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a5be1905ef30b9c0e8764daa5f471d445" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>removeListener</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a08a8e0ba7a1eac7df48561112f5859ab" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>removeListener</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aa15cf43c4602a9d866f8060746696a45" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>setCount</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1aced54515f402b63f6dea174e5b027c81" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>SigCountType</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a9b8fde895ed00689216a5e4a7540cefa" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>SignalHolder</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1ab04d27c1c48b28813fdd8af29a4cda92" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>SignalListType</name></member>
      <member refid="structvt_1_1pipe_1_1signal_1_1_signal_holder_1a064e16bdc96f93675bc7fb967121a527" prot="public" virt="non-virtual"><scope>vt::pipe::signal::SignalHolder</scope><name>SignalMapType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
