<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1_collection_manager" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::CollectionManager</compoundname>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component" prot="public" virt="non-virtual">vt::runtime::component::Component&lt; CollectionManager &gt;</basecompoundref>
    <includes refid="vrt_2collection_2manager_8h" local="no">manager.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ad20a11229c9e9efe69135c207047bf85" prot="public" static="no">
        <type>typename <ref refid="structvt_1_1vrt_1_1collection_1_1_holder" kindref="compound">Holder</ref>&lt; ColT, IndexT &gt;::<ref refid="structvt_1_1vrt_1_1collection_1_1_collection" kindref="compound">Collection</ref></type>
        <definition>using vt::vrt::collection::CollectionManager::CollectionType =  typename Holder&lt;ColT, IndexT&gt;::Collection</definition>
        <argsstring></argsstring>
        <name>CollectionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="98" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1da9015e52d6ecca955f57b59aab0b82" prot="public" static="no">
        <type>typename <ref refid="structvt_1_1vrt_1_1collection_1_1_holder" kindref="compound">Holder</ref>&lt; ColT, IndexT &gt;::<ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1da9015e52d6ecca955f57b59aab0b82" kindref="member">VirtualPtrType</ref></type>
        <definition>using vt::vrt::collection::CollectionManager::VirtualPtrType =  typename Holder&lt;ColT, IndexT&gt;::VirtualPtrType</definition>
        <argsstring></argsstring>
        <name>VirtualPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="100" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a98a759caf144277dcd341cdbd5538f59" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref>)&gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::ActionProxyType =  std::function&lt;void(VirtualProxyType)&gt;</definition>
        <argsstring></argsstring>
        <name>ActionProxyType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="101" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a2649daab7b437e1e2bdb5f2eefff29b6" prot="public" static="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::ActionFinishedLBType =  std::function&lt;void()&gt;</definition>
        <argsstring></argsstring>
        <name>ActionFinishedLBType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="102" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a6b9b76aadc721cec45d3e0e02d849ff1" prot="public" static="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::NoElementActionType =  std::function&lt;void()&gt;</definition>
        <argsstring></argsstring>
        <name>NoElementActionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="103" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a47a3227ae0195c15187e8dc8762f66c4" prot="public" static="no">
        <type>std::function&lt; bool(IndexT const  &amp;)&gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::ReduceIdxFuncType =  std::function&lt;bool(IndexT const&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>ReduceIdxFuncType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="105" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae820c8c22ae8c7350fa0232e0749b097" prot="public" static="no">
        <type><ref refid="namespacevt_1_1collective_1_1reduce_1a6d4ad09f8584c3ec79f46944eb773376" kindref="member">collective::reduce::ReduceVirtualIDType</ref></type>
        <definition>using vt::vrt::collection::CollectionManager::ReduceVirtualIDType =  collective::reduce::ReduceVirtualIDType</definition>
        <argsstring></argsstring>
        <name>ReduceVirtualIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="106" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae8aac19e0ae07e9225142e5880eac830" prot="public" static="no">
        <type><ref refid="namespacevt_1_1collective_1_1reduce_1a7b7cb3021ac5654d92825d9fab0250b2" kindref="member">collective::reduce::ReduceStamp</ref></type>
        <definition>using vt::vrt::collection::CollectionManager::ReduceStamp =  collective::reduce::ReduceStamp</definition>
        <argsstring></argsstring>
        <name>ReduceStamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="107" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a536805fb5c58b557b66e7d7febe87567" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a98a759caf144277dcd341cdbd5538f59" kindref="member">ActionProxyType</ref> &gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::ActionContainerType =  std::vector&lt;ActionProxyType&gt;</definition>
        <argsstring></argsstring>
        <name>ActionContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="108" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7b32db0e6ccafa771ddd72f534a1cf8c" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a536805fb5c58b557b66e7d7febe87567" kindref="member">ActionContainerType</ref> &gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::BufferedActionType =  std::unordered_map&lt; VirtualProxyType, ActionContainerType &gt;</definition>
        <argsstring></argsstring>
        <name>BufferedActionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="109" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" prot="public" static="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy" kindref="compound">CollectionProxy</ref>&lt; ColT, IndexT &gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::CollectionProxyWrapType =  CollectionProxy&lt;ColT,IndexT&gt;</definition>
        <argsstring></argsstring>
        <name>CollectionProxyWrapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="113" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ade4647c26f1f20016fa0520bea640f59" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_message" kindref="compound">CollectionMessage</ref>&lt; ColT &gt; * &gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::EpochBcastType =  std::unordered_map&lt;EpochType,CollectionMessage&lt;ColT&gt;*&gt;</definition>
        <argsstring></argsstring>
        <name>EpochBcastType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="115" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af3a8c8a3c37301a98aa62f265858a3c0" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ade4647c26f1f20016fa0520bea640f59" kindref="member">EpochBcastType</ref>&lt; ColT &gt; &gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::BcastBufferType =  std::unordered_map&lt; VirtualProxyType, EpochBcastType&lt;ColT&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>BcastBufferType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="117" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a95c122e5b83bc51c306c9367b8e62c07" prot="public" static="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::CleanupFnType =  std::function&lt;void()&gt;</definition>
        <argsstring></argsstring>
        <name>CleanupFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="120" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a735e54bc5a8646536d07750e2549a156" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref>, std::list&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a95c122e5b83bc51c306c9367b8e62c07" kindref="member">CleanupFnType</ref> &gt; &gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::CleanupListFnType =  std::unordered_map&lt;VirtualProxyType,std::list&lt;CleanupFnType&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>CleanupListFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="121" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0cfe02a0426e95ec9daa2ef7374e07c7" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1ae295e18699146815bb7d7674594d95d7" kindref="member">auto_registry::AutoHandlerType</ref></type>
        <definition>using vt::vrt::collection::CollectionManager::DispatchHandlerType =  auto_registry::AutoHandlerType</definition>
        <argsstring></argsstring>
        <name>DispatchHandlerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="122" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a51650235f0e53ae08381942eba822679" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> &gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::ActionVecType =  std::vector&lt;ActionType&gt;</definition>
        <argsstring></argsstring>
        <name>ActionVecType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="123" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a51ba1b25f5c2f1f7ac5834fdbc85fa5c" prot="public" static="no">
        <type><ref refid="structvt_1_1arguments_1_1_arg_config" kindref="compound">vt::arguments::ArgConfig</ref></type>
        <definition>using vt::vrt::collection::CollectionManager::ArgType =  vt::arguments::ArgConfig</definition>
        <argsstring></argsstring>
        <name>ArgType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="124" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7503830bc133013d542856fa39834dcc" prot="public" static="no">
        <type>std::function&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1da9015e52d6ecca955f57b59aab0b82" kindref="member">VirtualPtrType</ref>&lt; ColT &gt;(IndexT idx)&gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::DistribConstructFn =  std::function&lt;VirtualPtrType&lt;ColT&gt;(IndexT idx)&gt;</definition>
        <argsstring></argsstring>
        <name>DistribConstructFn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="127" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a21c21612c806016788057aeab142af20" prot="public" static="no">
        <type>std::enable_if_t&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1_col_msg_traits" kindref="compound">ColMsgTraits</ref>&lt; T &gt;::is_coll_msg, <ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref> &gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::IsColMsgType =  std::enable_if_t&lt;ColMsgTraits&lt;T&gt;::is_coll_msg, messaging::PendingSend&gt;</definition>
        <argsstring></argsstring>
        <name>IsColMsgType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="130" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae376deeefd4f89a0b1c93849977715d9" prot="public" static="no">
        <type>std::enable_if_t&lt;!<ref refid="structvt_1_1vrt_1_1collection_1_1_col_msg_traits" kindref="compound">ColMsgTraits</ref>&lt; T &gt;::is_coll_msg, <ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref> &gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::IsNotColMsgType =  std::enable_if_t&lt;!ColMsgTraits&lt;T&gt;::is_coll_msg, messaging::PendingSend&gt;</definition>
        <argsstring></argsstring>
        <name>IsNotColMsgType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="132" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1f91c97ed52237c3a3576dfbbe87c8f8" prot="public" static="no">
        <type>std::enable_if_t&lt; std::is_same&lt; T, <ref refid="structvt_1_1vrt_1_1collection_1_1_col_msg_wrap" kindref="compound">ColMsgWrap</ref>&lt; ColT, UserMsgT &gt; &gt;::value, U &gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::IsWrapType =  std::enable_if_t&lt; std::is_same&lt;T,ColMsgWrap&lt;ColT,UserMsgT&gt; &gt;::value,U &gt;</definition>
        <argsstring></argsstring>
        <name>IsWrapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="135" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a18e3a17d9eb086c6c2f499242b7faa1e" prot="public" static="no">
        <type>std::enable_if_t&lt; !std::is_same&lt; T, <ref refid="structvt_1_1vrt_1_1collection_1_1_col_msg_wrap" kindref="compound">ColMsgWrap</ref>&lt; ColT, UserMsgT &gt; &gt;::value, U &gt;</type>
        <definition>using vt::vrt::collection::CollectionManager::IsNotWrapType =  std::enable_if_t&lt; !std::is_same&lt;T,ColMsgWrap&lt;ColT,UserMsgT&gt; &gt;::value,U &gt;</definition>
        <argsstring></argsstring>
        <name>IsNotWrapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="139" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aafd1972e5767dec26c8872f4aafa6864" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>friend struct</type>
        <definition>friend struct CollectionElmAttorney</definition>
        <argsstring></argsstring>
        <name>CollectionElmAttorney</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="813" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="813" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a4089cdff4218109fffb5884f51244a6e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>friend struct</type>
        <definition>friend struct CollectionElmDestroyAttorney</definition>
        <argsstring></argsstring>
        <name>CollectionElmDestroyAttorney</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="816" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="816" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a43891fd66d429b4c9d8d01249f923b0b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>friend struct</type>
        <definition>friend struct InsertTokenRval</definition>
        <argsstring></argsstring>
        <name>InsertTokenRval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="819" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="819" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1abdce9596911e092af07635bdcc13acd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct balance::ElementStats</definition>
        <argsstring></argsstring>
        <name>balance::ElementStats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="821" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="821" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1affaf4ab1e9296a6ff1b7ad3c28a5e04e" prot="private" static="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1vrt_1a84d0891f52f70728c3fc2172cffb464b" kindref="member">VirtualIDType</ref></type>
        <definition>VirtualIDType vt::vrt::collection::CollectionManager::curIdent_</definition>
        <argsstring></argsstring>
        <name>curIdent_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="930" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="930" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a078bcfc68c63d4ac177243638f233a68" prot="private" static="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af3a8c8a3c37301a98aa62f265858a3c0" kindref="member">BcastBufferType</ref>&lt; ColT &gt;</type>
        <definition>BcastBufferType&lt;ColT&gt; vt::vrt::collection::CollectionManager::broadcasts_</definition>
        <argsstring></argsstring>
        <name>broadcasts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="933" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="933" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a5123370561fb8eb70ef7c4979e051706" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a735e54bc5a8646536d07750e2549a156" kindref="member">CleanupListFnType</ref></type>
        <definition>CleanupListFnType vt::vrt::collection::CollectionManager::cleanup_fns_</definition>
        <argsstring></argsstring>
        <name>cleanup_fns_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="941" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="941" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af0e0d5358cd27a66332c72e3e782a6d0" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7b32db0e6ccafa771ddd72f534a1cf8c" kindref="member">BufferedActionType</ref></type>
        <definition>BufferedActionType vt::vrt::collection::CollectionManager::buffered_sends_</definition>
        <argsstring></argsstring>
        <name>buffered_sends_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="942" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="942" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a305fd4b62e108ee3d06da97c792b536d" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7b32db0e6ccafa771ddd72f534a1cf8c" kindref="member">BufferedActionType</ref></type>
        <definition>BufferedActionType vt::vrt::collection::CollectionManager::buffered_bcasts_</definition>
        <argsstring></argsstring>
        <name>buffered_bcasts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="943" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="943" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a20d91256606621c9fba6b0fdd6d17325" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7b32db0e6ccafa771ddd72f534a1cf8c" kindref="member">BufferedActionType</ref></type>
        <definition>BufferedActionType vt::vrt::collection::CollectionManager::buffered_group_</definition>
        <argsstring></argsstring>
        <name>buffered_group_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="944" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="944" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0718b47f3415e6d189f8a76068429d5c" prot="private" static="no" mutable="no">
        <type>std::unordered_set&lt; <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> &gt;</type>
        <definition>std::unordered_set&lt;VirtualProxyType&gt; vt::vrt::collection::CollectionManager::constructed_</definition>
        <argsstring></argsstring>
        <name>constructed_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="945" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="945" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a5bf3bcab36addad323a03746928dfac8" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae820c8c22ae8c7350fa0232e0749b097" kindref="member">ReduceVirtualIDType</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae8aac19e0ae07e9225142e5880eac830" kindref="member">ReduceStamp</ref> &gt;</type>
        <definition>std::unordered_map&lt;ReduceVirtualIDType,ReduceStamp&gt; vt::vrt::collection::CollectionManager::reduce_cur_stamp_</definition>
        <argsstring></argsstring>
        <name>reduce_cur_stamp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="946" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="946" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aad857dc811570360f561b1ffc3df1b6c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a2649daab7b437e1e2bdb5f2eefff29b6" kindref="member">ActionFinishedLBType</ref> &gt;</type>
        <definition>std::vector&lt;ActionFinishedLBType&gt; vt::vrt::collection::CollectionManager::lb_continuations_</definition>
        <argsstring></argsstring>
        <name>lb_continuations_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="947" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="947" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af9d6e82381c808b5463e81643967ea59" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a6b9b76aadc721cec45d3e0e02d849ff1" kindref="member">NoElementActionType</ref> &gt;</type>
        <definition>std::unordered_map&lt;VirtualProxyType,NoElementActionType&gt; vt::vrt::collection::CollectionManager::lb_no_elm_</definition>
        <argsstring></argsstring>
        <name>lb_no_elm_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="948" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="948" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a6d72877052bc73fa06faacb2161cd57d" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a51650235f0e53ae08381942eba822679" kindref="member">ActionVecType</ref> &gt;</type>
        <definition>std::unordered_map&lt;VirtualProxyType,ActionVecType&gt; vt::vrt::collection::CollectionManager::insert_finished_action_</definition>
        <argsstring></argsstring>
        <name>insert_finished_action_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="949" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="949" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a8d436079bfbadeacdf0584b01c150c29" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a51650235f0e53ae08381942eba822679" kindref="member">ActionVecType</ref> &gt;</type>
        <definition>std::unordered_map&lt;VirtualProxyType,ActionVecType&gt; vt::vrt::collection::CollectionManager::user_insert_action_</definition>
        <argsstring></argsstring>
        <name>user_insert_action_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="950" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="950" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac6d4e3a2e80c670dc5c31c0c02ec0e1f" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref>, <ref refid="namespacevt_1_1vrt_1a84d0891f52f70728c3fc2172cffb464b" kindref="member">VirtualIDType</ref> &gt;</type>
        <definition>std::unordered_map&lt;TagType,VirtualIDType&gt; vt::vrt::collection::CollectionManager::dist_tag_id_</definition>
        <argsstring></argsstring>
        <name>dist_tag_id_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="951" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="951" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a42ea6d7733a75f09738a877e90db9aa1" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref>, <ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> &gt;</type>
        <definition>std::unordered_map&lt;VirtualProxyType,ActionType&gt; vt::vrt::collection::CollectionManager::release_lb_</definition>
        <argsstring></argsstring>
        <name>release_lb_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="952" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="952" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0ed427a8b00190e291d7ad7cfa4932f1" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">balance::ElementIDType</ref></type>
        <definition>balance::ElementIDType vt::vrt::collection::CollectionManager::cur_context_temp_elm_id_</definition>
        <argsstring></argsstring>
        <name>cur_context_temp_elm_id_</name>
        <initializer>= balance::no_element_id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="953" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="953" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1adbf8f335a30a005a3d5923a96f6f40c9" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">balance::ElementIDType</ref></type>
        <definition>balance::ElementIDType vt::vrt::collection::CollectionManager::cur_context_perm_elm_id_</definition>
        <argsstring></argsstring>
        <name>cur_context_perm_elm_id_</name>
        <initializer>= balance::no_element_id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="954" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="954" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ad6c6c75f1f54ae5470847311256ae8c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::CollectionManager::CollectionManager</definition>
        <argsstring>()</argsstring>
        <name>CollectionManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="143" column="1" bodyfile="src/vt/vrt/collection/manager.cc" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aea0c10371b37041bcc855eef0c767b85" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>vt::vrt::collection::CollectionManager::~CollectionManager</definition>
        <argsstring>()</argsstring>
        <name>~CollectionManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="145" column="1" bodyfile="src/vt/vrt/collection/manager.cc" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afafcdbf36f42835471218b654252031c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::finalize</definition>
        <argsstring>() override</argsstring>
        <name>finalize</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_1a098e362de01af6054e5491fba671a959">finalize</reimplements>
        <briefdescription>
<para>Empty default overridden finalize method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="147" column="1" bodyfile="src/vt/vrt/collection/manager.cc" bodystart="56" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af7cc4c83ae2792595eee99a3206ed633" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string vt::vrt::collection::CollectionManager::name</definition>
        <argsstring>() override</argsstring>
        <name>name</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_base_component_1a7701485f3539f78d42e6bad47fc7eb78">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="149" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7d98e5aaa63d70cbabfbcf78a6cf503f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::cleanupAll</definition>
        <argsstring>()</argsstring>
        <name>cleanupAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="152" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="106" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a71865b0508bab58b6d44b44416f11983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::destroyCollections</definition>
        <argsstring>()</argsstring>
        <name>destroyCollections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="155" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a07aebc3fa25e2fe901eedc5db722655f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT, typename ColT::IndexType &gt;</type>
        <definition>CollectionManager::CollectionProxyWrapType&lt; ColT, typename ColT::IndexType &gt; vt::vrt::collection::CollectionManager::constructMap</definition>
        <argsstring>(typename ColT::IndexType range, HandlerType const &amp;map, Args &amp;&amp;... args)</argsstring>
        <name>constructMap</name>
        <param>
          <type>typename ColT::IndexType</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="165" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2150" bodyend="2196"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a4de84e9efd7a3948e3c20be549441cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1mapping_1ad7c0812428b339edd904a865e0080ecd" kindref="member">mapping::ActiveMapTypedFnType</ref>&lt; typename ColT::IndexType &gt;</type>
            <declname>fn</declname>
            <defname>fn</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT, typename ColT::IndexType &gt;</type>
        <definition>CollectionManager::CollectionProxyWrapType&lt; ColT, typename ColT::IndexType &gt; vt::vrt::collection::CollectionManager::construct</definition>
        <argsstring>(typename ColT::IndexType range, Args &amp;&amp;... args)</argsstring>
        <name>construct</name>
        <param>
          <type>typename ColT::IndexType</type>
          <declname>range</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="181" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2140" bodyend="2146"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9049432725068d7ec7f664f7a8759a69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT, typename ColT::IndexType &gt;</type>
        <definition>CollectionManager::CollectionProxyWrapType&lt; ColT, typename ColT::IndexType &gt; vt::vrt::collection::CollectionManager::construct</definition>
        <argsstring>(typename ColT::IndexType range, Args &amp;&amp;... args)</argsstring>
        <name>construct</name>
        <param>
          <type>typename ColT::IndexType</type>
          <declname>range</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="192" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2128" bodyend="2133"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a619d6e576f0d108e442b16ca4f68f1f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1mapping_1ad7c0812428b339edd904a865e0080ecd" kindref="member">mapping::ActiveMapTypedFnType</ref>&lt; typename ColT::IndexType &gt;</type>
            <declname>fn</declname>
            <defname>fn</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt;</type>
        <definition>CollectionProxyWrapType&lt;ColT&gt; vt::vrt::collection::CollectionManager::constructCollective</definition>
        <argsstring>(typename ColT::IndexType range, DistribConstructFn&lt; ColT &gt; cons_fn, TagType const &amp;tag=no_tag)</argsstring>
        <name>constructCollective</name>
        <param>
          <type>typename ColT::IndexType</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7503830bc133013d542856fa39834dcc" kindref="member">DistribConstructFn</ref>&lt; ColT &gt;</type>
          <declname>cons_fn</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ad68e773af13eaa96e58910b14264e8cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt;</type>
        <definition>CollectionManager::CollectionProxyWrapType&lt; ColT &gt; vt::vrt::collection::CollectionManager::constructCollective</definition>
        <argsstring>(typename ColT::IndexType range, DistribConstructFn&lt; ColT &gt; cons_fn, TagType const &amp;tag=no_tag)</argsstring>
        <name>constructCollective</name>
        <param>
          <type>typename ColT::IndexType</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7503830bc133013d542856fa39834dcc" kindref="member">DistribConstructFn</ref>&lt; ColT &gt;</type>
          <declname>cons_fn</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="212" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1672" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae4f96ce01b13d68e5f3a8be7bea7e439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt;</type>
        <definition>CollectionManager::CollectionProxyWrapType&lt; ColT &gt; vt::vrt::collection::CollectionManager::constructCollectiveMap</definition>
        <argsstring>(typename ColT::IndexType range, DistribConstructFn&lt; ColT &gt; cons_fn, HandlerType const &amp;map_han, TagType const &amp;tag)</argsstring>
        <name>constructCollectiveMap</name>
        <param>
          <type>typename ColT::IndexType</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7503830bc133013d542856fa39834dcc" kindref="member">DistribConstructFn</ref>&lt; ColT &gt;</type>
          <declname>cons_fn</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>map_han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="218" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1697" bodyend="1842"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0e15cc861c0d979d8977b226efd7c271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_insert_token" kindref="compound">InsertToken</ref>&lt; ColT &gt;</type>
        <definition>InsertToken&lt; ColT &gt; vt::vrt::collection::CollectionManager::constructInsert</definition>
        <argsstring>(typename ColT::IndexType range, TagType const &amp;tag=no_tag)</argsstring>
        <name>constructInsert</name>
        <param>
          <type>typename ColT::IndexType</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="239" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1961" bodyend="1966"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a51e938c8c05bf9a39ab69532ea12336d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1mapping_1ad7c0812428b339edd904a865e0080ecd" kindref="member">mapping::ActiveMapTypedFnType</ref>&lt; typename ColT::IndexType &gt;</type>
            <declname>fn</declname>
            <defname>fn</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_insert_token" kindref="compound">InsertToken</ref>&lt; ColT &gt;</type>
        <definition>InsertToken&lt; ColT &gt; vt::vrt::collection::CollectionManager::constructInsert</definition>
        <argsstring>(typename ColT::IndexType range, TagType const &amp;tag=no_tag)</argsstring>
        <name>constructInsert</name>
        <param>
          <type>typename ColT::IndexType</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="246" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1952" bodyend="1958"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a5fdc620b8c03bf7748802e35cff1afe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_insert_token" kindref="compound">InsertToken</ref>&lt; ColT &gt;</type>
        <definition>InsertToken&lt; ColT &gt; vt::vrt::collection::CollectionManager::constructInsertMap</definition>
        <argsstring>(typename ColT::IndexType range, HandlerType const &amp;map_han, TagType const &amp;tag)</argsstring>
        <name>constructInsertMap</name>
        <param>
          <type>typename ColT::IndexType</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>map_han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="251" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1969" bodyend="1998"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9275a4f6a7c33389813ba7fe4cc75d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt;</type>
        <definition>CollectionManager::CollectionProxyWrapType&lt; ColT &gt; vt::vrt::collection::CollectionManager::finishedInsert</definition>
        <argsstring>(InsertToken&lt; ColT &gt; &amp;&amp;token)</argsstring>
        <name>finishedInsert</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_insert_token" kindref="compound">InsertToken</ref>&lt; ColT &gt; &amp;&amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="256" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2002" bodyend="2019"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1f18abc7b511cce4d07ba011c91d21df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
        <definition>VirtualProxyType vt::vrt::collection::CollectionManager::makeDistProxy</definition>
        <argsstring>(TagType const &amp;tag=no_tag)</argsstring>
        <name>makeDistProxy</name>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="277" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1845" bodyend="1883"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a26df5d55e8992f2d2a2752f61cc26d23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
            <defval>typename MsgT::CollectionType</defval>
          </param>
          <param>
            <type>typename IdxT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::CollectionManager::sendMsgUntypedHandler</definition>
        <argsstring>(VirtualElmProxyType&lt; ColT &gt; const &amp;proxy, MsgT *msg, HandlerType const &amp;handler, bool const member, bool imm_context=true)</argsstring>
        <name>sendMsgUntypedHandler</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>member</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>imm_context</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="308" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1422" bodyend="1565"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a416015d4b3a1bfe6dd7088b48e1f48f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae376deeefd4f89a0b1c93849977715d9" kindref="member">IsNotColMsgType</ref>&lt; MsgT &gt;</type>
        <definition>CollectionManager::IsNotColMsgType&lt; MsgT &gt; vt::vrt::collection::CollectionManager::sendMsgWithHan</definition>
        <argsstring>(VirtualElmProxyType&lt; ColT &gt; const &amp;proxy, MsgT *msg, HandlerType const &amp;handler, bool const member)</argsstring>
        <name>sendMsgWithHan</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="315" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1310" bodyend="1315"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7be0a9b42876d4eb28b26eccb37351a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a21c21612c806016788057aeab142af20" kindref="member">IsColMsgType</ref>&lt; MsgT &gt;</type>
        <definition>CollectionManager::IsColMsgType&lt; MsgT &gt; vt::vrt::collection::CollectionManager::sendMsgWithHan</definition>
        <argsstring>(VirtualElmProxyType&lt; ColT &gt; const &amp;proxy, MsgT *msg, HandlerType const &amp;handler, bool const member)</argsstring>
        <name>sendMsgWithHan</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="321" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1319" bodyend="1325"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9b58618d5d3eec7ac198b7c465288599" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::CollectionManager::sendNormalMsg</definition>
        <argsstring>(VirtualElmProxyType&lt; ColT &gt; const &amp;proxy, MsgT *msg, HandlerType const &amp;handler, bool const member)</argsstring>
        <name>sendNormalMsg</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="327" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1328" bodyend="1336"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3165b258fab15c35985b3f9b8ef0dbe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, typename MsgT::CollectionType &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::CollectionManager::sendMsg</definition>
        <argsstring>(VirtualElmProxyType&lt; typename MsgT::CollectionType &gt; const &amp;proxy, MsgT *msg)</argsstring>
        <name>sendMsg</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; typename MsgT::CollectionType &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="335" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1341" bodyend="1346"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3165b258fab15c35985b3f9b8ef0dbe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, typename MsgT::CollectionType &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::CollectionManager::sendMsg</definition>
        <argsstring>(VirtualElmProxyType&lt; typename MsgT::CollectionType &gt; const &amp;proxy, MsgT *msg)</argsstring>
        <name>sendMsg</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; typename MsgT::CollectionType &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a55777b57bfad6c9d87d946ed773a391d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a21c21612c806016788057aeab142af20" kindref="member">IsColMsgType</ref>&lt; MsgT &gt;</type>
        <definition>CollectionManager::IsColMsgType&lt; MsgT &gt; vt::vrt::collection::CollectionManager::sendMsg</definition>
        <argsstring>(VirtualElmProxyType&lt; ColT &gt; const &amp;proxy, MsgT *msg)</argsstring>
        <name>sendMsg</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="348" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1361" bodyend="1365"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a4f87f7f738cde8d48c9c18d16cc06166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae376deeefd4f89a0b1c93849977715d9" kindref="member">IsNotColMsgType</ref>&lt; MsgT &gt;</type>
        <definition>CollectionManager::IsNotColMsgType&lt; MsgT &gt; vt::vrt::collection::CollectionManager::sendMsg</definition>
        <argsstring>(VirtualElmProxyType&lt; ColT &gt; const &amp;proxy, MsgT *msg)</argsstring>
        <name>sendMsg</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="353" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1369" bodyend="1374"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3ea2d130487c02b8dbda05b7befda88d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a21c21612c806016788057aeab142af20" kindref="member">IsColMsgType</ref>&lt; MsgT &gt;</type>
        <definition>IsColMsgType&lt;MsgT&gt; vt::vrt::collection::CollectionManager::sendMsg</definition>
        <argsstring>(VirtualElmProxyType&lt; ColT &gt; const &amp;proxy, MsgT *msg)</argsstring>
        <name>sendMsg</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a229f96a5075562ee92743d69fc285254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae376deeefd4f89a0b1c93849977715d9" kindref="member">IsNotColMsgType</ref>&lt; MsgT &gt;</type>
        <definition>IsNotColMsgType&lt;MsgT&gt; vt::vrt::collection::CollectionManager::sendMsg</definition>
        <argsstring>(VirtualElmProxyType&lt; ColT &gt; const &amp;proxy, MsgT *msg)</argsstring>
        <name>sendMsg</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="371" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afc14691c6992cc5d7e51118b1386b67c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::CollectionManager::sendMsgImpl</definition>
        <argsstring>(VirtualElmProxyType&lt; ColT &gt; const &amp;proxy, MsgT *msg)</argsstring>
        <name>sendMsgImpl</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="376" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1402" bodyend="1407"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afc14691c6992cc5d7e51118b1386b67c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, typename MsgT::CollectionType &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::CollectionManager::sendMsgImpl</definition>
        <argsstring>(VirtualElmProxyType&lt; ColT &gt; const &amp;proxy, MsgT *msg)</argsstring>
        <name>sendMsgImpl</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="385" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a73e0a7bd12d524cb1d723fb1dc13ffe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::reduceMsg</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; const &amp;proxy, MsgT *const msg, ReduceStamp stamp=ReduceStamp{}, NodeType root_node=uninitialized_destination)</argsstring>
        <name>reduceMsg</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *const</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae8aac19e0ae07e9225142e5880eac830" kindref="member">ReduceStamp</ref></type>
          <declname>stamp</declname>
          <defval><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae8aac19e0ae07e9225142e5880eac830" kindref="member">ReduceStamp</ref>{}</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>root_node</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="413" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1260" bodyend="1265"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a6a8a316325bb35ed2a88a4c2491f2e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::reduceMsg</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; const &amp;proxy, MsgT *const msg, ReduceStamp stamp, typename ColT::IndexType const &amp;idx)</argsstring>
        <name>reduceMsg</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *const</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae8aac19e0ae07e9225142e5880eac830" kindref="member">ReduceStamp</ref></type>
          <declname>stamp</declname>
        </param>
        <param>
          <type>typename ColT::IndexType const &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="420" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1268" bodyend="1273"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a85d90217d51ccc12021acd6d6f6da4c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::reduceMsgExpr</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; const &amp;proxy, MsgT *const msg, ReduceIdxFuncType&lt; typename ColT::IndexType &gt; expr_fn, ReduceStamp stamp=ReduceStamp{}, NodeType root_node=uninitialized_destination)</argsstring>
        <name>reduceMsgExpr</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *const</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a47a3227ae0195c15187e8dc8762f66c4" kindref="member">ReduceIdxFuncType</ref>&lt; typename ColT::IndexType &gt;</type>
          <declname>expr_fn</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae8aac19e0ae07e9225142e5880eac830" kindref="member">ReduceStamp</ref></type>
          <declname>stamp</declname>
          <defval><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae8aac19e0ae07e9225142e5880eac830" kindref="member">ReduceStamp</ref>{}</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>root_node</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="426" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1146" bodyend="1257"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a87722c8684a18b89d7c4854fe4f60ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::reduceMsgExpr</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; const &amp;proxy, MsgT *const msg, ReduceIdxFuncType&lt; typename ColT::IndexType &gt; expr_fn, ReduceStamp stamp, typename ColT::IndexType const &amp;idx)</argsstring>
        <name>reduceMsgExpr</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *const</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a47a3227ae0195c15187e8dc8762f66c4" kindref="member">ReduceIdxFuncType</ref>&lt; typename ColT::IndexType &gt;</type>
          <declname>expr_fn</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae8aac19e0ae07e9225142e5880eac830" kindref="member">ReduceStamp</ref></type>
          <declname>stamp</declname>
        </param>
        <param>
          <type>typename ColT::IndexType const &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="434" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1276" bodyend="1306"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aa4f27486773ea5bec481099223ab12d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae376deeefd4f89a0b1c93849977715d9" kindref="member">IsNotColMsgType</ref>&lt; MsgT &gt;</type>
        <definition>CollectionManager::IsNotColMsgType&lt; MsgT &gt; vt::vrt::collection::CollectionManager::broadcastMsgWithHan</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; const &amp;proxy, MsgT *msg, HandlerType const &amp;handler, bool const member, bool instrument=true)</argsstring>
        <name>broadcastMsgWithHan</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>member</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>instrument</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="444" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="989" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a737913f12b46ddaacf64a699c56c1787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a21c21612c806016788057aeab142af20" kindref="member">IsColMsgType</ref>&lt; MsgT &gt;</type>
        <definition>CollectionManager::IsColMsgType&lt; MsgT &gt; vt::vrt::collection::CollectionManager::broadcastMsgWithHan</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; const &amp;proxy, MsgT *msg, HandlerType const &amp;handler, bool const member, bool instrument=true)</argsstring>
        <name>broadcastMsgWithHan</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>member</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>instrument</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="451" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="979" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac5ebb9504dc55031027d8b0fbb96fe7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::CollectionManager::broadcastNormalMsg</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; const &amp;proxy, MsgT *msg, HandlerType const &amp;handler, bool const member, bool instrument=true)</argsstring>
        <name>broadcastNormalMsg</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>member</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>instrument</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="458" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="997" bodyend="1006"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a493c51ab40a4040d3a8671a02d2ae741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IdxT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::CollectionManager::broadcastMsgUntypedHandler</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT, IdxT &gt; const &amp;proxy, MsgT *msg, HandlerType const &amp;handler, bool const member, bool instrument)</argsstring>
        <name>broadcastMsgUntypedHandler</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT, IdxT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>member</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>instrument</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="465" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1009" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9cadcebd1d7c26512091f9624a23a02c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, typename MsgT::CollectionType &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::CollectionManager::broadcastMsg</definition>
        <argsstring>(CollectionProxyWrapType&lt; typename MsgT::CollectionType &gt; const &amp;proxy, MsgT *msg, bool instrument=true)</argsstring>
        <name>broadcastMsg</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; typename MsgT::CollectionType &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>instrument</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="476" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="891" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9cadcebd1d7c26512091f9624a23a02c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, typename MsgT::CollectionType &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::CollectionManager::broadcastMsg</definition>
        <argsstring>(CollectionProxyWrapType&lt; typename MsgT::CollectionType &gt; const &amp;proxy, MsgT *msg, bool instrument=true)</argsstring>
        <name>broadcastMsg</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; typename MsgT::CollectionType &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>instrument</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="485" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a2ea2ea93c25a438f0b9b6af390ef0881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a21c21612c806016788057aeab142af20" kindref="member">IsColMsgType</ref>&lt; MsgT &gt;</type>
        <definition>CollectionManager::IsColMsgType&lt; MsgT &gt; vt::vrt::collection::CollectionManager::broadcastMsg</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; const &amp;proxy, MsgT *msg, bool instrument=true)</argsstring>
        <name>broadcastMsg</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>instrument</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="491" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="913" bodyend="918"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0aa73c7acf95f668330d9c31ce12b581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae376deeefd4f89a0b1c93849977715d9" kindref="member">IsNotColMsgType</ref>&lt; MsgT &gt;</type>
        <definition>CollectionManager::IsNotColMsgType&lt; MsgT &gt; vt::vrt::collection::CollectionManager::broadcastMsg</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; const &amp;proxy, MsgT *msg, bool instrument=true)</argsstring>
        <name>broadcastMsg</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>instrument</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="497" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="922" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a5ec1684e67f1e5aec6b94cdcf17e5777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a21c21612c806016788057aeab142af20" kindref="member">IsColMsgType</ref>&lt; MsgT &gt;</type>
        <definition>IsColMsgType&lt;MsgT&gt; vt::vrt::collection::CollectionManager::broadcastMsg</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; const &amp;proxy, MsgT *msg, bool instrument=true)</argsstring>
        <name>broadcastMsg</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>instrument</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="507" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a42cfab20eec557ba82f70d90afa3e7a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae376deeefd4f89a0b1c93849977715d9" kindref="member">IsNotColMsgType</ref>&lt; MsgT &gt;</type>
        <definition>IsNotColMsgType&lt;MsgT&gt; vt::vrt::collection::CollectionManager::broadcastMsg</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; const &amp;proxy, MsgT *msg, bool instrument=true)</argsstring>
        <name>broadcastMsg</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>instrument</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="517" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac7a9c72784d76ddf0346926bbb147e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::CollectionManager::broadcastMsgImpl</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; const &amp;proxy, MsgT *msg, bool instrument=true)</argsstring>
        <name>broadcastMsgImpl</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>instrument</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="523" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="960" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac7a9c72784d76ddf0346926bbb147e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::CollectionManager::broadcastMsgImpl</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; const &amp;proxy, MsgT *msg, bool instrument=true)</argsstring>
        <name>broadcastMsgImpl</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>instrument</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="533" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a53567bdf285983b92dd4094721f8a4fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::CollectionManager::broadcastFromRoot</definition>
        <argsstring>(MsgT *msg)</argsstring>
        <name>broadcastFromRoot</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="539" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="832" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ab672ad6c3bc9fdc5a9577a9ae0677d1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0cfe02a0426e95ec9daa2ef7374e07c7" kindref="member">DispatchHandlerType</ref></type>
        <definition>CollectionManager::DispatchHandlerType vt::vrt::collection::CollectionManager::getDispatchHandler</definition>
        <argsstring>()</argsstring>
        <name>getDispatchHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="546" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3251" bodyend="3254"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af183a018e0d2d8b3ed024244d8f83f45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1aa3b9731ae16d60fac43d68840f3606a5" kindref="member">DispatchBasePtrType</ref></type>
        <definition>DispatchBasePtrType vt::vrt::collection::CollectionManager::getDispatcher</definition>
        <argsstring>(DispatchHandlerType const &amp;han)</argsstring>
        <name>getDispatcher</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0cfe02a0426e95ec9daa2ef7374e07c7" kindref="member">DispatchHandlerType</ref> const &amp;</type>
          <declname>han</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="548" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3258" bodyend="3260"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a93b0cf22a65db97cd5816c01191b9d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t vt::vrt::collection::CollectionManager::groupElementCount</definition>
        <argsstring>(VirtualProxyType const &amp;proxy)</argsstring>
        <name>groupElementCount</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="597" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="269" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a05de48c4386d84532b19a96b0cefc172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref></type>
        <definition>GroupType vt::vrt::collection::CollectionManager::createGroupCollection</definition>
        <argsstring>(VirtualProxyType const &amp;proxy, bool const in_group)</argsstring>
        <name>createGroupCollection</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>in_group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="600" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="283" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afc919bd549505ed40c3e1a41623d569a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::vrt::collection::CollectionManager::insertCollectionElement</definition>
        <argsstring>(VirtualPtrType&lt; ColT, IndexT &gt; vc, IndexT const &amp;idx, IndexT const &amp;max_idx, HandlerType const &amp;map_han, VirtualProxyType const &amp;proxy, bool const is_static, NodeType const &amp;home_node, bool const &amp;is_migrated_in=false, NodeType const &amp;migrated_from=uninitialized_destination)</argsstring>
        <name>insertCollectionElement</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1da9015e52d6ecca955f57b59aab0b82" kindref="member">VirtualPtrType</ref>&lt; ColT, IndexT &gt;</type>
          <declname>vc</declname>
        </param>
        <param>
          <type>IndexT const &amp;</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>IndexT const &amp;</type>
          <declname>max_idx</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>map_han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>is_static</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>home_node</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_migrated_in</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>migrated_from</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="625" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1568" bodyend="1663"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aa9d5a1889d871bce9c49552847e50386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::nextPhase</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT, typename ColT::IndexType &gt; const &amp;proxy, PhaseType const &amp;cur_phase, ActionFinishedLBType continuation=nullptr)</argsstring>
        <name>nextPhase</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT, typename ColT::IndexType &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref> const &amp;</type>
          <declname>cur_phase</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a2649daab7b437e1e2bdb5f2eefff29b6" kindref="member">ActionFinishedLBType</ref></type>
          <declname>continuation</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="645" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3163" bodyend="3216"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aa3fe8c93775fd9c4878968112503a428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::startPhaseRooted</definition>
        <argsstring>(ActionFinishedLBType fn, PhaseType lb_phase=no_lb_phase)</argsstring>
        <name>startPhaseRooted</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a2649daab7b437e1e2bdb5f2eefff29b6" kindref="member">ActionFinishedLBType</ref></type>
          <declname>fn</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>lb_phase</declname>
          <defval>no_lb_phase</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="656" column="1" bodyfile="src/vt/vrt/collection/manager.cc" bodystart="82" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af7522c6048b723201d966094adfefa94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::startPhaseCollective</definition>
        <argsstring>(ActionFinishedLBType fn, PhaseType lb_phase=no_lb_phase)</argsstring>
        <name>startPhaseCollective</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a2649daab7b437e1e2bdb5f2eefff29b6" kindref="member">ActionFinishedLBType</ref></type>
          <declname>fn</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>lb_phase</declname>
          <defval>no_lb_phase</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="666" column="1" bodyfile="src/vt/vrt/collection/manager.cc" bodystart="96" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a009a33f449e14d32d73aae33224298ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::elmReadyLB</definition>
        <argsstring>(VirtualElmProxyType&lt; ColT &gt; const &amp;proxy, PhaseType phase, bool do_sync, ActionFinishedLBType continuation)</argsstring>
        <name>elmReadyLB</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_sync</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a2649daab7b437e1e2bdb5f2eefff29b6" kindref="member">ActionFinishedLBType</ref></type>
          <declname>continuation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="676" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3069" bodyend="3160"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae074993a281f67e9d661481d9aee886e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::elmReadyLB</definition>
        <argsstring>(VirtualElmProxyType&lt; ColT &gt; const &amp;proxy, PhaseType phase, MsgT *msg, bool do_sync)</argsstring>
        <name>elmReadyLB</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_sync</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="684" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3023" bodyend="3066"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aa80bf07ee33e5e75de987ac82b79ae18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::elmFinishedLB</definition>
        <argsstring>(VirtualElmProxyType&lt; ColT &gt; const &amp;proxy, PhaseType phase)</argsstring>
        <name>elmFinishedLB</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a620a5c8c59d13e513f690c74b4af516f" kindref="member">VirtualElmProxyType</ref>&lt; ColT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="690" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3007" bodyend="3018"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a5b443b26d693a78b22234264fecf6832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t vt::vrt::collection::CollectionManager::numCollections</definition>
        <argsstring>()</argsstring>
        <name>numCollections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="696" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2981" bodyend="2983"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3fdd38adcd76281ada50f867e82817c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t vt::vrt::collection::CollectionManager::numReadyCollections</definition>
        <argsstring>()</argsstring>
        <name>numReadyCollections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="699" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2986" bodyend="2988"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae47451b1fb1fd640929995d964e052a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::vrt::collection::CollectionManager::readyNextPhase</definition>
        <argsstring>()</argsstring>
        <name>readyNextPhase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="702" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2996" bodyend="2999"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af93d07828954a649201ef3fe463bf530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::resetReadyPhase</definition>
        <argsstring>()</argsstring>
        <name>resetReadyPhase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="705" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2991" bodyend="2993"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a98b0c3c96cea99ac8d4310c1140f8880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::releaseLBContinuation</definition>
        <argsstring>()</argsstring>
        <name>releaseLBContinuation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="708" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3229" bodyend="3247"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1adb1aa79d2e81bb571279f4b57ece0e8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::makeCollectionReady</definition>
        <argsstring>(VirtualProxyType const coll)</argsstring>
        <name>makeCollectionReady</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const</type>
          <declname>coll</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="711" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3002" bodyend="3004"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a62ff67b1dc813664812a20e430a3f09b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::checkReduceNoElements</definition>
        <argsstring>()</argsstring>
        <name>checkReduceNoElements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="714" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3219" bodyend="3221"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae6e458293d04d8b29697fa0584c84c67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::destroy</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT, IndexT &gt; const &amp;proxy)</argsstring>
        <name>destroy</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT, IndexT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="728" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2882" bodyend="2891"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae333912da83d9beac8b710ec98e53094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::vrt::collection::CollectionManager::getMappedNode</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT, IndexT &gt; const &amp;proxy, typename ColT::IndexType const &amp;idx)</argsstring>
        <name>getMappedNode</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT, IndexT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>typename ColT::IndexType const &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="750" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2517" bodyend="2546"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a195df30bb149ade0000c5c5118b57d87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1ad221ad8aea9e586689b4335f5bcd9804" kindref="member">MigrateStatus</ref></type>
        <definition>MigrateStatus vt::vrt::collection::CollectionManager::migrate</definition>
        <argsstring>(VrtElmProxy&lt; ColT, typename ColT::IndexType &gt;, NodeType const &amp;dest)</argsstring>
        <name>migrate</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_vrt_elm_proxy" kindref="compound">VrtElmProxy</ref>&lt; ColT, typename ColT::IndexType &gt;</type>
          <defname>proxy</defname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="757" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2697" bodyend="2715"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af7c0033bd57a7dbb3e70888e7fb2e1a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::insert</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT, IndexT &gt; const &amp;proxy, IndexT idx, NodeType const &amp;node=uninitialized_destination)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT, IndexT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>IndexT</type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="765" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2576" bodyend="2690"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a09bd0e2b03bd5f638bdc44f7ffeef715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type>ColT *</type>
        <definition>ColT * vt::vrt::collection::CollectionManager::tryGetLocalPtr</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT, IndexT &gt; const &amp;proxy, IndexT idx)</argsstring>
        <name>tryGetLocalPtr</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT, IndexT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>IndexT</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="771" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2549" bodyend="2573"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aba521bf30580ffe5a815b5e50bfbcbfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::actInsert</definition>
        <argsstring>(VirtualProxyType const &amp;proxy)</argsstring>
        <name>actInsert</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="788" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2421" bodyend="2436"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1d93ed0d843deb241d788c305033b9e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::setupNextInsertTrigger</definition>
        <argsstring>(VirtualProxyType const &amp;proxy, EpochType const &amp;insert_epoch)</argsstring>
        <name>setupNextInsertTrigger</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>insert_epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="791" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2285" bodyend="2320"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a54edc9079585574858ecf512761f8efc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::finishedInserting</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT, IndexT &gt; const &amp;proxy, ActionType insert_action=nullptr)</argsstring>
        <name>finishedInserting</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT, IndexT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>insert_action</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="796" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2466" bodyend="2514"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3ef00b90a3a2d066a7f83b9c32b301d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::addCleanupFn</definition>
        <argsstring>(VirtualProxyType proxy)</argsstring>
        <name>addCleanupFn</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="802" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="145" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a790738e12739058e7a09b4a3246169e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int vt::vrt::collection::CollectionManager::registerElementListener</definition>
        <argsstring>(VirtualProxyType proxy, listener::ListenFnType&lt; IndexT &gt; fn)</argsstring>
        <name>registerElementListener</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1listener_1a62d04c44a3c187eae66bdba2090b4505" kindref="member">listener::ListenFnType</ref>&lt; IndexT &gt;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
<para>Register listener function for a given collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the proxy of the collection </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fn</parametername>
</parameternamelist>
<parameterdescription>
<para>the listener function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="843" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3263" bodyend="3268"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aecfd5c34b6d0b6781d3bb089ba1ae547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::unregisterElementListener</definition>
        <argsstring>(VirtualProxyType proxy, int element)</argsstring>
        <name>unregisterElementListener</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Unregister listener function for a given collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the proxy of the collection </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">element</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the registered listener function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="854" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3271" bodyend="3276"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9259954aca1df3a68ad1d0a730687612" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type>IndexT</type>
        <definition>IndexT vt::vrt::collection::CollectionManager::getRange</definition>
        <argsstring>(VirtualProxyType proxy)</argsstring>
        <name>getRange</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
<para>Get the range that a collection was constructed with. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the proxy of the collection</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the range of the collection </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="864" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3279" bodyend="3282"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae8d3db4274a1239fa0097dae11e93bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string vt::vrt::collection::CollectionManager::makeFilename</definition>
        <argsstring>(IndexT range, IndexT idx, std::string file_base, bool make_sub_dirs, int files_per_directory)</argsstring>
        <name>makeFilename</name>
        <param>
          <type>IndexT</type>
          <declname>range</declname>
        </param>
        <param>
          <type>IndexT</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>file_base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>make_sub_dirs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>files_per_directory</declname>
        </param>
        <briefdescription>
<para>Make the filename for checkpoint/restore. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">range</parametername>
</parameternamelist>
<parameterdescription>
<para>range for collection </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>index of element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file_base</parametername>
</parameternamelist>
<parameterdescription>
<para>base file name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">make_sub_dirs</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to make sub-directories for elements: useful when the number of collection elements are large </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">files_per_directory</parametername>
</parameternamelist>
<parameterdescription>
<para>number of files to output for each sub-dir</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>full path of a file for the element </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="879" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3306" bodyend="3336"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1abe41e7e9c9dec081a79b222b4c5dc199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string vt::vrt::collection::CollectionManager::makeMetaFilename</definition>
        <argsstring>(std::string file_base, bool make_sub_dirs)</argsstring>
        <name>makeMetaFilename</name>
        <param>
          <type>std::string</type>
          <declname>file_base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>make_sub_dirs</declname>
        </param>
        <briefdescription>
<para>Make the filename for meta-data related to checkpoint/restore. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_base</parametername>
</parameternamelist>
<parameterdescription>
<para>base file name</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>meta-data file name for the node </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="892" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3285" bodyend="3303"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af3771d408c2ef15e65b9ba8219aa830a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::checkpointToFile</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; proxy, std::string const &amp;file_base, bool make_sub_dirs=true, int files_per_directory=4)</argsstring>
        <name>checkpointToFile</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>file_base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>make_sub_dirs</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>int</type>
          <declname>files_per_directory</declname>
          <defval>4</defval>
        </param>
        <briefdescription>
<para>Checkpoint the collection (collective). Must wait for termination (consistent snapshot) of work on the collection before invoking. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the proxy of the collection </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file_base</parametername>
</parameternamelist>
<parameterdescription>
<para>the base file name of the files write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">make_sub_dirs</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to make sub-directories for elements: useful when the number of collection elements are large </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">files_per_directory</parametername>
</parameternamelist>
<parameterdescription>
<para>number of files to output for each sub-dir</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the range of the collection </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="907" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3339" bodyend="3373"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a315a74b9299f31ebc5e3e4becdd9f79e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt;</type>
        <definition>CollectionManager::CollectionProxyWrapType&lt; ColT &gt; vt::vrt::collection::CollectionManager::restoreFromFile</definition>
        <argsstring>(typename ColT::IndexType range, std::string const &amp;file_base)</argsstring>
        <name>restoreFromFile</name>
        <param>
          <type>typename ColT::IndexType</type>
          <declname>range</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>file_base</declname>
        </param>
        <briefdescription>
<para>Restore the collection (collective) from file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">range</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of the collection to restart </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file_base</parametername>
</parameternamelist>
<parameterdescription>
<para>the base file name for the files to read</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>proxy to the new collection </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="921" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3377" bodyend="3419"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9b376e8e7145bf3d0f6b268d7974f783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1mapping_1ad7c0812428b339edd904a865e0080ecd" kindref="member">mapping::ActiveMapTypedFnType</ref>&lt; typename ColT::IndexType &gt;</type>
            <declname>fn</declname>
            <defname>fn</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionManager::CollectionProxyWrapType</ref>&lt; ColT, typename ColT::IndexType &gt;</type>
        <definition>CollectionManager::CollectionProxyWrapType&lt;ColT, typename ColT::IndexType&gt; vt::vrt::collection::CollectionManager::constructCollective</definition>
        <argsstring>(typename ColT::IndexType range, DistribConstructFn&lt; ColT &gt; cons_fn, TagType const &amp;tag)</argsstring>
        <name>constructCollective</name>
        <param>
          <type>typename ColT::IndexType</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7503830bc133013d542856fa39834dcc" kindref="member">DistribConstructFn</ref>&lt; ColT &gt;</type>
          <declname>cons_fn</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.impl.h" line="1685" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1685" bodyend="1692"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a93eeb08585ad7a41c72e45ccd23be48c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::staticInsert</definition>
        <argsstring>(VirtualProxyType proxy, typename ColT::IndexType idx, Args &amp;&amp;... args)</argsstring>
        <name>staticInsert</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>typename ColT::IndexType</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="232" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="1889" bodyend="1947"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aba07682da41648437cacd485193063ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::bufferBroadcastMsg</definition>
        <argsstring>(VirtualProxyType const &amp;proxy, EpochType const &amp;epoch, MsgT *msg)</argsstring>
        <name>bufferBroadcastMsg</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="552" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="545" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0366f1427431dcd6fedd41dee9a3fcce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::clearBufferedBroadcastMsg</definition>
        <argsstring>(VirtualProxyType const &amp;proxy, EpochType const &amp;epoch)</argsstring>
        <name>clearBufferedBroadcastMsg</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="557" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="575" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a8c992f2c417d5d44b8b8a603d21920de" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_message" kindref="compound">CollectionMessage</ref>&lt; ColT &gt; *</type>
        <definition>CollectionMessage&lt; ColT &gt; * vt::vrt::collection::CollectionManager::getBufferedBroadcastMsg</definition>
        <argsstring>(VirtualProxyType const &amp;proxy, EpochType const &amp;epoch)</argsstring>
        <name>getBufferedBroadcastMsg</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="562" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="588" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac3fe0114969d91628d612eccc2166159" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_holder" kindref="compound">CollectionHolder</ref>&lt; ColT, IndexT &gt; *</type>
        <definition>CollectionHolder&lt; ColT, IndexT &gt; * vt::vrt::collection::CollectionManager::findColHolder</definition>
        <argsstring>(VirtualProxyType const &amp;proxy)</argsstring>
        <name>findColHolder</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="718" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2947" bodyend="2959"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a06ff4b51fe7e15c8c4b7768cf7a1ad03" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_holder" kindref="compound">Holder</ref>&lt; ColT, IndexT &gt; *</type>
        <definition>Holder&lt; ColT, IndexT &gt; * vt::vrt::collection::CollectionManager::findElmHolder</definition>
        <argsstring>(VirtualProxyType const &amp;proxy)</argsstring>
        <name>findElmHolder</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="721" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2962" bodyend="2971"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aa7f2e2fbbd73a3d7111904c0b31807e6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_holder" kindref="compound">Holder</ref>&lt; ColT, IndexT &gt; *</type>
        <definition>Holder&lt; ColT, IndexT &gt; * vt::vrt::collection::CollectionManager::findElmHolder</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT &gt; proxy)</argsstring>
        <name>findElmHolder</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT &gt;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="724" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2974" bodyend="2978"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a79d8ce89b21670fe0d482646aca4a2a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::incomingDestroy</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT, IndexT &gt; const &amp;proxy)</argsstring>
        <name>incomingDestroy</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT, IndexT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="732" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2894" bodyend="2905"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afac7551ce2ddeeff21631fa9e6987784" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::destroyMatching</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT, IndexT &gt; const &amp;proxy)</argsstring>
        <name>destroyMatching</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT, IndexT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="735" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2908" bodyend="2944"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7199e829343abd7700dcdcd0a02cd477" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::schedule</definition>
        <argsstring>(ActionType action)</argsstring>
        <name>schedule</name>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="746" column="1" bodyfile="src/vt/vrt/collection/manager.cc" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac59dd2227839839776c92ca0c23934e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::finishedInsertEpoch</definition>
        <argsstring>(CollectionProxyWrapType&lt; ColT, IndexT &gt; const &amp;proxy, EpochType const &amp;insert_epoch)</argsstring>
        <name>finishedInsertEpoch</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" kindref="member">CollectionProxyWrapType</ref>&lt; ColT, IndexT &gt; const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>insert_epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="806" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2323" bodyend="2410"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a480360a498a18520cbe2405ebbe7e9b6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1ad221ad8aea9e586689b4335f5bcd9804" kindref="member">MigrateStatus</ref></type>
        <definition>MigrateStatus vt::vrt::collection::CollectionManager::migrateOut</definition>
        <argsstring>(VirtualProxyType const &amp;proxy, IndexT const &amp;idx, NodeType const &amp;dest)</argsstring>
        <name>migrateOut</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>IndexT const &amp;</type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="824" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2718" bodyend="2829"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afb1aad3179facb178c032b6ae14d592a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1ad221ad8aea9e586689b4335f5bcd9804" kindref="member">MigrateStatus</ref></type>
        <definition>MigrateStatus vt::vrt::collection::CollectionManager::migrateIn</definition>
        <argsstring>(VirtualProxyType const &amp;proxy, IndexT const &amp;idx, NodeType const &amp;from, VirtualPtrType&lt; ColT, IndexT &gt; vrt_elm_ptr, IndexT const &amp;range, HandlerType const &amp;map_han)</argsstring>
        <name>migrateIn</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>IndexT const &amp;</type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1da9015e52d6ecca955f57b59aab0b82" kindref="member">VirtualPtrType</ref>&lt; ColT, IndexT &gt;</type>
          <declname>vrt_elm_ptr</declname>
        </param>
        <param>
          <type>IndexT const &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>map_han</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="829" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2832" bodyend="2879"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3b98d63294b7f4faf8a64bcb91df69d4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">balance::ElementIDType</ref></type>
        <definition>balance::ElementIDType vt::vrt::collection::CollectionManager::getCurrentContextTemp</definition>
        <argsstring>() const</argsstring>
        <name>getCurrentContextTemp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="935" column="1" bodyfile="src/vt/vrt/collection/manager.cc" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9dc40e7ddd4cd8d4fa0fb5e10381f73f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">balance::ElementIDType</ref></type>
        <definition>balance::ElementIDType vt::vrt::collection::CollectionManager::getCurrentContextPerm</definition>
        <argsstring>() const</argsstring>
        <name>getCurrentContextPerm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="936" column="1" bodyfile="src/vt/vrt/collection/manager.cc" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a4f278f2bc3e5304307098f6f7420b964" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::setCurrentContext</definition>
        <argsstring>(balance::ElementIDType elm_perm, balance::ElementIDType elm_temp)</argsstring>
        <name>setCurrentContext</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">balance::ElementIDType</ref></type>
          <declname>elm_perm</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">balance::ElementIDType</ref></type>
          <declname>elm_temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="937" column="1" bodyfile="src/vt/vrt/collection/manager.cc" bodystart="131" bodyend="136"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aa371f1cdd4eafa9f75b7eb40a6f151e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::vrt::collection::CollectionManager::getDefaultMap</definition>
        <argsstring>()</argsstring>
        <name>getDefaultMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="263" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2022" bodyend="2025"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae92ad81b99b380b0b87b85f7dbda767a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename ParamT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::vrt::collection::CollectionManager::getDefaultMapImpl</definition>
        <argsstring>(std::tuple&lt; Args... &gt;)</argsstring>
        <name>getDefaultMapImpl</name>
        <param>
          <type>std::tuple&lt; Args... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="267" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2028" bodyend="2033"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1220f88fee25f84133a271ff19762b62" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::insertMetaCollection</definition>
        <argsstring>(VirtualProxyType const &amp;proxy, Args &amp;&amp;... inner_holder_args)</argsstring>
        <name>insertMetaCollection</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>inner_holder_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="271" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2054" bodyend="2069"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ab82abba567a08d19a26618fe7c65452e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SysMsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::distConstruct</definition>
        <argsstring>(SysMsgT *msg)</argsstring>
        <name>distConstruct</name>
        <param>
          <type>SysMsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="281" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="153" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a5364a7039d323f3733b6ab1816cf61d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>IndexT *</type>
        <definition>IndexT * vt::vrt::collection::CollectionManager::queryIndexContext</definition>
        <argsstring>()</argsstring>
        <name>queryIndexContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="286" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2036" bodyend="2039"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a77d8832834659c44badf499c4770777b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
        <definition>VirtualProxyType vt::vrt::collection::CollectionManager::queryProxyContext</definition>
        <argsstring>()</argsstring>
        <name>queryProxyContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="288" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2042" bodyend="2045"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ad94808d98e429e50376a9d1b35de57ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::vrt::collection::CollectionManager::hasContext</definition>
        <argsstring>()</argsstring>
        <name>hasContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="290" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2048" bodyend="2051"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a387f6106adb3d0accd039ee4ff50a515" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::reduceConstruction</definition>
        <argsstring>(VirtualProxyType const &amp;proxy)</argsstring>
        <name>reduceConstruction</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="294" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2072" bodyend="2093"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3512b8e7d8bac218f28e7ffef611e5fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::groupConstruction</definition>
        <argsstring>(VirtualProxyType const &amp;proxy, bool immediate)</argsstring>
        <name>groupConstruction</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>immediate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="298" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2096" bodyend="2123"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a8335935e585268654043862f312d9fa0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename UserMsgT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1f91c97ed52237c3a3576dfbbe87c8f8" kindref="member">IsWrapType</ref>&lt; ColT, UserMsgT, MsgT &gt;</type>
        <definition>static IsWrapType&lt;ColT,UserMsgT,MsgT&gt; vt::vrt::collection::CollectionManager::collectionMsgDeliver</definition>
        <argsstring>(MsgT *msg, CollectionBase&lt; ColT, IndexT &gt; *col, HandlerType han, bool member, NodeType from)</argsstring>
        <name>collectionMsgDeliver</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_base" kindref="compound">CollectionBase</ref>&lt; ColT, IndexT &gt; *</type>
          <declname>col</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>han</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>member</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="390" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac92b9519a9c22103746e52375bc18b67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename UserMsgT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a18e3a17d9eb086c6c2f499242b7faa1e" kindref="member">IsNotWrapType</ref>&lt; ColT, UserMsgT, MsgT &gt;</type>
        <definition>static IsNotWrapType&lt;ColT,UserMsgT,MsgT&gt; vt::vrt::collection::CollectionManager::collectionMsgDeliver</definition>
        <argsstring>(MsgT *msg, CollectionBase&lt; ColT, IndexT &gt; *col, HandlerType han, bool member, NodeType from)</argsstring>
        <name>collectionMsgDeliver</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_base" kindref="compound">CollectionBase</ref>&lt; ColT, IndexT &gt; *</type>
          <declname>col</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>han</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>member</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9b2bfe1f74298f0e9b7fdc4888f73e3d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CoLT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::collectionMsgHandler</definition>
        <argsstring>(BaseMessage *msg)</argsstring>
        <name>collectionMsgHandler</name>
        <param>
          <type><ref refid="namespacevt_1ac34f95a5e2b8109b55bfba52b074443d" kindref="member">BaseMessage</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="401" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="820" bodyend="824"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7bb443544c8c4b94a7a10a0ec8126018" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::collectionMsgTypedHandler</definition>
        <argsstring>(MsgT *msg)</argsstring>
        <name>collectionMsgTypedHandler</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="404" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="686" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3d49cc2ae24c50443e890e9447d408a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::recordStats</definition>
        <argsstring>(ColT *col_ptr, MsgT *msg)</argsstring>
        <name>recordStats</name>
        <param>
          <type>ColT *</type>
          <declname>col_ptr</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="407" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="786" bodyend="816"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a4816815fd287f57cab4db958985c193c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename UserMsgT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1f91c97ed52237c3a3576dfbbe87c8f8" kindref="member">IsWrapType</ref>&lt; ColT, UserMsgT, MsgT &gt;</type>
        <definition>CollectionManager::IsWrapType&lt; ColT, UserMsgT, MsgT &gt; vt::vrt::collection::CollectionManager::collectionAutoMsgDeliver</definition>
        <argsstring>(MsgT *msg, CollectionBase&lt; ColT, IndexT &gt; *col, HandlerType han, bool member, NodeType from, trace::TraceEventIDType event)</argsstring>
        <name>collectionAutoMsgDeliver</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_base" kindref="compound">CollectionBase</ref>&lt; ColT, IndexT &gt; *</type>
          <declname>col</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>han</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>member</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">trace::TraceEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="568" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="350" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a14b3a40fcde230a6113d032b8175d15d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename UserMsgT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a18e3a17d9eb086c6c2f499242b7faa1e" kindref="member">IsNotWrapType</ref>&lt; ColT, UserMsgT, MsgT &gt;</type>
        <definition>CollectionManager::IsNotWrapType&lt; ColT, UserMsgT, MsgT &gt; vt::vrt::collection::CollectionManager::collectionAutoMsgDeliver</definition>
        <argsstring>(MsgT *msg, CollectionBase&lt; ColT, IndexT &gt; *col, HandlerType han, bool member, NodeType from, trace::TraceEventIDType event)</argsstring>
        <name>collectionAutoMsgDeliver</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_base" kindref="compound">CollectionBase</ref>&lt; ColT, IndexT &gt; *</type>
          <declname>col</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>han</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>member</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">trace::TraceEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="573" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="387" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a2a9fcbafc83d78d80c8d5f758e880b47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::collectionBcastHandler</definition>
        <argsstring>(MsgT *msg)</argsstring>
        <name>collectionBcastHandler</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="579" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="421" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9859d8346c9aac1fb0b65e6db82969db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::broadcastRootHandler</definition>
        <argsstring>(MsgT *msg)</argsstring>
        <name>broadcastRootHandler</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="581" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="827" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a904c8dd544474c39593c894b8ca174e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::collectionConstructHan</definition>
        <argsstring>(CollectionConsMsg *msg)</argsstring>
        <name>collectionConstructHan</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_cons_msg" kindref="compound">CollectionConsMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="583" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="645" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ad56b5d61a3f1a8286e21076a274dcf17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::collectionFinishedHan</definition>
        <argsstring>(CollectionConsMsg *msg)</argsstring>
        <name>collectionFinishedHan</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_cons_msg" kindref="compound">CollectionConsMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="585" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="623" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1acf097bb149749c5e8e93d31b84d5a2a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::collectionGroupReduceHan</definition>
        <argsstring>(CollectionGroupMsg *msg)</argsstring>
        <name>collectionGroupReduceHan</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_group_msg" kindref="compound">CollectionGroupMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="587" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="670" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1abf80612ba1db9aadf590f837ae4ca7a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::collectionGroupFinishedHan</definition>
        <argsstring>(CollectionGroupMsg *msg)</argsstring>
        <name>collectionGroupFinishedHan</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_group_msg" kindref="compound">CollectionGroupMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="589" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="602" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a52ce99a3c227bfd77089725c3a173373" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
          <param>
            <type>typename Tuple</type>
          </param>
          <param>
            <type>size_t...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1da9015e52d6ecca955f57b59aab0b82" kindref="member">VirtualPtrType</ref>&lt; ColT, IndexT &gt;</type>
        <definition>CollectionManager::VirtualPtrType&lt; ColT, IndexT &gt; vt::vrt::collection::CollectionManager::runConstructor</definition>
        <argsstring>(VirtualElmCountType const &amp;elms, IndexT const &amp;idx, Tuple *tup, std::index_sequence&lt; I... &gt;)</argsstring>
        <name>runConstructor</name>
        <param>
          <type><ref refid="namespacevt_1ac115668758184050beff7a9281a2c490" kindref="member">VirtualElmCountType</ref> const &amp;</type>
          <declname>elms</declname>
        </param>
        <param>
          <type>IndexT const &amp;</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>Tuple *</type>
          <declname>tup</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; I... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="619" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="133" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3d09a3058dd6984aeff47c89b6d571b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::releaseLBPhase</definition>
        <argsstring>(CollectionPhaseMsg *msg)</argsstring>
        <name>releaseLBPhase</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_phase_msg" kindref="compound">CollectionPhaseMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="693" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="3224" bodyend="3226"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afae2bb212583b7a9c6d73722c66961ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::insertHandler</definition>
        <argsstring>(InsertMsg&lt; ColT, IndexT &gt; *msg)</argsstring>
        <name>insertHandler</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_insert_msg" kindref="compound">InsertMsg</ref>&lt; ColT, IndexT &gt; *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="762" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2215" bodyend="2224"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ad0d2174c1605c18dfdc028679f1505ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::doneInsertHandler</definition>
        <argsstring>(DoneInsertMsg&lt; ColT, IndexT &gt; *msg)</argsstring>
        <name>doneInsertHandler</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_done_insert_msg" kindref="compound">DoneInsertMsg</ref>&lt; ColT, IndexT &gt; *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="776" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2439" bodyend="2463"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0c2b3a0d98264432181392ff178d5782" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::actInsertHandler</definition>
        <argsstring>(ActInsertMsg&lt; ColT, IndexT &gt; *msg)</argsstring>
        <name>actInsertHandler</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_act_insert_msg" kindref="compound">ActInsertMsg</ref>&lt; ColT, IndexT &gt; *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="779" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2413" bodyend="2418"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afe9a779bc2dd8c639cf0dea5d910ec4b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::updateInsertEpochHandler</definition>
        <argsstring>(UpdateInsertMsg&lt; ColT, IndexT &gt; *msg)</argsstring>
        <name>updateInsertEpochHandler</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_update_insert_msg" kindref="compound">UpdateInsertMsg</ref>&lt; ColT, IndexT &gt; *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="782" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2227" bodyend="2263"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1e3aca203f1197782ec543da1d16b115" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::finishedUpdateHan</definition>
        <argsstring>(FinishedUpdateMsg *msg)</argsstring>
        <name>finishedUpdateHan</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_finished_update_msg" kindref="compound">FinishedUpdateMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="785" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2266" bodyend="2282"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a13988c17d12744b3229d380ccef5ec07" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
        <definition>VirtualProxyType vt::vrt::collection::CollectionManager::makeNewCollectionProxy</definition>
        <argsstring>()</argsstring>
        <name>makeNewCollectionProxy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="738" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2205" bodyend="2208"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a71a055aa5cee6b18891ed946e03e4883" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionManager::insertCollectionInfo</definition>
        <argsstring>(VirtualProxyType const &amp;proxy, HandlerType const &amp;map, EpochType const &amp;insert_epoch=no_epoch)</argsstring>
        <name>insertCollectionInfo</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>insert_epoch</declname>
          <defval>no_epoch</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="740" column="1" bodyfile="src/vt/vrt/collection/manager.impl.h" bodystart="2198" bodyend="2203"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af17cfce8795a4e39ef920599b1e568b9" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>static EpochType vt::vrt::collection::CollectionManager::getCurrentEpoch</definition>
        <argsstring>(MsgT *msg)</argsstring>
        <name>getCurrentEpoch</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/manager.h" line="927" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="766">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="767" relation="public-inheritance">
        </childnode>
        <childnode refid="768" relation="public-inheritance">
        </childnode>
        <childnode refid="769" relation="public-inheritance">
        </childnode>
      </node>
      <node id="765">
        <label>vt::runtime::component::Component&lt; CollectionManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="766" relation="public-inheritance">
        </childnode>
      </node>
      <node id="767">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
      </node>
      <node id="768">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="769">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="764">
        <label>vt::vrt::collection::CollectionManager</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_manager"/>
        <childnode refid="765" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="772">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="773" relation="public-inheritance">
        </childnode>
        <childnode refid="774" relation="public-inheritance">
        </childnode>
        <childnode refid="775" relation="public-inheritance">
        </childnode>
      </node>
      <node id="771">
        <label>vt::runtime::component::Component&lt; CollectionManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="772" relation="public-inheritance">
        </childnode>
      </node>
      <node id="773">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
      </node>
      <node id="774">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="775">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="770">
        <label>vt::vrt::collection::CollectionManager</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_manager"/>
        <childnode refid="771" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/manager.h" line="96" column="1" bodyfile="src/vt/vrt/collection/manager.h" bodystart="94" bodyend="955"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aba521bf30580ffe5a815b5e50bfbcbfe" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>actInsert</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0c2b3a0d98264432181392ff178d5782" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>actInsertHandler</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a536805fb5c58b557b66e7d7febe87567" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>ActionContainerType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a2649daab7b437e1e2bdb5f2eefff29b6" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>ActionFinishedLBType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a98a759caf144277dcd341cdbd5538f59" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>ActionProxyType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a51650235f0e53ae08381942eba822679" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>ActionVecType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3ef00b90a3a2d066a7f83b9c32b301d2" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>addCleanupFn</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a51ba1b25f5c2f1f7ac5834fdbc85fa5c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>ArgType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1abdce9596911e092af07635bdcc13acd1" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>balance::ElementStats</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af3a8c8a3c37301a98aa62f265858a3c0" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>BcastBufferType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a53567bdf285983b92dd4094721f8a4fd" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastFromRoot</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9cadcebd1d7c26512091f9624a23a02c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9cadcebd1d7c26512091f9624a23a02c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a2ea2ea93c25a438f0b9b6af390ef0881" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0aa73c7acf95f668330d9c31ce12b581" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a5ec1684e67f1e5aec6b94cdcf17e5777" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a42cfab20eec557ba82f70d90afa3e7a1" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac7a9c72784d76ddf0346926bbb147e8c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastMsgImpl</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac7a9c72784d76ddf0346926bbb147e8c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastMsgImpl</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a493c51ab40a4040d3a8671a02d2ae741" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastMsgUntypedHandler</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aa4f27486773ea5bec481099223ab12d1" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastMsgWithHan</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a737913f12b46ddaacf64a699c56c1787" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastMsgWithHan</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac5ebb9504dc55031027d8b0fbb96fe7e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastNormalMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9859d8346c9aac1fb0b65e6db82969db" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcastRootHandler</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a078bcfc68c63d4ac177243638f233a68" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>broadcasts_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aba07682da41648437cacd485193063ec" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>bufferBroadcastMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a305fd4b62e108ee3d06da97c792b536d" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>buffered_bcasts_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a20d91256606621c9fba6b0fdd6d17325" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>buffered_group_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af0e0d5358cd27a66332c72e3e782a6d0" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>buffered_sends_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7b32db0e6ccafa771ddd72f534a1cf8c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>BufferedActionType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af3771d408c2ef15e65b9ba8219aa830a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>checkpointToFile</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a62ff67b1dc813664812a20e430a3f09b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>checkReduceNoElements</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a5123370561fb8eb70ef7c4979e051706" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>cleanup_fns_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7d98e5aaa63d70cbabfbcf78a6cf503f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>cleanupAll</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a95c122e5b83bc51c306c9367b8e62c07" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>CleanupFnType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a735e54bc5a8646536d07750e2549a156" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>CleanupListFnType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0366f1427431dcd6fedd41dee9a3fcce" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>clearBufferedBroadcastMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a4816815fd287f57cab4db958985c193c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>collectionAutoMsgDeliver</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a14b3a40fcde230a6113d032b8175d15d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>collectionAutoMsgDeliver</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a2a9fcbafc83d78d80c8d5f758e880b47" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>collectionBcastHandler</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a904c8dd544474c39593c894b8ca174e0" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>collectionConstructHan</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aafd1972e5767dec26c8872f4aafa6864" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>CollectionElmAttorney</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a4089cdff4218109fffb5884f51244a6e" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>CollectionElmDestroyAttorney</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ad56b5d61a3f1a8286e21076a274dcf17" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>collectionFinishedHan</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1abf80612ba1db9aadf590f837ae4ca7a7" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>collectionGroupFinishedHan</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1acf097bb149749c5e8e93d31b84d5a2a3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>collectionGroupReduceHan</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ad6c6c75f1f54ae5470847311256ae8c3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>CollectionManager</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a8335935e585268654043862f312d9fa0" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>collectionMsgDeliver</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac92b9519a9c22103746e52375bc18b67" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>collectionMsgDeliver</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9b2bfe1f74298f0e9b7fdc4888f73e3d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>collectionMsgHandler</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7bb443544c8c4b94a7a10a0ec8126018" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>collectionMsgTypedHandler</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a56458ed7f9bb22b631b9b3a745f42f94" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>CollectionProxyWrapType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ad20a11229c9e9efe69135c207047bf85" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>CollectionType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ab954824329584814bb652ea810cd62e3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1a94c1d493860adff6ae69c5eb31bb3f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a7b791c5956fad1774db36bd457d6158a" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>component_id_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a4de84e9efd7a3948e3c20be549441cfd" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>construct</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9049432725068d7ec7f664f7a8759a69" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>construct</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a619d6e576f0d108e442b16ca4f68f1f3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>constructCollective</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ad68e773af13eaa96e58910b14264e8cb" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>constructCollective</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9b376e8e7145bf3d0f6b268d7974f783" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>constructCollective</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae4f96ce01b13d68e5f3a8be7bea7e439" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>constructCollectiveMap</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0718b47f3415e6d189f8a76068429d5c" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>constructed_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0e15cc861c0d979d8977b226efd7c271" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>constructInsert</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a51e938c8c05bf9a39ab69532ea12336d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>constructInsert</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a5fdc620b8c03bf7748802e35cff1afe9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>constructInsertMap</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a07aebc3fa25e2fe901eedc5db722655f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>constructMap</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a05de48c4386d84532b19a96b0cefc172" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>createGroupCollection</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1adbf8f335a30a005a3d5923a96f6f40c9" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>cur_context_perm_elm_id_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0ed427a8b00190e291d7ad7cfa4932f1" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>cur_context_temp_elm_id_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1affaf4ab1e9296a6ff1b7ad3c28a5e04e" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>curIdent_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae6e458293d04d8b29697fa0584c84c67" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>destroy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a71865b0508bab58b6d44b44416f11983" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>destroyCollections</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afac7551ce2ddeeff21631fa9e6987784" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>destroyMatching</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a0cfe02a0426e95ec9daa2ef7374e07c7" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>DispatchHandlerType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac6d4e3a2e80c670dc5c31c0c02ec0e1f" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>dist_tag_id_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ab82abba567a08d19a26618fe7c65452e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>distConstruct</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7503830bc133013d542856fa39834dcc" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>DistribConstructFn</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ad0d2174c1605c18dfdc028679f1505ae" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>doneInsertHandler</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>dumpState</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aa80bf07ee33e5e75de987ac82b79ae18" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>elmFinishedLB</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a009a33f449e14d32d73aae33224298ef" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>elmReadyLB</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae074993a281f67e9d661481d9aee886e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>elmReadyLB</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ade4647c26f1f20016fa0520bea640f59" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>EpochBcastType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afafcdbf36f42835471218b654252031c" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>finalize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac3fe0114969d91628d612eccc2166159" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>findColHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a06ff4b51fe7e15c8c4b7768cf7a1ad03" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>findElmHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aa7f2e2fbbd73a3d7111904c0b31807e6" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>findElmHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9275a4f6a7c33389813ba7fe4cc75d7e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>finishedInsert</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ac59dd2227839839776c92ca0c23934e5" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>finishedInsertEpoch</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a54edc9079585574858ecf512761f8efc" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>finishedInserting</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1e3aca203f1197782ec543da1d16b115" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>finishedUpdateHan</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a8c992f2c417d5d44b8b8a603d21920de" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>getBufferedBroadcastMsg</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1aa5b0980785f4de36affd4d10d255634b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>getComponentID</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9dc40e7ddd4cd8d4fa0fb5e10381f73f" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>getCurrentContextPerm</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3b98d63294b7f4faf8a64bcb91df69d4" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>getCurrentContextTemp</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af17cfce8795a4e39ef920599b1e568b9" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>getCurrentEpoch</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aa371f1cdd4eafa9f75b7eb40a6f151e0" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>getDefaultMap</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae92ad81b99b380b0b87b85f7dbda767a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>getDefaultMapImpl</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af183a018e0d2d8b3ed024244d8f83f45" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>getDispatcher</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ab672ad6c3bc9fdc5a9577a9ae0677d1f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>getDispatchHandler</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae333912da83d9beac8b710ec98e53094" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>getMappedNode</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9259954aca1df3a68ad1d0a730687612" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>getRange</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3512b8e7d8bac218f28e7ffef611e5fa" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>groupConstruction</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a93b0cf22a65db97cd5816c01191b9d8d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>groupElementCount</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aca5f3a7c1db697b6d0ba70de7ff8b887" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>hasCons</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ad94808d98e429e50376a9d1b35de57ee" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>hasContext</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a389e53dbfc20013d66ef09d4f42c0a53" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>hasNoCons</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a79d8ce89b21670fe0d482646aca4a2a4" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>incomingDestroy</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a7f07384d294e59796add9ce6be2d6410" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>initialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af7c0033bd57a7dbb3e70888e7fb2e1a9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>insert</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a6d72877052bc73fa06faacb2161cd57d" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>insert_finished_action_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afc919bd549505ed40c3e1a41623d569a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>insertCollectionElement</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a71a055aa5cee6b18891ed946e03e4883" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>insertCollectionInfo</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afae2bb212583b7a9c6d73722c66961ef" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>insertHandler</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1220f88fee25f84133a271ff19762b62" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>insertMetaCollection</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a43891fd66d429b4c9d8d01249f923b0b" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>InsertTokenRval</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a21c21612c806016788057aeab142af20" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>IsColMsgType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae376deeefd4f89a0b1c93849977715d9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>IsNotColMsgType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a18e3a17d9eb086c6c2f499242b7faa1e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>IsNotWrapType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1f91c97ed52237c3a3576dfbbe87c8f8" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>IsWrapType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aad857dc811570360f561b1ffc3df1b6c" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>lb_continuations_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af9d6e82381c808b5463e81643967ea59" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>lb_no_elm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1adb1aa79d2e81bb571279f4b57ece0e8f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>makeCollectionReady</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1f18abc7b511cce4d07ba011c91d21df" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>makeDistProxy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae8d3db4274a1239fa0097dae11e93bb9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>makeFilename</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1abe41e7e9c9dec081a79b222b4c5dc199" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>makeMetaFilename</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a13988c17d12744b3229d380ccef5ec07" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>makeNewCollectionProxy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a195df30bb149ade0000c5c5118b57d87" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>migrate</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afb1aad3179facb178c032b6ae14d592a" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>migrateIn</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a480360a498a18520cbe2405ebbe7e9b6" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>migrateOut</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af7cc4c83ae2792595eee99a3206ed633" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>name</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aa9d5a1889d871bce9c49552847e50386" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>nextPhase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a6b9b76aadc721cec45d3e0e02d849ff1" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>NoElementActionType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a5b443b26d693a78b22234264fecf6832" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>numCollections</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3fdd38adcd76281ada50f867e82817c6" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>numReadyCollections</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a5a15bd0369a9d3765a6c70249bada96f" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>pollable</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1dab11d9eb5bed8dfd5a3bb8fdf67f5a" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>progress</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a5364a7039d323f3733b6ab1816cf61d4" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>queryIndexContext</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a77d8832834659c44badf499c4770777b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>queryProxyContext</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae47451b1fb1fd640929995d964e052a6" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>readyNextPhase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3d49cc2ae24c50443e890e9447d408a9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>recordStats</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a5bf3bcab36addad323a03746928dfac8" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>reduce_cur_stamp_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a387f6106adb3d0accd039ee4ff50a515" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>reduceConstruction</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a47a3227ae0195c15187e8dc8762f66c4" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>ReduceIdxFuncType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a73e0a7bd12d524cb1d723fb1dc13ffe2" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>reduceMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a6a8a316325bb35ed2a88a4c2491f2e0f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>reduceMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a85d90217d51ccc12021acd6d6f6da4c0" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>reduceMsgExpr</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a87722c8684a18b89d7c4854fe4f60ae3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>reduceMsgExpr</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a69c53ea9651f96565e23307667c8eaef" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>reducer</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae8aac19e0ae07e9225142e5880eac830" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>ReduceStamp</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1ae820c8c22ae8c7350fa0232e0749b097" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>ReduceVirtualIDType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a790738e12739058e7a09b4a3246169e8" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>registerElementListener</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a42ea6d7733a75f09738a877e90db9aa1" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>release_lb_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a98b0c3c96cea99ac8d4310c1140f8880" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>releaseLBContinuation</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3d09a3058dd6984aeff47c89b6d571b3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>releaseLBPhase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af93d07828954a649201ef3fe463bf530" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>resetReadyPhase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a315a74b9299f31ebc5e3e4becdd9f79e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>restoreFromFile</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a52ce99a3c227bfd77089725c3a173373" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>runConstructor</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7199e829343abd7700dcdcd0a02cd477" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>schedule</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3165b258fab15c35985b3f9b8ef0dbe7" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3165b258fab15c35985b3f9b8ef0dbe7" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a55777b57bfad6c9d87d946ed773a391d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a4f87f7f738cde8d48c9c18d16cc06166" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a3ea2d130487c02b8dbda05b7befda88d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a229f96a5075562ee92743d69fc285254" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afc14691c6992cc5d7e51118b1386b67c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>sendMsgImpl</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afc14691c6992cc5d7e51118b1386b67c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>sendMsgImpl</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a26df5d55e8992f2d2a2752f61cc26d23" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>sendMsgUntypedHandler</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a416015d4b3a1bfe6dd7088b48e1f48f5" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>sendMsgWithHan</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a7be0a9b42876d4eb28b26eccb37351a3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>sendMsgWithHan</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a9b58618d5d3eec7ac198b7c465288599" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>sendNormalMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a4f278f2bc3e5304307098f6f7420b964" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>setCurrentContext</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1d93ed0d843deb241d788c305033b9e0" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>setupNextInsertTrigger</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1af7522c6048b723201d966094adfefa94" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>startPhaseCollective</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aa3fe8c93775fd9c4878968112503a428" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>startPhaseRooted</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aad3974307ab3b2e1df389a91310f68c2" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>startup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a7d82b061566ef21d6438f4701ae6b733" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>staticInit</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aaada4d04e8adf4cc5556bed2fdcdb321" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>staticInit</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a93eeb08585ad7a41c72e45ccd23be48c" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>staticInsert</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a09bd0e2b03bd5f638bdc44f7ffeef715" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>tryGetLocalPtr</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aecfd5c34b6d0b6781d3bb089ba1ae547" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>unregisterElementListener</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1afe9a779bc2dd8c639cf0dea5d910ec4b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>updateInsertEpochHandler</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a8d436079bfbadeacdf0584b01c150c29" prot="private" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>user_insert_action_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1da9015e52d6ecca955f57b59aab0b82" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>VirtualPtrType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a9190b5cb499f9cfdacc1e0bd98a1805a" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>~BaseComponent</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1aea0c10371b37041bcc855eef0c767b85" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionManager</scope><name>~CollectionManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
