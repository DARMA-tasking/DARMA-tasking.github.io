<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1pipe_1_1callback_1_1_anon_listener" kind="struct" language="C++" prot="public">
    <compoundname>vt::pipe::callback::AnonListener</compoundname>
    <basecompoundref refid="structvt_1_1pipe_1_1callback_1_1_callback_base" prot="public" virt="non-virtual">vt::pipe::callback::CallbackBase&lt; SignalT &gt;</basecompoundref>
    <includes refid="callback__anon__listener_8h" local="no">callback_anon_listener.h</includes>
    <templateparamlist>
      <param>
        <type>typename SignalT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_anon_listener_1ac2b8793106d8e11c7e7ee257627ace73" prot="public" static="no">
        <type>SignalT</type>
        <definition>using vt::pipe::callback::AnonListener&lt; SignalT &gt;::SignalType =  SignalT</definition>
        <argsstring></argsstring>
        <name>SignalType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon_listener.h" line="59" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon_listener.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_anon_listener_1a26182294e0b15bb16dd94040bb47ed73" prot="public" static="no">
        <type>typename SignalType::DataType</type>
        <definition>using vt::pipe::callback::AnonListener&lt; SignalT &gt;::SignalDataType =  typename SignalType::DataType</definition>
        <argsstring></argsstring>
        <name>SignalDataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon_listener.h" line="60" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon_listener.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_anon_listener_1ad5d8a2cc6a1599642855e92bbd10f89c" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1a26182294e0b15bb16dd94040bb47ed73" kindref="member">SignalDataType</ref> *)&gt;</type>
        <definition>using vt::pipe::callback::AnonListener&lt; SignalT &gt;::CallbackFnType =  std::function&lt;void(SignalDataType*)&gt;</definition>
        <argsstring></argsstring>
        <name>CallbackFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon_listener.h" line="61" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon_listener.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1pipe_1_1callback_1_1_anon_listener_1a6f708087804e0304e627db3f446bb449" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1ad5d8a2cc6a1599642855e92bbd10f89c" kindref="member">CallbackFnType</ref></type>
        <definition>CallbackFnType vt::pipe::callback::AnonListener&lt; SignalT &gt;::fn_</definition>
        <argsstring></argsstring>
        <name>fn_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon_listener.h" line="74" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon_listener.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_anon_listener_1ad9ac07733e0f6500aa340c606370eef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::AnonListener&lt; SignalT &gt;::AnonListener</definition>
        <argsstring>()=default</argsstring>
        <name>AnonListener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon_listener.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_anon_listener_1aa118ce8196dc5ae4bcce9c076c13fe96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::AnonListener&lt; SignalT &gt;::AnonListener</definition>
        <argsstring>(AnonListener const &amp;)=default</argsstring>
        <name>AnonListener</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_anon_listener" kindref="compound">AnonListener</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon_listener.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_anon_listener_1aa6d501a31dc807d01a6b71bc2011e90d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::AnonListener&lt; SignalT &gt;::AnonListener</definition>
        <argsstring>(AnonListener &amp;&amp;)=default</argsstring>
        <name>AnonListener</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_anon_listener" kindref="compound">AnonListener</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon_listener.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_anon_listener_1aa0b98d4f63eb9b2dbdb30ee37a867497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::AnonListener&lt; SignalT &gt;::AnonListener</definition>
        <argsstring>(CallbackFnType const &amp;in_fn, bool is_persist, PipeRefType refs=-1)</argsstring>
        <name>AnonListener</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1ad5d8a2cc6a1599642855e92bbd10f89c" kindref="member">CallbackFnType</ref> const &amp;</type>
          <declname>in_fn</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_persist</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ace18d74dd489d9ea506d38789fffce34" kindref="member">PipeRefType</ref></type>
          <declname>refs</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon_listener.h" line="66" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon_listener.impl.h" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_anon_listener_1ad7eef759667c0dcff5506ab45e28eda4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::AnonListener&lt; SignalT &gt;::AnonListener</definition>
        <argsstring>(CallbackFnType const &amp;in_fn)</argsstring>
        <name>AnonListener</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1ad5d8a2cc6a1599642855e92bbd10f89c" kindref="member">CallbackFnType</ref> const &amp;</type>
          <declname>in_fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon_listener.h" line="67" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon_listener.impl.h" bodystart="66" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_anon_listener_1ae96641b0c7f934d693018d91cfa7add4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::callback::AnonListener&lt; SignalT &gt;::trigger_</definition>
        <argsstring>(SignalDataType *data) override</argsstring>
        <name>trigger_</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1a26182294e0b15bb16dd94040bb47ed73" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon_listener.h" line="70" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon_listener.impl.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_anon_listener_1a8694018348ea69945fbc090bced5d4aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::callback::AnonListener&lt; SignalT &gt;::trigger_</definition>
        <argsstring>(SignalDataType *data, PipeType const &amp;pipe_id) override</argsstring>
        <name>trigger_</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1a26182294e0b15bb16dd94040bb47ed73" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pipe_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon_listener.h" line="71" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon_listener.impl.h" bodystart="78" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="155">
        <label>vt::pipe::callback::CallbackBase&lt; SignalT &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base"/>
      </node>
      <node id="154">
        <label>vt::pipe::callback::AnonListener&lt; SignalT &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_anon_listener"/>
        <childnode refid="155" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="157">
        <label>vt::pipe::callback::CallbackBase&lt; SignalT &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base"/>
      </node>
      <node id="156">
        <label>vt::pipe::callback::AnonListener&lt; SignalT &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_anon_listener"/>
        <childnode refid="157" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/pipe/callback/anon/callback_anon_listener.h" line="58" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon_listener.h" bodystart="58" bodyend="75"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1ad9ac07733e0f6500aa340c606370eef7" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>AnonListener</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1aa118ce8196dc5ae4bcce9c076c13fe96" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>AnonListener</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1aa6d501a31dc807d01a6b71bc2011e90d" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>AnonListener</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1aa0b98d4f63eb9b2dbdb30ee37a867497" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>AnonListener</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1ad7eef759667c0dcff5506ab45e28eda4" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>AnonListener</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aed02135f19f5d5ca4899d488ce402b64" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aa90843711601bd1174ba64f69f754eb8" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a683cee48109181768cd44354bc98e3e1" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ae96d1355aa94b4fd32469bbb9280717c" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a18840ed75fb94811cb34c17da8703588" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a2abdcbd2debf98179075077783a1b725" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aed70ff142d52c21d9f18e52eb6a6e38b" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1ad5d8a2cc6a1599642855e92bbd10f89c" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>CallbackFnType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a9ef1595197b291a660e6d19aadb0203e" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>expired</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a20ed519d03b62560080ce3bdb8986f03" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>finished</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1a6f708087804e0304e627db3f446bb449" prot="private" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>fn_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a078375aa25cb0c0e2968804ef3a86a5f" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>operator=</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a4baca91fd4545ca13f34c75255209edd" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>serialize</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1a26182294e0b15bb16dd94040bb47ed73" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>SignalDataType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1ac2b8793106d8e11c7e7ee257627ace73" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>SignalType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ad54d116447acb7f1d051db946b2e875c" prot="public" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>trigger</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1ae96641b0c7f934d693018d91cfa7add4" prot="private" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_anon_listener_1a8694018348ea69945fbc090bced5d4aa" prot="private" virt="non-virtual"><scope>vt::pipe::callback::AnonListener</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a75a9b0103e0129f536385b10b86400c3" prot="protected" virt="pure-virtual" ambiguityscope="vt::pipe::callback::CallbackBase::"><scope>vt::pipe::callback::AnonListener</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ac14c6c68a45c6f7e18c73daa45b23b83" prot="protected" virt="virtual" ambiguityscope="vt::pipe::callback::CallbackBase::"><scope>vt::pipe::callback::AnonListener</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1adc39148be97af3105f9b5765431bdc9a" prot="public" virt="virtual"><scope>vt::pipe::callback::AnonListener</scope><name>~CallbackBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
