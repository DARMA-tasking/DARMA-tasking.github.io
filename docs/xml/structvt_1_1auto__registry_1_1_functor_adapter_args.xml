<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1auto__registry_1_1_functor_adapter_args" kind="struct" language="C++" prot="public">
    <compoundname>vt::auto_registry::FunctorAdapterArgs</compoundname>
    <includes refid="auto__registry__general_8h" local="no">auto_registry_general.h</includes>
    <templateparamlist>
      <param>
        <type>typename ObjTypeT</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>ArgsT</declname>
        <defname>ArgsT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1auto__registry_1_1_functor_adapter_args_1a8845389dd3d7c6686f20764a077d1337" prot="public" static="no">
        <type>void(*)(ArgsT...)</type>
        <definition>using vt::auto_registry::FunctorAdapterArgs&lt; ObjTypeT, ArgsT &gt;::FunctionPtrType =  void (*)(ArgsT...)</definition>
        <argsstring></argsstring>
        <name>FunctionPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_general.h" line="82" column="1" bodyfile="src/vt/registry/auto/auto_registry_general.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1auto__registry_1_1_functor_adapter_args_1ad081c757043c3f9a340c09e1d66822fa" prot="public" static="no">
        <type>ObjTypeT</type>
        <definition>using vt::auto_registry::FunctorAdapterArgs&lt; ObjTypeT, ArgsT &gt;::ObjType =  ObjTypeT</definition>
        <argsstring></argsstring>
        <name>ObjType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_general.h" line="83" column="1" bodyfile="src/vt/registry/auto/auto_registry_general.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1auto__registry_1_1_functor_adapter_args_1a9652984336f3dcc10449d979614c5a00" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="structvt_1_1auto__registry_1_1_functor_adapter_args_1a8845389dd3d7c6686f20764a077d1337" kindref="member">FunctionPtrType</ref></type>
        <definition>static constexpr FunctionPtrType vt::auto_registry::FunctorAdapterArgs&lt; ObjTypeT, ArgsT &gt;::getFunction</definition>
        <argsstring>()</argsstring>
        <name>getFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_general.h" line="85" column="1" bodyfile="src/vt/registry/auto/auto_registry_general.h" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1auto__registry_1_1_functor_adapter_args_1ae13e4cf7fdf72608dd681cc55d26c63f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1aebda1d9d765bc9147dc654ad0712c936" kindref="member">NumArgsType</ref></type>
        <definition>static NumArgsType vt::auto_registry::FunctorAdapterArgs&lt; ObjTypeT, ArgsT &gt;::getNumArgs</definition>
        <argsstring>()</argsstring>
        <name>getNumArgs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_general.h" line="89" column="1" bodyfile="src/vt/registry/auto/auto_registry_general.h" bodystart="89" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>All Functor Adapters require:<itemizedlist>
<listitem><para>FunctionPtrType</para></listitem><listitem><para>ObjType</para></listitem><listitem><para>getFunction</para></listitem><listitem><para>traceGetEventType</para></listitem><listitem><para>traceGetEventName (The &apos;Functor&apos; naming is a bit of a misnomer as they are not functors nor do they strictly wrap functors..) Adapt a type that provides operator()(..) NOTE: MULTIPLE INSTANCES of the type will be created and discarded. This cannot be used for a stateful instance. This is an implementation detail that could be reconsidered. </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <location file="src/vt/registry/auto/auto_registry_general.h" line="81" column="1" bodyfile="src/vt/registry/auto/auto_registry_general.h" bodystart="81" bodyend="113"/>
    <listofallmembers>
      <member refid="structvt_1_1auto__registry_1_1_functor_adapter_args_1a8845389dd3d7c6686f20764a077d1337" prot="public" virt="non-virtual"><scope>vt::auto_registry::FunctorAdapterArgs</scope><name>FunctionPtrType</name></member>
      <member refid="structvt_1_1auto__registry_1_1_functor_adapter_args_1a9652984336f3dcc10449d979614c5a00" prot="public" virt="non-virtual"><scope>vt::auto_registry::FunctorAdapterArgs</scope><name>getFunction</name></member>
      <member refid="structvt_1_1auto__registry_1_1_functor_adapter_args_1ae13e4cf7fdf72608dd681cc55d26c63f" prot="public" virt="non-virtual"><scope>vt::auto_registry::FunctorAdapterArgs</scope><name>getNumArgs</name></member>
      <member refid="structvt_1_1auto__registry_1_1_functor_adapter_args_1ad081c757043c3f9a340c09e1d66822fa" prot="public" virt="non-virtual"><scope>vt::auto_registry::FunctorAdapterArgs</scope><name>ObjType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
