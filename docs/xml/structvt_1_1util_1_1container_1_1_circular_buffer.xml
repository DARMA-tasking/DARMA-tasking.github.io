<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structvt_1_1util_1_1container_1_1_circular_buffer" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::container::CircularBuffer</compoundname>
    <includes refid="circular__buffer_8h" local="no">circular_buffer.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>int</type>
        <declname>capacity</declname>
        <defname>capacity</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1container_1_1_circular_buffer_1a543bede3221fb2df06bd856bc4a45f21" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::util::container::CircularBuffer&lt; T, capacity &gt;::head_</definition>
        <argsstring></argsstring>
        <name>head_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="116" column="7" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1container_1_1_circular_buffer_1a5eb4acef245cc1a7a455a9ef99f1f4b4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::util::container::CircularBuffer&lt; T, capacity &gt;::tail_</definition>
        <argsstring></argsstring>
        <name>tail_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="117" column="7" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1container_1_1_circular_buffer_1a9c05e2d6d78d7db1a57ff24a00f928e0" prot="private" static="no" mutable="no">
        <type>std::array&lt; T, capacity &gt;</type>
        <definition>std::array&lt;T, capacity&gt; vt::util::container::CircularBuffer&lt; T, capacity &gt;::elms_</definition>
        <argsstring></argsstring>
        <name>elms_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="118" column="14" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_circular_buffer_1a38cfb7731cba8b9276711b18ddedf4e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::util::container::CircularBuffer&lt; T, capacity &gt;::CircularBuffer</definition>
        <argsstring>()=default</argsstring>
        <name>CircularBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="54" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_circular_buffer_1a31bb27eb15a398ba25fbadf4aa0f2b58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::util::container::CircularBuffer&lt; T, capacity &gt;::emplace</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>emplace</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="67" column="8" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_circular_buffer_1a3abb7bc0fe6fc2989e042a817822d56a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::CircularBuffer&lt; T, capacity &gt;::push</definition>
        <argsstring>(T &amp;&amp;t)</argsstring>
        <name>push</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="73" column="8" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_circular_buffer_1ad5f6b5a0351e64b8dd0929a9a67157a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::container::CircularBuffer&lt; T, capacity &gt;::push</definition>
        <argsstring>(T const &amp;t)</argsstring>
        <name>push</name>
        <param>
          <type>T const &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="79" column="8" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_circular_buffer_1aa35da044d0a91356040a531776d4ae61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T vt::util::container::CircularBuffer&lt; T, capacity &gt;::pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="85" column="5" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="85" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_circular_buffer_1aee95bce7a967bf98e3190db8f62a5f76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vt::util::container::CircularBuffer&lt; T, capacity &gt;::numFree</definition>
        <argsstring>() const</argsstring>
        <name>numFree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="94" column="7" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="94" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_circular_buffer_1a856c48e3984ef0d66d595d303fc5ff99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::util::container::CircularBuffer&lt; T, capacity &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="104" column="8" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_circular_buffer_1af528f4f242956508ea90b942246d2325" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::util::container::CircularBuffer&lt; T, capacity &gt;::full</definition>
        <argsstring>() const</argsstring>
        <name>full</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="105" column="8" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_circular_buffer_1a38d1a449f1b3d374a96e7c61275980e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vt::util::container::CircularBuffer&lt; T, capacity &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="106" column="7" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_circular_buffer_1abe281a81a9c63e24ce30c553cdc57ab8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::util::container::CircularBuffer&lt; T, capacity &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="109" column="8" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="109" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1util_1_1container_1_1_circular_buffer_1aa5c6301f521d2e1b1331e6adb9573890" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vt::util::container::CircularBuffer&lt; T, capacity &gt;::getNextEntry</definition>
        <argsstring>() const</argsstring>
        <name>getNextEntry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/container/circular_buffer.h" line="57" column="7" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="57" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/utils/container/circular_buffer.h" line="52" column="21" bodyfile="src/vt/utils/container/circular_buffer.h" bodystart="52" bodyend="119"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1a38cfb7731cba8b9276711b18ddedf4e8" prot="public" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>CircularBuffer</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1a9c05e2d6d78d7db1a57ff24a00f928e0" prot="private" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>elms_</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1a31bb27eb15a398ba25fbadf4aa0f2b58" prot="public" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>emplace</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1a856c48e3984ef0d66d595d303fc5ff99" prot="public" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>empty</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1af528f4f242956508ea90b942246d2325" prot="public" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>full</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1aa5c6301f521d2e1b1331e6adb9573890" prot="private" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>getNextEntry</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1a543bede3221fb2df06bd856bc4a45f21" prot="private" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>head_</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1aee95bce7a967bf98e3190db8f62a5f76" prot="public" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>numFree</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1aa35da044d0a91356040a531776d4ae61" prot="public" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>pop</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1a3abb7bc0fe6fc2989e042a817822d56a" prot="public" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>push</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1ad5f6b5a0351e64b8dd0929a9a67157a0" prot="public" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>push</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1abe281a81a9c63e24ce30c553cdc57ab8" prot="public" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>serialize</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1a38d1a449f1b3d374a96e7c61275980e5" prot="public" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>size</name></member>
      <member refid="structvt_1_1util_1_1container_1_1_circular_buffer_1a5eb4acef245cc1a7a455a9ef99f1f4b4" prot="private" virt="non-virtual"><scope>vt::util::container::CircularBuffer</scope><name>tail_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
