<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model" kind="class" language="C++" prot="public">
    <compoundname>vt::vrt::collection::balance::ComposedModel</compoundname>
    <basecompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" prot="public" virt="non-virtual">vt::vrt::collection::balance::LoadModel</basecompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_comm_overhead" prot="public" virt="non-virtual">vt::vrt::collection::balance::CommOverhead</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_linear_model" prot="public" virt="non-virtual">vt::vrt::collection::balance::LinearModel</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases" prot="public" virt="non-virtual">vt::vrt::collection::balance::MultiplePhases</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_naive_persistence" prot="public" virt="non-virtual">vt::vrt::collection::balance::NaivePersistence</derivedcompoundref>
    <derivedcompoundref refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_norm" prot="public" virt="non-virtual">vt::vrt::collection::balance::Norm</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection" prot="public" virt="non-virtual">vt::vrt::collection::balance::PerCollection</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_persistence_median_last_n" prot="public" virt="non-virtual">vt::vrt::collection::balance::PersistenceMedianLastN</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_proposed_reassignment" prot="public" virt="non-virtual">vt::vrt::collection::balance::ProposedReassignment</derivedcompoundref>
    <derivedcompoundref refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_select_subphases" prot="public" virt="non-virtual">vt::vrt::collection::balance::SelectSubphases</derivedcompoundref>
    <derivedcompoundref refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_weighted_communication_volume" prot="public" virt="non-virtual">vt::vrt::collection::balance::WeightedCommunicationVolume</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_weighted_messages" prot="public" virt="non-virtual">vt::vrt::collection::balance::WeightedMessages</derivedcompoundref>
    <includes refid="composed__model_8h" local="no">composed_model.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a8a2a6b2d5e79a7c02002132913c9ae55" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" kindref="compound">LoadModel</ref> &gt;</type>
        <definition>std::shared_ptr&lt;LoadModel&gt; vt::vrt::collection::balance::ComposedModel::base_</definition>
        <argsstring></argsstring>
        <name>base_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="85" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a84b77c1fceb9e07a0706b896a4d9e9c9" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::balance::ComposedModel::ComposedModel</definition>
        <argsstring>(std::shared_ptr&lt; LoadModel &gt; base)</argsstring>
        <name>ComposedModel</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" kindref="compound">LoadModel</ref> &gt;</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="65" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a3a7da5e81a933ea88f87a1226fd3b401" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::ComposedModel::setLoads</definition>
        <argsstring>(std::unordered_map&lt; PhaseType, LoadMapType &gt; const *proc_load, std::unordered_map&lt; PhaseType, CommMapType &gt; const *proc_comm) override</argsstring>
        <name>setLoads</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a07512b8d95025a21a7c25cc3fdb817ad">setLoads</reimplements>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_weighted_messages_1ad0e6b88668ac59f4fb376a2dba81e593">setLoads</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection_1aba8f472fbe40c44c9f0f9028afe29cfc">setLoads</reimplementedby>
        <param>
          <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a5339303db2e1ce964d783a53fd74e6b1" kindref="member">LoadMapType</ref> &gt; const *</type>
          <declname>proc_load</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a01ee1fb0ae2da1d2ab7fdca3be9ae351" kindref="member">CommMapType</ref> &gt; const *</type>
          <declname>proc_comm</declname>
        </param>
        <briefdescription>
<para>Initialize the model instance with pointers to the measured load data. </para>        </briefdescription>
        <detaileddescription>
<para>This would typically be called by <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_manager" kindref="compound">LBManager</ref> when the user has passed a new model instance for a collection </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="67" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.cc" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1ad8108b4392d63b7f09e443920a64933a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::ComposedModel::updateLoads</definition>
        <argsstring>(PhaseType last_completed_phase) override</argsstring>
        <name>updateLoads</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a4f1c6fb5d7d7a0b147755f025b1d5f5c">updateLoads</reimplements>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection_1a2b41fbbe2b684654f8dbfd9207b77501">updateLoads</reimplementedby>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>last_completed_phase</declname>
        </param>
        <briefdescription>
<para>Signals that load data for a new phase is available. </para>        </briefdescription>
        <detaileddescription>
<para>For models that want to do pre-computation based on measured loads before being asked to provide predictions from them</para><para>This would typically be called by <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_manager" kindref="compound">LBManager</ref> collectively inside an epoch that can be used for global communication in advance of any calls to <ref refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a1dc491d5661d7690a8014d7a5833d788" kindref="member">getModeledLoad()</ref></para><para>The <computeroutput>setLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="70" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.cc" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a1dc491d5661d7690a8014d7a5833d788" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref></type>
        <definition>TimeType vt::vrt::collection::balance::ComposedModel::getModeledLoad</definition>
        <argsstring>(ElementIDStruct object, PhaseOffset when) const override</argsstring>
        <name>getModeledLoad</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1ac1e4cfe4bdacad8df0be7e1803390927">getModeledLoad</reimplements>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_proposed_reassignment_1aca9fab69b816133d56dfa88418e0e54f">getModeledLoad</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_naive_persistence_1a3b7513c6552fc464a12b2d2b076a5c55">getModeledLoad</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_norm_1a59a4b40b7e3c55b341e1663443af8b77">getModeledLoad</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_persistence_median_last_n_1a0a55948fec1d95b5102faa7ebfaa6d6d">getModeledLoad</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_weighted_communication_volume_1a37c97a69e9e4bc8a80b2394d9bffb41e">getModeledLoad</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_select_subphases_1abb8177e14c5bba35b583e40f9ab4e14f">getModeledLoad</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_linear_model_1a41a58ff3762933d52a7e82917f8d7ec7">getModeledLoad</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection_1a465b8f14dead0affdaeb0cf24373565f">getModeledLoad</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases_1aa8c0579c95bf8d1b47d2a6099ab36920">getModeledLoad</reimplementedby>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset" kindref="compound">PhaseOffset</ref></type>
          <declname>when</declname>
        </param>
        <briefdescription>
<para>Provide an estimate of the given object&apos;s load during a specified interval. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>The object whose load is desired </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">when</parametername>
</parameternamelist>
<parameterdescription>
<para>The interval in which the estimated load is desired</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>How much computation time the object is estimated to require</para></simplesect>
The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="72" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.cc" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a3db01f9ec9440bc5b77fae390581c874" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref></type>
        <definition>TimeType vt::vrt::collection::balance::ComposedModel::getModeledComm</definition>
        <argsstring>(ElementIDStruct object, PhaseOffset when) const override</argsstring>
        <name>getModeledComm</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a1143c5dda0d3e409db174d5de6bfceb5">getModeledComm</reimplements>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_weighted_messages_1aa392b1af7d42136794129ac167b2dbd8">getModeledComm</reimplementedby>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset" kindref="compound">PhaseOffset</ref></type>
          <declname>when</declname>
        </param>
        <briefdescription>
<para>Provide an estimate of the communication cost for a given object during a specified interval. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>The object whose communication is desired </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">when</parametername>
</parameternamelist>
<parameterdescription>
<para>The interval in which the communication takes place</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>How much communication time the object is estimated to require</para></simplesect>
The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="73" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.cc" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1ad6e2a1c572a80e35acad0fcf1a0e8071" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool vt::vrt::collection::balance::ComposedModel::hasRawLoad</definition>
        <argsstring>() const override</argsstring>
        <name>hasRawLoad</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a626f65c651ea15f4a40b9f058778c620">hasRawLoad</reimplements>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection_1a82a94bbf8764a3c6bd346e4a686e1efb">hasRawLoad</reimplementedby>
        <briefdescription>
<para>Whether or not the model is based on the <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data" kindref="compound">RawData</ref> model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="74" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.cc" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a970a2b3b5bda75934fb186d5fe8b9f00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref></type>
        <definition>TimeType vt::vrt::collection::balance::ComposedModel::getRawLoad</definition>
        <argsstring>(ElementIDStruct object, PhaseOffset when) const override</argsstring>
        <name>getRawLoad</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1ad8a47fa5f0ca872055e7216061e84884">getRawLoad</reimplements>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_proposed_reassignment_1a2259e174dcc5b6664e95e653ea8f5a31">getRawLoad</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_naive_persistence_1aa339c8448a59cf522577f573fd5ed95c">getRawLoad</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection_1af5e29141a1527b165767596336f0d7a6">getRawLoad</reimplementedby>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset" kindref="compound">PhaseOffset</ref></type>
          <declname>when</declname>
        </param>
        <briefdescription>
<para>Provide the given object&apos;s raw load during a specified interval. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>The object whose raw load is desired </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">when</parametername>
</parameternamelist>
<parameterdescription>
<para>The interval in which the raw load is desired</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>How much computation time the object required </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="75" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.cc" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a20bb994d1b3b27eb2a82729d7d5c30f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int vt::vrt::collection::balance::ComposedModel::getNumPastPhasesNeeded</definition>
        <argsstring>(unsigned int look_back) const override</argsstring>
        <name>getNumPastPhasesNeeded</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a44905eb3e15e7f22b2f8d1fe7297cea0">getNumPastPhasesNeeded</reimplements>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_naive_persistence_1a2842669870cdef1ab7d5f63d23951f69">getNumPastPhasesNeeded</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_persistence_median_last_n_1a4f65801b9a93bfbc24e98b8ff1e111bc">getNumPastPhasesNeeded</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_linear_model_1ae1a9d609a834df8d672992de8184e458">getNumPastPhasesNeeded</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection_1ad71f5405a169c5fe2a25668df96c3a7c">getNumPastPhasesNeeded</reimplementedby>
        <param>
          <type>unsigned int</type>
          <declname>look_back</declname>
        </param>
        <briefdescription>
<para>Compute how many phases of past load statistics need to be kept availble for the model to use. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">look_back</parametername>
</parameternamelist>
<parameterdescription>
<para>How many phases into the past the caller intends to query</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>How many phases of past load statistics will be needed to satisfy the requested history </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="76" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.cc" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a7d32b6f8a0ca5970674238325df11783" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_object_iterator" kindref="compound">ObjectIterator</ref></type>
        <definition>ObjectIterator vt::vrt::collection::balance::ComposedModel::begin</definition>
        <argsstring>() const override</argsstring>
        <name>begin</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a085a13e3cfeff2beb88b49ddaed4ef8d">begin</reimplements>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_proposed_reassignment_1ad7a65c6be802368df458f6005ef69d23">begin</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object enumeration, to abstract away access to the underlying structures from <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data" kindref="compound">NodeLBData</ref></para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="78" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.cc" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1abd58ffd308443021356aff2595c6980f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int vt::vrt::collection::balance::ComposedModel::getNumObjects</definition>
        <argsstring>() const override</argsstring>
        <name>getNumObjects</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a438cd95f1c60b4232152335c4ee950bc">getNumObjects</reimplements>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_proposed_reassignment_1a7134943ece9dc9a0d4539536f60eed6e">getNumObjects</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object enumeration, to abstract away access to the underlying structures from <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data" kindref="compound">NodeLBData</ref></para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="80" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.cc" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a85bd890eb6e94c85cbfeb9ef321139dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int vt::vrt::collection::balance::ComposedModel::getNumCompletedPhases</definition>
        <argsstring>() const override</argsstring>
        <name>getNumCompletedPhases</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1abba98976118ff797fc2393a50e3e80d8">getNumCompletedPhases</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of phases of history available</para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="81" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.cc" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a744a16572614d11e554b1bf53b7c57f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int vt::vrt::collection::balance::ComposedModel::getNumSubphases</definition>
        <argsstring>() const override</argsstring>
        <name>getNumSubphases</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1aa7ddeca4fc8de99bc25a895e207de2e6">getNumSubphases</reimplements>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_select_subphases_1aa92c8fa929624c30a25442391bc3e80d">getNumSubphases</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of subphases recorded in the most recent completed phase</para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="82" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.cc" bodystart="92" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utility class to support implementation of composable load modeling components. </para>    </briefdescription>
    <detaileddescription>
<para>All model implementations meant to compose with arbitrary other models should inherit from this class. It implements all methods by calling the same method on the underlying model passed at construction. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1211">
        <label>vt::vrt::collection::balance::ProposedReassignment</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_proposed_reassignment"/>
        <childnode refid="1202" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1207">
        <label>vt::vrt::collection::balance::NaivePersistence</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_naive_persistence"/>
        <childnode refid="1202" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1210">
        <label>vt::vrt::collection::balance::PersistenceMedianLastN</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_persistence_median_last_n"/>
        <childnode refid="1202" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1202">
        <label>vt::vrt::collection::balance::ComposedModel</label>
        <link refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model"/>
        <childnode refid="1203" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1206">
        <label>vt::vrt::collection::balance::MultiplePhases</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases"/>
        <childnode refid="1202" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1214">
        <label>vt::vrt::collection::balance::WeightedMessages</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_weighted_messages"/>
        <childnode refid="1202" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1213">
        <label>vt::vrt::collection::balance::WeightedCommunicationVolume</label>
        <link refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_weighted_communication_volume"/>
        <childnode refid="1202" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1209">
        <label>vt::vrt::collection::balance::PerCollection</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection"/>
        <childnode refid="1202" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1205">
        <label>vt::vrt::collection::balance::LinearModel</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_linear_model"/>
        <childnode refid="1202" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1212">
        <label>vt::vrt::collection::balance::SelectSubphases</label>
        <link refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_select_subphases"/>
        <childnode refid="1202" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1203">
        <label>vt::vrt::collection::balance::LoadModel</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model"/>
      </node>
      <node id="1204">
        <label>vt::vrt::collection::balance::CommOverhead</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_comm_overhead"/>
        <childnode refid="1202" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1208">
        <label>vt::vrt::collection::balance::Norm</label>
        <link refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_norm"/>
        <childnode refid="1202" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1215">
        <label>vt::vrt::collection::balance::ComposedModel</label>
        <link refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model"/>
        <childnode refid="1216" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1216">
        <label>vt::vrt::collection::balance::LoadModel</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/balance/model/composed_model.h" line="62" column="1" bodyfile="src/vt/vrt/collection/balance/model/composed_model.h" bodystart="61" bodyend="86"/>
    <listofallmembers>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a8a2a6b2d5e79a7c02002132913c9ae55" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>base_</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a7d32b6f8a0ca5970674238325df11783" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>begin</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a84b77c1fceb9e07a0706b896a4d9e9c9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>ComposedModel</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a2b3212a8438a4b58a73c41db841f15b7" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>end</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a3db01f9ec9440bc5b77fae390581c874" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>getModeledComm</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a1dc491d5661d7690a8014d7a5833d788" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>getModeledLoad</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a85bd890eb6e94c85cbfeb9ef321139dc" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>getNumCompletedPhases</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1abd58ffd308443021356aff2595c6980f" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>getNumObjects</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a20bb994d1b3b27eb2a82729d7d5c30f3" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>getNumPastPhasesNeeded</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a744a16572614d11e554b1bf53b7c57f6" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>getNumSubphases</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a970a2b3b5bda75934fb186d5fe8b9f00" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>getRawLoad</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1ad6e2a1c572a80e35acad0fcf1a0e8071" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>hasRawLoad</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a90f345e752441d66b2893027f2626226" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>LoadModel</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a52e2210225947697a235b75c385eb104" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>serialize</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a3a7da5e81a933ea88f87a1226fd3b401" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>setLoads</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1ad8108b4392d63b7f09e443920a64933a" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>updateLoads</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a6478a387f285b322a48ee1d8a80fc6f7" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::ComposedModel</scope><name>~LoadModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
