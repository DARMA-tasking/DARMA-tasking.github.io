<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="spec-file" kind="page">
    <compoundname>spec-file</compoundname>
    <title>Spec File</title>
    <briefdescription>
<para>Specification File for vt components. </para>
    </briefdescription>
    <detaileddescription>
<para>Specification File for vt components</para>
<para>VT is using Specification Files for various components (trace and LB). Such files can be used to control when (on which Phases) these components should be enabled/disabled.</para>
<para>The parser will read the following format:</para>
<para><programlisting><codeline><highlight class="normal">[%]<sp/>&lt;phase&gt;<sp/>&lt;range<sp/>negative&gt;<sp/>&lt;range<sp/>positive&gt;</highlight></codeline>
</programlisting></para>
<para>The following is an example of a specification file:</para>
<para><programlisting><codeline><highlight class="normal">0<sp/>0<sp/>10</highlight></codeline>
<codeline><highlight class="normal">%100<sp/>-3<sp/>3</highlight></codeline>
<codeline><highlight class="normal">200<sp/>-5<sp/>5</highlight></codeline>
</programlisting></para>
<para>This specifies that component will be enabled on the following phases:</para>
<para><programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[0,10],<sp/>#<sp/>phase<sp/>0<sp/>with<sp/>offsets<sp/>0,+10<sp/>(subsumes<sp/>[0,3]<sp/>from<sp/>%100<sp/>-3<sp/>3)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[97,103]<sp/>#<sp/>any<sp/>phase<sp/>%<sp/>100<sp/>with<sp/>offset<sp/>-3,+3</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[195,205]<sp/>#<sp/>phase<sp/>200<sp/>with<sp/>offsets<sp/>-5,+5<sp/>(subsumes<sp/>[197,203]<sp/>from<sp/>%100<sp/>-3<sp/>3)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[297,303]<sp/>#<sp/>any<sp/>phase<sp/>%<sp/>100<sp/>with<sp/>offset<sp/>-3,+3</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[n%100-3,n%100+3]<sp/>...<sp/>#<sp/>any<sp/>phase<sp/>%<sp/>100<sp/>with<sp/>offset<sp/>-3,+3</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>The sets of mod-phase and phase-specific entries must be unique. There may be overlap across the two sets, but not within them. Having two entries that start with <computeroutput>%100</computeroutput> or two entries that start with <computeroutput>100</computeroutput> would be invalid and trigger a parsing error. But having a <computeroutput>%100</computeroutput> and <computeroutput>100</computeroutput> entry is valid. Whether component is enabled is calculated as an OR across all specification entries. Thus, if a given phase is contained in any spec line, it is enabled. Note that <computeroutput>0 % 100 = 0</computeroutput>. Therefore, if the above example did not contain the first line, component would be enabled as:</para>
<para><programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[0,3],<sp/>#<sp/>any<sp/>phase<sp/>mod<sp/>100<sp/>from<sp/>-3,+3</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[97,103],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[195,205],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[297,303],<sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
  </compounddef>
</doxygen>
