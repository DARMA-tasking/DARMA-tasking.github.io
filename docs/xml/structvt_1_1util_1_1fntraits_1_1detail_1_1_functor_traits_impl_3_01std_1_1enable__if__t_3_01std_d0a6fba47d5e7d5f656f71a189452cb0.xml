<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_d0a6fba47d5e7d5f656f71a189452cb0" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, FunctorT, Return(FunctorT::*)() const &gt;</compoundname>
    <includes refid="fntraits_8h" local="no">fntraits.h</includes>
    <templateparamlist>
      <param>
        <type>typename FunctorT</type>
      </param>
      <param>
        <type>typename Return</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_d0a6fba47d5e7d5f656f71a189452cb0_1aa66ebcf259a3718c780fcd2e602b272f" prot="public" static="no">
        <type><ref refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_no_msg" kindref="compound">NoMsg</ref></type>
        <definition>using vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, FunctorT, Return(FunctorT::*)() const &gt;::MsgT =  NoMsg</definition>
        <argsstring></argsstring>
        <name>MsgT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="305" column="3" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_d0a6fba47d5e7d5f656f71a189452cb0_1a77dfbca91a5b7ea732af5abd05b82726" prot="public" static="no">
        <type>Return</type>
        <definition>using vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, FunctorT, Return(FunctorT::*)() const &gt;::ReturnT =  Return</definition>
        <argsstring></argsstring>
        <name>ReturnT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="306" column="3" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_d0a6fba47d5e7d5f656f71a189452cb0_1a3da1bd8662bc9e69fb537bf8ed113d1b" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>template&lt; typename... &gt; class</type>
            <declname>U</declname>
            <defname>U</defname>
          </param>
        </templateparamlist>
        <type>U&lt;&gt;</type>
        <definition>using vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, FunctorT, Return(FunctorT::*)() const &gt;::WrapType =  U&lt;&gt;</definition>
        <argsstring></argsstring>
        <name>WrapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="308" column="3" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_d0a6fba47d5e7d5f656f71a189452cb0_1a98aea22162ba22c8fbba6c9c8c0c71d9" prot="public" static="no">
        <type>std::tuple&lt;&gt;</type>
        <definition>using vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, FunctorT, Return(FunctorT::*)() const &gt;::TupleType =  std::tuple&lt;&gt;</definition>
        <argsstring></argsstring>
        <name>TupleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="309" column="3" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_d0a6fba47d5e7d5f656f71a189452cb0_1a7eabd3086dad7b1b45249194aecdc967" prot="public" static="no">
        <type>Return(*)()</type>
        <definition>using vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, FunctorT, Return(FunctorT::*)() const &gt;::FuncPtrType =  Return(*)()</definition>
        <argsstring></argsstring>
        <name>FuncPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="310" column="3" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_d0a6fba47d5e7d5f656f71a189452cb0_1a35b11bba18f302136263d819e0ad0e8b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, FunctorT, Return(FunctorT::*)() const &gt;::is_member</definition>
        <argsstring></argsstring>
        <name>is_member</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="304" column="25" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/utils/fntraits/fntraits.h" line="299" column="1" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="303" bodyend="311"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_d0a6fba47d5e7d5f656f71a189452cb0_1a7eabd3086dad7b1b45249194aecdc967" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, FunctorT, Return(FunctorT::*)() const &gt;</scope><name>FuncPtrType</name></member>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_d0a6fba47d5e7d5f656f71a189452cb0_1a35b11bba18f302136263d819e0ad0e8b" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, FunctorT, Return(FunctorT::*)() const &gt;</scope><name>is_member</name></member>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_d0a6fba47d5e7d5f656f71a189452cb0_1aa66ebcf259a3718c780fcd2e602b272f" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, FunctorT, Return(FunctorT::*)() const &gt;</scope><name>MsgT</name></member>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_d0a6fba47d5e7d5f656f71a189452cb0_1a77dfbca91a5b7ea732af5abd05b82726" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, FunctorT, Return(FunctorT::*)() const &gt;</scope><name>ReturnT</name></member>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_d0a6fba47d5e7d5f656f71a189452cb0_1a98aea22162ba22c8fbba6c9c8c0c71d9" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, FunctorT, Return(FunctorT::*)() const &gt;</scope><name>TupleType</name></member>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_functor_traits_impl_3_01std_1_1enable__if__t_3_01std_d0a6fba47d5e7d5f656f71a189452cb0_1a3da1bd8662bc9e69fb537bf8ed113d1b" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FunctorTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, FunctorT, Return(FunctorT::*)() const &gt;</scope><name>WrapType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
