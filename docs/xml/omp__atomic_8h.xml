<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="omp__atomic_8h" kind="file" language="C++">
    <compoundname>omp_atomic.h</compoundname>
    <includes refid="config_8h" local="yes">vt/config.h</includes>
    <incdepgraph>
      <node id="284518">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
      </node>
      <node id="284528">
        <label>functional</label>
      </node>
      <node id="284534">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="284523" relation="include">
        </childnode>
        <childnode refid="284527" relation="include">
        </childnode>
        <childnode refid="284524" relation="include">
        </childnode>
      </node>
      <node id="284523">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="284524" relation="include">
        </childnode>
        <childnode refid="284525" relation="include">
        </childnode>
      </node>
      <node id="284517">
        <label>cstdint</label>
      </node>
      <node id="284553">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="284539" relation="include">
        </childnode>
        <childnode refid="284527" relation="include">
        </childnode>
        <childnode refid="284547" relation="include">
        </childnode>
        <childnode refid="284552" relation="include">
        </childnode>
        <childnode refid="284554" relation="include">
        </childnode>
        <childnode refid="284534" relation="include">
        </childnode>
        <childnode refid="284551" relation="include">
        </childnode>
        <childnode refid="284530" relation="include">
        </childnode>
        <childnode refid="284544" relation="include">
        </childnode>
        <childnode refid="284524" relation="include">
        </childnode>
        <childnode refid="284556" relation="include">
        </childnode>
        <childnode refid="284536" relation="include">
        </childnode>
      </node>
      <node id="284551">
        <label>cassert</label>
      </node>
      <node id="284548">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="284539" relation="include">
        </childnode>
        <childnode refid="284527" relation="include">
        </childnode>
        <childnode refid="284547" relation="include">
        </childnode>
        <childnode refid="284549" relation="include">
        </childnode>
        <childnode refid="284534" relation="include">
        </childnode>
        <childnode refid="284541" relation="include">
        </childnode>
        <childnode refid="284530" relation="include">
        </childnode>
        <childnode refid="284544" relation="include">
        </childnode>
        <childnode refid="284524" relation="include">
        </childnode>
        <childnode refid="284551" relation="include">
        </childnode>
        <childnode refid="284536" relation="include">
        </childnode>
      </node>
      <node id="284531">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="284532" relation="include">
        </childnode>
      </node>
      <node id="284539">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="284526" relation="include">
        </childnode>
        <childnode refid="284540" relation="include">
        </childnode>
      </node>
      <node id="284532">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
      </node>
      <node id="284537">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="284538" relation="include">
        </childnode>
        <childnode refid="284542" relation="include">
        </childnode>
        <childnode refid="284546" relation="include">
        </childnode>
      </node>
      <node id="284524">
        <label>string</label>
      </node>
      <node id="284554">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="284539" relation="include">
        </childnode>
        <childnode refid="284516" relation="include">
        </childnode>
        <childnode refid="284550" relation="include">
        </childnode>
        <childnode refid="284530" relation="include">
        </childnode>
        <childnode refid="284544" relation="include">
        </childnode>
        <childnode refid="284524" relation="include">
        </childnode>
        <childnode refid="284525" relation="include">
        </childnode>
        <childnode refid="284555" relation="include">
        </childnode>
      </node>
      <node id="284555">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="284554" relation="include">
        </childnode>
        <childnode refid="284534" relation="include">
        </childnode>
        <childnode refid="284550" relation="include">
        </childnode>
        <childnode refid="284530" relation="include">
        </childnode>
        <childnode refid="284544" relation="include">
        </childnode>
        <childnode refid="284524" relation="include">
        </childnode>
        <childnode refid="284525" relation="include">
        </childnode>
        <childnode refid="284536" relation="include">
        </childnode>
      </node>
      <node id="284520">
        <label>vt/configs/features/features_enableif.h</label>
        <link refid="features__enableif_8h"/>
        <childnode refid="284519" relation="include">
        </childnode>
      </node>
      <node id="284516">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="284517" relation="include">
        </childnode>
        <childnode refid="284518" relation="include">
        </childnode>
        <childnode refid="284519" relation="include">
        </childnode>
        <childnode refid="284520" relation="include">
        </childnode>
        <childnode refid="284521" relation="include">
        </childnode>
      </node>
      <node id="284533">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="284514" relation="include">
        </childnode>
        <childnode refid="284527" relation="include">
        </childnode>
        <childnode refid="284529" relation="include">
        </childnode>
      </node>
      <node id="284536">
        <label>fmt/core.h</label>
      </node>
      <node id="284514">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="284515" relation="include">
        </childnode>
        <childnode refid="284516" relation="include">
        </childnode>
        <childnode refid="284522" relation="include">
        </childnode>
      </node>
      <node id="284540">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="284524" relation="include">
        </childnode>
      </node>
      <node id="284527">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="284517" relation="include">
        </childnode>
        <childnode refid="284528" relation="include">
        </childnode>
      </node>
      <node id="284543">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="284526" relation="include">
        </childnode>
        <childnode refid="284516" relation="include">
        </childnode>
        <childnode refid="284539" relation="include">
        </childnode>
        <childnode refid="284524" relation="include">
        </childnode>
        <childnode refid="284530" relation="include">
        </childnode>
        <childnode refid="284544" relation="include">
        </childnode>
        <childnode refid="284545" relation="include">
        </childnode>
      </node>
      <node id="284535">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
      </node>
      <node id="284538">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="284527" relation="include">
        </childnode>
        <childnode refid="284539" relation="include">
        </childnode>
        <childnode refid="284541" relation="include">
        </childnode>
        <childnode refid="284524" relation="include">
        </childnode>
        <childnode refid="284536" relation="include">
        </childnode>
      </node>
      <node id="284530">
        <label>tuple</label>
      </node>
      <node id="284522">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="284523" relation="include">
        </childnode>
        <childnode refid="284526" relation="include">
        </childnode>
        <childnode refid="284516" relation="include">
        </childnode>
        <childnode refid="284534" relation="include">
        </childnode>
        <childnode refid="284535" relation="include">
        </childnode>
        <childnode refid="284536" relation="include">
        </childnode>
      </node>
      <node id="284525">
        <label>vector</label>
      </node>
      <node id="284556">
        <label>sstream</label>
      </node>
      <node id="284515">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="284512">
        <label>src/vt/utils/atomic/omp_atomic.h</label>
        <link refid="omp__atomic_8h"/>
        <childnode refid="284513" relation="include">
        </childnode>
      </node>
      <node id="284549">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="284550" relation="include">
        </childnode>
        <childnode refid="284525" relation="include">
        </childnode>
        <childnode refid="284530" relation="include">
        </childnode>
      </node>
      <node id="284519">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
      </node>
      <node id="284550">
        <label>cstdlib</label>
      </node>
      <node id="284542">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="284539" relation="include">
        </childnode>
        <childnode refid="284543" relation="include">
        </childnode>
        <childnode refid="284530" relation="include">
        </childnode>
      </node>
      <node id="284526">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="284527" relation="include">
        </childnode>
        <childnode refid="284529" relation="include">
        </childnode>
        <childnode refid="284531" relation="include">
        </childnode>
        <childnode refid="284533" relation="include">
        </childnode>
      </node>
      <node id="284547">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="284527" relation="include">
        </childnode>
        <childnode refid="284539" relation="include">
        </childnode>
        <childnode refid="284530" relation="include">
        </childnode>
        <childnode refid="284544" relation="include">
        </childnode>
        <childnode refid="284524" relation="include">
        </childnode>
        <childnode refid="284548" relation="include">
        </childnode>
      </node>
      <node id="284529">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="284514" relation="include">
        </childnode>
        <childnode refid="284527" relation="include">
        </childnode>
        <childnode refid="284517" relation="include">
        </childnode>
        <childnode refid="284528" relation="include">
        </childnode>
        <childnode refid="284530" relation="include">
        </childnode>
      </node>
      <node id="284544">
        <label>type_traits</label>
      </node>
      <node id="284541">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="284526" relation="include">
        </childnode>
        <childnode refid="284524" relation="include">
        </childnode>
      </node>
      <node id="284513">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="284514" relation="include">
        </childnode>
        <childnode refid="284526" relation="include">
        </childnode>
        <childnode refid="284537" relation="include">
        </childnode>
      </node>
      <node id="284521">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="284546">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="284516" relation="include">
        </childnode>
        <childnode refid="284527" relation="include">
        </childnode>
        <childnode refid="284539" relation="include">
        </childnode>
        <childnode refid="284547" relation="include">
        </childnode>
        <childnode refid="284552" relation="include">
        </childnode>
        <childnode refid="284554" relation="include">
        </childnode>
        <childnode refid="284530" relation="include">
        </childnode>
        <childnode refid="284544" relation="include">
        </childnode>
      </node>
      <node id="284552">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="284539" relation="include">
        </childnode>
        <childnode refid="284527" relation="include">
        </childnode>
        <childnode refid="284530" relation="include">
        </childnode>
        <childnode refid="284524" relation="include">
        </childnode>
        <childnode refid="284553" relation="include">
        </childnode>
      </node>
      <node id="284545">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="284526" relation="include">
        </childnode>
        <childnode refid="284516" relation="include">
        </childnode>
        <childnode refid="284539" relation="include">
        </childnode>
        <childnode refid="284543" relation="include">
        </childnode>
        <childnode refid="284541" relation="include">
        </childnode>
        <childnode refid="284524" relation="include">
        </childnode>
        <childnode refid="284530" relation="include">
        </childnode>
        <childnode refid="284544" relation="include">
        </childnode>
        <childnode refid="284536" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>omp_atomic.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2021<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_VT_UTILS_ATOMIC_OMP_ATOMIC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_VT_UTILS_ATOMIC_OMP_ATOMIC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">vt/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>vt_check_enabled(openmp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">atomic<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AtomicOMP<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>AtomicOMP(T&amp;&amp;<sp/>in_value)<sp/>:<sp/>value_(<ref refid="namespacestd" kindref="compound">std</ref>::forward&lt;T&gt;(in_value))<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>AtomicOMP(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>in_value)<sp/>:<sp/>value_(in_value)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>AtomicOMP(AtomicOMP<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>AtomicOMP&amp;<sp/>operator=(AtomicOMP<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>atomic<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>+=<sp/>in;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sub(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>atomic<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>-=<sp/>in;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>T<sp/>fetch_add(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>tmp;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-value&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>atomic<sp/>capture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>value_;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_<sp/>+=<sp/>in;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>T<sp/>add_fetch(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>tmp;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>atomic<sp/>capture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_<sp/>+=<sp/>in;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>value_;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>T<sp/>fetch_sub(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>tmp;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-value&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>atomic<sp/>capture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>value_;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_<sp/>-=<sp/>in;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>T<sp/>sub_fetch(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>tmp;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>atomic<sp/>capture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_<sp/>-=<sp/>in;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>value_;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pre-increment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>T<sp/>operator++()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fetch_add(1)<sp/>+<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>T<sp/>operator--()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fetch_sub(1)<sp/>-<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>post-increment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>T<sp/>operator++(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fetch_add(1);<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>T<sp/>operator--(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fetch_sub(1);<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>operators<sp/>+=,<sp/>-=<sp/>(pre-increment<sp/>type<sp/>operation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>T<sp/>operator+=(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fetch_add(val)<sp/>+<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>T<sp/>operator-=(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fetch_sub(val)<sp/>+<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>T()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>load();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>T<sp/>load(std::memory_order<sp/>order<sp/>=<sp/>std::memory_order_seq_cst)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>tmp;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>atomic<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>value_;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>store(T<sp/>in,<sp/>std::memory_order<sp/>order<sp/>=<sp/>std::memory_order_seq_cst)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>atomic<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>T<sp/>operator=(T<sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>store(in);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compare_exchange_strong(</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>T&amp;<sp/>expected,<sp/>T<sp/>desired,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memory_order<sp/>success<sp/>=<sp/>std::memory_order_seq_cst,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memory_order<sp/>failure<sp/>=<sp/>std::memory_order_seq_cst</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cas_succeed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>critical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_<sp/>==<sp/>expected)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_<sp/>=<sp/>desired;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cas_succeed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cas_succeed;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Serializer&gt;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecheckpoint_1a075da4e7344cf037943362517e606c3a" kindref="member">serialize</ref>(Serializer&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>|<sp/>value_;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>T<sp/>value_;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">}}}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::util::atomic<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*vt_check_enabled(openmp)*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_VT_UTILS_ATOMIC_OMP_ATOMIC_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/vt/utils/atomic/omp_atomic.h"/>
  </compounddef>
</doxygen>
