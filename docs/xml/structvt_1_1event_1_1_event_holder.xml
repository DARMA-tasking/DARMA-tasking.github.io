<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1event_1_1_event_holder" kind="struct" language="C++" prot="public">
    <compoundname>vt::event::EventHolder</compoundname>
    <includes refid="event__holder_8h" local="no">event_holder.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1event_1_1_event_holder_1adfdec23d67b016b1f028694d5ca5bcff" prot="public" static="no">
        <type><ref refid="structvt_1_1event_1_1_event_record" kindref="compound">EventRecord</ref></type>
        <definition>using vt::event::EventHolder::EventRecordType =  EventRecord</definition>
        <argsstring></argsstring>
        <name>EventRecordType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_holder.h" line="56" column="1" bodyfile="src/vt/event/event_holder.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1event_1_1_event_holder_1a89949c85549018aad229356105187d50" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1event_1_1_event_holder_1adfdec23d67b016b1f028694d5ca5bcff" kindref="member">EventRecordType</ref> &gt;</type>
        <definition>using vt::event::EventHolder::EventRecordPtrType =  std::unique_ptr&lt;EventRecordType&gt;</definition>
        <argsstring></argsstring>
        <name>EventRecordPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_holder.h" line="57" column="1" bodyfile="src/vt/event/event_holder.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1event_1_1_event_holder_1ae0e2d5fe3bd5792118116105a0a09db7" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> &gt;</type>
        <definition>using vt::event::EventHolder::ActionContainerType =  std::vector&lt;ActionType&gt;</definition>
        <argsstring></argsstring>
        <name>ActionContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_holder.h" line="58" column="1" bodyfile="src/vt/event/event_holder.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1event_1_1_event_holder_1a62cebec55c3a8a4a54423d11504fb4ea" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1event_1_1_event_holder_1a89949c85549018aad229356105187d50" kindref="member">EventRecordPtrType</ref></type>
        <definition>EventRecordPtrType vt::event::EventHolder::event_</definition>
        <argsstring></argsstring>
        <name>event_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_holder.h" line="78" column="1" bodyfile="src/vt/event/event_holder.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1event_1_1_event_holder_1ab2badf41e04556c851639ea432768560" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1event_1_1_event_holder_1ae0e2d5fe3bd5792118116105a0a09db7" kindref="member">ActionContainerType</ref></type>
        <definition>ActionContainerType vt::event::EventHolder::actions_</definition>
        <argsstring></argsstring>
        <name>actions_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_holder.h" line="81" column="1" bodyfile="src/vt/event/event_holder.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1event_1_1_event_holder_1aba66e34b2e3f90d418430be281ccb9b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::event::EventHolder::EventHolder</definition>
        <argsstring>()=default</argsstring>
        <name>EventHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_holder.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_holder_1a11cef5f8c68e7052e0756c0a7506a278" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::event::EventHolder::EventHolder</definition>
        <argsstring>(EventRecordPtrType in_event)</argsstring>
        <name>EventHolder</name>
        <param>
          <type><ref refid="structvt_1_1event_1_1_event_holder_1a89949c85549018aad229356105187d50" kindref="member">EventRecordPtrType</ref></type>
          <declname>in_event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_holder.h" line="62" column="1" bodyfile="src/vt/event/event_holder.h" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_holder_1ac679f89c2b133834d0a10181a80c5d47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1event_1_1_event_holder_1adfdec23d67b016b1f028694d5ca5bcff" kindref="member">EventRecordType</ref> *</type>
        <definition>EventHolder::EventRecordType * vt::event::EventHolder::get_event</definition>
        <argsstring>() const</argsstring>
        <name>get_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_holder.h" line="66" column="1" bodyfile="src/vt/event/event_holder.cc" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_holder_1aa5563adb9da7193d0a8260424d756c51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::event::EventHolder::attachAction</definition>
        <argsstring>(ActionType action)</argsstring>
        <name>attachAction</name>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_holder.h" line="67" column="1" bodyfile="src/vt/event/event_holder.cc" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_holder_1a6a9295755ee849b769c7e5ad1c25ee08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::event::EventHolder::makeReadyTrigger</definition>
        <argsstring>()</argsstring>
        <name>makeReadyTrigger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_holder.h" line="68" column="1" bodyfile="src/vt/event/event_holder.cc" bodystart="58" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_holder_1a39cab4f8ac00152657fcb2e49497f049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::event::EventHolder::executeActions</definition>
        <argsstring>()</argsstring>
        <name>executeActions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_holder.h" line="69" column="1" bodyfile="src/vt/event/event_holder.cc" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_holder_1a20420fda8b6b3165386608e62008ba79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Serializer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::event::EventHolder::serialize</definition>
        <argsstring>(Serializer &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>Serializer &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_holder.h" line="72" column="1" bodyfile="src/vt/event/event_holder.h" bodystart="72" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/event/event_holder.h" line="55" column="1" bodyfile="src/vt/event/event_holder.h" bodystart="55" bodyend="82"/>
    <listofallmembers>
      <member refid="structvt_1_1event_1_1_event_holder_1ae0e2d5fe3bd5792118116105a0a09db7" prot="public" virt="non-virtual"><scope>vt::event::EventHolder</scope><name>ActionContainerType</name></member>
      <member refid="structvt_1_1event_1_1_event_holder_1ab2badf41e04556c851639ea432768560" prot="private" virt="non-virtual"><scope>vt::event::EventHolder</scope><name>actions_</name></member>
      <member refid="structvt_1_1event_1_1_event_holder_1aa5563adb9da7193d0a8260424d756c51" prot="public" virt="non-virtual"><scope>vt::event::EventHolder</scope><name>attachAction</name></member>
      <member refid="structvt_1_1event_1_1_event_holder_1a62cebec55c3a8a4a54423d11504fb4ea" prot="private" virt="non-virtual"><scope>vt::event::EventHolder</scope><name>event_</name></member>
      <member refid="structvt_1_1event_1_1_event_holder_1aba66e34b2e3f90d418430be281ccb9b1" prot="public" virt="non-virtual"><scope>vt::event::EventHolder</scope><name>EventHolder</name></member>
      <member refid="structvt_1_1event_1_1_event_holder_1a11cef5f8c68e7052e0756c0a7506a278" prot="public" virt="non-virtual"><scope>vt::event::EventHolder</scope><name>EventHolder</name></member>
      <member refid="structvt_1_1event_1_1_event_holder_1a89949c85549018aad229356105187d50" prot="public" virt="non-virtual"><scope>vt::event::EventHolder</scope><name>EventRecordPtrType</name></member>
      <member refid="structvt_1_1event_1_1_event_holder_1adfdec23d67b016b1f028694d5ca5bcff" prot="public" virt="non-virtual"><scope>vt::event::EventHolder</scope><name>EventRecordType</name></member>
      <member refid="structvt_1_1event_1_1_event_holder_1a39cab4f8ac00152657fcb2e49497f049" prot="public" virt="non-virtual"><scope>vt::event::EventHolder</scope><name>executeActions</name></member>
      <member refid="structvt_1_1event_1_1_event_holder_1ac679f89c2b133834d0a10181a80c5d47" prot="public" virt="non-virtual"><scope>vt::event::EventHolder</scope><name>get_event</name></member>
      <member refid="structvt_1_1event_1_1_event_holder_1a6a9295755ee849b769c7e5ad1c25ee08" prot="public" virt="non-virtual"><scope>vt::event::EventHolder</scope><name>makeReadyTrigger</name></member>
      <member refid="structvt_1_1event_1_1_event_holder_1a20420fda8b6b3165386608e62008ba79" prot="public" virt="non-virtual"><scope>vt::event::EventHolder</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
