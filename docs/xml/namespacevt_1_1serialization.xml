<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacevt_1_1serialization" kind="namespace" language="C++">
    <compoundname>vt::serialization</compoundname>
    <innerclass refid="structvt_1_1serialization_1_1_byte_copyable_traits" prot="public">vt::serialization::ByteCopyableTraits</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1_byte_copy_trait" prot="public">vt::serialization::ByteCopyTrait</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1_byte_serialized_buffer" prot="public">vt::serialization::ByteSerializedBuffer</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1_deser_traits" prot="public">vt::serialization::DeserTraits</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1has_byte_copy_trait" prot="public">vt::serialization::hasByteCopyTrait</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1is_tuple" prot="public">vt::serialization::isTuple</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1is_tuple_3_01std_1_1tuple_3_01_args_8_8_8_01_4_01_4" prot="public">vt::serialization::isTuple&lt; std::tuple&lt; Args... &gt; &gt;</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1is_vector" prot="public">vt::serialization::isVector</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1is_vector_3_01std_1_1vector_3_01_u_01_4_01_4" prot="public">vt::serialization::isVector&lt; std::vector&lt; U &gt; &gt;</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1_msg_sizer" prot="public">vt::serialization::MsgSizer</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1_none_vrt" prot="public">vt::serialization::NoneVrt</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1_not_byte_copy_trait" prot="public">vt::serialization::NotByteCopyTrait</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1_serialization_traits" prot="public">vt::serialization::SerializationTraits</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1_serialized_data_msg_any" prot="public">vt::serialization::SerializedDataMsgAny</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1_serialized_messenger" prot="public">vt::serialization::SerializedMessenger</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1_serial_payload_msg" prot="public">vt::serialization::SerialPayloadMsg</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1_size" prot="public">vt::serialization::Size</innerclass>
    <innerclass refid="structvt_1_1serialization_1_1_size_3_01_msg_t_00_01typename_01std_1_1enable__if__t_3_01std_1_1true__type_01_4_4" prot="public">vt::serialization::Size&lt; MsgT, typename std::enable_if_t&lt; std::true_type &gt;&gt;</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacevt_1_1serialization_1a56d2aee859dc963c2b5fad82649dd79a" prot="public" static="no">
        <type><ref refid="structvt_1_1serialization_1_1_serialized_data_msg_any" kindref="compound">SerializedDataMsgAny</ref>&lt; T, <ref refid="namespacevt_1a3a3ddfef40b4c90915fa43cdd5f129ea" kindref="member">Message</ref> &gt;</type>
        <definition>using vt::serialization::SerializedDataMsg = typedef SerializedDataMsgAny&lt;T, Message&gt;</definition>
        <argsstring></argsstring>
        <name>SerializedDataMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/messaging/serialized_data_msg.h" line="71" column="1" bodyfile="src/vt/serialization/messaging/serialized_data_msg.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1serialization_1aaa03b9b407ed5776043c163629312e40" prot="public" static="no">
        <type>int64_t</type>
        <definition>using vt::serialization::NumBytesType = typedef int64_t</definition>
        <argsstring></argsstring>
        <name>NumBytesType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/messaging/serialized_data_msg.h" line="73" column="1" bodyfile="src/vt/serialization/messaging/serialized_data_msg.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1serialization_1af3a0dfd4a0d3fa09c75edba0dc1b7fec" prot="public" static="no">
        <type><ref refid="structvt_1_1serialization_1_1_serial_payload_msg" kindref="compound">SerialPayloadMsg</ref>&lt; UserMsgT, <ref refid="structvt_1_1serialization_1_1_serialized_data_msg_any" kindref="compound">SerializedDataMsgAny</ref>&lt; UserMsgT, BaseEagerMsgT &gt;, serialized_msg_eager_size &gt;</type>
        <definition>using vt::serialization::SerialEagerPayloadMsg = typedef SerialPayloadMsg&lt; UserMsgT, SerializedDataMsgAny&lt;UserMsgT, BaseEagerMsgT&gt;, serialized_msg_eager_size &gt;</definition>
        <argsstring></argsstring>
        <name>SerialEagerPayloadMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/messaging/serialized_data_msg.h" line="94" column="1" bodyfile="src/vt/serialization/messaging/serialized_data_msg.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1serialization_1ac8b37425f8316a800cdb0b0f0f8a6438" prot="public" static="no">
        <type><ref refid="namespacevt_1_1serialization_1af3a0dfd4a0d3fa09c75edba0dc1b7fec" kindref="member">SerialEagerPayloadMsg</ref>&lt; MsgT, BaseEagerMsgT &gt;</type>
        <definition>using vt::serialization::SerializedEagerMsg = typedef SerialEagerPayloadMsg&lt;MsgT, BaseEagerMsgT&gt;</definition>
        <argsstring></argsstring>
        <name>SerializedEagerMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/messaging/serialized_messenger.h" line="63" column="1" bodyfile="src/vt/serialization/messaging/serialized_messenger.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1serialization_1a009aa1de8d42a3c97643b947fcc6f0b6" prot="public" static="no">
        <type>std::function&lt; <ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref>(<ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; <ref refid="namespacevt_1_1serialization_1ac8b37425f8316a800cdb0b0f0f8a6438" kindref="member">SerializedEagerMsg</ref>&lt; MsgT, BaseEagerMsgT &gt; &gt; msg)&gt;</type>
        <definition>using vt::serialization::ActionEagerSend = typedef std::function&lt;messaging::PendingSend( MsgSharedPtr&lt;SerializedEagerMsg&lt;MsgT,BaseEagerMsgT&gt; &gt; msg )&gt;</definition>
        <argsstring></argsstring>
        <name>ActionEagerSend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/messaging/serialized_messenger.h" line="66" column="1" bodyfile="src/vt/serialization/messaging/serialized_messenger.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1serialization_1ad4f189ca4817d31b73436c92bca55deb" prot="public" static="no">
        <type>std::function&lt; <ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref>(<ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref>)&gt;</type>
        <definition>using vt::serialization::ActionNodeSendType = typedef std::function&lt;messaging::PendingSend(NodeType)&gt;</definition>
        <argsstring></argsstring>
        <name>ActionNodeSendType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/messaging/serialized_messenger.h" line="69" column="1" bodyfile="src/vt/serialization/messaging/serialized_messenger.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1serialization_1afffcac0da80b78e77ef8043dba4e814f" prot="public" static="no">
        <type>std::function&lt; <ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref>(<ref refid="namespacevt_1_1serialization_1ad4f189ca4817d31b73436c92bca55deb" kindref="member">ActionNodeSendType</ref>)&gt;</type>
        <definition>using vt::serialization::ActionDataSend = typedef std::function&lt;messaging::PendingSend(ActionNodeSendType)&gt;</definition>
        <argsstring></argsstring>
        <name>ActionDataSend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/messaging/serialized_messenger.h" line="70" column="1" bodyfile="src/vt/serialization/messaging/serialized_messenger.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1serialization_1a8f2372c7f89aee28287323667fac2cf5" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1serialization_1_1_byte_serialized_buffer" kindref="compound">ByteSerializedBuffer</ref> &gt;</type>
        <definition>using vt::serialization::ByteSerializedBufferPtrType = typedef std::unique_ptr&lt;ByteSerializedBuffer&gt;</definition>
        <argsstring></argsstring>
        <name>ByteSerializedBufferPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="93" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1serialization_1a88fa9b491e54f71b1a16d8464e5fc0a9" prot="public" static="no">
        <type><ref refid="namespacevt_1_1serialization_1a8f2372c7f89aee28287323667fac2cf5" kindref="member">ByteSerializedBufferPtrType</ref></type>
        <definition>using vt::serialization::BufferPtrType = typedef ByteSerializedBufferPtrType</definition>
        <argsstring></argsstring>
        <name>BufferPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="94" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1serialization_1a74f8d1a55940f9c38fc29522de66d926" prot="public" static="no">
        <type>::<ref refid="namespaceserialization_1_1interface_1a718748616a908c35e6080b71d7790a76" kindref="member">serialization::interface::SerialByteType</ref></type>
        <definition>using vt::serialization::SerialByteType = typedef ::serialization::interface::SerialByteType</definition>
        <argsstring></argsstring>
        <name>SerialByteType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/serialization.h" line="61" column="1" bodyfile="src/vt/serialization/serialization.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1serialization_1aecee092642ad50f51559baefddd85c22" prot="public" static="yes" mutable="no">
        <type>constexpr SizeType const</type>
        <definition>constexpr SizeType const vt::serialization::serialized_msg_eager_size</definition>
        <argsstring></argsstring>
        <name>serialized_msg_eager_size</name>
        <initializer>= 128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/messaging/serialized_data_msg.h" line="56" column="1" bodyfile="src/vt/serialization/messaging/serialized_data_msg.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1serialization_1a1826f75bcb9d502c5d979be9928e32a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename BufferT</type>
          </param>
        </templateparamlist>
        <type>std::unique_ptr&lt; BufferT &gt;</type>
        <definition>static std::unique_ptr&lt;BufferT&gt; vt::serialization::serializeByte</definition>
        <argsstring>(T *target, bool hasSize=false, SizeType inSize=0)</argsstring>
        <name>serializeByte</name>
        <param>
          <type>T *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasSize</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>SizeType</type>
          <declname>inSize</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/serialization/mock_serializer.h" line="97" column="1" bodyfile="src/vt/serialization/mock_serializer.h" bodystart="97" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/serialization/auto_sizing/sizing.h" line="57" column="1"/>
  </compounddef>
</doxygen>
