<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structcheckpoint_1_1_memory_serializer" kind="struct" language="C++" prot="public">
    <compoundname>checkpoint::MemorySerializer</compoundname>
    <basecompoundref refid="structcheckpoint_1_1_base_serializer" prot="public" virt="non-virtual">checkpoint::BaseSerializer</basecompoundref>
    <derivedcompoundref refid="structcheckpoint_1_1_packer_buffer" prot="public" virt="non-virtual">checkpoint::PackerBuffer&lt; BufferT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structcheckpoint_1_1_unpacker_buffer" prot="public" virt="non-virtual">checkpoint::UnpackerBuffer&lt; BufferT &gt;</derivedcompoundref>
    <includes refid="memory__serializer_8h" local="no">memory_serializer.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structcheckpoint_1_1_memory_serializer_1a6285e7e9821a996f6da9f2e6e59b00c2" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacecheckpoint_1ae57f01cdc0b81776c23b6c7c934c58f5" kindref="member">SerialByteType</ref> *</type>
        <definition>SerialByteType* checkpoint::MemorySerializer::start_</definition>
        <argsstring></argsstring>
        <name>start_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" line="77" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcheckpoint_1_1_memory_serializer_1ab1f121effff21997447187346bbd8237" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacecheckpoint_1ae57f01cdc0b81776c23b6c7c934c58f5" kindref="member">SerialByteType</ref> *</type>
        <definition>SerialByteType* checkpoint::MemorySerializer::cur_</definition>
        <argsstring></argsstring>
        <name>cur_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" line="80" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structcheckpoint_1_1_memory_serializer_1a9c748be7a41c032f2a33fbdc0dbd3611" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>checkpoint::MemorySerializer::MemorySerializer</definition>
        <argsstring>(ModeType const &amp;in_mode, SerialByteType *in_start)</argsstring>
        <name>MemorySerializer</name>
        <param>
          <type><ref refid="namespacecheckpoint_1ae2509499ccd8b1dc48fb535bf8aa3059" kindref="member">ModeType</ref> const &amp;</type>
          <declname>in_mode</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1ae57f01cdc0b81776c23b6c7c934c58f5" kindref="member">SerialByteType</ref> *</type>
          <declname>in_start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" line="53" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1_memory_serializer_1ae1532a75ce6849ad1f1ceb7a379e56da" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>checkpoint::MemorySerializer::MemorySerializer</definition>
        <argsstring>(ModeType const &amp;in_mode)</argsstring>
        <name>MemorySerializer</name>
        <param>
          <type><ref refid="namespacecheckpoint_1ae2509499ccd8b1dc48fb535bf8aa3059" kindref="member">ModeType</ref> const &amp;</type>
          <declname>in_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" line="57" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1_memory_serializer_1a075fce46e6d6bcfef43591cf26498d70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacecheckpoint_1ae57f01cdc0b81776c23b6c7c934c58f5" kindref="member">SerialByteType</ref> *</type>
        <definition>SerialByteType* checkpoint::MemorySerializer::getBuffer</definition>
        <argsstring>() const</argsstring>
        <name>getBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" line="61" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1_memory_serializer_1a449eb24e2136febd621983d26e21a4ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void checkpoint::MemorySerializer::initializeBuffer</definition>
        <argsstring>(SerialByteType *const ptr)</argsstring>
        <name>initializeBuffer</name>
        <param>
          <type><ref refid="namespacecheckpoint_1ae57f01cdc0b81776c23b6c7c934c58f5" kindref="member">SerialByteType</ref> *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" line="65" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1_memory_serializer_1a1c6b21009223b371ec79d679448f8319" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacecheckpoint_1ae57f01cdc0b81776c23b6c7c934c58f5" kindref="member">SerialByteType</ref> *</type>
        <definition>SerialByteType* checkpoint::MemorySerializer::getSpotIncrement</definition>
        <argsstring>(SerialSizeType const inc)</argsstring>
        <name>getSpotIncrement</name>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref> const</type>
          <declname>inc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" line="69" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" bodystart="69" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2669">
        <label>checkpoint::UnpackerBuffer&lt; BufferT &gt;</label>
        <link refid="structcheckpoint_1_1_unpacker_buffer"/>
        <childnode refid="2666" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2668">
        <label>checkpoint::PackerBuffer&lt; BufferT &gt;</label>
        <link refid="structcheckpoint_1_1_packer_buffer"/>
        <childnode refid="2666" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2666">
        <label>checkpoint::MemorySerializer</label>
        <link refid="structcheckpoint_1_1_memory_serializer"/>
        <childnode refid="2667" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2667">
        <label>checkpoint::BaseSerializer</label>
        <link refid="structcheckpoint_1_1_base_serializer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2670">
        <label>checkpoint::MemorySerializer</label>
        <link refid="structcheckpoint_1_1_memory_serializer"/>
        <childnode refid="2671" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2671">
        <label>checkpoint::BaseSerializer</label>
        <link refid="structcheckpoint_1_1_base_serializer"/>
      </node>
    </collaborationgraph>
    <location file="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" line="52" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/memory_serializer.h" bodystart="52" bodyend="81"/>
    <listofallmembers>
      <member refid="structcheckpoint_1_1_base_serializer_1ac1d15d1c529fe82280fd9547b3843541" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>addBytes</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a54ef6d9ab0a03d637822dcdacd146763" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>BaseSerializer</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1acb789d8d69ba8b2f43b38af163eee9da" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>contiguousBytes</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a7a18f4ba50fcfd8b37c8a6efc459ccde" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>contiguousTyped</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1ae5f1634cea01bf4e28008320fed7be1d" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>countBytes</name></member>
      <member refid="structcheckpoint_1_1_memory_serializer_1ab1f121effff21997447187346bbd8237" prot="protected" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>cur_</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a1755296c5fbd3cdc5df3390d20c80fae" prot="protected" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>cur_mode_</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a6e98a837a89de1750749e4ef8742489c" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>DispatcherType</name></member>
      <member refid="structcheckpoint_1_1_memory_serializer_1a075fce46e6d6bcfef43591cf26498d70" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>getBuffer</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1ad9a3bf9aa8081b6efdf8a45ba92ef641" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>getMode</name></member>
      <member refid="structcheckpoint_1_1_memory_serializer_1a1c6b21009223b371ec79d679448f8319" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>getSpotIncrement</name></member>
      <member refid="structcheckpoint_1_1_memory_serializer_1a449eb24e2136febd621983d26e21a4ed" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>initializeBuffer</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a76960f01f04457bca6a40d91d2c4b486" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>isFootprinting</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a1a91b7c0fc85cbd31356791bbf288b0e" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>isPacking</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a2d28600a09495b5b9d9b90ae27caa708" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>isSizing</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a36efbc9aa78bd2d4b017ac40dacfe9b7" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>isUnpacking</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a5325585631201d413d7992e8916d6f57" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>isVirtualDisabled</name></member>
      <member refid="structcheckpoint_1_1_memory_serializer_1a9c748be7a41c032f2a33fbdc0dbd3611" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>MemorySerializer</name></member>
      <member refid="structcheckpoint_1_1_memory_serializer_1ae1532a75ce6849ad1f1ceb7a379e56da" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>MemorySerializer</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1aaa856a02f204d9c3892810b87671b3e9" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>ModeType</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1ab16e2ffa62f03f8410b116c637bd4adc" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>setVirtualDisabled</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a375bc80d210beae8ffd46229e800e3a0" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>skip</name></member>
      <member refid="structcheckpoint_1_1_memory_serializer_1a6285e7e9821a996f6da9f2e6e59b00c2" prot="protected" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>start_</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a6ccb8bb1430ac5665aac995b6330bc8a" prot="public" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>usedBufferSize</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1acdffc3101eb51baafe4a13939ba23e70" prot="protected" virt="non-virtual"><scope>checkpoint::MemorySerializer</scope><name>virtual_disabled_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
