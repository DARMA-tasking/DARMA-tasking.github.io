<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::balance::NodeLBData</compoundname>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component" prot="public" virt="non-virtual">vt::runtime::component::Component&lt; NodeLBData &gt;</basecompoundref>
    <includes refid="node__lb__data_8h" local="no">node_lb_data.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a200140e389d08dc8d74db16589e736bc" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref>)&gt;</type>
        <definition>using vt::vrt::collection::balance::NodeLBData::MigrateFnType =  std::function&lt;void(NodeType)&gt;</definition>
        <argsstring></argsstring>
        <name>MigrateFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="81" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1adf6ad57c147c8e9d6b47e07a437bb1a6" prot="public" static="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable" kindref="compound">vt::vrt::collection::storage::Storable</ref></type>
        <definition>using vt::vrt::collection::balance::NodeLBData::StorableType =  vt::vrt::collection::storage::Storable</definition>
        <argsstring></argsstring>
        <name>StorableType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="82" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a72ce69b4edce524cd5960eb3ed856f26" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">objgroup::proxy::Proxy</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data" kindref="compound">NodeLBData</ref> &gt;</type>
        <definition>objgroup::proxy::Proxy&lt;NodeLBData&gt; vt::vrt::collection::balance::NodeLBData::proxy_</definition>
        <argsstring></argsstring>
        <name>proxy_</name>
        <briefdescription>
<para>Local proxy to objgroup. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="270" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a4e325cee830c96b4c4129538367fbf37" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a200140e389d08dc8d74db16589e736bc" kindref="member">MigrateFnType</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDStruct,MigrateFnType&gt; vt::vrt::collection::balance::NodeLBData::node_migrate_</definition>
        <argsstring></argsstring>
        <name>node_migrate_</name>
        <briefdescription>
<para>Local migration type-free lambdas for each object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="272" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a87a5425b7dd71812ba4952340cf01946" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>, <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDStruct,VirtualProxyType&gt; vt::vrt::collection::balance::NodeLBData::node_collection_lookup_</definition>
        <argsstring></argsstring>
        <name>node_collection_lookup_</name>
        <briefdescription>
<para>Map from element ID to the collection&apos;s virtual proxy (untyped) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="274" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a168baa5b6f532b6f37431ef4e7f7e48e" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>, <ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDStruct,ObjGroupProxyType&gt; vt::vrt::collection::balance::NodeLBData::node_objgroup_lookup_</definition>
        <argsstring></argsstring>
        <name>node_objgroup_lookup_</name>
        <briefdescription>
<para>Map from element ID to the objgroup&apos;s proxy (untyped) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="276" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a824c4e280138206d3fae1adb9c7f7e54" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a592736f733df4f90856df90a1fd08905" kindref="member">ElementIDType</ref></type>
        <definition>ElementIDType vt::vrt::collection::balance::NodeLBData::next_elm_</definition>
        <argsstring></argsstring>
        <name>next_elm_</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>The current element ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="278" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a9cccb7e2185485d798da41ca580460a9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::balance::NodeLBData::created_dir_</definition>
        <argsstring></argsstring>
        <name>created_dir_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether the LB data directory has been created. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="280" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a27ccfd9aa7b1cac52d508f7f42c38125" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1util_1_1json_1_1_base_appender" kindref="compound">util::json::BaseAppender</ref> &gt;</type>
        <definition>std::unique_ptr&lt;util::json::BaseAppender&gt; vt::vrt::collection::balance::NodeLBData::lb_data_writer_</definition>
        <argsstring></argsstring>
        <name>lb_data_writer_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>The appender for outputting LB data files in JSON format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="282" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aae1a8f7d4755acb52ece79124c6034c6" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder" kindref="compound">LBDataHolder</ref> &gt;</type>
        <definition>std::unique_ptr&lt;LBDataHolder&gt; vt::vrt::collection::balance::NodeLBData::lb_data_</definition>
        <argsstring></argsstring>
        <name>lb_data_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>The struct that holds all the LB data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="284" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a058aa408a360bb30c48bd210dd0f1e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::balance::NodeLBData::NodeLBData</definition>
        <argsstring>()=default</argsstring>
        <name>NodeLBData</name>
        <briefdescription>
<para>System call to construct <computeroutput><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data" kindref="compound">NodeLBData</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a004ae4be27dfb731b5ddae55dd589e56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string vt::vrt::collection::balance::NodeLBData::name</definition>
        <argsstring>() override</argsstring>
        <name>name</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_name_1a33c06229bb605a2b2ceff68830d6d773">name</reimplements>
        <briefdescription>
<para>Get the name of the component. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="89" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a15795f61151de1c461c16308978d46a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeLBData::registerCollectionInfo</definition>
        <argsstring>(ElementIDStruct id, VirtualProxyType proxy, std::vector&lt; uint64_t &gt; const &amp;index, MigrateFnType migrate_fn)</argsstring>
        <name>registerCollectionInfo</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>std::vector&lt; uint64_t &gt; const &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a200140e389d08dc8d74db16589e736bc" kindref="member">MigrateFnType</ref></type>
          <declname>migrate_fn</declname>
        </param>
        <briefdescription>
<para>Add collection element info. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the element ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the collection proxy </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index for the object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">migrate_fn</parametername>
</parameternamelist>
<parameterdescription>
<para>the migration function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="115" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="241" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1af1c42abc6cf3be1878a39028aed9a659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeLBData::registerObjGroupInfo</definition>
        <argsstring>(ElementIDStruct id, ObjGroupProxyType proxy)</argsstring>
        <name>registerObjGroupInfo</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref></type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
<para>Add objgroup element info. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the element ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the objgroup proxy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="126" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="251" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a70b3e6ebe09346bf2986c10e2384e55b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeLBData::addNodeLBData</definition>
        <argsstring>(ElementIDStruct id, elm::ElementLBData *in, StorableType *storable, SubphaseType focused_subphase=elm::ElementLBData::no_subphase)</argsstring>
        <name>addNodeLBData</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_l_b_data" kindref="compound">elm::ElementLBData</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1adf6ad57c147c8e9d6b47e07a437bb1a6" kindref="member">StorableType</ref> *</type>
          <declname>storable</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref></type>
          <declname>focused_subphase</declname>
          <defval><ref refid="structvt_1_1elm_1_1_element_l_b_data_1af93ba399701c539f3acbe75095e0d080" kindref="member">elm::ElementLBData::no_subphase</ref></defval>
        </param>
        <briefdescription>
<para>Add LB data for element (non-collection) </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the element ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>the LB data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">focused_subphase</parametername>
</parameternamelist>
<parameterdescription>
<para>the focused subphase (optional) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="135" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="258" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aca420505505e0da3efd5388c7212d23d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeLBData::clearLBData</definition>
        <argsstring>()</argsstring>
        <name>clearLBData</name>
        <briefdescription>
<para>Clear/reset all LB data and IDs on this node. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="143" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aa12774fb241886e1995115af7d310564" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeLBData::startIterCleanup</definition>
        <argsstring>(PhaseType phase, unsigned int look_back)</argsstring>
        <name>startIterCleanup</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>look_back</declname>
        </param>
        <briefdescription>
<para>Cleanup after LB runs. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="148" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="119" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1ac3a71fde943f97688823f4dee9e87185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeLBData::outputLBDataForPhase</definition>
        <argsstring>(PhaseType phase)</argsstring>
        <name>outputLBDataForPhase</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Output LB data file for given phase based on instrumented data. </para>        </briefdescription>
        <detaileddescription>
<para>outputs LB data in JSON format that includes task timings, mappings, and communication. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="157" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="226" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a6802b9deda54d1b96280bff0431deab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a592736f733df4f90856df90a1fd08905" kindref="member">ElementIDType</ref></type>
        <definition>ElementIDType vt::vrt::collection::balance::NodeLBData::getNextElm</definition>
        <argsstring>()</argsstring>
        <name>getNextElm</name>
        <briefdescription>
<para>Generate the next object element ID for LB. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="162" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a6a1d3d7f8ae930f1d5f97fafc91e118c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a5339303db2e1ce964d783a53fd74e6b1" kindref="member">LoadMapType</ref> &gt; const  *</type>
        <definition>std::unordered_map&lt; PhaseType, LoadMapType &gt; const  * vt::vrt::collection::balance::NodeLBData::getNodeLoad</definition>
        <argsstring>() const</argsstring>
        <name>getNodeLoad</name>
        <briefdescription>
<para>Get stored object loads. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>an observer pointer to the load map </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="169" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a01ac3980585c93769570fd4e76ea9218" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a01ee1fb0ae2da1d2ab7fdca3be9ae351" kindref="member">CommMapType</ref> &gt; const  *</type>
        <definition>std::unordered_map&lt; PhaseType, CommMapType &gt; const  * vt::vrt::collection::balance::NodeLBData::getNodeComm</definition>
        <argsstring>() const</argsstring>
        <name>getNodeComm</name>
        <briefdescription>
<para>Get stored object comm graph. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>an observer pointer to the comm graph </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="176" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a6805869aeb1d424289ddb2b6be653595" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a01ee1fb0ae2da1d2ab7fdca3be9ae351" kindref="member">CommMapType</ref> *</type>
        <definition>CommMapType * vt::vrt::collection::balance::NodeLBData::getNodeComm</definition>
        <argsstring>(PhaseType phase)</argsstring>
        <name>getNodeComm</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Get stored object comm data for a specific phase. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>phase</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the comm data or a nullptr when no data is found </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="185" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a783e8620fff1016d7073a3747379127f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, std::unordered_map&lt; <ref refid="namespacevt_1ae78cbfdf1e57470e33eedb074f2beeba" kindref="member">SubphaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a01ee1fb0ae2da1d2ab7fdca3be9ae351" kindref="member">CommMapType</ref> &gt; &gt; const  *</type>
        <definition>std::unordered_map&lt; PhaseType, std::unordered_map&lt; SubphaseType, CommMapType &gt; &gt; const  * vt::vrt::collection::balance::NodeLBData::getNodeSubphaseComm</definition>
        <argsstring>() const</argsstring>
        <name>getNodeSubphaseComm</name>
        <briefdescription>
<para>Get stored object comm subphase graph. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>an observer pointer to the comm subphase graph </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="192" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1af025247a42d9b3ff6ba476714aad42fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::collection::balance::NodeLBData::hasObjectToMigrate</definition>
        <argsstring>(ElementIDStruct obj_id) const</argsstring>
        <name>hasObjectToMigrate</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>obj_id</declname>
        </param>
        <briefdescription>
<para>Test if this node has an object to migrate. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the object ID struct</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether this node has the object </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="201" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a66619f696c49ce53d005f4b9ebbf12a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::collection::balance::NodeLBData::migrateObjTo</definition>
        <argsstring>(ElementIDStruct obj_id, NodeType to_node)</argsstring>
        <name>migrateObjTo</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>to_node</declname>
        </param>
        <briefdescription>
<para>Migrate an local object to another node. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the object ID struct </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">to_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node to migrate to</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether this node has the object </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="211" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="83" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a7f815606907a31f74428f058c220bf54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
        <definition>VirtualProxyType vt::vrt::collection::balance::NodeLBData::getCollectionProxyForElement</definition>
        <argsstring>(ElementIDStruct obj_id) const</argsstring>
        <name>getCollectionProxyForElement</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>obj_id</declname>
        </param>
        <briefdescription>
<para>Get the collection proxy for a given element ID. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID struct for the element</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the virtual proxy if the element is part of the collection; otherwise <computeroutput>no_vrt_proxy</computeroutput> </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="221" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="308" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a1f410baa1f6a5088a814fdcda87ff6d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref></type>
        <definition>ObjGroupProxyType vt::vrt::collection::balance::NodeLBData::getObjGroupProxyForElement</definition>
        <argsstring>(ElementIDStruct obj_id) const</argsstring>
        <name>getObjGroupProxyForElement</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>obj_id</declname>
        </param>
        <briefdescription>
<para>Get the objgroup proxy for a given element ID. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID struct for the element</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the objgroup proxy if the element is part of an objgroup; otherwise <computeroutput>no_obj_group</computeroutput> </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="231" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="318" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aa489e1252abac8237d30bb0110ad36f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeLBData::initialize</definition>
        <argsstring>() override</argsstring>
        <name>initialize</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_1a7f07384d294e59796add9ce6be2d6410">initialize</reimplements>
        <briefdescription>
<para>Empty default overridden initialize method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="233" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="136" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1ac62cac77080f79e73e303c42ad850155" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeLBData::finalize</definition>
        <argsstring>() override</argsstring>
        <name>finalize</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_1a098e362de01af6054e5491fba671a959">finalize</reimplements>
        <briefdescription>
<para>Empty default overridden finalize method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="234" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="180" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aefbc8058f2d74c3dd6c903e9bfefe0d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeLBData::fatalError</definition>
        <argsstring>() override</argsstring>
        <name>fatalError</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_base_component_1a43eeed44aa64c77f5491abb4f5a39e9a">fatalError</reimplements>
        <briefdescription>
<para>Invoked if an fatal error occurs. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="235" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aa67707482afa83dfa96910ac42337ef0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder" kindref="compound">LBDataHolder</ref> *</type>
        <definition>LBDataHolder* vt::vrt::collection::balance::NodeLBData::getLBData</definition>
        <argsstring>()</argsstring>
        <name>getLBData</name>
        <briefdescription>
<para>Get the underlying LB data. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>For testing only!</para></simplesect>
<simplesect kind="return"><para>the LB data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="244" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="244" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aa6b20e4b1920e9294fb8b933dcd8a35b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeLBData::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="247" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="247" bodyend="255"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aaa93321a91e51b7785bedb1e97786bfa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeLBData::setProxy</definition>
        <argsstring>(objgroup::proxy::Proxy&lt; NodeLBData &gt; in_proxy)</argsstring>
        <name>setProxy</name>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">objgroup::proxy::Proxy</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data" kindref="compound">NodeLBData</ref> &gt;</type>
          <declname>in_proxy</declname>
        </param>
        <briefdescription>
<para>Setup the proxy for <computeroutput><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data" kindref="compound">NodeLBData</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the objgroup proxy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="97" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a90da580e29fec7ae6dad22b071fd5db3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeLBData::createLBDataFile</definition>
        <argsstring>()</argsstring>
        <name>createLBDataFile</name>
        <briefdescription>
<para>Create the LB data file. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="261" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="146" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1ae966be24ee1338594860af5de92d3e12" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::NodeLBData::closeLBDataFile</definition>
        <argsstring>()</argsstring>
        <name>closeLBDataFile</name>
        <briefdescription>
<para>Close the LB data file. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="266" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="196" bodyend="198"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a8c75ad477772cebf032e7c3664d2e62c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data" kindref="compound">NodeLBData</ref> &gt;</type>
        <definition>std::unique_ptr&lt; NodeLBData &gt; vt::vrt::collection::balance::NodeLBData::construct</definition>
        <argsstring>()</argsstring>
        <name>construct</name>
        <briefdescription>
<para>Construct the <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data" kindref="compound">NodeLBData</ref> component. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>pointer to the component </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="105" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="69" bodyend="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A VT component that backs the instrumentation of virtualized entities on each node, such as the objects that the collection manager orchestrates, to provide data to the load balancing framework. The actual instrumentation occurs in <computeroutput>vt::vrt:collection:</computeroutput>:balance::ElementLBData which is composed into the elements of a collection. </para>    </briefdescription>
    <detaileddescription>
<para>Collects LB data/timings on active function/methods for objects and communication between them on each node. After collecting this data, passes it to the load balancing framework, specifically the <computeroutput>*</computeroutput> <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_manager" kindref="compound">vt::vrt::collection::balance::LBManager</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2877">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="2878" relation="public-inheritance">
        </childnode>
        <childnode refid="2881" relation="public-inheritance">
        </childnode>
        <childnode refid="2882" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2875">
        <label>vt::vrt::collection::balance::NodeLBData</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data"/>
        <childnode refid="2876" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2880">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="2878">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="2879" relation="public-inheritance">
        </childnode>
        <childnode refid="2880" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2879">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="2881">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="2882">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="2876">
        <label>vt::runtime::component::Component&lt; NodeLBData &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="2877" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2885">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="2886" relation="public-inheritance">
        </childnode>
        <childnode refid="2889" relation="public-inheritance">
        </childnode>
        <childnode refid="2890" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2883">
        <label>vt::vrt::collection::balance::NodeLBData</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data"/>
        <childnode refid="2884" relation="public-inheritance">
        </childnode>
        <childnode refid="2891" relation="usage">
          <edgelabel>proxy_</edgelabel>
        </childnode>
      </node>
      <node id="2888">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="2891">
        <label>vt::objgroup::proxy::Proxy&lt; vt::vrt::collection::balance::NodeLBData &gt;</label>
        <link refid="structvt_1_1objgroup_1_1proxy_1_1_proxy"/>
      </node>
      <node id="2886">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="2887" relation="public-inheritance">
        </childnode>
        <childnode refid="2888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2887">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="2889">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="2890">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="2884">
        <label>vt::runtime::component::Component&lt; NodeLBData &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="2885" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/balance/node_lb_data.h" line="80" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.h" bodystart="80" bodyend="285"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a70b3e6ebe09346bf2986c10e2384e55b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>addNodeLBData</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aca420505505e0da3efd5388c7212d23d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>clearLBData</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1ae966be24ee1338594860af5de92d3e12" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>closeLBDataFile</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ab954824329584814bb652ea810cd62e3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1a94c1d493860adff6ae69c5eb31bb3f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1ac9c39c6eafc72a1a240ed67ea12b3e66" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>component_id_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a8c75ad477772cebf032e7c3664d2e62c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>construct</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a9cccb7e2185485d798da41ca580460a9" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>created_dir_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a90da580e29fec7ae6dad22b071fd5db3" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>createLBDataFile</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ad95ea698535524d0f82c5da9beaaaf37" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>DiagnosticBasePtrType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>dumpState</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aefbc8058f2d74c3dd6c903e9bfefe0d2" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>fatalError</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1ac62cac77080f79e73e303c42ad850155" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>finalize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a1d6951af40ad0b4020860c0b21b1a85c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>foreachDiagnostic</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a7f815606907a31f74428f058c220bf54" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>getCollectionProxyForElement</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1a45ab90398777ffdbb2ad5b62fe183d99" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>getComponentID</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a9c1f4174ac87bb6ae0ec186a08adbbbb" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>getDiagnosticsFootprint</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aa67707482afa83dfa96910ac42337ef0" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>getLBData</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a6802b9deda54d1b96280bff0431deab5" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>getNextElm</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a01ac3980585c93769570fd4e76ea9218" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>getNodeComm</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a6805869aeb1d424289ddb2b6be653595" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>getNodeComm</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a6a1d3d7f8ae930f1d5f97fafc91e118c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>getNodeLoad</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a783e8620fff1016d7073a3747379127f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>getNodeSubphaseComm</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a1f410baa1f6a5088a814fdcda87ff6d4" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>getObjGroupProxyForElement</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1af025247a42d9b3ff6ba476714aad42fa" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>hasObjectToMigrate</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aa489e1252abac8237d30bb0110ad36f9" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>initialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aae1a8f7d4755acb52ece79124c6034c6" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>lb_data_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a27ccfd9aa7b1cac52d508f7f42c38125" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>lb_data_writer_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a200140e389d08dc8d74db16589e736bc" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>MigrateFnType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a66619f696c49ce53d005f4b9ebbf12a2" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>migrateObjTo</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a004ae4be27dfb731b5ddae55dd589e56" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>name</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a824c4e280138206d3fae1adb9c7f7e54" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>next_elm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a87a5425b7dd71812ba4952340cf01946" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>node_collection_lookup_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a4e325cee830c96b4c4129538367fbf37" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>node_migrate_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a168baa5b6f532b6f37431ef4e7f7e48e" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>node_objgroup_lookup_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a058aa408a360bb30c48bd210dd0f1e25" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>NodeLBData</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1ac3a71fde943f97688823f4dee9e87185" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>outputLBDataForPhase</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a5a15bd0369a9d3765a6c70249bada96f" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>pollable</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a4e64b5a12ffc1874065aa8b09e6309a9" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>preDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1dab11d9eb5bed8dfd5a3bb8fdf67f5a" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>progress</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a72ce69b4edce524cd5960eb3ed856f26" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>proxy_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1af9d694f9d62d973a2cde6e52c55bef14" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>reducer</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1a15795f61151de1c461c16308978d46a4" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>registerCollectionInfo</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa2cd54632710e7cdf1b20dfb676c752c" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>registerCounter</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1abb1ee7f09f05c143dbdfd3346f6cdcba" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>registerCounterT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ab71509224f5716107ef5c781ba5ff487" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>registerDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a20417bbb4fe4c4d7648aef3a2699b787" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>registerGauge</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa220905292aeb726254d3dff2e672b00" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>registerGaugeT</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1af1c42abc6cf3be1878a39028aed9a659" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>registerObjGroupInfo</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a5c6035a56d54cc3de270efedad3f026e" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>registerTimer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a328ecca78c6aa309bb764f3dde083c3e" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>registerTimerT</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aa6b20e4b1920e9294fb8b933dcd8a35b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>serialize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1abe85836f57c42a695fdc292cd78b10cb" prot="public" virt="non-virtual" ambiguityscope="Component&lt; NodeLBData &gt;::"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aaa93321a91e51b7785bedb1e97786bfa" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>setProxy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1aa12774fb241886e1995115af7d310564" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>startIterCleanup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aad3974307ab3b2e1df389a91310f68c2" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>startup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ac969a635e579cf7be3af696f500bf260" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>staticInit</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data_1adf6ad57c147c8e9d6b47e07a437bb1a6" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>StorableType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a2bcd1016fcdb6395844d4fd15d84a570" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>UnitType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a97b0e8ff394c8aa04035ff15165eb087" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>updateDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a75e737294bb63e1898d9ac4515f0cf63" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>UpdateType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a9190b5cb499f9cfdacc1e0bd98a1805a" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::NodeLBData</scope><name>~BaseComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
