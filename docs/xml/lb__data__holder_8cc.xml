<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lb__data__holder_8cc" kind="file" language="C++">
    <compoundname>lb_data_holder.cc</compoundname>
    <includes refid="lb__data__holder_8h" local="yes">vt/vrt/collection/balance/lb_data_holder.h</includes>
    <includes refid="context_8h" local="yes">vt/context/context.h</includes>
    <includes local="no">nlohmann/json.hpp</includes>
    <incdepgraph>
      <node id="319823">
        <label>list</label>
      </node>
      <node id="319696">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
      </node>
      <node id="319815">
        <label>atomic</label>
      </node>
      <node id="319769">
        <label>checkpoint/common.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2common_8h"/>
        <childnode refid="319770" relation="include">
        </childnode>
        <childnode refid="319733" relation="include">
        </childnode>
        <childnode refid="319695" relation="include">
        </childnode>
        <childnode refid="319771" relation="include">
        </childnode>
        <childnode refid="319719" relation="include">
        </childnode>
        <childnode refid="319734" relation="include">
        </childnode>
      </node>
      <node id="319747">
        <label>vt/runtime/component/component_pack.h</label>
        <link refid="component__pack_8h"/>
        <childnode refid="319748" relation="include">
        </childnode>
        <childnode refid="319856" relation="include">
        </childnode>
        <childnode refid="319823" relation="include">
        </childnode>
        <childnode refid="319743" relation="include">
        </childnode>
        <childnode refid="319750" relation="include">
        </childnode>
        <childnode refid="319779" relation="include">
        </childnode>
        <childnode refid="319703" relation="include">
        </childnode>
        <childnode refid="319857" relation="include">
        </childnode>
      </node>
      <node id="319856">
        <label>vt/runtime/component/movable_fn.h</label>
        <link refid="movable__fn_8h"/>
      </node>
      <node id="319703">
        <label>functional</label>
      </node>
      <node id="319829">
        <label>queue</label>
      </node>
      <node id="319751">
        <label>vt/runtime/component/component_dep.h</label>
        <link refid="component__dep_8h"/>
        <childnode refid="319749" relation="include">
        </childnode>
      </node>
      <node id="319865">
        <label>vt/messaging/envelope/envelope_get.h</label>
        <link refid="envelope__get_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319861" relation="include">
        </childnode>
        <childnode refid="319862" relation="include">
        </childnode>
        <childnode refid="319866" relation="include">
        </childnode>
      </node>
      <node id="319708">
        <label>vt/epoch/epoch_impl_type.h</label>
        <link refid="epoch__impl__type_8h"/>
        <childnode refid="319695" relation="include">
        </childnode>
        <childnode refid="319709" relation="include">
        </childnode>
      </node>
      <node id="319806">
        <label>checkpoint/dispatch/vrt/derived.h</label>
        <link refid="derived_8h"/>
        <childnode refid="319796" relation="include">
        </childnode>
        <childnode refid="319799" relation="include">
        </childnode>
        <childnode refid="319802" relation="include">
        </childnode>
        <childnode refid="319803" relation="include">
        </childnode>
        <childnode refid="319804" relation="include">
        </childnode>
      </node>
      <node id="319763">
        <label>limits</label>
      </node>
      <node id="319742">
        <label>vt/elm/elm_comm.h</label>
        <link refid="elm__comm_8h"/>
        <childnode refid="319741" relation="include">
        </childnode>
        <childnode refid="319743" relation="include">
        </childnode>
      </node>
      <node id="319833">
        <label>checkpoint/container/string_serialize.h</label>
        <link refid="string__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
      </node>
      <node id="319816">
        <label>checkpoint/container/chrono_serialize.h</label>
        <link refid="chrono__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319817" relation="include">
        </childnode>
      </node>
      <node id="319714">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="319715" relation="include">
        </childnode>
        <childnode refid="319702" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
      </node>
      <node id="319741">
        <label>vt/elm/elm_id.h</label>
        <link refid="elm__id_8h"/>
        <childnode refid="319702" relation="include">
        </childnode>
        <childnode refid="319709" relation="include">
        </childnode>
        <childnode refid="319713" relation="include">
        </childnode>
      </node>
      <node id="319715">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319717" relation="include">
        </childnode>
      </node>
      <node id="319744">
        <label>vt/timing/timing_type.h</label>
        <link refid="timing__type_8h"/>
      </node>
      <node id="319849">
        <label>vt/runtime/component/meter/timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319847" relation="include">
        </childnode>
        <childnode refid="319850" relation="include">
        </childnode>
      </node>
      <node id="319839">
        <label>checkpoint/container/view_serialize.h</label>
        <link refid="view__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319768" relation="include">
        </childnode>
        <childnode refid="319840" relation="include">
        </childnode>
        <childnode refid="319841" relation="include">
        </childnode>
        <childnode refid="319842" relation="include">
        </childnode>
      </node>
      <node id="319799">
        <label>checkpoint/dispatch/vrt/object_registry.h</label>
        <link refid="object__registry_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319796" relation="include">
        </childnode>
        <childnode refid="319800" relation="include">
        </childnode>
        <childnode refid="319703" relation="include">
        </childnode>
        <childnode refid="319717" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
      </node>
      <node id="319850">
        <label>vt/timing/timing.h</label>
        <link refid="timing_8h"/>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319851" relation="include">
        </childnode>
        <childnode refid="319720" relation="include">
        </childnode>
        <childnode refid="319744" relation="include">
        </childnode>
      </node>
      <node id="319768">
        <label>checkpoint/serializers/serializers_headers.h</label>
        <link refid="serializers__headers_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319772" relation="include">
        </childnode>
        <childnode refid="319773" relation="include">
        </childnode>
        <childnode refid="319774" relation="include">
        </childnode>
        <childnode refid="319775" relation="include">
        </childnode>
        <childnode refid="319785" relation="include">
        </childnode>
      </node>
      <node id="319774">
        <label>checkpoint/serializers/sizer.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2serializers_2sizer_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319772" relation="include">
        </childnode>
      </node>
      <node id="319818">
        <label>checkpoint/container/enum_serialize.h</label>
        <link refid="enum__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319768" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
      </node>
      <node id="319770">
        <label>checkpoint/cmake_config.h</label>
      </node>
      <node id="319762">
        <label>vt/utils/adt/histogram_approx.h</label>
        <link refid="histogram__approx_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319717" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319763" relation="include">
        </childnode>
        <childnode refid="319764" relation="include">
        </childnode>
        <childnode refid="319765" relation="include">
        </childnode>
        <childnode refid="319720" relation="include">
        </childnode>
      </node>
      <node id="319772">
        <label>checkpoint/serializers/base_serializer.h</label>
        <link refid="base__serializer_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
        <childnode refid="319733" relation="include">
        </childnode>
      </node>
      <node id="319801">
        <label>checkpoint/traits/reconstructor_traits.h</label>
        <link refid="reconstructor__traits_8h"/>
        <childnode refid="319790" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
      </node>
      <node id="319695">
        <label>cstdint</label>
      </node>
      <node id="319812">
        <label>checkpoint/container/array_serialize.h</label>
        <link refid="array__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319768" relation="include">
        </childnode>
        <childnode refid="319813" relation="include">
        </childnode>
      </node>
      <node id="319761">
        <label>vt/utils/adt/union.h</label>
        <link refid="union_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
      </node>
      <node id="319855">
        <label>vt/runtime/component/progressable.h</label>
        <link refid="progressable_8h"/>
      </node>
      <node id="319854">
        <label>vt/runtime/component/bufferable.h</label>
        <link refid="bufferable_8h"/>
      </node>
      <node id="319745">
        <label>vt/messaging/message/message.h</label>
        <link refid="message_2message_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319746" relation="include">
        </childnode>
        <childnode refid="319859" relation="include">
        </childnode>
        <childnode refid="319886" relation="include">
        </childnode>
        <childnode refid="319887" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
      </node>
      <node id="319736">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="319724" relation="include">
        </childnode>
        <childnode refid="319702" relation="include">
        </childnode>
        <childnode refid="319730" relation="include">
        </childnode>
        <childnode refid="319735" relation="include">
        </childnode>
        <childnode refid="319737" relation="include">
        </childnode>
        <childnode refid="319714" relation="include">
        </childnode>
        <childnode refid="319734" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319739" relation="include">
        </childnode>
        <childnode refid="319720" relation="include">
        </childnode>
      </node>
      <node id="319862">
        <label>vt/messaging/envelope/envelope_base.h</label>
        <link refid="envelope__base_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319861" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
      </node>
      <node id="319690">
        <label>src/vt/vrt/collection/balance/lb_data_holder.cc</label>
        <link refid="lb__data__holder_8cc"/>
        <childnode refid="319691" relation="include">
        </childnode>
        <childnode refid="319868" relation="include">
        </childnode>
        <childnode refid="319889" relation="include">
        </childnode>
      </node>
      <node id="319710">
        <label>vt/epoch/epoch_type.h</label>
        <link refid="epoch__type_8h"/>
        <childnode refid="319711" relation="include">
        </childnode>
        <childnode refid="319708" relation="include">
        </childnode>
        <childnode refid="319713" relation="include">
        </childnode>
      </node>
      <node id="319843">
        <label>checkpoint/container/kokkos_unordered_map_serialize.h</label>
        <link refid="kokkos__unordered__map__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319768" relation="include">
        </childnode>
        <childnode refid="319821" relation="include">
        </childnode>
        <childnode refid="319787" relation="include">
        </childnode>
        <childnode refid="319800" relation="include">
        </childnode>
      </node>
      <node id="319789">
        <label>checkpoint/dispatch/dispatch_serializer.h</label>
        <link refid="dispatch__serializer_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319790" relation="include">
        </childnode>
        <childnode refid="319793" relation="include">
        </childnode>
        <childnode refid="319794" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319733" relation="include">
        </childnode>
      </node>
      <node id="319720">
        <label>fmt-vt/core.h</label>
      </node>
      <node id="319877">
        <label>vt/messaging/envelope/envelope_ref.impl.h</label>
        <link refid="envelope__ref_8impl_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319876" relation="include">
        </childnode>
      </node>
      <node id="319831">
        <label>checkpoint/container/raw_ptr_serialize.h</label>
        <link refid="raw__ptr__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
      </node>
      <node id="319821">
        <label>checkpoint/dispatch/allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="319787" relation="include">
        </childnode>
        <childnode refid="319779" relation="include">
        </childnode>
      </node>
      <node id="319764">
        <label>cmath</label>
      </node>
      <node id="319734">
        <label>cassert</label>
      </node>
      <node id="319731">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="319724" relation="include">
        </childnode>
        <childnode refid="319702" relation="include">
        </childnode>
        <childnode refid="319730" relation="include">
        </childnode>
        <childnode refid="319732" relation="include">
        </childnode>
        <childnode refid="319714" relation="include">
        </childnode>
        <childnode refid="319725" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319734" relation="include">
        </childnode>
        <childnode refid="319720" relation="include">
        </childnode>
      </node>
      <node id="319706">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="319707" relation="include">
        </childnode>
        <childnode refid="319708" relation="include">
        </childnode>
      </node>
      <node id="319811">
        <label>stdexcept</label>
      </node>
      <node id="319724">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="319702" relation="include">
        </childnode>
      </node>
      <node id="319819">
        <label>checkpoint/container/function_serialize.h</label>
        <link refid="function__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319703" relation="include">
        </childnode>
      </node>
      <node id="319800">
        <label>checkpoint/dispatch/reconstructor.h</label>
        <link refid="reconstructor_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319801" relation="include">
        </childnode>
        <childnode refid="319791" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319733" relation="include">
        </childnode>
      </node>
      <node id="319885">
        <label>vt/pool/header/pool_header.h</label>
        <link refid="pool__header_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
      </node>
      <node id="319844">
        <label>checkpoint/checkpoint_api.impl.h</label>
        <link refid="checkpoint__api_8impl_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319767" relation="include">
        </childnode>
        <childnode refid="319778" relation="include">
        </childnode>
        <childnode refid="319777" relation="include">
        </childnode>
        <childnode refid="319779" relation="include">
        </childnode>
      </node>
      <node id="319707">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
        <childnode refid="319702" relation="include">
        </childnode>
      </node>
      <node id="319888">
        <label>nlohmann/json_fwd.hpp</label>
      </node>
      <node id="319775">
        <label>checkpoint/serializers/packer.h</label>
        <link refid="packer_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319776" relation="include">
        </childnode>
        <childnode refid="319777" relation="include">
        </childnode>
        <childnode refid="319780" relation="include">
        </childnode>
        <childnode refid="319781" relation="include">
        </childnode>
        <childnode refid="319782" relation="include">
        </childnode>
        <childnode refid="319783" relation="include">
        </childnode>
      </node>
      <node id="319721">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="319722" relation="include">
        </childnode>
        <childnode refid="319726" relation="include">
        </childnode>
        <childnode refid="319729" relation="include">
        </childnode>
      </node>
      <node id="319716">
        <label>string</label>
      </node>
      <node id="319781">
        <label>checkpoint/buffer/user_buffer.h</label>
        <link refid="user__buffer_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319777" relation="include">
        </childnode>
      </node>
      <node id="319838">
        <label>checkpoint/container/unique_ptr_serialize.h</label>
        <link refid="unique__ptr__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319800" relation="include">
        </childnode>
        <childnode refid="319797" relation="include">
        </childnode>
      </node>
      <node id="319691">
        <label>vt/vrt/collection/balance/lb_data_holder.h</label>
        <link refid="lb__data__holder_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319740" relation="include">
        </childnode>
        <childnode refid="319742" relation="include">
        </childnode>
        <childnode refid="319743" relation="include">
        </childnode>
        <childnode refid="319779" relation="include">
        </childnode>
        <childnode refid="319888" relation="include">
        </childnode>
      </node>
      <node id="319753">
        <label>vt/runtime/component/base.h</label>
        <link refid="src_2vt_2runtime_2component_2base_8h"/>
        <childnode refid="319702" relation="include">
        </childnode>
        <childnode refid="319754" relation="include">
        </childnode>
        <childnode refid="319854" relation="include">
        </childnode>
        <childnode refid="319855" relation="include">
        </childnode>
      </node>
      <node id="319777">
        <label>checkpoint/buffer/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319778" relation="include">
        </childnode>
        <childnode refid="319779" relation="include">
        </childnode>
      </node>
      <node id="319842">
        <label>checkpoint/container/view_traverse_ndim.h</label>
        <link refid="view__traverse__ndim_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319768" relation="include">
        </childnode>
        <childnode refid="319840" relation="include">
        </childnode>
      </node>
      <node id="319826">
        <label>map</label>
      </node>
      <node id="319880">
        <label>vt/scheduler/priority.h</label>
        <link refid="priority_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319813" relation="include">
        </childnode>
        <childnode refid="319719" relation="include">
        </childnode>
      </node>
      <node id="319851">
        <label>EngFormat-Cpp/eng_format.hpp</label>
      </node>
      <node id="319794">
        <label>checkpoint/dispatch/dispatch_serializer_nonbyte.h</label>
        <link refid="dispatch__serializer__nonbyte_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319790" relation="include">
        </childnode>
        <childnode refid="319795" relation="include">
        </childnode>
        <childnode refid="319797" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319733" relation="include">
        </childnode>
        <childnode refid="319734" relation="include">
        </childnode>
      </node>
      <node id="319807">
        <label>checkpoint/dispatch/dispatch_byte_macro.h</label>
        <link refid="dispatch__byte__macro_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
      </node>
      <node id="319737">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="319733" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319717" relation="include">
        </childnode>
        <childnode refid="319738" relation="include">
        </childnode>
      </node>
      <node id="319738">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="319737" relation="include">
        </childnode>
        <childnode refid="319714" relation="include">
        </childnode>
        <childnode refid="319733" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319717" relation="include">
        </childnode>
        <childnode refid="319720" relation="include">
        </childnode>
      </node>
      <node id="319750">
        <label>unordered_set</label>
      </node>
      <node id="319875">
        <label>vt/messaging/envelope/envelope_test.impl.h</label>
        <link refid="envelope__test_8impl_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319867" relation="include">
        </childnode>
      </node>
      <node id="319713">
        <label>fmt-vt/format.h</label>
      </node>
      <node id="319861">
        <label>vt/messaging/envelope/envelope_type.h</label>
        <link refid="envelope__type_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
      </node>
      <node id="319791">
        <label>checkpoint/dispatch/reconstructor_tag.h</label>
        <link refid="reconstructor__tag_8h"/>
      </node>
      <node id="319796">
        <label>checkpoint/dispatch/vrt/registry_common.h</label>
        <link refid="registry__common_8h"/>
        <childnode refid="319712" relation="include">
        </childnode>
      </node>
      <node id="319845">
        <label>vt/runtime/component/diagnostic_meter.h</label>
        <link refid="diagnostic__meter_8h"/>
        <childnode refid="319846" relation="include">
        </childnode>
        <childnode refid="319848" relation="include">
        </childnode>
        <childnode refid="319849" relation="include">
        </childnode>
        <childnode refid="319852" relation="include">
        </childnode>
        <childnode refid="319744" relation="include">
        </childnode>
      </node>
      <node id="319822">
        <label>checkpoint/container/container_serialize.h</label>
        <link refid="container__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319768" relation="include">
        </childnode>
      </node>
      <node id="319694">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="319695" relation="include">
        </childnode>
        <childnode refid="319696" relation="include">
        </childnode>
        <childnode refid="319697" relation="include">
        </childnode>
        <childnode refid="319699" relation="include">
        </childnode>
      </node>
      <node id="319790">
        <label>checkpoint/traits/serializable_traits.h</label>
        <link refid="serializable__traits_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319768" relation="include">
        </childnode>
        <childnode refid="319791" relation="include">
        </childnode>
        <childnode refid="319792" relation="include">
        </childnode>
        <childnode refid="319695" relation="include">
        </childnode>
        <childnode refid="319734" relation="include">
        </childnode>
      </node>
      <node id="319802">
        <label>checkpoint/dispatch/vrt/serializer_registry.h</label>
        <link refid="serializer__registry_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319796" relation="include">
        </childnode>
        <childnode refid="319703" relation="include">
        </childnode>
        <childnode refid="319717" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
      </node>
      <node id="319846">
        <label>vt/runtime/component/meter/counter.h</label>
        <link refid="counter_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319847" relation="include">
        </childnode>
      </node>
      <node id="319709">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="319702" relation="include">
        </childnode>
        <childnode refid="319704" relation="include">
        </childnode>
      </node>
      <node id="319879">
        <label>vt/messaging/envelope/envelope_setup.impl.h</label>
        <link refid="envelope__setup_8impl_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319878" relation="include">
        </childnode>
        <childnode refid="319880" relation="include">
        </childnode>
      </node>
      <node id="319836">
        <label>checkpoint/container/tuple_serialize.h</label>
        <link refid="tuple__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319768" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319719" relation="include">
        </childnode>
      </node>
      <node id="319786">
        <label>checkpoint/serializers/unpacker.impl.h</label>
        <link refid="unpacker_8impl_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319776" relation="include">
        </childnode>
        <childnode refid="319785" relation="include">
        </childnode>
        <childnode refid="319733" relation="include">
        </childnode>
        <childnode refid="319784" relation="include">
        </childnode>
      </node>
      <node id="319834">
        <label>checkpoint/container/thread_serialize.h</label>
        <link refid="thread__serialize_8h"/>
        <childnode refid="319835" relation="include">
        </childnode>
        <childnode refid="319769" relation="include">
        </childnode>
      </node>
      <node id="319797">
        <label>checkpoint/dispatch/vrt/virtual_serialize.h</label>
        <link refid="virtual__serialize_8h"/>
        <childnode refid="319798" relation="include">
        </childnode>
        <childnode refid="319806" relation="include">
        </childnode>
      </node>
      <node id="319752">
        <label>vt/runtime/component/component_traits.h</label>
        <link refid="component__traits_8h"/>
        <childnode refid="319712" relation="include">
        </childnode>
      </node>
      <node id="319809">
        <label>checkpoint/dispatch/type_registry.h</label>
        <link refid="type__registry_8h"/>
        <childnode refid="319810" relation="include">
        </childnode>
        <childnode refid="319695" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319743" relation="include">
        </childnode>
      </node>
      <node id="319756">
        <label>vt/runtime/component/component_reduce.h</label>
        <link refid="component__reduce_8h"/>
        <childnode refid="319702" relation="include">
        </childnode>
      </node>
      <node id="319749">
        <label>vt/runtime/component/component_registry.h</label>
        <link refid="component__registry_8h"/>
        <childnode refid="319702" relation="include">
        </childnode>
        <childnode refid="319717" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319750" relation="include">
        </childnode>
      </node>
      <node id="319693">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="319694" relation="include">
        </childnode>
        <childnode refid="319700" relation="include">
        </childnode>
      </node>
      <node id="319863">
        <label>vt/messaging/envelope/envelope_set.h</label>
        <link refid="envelope__set_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319861" relation="include">
        </childnode>
        <childnode refid="319862" relation="include">
        </childnode>
        <childnode refid="319864" relation="include">
        </childnode>
      </node>
      <node id="319723">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="319716" relation="include">
        </childnode>
      </node>
      <node id="319702">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="319695" relation="include">
        </childnode>
        <childnode refid="319703" relation="include">
        </childnode>
      </node>
      <node id="319727">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="319701" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
        <childnode refid="319728" relation="include">
        </childnode>
      </node>
      <node id="319804">
        <label>checkpoint/dispatch/vrt/serialize_instantiator.h</label>
        <link refid="serialize__instantiator_8h"/>
        <childnode refid="319802" relation="include">
        </childnode>
        <childnode refid="319805" relation="include">
        </childnode>
      </node>
      <node id="319778">
        <label>checkpoint/checkpoint_api.h</label>
        <link refid="checkpoint__api_8h"/>
        <childnode refid="319733" relation="include">
        </childnode>
        <childnode refid="319703" relation="include">
        </childnode>
        <childnode refid="319779" relation="include">
        </childnode>
      </node>
      <node id="319718">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
        <childnode refid="319719" relation="include">
        </childnode>
      </node>
      <node id="319852">
        <label>vt/runtime/component/meter/counter_gauge.h</label>
        <link refid="counter__gauge_8h"/>
        <childnode refid="319846" relation="include">
        </childnode>
        <childnode refid="319848" relation="include">
        </childnode>
      </node>
      <node id="319860">
        <label>vt/messaging/envelope/envelope.h</label>
        <link refid="envelope_2envelope_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319861" relation="include">
        </childnode>
        <childnode refid="319862" relation="include">
        </childnode>
        <childnode refid="319863" relation="include">
        </childnode>
        <childnode refid="319865" relation="include">
        </childnode>
        <childnode refid="319867" relation="include">
        </childnode>
        <childnode refid="319876" relation="include">
        </childnode>
        <childnode refid="319878" relation="include">
        </childnode>
        <childnode refid="319881" relation="include">
        </childnode>
        <childnode refid="319882" relation="include">
        </childnode>
      </node>
      <node id="319722">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="319723" relation="include">
        </childnode>
        <childnode refid="319702" relation="include">
        </childnode>
        <childnode refid="319724" relation="include">
        </childnode>
        <childnode refid="319725" relation="include">
        </childnode>
        <childnode refid="319697" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319720" relation="include">
        </childnode>
      </node>
      <node id="319887">
        <label>typeinfo</label>
      </node>
      <node id="319757">
        <label>vt/runtime/component/diagnostic_types.h</label>
        <link refid="diagnostic__types_8h"/>
        <childnode refid="319695" relation="include">
        </childnode>
      </node>
      <node id="319884">
        <label>vt/messaging/envelope/payload_envelope.h</label>
        <link refid="payload__envelope_8h"/>
        <childnode refid="319860" relation="include">
        </childnode>
      </node>
      <node id="319771">
        <label>cstdio</label>
      </node>
      <node id="319795">
        <label>checkpoint/dispatch/vrt/virtual_serialize_traits.h</label>
        <link refid="virtual__serialize__traits_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319796" relation="include">
        </childnode>
        <childnode refid="319792" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
      </node>
      <node id="319746">
        <label>vt/pool/pool.h</label>
        <link refid="pool_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319747" relation="include">
        </childnode>
        <childnode refid="319858" relation="include">
        </childnode>
        <childnode refid="319885" relation="include">
        </childnode>
        <childnode refid="319717" relation="include">
        </childnode>
        <childnode refid="319695" relation="include">
        </childnode>
        <childnode refid="319734" relation="include">
        </childnode>
        <childnode refid="319779" relation="include">
        </childnode>
      </node>
      <node id="319832">
        <label>checkpoint/container/shared_ptr_serialize.h</label>
        <link refid="shared__ptr__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
      </node>
      <node id="319705">
        <label>tuple</label>
      </node>
      <node id="319783">
        <label>checkpoint/serializers/packer.impl.h</label>
        <link refid="packer_8impl_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319776" relation="include">
        </childnode>
        <childnode refid="319777" relation="include">
        </childnode>
        <childnode refid="319784" relation="include">
        </childnode>
      </node>
      <node id="319805">
        <label>checkpoint/dispatch/vrt/link_derived_to_base_idx.h</label>
        <link refid="link__derived__to__base__idx_8h"/>
        <childnode refid="319802" relation="include">
        </childnode>
      </node>
      <node id="319873">
        <label>vt/utils/tls/tls.impl.h</label>
        <link refid="tls_8impl_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
      </node>
      <node id="319711">
        <label>vt/utils/strong/strong_type.h</label>
        <link refid="strong__type_8h"/>
        <childnode refid="319703" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
      </node>
      <node id="319847">
        <label>vt/runtime/component/meter/stats_pack.h</label>
        <link refid="stats__pack_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
      </node>
      <node id="319700">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="319701" relation="include">
        </childnode>
        <childnode refid="319694" relation="include">
        </childnode>
        <childnode refid="319714" relation="include">
        </childnode>
        <childnode refid="319718" relation="include">
        </childnode>
        <childnode refid="319720" relation="include">
        </childnode>
      </node>
      <node id="319848">
        <label>vt/runtime/component/meter/gauge.h</label>
        <link refid="gauge_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319847" relation="include">
        </childnode>
      </node>
      <node id="319866">
        <label>vt/messaging/envelope/envelope_get.impl.h</label>
        <link refid="envelope__get_8impl_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319865" relation="include">
        </childnode>
      </node>
      <node id="319830">
        <label>stack</label>
      </node>
      <node id="319717">
        <label>vector</label>
      </node>
      <node id="319868">
        <label>vt/context/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="319779" relation="include">
        </childnode>
        <childnode refid="319869" relation="include">
        </childnode>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319747" relation="include">
        </childnode>
        <childnode refid="319870" relation="include">
        </childnode>
        <childnode refid="319871" relation="include">
        </childnode>
        <childnode refid="319874" relation="include">
        </childnode>
      </node>
      <node id="319788">
        <label>checkpoint/dispatch/clean_type.h</label>
        <link refid="clean__type_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
      </node>
      <node id="319793">
        <label>checkpoint/dispatch/dispatch_serializer_byte.h</label>
        <link refid="dispatch__serializer__byte_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319790" relation="include">
        </childnode>
        <childnode refid="319794" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319733" relation="include">
        </childnode>
      </node>
      <node id="319814">
        <label>checkpoint/container/atomic_serialize.h</label>
        <link refid="atomic__serialize_8h"/>
        <childnode refid="319815" relation="include">
        </childnode>
        <childnode refid="319769" relation="include">
        </childnode>
      </node>
      <node id="319719">
        <label>utility</label>
      </node>
      <node id="319837">
        <label>checkpoint/container/vector_serialize.h</label>
        <link refid="vector__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319821" relation="include">
        </childnode>
        <childnode refid="319787" relation="include">
        </childnode>
        <childnode refid="319800" relation="include">
        </childnode>
        <childnode refid="319768" relation="include">
        </childnode>
        <childnode refid="319717" relation="include">
        </childnode>
      </node>
      <node id="319813">
        <label>array</label>
      </node>
      <node id="319876">
        <label>vt/messaging/envelope/envelope_ref.h</label>
        <link refid="envelope__ref_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319861" relation="include">
        </childnode>
        <childnode refid="319862" relation="include">
        </childnode>
        <childnode refid="319877" relation="include">
        </childnode>
      </node>
      <node id="319739">
        <label>sstream</label>
      </node>
      <node id="319828">
        <label>checkpoint/container/queue_serialize.h</label>
        <link refid="queue__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319829" relation="include">
        </childnode>
        <childnode refid="319830" relation="include">
        </childnode>
      </node>
      <node id="319798">
        <label>checkpoint/dispatch/vrt/base.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2vrt_2base_8h"/>
        <childnode refid="319796" relation="include">
        </childnode>
        <childnode refid="319799" relation="include">
        </childnode>
        <childnode refid="319802" relation="include">
        </childnode>
        <childnode refid="319803" relation="include">
        </childnode>
        <childnode refid="319804" relation="include">
        </childnode>
      </node>
      <node id="319755">
        <label>vt/runtime/component/component_name.h</label>
        <link refid="component__name_8h"/>
        <childnode refid="319716" relation="include">
        </childnode>
      </node>
      <node id="319759">
        <label>vt/runtime/component/diagnostic_value.h</label>
        <link refid="diagnostic__value_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319757" relation="include">
        </childnode>
        <childnode refid="319760" relation="include">
        </childnode>
        <childnode refid="319766" relation="include">
        </childnode>
        <childnode refid="319762" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319764" relation="include">
        </childnode>
      </node>
      <node id="319698">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="319792">
        <label>detector_headers.h</label>
      </node>
      <node id="319732">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="319733" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319717" relation="include">
        </childnode>
      </node>
      <node id="319697">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
        <childnode refid="319698" relation="include">
        </childnode>
      </node>
      <node id="319780">
        <label>checkpoint/buffer/managed_buffer.h</label>
        <link refid="managed__buffer_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319777" relation="include">
        </childnode>
        <childnode refid="319779" relation="include">
        </childnode>
      </node>
      <node id="319733">
        <label>cstdlib</label>
      </node>
      <node id="319787">
        <label>checkpoint/dispatch/dispatch.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319777" relation="include">
        </childnode>
        <childnode refid="319788" relation="include">
        </childnode>
        <childnode refid="319789" relation="include">
        </childnode>
        <childnode refid="319807" relation="include">
        </childnode>
        <childnode refid="319800" relation="include">
        </childnode>
        <childnode refid="319703" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319808" relation="include">
        </childnode>
      </node>
      <node id="319726">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="319724" relation="include">
        </childnode>
        <childnode refid="319727" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
      </node>
      <node id="319808">
        <label>checkpoint/dispatch/dispatch.impl.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8impl_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319787" relation="include">
        </childnode>
        <childnode refid="319809" relation="include">
        </childnode>
        <childnode refid="319811" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
      </node>
      <node id="319767">
        <label>checkpoint/checkpoint.h</label>
        <link refid="checkpoint_8h"/>
        <childnode refid="319768" relation="include">
        </childnode>
        <childnode refid="319787" relation="include">
        </childnode>
        <childnode refid="319790" relation="include">
        </childnode>
        <childnode refid="319812" relation="include">
        </childnode>
        <childnode refid="319814" relation="include">
        </childnode>
        <childnode refid="319816" relation="include">
        </childnode>
        <childnode refid="319818" relation="include">
        </childnode>
        <childnode refid="319819" relation="include">
        </childnode>
        <childnode refid="319820" relation="include">
        </childnode>
        <childnode refid="319825" relation="include">
        </childnode>
        <childnode refid="319828" relation="include">
        </childnode>
        <childnode refid="319831" relation="include">
        </childnode>
        <childnode refid="319832" relation="include">
        </childnode>
        <childnode refid="319833" relation="include">
        </childnode>
        <childnode refid="319834" relation="include">
        </childnode>
        <childnode refid="319836" relation="include">
        </childnode>
        <childnode refid="319837" relation="include">
        </childnode>
        <childnode refid="319838" relation="include">
        </childnode>
        <childnode refid="319839" relation="include">
        </childnode>
        <childnode refid="319843" relation="include">
        </childnode>
        <childnode refid="319778" relation="include">
        </childnode>
        <childnode refid="319844" relation="include">
        </childnode>
      </node>
      <node id="319870">
        <label>vt/context/context_attorney_fwd.h</label>
        <link refid="context__attorney__fwd_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
      </node>
      <node id="319883">
        <label>vt/messaging/envelope/envelope_extended_util.impl.h</label>
        <link refid="envelope__extended__util_8impl_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319882" relation="include">
        </childnode>
      </node>
      <node id="319810">
        <label>cstddef</label>
      </node>
      <node id="319881">
        <label>vt/messaging/envelope/envelope_extended.h</label>
        <link refid="envelope__extended_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319861" relation="include">
        </childnode>
        <childnode refid="319862" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
      </node>
      <node id="319825">
        <label>checkpoint/container/map_serialize.h</label>
        <link refid="map__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319821" relation="include">
        </childnode>
        <childnode refid="319768" relation="include">
        </childnode>
        <childnode refid="319822" relation="include">
        </childnode>
        <childnode refid="319826" relation="include">
        </childnode>
        <childnode refid="319743" relation="include">
        </childnode>
        <childnode refid="319827" relation="include">
        </childnode>
        <childnode refid="319750" relation="include">
        </childnode>
      </node>
      <node id="319824">
        <label>deque</label>
      </node>
      <node id="319743">
        <label>unordered_map</label>
      </node>
      <node id="319820">
        <label>checkpoint/container/list_serialize.h</label>
        <link refid="list__serialize_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319821" relation="include">
        </childnode>
        <childnode refid="319768" relation="include">
        </childnode>
        <childnode refid="319822" relation="include">
        </childnode>
        <childnode refid="319823" relation="include">
        </childnode>
        <childnode refid="319824" relation="include">
        </childnode>
      </node>
      <node id="319867">
        <label>vt/messaging/envelope/envelope_test.h</label>
        <link refid="envelope__test_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319868" relation="include">
        </childnode>
        <childnode refid="319861" relation="include">
        </childnode>
        <childnode refid="319862" relation="include">
        </childnode>
        <childnode refid="319875" relation="include">
        </childnode>
      </node>
      <node id="319864">
        <label>vt/messaging/envelope/envelope_set.impl.h</label>
        <link refid="envelope__set_8impl_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319863" relation="include">
        </childnode>
      </node>
      <node id="319858">
        <label>vt/pool/static_sized/memory_pool_equal.h</label>
        <link refid="memory__pool__equal_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319859" relation="include">
        </childnode>
        <childnode refid="319868" relation="include">
        </childnode>
        <childnode refid="319885" relation="include">
        </childnode>
        <childnode refid="319717" relation="include">
        </childnode>
        <childnode refid="319695" relation="include">
        </childnode>
      </node>
      <node id="319782">
        <label>checkpoint/buffer/io_buffer.h</label>
        <link refid="io__buffer_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319777" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
      </node>
      <node id="319701">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="319702" relation="include">
        </childnode>
        <childnode refid="319704" relation="include">
        </childnode>
        <childnode refid="319706" relation="include">
        </childnode>
        <childnode refid="319709" relation="include">
        </childnode>
        <childnode refid="319710" relation="include">
        </childnode>
      </node>
      <node id="319785">
        <label>checkpoint/serializers/unpacker.h</label>
        <link refid="unpacker_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319776" relation="include">
        </childnode>
        <childnode refid="319781" relation="include">
        </childnode>
        <childnode refid="319786" relation="include">
        </childnode>
      </node>
      <node id="319859">
        <label>vt/messaging/envelope.h</label>
        <link refid="envelope_8h"/>
        <childnode refid="319860" relation="include">
        </childnode>
        <childnode refid="319884" relation="include">
        </childnode>
      </node>
      <node id="319817">
        <label>chrono</label>
      </node>
      <node id="319730">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="319702" relation="include">
        </childnode>
        <childnode refid="319724" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319731" relation="include">
        </childnode>
      </node>
      <node id="319869">
        <label>mpi.h</label>
      </node>
      <node id="319878">
        <label>vt/messaging/envelope/envelope_setup.h</label>
        <link refid="envelope__setup_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319861" relation="include">
        </childnode>
        <childnode refid="319862" relation="include">
        </childnode>
        <childnode refid="319879" relation="include">
        </childnode>
      </node>
      <node id="319835">
        <label>thread</label>
      </node>
      <node id="319840">
        <label>checkpoint/container/view_traits_extract.h</label>
        <link refid="view__traits__extract_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319768" relation="include">
        </childnode>
      </node>
      <node id="319871">
        <label>vt/utils/tls/tls.h</label>
        <link refid="tls_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319872" relation="include">
        </childnode>
        <childnode refid="319873" relation="include">
        </childnode>
      </node>
      <node id="319857">
        <label>vt/runtime/component/component_pack.impl.h</label>
        <link refid="component__pack_8impl_8h"/>
        <childnode refid="319747" relation="include">
        </childnode>
      </node>
      <node id="319704">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="319702" relation="include">
        </childnode>
        <childnode refid="319695" relation="include">
        </childnode>
        <childnode refid="319703" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
      </node>
      <node id="319760">
        <label>vt/runtime/component/diagnostic_erased_value.h</label>
        <link refid="diagnostic__erased__value_8h"/>
        <childnode refid="319757" relation="include">
        </childnode>
        <childnode refid="319761" relation="include">
        </childnode>
        <childnode refid="319762" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
      </node>
      <node id="319754">
        <label>vt/runtime/component/diagnostic.h</label>
        <link refid="diagnostic_8h"/>
        <childnode refid="319755" relation="include">
        </childnode>
        <childnode refid="319756" relation="include">
        </childnode>
        <childnode refid="319757" relation="include">
        </childnode>
        <childnode refid="319758" relation="include">
        </childnode>
        <childnode refid="319759" relation="include">
        </childnode>
        <childnode refid="319845" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319779" relation="include">
        </childnode>
        <childnode refid="319743" relation="include">
        </childnode>
        <childnode refid="319703" relation="include">
        </childnode>
        <childnode refid="319853" relation="include">
        </childnode>
      </node>
      <node id="319712">
        <label>type_traits</label>
      </node>
      <node id="319827">
        <label>set</label>
      </node>
      <node id="319882">
        <label>vt/messaging/envelope/envelope_extended_util.h</label>
        <link refid="envelope__extended__util_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319861" relation="include">
        </childnode>
        <childnode refid="319862" relation="include">
        </childnode>
        <childnode refid="319881" relation="include">
        </childnode>
        <childnode refid="319883" relation="include">
        </childnode>
      </node>
      <node id="319725">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="319701" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
      </node>
      <node id="319889">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="319872">
        <label>vt/utils/tls/null_tls.h</label>
        <link refid="null__tls_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
      </node>
      <node id="319692">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="319693" relation="include">
        </childnode>
        <childnode refid="319701" relation="include">
        </childnode>
        <childnode refid="319721" relation="include">
        </childnode>
      </node>
      <node id="319766">
        <label>vt/runtime/component/diagnostic_value_base.h</label>
        <link refid="diagnostic__value__base_8h"/>
        <childnode refid="319757" relation="include">
        </childnode>
        <childnode refid="319758" relation="include">
        </childnode>
        <childnode refid="319760" relation="include">
        </childnode>
        <childnode refid="319767" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
      </node>
      <node id="319765">
        <label>algorithm</label>
      </node>
      <node id="319841">
        <label>checkpoint/container/view_traverse_manual.h</label>
        <link refid="view__traverse__manual_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319768" relation="include">
        </childnode>
        <childnode refid="319840" relation="include">
        </childnode>
      </node>
      <node id="319803">
        <label>checkpoint/dispatch/vrt/inheritance_assert_helpers.h</label>
        <link refid="inheritance__assert__helpers_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
      </node>
      <node id="319776">
        <label>checkpoint/serializers/memory_serializer.h</label>
        <link refid="memory__serializer_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319772" relation="include">
        </childnode>
      </node>
      <node id="319748">
        <label>vt/runtime/component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="319726" relation="include">
        </childnode>
        <childnode refid="319749" relation="include">
        </childnode>
        <childnode refid="319751" relation="include">
        </childnode>
        <childnode refid="319752" relation="include">
        </childnode>
        <childnode refid="319753" relation="include">
        </childnode>
        <childnode refid="319779" relation="include">
        </childnode>
      </node>
      <node id="319699">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="319784">
        <label>cstring</label>
      </node>
      <node id="319874">
        <label>vt/runnable/runnable.fwd.h</label>
        <link refid="runnable_8fwd_8h"/>
      </node>
      <node id="319853">
        <label>vt/runtime/component/diagnostic.impl.h</label>
        <link refid="diagnostic_8impl_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319754" relation="include">
        </childnode>
        <childnode refid="319759" relation="include">
        </childnode>
        <childnode refid="319779" relation="include">
        </childnode>
        <childnode refid="319763" relation="include">
        </childnode>
      </node>
      <node id="319758">
        <label>vt/runtime/component/diagnostic_units.h</label>
        <link refid="diagnostic__units_8h"/>
      </node>
      <node id="319740">
        <label>vt/vrt/collection/balance/lb_common.h</label>
        <link refid="lb__common_8h"/>
        <childnode refid="319692" relation="include">
        </childnode>
        <childnode refid="319741" relation="include">
        </childnode>
        <childnode refid="319742" relation="include">
        </childnode>
        <childnode refid="319744" relation="include">
        </childnode>
        <childnode refid="319745" relation="include">
        </childnode>
        <childnode refid="319888" relation="include">
        </childnode>
        <childnode refid="319717" relation="include">
        </childnode>
        <childnode refid="319743" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
      </node>
      <node id="319779">
        <label>memory</label>
      </node>
      <node id="319729">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="319730" relation="include">
        </childnode>
        <childnode refid="319735" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
      </node>
      <node id="319735">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="319724" relation="include">
        </childnode>
        <childnode refid="319702" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319736" relation="include">
        </childnode>
      </node>
      <node id="319773">
        <label>checkpoint/serializers/footprinter.h</label>
        <link refid="footprinter_8h"/>
        <childnode refid="319769" relation="include">
        </childnode>
        <childnode refid="319772" relation="include">
        </childnode>
      </node>
      <node id="319728">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="319701" relation="include">
        </childnode>
        <childnode refid="319694" relation="include">
        </childnode>
        <childnode refid="319724" relation="include">
        </childnode>
        <childnode refid="319727" relation="include">
        </childnode>
        <childnode refid="319725" relation="include">
        </childnode>
        <childnode refid="319723" relation="include">
        </childnode>
        <childnode refid="319716" relation="include">
        </childnode>
        <childnode refid="319705" relation="include">
        </childnode>
        <childnode refid="319712" relation="include">
        </childnode>
        <childnode refid="319720" relation="include">
        </childnode>
      </node>
      <node id="319886">
        <label>vt/messaging/message/message_serialize.h</label>
        <link refid="message__serialize_8h"/>
        <childnode refid="319712" relation="include">
        </childnode>
        <childnode refid="319767" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt">vt::vrt</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection">vt::vrt::collection</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection_1_1balance">vt::vrt::collection::balance</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb_data_holder.cc</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2021<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lb__data__holder_8h" kindref="compound">vt/vrt/collection/balance/lb_data_holder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="context_8h" kindref="compound">vt/context/context.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nlohmann/json.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a012d139c89a14e56a85f32fd82e7c7d3" kindref="member">vrt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">collection<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">balance<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" kindref="member">LBDataHolder::outputEntity</ref>(nlohmann::json&amp;<sp/>j,<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.id;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;home&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.getHomeNode();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;migratable&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.isMigratable();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" kindref="member">node_idx_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" kindref="member">node_idx_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>proxy_id<sp/>=<sp/>std::get&lt;0&gt;(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" kindref="member">node_idx_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)-&gt;second);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>idx_vec<sp/>=<sp/>std::get&lt;1&gt;(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" kindref="member">node_idx_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)-&gt;second);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;collection_id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>proxy_id;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>idx_vec.size();<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">][x]<sp/>=<sp/>idx_vec[x];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ab862d2f1b884256fc88634757f37bb80" kindref="member">node_objgroup_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ab862d2f1b884256fc88634757f37bb80" kindref="member">node_objgroup_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>proxy_id<sp/>=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ab862d2f1b884256fc88634757f37bb80" kindref="member">node_objgroup_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)-&gt;second;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;objgroup_id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>proxy_id;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bare<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">std::unique_ptr&lt;nlohmann::json&gt;<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aeea29fc72556da9038290ef94fb01bc9" kindref="member">LBDataHolder::toJson</ref>(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>json<sp/>=<sp/>nlohmann::json;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>json<sp/>j;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>std::size_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" kindref="member">node_data_</ref>.find(phase)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" kindref="member">node_data_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>elm<sp/>:<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" kindref="member">node_data_</ref>.at(phase))<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>elm.first;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref><sp/>time<sp/>=<sp/>elm.second.whole_phase_load;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;resource&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">theContext</ref>()-&gt;<ref refid="structvt_1_1ctx_1_1_context_1a0d52c263ce8516546a67443d9a86fa5f" kindref="member">getNode</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">]<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a38dc8aada18756357212f4229ea363da" kindref="member">user_defined_json_</ref>.find(phase)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a38dc8aada18756357212f4229ea363da" kindref="member">user_defined_json_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;user_def_this_phase<sp/>=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a38dc8aada18756357212f4229ea363da" kindref="member">user_defined_json_</ref>.at(phase);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user_def_this_phase.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>!=<sp/>user_def_this_phase.end())<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;user_def<sp/>=<sp/>user_def_this_phase.at(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!user_def-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;user_defined&quot;</highlight><highlight class="normal">]<sp/>=<sp/>*user_def;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>subphase_times<sp/>=<sp/>elm.second.subphase_loads;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>subphases<sp/>=<sp/>subphase_times.size();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subphases<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>subphases;<sp/>s++)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;subphases&quot;</highlight><highlight class="normal">][s][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;subphases&quot;</highlight><highlight class="normal">][s][</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">]<sp/>=<sp/>subphase_times[s];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" kindref="member">node_comm_</ref>.find(phase)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" kindref="member">node_comm_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>elm<sp/>:<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" kindref="member">node_comm_</ref>.at(phase))<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>volume<sp/>=<sp/>elm.second;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>key<sp/>=<sp/>elm.first;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;bytes&quot;</highlight><highlight class="normal">]<sp/>=<sp/>volume.bytes;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;messages&quot;</highlight><highlight class="normal">]<sp/>=<sp/>volume.messages;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(key.cat_)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2abe55b6387170df0ca68f41225268e842" kindref="member">elm::CommCategory::Broadcast</ref>:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2a95aeb71ffd419cc14c6929f9dcd6cdff" kindref="member">elm::CommCategory::SendRecv</ref>:<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.cat_<sp/>==<sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2a95aeb71ffd419cc14c6929f9dcd6cdff" kindref="member">elm::CommCategory::SendRecv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SendRecv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Broadcast&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">],<sp/>key.fromObj());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">],<sp/>key.toObj());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2ae5ac0d75517cea8a327fc5252da63e0b" kindref="member">elm::CommCategory::NodeToCollection</ref>:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2ae78a087708e2798bf753815e58e0d09a" kindref="member">elm::CommCategory::NodeToCollectionBcast</ref>:<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.cat_<sp/>==<sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2ae5ac0d75517cea8a327fc5252da63e0b" kindref="member">elm::CommCategory::NodeToCollection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollectionBcast&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>key.fromNode();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">],<sp/>key.toObj());</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2abae8da2cdb9a00dd6dc7b7e642ff8192" kindref="member">elm::CommCategory::CollectionToNode</ref>:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2acf4b5610366267918ea6dc2def3edd13" kindref="member">elm::CommCategory::CollectionToNodeBcast</ref>:<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.cat_<sp/>==<sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2abae8da2cdb9a00dd6dc7b7e642ff8192" kindref="member">elm::CommCategory::CollectionToNode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNodeBcast&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>key.toNode();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">],<sp/>key.fromObj());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2ad3b099c32afd358626c571a1c02bd197" kindref="member">elm::CommCategory::LocalInvoke</ref>:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2a057b8dfc0741801e337e981d77b4abce" kindref="member">elm::CommCategory::CollectiveToCollectionBcast</ref>:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>currently<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;json&gt;(std::move(j));</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aa1785b744e5b844588f9e8038aa2ef1e" kindref="member">LBDataHolder::LBDataHolder</ref>(nlohmann::json<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>this_node<sp/>=<sp/><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">theContext</ref>()-&gt;<ref refid="structvt_1_1ctx_1_1_context_1a0d52c263ce8516546a67443d9a86fa5f" kindref="member">getNode</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>phases<sp/>=<sp/>j[</highlight><highlight class="stringliteral">&quot;phases&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phases.is_array())<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>phase<sp/>:<sp/>phases)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>phase[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tasks<sp/>=<sp/>phase[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" kindref="member">node_data_</ref>[id];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" kindref="member">node_comm_</ref>[id];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tasks.is_array())<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>task<sp/>:<sp/>tasks)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref><sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>etype<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(time.is_number());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(<ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref>.is_number());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(<ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref><sp/>==<sp/>this_node);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(etype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.is_number());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{object,<sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref>};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" kindref="member">node_data_</ref>[id][elm].whole_phase_load<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">].find(</highlight><highlight class="stringliteral">&quot;collection_id&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">].<ref refid="namespacevt_1_1util_1_1json_1a6f1b13d9471c62e046731666abd9c5ed" kindref="member">end</ref>()<sp/>and</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">].find(</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">].<ref refid="namespacevt_1_1util_1_1json_1a6f1b13d9471c62e046731666abd9c5ed" kindref="member">end</ref>()</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cid<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;collection_id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid.is_number()<sp/>&amp;&amp;<sp/>idx.is_array())<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/>arr<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cid);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" kindref="member">node_idx_</ref>[elm]<sp/>=<sp/>std::make_tuple(proxy,<sp/>arr);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task.find(</highlight><highlight class="stringliteral">&quot;subphases&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>task.end())<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>subphases<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;subphases&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subphases.is_array())<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s<sp/>:<sp/>subphases)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sid<sp/>=<sp/>s[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stime<sp/>=<sp/>s[</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(sid.is_number());</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(stime.is_number());</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" kindref="member">node_data_</ref>[id][elm].subphase_loads.resize(</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;std::size_t&gt;(sid)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" kindref="member">node_data_</ref>[id][elm].subphase_loads[sid]<sp/>=<sp/>stime;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CommKey<sp/>=<sp/>elm::CommKey;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CommVolume<sp/>=<sp/>elm::CommVolume;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase.find(</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>phase.end())<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>comms<sp/>=<sp/>phase[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comms.is_array())<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm<sp/>:<sp/>comms)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;bytes&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>messages<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;messages&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(bytes.is_number());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(messages.is_number());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SendRecv&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Broadcast&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_object<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(from_object.is_number());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{from_object,<sp/>this_node};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_object<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(to_object.is_number());</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{to_object,<sp/>this_node};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey<sp/>key(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey::CollectionTag{},</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_elm,<sp/>to_elm,<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Broadcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommVolume<sp/>vol{bytes,<sp/>messages};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" kindref="member">node_comm_</ref>[id][key]<sp/>=<sp/>vol;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollection&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollectionBcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_node<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(from_node.is_number());</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_object<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(to_object.is_number());</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{to_object,<sp/>this_node};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey<sp/>key(</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey::NodeToCollectionTag{},</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(from_node),<sp/>to_elm,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollectionBcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommVolume<sp/>vol{bytes,<sp/>messages};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" kindref="member">node_comm_</ref>[id][key]<sp/>=<sp/>vol;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNode&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNodeBcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_object<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(from_object.is_number());</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{from_object,<sp/>this_node};</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_node<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(to_node.is_number());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey<sp/>key(</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey::CollectionToNodeTag{},</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_elm,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(to_node),</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNodeBcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommVolume<sp/>vol{bytes,<sp/>messages};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" kindref="member">node_comm_</ref>[id][key]<sp/>=<sp/>vol;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@todo:<sp/>implement<sp/>subphase<sp/>communication<sp/>de-serialization,<sp/>no<sp/>use<sp/>for<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>right<sp/>now,<sp/>so<sp/>it<sp/>will<sp/>be<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a77ed15a18bb662403a65fa8fe4d4d6dc" kindref="member">LBDataHolder::clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" kindref="member">node_comm_</ref>.clear();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" kindref="member">node_data_</ref>.clear();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a733c6d7b9fb2bb0c67588eed9b9cd5fc" kindref="member">node_subphase_comm_</ref>.clear();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" kindref="member">node_idx_</ref>.clear();</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal">}}}}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::vrt::collection::balance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/vt/vrt/collection/balance/lb_data_holder.cc"/>
  </compounddef>
</doxygen>
