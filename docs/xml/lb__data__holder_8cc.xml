<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lb__data__holder_8cc" kind="file" language="C++">
    <compoundname>lb_data_holder.cc</compoundname>
    <includes refid="lb__data__holder_8h" local="yes">vt/vrt/collection/balance/lb_data_holder.h</includes>
    <includes refid="context_8h" local="yes">vt/context/context.h</includes>
    <includes local="no">nlohmann/json.hpp</includes>
    <incdepgraph>
      <node id="292357">
        <label>list</label>
      </node>
      <node id="292230">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
      </node>
      <node id="292349">
        <label>atomic</label>
      </node>
      <node id="292303">
        <label>checkpoint/common.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2common_8h"/>
        <childnode refid="292304" relation="include">
        </childnode>
        <childnode refid="292267" relation="include">
        </childnode>
        <childnode refid="292229" relation="include">
        </childnode>
        <childnode refid="292305" relation="include">
        </childnode>
        <childnode refid="292253" relation="include">
        </childnode>
        <childnode refid="292268" relation="include">
        </childnode>
      </node>
      <node id="292281">
        <label>vt/runtime/component/component_pack.h</label>
        <link refid="component__pack_8h"/>
        <childnode refid="292282" relation="include">
        </childnode>
        <childnode refid="292394" relation="include">
        </childnode>
        <childnode refid="292357" relation="include">
        </childnode>
        <childnode refid="292277" relation="include">
        </childnode>
        <childnode refid="292284" relation="include">
        </childnode>
        <childnode refid="292313" relation="include">
        </childnode>
        <childnode refid="292237" relation="include">
        </childnode>
        <childnode refid="292395" relation="include">
        </childnode>
      </node>
      <node id="292394">
        <label>vt/runtime/component/movable_fn.h</label>
        <link refid="movable__fn_8h"/>
      </node>
      <node id="292237">
        <label>functional</label>
      </node>
      <node id="292381">
        <label>checkpoint/container/kokkos_complex_serialize.h</label>
        <link refid="kokkos__complex__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292355" relation="include">
        </childnode>
        <childnode refid="292321" relation="include">
        </childnode>
        <childnode refid="292334" relation="include">
        </childnode>
      </node>
      <node id="292363">
        <label>queue</label>
      </node>
      <node id="292285">
        <label>vt/runtime/component/component_dep.h</label>
        <link refid="component__dep_8h"/>
        <childnode refid="292283" relation="include">
        </childnode>
      </node>
      <node id="292403">
        <label>vt/messaging/envelope/envelope_get.h</label>
        <link refid="envelope__get_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292399" relation="include">
        </childnode>
        <childnode refid="292400" relation="include">
        </childnode>
        <childnode refid="292404" relation="include">
        </childnode>
      </node>
      <node id="292242">
        <label>vt/epoch/epoch_impl_type.h</label>
        <link refid="epoch__impl__type_8h"/>
        <childnode refid="292229" relation="include">
        </childnode>
        <childnode refid="292243" relation="include">
        </childnode>
      </node>
      <node id="292340">
        <label>checkpoint/dispatch/vrt/derived.h</label>
        <link refid="derived_8h"/>
        <childnode refid="292330" relation="include">
        </childnode>
        <childnode refid="292333" relation="include">
        </childnode>
        <childnode refid="292336" relation="include">
        </childnode>
        <childnode refid="292337" relation="include">
        </childnode>
        <childnode refid="292338" relation="include">
        </childnode>
      </node>
      <node id="292296">
        <label>limits</label>
      </node>
      <node id="292276">
        <label>vt/elm/elm_comm.h</label>
        <link refid="elm__comm_8h"/>
        <childnode refid="292275" relation="include">
        </childnode>
        <childnode refid="292277" relation="include">
        </childnode>
      </node>
      <node id="292367">
        <label>checkpoint/container/string_serialize.h</label>
        <link refid="string__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
      </node>
      <node id="292350">
        <label>checkpoint/container/chrono_serialize.h</label>
        <link refid="chrono__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292351" relation="include">
        </childnode>
      </node>
      <node id="292248">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="292249" relation="include">
        </childnode>
        <childnode refid="292236" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
      </node>
      <node id="292275">
        <label>vt/elm/elm_id.h</label>
        <link refid="elm__id_8h"/>
        <childnode refid="292236" relation="include">
        </childnode>
        <childnode refid="292243" relation="include">
        </childnode>
        <childnode refid="292247" relation="include">
        </childnode>
      </node>
      <node id="292249">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292251" relation="include">
        </childnode>
      </node>
      <node id="292278">
        <label>vt/timing/timing_type.h</label>
        <link refid="timing__type_8h"/>
      </node>
      <node id="292387">
        <label>vt/runtime/component/meter/timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292385" relation="include">
        </childnode>
        <childnode refid="292388" relation="include">
        </childnode>
      </node>
      <node id="292374">
        <label>checkpoint/container/view_serialize.h</label>
        <link refid="view__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292375" relation="include">
        </childnode>
        <childnode refid="292376" relation="include">
        </childnode>
        <childnode refid="292377" relation="include">
        </childnode>
      </node>
      <node id="292333">
        <label>checkpoint/dispatch/vrt/object_registry.h</label>
        <link refid="object__registry_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292330" relation="include">
        </childnode>
        <childnode refid="292334" relation="include">
        </childnode>
        <childnode refid="292237" relation="include">
        </childnode>
        <childnode refid="292251" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
      </node>
      <node id="292388">
        <label>vt/timing/timing.h</label>
        <link refid="timing_8h"/>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292389" relation="include">
        </childnode>
        <childnode refid="292254" relation="include">
        </childnode>
        <childnode refid="292278" relation="include">
        </childnode>
      </node>
      <node id="292302">
        <label>checkpoint/serializers/serializers_headers.h</label>
        <link refid="serializers__headers_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292306" relation="include">
        </childnode>
        <childnode refid="292307" relation="include">
        </childnode>
        <childnode refid="292308" relation="include">
        </childnode>
        <childnode refid="292309" relation="include">
        </childnode>
        <childnode refid="292319" relation="include">
        </childnode>
      </node>
      <node id="292308">
        <label>checkpoint/serializers/sizer.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2serializers_2sizer_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292306" relation="include">
        </childnode>
      </node>
      <node id="292352">
        <label>checkpoint/container/enum_serialize.h</label>
        <link refid="enum__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
      </node>
      <node id="292304">
        <label>checkpoint/cmake_config.h</label>
      </node>
      <node id="292295">
        <label>vt/utils/adt/histogram_approx.h</label>
        <link refid="histogram__approx_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292251" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292296" relation="include">
        </childnode>
        <childnode refid="292297" relation="include">
        </childnode>
        <childnode refid="292298" relation="include">
        </childnode>
        <childnode refid="292254" relation="include">
        </childnode>
      </node>
      <node id="292306">
        <label>checkpoint/serializers/base_serializer.h</label>
        <link refid="base__serializer_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
        <childnode refid="292267" relation="include">
        </childnode>
      </node>
      <node id="292335">
        <label>checkpoint/traits/reconstructor_traits.h</label>
        <link refid="reconstructor__traits_8h"/>
        <childnode refid="292324" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
      </node>
      <node id="292229">
        <label>cstdint</label>
      </node>
      <node id="292326">
        <label>checkpoint/detector.h</label>
        <link refid="detector_8h"/>
        <childnode refid="292246" relation="include">
        </childnode>
      </node>
      <node id="292346">
        <label>checkpoint/container/array_serialize.h</label>
        <link refid="array__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292347" relation="include">
        </childnode>
      </node>
      <node id="292393">
        <label>vt/runtime/component/progressable.h</label>
        <link refid="progressable_8h"/>
      </node>
      <node id="292392">
        <label>vt/runtime/component/bufferable.h</label>
        <link refid="bufferable_8h"/>
      </node>
      <node id="292279">
        <label>vt/messaging/message/message.h</label>
        <link refid="message_2message_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292280" relation="include">
        </childnode>
        <childnode refid="292397" relation="include">
        </childnode>
        <childnode refid="292421" relation="include">
        </childnode>
        <childnode refid="292422" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
      </node>
      <node id="292299">
        <label>variant</label>
      </node>
      <node id="292270">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="292258" relation="include">
        </childnode>
        <childnode refid="292236" relation="include">
        </childnode>
        <childnode refid="292264" relation="include">
        </childnode>
        <childnode refid="292269" relation="include">
        </childnode>
        <childnode refid="292271" relation="include">
        </childnode>
        <childnode refid="292248" relation="include">
        </childnode>
        <childnode refid="292268" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292273" relation="include">
        </childnode>
        <childnode refid="292254" relation="include">
        </childnode>
      </node>
      <node id="292400">
        <label>vt/messaging/envelope/envelope_base.h</label>
        <link refid="envelope__base_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292399" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
      </node>
      <node id="292224">
        <label>src/vt/vrt/collection/balance/lb_data_holder.cc</label>
        <link refid="lb__data__holder_8cc"/>
        <childnode refid="292225" relation="include">
        </childnode>
        <childnode refid="292406" relation="include">
        </childnode>
        <childnode refid="292424" relation="include">
        </childnode>
      </node>
      <node id="292244">
        <label>vt/epoch/epoch_type.h</label>
        <link refid="epoch__type_8h"/>
        <childnode refid="292245" relation="include">
        </childnode>
        <childnode refid="292242" relation="include">
        </childnode>
        <childnode refid="292247" relation="include">
        </childnode>
      </node>
      <node id="292379">
        <label>checkpoint/container/kokkos_unordered_map_serialize.h</label>
        <link refid="kokkos__unordered__map__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292355" relation="include">
        </childnode>
        <childnode refid="292321" relation="include">
        </childnode>
        <childnode refid="292334" relation="include">
        </childnode>
      </node>
      <node id="292323">
        <label>checkpoint/dispatch/dispatch_serializer.h</label>
        <link refid="dispatch__serializer_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292324" relation="include">
        </childnode>
        <childnode refid="292327" relation="include">
        </childnode>
        <childnode refid="292328" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292267" relation="include">
        </childnode>
      </node>
      <node id="292254">
        <label>fmt-vt/core.h</label>
      </node>
      <node id="292412">
        <label>vt/messaging/envelope/envelope_ref.impl.h</label>
        <link refid="envelope__ref_8impl_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292411" relation="include">
        </childnode>
      </node>
      <node id="292365">
        <label>checkpoint/container/raw_ptr_serialize.h</label>
        <link refid="raw__ptr__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
      </node>
      <node id="292355">
        <label>checkpoint/dispatch/allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="292321" relation="include">
        </childnode>
        <childnode refid="292313" relation="include">
        </childnode>
      </node>
      <node id="292297">
        <label>cmath</label>
      </node>
      <node id="292268">
        <label>cassert</label>
      </node>
      <node id="292265">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="292258" relation="include">
        </childnode>
        <childnode refid="292236" relation="include">
        </childnode>
        <childnode refid="292264" relation="include">
        </childnode>
        <childnode refid="292266" relation="include">
        </childnode>
        <childnode refid="292248" relation="include">
        </childnode>
        <childnode refid="292259" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292268" relation="include">
        </childnode>
        <childnode refid="292254" relation="include">
        </childnode>
      </node>
      <node id="292240">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="292241" relation="include">
        </childnode>
        <childnode refid="292242" relation="include">
        </childnode>
      </node>
      <node id="292380">
        <label>checkpoint/container/kokkos_pair_serialize.h</label>
        <link refid="kokkos__pair__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292355" relation="include">
        </childnode>
        <childnode refid="292321" relation="include">
        </childnode>
        <childnode refid="292334" relation="include">
        </childnode>
      </node>
      <node id="292345">
        <label>stdexcept</label>
      </node>
      <node id="292258">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="292236" relation="include">
        </childnode>
      </node>
      <node id="292353">
        <label>checkpoint/container/function_serialize.h</label>
        <link refid="function__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292237" relation="include">
        </childnode>
      </node>
      <node id="292334">
        <label>checkpoint/dispatch/reconstructor.h</label>
        <link refid="reconstructor_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292335" relation="include">
        </childnode>
        <childnode refid="292325" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292267" relation="include">
        </childnode>
      </node>
      <node id="292420">
        <label>vt/pool/header/pool_header.h</label>
        <link refid="pool__header_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
      </node>
      <node id="292382">
        <label>checkpoint/checkpoint_api.impl.h</label>
        <link refid="checkpoint__api_8impl_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292301" relation="include">
        </childnode>
        <childnode refid="292312" relation="include">
        </childnode>
        <childnode refid="292311" relation="include">
        </childnode>
        <childnode refid="292313" relation="include">
        </childnode>
      </node>
      <node id="292241">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
        <childnode refid="292236" relation="include">
        </childnode>
      </node>
      <node id="292423">
        <label>nlohmann/json_fwd.hpp</label>
      </node>
      <node id="292309">
        <label>checkpoint/serializers/packer.h</label>
        <link refid="packer_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292310" relation="include">
        </childnode>
        <childnode refid="292311" relation="include">
        </childnode>
        <childnode refid="292314" relation="include">
        </childnode>
        <childnode refid="292315" relation="include">
        </childnode>
        <childnode refid="292316" relation="include">
        </childnode>
        <childnode refid="292317" relation="include">
        </childnode>
      </node>
      <node id="292255">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="292256" relation="include">
        </childnode>
        <childnode refid="292260" relation="include">
        </childnode>
        <childnode refid="292263" relation="include">
        </childnode>
      </node>
      <node id="292250">
        <label>string</label>
      </node>
      <node id="292315">
        <label>checkpoint/buffer/user_buffer.h</label>
        <link refid="user__buffer_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292311" relation="include">
        </childnode>
      </node>
      <node id="292373">
        <label>checkpoint/container/unique_ptr_serialize.h</label>
        <link refid="unique__ptr__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292334" relation="include">
        </childnode>
        <childnode refid="292331" relation="include">
        </childnode>
      </node>
      <node id="292225">
        <label>vt/vrt/collection/balance/lb_data_holder.h</label>
        <link refid="lb__data__holder_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292274" relation="include">
        </childnode>
        <childnode refid="292276" relation="include">
        </childnode>
        <childnode refid="292277" relation="include">
        </childnode>
        <childnode refid="292313" relation="include">
        </childnode>
        <childnode refid="292299" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292423" relation="include">
        </childnode>
      </node>
      <node id="292287">
        <label>vt/runtime/component/base.h</label>
        <link refid="src_2vt_2runtime_2component_2base_8h"/>
        <childnode refid="292236" relation="include">
        </childnode>
        <childnode refid="292288" relation="include">
        </childnode>
        <childnode refid="292392" relation="include">
        </childnode>
        <childnode refid="292393" relation="include">
        </childnode>
      </node>
      <node id="292311">
        <label>checkpoint/buffer/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292312" relation="include">
        </childnode>
        <childnode refid="292313" relation="include">
        </childnode>
      </node>
      <node id="292377">
        <label>checkpoint/container/view_traverse_ndim.h</label>
        <link refid="view__traverse__ndim_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292375" relation="include">
        </childnode>
      </node>
      <node id="292360">
        <label>map</label>
      </node>
      <node id="292415">
        <label>vt/scheduler/priority.h</label>
        <link refid="priority_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292347" relation="include">
        </childnode>
        <childnode refid="292253" relation="include">
        </childnode>
      </node>
      <node id="292389">
        <label>EngFormat-Cpp/eng_format.hpp</label>
      </node>
      <node id="292328">
        <label>checkpoint/dispatch/dispatch_serializer_nonbyte.h</label>
        <link refid="dispatch__serializer__nonbyte_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292324" relation="include">
        </childnode>
        <childnode refid="292329" relation="include">
        </childnode>
        <childnode refid="292331" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292267" relation="include">
        </childnode>
        <childnode refid="292268" relation="include">
        </childnode>
      </node>
      <node id="292341">
        <label>checkpoint/dispatch/dispatch_byte_macro.h</label>
        <link refid="dispatch__byte__macro_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
      </node>
      <node id="292271">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="292267" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292251" relation="include">
        </childnode>
        <childnode refid="292272" relation="include">
        </childnode>
      </node>
      <node id="292272">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="292271" relation="include">
        </childnode>
        <childnode refid="292248" relation="include">
        </childnode>
        <childnode refid="292267" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292251" relation="include">
        </childnode>
        <childnode refid="292254" relation="include">
        </childnode>
      </node>
      <node id="292284">
        <label>unordered_set</label>
      </node>
      <node id="292410">
        <label>vt/messaging/envelope/envelope_test.impl.h</label>
        <link refid="envelope__test_8impl_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292405" relation="include">
        </childnode>
      </node>
      <node id="292247">
        <label>fmt-vt/format.h</label>
      </node>
      <node id="292399">
        <label>vt/messaging/envelope/envelope_type.h</label>
        <link refid="envelope__type_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
      </node>
      <node id="292325">
        <label>checkpoint/dispatch/reconstructor_tag.h</label>
        <link refid="reconstructor__tag_8h"/>
      </node>
      <node id="292330">
        <label>checkpoint/dispatch/vrt/registry_common.h</label>
        <link refid="registry__common_8h"/>
        <childnode refid="292246" relation="include">
        </childnode>
      </node>
      <node id="292383">
        <label>vt/runtime/component/diagnostic_meter.h</label>
        <link refid="diagnostic__meter_8h"/>
        <childnode refid="292384" relation="include">
        </childnode>
        <childnode refid="292386" relation="include">
        </childnode>
        <childnode refid="292387" relation="include">
        </childnode>
        <childnode refid="292390" relation="include">
        </childnode>
        <childnode refid="292278" relation="include">
        </childnode>
      </node>
      <node id="292356">
        <label>checkpoint/container/container_serialize.h</label>
        <link refid="container__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
      </node>
      <node id="292228">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="292229" relation="include">
        </childnode>
        <childnode refid="292230" relation="include">
        </childnode>
        <childnode refid="292231" relation="include">
        </childnode>
        <childnode refid="292233" relation="include">
        </childnode>
      </node>
      <node id="292324">
        <label>checkpoint/traits/serializable_traits.h</label>
        <link refid="serializable__traits_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292325" relation="include">
        </childnode>
        <childnode refid="292326" relation="include">
        </childnode>
        <childnode refid="292229" relation="include">
        </childnode>
        <childnode refid="292268" relation="include">
        </childnode>
      </node>
      <node id="292336">
        <label>checkpoint/dispatch/vrt/serializer_registry.h</label>
        <link refid="serializer__registry_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292330" relation="include">
        </childnode>
        <childnode refid="292237" relation="include">
        </childnode>
        <childnode refid="292251" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
      </node>
      <node id="292384">
        <label>vt/runtime/component/meter/counter.h</label>
        <link refid="counter_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292385" relation="include">
        </childnode>
      </node>
      <node id="292243">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="292236" relation="include">
        </childnode>
        <childnode refid="292238" relation="include">
        </childnode>
      </node>
      <node id="292414">
        <label>vt/messaging/envelope/envelope_setup.impl.h</label>
        <link refid="envelope__setup_8impl_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292413" relation="include">
        </childnode>
        <childnode refid="292415" relation="include">
        </childnode>
      </node>
      <node id="292370">
        <label>checkpoint/container/tuple_serialize.h</label>
        <link refid="tuple__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292253" relation="include">
        </childnode>
        <childnode refid="292371" relation="include">
        </childnode>
      </node>
      <node id="292320">
        <label>checkpoint/serializers/unpacker.impl.h</label>
        <link refid="unpacker_8impl_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292310" relation="include">
        </childnode>
        <childnode refid="292319" relation="include">
        </childnode>
        <childnode refid="292267" relation="include">
        </childnode>
        <childnode refid="292318" relation="include">
        </childnode>
      </node>
      <node id="292368">
        <label>checkpoint/container/thread_serialize.h</label>
        <link refid="thread__serialize_8h"/>
        <childnode refid="292369" relation="include">
        </childnode>
        <childnode refid="292303" relation="include">
        </childnode>
      </node>
      <node id="292331">
        <label>checkpoint/dispatch/vrt/virtual_serialize.h</label>
        <link refid="virtual__serialize_8h"/>
        <childnode refid="292332" relation="include">
        </childnode>
        <childnode refid="292340" relation="include">
        </childnode>
      </node>
      <node id="292286">
        <label>vt/runtime/component/component_traits.h</label>
        <link refid="component__traits_8h"/>
        <childnode refid="292246" relation="include">
        </childnode>
      </node>
      <node id="292343">
        <label>checkpoint/dispatch/type_registry.h</label>
        <link refid="type__registry_8h"/>
        <childnode refid="292344" relation="include">
        </childnode>
        <childnode refid="292229" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292277" relation="include">
        </childnode>
      </node>
      <node id="292290">
        <label>vt/runtime/component/component_reduce.h</label>
        <link refid="component__reduce_8h"/>
        <childnode refid="292236" relation="include">
        </childnode>
      </node>
      <node id="292283">
        <label>vt/runtime/component/component_registry.h</label>
        <link refid="component__registry_8h"/>
        <childnode refid="292236" relation="include">
        </childnode>
        <childnode refid="292251" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292284" relation="include">
        </childnode>
      </node>
      <node id="292227">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="292228" relation="include">
        </childnode>
        <childnode refid="292234" relation="include">
        </childnode>
      </node>
      <node id="292401">
        <label>vt/messaging/envelope/envelope_set.h</label>
        <link refid="envelope__set_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292399" relation="include">
        </childnode>
        <childnode refid="292400" relation="include">
        </childnode>
        <childnode refid="292402" relation="include">
        </childnode>
      </node>
      <node id="292257">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="292250" relation="include">
        </childnode>
      </node>
      <node id="292236">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="292229" relation="include">
        </childnode>
        <childnode refid="292237" relation="include">
        </childnode>
      </node>
      <node id="292261">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="292235" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
        <childnode refid="292262" relation="include">
        </childnode>
      </node>
      <node id="292338">
        <label>checkpoint/dispatch/vrt/serialize_instantiator.h</label>
        <link refid="serialize__instantiator_8h"/>
        <childnode refid="292336" relation="include">
        </childnode>
        <childnode refid="292339" relation="include">
        </childnode>
      </node>
      <node id="292312">
        <label>checkpoint/checkpoint_api.h</label>
        <link refid="checkpoint__api_8h"/>
        <childnode refid="292267" relation="include">
        </childnode>
        <childnode refid="292237" relation="include">
        </childnode>
        <childnode refid="292313" relation="include">
        </childnode>
      </node>
      <node id="292252">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
        <childnode refid="292253" relation="include">
        </childnode>
      </node>
      <node id="292390">
        <label>vt/runtime/component/meter/counter_gauge.h</label>
        <link refid="counter__gauge_8h"/>
        <childnode refid="292384" relation="include">
        </childnode>
        <childnode refid="292386" relation="include">
        </childnode>
      </node>
      <node id="292398">
        <label>vt/messaging/envelope/envelope.h</label>
        <link refid="envelope_2envelope_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292399" relation="include">
        </childnode>
        <childnode refid="292400" relation="include">
        </childnode>
        <childnode refid="292401" relation="include">
        </childnode>
        <childnode refid="292403" relation="include">
        </childnode>
        <childnode refid="292405" relation="include">
        </childnode>
        <childnode refid="292411" relation="include">
        </childnode>
        <childnode refid="292413" relation="include">
        </childnode>
        <childnode refid="292416" relation="include">
        </childnode>
        <childnode refid="292417" relation="include">
        </childnode>
      </node>
      <node id="292256">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="292257" relation="include">
        </childnode>
        <childnode refid="292236" relation="include">
        </childnode>
        <childnode refid="292258" relation="include">
        </childnode>
        <childnode refid="292259" relation="include">
        </childnode>
        <childnode refid="292231" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292254" relation="include">
        </childnode>
      </node>
      <node id="292422">
        <label>typeinfo</label>
      </node>
      <node id="292291">
        <label>vt/runtime/component/diagnostic_types.h</label>
        <link refid="diagnostic__types_8h"/>
        <childnode refid="292229" relation="include">
        </childnode>
      </node>
      <node id="292419">
        <label>vt/messaging/envelope/payload_envelope.h</label>
        <link refid="payload__envelope_8h"/>
        <childnode refid="292398" relation="include">
        </childnode>
      </node>
      <node id="292305">
        <label>cstdio</label>
      </node>
      <node id="292329">
        <label>checkpoint/dispatch/vrt/virtual_serialize_traits.h</label>
        <link refid="virtual__serialize__traits_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292330" relation="include">
        </childnode>
        <childnode refid="292326" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
      </node>
      <node id="292280">
        <label>vt/pool/pool.h</label>
        <link refid="pool_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292281" relation="include">
        </childnode>
        <childnode refid="292396" relation="include">
        </childnode>
        <childnode refid="292420" relation="include">
        </childnode>
        <childnode refid="292251" relation="include">
        </childnode>
        <childnode refid="292229" relation="include">
        </childnode>
        <childnode refid="292268" relation="include">
        </childnode>
        <childnode refid="292313" relation="include">
        </childnode>
      </node>
      <node id="292366">
        <label>checkpoint/container/shared_ptr_serialize.h</label>
        <link refid="shared__ptr__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
      </node>
      <node id="292239">
        <label>tuple</label>
      </node>
      <node id="292317">
        <label>checkpoint/serializers/packer.impl.h</label>
        <link refid="packer_8impl_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292310" relation="include">
        </childnode>
        <childnode refid="292311" relation="include">
        </childnode>
        <childnode refid="292318" relation="include">
        </childnode>
      </node>
      <node id="292339">
        <label>checkpoint/dispatch/vrt/link_derived_to_base_idx.h</label>
        <link refid="link__derived__to__base__idx_8h"/>
        <childnode refid="292336" relation="include">
        </childnode>
      </node>
      <node id="292245">
        <label>vt/utils/strong/strong_type.h</label>
        <link refid="strong__type_8h"/>
        <childnode refid="292237" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
      </node>
      <node id="292385">
        <label>vt/runtime/component/meter/stats_pack.h</label>
        <link refid="stats__pack_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
      </node>
      <node id="292234">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="292235" relation="include">
        </childnode>
        <childnode refid="292228" relation="include">
        </childnode>
        <childnode refid="292248" relation="include">
        </childnode>
        <childnode refid="292252" relation="include">
        </childnode>
        <childnode refid="292254" relation="include">
        </childnode>
      </node>
      <node id="292386">
        <label>vt/runtime/component/meter/gauge.h</label>
        <link refid="gauge_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292385" relation="include">
        </childnode>
      </node>
      <node id="292404">
        <label>vt/messaging/envelope/envelope_get.impl.h</label>
        <link refid="envelope__get_8impl_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292403" relation="include">
        </childnode>
      </node>
      <node id="292364">
        <label>stack</label>
      </node>
      <node id="292251">
        <label>vector</label>
      </node>
      <node id="292406">
        <label>vt/context/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="292313" relation="include">
        </childnode>
        <childnode refid="292407" relation="include">
        </childnode>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292281" relation="include">
        </childnode>
        <childnode refid="292408" relation="include">
        </childnode>
        <childnode refid="292409" relation="include">
        </childnode>
      </node>
      <node id="292371">
        <label>new</label>
      </node>
      <node id="292322">
        <label>checkpoint/dispatch/clean_type.h</label>
        <link refid="clean__type_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
      </node>
      <node id="292327">
        <label>checkpoint/dispatch/dispatch_serializer_byte.h</label>
        <link refid="dispatch__serializer__byte_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292324" relation="include">
        </childnode>
        <childnode refid="292328" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292267" relation="include">
        </childnode>
      </node>
      <node id="292348">
        <label>checkpoint/container/atomic_serialize.h</label>
        <link refid="atomic__serialize_8h"/>
        <childnode refid="292349" relation="include">
        </childnode>
        <childnode refid="292303" relation="include">
        </childnode>
      </node>
      <node id="292253">
        <label>utility</label>
      </node>
      <node id="292372">
        <label>checkpoint/container/vector_serialize.h</label>
        <link refid="vector__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292355" relation="include">
        </childnode>
        <childnode refid="292321" relation="include">
        </childnode>
        <childnode refid="292334" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292251" relation="include">
        </childnode>
      </node>
      <node id="292347">
        <label>array</label>
      </node>
      <node id="292411">
        <label>vt/messaging/envelope/envelope_ref.h</label>
        <link refid="envelope__ref_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292399" relation="include">
        </childnode>
        <childnode refid="292400" relation="include">
        </childnode>
        <childnode refid="292412" relation="include">
        </childnode>
      </node>
      <node id="292273">
        <label>sstream</label>
      </node>
      <node id="292362">
        <label>checkpoint/container/queue_serialize.h</label>
        <link refid="queue__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292363" relation="include">
        </childnode>
        <childnode refid="292364" relation="include">
        </childnode>
      </node>
      <node id="292332">
        <label>checkpoint/dispatch/vrt/base.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2vrt_2base_8h"/>
        <childnode refid="292330" relation="include">
        </childnode>
        <childnode refid="292333" relation="include">
        </childnode>
        <childnode refid="292336" relation="include">
        </childnode>
        <childnode refid="292337" relation="include">
        </childnode>
        <childnode refid="292338" relation="include">
        </childnode>
      </node>
      <node id="292289">
        <label>vt/runtime/component/component_name.h</label>
        <link refid="component__name_8h"/>
        <childnode refid="292250" relation="include">
        </childnode>
      </node>
      <node id="292293">
        <label>vt/runtime/component/diagnostic_value.h</label>
        <link refid="diagnostic__value_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292291" relation="include">
        </childnode>
        <childnode refid="292294" relation="include">
        </childnode>
        <childnode refid="292300" relation="include">
        </childnode>
        <childnode refid="292295" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292297" relation="include">
        </childnode>
      </node>
      <node id="292232">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="292266">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="292267" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292251" relation="include">
        </childnode>
      </node>
      <node id="292231">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
        <childnode refid="292232" relation="include">
        </childnode>
      </node>
      <node id="292314">
        <label>checkpoint/buffer/managed_buffer.h</label>
        <link refid="managed__buffer_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292311" relation="include">
        </childnode>
        <childnode refid="292313" relation="include">
        </childnode>
      </node>
      <node id="292267">
        <label>cstdlib</label>
      </node>
      <node id="292321">
        <label>checkpoint/dispatch/dispatch.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292311" relation="include">
        </childnode>
        <childnode refid="292322" relation="include">
        </childnode>
        <childnode refid="292323" relation="include">
        </childnode>
        <childnode refid="292341" relation="include">
        </childnode>
        <childnode refid="292334" relation="include">
        </childnode>
        <childnode refid="292237" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292342" relation="include">
        </childnode>
      </node>
      <node id="292260">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="292258" relation="include">
        </childnode>
        <childnode refid="292261" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
      </node>
      <node id="292342">
        <label>checkpoint/dispatch/dispatch.impl.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8impl_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292321" relation="include">
        </childnode>
        <childnode refid="292343" relation="include">
        </childnode>
        <childnode refid="292345" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
      </node>
      <node id="292301">
        <label>checkpoint/checkpoint.h</label>
        <link refid="checkpoint_8h"/>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292321" relation="include">
        </childnode>
        <childnode refid="292324" relation="include">
        </childnode>
        <childnode refid="292346" relation="include">
        </childnode>
        <childnode refid="292348" relation="include">
        </childnode>
        <childnode refid="292350" relation="include">
        </childnode>
        <childnode refid="292352" relation="include">
        </childnode>
        <childnode refid="292353" relation="include">
        </childnode>
        <childnode refid="292354" relation="include">
        </childnode>
        <childnode refid="292359" relation="include">
        </childnode>
        <childnode refid="292362" relation="include">
        </childnode>
        <childnode refid="292365" relation="include">
        </childnode>
        <childnode refid="292366" relation="include">
        </childnode>
        <childnode refid="292367" relation="include">
        </childnode>
        <childnode refid="292368" relation="include">
        </childnode>
        <childnode refid="292370" relation="include">
        </childnode>
        <childnode refid="292372" relation="include">
        </childnode>
        <childnode refid="292373" relation="include">
        </childnode>
        <childnode refid="292374" relation="include">
        </childnode>
        <childnode refid="292378" relation="include">
        </childnode>
        <childnode refid="292379" relation="include">
        </childnode>
        <childnode refid="292380" relation="include">
        </childnode>
        <childnode refid="292381" relation="include">
        </childnode>
        <childnode refid="292312" relation="include">
        </childnode>
        <childnode refid="292382" relation="include">
        </childnode>
      </node>
      <node id="292408">
        <label>vt/context/context_attorney_fwd.h</label>
        <link refid="context__attorney__fwd_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
      </node>
      <node id="292418">
        <label>vt/messaging/envelope/envelope_extended_util.impl.h</label>
        <link refid="envelope__extended__util_8impl_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292417" relation="include">
        </childnode>
      </node>
      <node id="292344">
        <label>cstddef</label>
      </node>
      <node id="292416">
        <label>vt/messaging/envelope/envelope_extended.h</label>
        <link refid="envelope__extended_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292399" relation="include">
        </childnode>
        <childnode refid="292400" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
      </node>
      <node id="292359">
        <label>checkpoint/container/map_serialize.h</label>
        <link refid="map__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292355" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292356" relation="include">
        </childnode>
        <childnode refid="292360" relation="include">
        </childnode>
        <childnode refid="292277" relation="include">
        </childnode>
        <childnode refid="292361" relation="include">
        </childnode>
        <childnode refid="292284" relation="include">
        </childnode>
      </node>
      <node id="292358">
        <label>deque</label>
      </node>
      <node id="292277">
        <label>unordered_map</label>
      </node>
      <node id="292354">
        <label>checkpoint/container/list_serialize.h</label>
        <link refid="list__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292355" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292356" relation="include">
        </childnode>
        <childnode refid="292357" relation="include">
        </childnode>
        <childnode refid="292358" relation="include">
        </childnode>
      </node>
      <node id="292405">
        <label>vt/messaging/envelope/envelope_test.h</label>
        <link refid="envelope__test_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292406" relation="include">
        </childnode>
        <childnode refid="292399" relation="include">
        </childnode>
        <childnode refid="292400" relation="include">
        </childnode>
        <childnode refid="292410" relation="include">
        </childnode>
      </node>
      <node id="292402">
        <label>vt/messaging/envelope/envelope_set.impl.h</label>
        <link refid="envelope__set_8impl_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292401" relation="include">
        </childnode>
      </node>
      <node id="292396">
        <label>vt/pool/static_sized/memory_pool_equal.h</label>
        <link refid="memory__pool__equal_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292397" relation="include">
        </childnode>
        <childnode refid="292406" relation="include">
        </childnode>
        <childnode refid="292420" relation="include">
        </childnode>
        <childnode refid="292251" relation="include">
        </childnode>
        <childnode refid="292229" relation="include">
        </childnode>
      </node>
      <node id="292316">
        <label>checkpoint/buffer/io_buffer.h</label>
        <link refid="io__buffer_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292311" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
      </node>
      <node id="292235">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="292236" relation="include">
        </childnode>
        <childnode refid="292238" relation="include">
        </childnode>
        <childnode refid="292240" relation="include">
        </childnode>
        <childnode refid="292243" relation="include">
        </childnode>
        <childnode refid="292244" relation="include">
        </childnode>
      </node>
      <node id="292319">
        <label>checkpoint/serializers/unpacker.h</label>
        <link refid="unpacker_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292310" relation="include">
        </childnode>
        <childnode refid="292315" relation="include">
        </childnode>
        <childnode refid="292320" relation="include">
        </childnode>
      </node>
      <node id="292397">
        <label>vt/messaging/envelope.h</label>
        <link refid="envelope_8h"/>
        <childnode refid="292398" relation="include">
        </childnode>
        <childnode refid="292419" relation="include">
        </childnode>
      </node>
      <node id="292351">
        <label>chrono</label>
      </node>
      <node id="292264">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="292236" relation="include">
        </childnode>
        <childnode refid="292258" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292265" relation="include">
        </childnode>
      </node>
      <node id="292407">
        <label>mpi.h</label>
      </node>
      <node id="292413">
        <label>vt/messaging/envelope/envelope_setup.h</label>
        <link refid="envelope__setup_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292399" relation="include">
        </childnode>
        <childnode refid="292400" relation="include">
        </childnode>
        <childnode refid="292414" relation="include">
        </childnode>
      </node>
      <node id="292369">
        <label>thread</label>
      </node>
      <node id="292375">
        <label>checkpoint/container/view_traits_extract.h</label>
        <link refid="view__traits__extract_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
      </node>
      <node id="292395">
        <label>vt/runtime/component/component_pack.impl.h</label>
        <link refid="component__pack_8impl_8h"/>
        <childnode refid="292281" relation="include">
        </childnode>
      </node>
      <node id="292238">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="292236" relation="include">
        </childnode>
        <childnode refid="292229" relation="include">
        </childnode>
        <childnode refid="292237" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
      </node>
      <node id="292294">
        <label>vt/runtime/component/diagnostic_erased_value.h</label>
        <link refid="diagnostic__erased__value_8h"/>
        <childnode refid="292291" relation="include">
        </childnode>
        <childnode refid="292295" relation="include">
        </childnode>
        <childnode refid="292245" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292299" relation="include">
        </childnode>
      </node>
      <node id="292288">
        <label>vt/runtime/component/diagnostic.h</label>
        <link refid="diagnostic_8h"/>
        <childnode refid="292289" relation="include">
        </childnode>
        <childnode refid="292290" relation="include">
        </childnode>
        <childnode refid="292291" relation="include">
        </childnode>
        <childnode refid="292292" relation="include">
        </childnode>
        <childnode refid="292293" relation="include">
        </childnode>
        <childnode refid="292383" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292313" relation="include">
        </childnode>
        <childnode refid="292277" relation="include">
        </childnode>
        <childnode refid="292237" relation="include">
        </childnode>
        <childnode refid="292391" relation="include">
        </childnode>
      </node>
      <node id="292246">
        <label>type_traits</label>
      </node>
      <node id="292361">
        <label>set</label>
      </node>
      <node id="292417">
        <label>vt/messaging/envelope/envelope_extended_util.h</label>
        <link refid="envelope__extended__util_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292399" relation="include">
        </childnode>
        <childnode refid="292400" relation="include">
        </childnode>
        <childnode refid="292416" relation="include">
        </childnode>
        <childnode refid="292418" relation="include">
        </childnode>
      </node>
      <node id="292378">
        <label>checkpoint/container/variant_serialize.h</label>
        <link refid="variant__serialize_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292355" relation="include">
        </childnode>
        <childnode refid="292299" relation="include">
        </childnode>
      </node>
      <node id="292259">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="292235" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
      </node>
      <node id="292424">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="292226">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="292227" relation="include">
        </childnode>
        <childnode refid="292235" relation="include">
        </childnode>
        <childnode refid="292255" relation="include">
        </childnode>
      </node>
      <node id="292300">
        <label>vt/runtime/component/diagnostic_value_base.h</label>
        <link refid="diagnostic__value__base_8h"/>
        <childnode refid="292291" relation="include">
        </childnode>
        <childnode refid="292292" relation="include">
        </childnode>
        <childnode refid="292294" relation="include">
        </childnode>
        <childnode refid="292301" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
      </node>
      <node id="292298">
        <label>algorithm</label>
      </node>
      <node id="292376">
        <label>checkpoint/container/view_traverse_manual.h</label>
        <link refid="view__traverse__manual_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292302" relation="include">
        </childnode>
        <childnode refid="292375" relation="include">
        </childnode>
      </node>
      <node id="292337">
        <label>checkpoint/dispatch/vrt/inheritance_assert_helpers.h</label>
        <link refid="inheritance__assert__helpers_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
      </node>
      <node id="292310">
        <label>checkpoint/serializers/memory_serializer.h</label>
        <link refid="memory__serializer_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292306" relation="include">
        </childnode>
      </node>
      <node id="292282">
        <label>vt/runtime/component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="292260" relation="include">
        </childnode>
        <childnode refid="292283" relation="include">
        </childnode>
        <childnode refid="292285" relation="include">
        </childnode>
        <childnode refid="292286" relation="include">
        </childnode>
        <childnode refid="292287" relation="include">
        </childnode>
        <childnode refid="292313" relation="include">
        </childnode>
      </node>
      <node id="292233">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="292318">
        <label>cstring</label>
      </node>
      <node id="292409">
        <label>vt/runnable/runnable.fwd.h</label>
        <link refid="runnable_8fwd_8h"/>
      </node>
      <node id="292391">
        <label>vt/runtime/component/diagnostic.impl.h</label>
        <link refid="diagnostic_8impl_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292288" relation="include">
        </childnode>
        <childnode refid="292293" relation="include">
        </childnode>
        <childnode refid="292313" relation="include">
        </childnode>
        <childnode refid="292296" relation="include">
        </childnode>
      </node>
      <node id="292292">
        <label>vt/runtime/component/diagnostic_units.h</label>
        <link refid="diagnostic__units_8h"/>
      </node>
      <node id="292274">
        <label>vt/vrt/collection/balance/lb_common.h</label>
        <link refid="lb__common_8h"/>
        <childnode refid="292226" relation="include">
        </childnode>
        <childnode refid="292275" relation="include">
        </childnode>
        <childnode refid="292276" relation="include">
        </childnode>
        <childnode refid="292278" relation="include">
        </childnode>
        <childnode refid="292279" relation="include">
        </childnode>
        <childnode refid="292423" relation="include">
        </childnode>
        <childnode refid="292251" relation="include">
        </childnode>
        <childnode refid="292277" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292299" relation="include">
        </childnode>
      </node>
      <node id="292313">
        <label>memory</label>
      </node>
      <node id="292263">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="292264" relation="include">
        </childnode>
        <childnode refid="292269" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
      </node>
      <node id="292269">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="292258" relation="include">
        </childnode>
        <childnode refid="292236" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292270" relation="include">
        </childnode>
      </node>
      <node id="292307">
        <label>checkpoint/serializers/footprinter.h</label>
        <link refid="footprinter_8h"/>
        <childnode refid="292303" relation="include">
        </childnode>
        <childnode refid="292306" relation="include">
        </childnode>
      </node>
      <node id="292262">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="292235" relation="include">
        </childnode>
        <childnode refid="292228" relation="include">
        </childnode>
        <childnode refid="292258" relation="include">
        </childnode>
        <childnode refid="292261" relation="include">
        </childnode>
        <childnode refid="292259" relation="include">
        </childnode>
        <childnode refid="292257" relation="include">
        </childnode>
        <childnode refid="292250" relation="include">
        </childnode>
        <childnode refid="292239" relation="include">
        </childnode>
        <childnode refid="292246" relation="include">
        </childnode>
        <childnode refid="292254" relation="include">
        </childnode>
      </node>
      <node id="292421">
        <label>vt/messaging/message/message_serialize.h</label>
        <link refid="message__serialize_8h"/>
        <childnode refid="292246" relation="include">
        </childnode>
        <childnode refid="292301" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt">vt::vrt</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection">vt::vrt::collection</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection_1_1balance">vt::vrt::collection::balance</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb_data_holder.cc</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2021<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lb__data__holder_8h" kindref="compound">vt/vrt/collection/balance/lb_data_holder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="context_8h" kindref="compound">vt/context/context.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nlohmann/json.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a012d139c89a14e56a85f32fd82e7c7d3" kindref="member">vrt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">collection<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">balance<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" kindref="member">LBDataHolder::outputEntity</ref>(nlohmann::json&amp;<sp/>j,<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.id;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;home&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.getHomeNode();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;migratable&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.isMigratable();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" kindref="member">node_idx_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" kindref="member">node_idx_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>proxy_id<sp/>=<sp/>std::get&lt;0&gt;(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" kindref="member">node_idx_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)-&gt;second);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>idx_vec<sp/>=<sp/>std::get&lt;1&gt;(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6b316a4e35ea98e592cbe875074aa6d8" kindref="member">node_idx_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)-&gt;second);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;collection_id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>proxy_id;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>idx_vec.size();<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">][x]<sp/>=<sp/>idx_vec[x];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ab862d2f1b884256fc88634757f37bb80" kindref="member">node_objgroup_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ab862d2f1b884256fc88634757f37bb80" kindref="member">node_objgroup_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>proxy_id<sp/>=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ab862d2f1b884256fc88634757f37bb80" kindref="member">node_objgroup_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)-&gt;second;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;objgroup_id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>proxy_id;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bare<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">std::unique_ptr&lt;nlohmann::json&gt;<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aff15ecfd3ffecaa3f6754621c496fc8c" kindref="member">LBDataHolder::metadataToJson</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>last<sp/>element<sp/>of<sp/>a<sp/>range<sp/>for<sp/>which<sp/>it&apos;s<sp/>values<sp/>are<sp/>incremented<sp/>by<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>find_last_of_range<sp/>=<sp/>[](</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;PhaseType&gt;&amp;<sp/>notEmptySet,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;PhaseType&gt;::iterator<sp/>fromIt)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(!notEmptySet.empty(),<sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>Set<sp/>must<sp/>be<sp/>not<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>next<sp/>=<sp/>std::next(fromIt);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>a<sp/>set<sp/>or<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>==<sp/>notEmptySet.end()<sp/>||<sp/>*fromIt<sp/>+<sp/>1<sp/>!=<sp/>*next)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++fromIt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fromIt<sp/>!=<sp/>notEmptySet.end());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fromIt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>nlohmann::json<sp/>j;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ac7d4f40440b458c101af292dd3357558" kindref="member">count_</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>list<sp/>and<sp/>ranges<sp/>of<sp/>skipped<sp/>phases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>std::set&lt;PhaseType&gt;<sp/>skipped_list;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>std::vector&lt;std::pair&lt;PhaseType,<sp/>PhaseType&gt;&gt;<sp/>skipped_ranges;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a66a5410c689d1515c9462495d3225a79" kindref="member">skipped_phases_</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a66a5410c689d1515c9462495d3225a79" kindref="member">skipped_phases_</ref>.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>endOfRange<sp/>=<sp/>find_last_of_range(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a66a5410c689d1515c9462495d3225a79" kindref="member">skipped_phases_</ref>,<sp/>it);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>endOfRange)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>skipped_list.insert(*it);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>skipped_ranges.emplace_back(*it,<sp/>*endOfRange);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>endOfRange;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>list<sp/>and<sp/>ranges<sp/>of<sp/>identical<sp/>phases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>std::set&lt;PhaseType&gt;<sp/>identical_list;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>std::vector&lt;std::pair&lt;PhaseType,<sp/>PhaseType&gt;&gt;<sp/>identical_ranges;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a190018ee0726acb12d7d416476de5bfd" kindref="member">identical_phases_</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a190018ee0726acb12d7d416476de5bfd" kindref="member">identical_phases_</ref>.end();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>endOfRange<sp/>=<sp/>find_last_of_range(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a190018ee0726acb12d7d416476de5bfd" kindref="member">identical_phases_</ref>,<sp/>it);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>endOfRange)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identical_list.insert(*it);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>identical_ranges.emplace_back(*it,<sp/>*endOfRange);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>endOfRange;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;skipped&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;list&quot;</highlight><highlight class="normal">]<sp/>=<sp/>skipped_list;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;skipped&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;range&quot;</highlight><highlight class="normal">]<sp/>=<sp/>skipped_ranges;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;identical_to_previous&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;list&quot;</highlight><highlight class="normal">]<sp/>=<sp/>identical_list;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;identical_to_previous&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;range&quot;</highlight><highlight class="normal">]<sp/>=<sp/>identical_ranges;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;nlohmann::json&gt;(std::move(j));</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">std::unique_ptr&lt;nlohmann::json&gt;<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aeea29fc72556da9038290ef94fb01bc9" kindref="member">LBDataHolder::toJson</ref>(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>json<sp/>=<sp/>nlohmann::json;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>json<sp/>j;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>std::size_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" kindref="member">node_data_</ref>.find(phase)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" kindref="member">node_data_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>elm<sp/>:<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a946b456d5de23d9a00e91c1dcc12699f" kindref="member">node_data_</ref>.at(phase))<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>elm.first;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref><sp/>time<sp/>=<sp/>elm.second.whole_phase_load;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;resource&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.getCurrNode();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">]<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a38dc8aada18756357212f4229ea363da" kindref="member">user_defined_json_</ref>.find(phase)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a38dc8aada18756357212f4229ea363da" kindref="member">user_defined_json_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;user_def_this_phase<sp/>=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a38dc8aada18756357212f4229ea363da" kindref="member">user_defined_json_</ref>.at(phase);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user_def_this_phase.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>!=<sp/>user_def_this_phase.end())<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;user_def<sp/>=<sp/>user_def_this_phase.at(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!user_def-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;user_defined&quot;</highlight><highlight class="normal">]<sp/>=<sp/>*user_def;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>subphase_times<sp/>=<sp/>elm.second.subphase_loads;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>subphases<sp/>=<sp/>subphase_times.size();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subphases<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>subphases;<sp/>s++)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;subphases&quot;</highlight><highlight class="normal">][s][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;subphases&quot;</highlight><highlight class="normal">][s][</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">]<sp/>=<sp/>subphase_times[s];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" kindref="member">node_comm_</ref>.find(phase)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" kindref="member">node_comm_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>elm<sp/>:<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a627c83ae5c9add8cfb626a42d6031612" kindref="member">node_comm_</ref>.at(phase))<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>volume<sp/>=<sp/>elm.second;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>key<sp/>=<sp/>elm.first;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;bytes&quot;</highlight><highlight class="normal">]<sp/>=<sp/>volume.bytes;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;messages&quot;</highlight><highlight class="normal">]<sp/>=<sp/>volume.messages;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(key.cat_)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2abe55b6387170df0ca68f41225268e842" kindref="member">elm::CommCategory::Broadcast</ref>:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2a95aeb71ffd419cc14c6929f9dcd6cdff" kindref="member">elm::CommCategory::SendRecv</ref>:<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.cat_<sp/>==<sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2a95aeb71ffd419cc14c6929f9dcd6cdff" kindref="member">elm::CommCategory::SendRecv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SendRecv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Broadcast&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">],<sp/>key.fromObj());</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">],<sp/>key.toObj());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2ae5ac0d75517cea8a327fc5252da63e0b" kindref="member">elm::CommCategory::NodeToCollection</ref>:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2ae78a087708e2798bf753815e58e0d09a" kindref="member">elm::CommCategory::NodeToCollectionBcast</ref>:<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.cat_<sp/>==<sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2ae5ac0d75517cea8a327fc5252da63e0b" kindref="member">elm::CommCategory::NodeToCollection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollectionBcast&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>key.fromNode();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">],<sp/>key.toObj());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2abae8da2cdb9a00dd6dc7b7e642ff8192" kindref="member">elm::CommCategory::CollectionToNode</ref>:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2acf4b5610366267918ea6dc2def3edd13" kindref="member">elm::CommCategory::CollectionToNodeBcast</ref>:<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.cat_<sp/>==<sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2abae8da2cdb9a00dd6dc7b7e642ff8192" kindref="member">elm::CommCategory::CollectionToNode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNodeBcast&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>key.toNode();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1a6671c7581a2547eec99e096f956efeb2" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">],<sp/>key.fromObj());</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2ad3b099c32afd358626c571a1c02bd197" kindref="member">elm::CommCategory::LocalInvoke</ref>:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2a057b8dfc0741801e337e981d77b4abce" kindref="member">elm::CommCategory::CollectiveToCollectionBcast</ref>:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>currently<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;json&gt;(std::move(j));</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1aa1785b744e5b844588f9e8038aa2ef1e" kindref="member">LBDataHolder::LBDataHolder</ref>(nlohmann::json<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>j)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder_1ac7d4f40440b458c101af292dd3357558" kindref="member">count_</ref>(0)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>this_node<sp/>=<sp/><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">theContext</ref>()-&gt;<ref refid="structvt_1_1ctx_1_1_context_1a0d52c263ce8516546a67443d9a86fa5f" kindref="member">getNode</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>metadata<sp/>for<sp/>skipped<sp/>and<sp/>identical<sp/>phases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>readMetadata(j);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>phases<sp/>=<sp/>j[</highlight><highlight class="stringliteral">&quot;phases&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phases.is_array())<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>phase<sp/>:<sp/>phases)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>phase[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tasks<sp/>=<sp/>phase[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;node_data_[id];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;node_comm_[id];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tasks.is_array())<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>task<sp/>:<sp/>tasks)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref><sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>etype<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(time.is_number());</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(<ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref>.is_number());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(etype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.is_number());</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{object,<sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref>};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;node_data_[id][elm].whole_phase_load<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">].find(</highlight><highlight class="stringliteral">&quot;collection_id&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">].<ref refid="namespacevt_1_1util_1_1json_1a6f1b13d9471c62e046731666abd9c5ed" kindref="member">end</ref>()<sp/>and</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">].find(</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">].<ref refid="namespacevt_1_1util_1_1json_1a6f1b13d9471c62e046731666abd9c5ed" kindref="member">end</ref>()</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cid<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;collection_id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid.is_number()<sp/>&amp;&amp;<sp/>idx.is_array())<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/>arr<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cid);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;node_idx_[elm]<sp/>=<sp/>std::make_tuple(proxy,<sp/>arr);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task.find(</highlight><highlight class="stringliteral">&quot;subphases&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>task.end())<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>subphases<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;subphases&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subphases.is_array())<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s<sp/>:<sp/>subphases)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sid<sp/>=<sp/>s[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stime<sp/>=<sp/>s[</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(sid.is_number());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(stime.is_number());</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;node_data_[id][elm].subphase_loads.resize(</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;std::size_t&gt;(sid)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;node_data_[id][elm].subphase_loads[sid]<sp/>=<sp/>stime;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CommKey<sp/>=<sp/>elm::CommKey;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CommVolume<sp/>=<sp/>elm::CommVolume;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase.find(</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>phase.end())<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>comms<sp/>=<sp/>phase[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comms.is_array())<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm<sp/>:<sp/>comms)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;bytes&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>messages<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;messages&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(bytes.is_number());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(messages.is_number());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SendRecv&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Broadcast&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_object<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(from_object.is_number());</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{from_object,<sp/>this_node};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_object<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(to_object.is_number());</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{to_object,<sp/>this_node};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey<sp/>key(</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey::CollectionTag{},</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_elm,<sp/>to_elm,<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Broadcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommVolume<sp/>vol{bytes,<sp/>messages};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;node_comm_[id][key]<sp/>=<sp/>vol;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollection&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollectionBcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_node<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(from_node.is_number());</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_object<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(to_object.is_number());</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{to_object,<sp/>this_node};</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey<sp/>key(</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey::NodeToCollectionTag{},</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(from_node),<sp/>to_elm,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollectionBcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommVolume<sp/>vol{bytes,<sp/>messages};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;node_comm_[id][key]<sp/>=<sp/>vol;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNode&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNodeBcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_object<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(from_object.is_number());</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{from_object,<sp/>this_node};</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_node<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(to_node.is_number());</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey<sp/>key(</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey::CollectionToNodeTag{},</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_elm,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(to_node),</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNodeBcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommVolume<sp/>vol{bytes,<sp/>messages};</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;node_comm_[id][key]<sp/>=<sp/>vol;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!count_)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>count_<sp/>=<sp/>node_data_.size();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@todo:<sp/>implement<sp/>subphase<sp/>communication<sp/>de-serialization,<sp/>no<sp/>use<sp/>for<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>right<sp/>now,<sp/>so<sp/>it<sp/>will<sp/>be<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LBDataHolder::readMetadata(nlohmann::json<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j.find(</highlight><highlight class="stringliteral">&quot;metadata&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>j.end())<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>metadata<sp/>=<sp/>j[</highlight><highlight class="stringliteral">&quot;metadata&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata.find(</highlight><highlight class="stringliteral">&quot;phases&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>metadata.end())<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>phases<sp/>=<sp/>metadata[</highlight><highlight class="stringliteral">&quot;phases&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(phases[</highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">].is_number());</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count_<sp/>=<sp/>phases[</highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>all<sp/>skipped<sp/>phases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sl<sp/>=<sp/>phases[</highlight><highlight class="stringliteral">&quot;skipped&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;list&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sl.is_array())<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/>skipped<sp/>:<sp/>sl)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipped_phases_.insert(skipped);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sr<sp/>=<sp/>phases[</highlight><highlight class="stringliteral">&quot;skipped&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;range&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sr.is_array())<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pair<sp/>:<sp/>sr)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(pair.is_array());</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/>i<sp/>=<sp/>pair[0];<sp/>i<sp/>&lt;=<sp/>pair[1];<sp/>i++){</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipped_phases_.insert(i);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>all<sp/>identical<sp/>phases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>il<sp/>=<sp/>phases[</highlight><highlight class="stringliteral">&quot;identical_to_previous&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;list&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(il.is_array())<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/>identical<sp/>:<sp/>il)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>identical_phases_.insert(identical);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ir<sp/>=<sp/>phases[</highlight><highlight class="stringliteral">&quot;identical_to_previous&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;range&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ir.is_array())<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pair<sp/>:<sp/>ir)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(pair.is_array());</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/>i<sp/>=<sp/>pair[0];<sp/>i<sp/>&lt;=<sp/>pair[1];<sp/>i++){</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>identical_phases_.insert(i);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LBDataHolder::clear()<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>node_comm_.clear();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>node_data_.clear();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>node_subphase_comm_.clear();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>node_idx_.clear();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>count_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>skipped_phases_.clear();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>identical_phases_.clear();</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal">}}}}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::vrt::collection::balance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/vt/vrt/collection/balance/lb_data_holder.cc"/>
  </compounddef>
</doxygen>
