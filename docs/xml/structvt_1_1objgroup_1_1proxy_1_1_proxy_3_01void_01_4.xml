<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4" kind="struct" language="C++" prot="public">
    <compoundname>vt::objgroup::proxy::Proxy&lt; void &gt;</compoundname>
    <includes refid="proxy__objgroup_8h" local="no">proxy_objgroup.h</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a133d35ed66d898376ec5bb6e758183ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1objgroup_1_1proxy_1ae207233400f23aa10c30217cdb369c54" kindref="member">DefaultProxyElm</ref></type>
        <definition>DefaultProxyElm vt::objgroup::proxy::Proxy&lt; void &gt;::operator[]</definition>
        <argsstring>(NodeType node) const</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Index the proxy to get the element proxy for a particular node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired node</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an indexed proxy to that node </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="447" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="319" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a13f8d6751a246a449e7d13ae7eed3541" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::objgroup::proxy::Proxy&lt; void &gt;::broadcast</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>broadcast</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Broadcast a message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Creates message from given args</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>the arguments used to make a message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <computeroutput>PendingSend</computeroutput> for the sent message </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="459" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="324" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1aef5ca6344823e49472221126a074ca90" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>auto</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::objgroup::proxy::Proxy&lt; void &gt;::broadcast</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>broadcast</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Broadcast a message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Creates message from given args</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>the arguments used to make a message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <computeroutput>PendingSend</computeroutput> for the sent message </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="471" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.h" bodystart="471" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1ae600f4143bb8102bc15264adc713dfea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::objgroup::proxy::Proxy&lt; void &gt;::broadcastMsg</definition>
        <argsstring>(messaging::MsgPtrThief&lt; MsgT &gt; msg, TagType tag=no_tag) const</argsstring>
        <name>broadcastMsg</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_ptr_thief" kindref="compound">messaging::MsgPtrThief</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref></type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
<para>Broadcast a message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Takes ownership of the supplied message.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to broadcast </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag to put on the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <computeroutput>PendingSend</computeroutput> for the sent message </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="488" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="330" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a5da935942453d85ca530bf8886a58028" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>auto</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::objgroup::proxy::Proxy&lt; void &gt;::broadcastMsg</definition>
        <argsstring>(messaging::MsgPtrThief&lt; typename FuncTraits&lt; decltype(f)&gt;::MsgT &gt; msg, TagType tag=no_tag) const</argsstring>
        <name>broadcastMsg</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_ptr_thief" kindref="compound">messaging::MsgPtrThief</ref>&lt; typename <ref refid="structvt_1_1_func_traits" kindref="compound">FuncTraits</ref>&lt; decltype(f)&gt;::MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref></type>
          <declname>tag</declname>
          <defval>no_tag</defval>
        </param>
        <briefdescription>
<para>Broadcast a message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Takes ownership of the supplied message.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to broadcast </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tag</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag to put on the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <computeroutput>PendingSend</computeroutput> for the sent message </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="501" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.h" bodystart="501" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a8e3989588197eb5dc128302c93e74468" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OpT</type>
          </param>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::objgroup::proxy::Proxy&lt; void &gt;::reduce</definition>
        <argsstring>(NodeType root, Args &amp;&amp;... args) const</argsstring>
        <name>reduce</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>root</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Reduce a message up the tree, possibly delayed through a pending send. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Creates message from given args</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">root</parametername>
</parameternamelist>
<parameterdescription>
<para>the root node where the final handler provides the result </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>the arguments used to make a message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the pending send corresponding to the reduce </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="526" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="336" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a95d80c0e5dc7fad3d49f834692c8da38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OpT</type>
          </param>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::objgroup::proxy::Proxy&lt; void &gt;::reduce</definition>
        <argsstring>(NodeType root, Args &amp;&amp;... args) const</argsstring>
        <name>reduce</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>root</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="535" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a545aeca8f6c0250221796b2138a4583d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OpT</type>
          </param>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::objgroup::proxy::Proxy&lt; void &gt;::reduceMsg</definition>
        <argsstring>(NodeType root, MsgT *const msg) const</argsstring>
        <name>reduceMsg</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>root</declname>
        </param>
        <param>
          <type>MsgT *const</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Reduce a message up the tree, possibly delayed through a pending send. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">root</parametername>
</parameternamelist>
<parameterdescription>
<para>the root node where the final handler provides the result </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to reduce on this node</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the pending send corresponding to the reduce </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="551" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="365" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a43d410b08ba8470cf0f060435b4f9ba3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OpT</type>
          </param>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::objgroup::proxy::Proxy&lt; void &gt;::reduceMsg</definition>
        <argsstring>(NodeType root, MsgT *const msg) const</argsstring>
        <name>reduceMsg</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>root</declname>
        </param>
        <param>
          <type>MsgT *const</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="559" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="381" bodyend="383"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="439" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.h" bodystart="439" bodyend="560"/>
    <listofallmembers>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a13f8d6751a246a449e7d13ae7eed3541" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy&lt; void &gt;</scope><name>broadcast</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1aef5ca6344823e49472221126a074ca90" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy&lt; void &gt;</scope><name>broadcast</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1ae600f4143bb8102bc15264adc713dfea" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy&lt; void &gt;</scope><name>broadcastMsg</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a5da935942453d85ca530bf8886a58028" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy&lt; void &gt;</scope><name>broadcastMsg</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a133d35ed66d898376ec5bb6e758183ed" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy&lt; void &gt;</scope><name>operator[]</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a8e3989588197eb5dc128302c93e74468" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy&lt; void &gt;</scope><name>reduce</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a95d80c0e5dc7fad3d49f834692c8da38" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy&lt; void &gt;</scope><name>reduce</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a545aeca8f6c0250221796b2138a4583d" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy&lt; void &gt;</scope><name>reduceMsg</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_3_01void_01_4_1a43d410b08ba8470cf0f060435b4f9ba3" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy&lt; void &gt;</scope><name>reduceMsg</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
