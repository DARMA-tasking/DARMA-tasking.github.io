<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1worker_1_1_worker_traits" kind="struct" language="C++" prot="public">
    <compoundname>vt::worker::WorkerTraits</compoundname>
    <includes refid="worker__traits_8h" local="no">worker_traits.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1a62aa14ab158ff54d290cc2124c5ce3e1" prot="public" static="no">
        <type>typename U::WorkerFunType</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::WorkerFunType_t =  typename U::WorkerFunType</definition>
        <argsstring></argsstring>
        <name>WorkerFunType_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="58" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1a69eeffd4c60f5b1a129e20ef0a85827d" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_traits_1a62aa14ab158ff54d290cc2124c5ce3e1" kindref="member">WorkerFunType_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::has_WorkerFunType =  detection::is_detected&lt;WorkerFunType_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_WorkerFunType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="59" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1a37e115e6de3c0dce681e017d2bd0baab" prot="public" static="no">
        <type>decltype(U(std::declval&lt; Vs &gt;()...))</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::constructor_t =  decltype(U(std::declval&lt;Vs&gt;()...))</definition>
        <argsstring></argsstring>
        <name>constructor_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="62" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1a001b1872338e22e51f91bde53cf2cb0a" prot="public" static="no">
        <type><ref refid="namespacevt_1a656e362091da17b9b93d0655b36e3392" kindref="member">WorkerIDType</ref> const  &amp;</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::worker_id_t =  WorkerIDType const&amp;</definition>
        <argsstring></argsstring>
        <name>worker_id_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="63" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1af8f4b5fb160922a2d259889c19ef9ad5" prot="public" static="no">
        <type><ref refid="namespacevt_1aa93398ea48f2cb6c188512250f7cc248" kindref="member">WorkerCountType</ref> const  &amp;</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::worker_count_t =  WorkerCountType const&amp;</definition>
        <argsstring></argsstring>
        <name>worker_count_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="64" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1a56b88053f1de41d391048fb82ab513f0" prot="public" static="no">
        <type><ref refid="namespacevt_1_1worker_1ae32a174a5348d27aafe73c2debea1a94" kindref="member">WorkerFinishedFnType</ref></type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::worker_finished_fn_t =  WorkerFinishedFnType</definition>
        <argsstring></argsstring>
        <name>worker_finished_fn_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="65" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1ac7982bde8aa7e29a3da7cd87d5db2048" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_traits_1a37e115e6de3c0dce681e017d2bd0baab" kindref="member">constructor_t</ref>, T, <ref refid="structvt_1_1worker_1_1_worker_traits_1a001b1872338e22e51f91bde53cf2cb0a" kindref="member">worker_id_t</ref>, <ref refid="structvt_1_1worker_1_1_worker_traits_1af8f4b5fb160922a2d259889c19ef9ad5" kindref="member">worker_count_t</ref>, <ref refid="structvt_1_1worker_1_1_worker_traits_1a56b88053f1de41d391048fb82ab513f0" kindref="member">worker_finished_fn_t</ref> &gt;</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::has_constructor =  detection::is_detected&lt; constructor_t, T, worker_id_t, worker_count_t, worker_finished_fn_t &gt;</definition>
        <argsstring></argsstring>
        <name>has_constructor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="66" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1a0cda24a5c8ac86e6877aaa24b23034fd" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().progress())</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::progress_t =  decltype(std::declval&lt;U&gt;().progress())</definition>
        <argsstring></argsstring>
        <name>progress_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="71" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1a431244d14714cc2bad0293ada8afb2e4" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_traits_1a0cda24a5c8ac86e6877aaa24b23034fd" kindref="member">progress_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::has_progress =  detection::is_detected&lt;progress_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_progress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="72" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1a5018e778cb47740877e26c016a077e78" prot="public" static="no">
        <type>decltype(U(std::declval&lt; U const  &amp; &gt;()))</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::copy_constructor_t =  decltype(U(std::declval&lt;U const&amp;&gt;()))</definition>
        <argsstring></argsstring>
        <name>copy_constructor_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="75" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1a426f21bc7d1913681a26c10b58ee5d0b" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_traits_1a5018e778cb47740877e26c016a077e78" kindref="member">copy_constructor_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::has_copy_constructor =  detection::is_detected&lt;copy_constructor_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_copy_constructor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="76" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1ab1c6768c82bad9bb5a911b5a676788a3" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().spawn())</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::spawn_t =  decltype(std::declval&lt;U&gt;().spawn())</definition>
        <argsstring></argsstring>
        <name>spawn_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="79" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1abe1fbf0bbaefdbf7ad3fa761aca06bc6" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_traits_1ab1c6768c82bad9bb5a911b5a676788a3" kindref="member">spawn_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::has_spawn =  detection::is_detected&lt;spawn_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_spawn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="80" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1a69a3d1b3845fdac60940d2b3e6a6b240" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().join())</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::join_t =  decltype(std::declval&lt;U&gt;().join())</definition>
        <argsstring></argsstring>
        <name>join_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="83" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1a3e5bb1748dd46eb95c0507016e009ae0" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_traits_1a69a3d1b3845fdac60940d2b3e6a6b240" kindref="member">join_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::has_join =  detection::is_detected&lt;join_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_join</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="84" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1ae3d04fe828e40c570a63b969b982e5d4" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().dispatch(std::declval&lt; typename U::WorkerFunType &gt;()))</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::dispatch_t =  decltype(std::declval&lt;U&gt;().dispatch( std::declval&lt;typename U::WorkerFunType&gt;()) )</definition>
        <argsstring></argsstring>
        <name>dispatch_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="87" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1adb7da9b18b2db529e85ed5a53ca0b0ea" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_traits_1ae3d04fe828e40c570a63b969b982e5d4" kindref="member">dispatch_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::has_dispatch =  detection::is_detected&lt;dispatch_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_dispatch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="90" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1a017de8e435dfce71e241f5288e199454" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;().enqueue(std::declval&lt; <ref refid="namespacevt_1_1worker_1a59d2fcdafa81fc0af7f921a258e42202" kindref="member">WorkUnitType</ref> &gt;()))</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::enqueue_t =  decltype(std::declval&lt;U&gt;().enqueue( std::declval&lt;WorkUnitType&gt;()) )</definition>
        <argsstring></argsstring>
        <name>enqueue_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="93" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_traits_1acca4e6684b4853e34e9d586256968cb6" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structvt_1_1worker_1_1_worker_traits_1a017de8e435dfce71e241f5288e199454" kindref="member">enqueue_t</ref>, T &gt;</type>
        <definition>using vt::worker::WorkerTraits&lt; T &gt;::has_enqueue =  detection::is_detected&lt;enqueue_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_enqueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="96" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structvt_1_1worker_1_1_worker_traits_1af1a45fbd305afd463afd7314a04c0ae4" prot="public" static="yes" mutable="no">
        <type>constexpr auto const</type>
        <definition>constexpr auto const vt::worker::WorkerTraits&lt; T &gt;::is_worker</definition>
        <argsstring></argsstring>
        <name>is_worker</name>
        <initializer>=
    
    has_constructor::value and not has_copy_constructor::value and
    
    has_WorkerFunType::value and
    
    
    has_spawn::value and has_join::value and has_progress::value and
    has_dispatch::value and has_enqueue::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_traits.h" line="99" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/worker/worker_traits.h" line="56" column="1" bodyfile="src/vt/worker/worker_traits.h" bodystart="56" bodyend="108"/>
    <listofallmembers>
      <member refid="structvt_1_1worker_1_1_worker_traits_1a37e115e6de3c0dce681e017d2bd0baab" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>constructor_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1a5018e778cb47740877e26c016a077e78" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>copy_constructor_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1ae3d04fe828e40c570a63b969b982e5d4" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>dispatch_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1a017de8e435dfce71e241f5288e199454" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>enqueue_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1ac7982bde8aa7e29a3da7cd87d5db2048" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>has_constructor</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1a426f21bc7d1913681a26c10b58ee5d0b" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>has_copy_constructor</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1adb7da9b18b2db529e85ed5a53ca0b0ea" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>has_dispatch</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1acca4e6684b4853e34e9d586256968cb6" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>has_enqueue</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1a3e5bb1748dd46eb95c0507016e009ae0" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>has_join</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1a431244d14714cc2bad0293ada8afb2e4" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>has_progress</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1abe1fbf0bbaefdbf7ad3fa761aca06bc6" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>has_spawn</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1a69eeffd4c60f5b1a129e20ef0a85827d" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>has_WorkerFunType</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1af1a45fbd305afd463afd7314a04c0ae4" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>is_worker</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1a69a3d1b3845fdac60940d2b3e6a6b240" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>join_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1a0cda24a5c8ac86e6877aaa24b23034fd" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>progress_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1ab1c6768c82bad9bb5a911b5a676788a3" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>spawn_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1af8f4b5fb160922a2d259889c19ef9ad5" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>worker_count_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1a56b88053f1de41d391048fb82ab513f0" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>worker_finished_fn_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1a001b1872338e22e51f91bde53cf2cb0a" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>worker_id_t</name></member>
      <member refid="structvt_1_1worker_1_1_worker_traits_1a62aa14ab158ff54d290cc2124c5ce3e1" prot="public" virt="non-virtual"><scope>vt::worker::WorkerTraits</scope><name>WorkerFunType_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
