<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>vt::vrt::collection::balance::LoadModel</compoundname>
    <derivedcompoundref refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model" prot="public" virt="non-virtual">vt::vrt::collection::balance::ComposedModel</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data" prot="public" virt="non-virtual">vt::vrt::collection::balance::RawData</derivedcompoundref>
    <includes refid="load__model_8h" local="no">load_model.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a90f345e752441d66b2893027f2626226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::balance::LoadModel::LoadModel</definition>
        <argsstring>()=default</argsstring>
        <name>LoadModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/load_model.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a6478a387f285b322a48ee1d8a80fc6f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vt::vrt::collection::balance::LoadModel::~LoadModel</definition>
        <argsstring>()=default</argsstring>
        <name>~LoadModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/load_model.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a621d040453688c70c168176b40cf90df" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vt::vrt::collection::balance::LoadModel::setLoads</definition>
        <argsstring>(std::unordered_map&lt; PhaseType, LoadMapType &gt; const *proc_load, std::unordered_map&lt; PhaseType, SubphaseLoadMapType &gt; const *proc_subphase_load, std::unordered_map&lt; PhaseType, CommMapType &gt; const *proc_comm)=0</argsstring>
        <name>setLoads</name>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a782bcf1ecfd0a88ded3e98c83f08cc6f">setLoads</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a2f9013d1f135574a03fe5de70ac11862">setLoads</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_comm_overhead_1a4c74d8adf7fa0fbc5e4767397b479305">setLoads</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection_1ad749f0ca3690c9e58d4b3ab882ed4cf3">setLoads</reimplementedby>
        <param>
          <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a45306ee4bf38fe3fb586d1ee2fa3d147" kindref="member">LoadMapType</ref> &gt; const *</type>
          <declname>proc_load</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a3d91523158c1025b7b665240072f3b7e" kindref="member">SubphaseLoadMapType</ref> &gt; const *</type>
          <declname>proc_subphase_load</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; <ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a10860c956804d644db54a16012352728" kindref="member">CommMapType</ref> &gt; const *</type>
          <declname>proc_comm</declname>
        </param>
        <briefdescription>
<para>Initialize the model instance with pointers to the measured load data. </para>        </briefdescription>
        <detaileddescription>
<para>This would typically be called by <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_manager" kindref="compound">LBManager</ref> when the user has passed a new model instance for a collection </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/load_model.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a4f1c6fb5d7d7a0b147755f025b1d5f5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vt::vrt::collection::balance::LoadModel::updateLoads</definition>
        <argsstring>(PhaseType last_completed_phase)=0</argsstring>
        <name>updateLoads</name>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a4aaae24a53ead0248b873911ce560a34">updateLoads</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1ad8108b4392d63b7f09e443920a64933a">updateLoads</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection_1a2b41fbbe2b684654f8dbfd9207b77501">updateLoads</reimplementedby>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>last_completed_phase</declname>
        </param>
        <briefdescription>
<para>Signals that load data for a new phase is available. </para>        </briefdescription>
        <detaileddescription>
<para>For models that want to do pre-computation based on measured loads before being asked to provide predictions from them</para><para>This would typically be called by <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_manager" kindref="compound">LBManager</ref> collectively inside an epoch that can be used for global communication in advance of any calls to <ref refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1ab51ce15ff1ff1341ba921555d4d57159" kindref="member">getWork()</ref></para><para>The <computeroutput>setLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/load_model.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1ab51ce15ff1ff1341ba921555d4d57159" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref></type>
        <definition>virtual TimeType vt::vrt::collection::balance::LoadModel::getWork</definition>
        <argsstring>(ElementIDType object, PhaseOffset when)=0</argsstring>
        <name>getWork</name>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1abb4ce5d944f229b411d9a3b61f370822">getWork</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_naive_persistence_1a1cea196b4ca24d5bad5f350f0adcd721">getWork</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_norm_1a377ea9ef65f621d12db2030414a2deda">getWork</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_persistence_median_last_n_1ac8ce962b50e41326109cc2f87fa19cf0">getWork</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_select_subphases_1abca8bb1ca9edf950931d1bfd026c0474">getWork</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_linear_model_1a21150f198d266175ea015c0caebad5b5">getWork</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_comm_overhead_1ab44aa1c71e7925c248aefe611f76f5c8">getWork</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a5de9a43648cfd18ca00f1f0a6c61be4d">getWork</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection_1a39813c26fddb8c8cdd6996187f42c173">getWork</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases_1a5adc006905ed0521ba40827df6d15575">getWork</reimplementedby>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset" kindref="compound">PhaseOffset</ref></type>
          <declname>when</declname>
        </param>
        <briefdescription>
<para>Provide an estimate of the given object&apos;s load during a specified interval. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>The object whose load is desired </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">when</parametername>
</parameternamelist>
<parameterdescription>
<para>The interval in which the estimated load is desired</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>How much computation time the object is estimated to require</para></simplesect>
The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/load_model.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1ac061725720a2017908090863080b70e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>unsigned int</type>
        <definition>virtual unsigned int vt::vrt::collection::balance::LoadModel::getNumPastPhasesNeeded</definition>
        <argsstring>(unsigned int look_back=0)=0</argsstring>
        <name>getNumPastPhasesNeeded</name>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_naive_persistence_1a7c4dcce4137f9c112a114686b6cbe691">getNumPastPhasesNeeded</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_persistence_median_last_n_1accad4d2fe2cc3701966e13bbb5dd793c">getNumPastPhasesNeeded</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_linear_model_1a454177a512bbb73e246d3a7ad823c8e4">getNumPastPhasesNeeded</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a8f709c3aeaf10e92c746d773d7ba6f9c">getNumPastPhasesNeeded</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1abf2a02ff624e66c7076bfe3dce961981">getNumPastPhasesNeeded</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection_1a1e2537d7294b8d1db3ed793d98dfb59c">getNumPastPhasesNeeded</reimplementedby>
        <param>
          <type>unsigned int</type>
          <declname>look_back</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Compute how many phases of past load statistics need to be kept availble for the model to use. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">look_back</parametername>
</parameternamelist>
<parameterdescription>
<para>How many phases into the past the caller intends to query</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>How many phases of past load statistics will be needed to satisfy the requested history </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/load_model.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a6ca139b4f14d79d1d59b46016efae221" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_object_iterator" kindref="compound">ObjectIterator</ref></type>
        <definition>virtual ObjectIterator vt::vrt::collection::balance::LoadModel::begin</definition>
        <argsstring>()=0</argsstring>
        <name>begin</name>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a54351249212ade8b2d25a857e71b256f">begin</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a8f34205887c08a22a1e5bef6ee358f2b">begin</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object enumeration, to abstract away access to the underlying structures from <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" kindref="compound">NodeStats</ref></para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/load_model.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a8474fb097bddbd75711e1e8d74084651" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_object_iterator" kindref="compound">ObjectIterator</ref></type>
        <definition>virtual ObjectIterator vt::vrt::collection::balance::LoadModel::end</definition>
        <argsstring>()=0</argsstring>
        <name>end</name>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a07ae6234d91c2daa7c2d51117b224f7d">end</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a23ca95221c6bffb7417aafa2c939b40a">end</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object enumeration, to abstract away access to the underlying structures from <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" kindref="compound">NodeStats</ref></para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/load_model.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a87b90c2daf3a34243a7a2af266aa0b29" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int vt::vrt::collection::balance::LoadModel::getNumObjects</definition>
        <argsstring>()=0</argsstring>
        <name>getNumObjects</name>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a586c3223d1f69ee9d5eb2930ff659051">getNumObjects</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a7b383954706cb8069e841a87c3ff3f8f">getNumObjects</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object enumeration, to abstract away access to the underlying structures from <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" kindref="compound">NodeStats</ref></para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/load_model.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a999b155237ce8ba253019e783462a9aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>unsigned int</type>
        <definition>virtual unsigned int vt::vrt::collection::balance::LoadModel::getNumCompletedPhases</definition>
        <argsstring>()=0</argsstring>
        <name>getNumCompletedPhases</name>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1a151f3230094feacd15015f51980b8e9e">getNumCompletedPhases</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a2797ee7c1b39b815fe63279a7d67ed90">getNumCompletedPhases</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of phases of history available</para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/load_model.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1ab46ea62e4228d4a64de9dd0adfe81af2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int vt::vrt::collection::balance::LoadModel::getNumSubphases</definition>
        <argsstring>()=0</argsstring>
        <name>getNumSubphases</name>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_select_subphases_1a347673e0bbc4ded04f32d97fea8f5b68">getNumSubphases</reimplementedby>
        <reimplementedby refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data_1aeb7830328dfb72f11740e79eed6a23aa">getNumSubphases</reimplementedby>
        <reimplementedby refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1af3ea09828c281d9c278198a19fe4e533">getNumSubphases</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of subphases recorded in the most recent completed phase</para><para>The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/load_model.h" line="189" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for transforming measurements of past object loads into predictions of future object load for load balancing strategies. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2290">
        <label>vt::vrt::collection::balance::NaivePersistence</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_naive_persistence"/>
        <childnode refid="2286" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2293">
        <label>vt::vrt::collection::balance::PersistenceMedianLastN</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_persistence_median_last_n"/>
        <childnode refid="2286" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2286">
        <label>vt::vrt::collection::balance::ComposedModel</label>
        <link refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model"/>
        <childnode refid="2285" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2289">
        <label>vt::vrt::collection::balance::MultiplePhases</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases"/>
        <childnode refid="2286" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2292">
        <label>vt::vrt::collection::balance::PerCollection</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection"/>
        <childnode refid="2286" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2288">
        <label>vt::vrt::collection::balance::LinearModel</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_linear_model"/>
        <childnode refid="2286" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2294">
        <label>vt::vrt::collection::balance::SelectSubphases</label>
        <link refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_select_subphases"/>
        <childnode refid="2286" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2285">
        <label>vt::vrt::collection::balance::LoadModel</label>
        <link refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model"/>
      </node>
      <node id="2295">
        <label>vt::vrt::collection::balance::RawData</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data"/>
        <childnode refid="2285" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2287">
        <label>vt::vrt::collection::balance::CommOverhead</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_comm_overhead"/>
        <childnode refid="2286" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2291">
        <label>vt::vrt::collection::balance::Norm</label>
        <link refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_norm"/>
        <childnode refid="2286" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/vt/vrt/collection/balance/model/load_model.h" line="96" column="1" bodyfile="src/vt/vrt/collection/balance/model/load_model.h" bodystart="95" bodyend="190"/>
    <listofallmembers>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a6ca139b4f14d79d1d59b46016efae221" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::balance::LoadModel</scope><name>begin</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a8474fb097bddbd75711e1e8d74084651" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::balance::LoadModel</scope><name>end</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a999b155237ce8ba253019e783462a9aa" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::balance::LoadModel</scope><name>getNumCompletedPhases</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a87b90c2daf3a34243a7a2af266aa0b29" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::balance::LoadModel</scope><name>getNumObjects</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1ac061725720a2017908090863080b70e5" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::balance::LoadModel</scope><name>getNumPastPhasesNeeded</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1ab46ea62e4228d4a64de9dd0adfe81af2" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::balance::LoadModel</scope><name>getNumSubphases</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1ab51ce15ff1ff1341ba921555d4d57159" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::balance::LoadModel</scope><name>getWork</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a90f345e752441d66b2893027f2626226" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::LoadModel</scope><name>LoadModel</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a621d040453688c70c168176b40cf90df" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::balance::LoadModel</scope><name>setLoads</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a4f1c6fb5d7d7a0b147755f025b1d5f5c" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::balance::LoadModel</scope><name>updateLoads</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a6478a387f285b322a48ee1d8a80fc6f7" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::LoadModel</scope><name>~LoadModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
