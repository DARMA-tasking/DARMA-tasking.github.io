<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1pipe_1_1callback_1_1_callback_anon" kind="struct" language="C++" prot="public">
    <compoundname>vt::pipe::callback::CallbackAnon</compoundname>
    <basecompoundref refid="structvt_1_1pipe_1_1callback_1_1_callback_base" prot="public" virt="non-virtual">vt::pipe::callback::CallbackBase&lt; signal::Signal&lt; MsgT &gt; &gt;</basecompoundref>
    <includes refid="callback__anon_8fwd_8h" local="no">callback_anon.fwd.h</includes>
    <templateparamlist>
      <param>
        <type>typename MsgT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a84629a45a0c53a8804a4fa68b6b4aaa7" prot="public" static="no">
        <type>typename <ref refid="structvt_1_1pipe_1_1signal_1_1_signal" kindref="compound">signal::Signal</ref>&lt; MsgT &gt;</type>
        <definition>using vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::SignalBaseType =  typename signal::Signal&lt;MsgT&gt;</definition>
        <argsstring></argsstring>
        <name>SignalBaseType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="61" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a710e9366e47c727549714e568b622f85" prot="public" static="no">
        <type>typename <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_base" kindref="compound">CallbackBase</ref>&lt; <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a84629a45a0c53a8804a4fa68b6b4aaa7" kindref="member">SignalBaseType</ref> &gt;::<ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a710e9366e47c727549714e568b622f85" kindref="member">SignalType</ref></type>
        <definition>using vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::SignalType =  typename CallbackBase&lt;SignalBaseType&gt;::SignalType</definition>
        <argsstring></argsstring>
        <name>SignalType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="62" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1ac503b95feb44bb0b60c1d69e1ed29074" prot="public" static="no">
        <type>typename SignalType::DataType</type>
        <definition>using vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::SignalDataType =  typename SignalType::DataType</definition>
        <argsstring></argsstring>
        <name>SignalDataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="63" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a2532c5d78c1fb298d4a369aae7b45e85" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1ac503b95feb44bb0b60c1d69e1ed29074" kindref="member">SignalDataType</ref>)&gt;</type>
        <definition>using vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::CallbackFnType =  std::function&lt;void(SignalDataType)&gt;</definition>
        <argsstring></argsstring>
        <name>CallbackFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="64" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a37f2e8be7b6c014a2a33232b678a05cc" prot="public" static="no">
        <type><ref refid="namespacevt_1_1pipe_1_1signal_1acbe257d1ae44f20fa9fd9b6ed3057caf" kindref="member">signal::SigVoidType</ref></type>
        <definition>using vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::VoidSigType =  signal::SigVoidType</definition>
        <argsstring></argsstring>
        <name>VoidSigType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="65" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a3aa19d4a1044d57ba4af22015331c20a" prot="public" static="no">
        <type>std::enable_if_t&lt; std::is_same&lt; T, <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a37f2e8be7b6c014a2a33232b678a05cc" kindref="member">VoidSigType</ref> &gt;::value, U &gt;</type>
        <definition>using vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::IsVoidType =  std::enable_if_t&lt;std::is_same&lt;T,VoidSigType&gt;::value,U&gt;</definition>
        <argsstring></argsstring>
        <name>IsVoidType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="67" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a91e58fe2f8165c826cecedde7e4535cf" prot="public" static="no">
        <type>std::enable_if_t&lt;!std::is_same&lt; T, <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a37f2e8be7b6c014a2a33232b678a05cc" kindref="member">VoidSigType</ref> &gt;::value, U &gt;</type>
        <definition>using vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::IsNotVoidType =  std::enable_if_t&lt;!std::is_same&lt;T,VoidSigType&gt;::value,U&gt;</definition>
        <argsstring></argsstring>
        <name>IsNotVoidType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="69" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1aaca363b861f00c073c7b73dbef6e01fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::CallbackAnon</definition>
        <argsstring>()=default</argsstring>
        <name>CallbackAnon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a1979ced8fbd839d64f67eafb8fccdcff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::CallbackAnon</definition>
        <argsstring>(CallbackAnon const &amp;)=default</argsstring>
        <name>CallbackAnon</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon" kindref="compound">CallbackAnon</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1ad9b8f6ae2a97e9e6b0e6cdbdbab34952" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::CallbackAnon</definition>
        <argsstring>(CallbackAnon &amp;&amp;)=default</argsstring>
        <name>CallbackAnon</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon" kindref="compound">CallbackAnon</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a3a20757f336876eaed296bd11897bf97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="76" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon.impl.h" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a5e4d44e498c5a31a452fa75aa3714fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon" kindref="compound">CallbackAnon</ref>&lt; MsgT &gt;::template <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a3aa19d4a1044d57ba4af22015331c20a" kindref="member">IsVoidType</ref>&lt; T &gt;</type>
        <definition>CallbackAnon&lt;MsgT&gt;::template IsVoidType&lt;T&gt; vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::triggerDispatch</definition>
        <argsstring>(SignalDataType *data, PipeType const &amp;pid)</argsstring>
        <name>triggerDispatch</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1ac503b95feb44bb0b60c1d69e1ed29074" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.impl.h" line="70" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon.impl.h" bodystart="70" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a2d66de99b38b4c89f880c408346247de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon" kindref="compound">CallbackAnon</ref>&lt; MsgT &gt;::template <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a91e58fe2f8165c826cecedde7e4535cf" kindref="member">IsNotVoidType</ref>&lt; T &gt;</type>
        <definition>CallbackAnon&lt;MsgT&gt;::template IsNotVoidType&lt;T&gt; vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::triggerDispatch</definition>
        <argsstring>(SignalDataType *data, PipeType const &amp;pid)</argsstring>
        <name>triggerDispatch</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1ac503b95feb44bb0b60c1d69e1ed29074" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.impl.h" line="90" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon.impl.h" bodystart="90" bodyend="110"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a71cd1781a5f639ddf5e2aac775c1d397" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a3aa19d4a1044d57ba4af22015331c20a" kindref="member">IsVoidType</ref>&lt; T &gt;</type>
        <definition>IsVoidType&lt;T&gt; vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::triggerDispatch</definition>
        <argsstring>(SignalDataType *data, PipeType const &amp;pid)</argsstring>
        <name>triggerDispatch</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1ac503b95feb44bb0b60c1d69e1ed29074" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a394463dec0c5e2dd0a96f7f8b6d6cfae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a91e58fe2f8165c826cecedde7e4535cf" kindref="member">IsNotVoidType</ref>&lt; T &gt;</type>
        <definition>IsNotVoidType&lt;T&gt; vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::triggerDispatch</definition>
        <argsstring>(SignalDataType *data, PipeType const &amp;pid)</argsstring>
        <name>triggerDispatch</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1ac503b95feb44bb0b60c1d69e1ed29074" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a15cae5134e53d426110f357bb05fed3c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::trigger_</definition>
        <argsstring>(SignalDataType *data, PipeType const &amp;pid) override</argsstring>
        <name>trigger_</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1ac503b95feb44bb0b60c1d69e1ed29074" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="85" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon.impl.h" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_anon_1aa94691cc38d84194b66f5bbb30f43686" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackAnon&lt; MsgT &gt;::trigger_</definition>
        <argsstring>(SignalDataType *data) override</argsstring>
        <name>trigger_</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1ac503b95feb44bb0b60c1d69e1ed29074" kindref="member">SignalDataType</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/anon/callback_anon.h" line="86" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon.impl.h" bodystart="118" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="583">
        <label>vt::pipe::callback::CallbackAnon&lt; MsgT &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_anon"/>
        <childnode refid="584" relation="public-inheritance">
        </childnode>
      </node>
      <node id="584">
        <label>vt::pipe::callback::CallbackBase&lt; signal::Signal&lt; MsgT &gt; &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="585">
        <label>vt::pipe::callback::CallbackAnon&lt; MsgT &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_anon"/>
        <childnode refid="586" relation="public-inheritance">
        </childnode>
      </node>
      <node id="586">
        <label>vt::pipe::callback::CallbackBase&lt; signal::Signal&lt; MsgT &gt; &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/pipe/callback/anon/callback_anon.fwd.h" line="52" column="1" bodyfile="src/vt/pipe/callback/anon/callback_anon.fwd.h" bodystart="52" bodyend="-1"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1aaca363b861f00c073c7b73dbef6e01fd" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>CallbackAnon</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a1979ced8fbd839d64f67eafb8fccdcff" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>CallbackAnon</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1ad9b8f6ae2a97e9e6b0e6cdbdbab34952" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>CallbackAnon</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aed02135f19f5d5ca4899d488ce402b64" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1aa90843711601bd1174ba64f69f754eb8" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a683cee48109181768cd44354bc98e3e1" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ae96d1355aa94b4fd32469bbb9280717c" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a18840ed75fb94811cb34c17da8703588" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a87a0d70f0b3a7c8d94eb62c278ba9e0e" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a182bd31e2c3f804bb61a4b43907061d2" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>CallbackBase</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a2532c5d78c1fb298d4a369aae7b45e85" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>CallbackFnType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a9ef1595197b291a660e6d19aadb0203e" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>expired</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a20ed519d03b62560080ce3bdb8986f03" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>finished</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a91e58fe2f8165c826cecedde7e4535cf" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>IsNotVoidType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a3aa19d4a1044d57ba4af22015331c20a" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>IsVoidType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a078375aa25cb0c0e2968804ef3a86a5f" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>operator=</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a3a20757f336876eaed296bd11897bf97" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>serialize</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a84629a45a0c53a8804a4fa68b6b4aaa7" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>SignalBaseType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1ac503b95feb44bb0b60c1d69e1ed29074" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>SignalDataType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a710e9366e47c727549714e568b622f85" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>SignalType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ad54d116447acb7f1d051db946b2e875c" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>trigger</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a15cae5134e53d426110f357bb05fed3c" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1aa94691cc38d84194b66f5bbb30f43686" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1a75a9b0103e0129f536385b10b86400c3" prot="protected" virt="pure-virtual" ambiguityscope="CallbackBase&lt; signal::Signal&lt; MsgT &gt; &gt;::"><scope>vt::pipe::callback::CallbackAnon</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1ac14c6c68a45c6f7e18c73daa45b23b83" prot="protected" virt="virtual" ambiguityscope="CallbackBase&lt; signal::Signal&lt; MsgT &gt; &gt;::"><scope>vt::pipe::callback::CallbackAnon</scope><name>trigger_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a71cd1781a5f639ddf5e2aac775c1d397" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>triggerDispatch</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a394463dec0c5e2dd0a96f7f8b6d6cfae" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>triggerDispatch</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a5e4d44e498c5a31a452fa75aa3714fac" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>triggerDispatch</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a2d66de99b38b4c89f880c408346247de" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>triggerDispatch</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_anon_1a37f2e8be7b6c014a2a33232b678a05cc" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>VoidSigType</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_1adc39148be97af3105f9b5765431bdc9a" prot="public" virt="virtual"><scope>vt::pipe::callback::CallbackAnon</scope><name>~CallbackBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
