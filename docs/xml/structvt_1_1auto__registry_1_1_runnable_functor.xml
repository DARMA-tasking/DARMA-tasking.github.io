<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1auto__registry_1_1_runnable_functor" kind="struct" language="C++" prot="public">
    <compoundname>vt::auto_registry::RunnableFunctor</compoundname>
    <includes refid="auto__registry__functor_8h" local="no">auto_registry_functor.h</includes>
    <templateparamlist>
      <param>
        <type>typename AdapterT</type>
      </param>
      <param>
        <type>typename RegT</type>
      </param>
      <param>
        <type>typename InfoT</type>
      </param>
      <param>
        <type>typename FnT</type>
      </param>
      <param>
        <type>bool</type>
        <declname>msg</declname>
        <defname>msg</defname>
      </param>
      <param>
        <type>typename...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1auto__registry_1_1_runnable_functor_1a9453e4491db65054b10e21b12658b1bc" prot="public" static="no">
        <type>AdapterT</type>
        <definition>using vt::auto_registry::RunnableFunctor&lt; AdapterT, RegT, InfoT, FnT, msg, Args &gt;::AdapterType =  AdapterT</definition>
        <argsstring></argsstring>
        <name>AdapterType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/functor/auto_registry_functor.h" line="82" column="1" bodyfile="src/vt/registry/auto/functor/auto_registry_functor.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structvt_1_1auto__registry_1_1_runnable_functor_1a72e7d2e928c18ad46ee64f73c5dae509" prot="public" static="yes" mutable="no">
        <type>constexpr bool const</type>
        <definition>bool const vt::auto_registry::RunnableFunctor&lt; AdapterT, RegT, InfoT, FnT, msg, Args &gt;::IsMsgType</definition>
        <argsstring></argsstring>
        <name>IsMsgType</name>
        <initializer>= msg</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/functor/auto_registry_functor.h" line="84" column="1" bodyfile="src/vt/registry/auto/functor/auto_registry_functor.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1auto__registry_1_1_runnable_functor_1ad96ef115f3351bfe2e256f87d303e57a" prot="public" static="yes" mutable="no">
        <type><ref refid="namespacevt_1_1auto__registry_1ae295e18699146815bb7d7674594d95d7" kindref="member">AutoHandlerType</ref> const</type>
        <definition>AutoHandlerType const vt::auto_registry::RunnableFunctor&lt; AdapterT, RegT, InfoT, FnT, msg, Args &gt;::idx</definition>
        <argsstring></argsstring>
        <name>idx</name>
        <initializer>=
  <ref refid="namespacevt_1_1auto__registry_1ab7e130e8790e4df4dc1d35476d1736e0" kindref="member">registerActiveFunctor</ref>&lt;
    <ref refid="structvt_1_1auto__registry_1_1_runnable_functor" kindref="compound">RunnableFunctor</ref>&lt;AdapterT, RegT, InfoT, FnT, msg, Args...&gt;,
    RegT, InfoT, FnT
  &gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/functor/auto_registry_functor.h" line="86" column="1" bodyfile="src/vt/registry/auto/functor/auto_registry_functor.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1auto__registry_1_1_runnable_functor_1a4dee5a83ee53d3f6a309d28091cfd6ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::auto_registry::RunnableFunctor&lt; AdapterT, RegT, InfoT, FnT, msg, Args &gt;::RunnableFunctor</definition>
        <argsstring>()=default</argsstring>
        <name>RunnableFunctor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/functor/auto_registry_functor.h" line="88" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/registry/auto/functor/auto_registry_functor.h" line="81" column="1" bodyfile="src/vt/registry/auto/functor/auto_registry_functor.h" bodystart="81" bodyend="89"/>
    <listofallmembers>
      <member refid="structvt_1_1auto__registry_1_1_runnable_functor_1a9453e4491db65054b10e21b12658b1bc" prot="public" virt="non-virtual"><scope>vt::auto_registry::RunnableFunctor</scope><name>AdapterType</name></member>
      <member refid="structvt_1_1auto__registry_1_1_runnable_functor_1ad96ef115f3351bfe2e256f87d303e57a" prot="public" virt="non-virtual"><scope>vt::auto_registry::RunnableFunctor</scope><name>idx</name></member>
      <member refid="structvt_1_1auto__registry_1_1_runnable_functor_1a72e7d2e928c18ad46ee64f73c5dae509" prot="public" virt="non-virtual"><scope>vt::auto_registry::RunnableFunctor</scope><name>IsMsgType</name></member>
      <member refid="structvt_1_1auto__registry_1_1_runnable_functor_1a4dee5a83ee53d3f6a309d28091cfd6ff" prot="public" virt="non-virtual"><scope>vt::auto_registry::RunnableFunctor</scope><name>RunnableFunctor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
