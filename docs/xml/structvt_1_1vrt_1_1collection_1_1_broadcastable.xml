<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1_broadcastable" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::Broadcastable</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BaseProxyT</basecompoundref>
    <includes refid="broadcastable_8h" local="no">broadcastable.h</includes>
    <templateparamlist>
      <param>
        <type>typename ColT</type>
      </param>
      <param>
        <type>typename IndexT</type>
      </param>
      <param>
        <type>typename BaseProxyT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1afc16bdb399c4a846fd741062d995a339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::Broadcastable</definition>
        <argsstring>()=default</argsstring>
        <name>Broadcastable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1ae8d8b03ad2ab2d9c74a3c2b4537ff806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::Broadcastable</definition>
        <argsstring>(Broadcastable const &amp;)=default</argsstring>
        <name>Broadcastable</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_broadcastable" kindref="compound">Broadcastable</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1ae2095333f93c2448ee62b0dd7edcebd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::Broadcastable</definition>
        <argsstring>(Broadcastable &amp;&amp;)=default</argsstring>
        <name>Broadcastable</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_broadcastable" kindref="compound">Broadcastable</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a62e91c5dfe22893acb08c01289de3941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::Broadcastable</definition>
        <argsstring>(VirtualProxyType const in_proxy)</argsstring>
        <name>Broadcastable</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const</type>
          <declname>in_proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="62" column="1" bodyfile="src/vt/vrt/collection/broadcast/broadcastable.impl.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a40df56c587e61448857f71acedce53bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_broadcastable" kindref="compound">Broadcastable</ref> &amp;</type>
        <definition>Broadcastable&amp; vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::operator=</definition>
        <argsstring>(Broadcastable const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_broadcastable" kindref="compound">Broadcastable</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a0a08e1ab7c78e36b3ecb5b6a4d399dab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::broadcast</definition>
        <argsstring>(MsgT *msg) const</argsstring>
        <name>broadcast</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="68" column="1" bodyfile="src/vt/vrt/collection/broadcast/broadcastable.impl.h" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a84e88085c04b2293e019faf986a4996a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::broadcast</definition>
        <argsstring>(MsgSharedPtr&lt; MsgT &gt; msg) const</argsstring>
        <name>broadcast</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="72" column="1" bodyfile="src/vt/vrt/collection/broadcast/broadcastable.impl.h" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a520d37e5da6ce89657f6d33162a23003" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::broadcastMsg</definition>
        <argsstring>(messaging::MsgPtrThief&lt; MsgT &gt; msg) const</argsstring>
        <name>broadcastMsg</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_ptr_thief" kindref="compound">messaging::MsgPtrThief</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Rooted broadcast with action function handler. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Takes ownership of the supplied message</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="83" column="1" bodyfile="src/vt/vrt/collection/broadcast/broadcastable.impl.h" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a96cd21a1be6313144a8c4aa3683eaa05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::broadcast</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>broadcast</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Rooted broadcast with action function handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments needed for creteating the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="95" column="1" bodyfile="src/vt/vrt/collection/broadcast/broadcastable.impl.h" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a0a08e1ab7c78e36b3ecb5b6a4d399dab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::broadcast</definition>
        <argsstring>(MsgT *msg) const</argsstring>
        <name>broadcast</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a84e88085c04b2293e019faf986a4996a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::broadcast</definition>
        <argsstring>(MsgSharedPtr&lt; MsgT &gt; msg) const</argsstring>
        <name>broadcast</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a520d37e5da6ce89657f6d33162a23003" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::broadcastMsg</definition>
        <argsstring>(messaging::MsgPtrThief&lt; MsgT &gt; msg) const</argsstring>
        <name>broadcastMsg</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_ptr_thief" kindref="compound">messaging::MsgPtrThief</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Rooted broadcast with action member handler. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Takes ownership of the supplied message</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a96cd21a1be6313144a8c4aa3683eaa05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::broadcast</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>broadcast</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Rooted broadcast with action member handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments needed for creteating the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a70ec0f06ef5566c713a4d960a8faa39b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::broadcastCollectiveMsg</definition>
        <argsstring>(messaging::MsgPtrThief&lt; MsgT &gt; msg) const</argsstring>
        <name>broadcastCollectiveMsg</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_ptr_thief" kindref="compound">messaging::MsgPtrThief</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Collective broadcast with action function handler. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Takes ownership of the supplied message</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="138" column="1" bodyfile="src/vt/vrt/collection/broadcast/broadcastable.impl.h" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1acef03dd57082f32556bef0e536a07fe9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::broadcastCollective</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>broadcastCollective</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Create message (with action function handler) and broadcast it in a collective manner to the collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments needed for creteating the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="151" column="1" bodyfile="src/vt/vrt/collection/broadcast/broadcastable.impl.h" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a70ec0f06ef5566c713a4d960a8faa39b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::broadcastCollectiveMsg</definition>
        <argsstring>(messaging::MsgPtrThief&lt; MsgT &gt; msg) const</argsstring>
        <name>broadcastCollectiveMsg</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_ptr_thief" kindref="compound">messaging::MsgPtrThief</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Collective broadcast with action member handler. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Takes ownership of the supplied message</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_broadcastable_1acef03dd57082f32556bef0e536a07fe9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;::broadcastCollective</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>broadcastCollective</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Create message (with action member handler) and broadcast it in a collective manner to the collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments needed for creteating the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="175" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="455">
        <label>vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_broadcastable"/>
        <childnode refid="456" relation="public-inheritance">
        </childnode>
      </node>
      <node id="456">
        <label>BaseProxyT</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="457">
        <label>vt::vrt::collection::Broadcastable&lt; ColT, IndexT, BaseProxyT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_broadcastable"/>
        <childnode refid="458" relation="public-inheritance">
        </childnode>
      </node>
      <node id="458">
        <label>BaseProxyT</label>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/broadcast/broadcastable.h" line="58" column="1" bodyfile="src/vt/vrt/collection/broadcast/broadcastable.h" bodystart="58" bodyend="176"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a0a08e1ab7c78e36b3ecb5b6a4d399dab" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>broadcast</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a84e88085c04b2293e019faf986a4996a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>broadcast</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a96cd21a1be6313144a8c4aa3683eaa05" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>broadcast</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a0a08e1ab7c78e36b3ecb5b6a4d399dab" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>broadcast</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a84e88085c04b2293e019faf986a4996a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>broadcast</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a96cd21a1be6313144a8c4aa3683eaa05" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>broadcast</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1afc16bdb399c4a846fd741062d995a339" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>Broadcastable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1ae8d8b03ad2ab2d9c74a3c2b4537ff806" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>Broadcastable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1ae2095333f93c2448ee62b0dd7edcebd0" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>Broadcastable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a62e91c5dfe22893acb08c01289de3941" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>Broadcastable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1acef03dd57082f32556bef0e536a07fe9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>broadcastCollective</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1acef03dd57082f32556bef0e536a07fe9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>broadcastCollective</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a70ec0f06ef5566c713a4d960a8faa39b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>broadcastCollectiveMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a70ec0f06ef5566c713a4d960a8faa39b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>broadcastCollectiveMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a520d37e5da6ce89657f6d33162a23003" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>broadcastMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a520d37e5da6ce89657f6d33162a23003" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>broadcastMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_broadcastable_1a40df56c587e61448857f71acedce53bc" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Broadcastable</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
