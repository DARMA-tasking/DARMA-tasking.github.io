<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="diagnostic__value__format_8h" kind="file" language="C++">
    <compoundname>diagnostic_value_format.h</compoundname>
    <includes refid="diagnostic__value_8h" local="yes">vt/runtime/component/diagnostic_value.h</includes>
    <includes refid="diagnostic__units_8h" local="yes">vt/runtime/component/diagnostic_units.h</includes>
    <includes refid="diagnostic__enum__format_8h" local="yes">vt/runtime/component/diagnostic_enum_format.h</includes>
    <includes refid="memory__units_8h" local="yes">vt/utils/memory/memory_units.h</includes>
    <includes local="no">fmt/format.h</includes>
    <includedby refid="diagnostic__value_8cc" local="yes">src/vt/runtime/component/diagnostic_value.cc</includedby>
    <incdepgraph>
      <node id="205888">
        <label>list</label>
      </node>
      <node id="205788">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
        <childnode refid="205789" relation="include">
        </childnode>
      </node>
      <node id="205881">
        <label>atomic</label>
      </node>
      <node id="205839">
        <label>checkpoint/common.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2common_8h"/>
        <childnode refid="205840" relation="include">
        </childnode>
        <childnode refid="205821" relation="include">
        </childnode>
        <childnode refid="205787" relation="include">
        </childnode>
        <childnode refid="205841" relation="include">
        </childnode>
        <childnode refid="205842" relation="include">
        </childnode>
        <childnode refid="205822" relation="include">
        </childnode>
      </node>
      <node id="205799">
        <label>functional</label>
      </node>
      <node id="205896">
        <label>queue</label>
      </node>
      <node id="205807">
        <label>fmt/format.h</label>
      </node>
      <node id="205875">
        <label>checkpoint/dispatch/vrt/derived.h</label>
        <link refid="derived_8h"/>
        <childnode refid="205866" relation="include">
        </childnode>
        <childnode refid="205869" relation="include">
        </childnode>
        <childnode refid="205871" relation="include">
        </childnode>
        <childnode refid="205872" relation="include">
        </childnode>
        <childnode refid="205873" relation="include">
        </childnode>
      </node>
      <node id="205832">
        <label>limits</label>
      </node>
      <node id="205790">
        <label>vt/configs/features/features_metafeatures.h</label>
        <link refid="features__metafeatures_8h"/>
        <childnode refid="205789" relation="include">
        </childnode>
      </node>
      <node id="205900">
        <label>checkpoint/container/string_serialize.h</label>
        <link refid="string__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
      </node>
      <node id="205882">
        <label>checkpoint/container/chrono_serialize.h</label>
        <link refid="chrono__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205883" relation="include">
        </childnode>
      </node>
      <node id="205805">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="205794" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
      </node>
      <node id="205794">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="205795" relation="include">
        </childnode>
        <childnode refid="205796" relation="include">
        </childnode>
      </node>
      <node id="205906">
        <label>checkpoint/container/view_serialize.h</label>
        <link refid="view__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205838" relation="include">
        </childnode>
        <childnode refid="205907" relation="include">
        </childnode>
        <childnode refid="205908" relation="include">
        </childnode>
        <childnode refid="205909" relation="include">
        </childnode>
      </node>
      <node id="205869">
        <label>checkpoint/dispatch/vrt/object_registry.h</label>
        <link refid="object__registry_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205866" relation="include">
        </childnode>
        <childnode refid="205870" relation="include">
        </childnode>
        <childnode refid="205799" relation="include">
        </childnode>
        <childnode refid="205796" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
      </node>
      <node id="205838">
        <label>checkpoint/serializers/serializers_headers.h</label>
        <link refid="serializers__headers_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205843" relation="include">
        </childnode>
        <childnode refid="205844" relation="include">
        </childnode>
        <childnode refid="205845" relation="include">
        </childnode>
        <childnode refid="205846" relation="include">
        </childnode>
        <childnode refid="205856" relation="include">
        </childnode>
      </node>
      <node id="205845">
        <label>checkpoint/serializers/sizer.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2serializers_2sizer_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205843" relation="include">
        </childnode>
      </node>
      <node id="205884">
        <label>checkpoint/container/enum_serialize.h</label>
        <link refid="enum__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205838" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
      </node>
      <node id="205840">
        <label>checkpoint/cmake_config.h</label>
      </node>
      <node id="205831">
        <label>vt/utils/adt/histogram_approx.h</label>
        <link refid="histogram__approx_8h"/>
        <childnode refid="205783" relation="include">
        </childnode>
        <childnode refid="205796" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205832" relation="include">
        </childnode>
        <childnode refid="205833" relation="include">
        </childnode>
        <childnode refid="205834" relation="include">
        </childnode>
        <childnode refid="205807" relation="include">
        </childnode>
      </node>
      <node id="205843">
        <label>checkpoint/serializers/base_serializer.h</label>
        <link refid="base__serializer_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
        <childnode refid="205821" relation="include">
        </childnode>
      </node>
      <node id="205912">
        <label>vt/utils/memory/memory_units.h</label>
        <link refid="memory__units_8h"/>
        <childnode refid="205783" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
      </node>
      <node id="205787">
        <label>cstdint</label>
      </node>
      <node id="205878">
        <label>checkpoint/container/array_serialize.h</label>
        <link refid="array__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205838" relation="include">
        </childnode>
        <childnode refid="205879" relation="include">
        </childnode>
      </node>
      <node id="205830">
        <label>vt/utils/adt/union.h</label>
        <link refid="union_8h"/>
        <childnode refid="205783" relation="include">
        </childnode>
      </node>
      <node id="205824">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="205810" relation="include">
        </childnode>
        <childnode refid="205798" relation="include">
        </childnode>
        <childnode refid="205818" relation="include">
        </childnode>
        <childnode refid="205823" relation="include">
        </childnode>
        <childnode refid="205825" relation="include">
        </childnode>
        <childnode refid="205805" relation="include">
        </childnode>
        <childnode refid="205822" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
        <childnode refid="205827" relation="include">
        </childnode>
        <childnode refid="205807" relation="include">
        </childnode>
      </node>
      <node id="205860">
        <label>checkpoint/dispatch/dispatch_serializer.h</label>
        <link refid="dispatch__serializer_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205861" relation="include">
        </childnode>
        <childnode refid="205863" relation="include">
        </childnode>
        <childnode refid="205864" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205821" relation="include">
        </childnode>
      </node>
      <node id="205898">
        <label>checkpoint/container/raw_ptr_serialize.h</label>
        <link refid="raw__ptr__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
      </node>
      <node id="205833">
        <label>cmath</label>
      </node>
      <node id="205822">
        <label>cassert</label>
      </node>
      <node id="205819">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="205810" relation="include">
        </childnode>
        <childnode refid="205798" relation="include">
        </childnode>
        <childnode refid="205818" relation="include">
        </childnode>
        <childnode refid="205820" relation="include">
        </childnode>
        <childnode refid="205805" relation="include">
        </childnode>
        <childnode refid="205812" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
        <childnode refid="205822" relation="include">
        </childnode>
        <childnode refid="205807" relation="include">
        </childnode>
      </node>
      <node id="205802">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="205803" relation="include">
        </childnode>
      </node>
      <node id="205810">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="205797" relation="include">
        </childnode>
        <childnode refid="205811" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
      </node>
      <node id="205885">
        <label>checkpoint/container/function_serialize.h</label>
        <link refid="function__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205799" relation="include">
        </childnode>
      </node>
      <node id="205870">
        <label>checkpoint/dispatch/reconstructor.h</label>
        <link refid="reconstructor_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205861" relation="include">
        </childnode>
        <childnode refid="205862" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205821" relation="include">
        </childnode>
      </node>
      <node id="205910">
        <label>checkpoint/checkpoint_api.impl.h</label>
        <link refid="checkpoint__api_8impl_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205837" relation="include">
        </childnode>
        <childnode refid="205849" relation="include">
        </childnode>
        <childnode refid="205848" relation="include">
        </childnode>
        <childnode refid="205850" relation="include">
        </childnode>
      </node>
      <node id="205803">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
      </node>
      <node id="205846">
        <label>checkpoint/serializers/packer.h</label>
        <link refid="packer_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205847" relation="include">
        </childnode>
        <childnode refid="205848" relation="include">
        </childnode>
        <childnode refid="205851" relation="include">
        </childnode>
        <childnode refid="205852" relation="include">
        </childnode>
        <childnode refid="205853" relation="include">
        </childnode>
        <childnode refid="205854" relation="include">
        </childnode>
      </node>
      <node id="205808">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="205809" relation="include">
        </childnode>
        <childnode refid="205813" relation="include">
        </childnode>
        <childnode refid="205817" relation="include">
        </childnode>
      </node>
      <node id="205795">
        <label>string</label>
      </node>
      <node id="205852">
        <label>checkpoint/buffer/user_buffer.h</label>
        <link refid="user__buffer_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205848" relation="include">
        </childnode>
      </node>
      <node id="205905">
        <label>checkpoint/container/unique_ptr_serialize.h</label>
        <link refid="unique__ptr__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205870" relation="include">
        </childnode>
        <childnode refid="205867" relation="include">
        </childnode>
      </node>
      <node id="205848">
        <label>checkpoint/buffer/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205849" relation="include">
        </childnode>
        <childnode refid="205850" relation="include">
        </childnode>
      </node>
      <node id="205909">
        <label>checkpoint/container/view_traverse_ndim.h</label>
        <link refid="view__traverse__ndim_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205838" relation="include">
        </childnode>
        <childnode refid="205907" relation="include">
        </childnode>
      </node>
      <node id="205891">
        <label>map</label>
      </node>
      <node id="205864">
        <label>checkpoint/dispatch/dispatch_serializer_nonbyte.h</label>
        <link refid="dispatch__serializer__nonbyte_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205861" relation="include">
        </childnode>
        <childnode refid="205865" relation="include">
        </childnode>
        <childnode refid="205867" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205821" relation="include">
        </childnode>
        <childnode refid="205822" relation="include">
        </childnode>
      </node>
      <node id="205876">
        <label>checkpoint/dispatch/dispatch_byte_macro.h</label>
        <link refid="dispatch__byte__macro_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
      </node>
      <node id="205825">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="205810" relation="include">
        </childnode>
        <childnode refid="205786" relation="include">
        </childnode>
        <childnode refid="205821" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
        <childnode refid="205796" relation="include">
        </childnode>
        <childnode refid="205826" relation="include">
        </childnode>
      </node>
      <node id="205826">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="205825" relation="include">
        </childnode>
        <childnode refid="205805" relation="include">
        </childnode>
        <childnode refid="205821" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
        <childnode refid="205796" relation="include">
        </childnode>
        <childnode refid="205807" relation="include">
        </childnode>
      </node>
      <node id="205894">
        <label>unordered_set</label>
      </node>
      <node id="205791">
        <label>vt/configs/features/features_enableif.h</label>
        <link refid="features__enableif_8h"/>
        <childnode refid="205788" relation="include">
        </childnode>
        <childnode refid="205789" relation="include">
        </childnode>
      </node>
      <node id="205862">
        <label>checkpoint/dispatch/reconstructor_tag.h</label>
        <link refid="reconstructor__tag_8h"/>
      </node>
      <node id="205866">
        <label>checkpoint/dispatch/vrt/registry_common.h</label>
        <link refid="registry__common_8h"/>
        <childnode refid="205815" relation="include">
        </childnode>
      </node>
      <node id="205887">
        <label>checkpoint/container/container_serialize.h</label>
        <link refid="container__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205838" relation="include">
        </childnode>
      </node>
      <node id="205786">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="205787" relation="include">
        </childnode>
        <childnode refid="205788" relation="include">
        </childnode>
        <childnode refid="205789" relation="include">
        </childnode>
        <childnode refid="205790" relation="include">
        </childnode>
        <childnode refid="205791" relation="include">
        </childnode>
        <childnode refid="205792" relation="include">
        </childnode>
      </node>
      <node id="205861">
        <label>checkpoint/traits/serializable_traits.h</label>
        <link refid="serializable__traits_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205838" relation="include">
        </childnode>
        <childnode refid="205862" relation="include">
        </childnode>
        <childnode refid="205787" relation="include">
        </childnode>
        <childnode refid="205822" relation="include">
        </childnode>
      </node>
      <node id="205911">
        <label>vt/runtime/component/diagnostic_enum_format.h</label>
        <link refid="diagnostic__enum__format_8h"/>
        <childnode refid="205836" relation="include">
        </childnode>
        <childnode refid="205828" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
      </node>
      <node id="205871">
        <label>checkpoint/dispatch/vrt/serializer_registry.h</label>
        <link refid="serializer__registry_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205866" relation="include">
        </childnode>
        <childnode refid="205799" relation="include">
        </childnode>
        <childnode refid="205796" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
      </node>
      <node id="205804">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="205784" relation="include">
        </childnode>
        <childnode refid="205798" relation="include">
        </childnode>
        <childnode refid="205800" relation="include">
        </childnode>
      </node>
      <node id="205903">
        <label>checkpoint/container/tuple_serialize.h</label>
        <link refid="tuple__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205838" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205842" relation="include">
        </childnode>
      </node>
      <node id="205857">
        <label>checkpoint/serializers/unpacker.impl.h</label>
        <link refid="unpacker_8impl_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205847" relation="include">
        </childnode>
        <childnode refid="205856" relation="include">
        </childnode>
        <childnode refid="205821" relation="include">
        </childnode>
        <childnode refid="205855" relation="include">
        </childnode>
      </node>
      <node id="205901">
        <label>checkpoint/container/thread_serialize.h</label>
        <link refid="thread__serialize_8h"/>
        <childnode refid="205902" relation="include">
        </childnode>
        <childnode refid="205839" relation="include">
        </childnode>
      </node>
      <node id="205867">
        <label>checkpoint/dispatch/vrt/virtual_serialize.h</label>
        <link refid="virtual__serialize_8h"/>
        <childnode refid="205868" relation="include">
        </childnode>
        <childnode refid="205875" relation="include">
        </childnode>
      </node>
      <node id="205784">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="205785" relation="include">
        </childnode>
        <childnode refid="205786" relation="include">
        </childnode>
        <childnode refid="205793" relation="include">
        </childnode>
      </node>
      <node id="205811">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="205795" relation="include">
        </childnode>
      </node>
      <node id="205798">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="205787" relation="include">
        </childnode>
        <childnode refid="205799" relation="include">
        </childnode>
      </node>
      <node id="205814">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="205797" relation="include">
        </childnode>
        <childnode refid="205786" relation="include">
        </childnode>
        <childnode refid="205810" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
        <childnode refid="205816" relation="include">
        </childnode>
      </node>
      <node id="205873">
        <label>checkpoint/dispatch/vrt/serialize_instantiator.h</label>
        <link refid="serialize__instantiator_8h"/>
        <childnode refid="205871" relation="include">
        </childnode>
        <childnode refid="205874" relation="include">
        </childnode>
      </node>
      <node id="205849">
        <label>checkpoint/checkpoint_api.h</label>
        <link refid="checkpoint__api_8h"/>
        <childnode refid="205821" relation="include">
        </childnode>
        <childnode refid="205799" relation="include">
        </childnode>
        <childnode refid="205850" relation="include">
        </childnode>
      </node>
      <node id="205806">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
        <childnode refid="205801" relation="include">
        </childnode>
      </node>
      <node id="205809">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="205786" relation="include">
        </childnode>
        <childnode refid="205798" relation="include">
        </childnode>
        <childnode refid="205810" relation="include">
        </childnode>
        <childnode refid="205812" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
        <childnode refid="205807" relation="include">
        </childnode>
      </node>
      <node id="205828">
        <label>vt/runtime/component/diagnostic_types.h</label>
        <link refid="diagnostic__types_8h"/>
      </node>
      <node id="205841">
        <label>cstdio</label>
      </node>
      <node id="205865">
        <label>checkpoint/dispatch/vrt/virtual_serialize_traits.h</label>
        <link refid="virtual__serialize__traits_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205866" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
      </node>
      <node id="205899">
        <label>checkpoint/container/shared_ptr_serialize.h</label>
        <link refid="shared__ptr__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
      </node>
      <node id="205801">
        <label>tuple</label>
      </node>
      <node id="205854">
        <label>checkpoint/serializers/packer.impl.h</label>
        <link refid="packer_8impl_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205847" relation="include">
        </childnode>
        <childnode refid="205848" relation="include">
        </childnode>
        <childnode refid="205855" relation="include">
        </childnode>
      </node>
      <node id="205874">
        <label>checkpoint/dispatch/vrt/link_derived_to_base_idx.h</label>
        <link refid="link__derived__to__base__idx_8h"/>
        <childnode refid="205871" relation="include">
        </childnode>
      </node>
      <node id="205793">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="205794" relation="include">
        </childnode>
        <childnode refid="205797" relation="include">
        </childnode>
        <childnode refid="205786" relation="include">
        </childnode>
        <childnode refid="205805" relation="include">
        </childnode>
        <childnode refid="205806" relation="include">
        </childnode>
        <childnode refid="205807" relation="include">
        </childnode>
      </node>
      <node id="205897">
        <label>stack</label>
      </node>
      <node id="205796">
        <label>vector</label>
      </node>
      <node id="205781">
        <label>src/vt/runtime/component/diagnostic_value_format.h</label>
        <link refid="diagnostic__value__format_8h"/>
        <childnode refid="205782" relation="include">
        </childnode>
        <childnode refid="205836" relation="include">
        </childnode>
        <childnode refid="205911" relation="include">
        </childnode>
        <childnode refid="205912" relation="include">
        </childnode>
        <childnode refid="205807" relation="include">
        </childnode>
      </node>
      <node id="205859">
        <label>checkpoint/dispatch/clean_type.h</label>
        <link refid="clean__type_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
      </node>
      <node id="205863">
        <label>checkpoint/dispatch/dispatch_serializer_byte.h</label>
        <link refid="dispatch__serializer__byte_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205861" relation="include">
        </childnode>
        <childnode refid="205864" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205821" relation="include">
        </childnode>
      </node>
      <node id="205880">
        <label>checkpoint/container/atomic_serialize.h</label>
        <link refid="atomic__serialize_8h"/>
        <childnode refid="205881" relation="include">
        </childnode>
        <childnode refid="205839" relation="include">
        </childnode>
      </node>
      <node id="205842">
        <label>utility</label>
      </node>
      <node id="205904">
        <label>checkpoint/container/vector_serialize.h</label>
        <link refid="vector__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205838" relation="include">
        </childnode>
        <childnode refid="205796" relation="include">
        </childnode>
      </node>
      <node id="205879">
        <label>array</label>
      </node>
      <node id="205827">
        <label>sstream</label>
      </node>
      <node id="205895">
        <label>checkpoint/container/queue_serialize.h</label>
        <link refid="queue__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205896" relation="include">
        </childnode>
        <childnode refid="205897" relation="include">
        </childnode>
      </node>
      <node id="205868">
        <label>checkpoint/dispatch/vrt/base.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2vrt_2base_8h"/>
        <childnode refid="205866" relation="include">
        </childnode>
        <childnode refid="205869" relation="include">
        </childnode>
        <childnode refid="205871" relation="include">
        </childnode>
        <childnode refid="205872" relation="include">
        </childnode>
        <childnode refid="205873" relation="include">
        </childnode>
      </node>
      <node id="205782">
        <label>vt/runtime/component/diagnostic_value.h</label>
        <link refid="diagnostic__value_8h"/>
        <childnode refid="205783" relation="include">
        </childnode>
        <childnode refid="205828" relation="include">
        </childnode>
        <childnode refid="205829" relation="include">
        </childnode>
        <childnode refid="205835" relation="include">
        </childnode>
        <childnode refid="205831" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
        <childnode refid="205833" relation="include">
        </childnode>
      </node>
      <node id="205785">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="205820">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="205821" relation="include">
        </childnode>
        <childnode refid="205796" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
      </node>
      <node id="205789">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
      </node>
      <node id="205851">
        <label>checkpoint/buffer/managed_buffer.h</label>
        <link refid="managed__buffer_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205848" relation="include">
        </childnode>
        <childnode refid="205850" relation="include">
        </childnode>
      </node>
      <node id="205821">
        <label>cstdlib</label>
      </node>
      <node id="205858">
        <label>checkpoint/dispatch/dispatch.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205848" relation="include">
        </childnode>
        <childnode refid="205859" relation="include">
        </childnode>
        <childnode refid="205860" relation="include">
        </childnode>
        <childnode refid="205876" relation="include">
        </childnode>
        <childnode refid="205870" relation="include">
        </childnode>
        <childnode refid="205799" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205877" relation="include">
        </childnode>
      </node>
      <node id="205813">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="205786" relation="include">
        </childnode>
        <childnode refid="205810" relation="include">
        </childnode>
        <childnode refid="205814" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
      </node>
      <node id="205877">
        <label>checkpoint/dispatch/dispatch.impl.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8impl_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205858" relation="include">
        </childnode>
      </node>
      <node id="205837">
        <label>checkpoint/checkpoint.h</label>
        <link refid="checkpoint_8h"/>
        <childnode refid="205838" relation="include">
        </childnode>
        <childnode refid="205858" relation="include">
        </childnode>
        <childnode refid="205861" relation="include">
        </childnode>
        <childnode refid="205878" relation="include">
        </childnode>
        <childnode refid="205880" relation="include">
        </childnode>
        <childnode refid="205882" relation="include">
        </childnode>
        <childnode refid="205884" relation="include">
        </childnode>
        <childnode refid="205885" relation="include">
        </childnode>
        <childnode refid="205886" relation="include">
        </childnode>
        <childnode refid="205890" relation="include">
        </childnode>
        <childnode refid="205895" relation="include">
        </childnode>
        <childnode refid="205898" relation="include">
        </childnode>
        <childnode refid="205899" relation="include">
        </childnode>
        <childnode refid="205900" relation="include">
        </childnode>
        <childnode refid="205901" relation="include">
        </childnode>
        <childnode refid="205903" relation="include">
        </childnode>
        <childnode refid="205904" relation="include">
        </childnode>
        <childnode refid="205905" relation="include">
        </childnode>
        <childnode refid="205906" relation="include">
        </childnode>
        <childnode refid="205849" relation="include">
        </childnode>
        <childnode refid="205910" relation="include">
        </childnode>
      </node>
      <node id="205890">
        <label>checkpoint/container/map_serialize.h</label>
        <link refid="map__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205838" relation="include">
        </childnode>
        <childnode refid="205887" relation="include">
        </childnode>
        <childnode refid="205891" relation="include">
        </childnode>
        <childnode refid="205892" relation="include">
        </childnode>
        <childnode refid="205893" relation="include">
        </childnode>
        <childnode refid="205894" relation="include">
        </childnode>
      </node>
      <node id="205889">
        <label>deque</label>
      </node>
      <node id="205892">
        <label>unordered_map</label>
      </node>
      <node id="205886">
        <label>checkpoint/container/list_serialize.h</label>
        <link refid="list__serialize_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205838" relation="include">
        </childnode>
        <childnode refid="205887" relation="include">
        </childnode>
        <childnode refid="205888" relation="include">
        </childnode>
        <childnode refid="205889" relation="include">
        </childnode>
      </node>
      <node id="205853">
        <label>checkpoint/buffer/io_buffer.h</label>
        <link refid="io__buffer_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205848" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
      </node>
      <node id="205797">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="205798" relation="include">
        </childnode>
        <childnode refid="205800" relation="include">
        </childnode>
        <childnode refid="205802" relation="include">
        </childnode>
        <childnode refid="205804" relation="include">
        </childnode>
      </node>
      <node id="205856">
        <label>checkpoint/serializers/unpacker.h</label>
        <link refid="unpacker_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205847" relation="include">
        </childnode>
        <childnode refid="205852" relation="include">
        </childnode>
        <childnode refid="205857" relation="include">
        </childnode>
      </node>
      <node id="205883">
        <label>chrono</label>
      </node>
      <node id="205818">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="205798" relation="include">
        </childnode>
        <childnode refid="205810" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
        <childnode refid="205819" relation="include">
        </childnode>
      </node>
      <node id="205902">
        <label>thread</label>
      </node>
      <node id="205907">
        <label>checkpoint/container/view_traits_extract.h</label>
        <link refid="view__traits__extract_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205838" relation="include">
        </childnode>
      </node>
      <node id="205800">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="205784" relation="include">
        </childnode>
        <childnode refid="205798" relation="include">
        </childnode>
        <childnode refid="205787" relation="include">
        </childnode>
        <childnode refid="205799" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
      </node>
      <node id="205829">
        <label>vt/runtime/component/diagnostic_erased_value.h</label>
        <link refid="diagnostic__erased__value_8h"/>
        <childnode refid="205828" relation="include">
        </childnode>
        <childnode refid="205830" relation="include">
        </childnode>
        <childnode refid="205831" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
      </node>
      <node id="205815">
        <label>type_traits</label>
      </node>
      <node id="205893">
        <label>set</label>
      </node>
      <node id="205812">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="205797" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
        <childnode refid="205807" relation="include">
        </childnode>
      </node>
      <node id="205783">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="205784" relation="include">
        </childnode>
        <childnode refid="205797" relation="include">
        </childnode>
        <childnode refid="205808" relation="include">
        </childnode>
      </node>
      <node id="205835">
        <label>vt/runtime/component/diagnostic_value_base.h</label>
        <link refid="diagnostic__value__base_8h"/>
        <childnode refid="205828" relation="include">
        </childnode>
        <childnode refid="205836" relation="include">
        </childnode>
        <childnode refid="205829" relation="include">
        </childnode>
        <childnode refid="205837" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
      </node>
      <node id="205834">
        <label>algorithm</label>
      </node>
      <node id="205908">
        <label>checkpoint/container/view_traverse_manual.h</label>
        <link refid="view__traverse__manual_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205838" relation="include">
        </childnode>
        <childnode refid="205907" relation="include">
        </childnode>
      </node>
      <node id="205872">
        <label>checkpoint/dispatch/vrt/inheritance_assert_helpers.h</label>
        <link refid="inheritance__assert__helpers_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
      </node>
      <node id="205847">
        <label>checkpoint/serializers/memory_serializer.h</label>
        <link refid="memory__serializer_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205843" relation="include">
        </childnode>
      </node>
      <node id="205792">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="205855">
        <label>cstring</label>
      </node>
      <node id="205836">
        <label>vt/runtime/component/diagnostic_units.h</label>
        <link refid="diagnostic__units_8h"/>
      </node>
      <node id="205850">
        <label>memory</label>
      </node>
      <node id="205817">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="205786" relation="include">
        </childnode>
        <childnode refid="205798" relation="include">
        </childnode>
        <childnode refid="205810" relation="include">
        </childnode>
        <childnode refid="205818" relation="include">
        </childnode>
        <childnode refid="205823" relation="include">
        </childnode>
        <childnode refid="205825" relation="include">
        </childnode>
        <childnode refid="205822" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
      </node>
      <node id="205823">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="205810" relation="include">
        </childnode>
        <childnode refid="205798" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
        <childnode refid="205824" relation="include">
        </childnode>
      </node>
      <node id="205844">
        <label>checkpoint/serializers/footprinter.h</label>
        <link refid="footprinter_8h"/>
        <childnode refid="205839" relation="include">
        </childnode>
        <childnode refid="205843" relation="include">
        </childnode>
      </node>
      <node id="205816">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="205797" relation="include">
        </childnode>
        <childnode refid="205786" relation="include">
        </childnode>
        <childnode refid="205810" relation="include">
        </childnode>
        <childnode refid="205814" relation="include">
        </childnode>
        <childnode refid="205812" relation="include">
        </childnode>
        <childnode refid="205795" relation="include">
        </childnode>
        <childnode refid="205801" relation="include">
        </childnode>
        <childnode refid="205815" relation="include">
        </childnode>
        <childnode refid="205807" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="205914">
        <label>src/vt/runtime/component/diagnostic_value.cc</label>
        <link refid="diagnostic__value_8cc"/>
      </node>
      <node id="205913">
        <label>src/vt/runtime/component/diagnostic_value_format.h</label>
        <link refid="diagnostic__value__format_8h"/>
        <childnode refid="205914" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value_formatter" prot="public">vt::runtime::component::detail::DiagnosticValueFormatter</innerclass>
    <innerclass refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value_formatter_3_01_t_00_01typename_0c9abbc05a2cb3e61ce5908f9ea9ba841" prot="public">vt::runtime::component::detail::DiagnosticValueFormatter&lt; T, typename std::enable_if_t&lt; std::is_same&lt; T, double &gt;::value or std::is_same&lt; T, float &gt;::value &gt;&gt;</innerclass>
    <innerclass refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value_formatter_3_01_t_00_01typename_0591af1544272b2addbb347536de876db" prot="public">vt::runtime::component::detail::DiagnosticValueFormatter&lt; T, typename std::enable_if_t&lt; not(std::is_same&lt; T, double &gt;::value or std::is_same&lt; T, float &gt;::value) &gt;&gt;</innerclass>
    <innerclass refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_eraser" prot="public">vt::runtime::component::detail::DiagnosticEraser</innerclass>
    <innerclass refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_formatter" prot="public">vt::runtime::component::detail::DiagnosticFormatter</innerclass>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1runtime">vt::runtime</innernamespace>
    <innernamespace refid="namespacevt_1_1runtime_1_1component">vt::runtime::component</innernamespace>
    <innernamespace refid="namespacevt_1_1runtime_1_1component_1_1detail">vt::runtime::component::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diagnostic_value_format.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA<sp/>Toolkit<sp/>v.<sp/>1.0.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="42"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="43"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_VT_RUNTIME_COMPONENT_DIAGNOSTIC_VALUE_FORMAT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_VT_RUNTIME_COMPONENT_DIAGNOSTIC_VALUE_FORMAT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="diagnostic__value_8h" kindref="compound">vt/runtime/component/diagnostic_value.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="diagnostic__units_8h" kindref="compound">vt/runtime/component/diagnostic_units.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="diagnostic__enum__format_8h" kindref="compound">vt/runtime/component/diagnostic_enum_format.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memory__units_8h" kindref="compound">vt/utils/memory/memory_units.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fmt/format.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689afdcadb44dd13617f18aba8d42a257967" kindref="member">runtime</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">component<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>decimal_format<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{:.1f}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="60" refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value_formatter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value_formatter" kindref="compound">DiagnosticValueFormatter</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="63" refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value_formatter_3_01_t_00_01typename_0c9abbc05a2cb3e61ce5908f9ea9ba841" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value_formatter" kindref="compound">DiagnosticValueFormatter</ref>&lt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>T,<sp/>typename<sp/><ref refid="namespacestd" kindref="compound">std</ref>::enable_if_t&lt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;T,<sp/>double&gt;::value<sp/>or<sp/>std::is_same&lt;T,<sp/>float&gt;::value</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">&gt;<sp/>{</highlight></codeline>
<codeline lineno="68" refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value_formatter_3_01_t_00_01typename_0c9abbc05a2cb3e61ce5908f9ea9ba841_1aee01e661e17fbc4bdec8444ff72a5585" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>format<sp/>=<sp/>decimal_format;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="72" refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value_formatter_3_01_t_00_01typename_0591af1544272b2addbb347536de876db" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value_formatter" kindref="compound">DiagnosticValueFormatter</ref>&lt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>T,<sp/>typename<sp/><ref refid="namespacestd" kindref="compound">std</ref>::enable_if_t&lt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>(std::is_same&lt;T,<sp/>double&gt;::value<sp/>or<sp/>std::is_same&lt;T,<sp/>float&gt;::value)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">&gt;<sp/>{</highlight></codeline>
<codeline lineno="77" refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value_formatter_3_01_t_00_01typename_0591af1544272b2addbb347536de876db_1afc345a5383190494c5e495d787152feb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>format<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="87" refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_eraser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_eraser" kindref="compound">DiagnosticEraser</ref><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_eraser_1af09e0632083615511f10dd65b06e4781" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1runtime_1_1component_1_1_diagnostic_erased_value" kindref="compound">DiagnosticErasedValue</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(<ref refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value_wrapper" kindref="compound">DiagnosticValueWrapper&lt;T&gt;</ref><sp/>wrapper)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvt_1_1runtime_1_1component_1_1_diagnostic_erased_value" kindref="compound">DiagnosticErasedValue</ref><sp/>eval;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>eval.<ref refid="structvt_1_1runtime_1_1component_1_1_diagnostic_erased_value_1afe55a2fe29a4f54f897de29dd6c65b9a" kindref="member">min_</ref>.template<sp/>init&lt;T&gt;(wrapper.min());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>eval.<ref refid="structvt_1_1runtime_1_1component_1_1_diagnostic_erased_value_1a82a9c0b0ff94f9b6ddfe52072bd0e751" kindref="member">max_</ref>.template<sp/>init&lt;T&gt;(wrapper.max());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>eval.<ref refid="structvt_1_1runtime_1_1component_1_1_diagnostic_erased_value_1a560d494130bd9a5113cbe9c2bf6daac2" kindref="member">sum_</ref>.template<sp/>init&lt;T&gt;(wrapper.sum());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>eval.<ref refid="structvt_1_1runtime_1_1component_1_1_diagnostic_erased_value_1acd84ffb9c7898cf4d0bfc5606a8b15a9" kindref="member">avg_</ref><sp/>=<sp/>wrapper.avg();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>eval.<ref refid="structvt_1_1runtime_1_1component_1_1_diagnostic_erased_value_1a97a5a5c8744f7a1f207b9959fffa49b9" kindref="member">std_</ref><sp/>=<sp/>wrapper.stdv();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eval;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_formatter" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_formatter" kindref="compound">DiagnosticFormatter</ref><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="125" refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_formatter_1a24baf1566933db8e7e65944e75549a5d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_formatter_1a24baf1566933db8e7e65944e75549a5d" kindref="member">getValueWithUnits</ref>(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>U<sp/>val,<sp/><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307a" kindref="member">DiagnosticUnit</ref><sp/>unit,<sp/>std::string<sp/>default_spec,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>align</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1util_1_1memory_1a64df3d84293b34009f78e2a1db2f9bb6" kindref="member">util::memory::MemoryUnitEnum</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1util_1_1memory_1a6a1de4e8806e74e6e0ef92e4262b654b" kindref="member">util::memory::getMemoryUnitName</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(unit)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307aa600e754f49b68aa0fc90a9cd64eb7051" kindref="member">DiagnosticUnit::Bytes</ref>:<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>the<sp/>largest<sp/>unit,<sp/>testing<sp/>if<sp/>its<sp/>appropriate<sp/>for<sp/>the<sp/>value,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>if<sp/>not,<sp/>downgrade<sp/>it<sp/>until<sp/>we<sp/>find<sp/>one<sp/>that<sp/>works</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>multiplier<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(MemoryUnitEnum::Yottabytes);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>multiplier<sp/>&gt;<sp/>0;<sp/>multiplier--)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>value_tmp<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>static_cast&lt;int8_t&gt;(multiplier);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_tmp<sp/>/=<sp/>1024.0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_tmp<sp/>&gt;<sp/>1.)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>found_appropiate_memory_multiplier;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>found<sp/>a<sp/>multiplier<sp/>that<sp/>results<sp/>in<sp/>a<sp/>value<sp/>over<sp/>1.0,<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>found_appropiate_memory_multiplier:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier<sp/>&lt;=<sp/>static_cast&lt;int8_t&gt;(MemoryUnitEnum::Yottabytes)<sp/>and</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier<sp/>&gt;=<sp/>0,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>be<sp/>a<sp/>valid<sp/>memory<sp/>unit&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>unit_name<sp/>=<sp/><ref refid="namespacevt_1_1util_1_1memory_1a6a1de4e8806e74e6e0ef92e4262b654b" kindref="member">getMemoryUnitName</ref>(static_cast&lt;MemoryUnitEnum&gt;(multiplier));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>default<sp/>spec<sp/>if<sp/>we<sp/>have<sp/>base<sp/>units<sp/>(multiplier<sp/>of<sp/>1)---this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>means<sp/>that<sp/>integer<sp/>types<sp/>won&apos;t<sp/>have<sp/>a<sp/>decimal<sp/>place<sp/>(as<sp/>desired)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>add<sp/>decimal<sp/>places<sp/>since<sp/>we<sp/>used<sp/>a<sp/>multiplier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multiplier<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_spec<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>val,<sp/>unitFormat(unit_name,<sp/>align)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>new<sp/>value<sp/>with<sp/>multiplier<sp/>as<sp/>a<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_value<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>static_cast&lt;int8_t&gt;(multiplier);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_value<sp/>/=<sp/>1024.0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decimal<sp/>=<sp/>std::string{decimal_format};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimal<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>new_value,<sp/>unitFormat(unit_name,<sp/>align)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307aae5771a362d88a71a657bfcd21ca54b3f" kindref="member">DiagnosticUnit::Units</ref>:<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>the<sp/>largest<sp/>unit,<sp/>testing<sp/>if<sp/>its<sp/>appropriate<sp/>for<sp/>the<sp/>value,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>if<sp/>not,<sp/>downgrade<sp/>it<sp/>until<sp/>we<sp/>find<sp/>one<sp/>that<sp/>works</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>multiplier<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacevt_1_1runtime_1_1component_1a59a0e5faf8c985e274127e0d0cef2193a61e6290e5030cfde1469749bb30b1c5d" kindref="member">UnitMultiplier::Quintillions</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>multiplier<sp/>&gt;<sp/>0;<sp/>multiplier--)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>value_tmp<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>static_cast&lt;int8_t&gt;(multiplier);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_tmp<sp/>/=<sp/>1000.0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_tmp<sp/>&gt;<sp/>1.)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>found_appropiate_unit_multiplier;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>found<sp/>a<sp/>multiplier<sp/>that<sp/>results<sp/>in<sp/>a<sp/>value<sp/>over<sp/>1.0,<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>found_appropiate_unit_multiplier:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier<sp/>&lt;=<sp/>static_cast&lt;int8_t&gt;(<ref refid="namespacevt_1_1runtime_1_1component_1a59a0e5faf8c985e274127e0d0cef2193a61e6290e5030cfde1469749bb30b1c5d" kindref="member">UnitMultiplier::Quintillions</ref>)<sp/>and</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier<sp/>&gt;=<sp/>0,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>be<sp/>a<sp/>valid<sp/>unit<sp/>multiplier&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>unit_name<sp/>=</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1runtime_1_1component_1ae89639375d5503f4ea10b677915903c8" kindref="member">diagnosticMultiplierString</ref>(static_cast&lt;UnitMultiplier&gt;(multiplier));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>default<sp/>spec<sp/>if<sp/>we<sp/>have<sp/>base<sp/>units<sp/>(multiplier<sp/>of<sp/>1)---this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>means<sp/>that<sp/>integer<sp/>types<sp/>won&apos;t<sp/>have<sp/>a<sp/>decimal<sp/>place<sp/>(as<sp/>desired)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>add<sp/>decimal<sp/>places<sp/>since<sp/>we<sp/>used<sp/>a<sp/>multiplier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multiplier<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_spec<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>val,<sp/>unitFormat(unit_name,<sp/>align)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>new<sp/>value<sp/>with<sp/>multiplier<sp/>as<sp/>a<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_value<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>static_cast&lt;int8_t&gt;(multiplier);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_value<sp/>/=<sp/>1000.0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decimal<sp/>=<sp/>std::string{decimal_format};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimal<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>new_value,<sp/>unitFormat(unit_name,<sp/>align)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307aa8f19a8c7566af54ea8981029730e5465" kindref="member">DiagnosticUnit::Seconds</ref>:<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>the<sp/>smallest<sp/>unit,<sp/>testing<sp/>if<sp/>its<sp/>appropriate<sp/>for<sp/>the<sp/>value,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>if<sp/>not,<sp/>upgrade<sp/>it<sp/>until<sp/>we<sp/>find<sp/>one<sp/>that<sp/>works</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>multiplier<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacevt_1_1runtime_1_1component_1a7c43622f1c2cc49bc223523837649b1aafba00bdab687ce01136a86bac8bac578" kindref="member">TimeMultiplier::Nanoseconds</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>multiplier<sp/>&lt;<sp/>0;<sp/>multiplier++)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>value_tmp<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int8_t<sp/>i<sp/>=<sp/>static_cast&lt;int8_t&gt;(multiplier);<sp/>i<sp/>&lt;<sp/>0;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_tmp<sp/>*=<sp/>1000.0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_tmp<sp/>&lt;<sp/>1000.)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>found_appropiate_time_multiplier;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>found<sp/>a<sp/>multiplier<sp/>that<sp/>results<sp/>in<sp/>a<sp/>value<sp/>over<sp/>1.0,<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>found_appropiate_time_multiplier:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1aeddd4990a496e91a0ca5d6c16437359b" kindref="member">vtAssert</ref>(</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier<sp/>&gt;=<sp/>static_cast&lt;int8_t&gt;(<ref refid="namespacevt_1_1runtime_1_1component_1a7c43622f1c2cc49bc223523837649b1aafba00bdab687ce01136a86bac8bac578" kindref="member">TimeMultiplier::Nanoseconds</ref>)<sp/>and</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier<sp/>&lt;=<sp/>0,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>be<sp/>a<sp/>valid<sp/>unit<sp/>multiplier&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>unit_name<sp/>=</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1runtime_1_1component_1a99c037ee6312b9c934b3606e316e0539" kindref="member">diagnosticTimeMultiplierString</ref>(static_cast&lt;TimeMultiplier&gt;(multiplier));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>default<sp/>spec<sp/>if<sp/>we<sp/>have<sp/>base<sp/>units<sp/>(multiplier<sp/>of<sp/>1)---this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>means<sp/>that<sp/>integer<sp/>types<sp/>won&apos;t<sp/>have<sp/>a<sp/>decimal<sp/>place<sp/>(as<sp/>desired)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>add<sp/>decimal<sp/>places<sp/>since<sp/>we<sp/>used<sp/>a<sp/>multiplier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multiplier<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_spec<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>val,<sp/>unitFormat(unit_name,<sp/>align)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>new<sp/>value<sp/>with<sp/>multiplier<sp/>as<sp/>a<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_value<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int8_t<sp/>i<sp/>=<sp/>static_cast&lt;int8_t&gt;(multiplier);<sp/>i<sp/>&lt;<sp/>0;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_value<sp/>*=<sp/>1000.0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decimal<sp/>=<sp/>std::string{decimal_format};</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimal<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>new_value,<sp/>unitFormat(unit_name,<sp/>align)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307aa5e8baedb490ce30a7296558f8091eaa3" kindref="member">DiagnosticUnit::UnitsPerSecond</ref>:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(default_spec,<sp/>val);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="285" refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_formatter_1af336eb2cb4fd2a53650cc8aa70ddc7fb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_formatter_1af336eb2cb4fd2a53650cc8aa70ddc7fb" kindref="member">unitFormat</ref>(std::string<sp/>unit_name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>align)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(align)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:&lt;3}&quot;</highlight><highlight class="normal">,<sp/>unit_name);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">,<sp/>unit_name);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal">};</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">}}}}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::runtime::component::detail<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_VT_RUNTIME_COMPONENT_DIAGNOSTIC_VALUE_FORMAT_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/vt/runtime/component/diagnostic_value_format.h"/>
  </compounddef>
</doxygen>
