<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1auto__registry_1_1_handlers_dispatcher" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>vt::auto_registry::HandlersDispatcher</compoundname>
    <basecompoundref refid="structvt_1_1auto__registry_1_1_base_handlers_dispatcher" prot="public" virt="non-virtual">vt::auto_registry::BaseHandlersDispatcher</basecompoundref>
    <includes refid="auto__registry__common_8h" local="no">auto_registry_common.h</includes>
    <innerclass refid="structvt_1_1auto__registry_1_1_handlers_dispatcher_1_1_dispatch_impl" prot="private">vt::auto_registry::HandlersDispatcher::DispatchImpl</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_handlers_dispatcher_1_1_dispatch_impl_3_01_t_00_01is_active_col_mca715dc837e42086a4d620b73af1e2d9" prot="private">vt::auto_registry::HandlersDispatcher::DispatchImpl&lt; T, isActiveColMemberTypedFnType&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_handlers_dispatcher_1_1_dispatch_impl_3_01_t_00_01is_active_col_typed_fn_type_3_01_t_01_4_01_4" prot="private">vt::auto_registry::HandlersDispatcher::DispatchImpl&lt; T, isActiveColTypedFnType&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_handlers_dispatcher_1_1_dispatch_impl_3_01_t_00_01is_active_typed_fn_type_3_01_t_01_4_01_4" prot="private">vt::auto_registry::HandlersDispatcher::DispatchImpl&lt; T, isActiveTypedFnType&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_handlers_dispatcher_1_1_dispatch_impl_3_01_t_00_01is_active_void_fn_type_3_01_t_01_4_01_4" prot="private">vt::auto_registry::HandlersDispatcher::DispatchImpl&lt; T, isActiveVoidFnType&lt; T &gt; &gt;</innerclass>
    <templateparamlist>
      <param>
        <type>typename MsgT</type>
      </param>
      <param>
        <type>typename HandlerT</type>
      </param>
      <param>
        <type>typename ObjT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structvt_1_1auto__registry_1_1_handlers_dispatcher_1add4a5deacd38de5f66c799d6c2b6b62a" prot="private" static="no">
        <type>std::enable_if_t&lt; std::is_same&lt; T, <ref refid="namespacevt_1ad0569ad32e87f0c5fb53fccd669f8dfa" kindref="member">ActiveVoidFnType</ref> *&gt;::value &gt;</type>
        <definition>using vt::auto_registry::HandlersDispatcher&lt; MsgT, HandlerT, ObjT &gt;::isActiveVoidFnType =  std::enable_if_t&lt; std::is_same&lt; T, ActiveVoidFnType* &gt;::value &gt;</definition>
        <argsstring></argsstring>
        <name>isActiveVoidFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="79" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1auto__registry_1_1_handlers_dispatcher_1ac15d047eb387381db2612c79e196f8e7" prot="private" static="no">
        <type>std::enable_if_t&lt; std::is_same&lt; T, <ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *&gt;::value &gt;</type>
        <definition>using vt::auto_registry::HandlersDispatcher&lt; MsgT, HandlerT, ObjT &gt;::isActiveTypedFnType =  std::enable_if_t&lt; std::is_same&lt; T, ActiveTypedFnType&lt;MsgT&gt;* &gt;::value &gt;</definition>
        <argsstring></argsstring>
        <name>isActiveTypedFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="92" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1auto__registry_1_1_handlers_dispatcher_1a1c50adc2b2f2ac67f9cc793cdddbf2f5" prot="private" static="no">
        <type>std::enable_if_t&lt; std::is_same&lt; T, <ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">vrt::collection::ActiveColTypedFnType</ref>&lt; MsgT, ObjT &gt; *&gt;::value &gt;</type>
        <definition>using vt::auto_registry::HandlersDispatcher&lt; MsgT, HandlerT, ObjT &gt;::isActiveColTypedFnType =  std::enable_if_t&lt; std::is_same&lt; T, vrt::collection::ActiveColTypedFnType&lt;MsgT, ObjT&gt;* &gt;::value &gt;</definition>
        <argsstring></argsstring>
        <name>isActiveColTypedFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="105" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1auto__registry_1_1_handlers_dispatcher_1abb1fd9fbd94142c577699cc0066e279d" prot="private" static="no">
        <type>std::enable_if_t&lt; std::is_same&lt; T, <ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">vrt::collection::ActiveColMemberTypedFnType</ref>&lt; MsgT, ObjT &gt; &gt;::value &gt;</type>
        <definition>using vt::auto_registry::HandlersDispatcher&lt; MsgT, HandlerT, ObjT &gt;::isActiveColMemberTypedFnType =  std::enable_if_t&lt; std::is_same&lt; T, vrt::collection::ActiveColMemberTypedFnType&lt;MsgT, ObjT&gt; &gt;::value &gt;</definition>
        <argsstring></argsstring>
        <name>isActiveColMemberTypedFnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="121" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1auto__registry_1_1_handlers_dispatcher_1a2ec99ef68e6c7b37f3e978a100cecb81" prot="private" static="no" mutable="no">
        <type>HandlerT</type>
        <definition>HandlerT vt::auto_registry::HandlersDispatcher&lt; MsgT, HandlerT, ObjT &gt;::fn_ptr_</definition>
        <argsstring></argsstring>
        <name>fn_ptr_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="142" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1auto__registry_1_1_handlers_dispatcher_1aea820469903ae2c06a6e9934d3e8d0cc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::auto_registry::HandlersDispatcher&lt; MsgT, HandlerT, ObjT &gt;::HandlersDispatcher</definition>
        <argsstring>(HandlerT in_fn_ptr)</argsstring>
        <name>HandlersDispatcher</name>
        <param>
          <type>HandlerT</type>
          <declname>in_fn_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="72" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1auto__registry_1_1_handlers_dispatcher_1a0b335de6d03c14798e01a760f68a0719" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void vt::auto_registry::HandlersDispatcher&lt; MsgT, HandlerT, ObjT &gt;::dispatch</definition>
        <argsstring>(messaging::BaseMsg *msg, void *object) const override</argsstring>
        <name>dispatch</name>
        <reimplements refid="structvt_1_1auto__registry_1_1_base_handlers_dispatcher_1aefc05db879ce57b3ea0295afa56aa819">dispatch</reimplements>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_base_msg" kindref="compound">messaging::BaseMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="137" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="137" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2060">
        <label>vt::auto_registry::BaseHandlersDispatcher</label>
        <link refid="structvt_1_1auto__registry_1_1_base_handlers_dispatcher"/>
      </node>
      <node id="2059">
        <label>vt::auto_registry::HandlersDispatcher&lt; MsgT, HandlerT, ObjT &gt;</label>
        <link refid="structvt_1_1auto__registry_1_1_handlers_dispatcher"/>
        <childnode refid="2060" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2062">
        <label>vt::auto_registry::BaseHandlersDispatcher</label>
        <link refid="structvt_1_1auto__registry_1_1_base_handlers_dispatcher"/>
      </node>
      <node id="2061">
        <label>vt::auto_registry::HandlersDispatcher&lt; MsgT, HandlerT, ObjT &gt;</label>
        <link refid="structvt_1_1auto__registry_1_1_handlers_dispatcher"/>
        <childnode refid="2062" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/registry/auto/auto_registry_common.h" line="71" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="71" bodyend="143"/>
    <listofallmembers>
      <member refid="structvt_1_1auto__registry_1_1_handlers_dispatcher_1a0b335de6d03c14798e01a760f68a0719" prot="public" virt="virtual"><scope>vt::auto_registry::HandlersDispatcher</scope><name>dispatch</name></member>
      <member refid="structvt_1_1auto__registry_1_1_handlers_dispatcher_1a2ec99ef68e6c7b37f3e978a100cecb81" prot="private" virt="non-virtual"><scope>vt::auto_registry::HandlersDispatcher</scope><name>fn_ptr_</name></member>
      <member refid="structvt_1_1auto__registry_1_1_handlers_dispatcher_1aea820469903ae2c06a6e9934d3e8d0cc" prot="public" virt="non-virtual"><scope>vt::auto_registry::HandlersDispatcher</scope><name>HandlersDispatcher</name></member>
      <member refid="structvt_1_1auto__registry_1_1_handlers_dispatcher_1abb1fd9fbd94142c577699cc0066e279d" prot="private" virt="non-virtual"><scope>vt::auto_registry::HandlersDispatcher</scope><name>isActiveColMemberTypedFnType</name></member>
      <member refid="structvt_1_1auto__registry_1_1_handlers_dispatcher_1a1c50adc2b2f2ac67f9cc793cdddbf2f5" prot="private" virt="non-virtual"><scope>vt::auto_registry::HandlersDispatcher</scope><name>isActiveColTypedFnType</name></member>
      <member refid="structvt_1_1auto__registry_1_1_handlers_dispatcher_1ac15d047eb387381db2612c79e196f8e7" prot="private" virt="non-virtual"><scope>vt::auto_registry::HandlersDispatcher</scope><name>isActiveTypedFnType</name></member>
      <member refid="structvt_1_1auto__registry_1_1_handlers_dispatcher_1add4a5deacd38de5f66c799d6c2b6b62a" prot="private" virt="non-virtual"><scope>vt::auto_registry::HandlersDispatcher</scope><name>isActiveVoidFnType</name></member>
      <member refid="structvt_1_1auto__registry_1_1_base_handlers_dispatcher_1ae9db8406a630a3ac4094986aa39c747e" prot="public" virt="virtual"><scope>vt::auto_registry::HandlersDispatcher</scope><name>~BaseHandlersDispatcher</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
