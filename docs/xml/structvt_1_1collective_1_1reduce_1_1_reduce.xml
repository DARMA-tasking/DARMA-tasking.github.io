<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1collective_1_1reduce_1_1_reduce" kind="struct" language="C++" prot="public">
    <compoundname>vt::collective::reduce::Reduce</compoundname>
    <basecompoundref refid="structvt_1_1collective_1_1tree_1_1_tree" prot="public" virt="virtual">vt::collective::tree::Tree</basecompoundref>
    <includes refid="reduce_8h" local="no">reduce.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1collective_1_1reduce_1_1_reduce_1ab0e89b962f0741718107772505fe6d34" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1_reduce_state" kindref="compound">ReduceState</ref></type>
        <definition>using vt::collective::reduce::Reduce::ReduceStateType =  ReduceState</definition>
        <argsstring></argsstring>
        <name>ReduceStateType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="81" column="1" bodyfile="src/vt/collective/reduce/reduce.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1collective_1_1reduce_1_1_reduce_1a6c3e63aca10c31d2823b0b18cf9762a4" prot="public" static="no">
        <type>typename <ref refid="structvt_1_1collective_1_1reduce_1_1_reduce_state_1ae83d217c90b8a8895ca998d7ea9c49e4" kindref="member">ReduceStateType::ReduceNumType</ref></type>
        <definition>using vt::collective::reduce::Reduce::ReduceNumType =  typename ReduceStateType::ReduceNumType</definition>
        <argsstring></argsstring>
        <name>ReduceNumType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="82" column="1" bodyfile="src/vt/collective/reduce/reduce.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1collective_1_1reduce_1_1_reduce_1a70ebc22c7420905f3e178dccb126c435" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1detail_1_1_reduce_scope" kindref="compound">detail::ReduceScope</ref></type>
        <definition>detail::ReduceScope vt::collective::reduce::Reduce::scope_</definition>
        <argsstring></argsstring>
        <name>scope_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The reduce scope for this reducer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="221" column="1" bodyfile="src/vt/collective/reduce/reduce.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1collective_1_1reduce_1_1_reduce_1a49b9fcaf2f8b76d350d1e3b809add2aa" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1_reduce_state_holder" kindref="compound">ReduceStateHolder</ref></type>
        <definition>ReduceStateHolder vt::collective::reduce::Reduce::state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structvt_1_1collective_1_1reduce_1_1_reduce" kindref="compound">Reduce</ref> state, holds messages, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="222" column="1" bodyfile="src/vt/collective/reduce/reduce.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1collective_1_1reduce_1_1_reduce_1a368873db0ddebf8365fdd3021927a691" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1collective_1_1reduce_1_1detail_1affec2854d7d65bafb17eb259714e9443" kindref="member">detail::StrongSeq</ref></type>
        <definition>detail::StrongSeq vt::collective::reduce::Reduce::next_seq_</definition>
        <argsstring></argsstring>
        <name>next_seq_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The next reduce stamp </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="223" column="1" bodyfile="src/vt/collective/reduce/reduce.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1collective_1_1reduce_1_1_reduce_1a5e5a3c0e00259bec5aad517aeaba36ac" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::collective::reduce::Reduce::Reduce</definition>
        <argsstring>(detail::ReduceScope const &amp;in_scope)</argsstring>
        <name>Reduce</name>
        <param>
          <type><ref refid="structvt_1_1collective_1_1reduce_1_1detail_1_1_reduce_scope" kindref="compound">detail::ReduceScope</ref> const &amp;</type>
          <declname>in_scope</declname>
        </param>
        <briefdescription>
<para>Construct a new reducer instance. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_scope</parametername>
</parameternamelist>
<parameterdescription>
<para>the scope for the reducer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="89" column="1" bodyfile="src/vt/collective/reduce/reduce.cc" bodystart="54" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1reduce_1_1_reduce_1a346fd6b262828a501c342330fc091fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::collective::reduce::Reduce::Reduce</definition>
        <argsstring>(detail::ReduceScope const &amp;in_scope, collective::tree::Tree *in_tree)</argsstring>
        <name>Reduce</name>
        <param>
          <type><ref refid="structvt_1_1collective_1_1reduce_1_1detail_1_1_reduce_scope" kindref="compound">detail::ReduceScope</ref> const &amp;</type>
          <declname>in_scope</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1collective_1_1tree_1_1_tree" kindref="compound">collective::tree::Tree</ref> *</type>
          <declname>in_tree</declname>
        </param>
        <briefdescription>
<para>Construct a new reducer instance with a custom (or non-global) spanning tree. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_scope</parametername>
</parameternamelist>
<parameterdescription>
<para>the scope for the reducer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tree</parametername>
</parameternamelist>
<parameterdescription>
<para>the spanning tree </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="98" column="1" bodyfile="src/vt/collective/reduce/reduce.cc" bodystart="66" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1reduce_1_1_reduce_1ac279b15e3bb5754d03307e2fe23ec734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1collective_1_1reduce_1_1detail_1aacc1fcd729d934ba143fee3a943bf9e7" kindref="member">detail::ReduceStamp</ref></type>
        <definition>detail::ReduceStamp vt::collective::reduce::Reduce::generateNextID</definition>
        <argsstring>()</argsstring>
        <name>generateNextID</name>
        <briefdescription>
<para>Generate the next reduction stamp. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>the stamp </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="107" column="1" bodyfile="src/vt/collective/reduce/reduce.cc" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1reduce_1_1_reduce_1ac41b433147b957df5639d72ac8946090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1collective_1_1reduce_1_1detail_1aacc1fcd729d934ba143fee3a943bf9e7" kindref="member">detail::ReduceStamp</ref></type>
        <definition>detail::ReduceStamp vt::collective::reduce::Reduce::reduce</definition>
        <argsstring>(NodeType root, MsgT *const msg, detail::ReduceStamp id=detail::ReduceStamp{}, ReduceNumType num_contrib=1)</argsstring>
        <name>reduce</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>root</declname>
        </param>
        <param>
          <type>MsgT *const</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1collective_1_1reduce_1_1detail_1aacc1fcd729d934ba143fee3a943bf9e7" kindref="member">detail::ReduceStamp</ref></type>
          <declname>id</declname>
          <defval><ref refid="namespacevt_1_1collective_1_1reduce_1_1detail_1aacc1fcd729d934ba143fee3a943bf9e7" kindref="member">detail::ReduceStamp</ref>{}</defval>
        </param>
        <param>
          <type><ref refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a6c3e63aca10c31d2823b0b18cf9762a4" kindref="member">ReduceNumType</ref></type>
          <declname>num_contrib</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para><ref refid="structvt_1_1collective_1_1reduce_1_1_reduce" kindref="compound">Reduce</ref> a message up the tree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">root</parametername>
</parameternamelist>
<parameterdescription>
<para>the root node where the final handler provides the result </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to reduce on this node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the reduction stamp (optional), provided if out-of-order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_contrib</parametername>
</parameternamelist>
<parameterdescription>
<para>number of expected contributions from this node</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the next reduction stamp </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="120" column="1" bodyfile="src/vt/collective/reduce/reduce.impl.h" bodystart="102" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1reduce_1_1_reduce_1ac3fc898f5dec892d7d62e20ea9f6ac09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OpT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
            <defval>MsgT::template msgHandler&lt;      MsgT, OpT, <ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_reduce_callback" kindref="compound">collective::reduce::operators::ReduceCallback</ref>&lt;MsgT&gt;    &gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1collective_1_1reduce_1_1detail_1aacc1fcd729d934ba143fee3a943bf9e7" kindref="member">detail::ReduceStamp</ref></type>
        <definition>detail::ReduceStamp vt::collective::reduce::Reduce::reduce</definition>
        <argsstring>(NodeType const &amp;root, MsgT *msg, Callback&lt; MsgT &gt; cb, detail::ReduceStamp id=detail::ReduceStamp{}, ReduceNumType const &amp;num_contrib=1)</argsstring>
        <name>reduce</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a36db99df4c973d48b1118a293fff533f" kindref="member">Callback</ref>&lt; MsgT &gt;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1collective_1_1reduce_1_1detail_1aacc1fcd729d934ba143fee3a943bf9e7" kindref="member">detail::ReduceStamp</ref></type>
          <declname>id</declname>
          <defval><ref refid="namespacevt_1_1collective_1_1reduce_1_1detail_1aacc1fcd729d934ba143fee3a943bf9e7" kindref="member">detail::ReduceStamp</ref>{}</defval>
        </param>
        <param>
          <type><ref refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a6c3e63aca10c31d2823b0b18cf9762a4" kindref="member">ReduceNumType</ref> const &amp;</type>
          <declname>num_contrib</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para><ref refid="structvt_1_1collective_1_1reduce_1_1_reduce" kindref="compound">Reduce</ref> a message up the tree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">root</parametername>
</parameternamelist>
<parameterdescription>
<para>the root node where the final handler provides the result </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to reduce on this node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback to trigger on the root node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the reduction stamp (optional), provided if out-of-order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_contrib</parametername>
</parameternamelist>
<parameterdescription>
<para>number of expected contributions from this node</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the next reduction stamp </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="144" column="1" bodyfile="src/vt/collective/reduce/reduce.impl.h" bodystart="83" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1reduce_1_1_reduce_1ad8cc041ce827d4b9240a4e7dc309791e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OpT</type>
          </param>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
            <defval>MsgT::template msgHandler&lt;MsgT, OpT, FunctorT&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1collective_1_1reduce_1_1detail_1aacc1fcd729d934ba143fee3a943bf9e7" kindref="member">detail::ReduceStamp</ref></type>
        <definition>detail::ReduceStamp vt::collective::reduce::Reduce::reduce</definition>
        <argsstring>(NodeType const &amp;root, MsgT *msg, detail::ReduceStamp id=detail::ReduceStamp{}, ReduceNumType const &amp;num_contrib=1)</argsstring>
        <name>reduce</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1collective_1_1reduce_1_1detail_1aacc1fcd729d934ba143fee3a943bf9e7" kindref="member">detail::ReduceStamp</ref></type>
          <declname>id</declname>
          <defval><ref refid="namespacevt_1_1collective_1_1reduce_1_1detail_1aacc1fcd729d934ba143fee3a943bf9e7" kindref="member">detail::ReduceStamp</ref>{}</defval>
        </param>
        <param>
          <type><ref refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a6c3e63aca10c31d2823b0b18cf9762a4" kindref="member">ReduceNumType</ref> const &amp;</type>
          <declname>num_contrib</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para><ref refid="structvt_1_1collective_1_1reduce_1_1_reduce" kindref="compound">Reduce</ref> a message up the tree with a target function on the root node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">root</parametername>
</parameternamelist>
<parameterdescription>
<para>the root node where the final handler provides the result </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to reduce on this node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the reduction stamp (optional), provided if out-of-order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_contrib</parametername>
</parameternamelist>
<parameterdescription>
<para>number of expected contributions from this node</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the next reduction stamp </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="166" column="1" bodyfile="src/vt/collective/reduce/reduce.impl.h" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1reduce_1_1_reduce_1a18df32ceadd6b55979c8fd7e85f613e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::collective::reduce::Reduce::reduceAddMsg</definition>
        <argsstring>(MsgT *msg, bool const local, ReduceNumType num_contrib=-1)</argsstring>
        <name>reduceAddMsg</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>local</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a6c3e63aca10c31d2823b0b18cf9762a4" kindref="member">ReduceNumType</ref></type>
          <declname>num_contrib</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Combine in a new message for a given reduction. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to combine with the operator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">local</parametername>
</parameternamelist>
<parameterdescription>
<para>was this called locally or from an incoming handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_contrib</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of expected local contributions </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="180" column="1" bodyfile="src/vt/collective/reduce/reduce.impl.h" bodystart="130" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1reduce_1_1_reduce_1a0642df1a1e52d7da269d8fb23dfc193f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::collective::reduce::Reduce::reduceNewMsg</definition>
        <argsstring>(MsgT *msg)</argsstring>
        <name>reduceNewMsg</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Combine and send up the tree if ready. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to reduce </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="190" column="1" bodyfile="src/vt/collective/reduce/reduce.impl.h" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1reduce_1_1_reduce_1ad8849fa013a4b3e3f795ceeb103026e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::collective::reduce::Reduce::startReduce</definition>
        <argsstring>(detail::ReduceStamp id, bool use_num_contrib=true)</argsstring>
        <name>startReduce</name>
        <param>
          <type><ref refid="namespacevt_1_1collective_1_1reduce_1_1detail_1aacc1fcd729d934ba143fee3a943bf9e7" kindref="member">detail::ReduceStamp</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_num_contrib</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Explicitly start the reduction when the number of contributions is not known up front. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the reduce stamp to start </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">use_num_contrib</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to use the cached # of contributions </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="200" column="1" bodyfile="src/vt/collective/reduce/reduce.impl.h" bodystart="166" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1reduce_1_1_reduce_1a48c7bb604fade1b64b9b391f4091ad5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::collective::reduce::Reduce::reduceRootRecv</definition>
        <argsstring>(MsgT *msg)</argsstring>
        <name>reduceRootRecv</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Active function when a message reaches the root of the spanning tree and the reduction is complete. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the reduce message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="209" column="1" bodyfile="src/vt/collective/reduce/reduce.impl.h" bodystart="73" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1collective_1_1reduce_1_1_reduce_1a2bae42586b143c42c731bcd9c96d4426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::collective::reduce::Reduce::reduceUp</definition>
        <argsstring>(MsgT *msg)</argsstring>
        <name>reduceUp</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Active function when a message arrives for a given scope at some level in the spanning tree. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the reduce message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/reduce.h" line="218" column="1" bodyfile="src/vt/collective/reduce/reduce.impl.h" bodystart="59" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A specific, isolated reducer instance for a given scope that sequences reduce operations via the reduction stamp within that scope. </para>    </briefdescription>
    <detaileddescription>
<para>Holds the state as a reduction makes it up the spanning tree until it reaches the root. Combines messages with the user-specified reduction operator as they move up the spanning tree. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2517">
        <label>vt::collective::reduce::Reduce</label>
        <link refid="structvt_1_1collective_1_1reduce_1_1_reduce"/>
        <childnode refid="2518" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2518">
        <label>vt::collective::tree::Tree</label>
        <link refid="structvt_1_1collective_1_1tree_1_1_tree"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2523">
        <label>vt::util::adt::AlignedCharUnion&lt; StrongObjGroup, StrongVrtProxy, StrongGroup, StrongCom, StrongUserID &gt;</label>
        <link refid="structvt_1_1util_1_1adt_1_1_aligned_char_union"/>
        <childnode refid="2524" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2521">
        <label>vt::collective::reduce::ReduceStateHolder</label>
        <link refid="structvt_1_1collective_1_1reduce_1_1_reduce_state_holder"/>
      </node>
      <node id="2522">
        <label>vt::collective::reduce::detail::ReduceScope</label>
        <link refid="structvt_1_1collective_1_1reduce_1_1detail_1_1_reduce_scope"/>
        <childnode refid="2523" relation="usage">
          <edgelabel>l0_</edgelabel>
        </childnode>
      </node>
      <node id="2519">
        <label>vt::collective::reduce::Reduce</label>
        <link refid="structvt_1_1collective_1_1reduce_1_1_reduce"/>
        <childnode refid="2520" relation="public-inheritance">
        </childnode>
        <childnode refid="2521" relation="usage">
          <edgelabel>state_</edgelabel>
        </childnode>
        <childnode refid="2522" relation="usage">
          <edgelabel>scope_</edgelabel>
        </childnode>
      </node>
      <node id="2520">
        <label>vt::collective::tree::Tree</label>
        <link refid="structvt_1_1collective_1_1tree_1_1_tree"/>
      </node>
      <node id="2524">
        <label>vt::util::adt::UnionCopy&lt; StrongObjGroup, void, Ts... &gt;</label>
        <link refid="structvt_1_1util_1_1adt_1_1_union_copy"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/collective/reduce/reduce.h" line="80" column="1" bodyfile="src/vt/collective/reduce/reduce.h" bodystart="80" bodyend="224"/>
    <listofallmembers>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ad5546485f90dd449a203f174b1374a01" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>foreachChild</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a8200f03bf19b18b2323d1fcb99d5335f" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>foreachChild</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1ac279b15e3bb5754d03307e2fe23ec734" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>generateNextID</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a57b3edade6230de16232213b7c4380f5" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>getChildren</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a39e27b1538bf00674a5a653dfd7a0e83" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>getChildren</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ad68dc6aac90193cc15955d7bd1a5b1fc" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>getNumChildren</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ac387d211dbc2689a216a3b99bc332507" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>getNumTotalChildren</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a294b7827285c140d412a4344f3b135d5" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>getNumTotalChildren</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ab509dada696b718152e8ac04edd551af" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>getParent</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a88b2add909b0035f4844317481ed559b" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>isRoot</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a368873db0ddebf8365fdd3021927a691" prot="private" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>next_seq_</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a834e7b54ea2dceae42db7c5ea859753f" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>NodeListType</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a56532f6b47b9c71864980b73deee2d5a" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>numLevels</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1af64acc9543dc1bd1b56d6ed17b003425" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>NumLevelsType</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a5ce4242e9580c807baa74168401f381a" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>OperationType</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1ac41b433147b957df5639d72ac8946090" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>reduce</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1ac3fc898f5dec892d7d62e20ea9f6ac09" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>reduce</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1ad8cc041ce827d4b9240a4e7dc309791e" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>reduce</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a5e5a3c0e00259bec5aad517aeaba36ac" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>Reduce</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a346fd6b262828a501c342330fc091fec" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>Reduce</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a18df32ceadd6b55979c8fd7e85f613e4" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>reduceAddMsg</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a0642df1a1e52d7da269d8fb23dfc193f" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>reduceNewMsg</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a6c3e63aca10c31d2823b0b18cf9762a4" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>ReduceNumType</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a48c7bb604fade1b64b9b391f4091ad5b" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>reduceRootRecv</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1ab0e89b962f0741718107772505fe6d34" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>ReduceStateType</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a2bae42586b143c42c731bcd9c96d4426" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>reduceUp</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a70ebc22c7420905f3e178dccb126c435" prot="private" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>scope_</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1aa3120d3bdbb2a308dd6831aa52d0ebb0" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>setupTree</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1ad8849fa013a4b3e3f795ceeb103026e4" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>startReduce</name></member>
      <member refid="structvt_1_1collective_1_1reduce_1_1_reduce_1a49b9fcaf2f8b76d350d1e3b809add2aa" prot="private" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>state_</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ae9570e9a8f303295744e99b527603a51" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>Tree</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ad759f716890ce5344a6c6053fcdc7055" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>Tree</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a949f8b592559125bf225bd3828bd6b88" prot="public" virt="non-virtual"><scope>vt::collective::reduce::Reduce</scope><name>Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
