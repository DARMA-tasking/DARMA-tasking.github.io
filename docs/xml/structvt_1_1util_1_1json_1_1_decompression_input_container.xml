<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1util_1_1json_1_1_decompression_input_container" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::json::DecompressionInputContainer</compoundname>
    <includes refid="decompression__input__container_8h" local="no">decompression_input_container.h</includes>
    <innerclass refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1_1_any_stream_tag" prot="public">vt::util::json::DecompressionInputContainer::AnyStreamTag</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1util_1_1json_1_1_decompression_input_container_1a9e2a25dd33b20d6c2fcdb356a19f2dbb" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename StreamT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1util_1_1compress_1_1_decompressor" kindref="compound">compress::Decompressor</ref>&lt; StreamT &gt;</type>
        <definition>using vt::util::json::DecompressionInputContainer::DecompressorStreamType =  compress::Decompressor&lt;StreamT&gt;</definition>
        <argsstring></argsstring>
        <name>DecompressorStreamType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/decompression_input_container.h" line="63" column="3" bodyfile="src/vt/utils/json/decompression_input_container.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1json_1_1_decompression_input_container_1acb359b166e7b6db21c74da16d8207ef4" prot="public" static="no">
        <type><ref refid="structvt_1_1util_1_1compress_1_1_decompressor_base" kindref="compound">compress::DecompressorBase</ref></type>
        <definition>using vt::util::json::DecompressionInputContainer::DecompressorType =  compress::DecompressorBase</definition>
        <argsstring></argsstring>
        <name>DecompressorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/decompression_input_container.h" line="64" column="3" bodyfile="src/vt/utils/json/decompression_input_container.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_decompression_input_container_1a7d9641c3df3cf752ba8f9724ae8f14c7" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::util::json::DecompressionInputContainer::chunk_size_</definition>
        <argsstring></argsstring>
        <name>chunk_size_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The chunk size </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/decompression_input_container.h" line="105" column="15" bodyfile="src/vt/utils/json/decompression_input_container.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_decompression_input_container_1a2798121aebac93d48b7d01e3950091d5" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1acb359b166e7b6db21c74da16d8207ef4" kindref="member">DecompressorType</ref> &gt;</type>
        <definition>std::unique_ptr&lt;DecompressorType&gt; vt::util::json::DecompressionInputContainer::d_</definition>
        <argsstring></argsstring>
        <name>d_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The decompressor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/decompression_input_container.h" line="106" column="19" bodyfile="src/vt/utils/json/decompression_input_container.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_decompression_input_container_1ae759b03218d7920730b28aafedf1b706" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; uint8_t[]&gt;</type>
        <definition>std::unique_ptr&lt;uint8_t[]&gt; vt::util::json::DecompressionInputContainer::output_buf_</definition>
        <argsstring></argsstring>
        <name>output_buf_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The temp output buffer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/decompression_input_container.h" line="107" column="19" bodyfile="src/vt/utils/json/decompression_input_container.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_decompression_input_container_1aba55d6a79bffddcb9f80b8426e49ec48" prot="private" static="no" mutable="yes">
        <type>std::size_t</type>
        <definition>std::size_t vt::util::json::DecompressionInputContainer::cur_</definition>
        <argsstring></argsstring>
        <name>cur_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/decompression_input_container.h" line="108" column="23" bodyfile="src/vt/utils/json/decompression_input_container.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_decompression_input_container_1ad0debeddc63aad7a8052a7af5a7b2351" prot="private" static="no" mutable="yes">
        <type>std::size_t</type>
        <definition>std::size_t vt::util::json::DecompressionInputContainer::len_</definition>
        <argsstring></argsstring>
        <name>len_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Max position in buf </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/decompression_input_container.h" line="109" column="23" bodyfile="src/vt/utils/json/decompression_input_container.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_decompression_input_container_1a5cfd1790238964e47e7292ed1ec40548" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::util::json::DecompressionInputContainer::DecompressionInputContainer</definition>
        <argsstring>(std::string const &amp;filename, std::size_t in_chunk_size=1&lt;&lt; 16)</argsstring>
        <name>DecompressionInputContainer</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>in_chunk_size</declname>
          <defval>1&lt;&lt; 16</defval>
        </param>
        <briefdescription>
<para>Construct with filename to read. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the filename </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_chunk_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the chunk size to read in increments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/decompression_input_container.h" line="72" column="12" bodyfile="src/vt/utils/json/decompression_input_container.cc" bodystart="50" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_decompression_input_container_1a52e3c1f7f8344a77adab88a29251c984" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StreamLike</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vt::util::json::DecompressionInputContainer::DecompressionInputContainer</definition>
        <argsstring>(AnyStreamTag, StreamLike stream, std::size_t in_chunk_size=1&lt;&lt; 16)</argsstring>
        <name>DecompressionInputContainer</name>
        <param>
          <type><ref refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1_1_any_stream_tag" kindref="compound">AnyStreamTag</ref></type>
        </param>
        <param>
          <type>StreamLike</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>in_chunk_size</declname>
          <defval>1&lt;&lt; 16</defval>
        </param>
        <briefdescription>
<para>Construct with anything that resembles a stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_chunk_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the chunk size to read in increments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/decompression_input_container.h" line="86" column="12" bodyfile="src/vt/utils/json/decompression_input_container.impl.h" bodystart="50" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_decompression_input_container_1a7c602c87bed6ca42c1bb2e0a969a922e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::util::json::DecompressionInputContainer::advance</definition>
        <argsstring>() const</argsstring>
        <name>advance</name>
        <briefdescription>
<para>Advance by one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it was successful (otherwise, EOF) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/decompression_input_container.h" line="95" column="8" bodyfile="src/vt/utils/json/decompression_input_container.cc" bodystart="61" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_decompression_input_container_1a05e4f427b7fa0e0b178f74d3c5fc74ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>char const  &amp;</type>
        <definition>char const  &amp; vt::util::json::DecompressionInputContainer::getCurrent</definition>
        <argsstring>() const</argsstring>
        <name>getCurrent</name>
        <briefdescription>
<para>Get the current char. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the current char </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/decompression_input_container.h" line="102" column="14" bodyfile="src/vt/utils/json/decompression_input_container.cc" bodystart="79" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Decompression container for traversing compressed data and passing it to the JSON reader through the <computeroutput><ref refid="structvt_1_1util_1_1json_1_1_input_iterator" kindref="compound">InputIterator</ref></computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/utils/json/decompression_input_container.h" line="61" column="1" bodyfile="src/vt/utils/json/decompression_input_container.h" bodystart="61" bodyend="110"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1a7c602c87bed6ca42c1bb2e0a969a922e" prot="public" virt="non-virtual"><scope>vt::util::json::DecompressionInputContainer</scope><name>advance</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1a7d9641c3df3cf752ba8f9724ae8f14c7" prot="private" virt="non-virtual"><scope>vt::util::json::DecompressionInputContainer</scope><name>chunk_size_</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1aba55d6a79bffddcb9f80b8426e49ec48" prot="private" virt="non-virtual"><scope>vt::util::json::DecompressionInputContainer</scope><name>cur_</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1a2798121aebac93d48b7d01e3950091d5" prot="private" virt="non-virtual"><scope>vt::util::json::DecompressionInputContainer</scope><name>d_</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1a5cfd1790238964e47e7292ed1ec40548" prot="public" virt="non-virtual"><scope>vt::util::json::DecompressionInputContainer</scope><name>DecompressionInputContainer</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1a52e3c1f7f8344a77adab88a29251c984" prot="public" virt="non-virtual"><scope>vt::util::json::DecompressionInputContainer</scope><name>DecompressionInputContainer</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1a9e2a25dd33b20d6c2fcdb356a19f2dbb" prot="public" virt="non-virtual"><scope>vt::util::json::DecompressionInputContainer</scope><name>DecompressorStreamType</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1acb359b166e7b6db21c74da16d8207ef4" prot="public" virt="non-virtual"><scope>vt::util::json::DecompressionInputContainer</scope><name>DecompressorType</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1a05e4f427b7fa0e0b178f74d3c5fc74ce" prot="public" virt="non-virtual"><scope>vt::util::json::DecompressionInputContainer</scope><name>getCurrent</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1ad0debeddc63aad7a8052a7af5a7b2351" prot="private" virt="non-virtual"><scope>vt::util::json::DecompressionInputContainer</scope><name>len_</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_decompression_input_container_1ae759b03218d7920730b28aafedf1b706" prot="private" virt="non-virtual"><scope>vt::util::json::DecompressionInputContainer</scope><name>output_buf_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
