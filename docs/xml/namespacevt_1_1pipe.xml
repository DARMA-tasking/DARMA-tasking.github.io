<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="namespacevt_1_1pipe" kind="namespace" language="C++">
    <compoundname>vt::pipe</compoundname>
    <innerclass refid="structvt_1_1pipe_1_1_callback_msg" prot="public">vt::pipe::CallbackMsg</innerclass>
    <innerclass refid="structvt_1_1pipe_1_1_construct_callbacks" prot="public">vt::pipe::ConstructCallbacks</innerclass>
    <innerclass refid="structvt_1_1pipe_1_1_construct_callbacks_impl" prot="public">vt::pipe::ConstructCallbacksImpl</innerclass>
    <innerclass refid="structvt_1_1pipe_1_1_construct_callbacks_impl_3_01cur_00_01_t_00_01_cons_t_00_01_u_00_01_n_00_01fcur_00_01f_8_8_8_01_4" prot="public">vt::pipe::ConstructCallbacksImpl&lt; cur, T, ConsT, U, N, fcur, f... &gt;</innerclass>
    <innerclass refid="structvt_1_1pipe_1_1_construct_callbacks_impl_3_01_n_00_01_t_00_01_cons_t_00_01_u_00_01_n_01_4" prot="public">vt::pipe::ConstructCallbacksImpl&lt; N, T, ConsT, U, N &gt;</innerclass>
    <innerclass refid="structvt_1_1pipe_1_1_pipe_i_d_builder" prot="public">vt::pipe::PipeIDBuilder</innerclass>
    <innerclass refid="structvt_1_1pipe_1_1_pipe_manager" prot="public">vt::pipe::PipeManager</innerclass>
    <innerclass refid="structvt_1_1pipe_1_1_pipe_manager_base" prot="public">vt::pipe::PipeManagerBase</innerclass>
    <innerclass refid="structvt_1_1pipe_1_1_pipe_manager_t_l" prot="public">vt::pipe::PipeManagerTL</innerclass>
    <innerclass refid="structvt_1_1pipe_1_1_pipe_manager_typed" prot="public">vt::pipe::PipeManagerTyped</innerclass>
    <innerclass refid="structvt_1_1pipe_1_1_pipe_state" prot="public">vt::pipe::PipeState</innerclass>
    <innerclass refid="structvt_1_1pipe_1_1_repeat_n_impl" prot="public">vt::pipe::RepeatNImpl</innerclass>
    <innerclass refid="structvt_1_1pipe_1_1_repeat_n_impl_3_010_00_01_value_t_01_4" prot="public">vt::pipe::RepeatNImpl&lt; 0, ValueT &gt;</innerclass>
    <innernamespace refid="namespacevt_1_1pipe_1_1callback">vt::pipe::callback</innernamespace>
    <innernamespace refid="namespacevt_1_1pipe_1_1interface">vt::pipe::interface</innernamespace>
    <innernamespace refid="namespacevt_1_1pipe_1_1signal">vt::pipe::signal</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacevt_1_1pipe_1a21eef17afd7b326e3b65894dffa25901" prot="public" static="no" strong="no">
        <type></type>
        <name>ePipeIDBits</name>
        <enumvalue id="namespacevt_1_1pipe_1a21eef17afd7b326e3b65894dffa25901aaac42b3fdd37e9218dbd0e436d89267d" prot="public">
          <name>Sendback</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1pipe_1a21eef17afd7b326e3b65894dffa25901ac18837aff5b91489fb6ecd1d654c9fe6" prot="public">
          <name>Persist</name>
          <initializer>= ePipeIDBits::Sendback + pipe_send_back_num_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1pipe_1a21eef17afd7b326e3b65894dffa25901ac0c297204ed447f62890997c285e167f" prot="public">
          <name>Node</name>
          <initializer>= ePipeIDBits::Persist  + pipe_persist_num_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1pipe_1a21eef17afd7b326e3b65894dffa25901af10f264d6f5a73d3ea0c79b74f383933" prot="public">
          <name>ID</name>
          <initializer>= ePipeIDBits::Node     + pipe_node_num_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/id/pipe_id.h" line="60" column="17" bodyfile="src/vt/pipe/id/pipe_id.h" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1pipe_1acb42b284378c0fdac1d7c6335dc26f58" prot="public" static="no" strong="yes">
        <type>int8_t</type>
        <name>LifetimeEnum</name>
        <enumvalue id="namespacevt_1_1pipe_1acb42b284378c0fdac1d7c6335dc26f58ae1a9dc9f23534e63de9df0d540ac1611" prot="public">
          <name>Once</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1pipe_1acb42b284378c0fdac1d7c6335dc26f58af55dbf14245df4e3c834b3edd8495b52" prot="public">
          <name>Indefinite</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Set the default lifetime for a callback. Once implies a callback can only be invoked once before it is deallocated. Indefinite means the callback can be used until the creator deletes it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_lifetime.h" line="56" column="25" bodyfile="src/vt/pipe/pipe_lifetime.h" bodystart="56" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacevt_1_1pipe_1a8aa7908de242917ac0922b9e9c85fea4" prot="public" static="no">
        <type>uint32_t</type>
        <definition>using vt::pipe::PipeIDType = typedef uint32_t</definition>
        <argsstring></argsstring>
        <name>PipeIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_common.h" line="54" column="1" bodyfile="src/vt/pipe/pipe_common.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1pipe_1a9f156f00d06693969d89a230a38eab52" prot="public" static="no">
        <type>uint64_t</type>
        <definition>using vt::pipe::PipeRemoteOpType = typedef uint64_t</definition>
        <argsstring></argsstring>
        <name>PipeRemoteOpType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_common.h" line="55" column="1" bodyfile="src/vt/pipe/pipe_common.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1pipe_1aec0e0e0847f490cd0b05c6d4e61003e9" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>typename U::IndexType</type>
        <definition>using vt::pipe::hasIdx_t = typedef typename U::IndexType</definition>
        <argsstring></argsstring>
        <name>hasIdx_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="142" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1pipe_1a3408b0dc1e00ebc844cfeab7349156b5" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref></type>
        <definition>constexpr const BitCountType vt::pipe::pipe_send_back_num_bits</definition>
        <argsstring></argsstring>
        <name>pipe_send_back_num_bits</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/id/pipe_id.h" line="53" column="37" bodyfile="src/vt/pipe/id/pipe_id.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1pipe_1a01c37915d2ff91a0173cff23f4b28863" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref></type>
        <definition>constexpr const BitCountType vt::pipe::pipe_persist_num_bits</definition>
        <argsstring></argsstring>
        <name>pipe_persist_num_bits</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/id/pipe_id.h" line="54" column="37" bodyfile="src/vt/pipe/id/pipe_id.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1pipe_1a6bf82badf0e6e0916f3306a3716f06e5" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref></type>
        <definition>constexpr const BitCountType vt::pipe::pipe_node_num_bits</definition>
        <argsstring></argsstring>
        <name>pipe_node_num_bits</name>
        <initializer>=
    <ref refid="namespacevt_1a34b3eb2eea8db3cf4ae27ced35b19b46" kindref="member">BitCounterType</ref>&lt;<ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref>&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/id/pipe_id.h" line="55" column="37" bodyfile="src/vt/pipe/id/pipe_id.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1pipe_1a511b41294333ca342063f2e1a8af120a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref></type>
        <definition>constexpr const BitCountType vt::pipe::pipe_id_num_bits</definition>
        <argsstring></argsstring>
        <name>pipe_id_num_bits</name>
        <initializer>=
    <ref refid="namespacevt_1a34b3eb2eea8db3cf4ae27ced35b19b46" kindref="member">BitCounterType</ref>&lt;<ref refid="namespacevt_1_1pipe_1a8aa7908de242917ac0922b9e9c85fea4" kindref="member">PipeIDType</ref>&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/id/pipe_id.h" line="57" column="37" bodyfile="src/vt/pipe/id/pipe_id.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1pipe_1af7c3f2079fcfe08220ac3599b1efb4f6" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1_1pipe_1a8aa7908de242917ac0922b9e9c85fea4" kindref="member">PipeIDType</ref></type>
        <definition>constexpr const PipeIDType vt::pipe::initial_pipe_id</definition>
        <argsstring></argsstring>
        <name>initial_pipe_id</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_common.h" line="57" column="41" bodyfile="src/vt/pipe/pipe_common.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1pipe_1a3e13fb5751884c5abb9b8237a5d5e522" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1_1pipe_1a8aa7908de242917ac0922b9e9c85fea4" kindref="member">PipeIDType</ref></type>
        <definition>constexpr const PipeIDType vt::pipe::no_pipe_id</definition>
        <argsstring></argsstring>
        <name>no_pipe_id</name>
        <initializer>= 0xFFFFFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_common.h" line="58" column="41" bodyfile="src/vt/pipe/pipe_common.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1pipe_1a69aafc55d0e11ad40eeb851065630f0c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1_1pipe_1a9f156f00d06693969d89a230a38eab52" kindref="member">PipeRemoteOpType</ref></type>
        <definition>constexpr const PipeRemoteOpType vt::pipe::initial_pipe_op</definition>
        <argsstring></argsstring>
        <name>initial_pipe_op</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_common.h" line="59" column="41" bodyfile="src/vt/pipe/pipe_common.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1pipe_1a1c112fe717abcc5e08862bc701001719" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1_1pipe_1a9f156f00d06693969d89a230a38eab52" kindref="member">PipeRemoteOpType</ref></type>
        <definition>constexpr const PipeRemoteOpType vt::pipe::no_pipe_op</definition>
        <argsstring></argsstring>
        <name>no_pipe_op</name>
        <initializer>= 0xFFFFFFFFFFFFFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_common.h" line="60" column="41" bodyfile="src/vt/pipe/pipe_common.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1pipe_1ac55cd91c8aee610ae0e8b1843229a285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::triggerPipe</definition>
        <argsstring>(PipeType const &amp;pipe)</argsstring>
        <name>triggerPipe</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager.cc" line="66" column="6" bodyfile="src/vt/pipe/pipe_manager.cc" bodystart="66" bodyend="68" declfile="src/vt/pipe/pipe_manager.fwd.h" declline="61" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1pipe_1af259c91e50470478594f47b11a8ecb88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::triggerCallbackHan</definition>
        <argsstring>(CallbackMsg *msg)</argsstring>
        <name>triggerCallbackHan</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_callback_msg" kindref="compound">CallbackMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager.cc" line="70" column="6" bodyfile="src/vt/pipe/pipe_manager.cc" bodystart="70" bodyend="72" declfile="src/vt/pipe/pipe_manager.fwd.h" declline="65" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1pipe_1aa17c7b2572558dd48295d039f6f26c75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::triggerSendBack</definition>
        <argsstring>(PipeType const &amp;pipe, MsgT *data)</argsstring>
        <name>triggerSendBack</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pipe</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager.impl.h" line="178" column="6" bodyfile="src/vt/pipe/pipe_manager.impl.h" bodystart="178" bodyend="180" declfile="src/vt/pipe/pipe_manager.fwd.h" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1pipe_1a1fea0e249e8f363c86cff32d9034238e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::triggerPipeTyped</definition>
        <argsstring>(PipeType const &amp;pipe, MsgT *msg)</argsstring>
        <name>triggerPipeTyped</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pipe</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager.impl.h" line="183" column="6" bodyfile="src/vt/pipe/pipe_manager.impl.h" bodystart="183" bodyend="185" declfile="src/vt/pipe/pipe_manager.fwd.h" declline="58" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1pipe_1ae131e6afcc435107fcd51771caa9abc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::triggerPipeUnknown</definition>
        <argsstring>(PipeType const &amp;pipe, MsgT *msg)</argsstring>
        <name>triggerPipeUnknown</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pipe</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager.impl.h" line="188" column="6" bodyfile="src/vt/pipe/pipe_manager.impl.h" bodystart="188" bodyend="190" declfile="src/vt/pipe/pipe_manager.fwd.h" declline="60" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1pipe_1a8be489288c5586b4a4d0daad173bc357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::triggerCallbackMsgHan</definition>
        <argsstring>(MsgT *msg)</argsstring>
        <name>triggerCallbackMsgHan</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager.impl.h" line="193" column="6" bodyfile="src/vt/pipe/pipe_manager.impl.h" bodystart="193" bodyend="195" declfile="src/vt/pipe/pipe_manager.fwd.h" declline="64" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1pipe_1a29ac7040650fbe19e46bd3e00c4000b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Tuple</type>
          </param>
          <param>
            <type>size_t...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>T &amp;&amp;</type>
        <definition>static T&amp;&amp; vt::pipe::build</definition>
        <argsstring>(HandlerType han, Tuple t, std::index_sequence&lt; I... &gt;)</argsstring>
        <name>build</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>han</declname>
        </param>
        <param>
          <type>Tuple</type>
          <declname>t</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; I... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_construct.h" line="100" column="10" bodyfile="src/vt/pipe/pipe_manager_construct.h" bodystart="100" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1pipe_1a3bac0ae2ffeabfe08ac2431cb3771d53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>size</declname>
            <defname>size</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>T &amp;&amp;</type>
        <definition>static T&amp;&amp; vt::pipe::build</definition>
        <argsstring>(HandlerType han, std::tuple&lt; Args... &gt; t)</argsstring>
        <name>build</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>han</declname>
        </param>
        <param>
          <type>std::tuple&lt; Args... &gt;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_construct.h" line="110" column="10" bodyfile="src/vt/pipe/pipe_manager_construct.h" bodystart="110" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/pipe/callback/anon/callback_anon.fwd.h" line="49" column="25"/>
  </compounddef>
</doxygen>
