<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structcheckpoint_1_1dispatch_1_1_reconstructor" kind="struct" language="C++" prot="public">
    <compoundname>checkpoint::dispatch::Reconstructor</compoundname>
    <includes refid="reconstructor_8h" local="no">reconstructor.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_reconstructor_1af09a6d0312dbed7c8a311350b689794d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* checkpoint::dispatch::Reconstructor&lt; T &gt;::constructDefault</definition>
        <argsstring>(void *buf, isDefaultConsType&lt; U &gt; *=nullptr)</argsstring>
        <name>constructDefault</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a58224a3b056d9e2aa73d563871981a7d" kindref="member">isDefaultConsType</ref>&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" line="60" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" bodystart="60" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_reconstructor_1abbdc865e73cc1a41a816525d1bd5f507" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* checkpoint::dispatch::Reconstructor&lt; T &gt;::constructDefault</definition>
        <argsstring>(void *, isNotDefaultConsType&lt; U &gt; *=nullptr)</argsstring>
        <name>constructDefault</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a4032c86e7c92702198dd675a2696ee2c" kindref="member">isNotDefaultConsType</ref>&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" line="70" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" bodystart="70" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_reconstructor_1a86a95e9ca24e30a627ed6626f19db4a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* checkpoint::dispatch::Reconstructor&lt; T &gt;::constructReconstruct</definition>
        <argsstring>(void *buf, isReconstructibleType&lt; U &gt; *=nullptr)</argsstring>
        <name>constructReconstruct</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a126da7cae6bbbec231bb2552dc3ad6cc" kindref="member">isReconstructibleType</ref>&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" line="93" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_reconstructor_1a4c1529ff50346df55cd3abd98e375cdd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* checkpoint::dispatch::Reconstructor&lt; T &gt;::constructReconstruct</definition>
        <argsstring>(void *buf, isSpecializedReconstructibleType&lt; U &gt; *=nullptr)</argsstring>
        <name>constructReconstruct</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a30b2672bbbe0c21d2b88edb1ddaec19a" kindref="member">isSpecializedReconstructibleType</ref>&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" line="100" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" bodystart="100" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_reconstructor_1ad1362a1e66b441a04e4bb4b7245eb3c4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* checkpoint::dispatch::Reconstructor&lt; T &gt;::constructReconstruct</definition>
        <argsstring>(void *buf, isNonIntReconstructibleType&lt; U &gt; *=nullptr)</argsstring>
        <name>constructReconstruct</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a46b7909fb0fef92b4787567fde7c760b" kindref="member">isNonIntReconstructibleType</ref>&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" line="112" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" bodystart="112" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_reconstructor_1a8a504054312ef8e5703d938cc2ef75be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* checkpoint::dispatch::Reconstructor&lt; T &gt;::constructReconstruct</definition>
        <argsstring>(void *buf, isNotReconstructibleType&lt; U &gt; *=nullptr)</argsstring>
        <name>constructReconstruct</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a0054cbef71b90d6860e1d3916cf9d299" kindref="member">isNotReconstructibleType</ref>&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Non-reconstruct pass-through. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" line="124" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_reconstructor_1ac702decacef9a6ef4d0cf5492187b9ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* checkpoint::dispatch::Reconstructor&lt; T &gt;::constructTag</definition>
        <argsstring>(void *buf, isTaggedConstructibleType&lt; U &gt; *=nullptr)</argsstring>
        <name>constructTag</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1abff0f367c546c94ce857d200153d990f" kindref="member">isTaggedConstructibleType</ref>&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Tagged constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" line="130" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_reconstructor_1a116025ae56a26ed4d6a51b999f57fd47" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* checkpoint::dispatch::Reconstructor&lt; T &gt;::constructTag</definition>
        <argsstring>(void *buf, isNotTaggedConstructibleType&lt; U &gt; *=nullptr)</argsstring>
        <name>constructTag</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a4eb64ee16bff7ef1609e5b98cb16cfb6" kindref="member">isNotTaggedConstructibleType</ref>&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Non-tagged constructor pass-through. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" line="138" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_reconstructor_1a31a927731c0b265003a416e8d20616a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* checkpoint::dispatch::Reconstructor&lt; T &gt;::construct</definition>
        <argsstring>(void *buf)</argsstring>
        <name>construct</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" line="143" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_reconstructor_1ac4eac94cd715ae6637f5f5c52bb78584" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* checkpoint::dispatch::Reconstructor&lt; T &gt;::constructAllowFailImpl</definition>
        <argsstring>(void *buf, isConstructible&lt; U &gt; *=nullptr)</argsstring>
        <name>constructAllowFailImpl</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a48ec2649d5cbd890f67ea1193cc0d51a" kindref="member">isConstructible</ref>&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overloads that allow failure to reconstruct so SFINAE overloads don&apos;t static assert out </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" line="150" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_reconstructor_1aaec0b8d76f177fd7e1ce58e754ac04d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* checkpoint::dispatch::Reconstructor&lt; T &gt;::constructAllowFailImpl</definition>
        <argsstring>(void *, isNotConstructible&lt; U &gt; *=nullptr)</argsstring>
        <name>constructAllowFailImpl</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a14b3c81988a2c2d3c935edcc653b6322" kindref="member">isNotConstructible</ref>&lt; U &gt; *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" line="155" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" bodystart="155" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1dispatch_1_1_reconstructor_1afbfa29526948dda3d9d843a377f526fc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>T</defval>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* checkpoint::dispatch::Reconstructor&lt; T &gt;::constructAllowFail</definition>
        <argsstring>(void *buf)</argsstring>
        <name>constructAllowFail</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" line="173" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" bodystart="173" bodyend="175"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" line="57" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/reconstructor.h" bodystart="57" bodyend="176"/>
    <listofallmembers>
      <member refid="structcheckpoint_1_1dispatch_1_1_reconstructor_1a31a927731c0b265003a416e8d20616a1" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::Reconstructor</scope><name>construct</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_reconstructor_1afbfa29526948dda3d9d843a377f526fc" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::Reconstructor</scope><name>constructAllowFail</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_reconstructor_1ac4eac94cd715ae6637f5f5c52bb78584" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::Reconstructor</scope><name>constructAllowFailImpl</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_reconstructor_1aaec0b8d76f177fd7e1ce58e754ac04d4" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::Reconstructor</scope><name>constructAllowFailImpl</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_reconstructor_1af09a6d0312dbed7c8a311350b689794d" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::Reconstructor</scope><name>constructDefault</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_reconstructor_1abbdc865e73cc1a41a816525d1bd5f507" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::Reconstructor</scope><name>constructDefault</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_reconstructor_1a86a95e9ca24e30a627ed6626f19db4a2" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::Reconstructor</scope><name>constructReconstruct</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_reconstructor_1a4c1529ff50346df55cd3abd98e375cdd" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::Reconstructor</scope><name>constructReconstruct</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_reconstructor_1ad1362a1e66b441a04e4bb4b7245eb3c4" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::Reconstructor</scope><name>constructReconstruct</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_reconstructor_1a8a504054312ef8e5703d938cc2ef75be" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::Reconstructor</scope><name>constructReconstruct</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_reconstructor_1ac702decacef9a6ef4d0cf5492187b9ab" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::Reconstructor</scope><name>constructTag</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1_reconstructor_1a116025ae56a26ed4d6a51b999f57fd47" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::Reconstructor</scope><name>constructTag</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
