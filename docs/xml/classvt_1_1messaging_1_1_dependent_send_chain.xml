<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classvt_1_1messaging_1_1_dependent_send_chain" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>vt::messaging::DependentSendChain</compoundname>
    <includes refid="dependent__send__chain_8h" local="no">vt/messaging/dependent_send_chain.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvt_1_1messaging_1_1_dependent_send_chain_1acbba3599015aff00654f3cb8efaba623" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a81d11b28122d43bf9834577e4a06440f" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::messaging::DependentSendChain::last_epoch_</definition>
        <argsstring></argsstring>
        <name>last_epoch_</name>
        <initializer>= no_epoch</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The last epoch added to the chain </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/dependent_send_chain.h" line="223" column="1" bodyfile="src/vt/messaging/dependent_send_chain.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvt_1_1messaging_1_1_dependent_send_chain_1a2ac6403b270d59f3619698010688f2b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::messaging::DependentSendChain::DependentSendChain</definition>
        <argsstring>()</argsstring>
        <name>DependentSendChain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/dependent_send_chain.h" line="119" column="1" bodyfile="src/vt/messaging/dependent_send_chain.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1messaging_1_1_dependent_send_chain_1af6079d6e7c8910bc8a7372796f2227e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::messaging::DependentSendChain::add</definition>
        <argsstring>(EpochType new_epoch, PendingSend &amp;&amp;link)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="namespacevt_1a81d11b28122d43bf9834577e4a06440f" kindref="member">EpochType</ref></type>
          <declname>new_epoch</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">PendingSend</ref> &amp;&amp;</type>
          <declname>link</declname>
        </param>
        <briefdescription>
<para>Add a task to the chain for work. </para>        </briefdescription>
        <detaileddescription>
<para>Add a task to the chain of work to be run in the specified epoch, with subsequent tasks dependent on all work occuring in the specified epoch</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">new_epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch the task is being added to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">link</parametername>
</parameternamelist>
<parameterdescription>
<para>the <computeroutput><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">PendingSend</ref></computeroutput> to release when complete </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/dependent_send_chain.h" line="131" column="1" bodyfile="src/vt/messaging/dependent_send_chain.h" bodystart="131" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1messaging_1_1_dependent_send_chain_1a3c21ea18f9d248277e3b02ada94b2144" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::messaging::DependentSendChain::done</definition>
        <argsstring>()</argsstring>
        <name>done</name>
        <briefdescription>
<para>Indicate that the chain is complete and should be reset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/dependent_send_chain.h" line="174" column="1" bodyfile="src/vt/messaging/dependent_send_chain.h" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1messaging_1_1_dependent_send_chain_1a7a75a0b1850c0463c84a15c0df6520db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::messaging::DependentSendChain::isTerminated</definition>
        <argsstring>()</argsstring>
        <name>isTerminated</name>
        <briefdescription>
<para>Check if the chain has terminated. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether the chain has terminated </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/dependent_send_chain.h" line="183" column="1" bodyfile="src/vt/messaging/dependent_send_chain.h" bodystart="183" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1messaging_1_1_dependent_send_chain_1a64a4bc71711110632e2056380a603005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::messaging::DependentSendChain::DependentSendChain</definition>
        <argsstring>(const DependentSendChain &amp;)=delete</argsstring>
        <name>DependentSendChain</name>
        <param>
          <type>const <ref refid="classvt_1_1messaging_1_1_dependent_send_chain" kindref="compound">DependentSendChain</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This structure is move-only and cannot be copied by design </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/dependent_send_chain.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1messaging_1_1_dependent_send_chain_1a74e4a9681e4103eb6f3175d01de19f16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::messaging::DependentSendChain::DependentSendChain</definition>
        <argsstring>(DependentSendChain &amp;&amp;)=default</argsstring>
        <name>DependentSendChain</name>
        <param>
          <type><ref refid="classvt_1_1messaging_1_1_dependent_send_chain" kindref="compound">DependentSendChain</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/dependent_send_chain.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1messaging_1_1_dependent_send_chain_1ae3ec1e39a710da8d3e9d94318294bab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvt_1_1messaging_1_1_dependent_send_chain" kindref="compound">DependentSendChain</ref> &amp;</type>
        <definition>DependentSendChain&amp; vt::messaging::DependentSendChain::operator=</definition>
        <argsstring>(const DependentSendChain &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvt_1_1messaging_1_1_dependent_send_chain" kindref="compound">DependentSendChain</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/dependent_send_chain.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1messaging_1_1_dependent_send_chain_1ad407bff30774d2a403fe26714bfe2d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvt_1_1messaging_1_1_dependent_send_chain" kindref="compound">DependentSendChain</ref> &amp;</type>
        <definition>DependentSendChain&amp; vt::messaging::DependentSendChain::operator=</definition>
        <argsstring>(DependentSendChain &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classvt_1_1messaging_1_1_dependent_send_chain" kindref="compound">DependentSendChain</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/dependent_send_chain.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1messaging_1_1_dependent_send_chain_1ab83d35f473326151fe0ab2fe82b6de6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::messaging::DependentSendChain::~DependentSendChain</definition>
        <argsstring>()=default</argsstring>
        <name>~DependentSendChain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/dependent_send_chain.h" line="195" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classvt_1_1messaging_1_1_dependent_send_chain_1a88c235288669210ba02b33185df1005d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vt::messaging::DependentSendChain::mergeChainStep</definition>
        <argsstring>(DependentSendChain &amp;a, DependentSendChain &amp;b, EpochType new_epoch, PendingSend &amp;&amp;link)</argsstring>
        <name>mergeChainStep</name>
        <param>
          <type><ref refid="classvt_1_1messaging_1_1_dependent_send_chain" kindref="compound">DependentSendChain</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classvt_1_1messaging_1_1_dependent_send_chain" kindref="compound">DependentSendChain</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a81d11b28122d43bf9834577e4a06440f" kindref="member">EpochType</ref></type>
          <declname>new_epoch</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">PendingSend</ref> &amp;&amp;</type>
          <declname>link</declname>
        </param>
        <briefdescription>
<para>Add a task that is dependent on two <ref refid="classvt_1_1messaging_1_1_dependent_send_chain" kindref="compound">DependentSendChain</ref> instances. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>the first <ref refid="classvt_1_1messaging_1_1_dependent_send_chain" kindref="compound">DependentSendChain</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>the second <ref refid="classvt_1_1messaging_1_1_dependent_send_chain" kindref="compound">DependentSendChain</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">new_epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch the task is being added to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">link</parametername>
</parameternamelist>
<parameterdescription>
<para>the <computeroutput><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">PendingSend</ref></computeroutput> to release when complete </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/dependent_send_chain.h" line="151" column="1" bodyfile="src/vt/messaging/dependent_send_chain.h" bodystart="151" bodyend="169"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvt_1_1messaging_1_1_dependent_send_chain_1a2ebf8a8d7c1cc95afe97ea6f717258c7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::messaging::DependentSendChain::checkInit</definition>
        <argsstring>()</argsstring>
        <name>checkInit</name>
        <briefdescription>
<para>Check if the chain has been initialized or not, if not then reset it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/dependent_send_chain.h" line="201" column="1" bodyfile="src/vt/messaging/dependent_send_chain.h" bodystart="201" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classvt_1_1messaging_1_1_dependent_send_chain_1aa5cf0fcb78d89b1491b154c820eb9ec6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::messaging::DependentSendChain::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Reset the chain creating a new epoch to maintain the invariant. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/dependent_send_chain.h" line="212" column="1" bodyfile="src/vt/messaging/dependent_send_chain.h" bodystart="212" bodyend="221"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A sequenced chain of sends ordered by termination detection. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1437">
        <label>T</label>
      </node>
      <node id="1435">
        <label>vt::epoch::EpochType</label>
        <link refid="structvt_1_1epoch_1_1_epoch_type"/>
        <childnode refid="1436" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1436">
        <label>Strong&lt; detail::EpochImplType, detail::no_epoch_impl, detail::EpochImplTag &gt;</label>
        <link refid="structvt_1_1util_1_1strong_1_1detail_1_1_strong"/>
        <childnode refid="1437" relation="usage">
          <edgelabel>v_</edgelabel>
        </childnode>
      </node>
      <node id="1434">
        <label>vt::messaging::DependentSendChain</label>
        <link refid="classvt_1_1messaging_1_1_dependent_send_chain"/>
        <childnode refid="1435" relation="usage">
          <edgelabel>last_epoch_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/messaging/dependent_send_chain.h" line="117" column="1" bodyfile="src/vt/messaging/dependent_send_chain.h" bodystart="117" bodyend="224"/>
    <listofallmembers>
      <member refid="classvt_1_1messaging_1_1_dependent_send_chain_1af6079d6e7c8910bc8a7372796f2227e1" prot="public" virt="non-virtual"><scope>vt::messaging::DependentSendChain</scope><name>add</name></member>
      <member refid="classvt_1_1messaging_1_1_dependent_send_chain_1a2ebf8a8d7c1cc95afe97ea6f717258c7" prot="private" virt="non-virtual"><scope>vt::messaging::DependentSendChain</scope><name>checkInit</name></member>
      <member refid="classvt_1_1messaging_1_1_dependent_send_chain_1a2ac6403b270d59f3619698010688f2b9" prot="public" virt="non-virtual"><scope>vt::messaging::DependentSendChain</scope><name>DependentSendChain</name></member>
      <member refid="classvt_1_1messaging_1_1_dependent_send_chain_1a64a4bc71711110632e2056380a603005" prot="public" virt="non-virtual"><scope>vt::messaging::DependentSendChain</scope><name>DependentSendChain</name></member>
      <member refid="classvt_1_1messaging_1_1_dependent_send_chain_1a74e4a9681e4103eb6f3175d01de19f16" prot="public" virt="non-virtual"><scope>vt::messaging::DependentSendChain</scope><name>DependentSendChain</name></member>
      <member refid="classvt_1_1messaging_1_1_dependent_send_chain_1a3c21ea18f9d248277e3b02ada94b2144" prot="public" virt="non-virtual"><scope>vt::messaging::DependentSendChain</scope><name>done</name></member>
      <member refid="classvt_1_1messaging_1_1_dependent_send_chain_1a7a75a0b1850c0463c84a15c0df6520db" prot="public" virt="non-virtual"><scope>vt::messaging::DependentSendChain</scope><name>isTerminated</name></member>
      <member refid="classvt_1_1messaging_1_1_dependent_send_chain_1acbba3599015aff00654f3cb8efaba623" prot="private" virt="non-virtual"><scope>vt::messaging::DependentSendChain</scope><name>last_epoch_</name></member>
      <member refid="classvt_1_1messaging_1_1_dependent_send_chain_1a88c235288669210ba02b33185df1005d" prot="public" virt="non-virtual"><scope>vt::messaging::DependentSendChain</scope><name>mergeChainStep</name></member>
      <member refid="classvt_1_1messaging_1_1_dependent_send_chain_1ae3ec1e39a710da8d3e9d94318294bab6" prot="public" virt="non-virtual"><scope>vt::messaging::DependentSendChain</scope><name>operator=</name></member>
      <member refid="classvt_1_1messaging_1_1_dependent_send_chain_1ad407bff30774d2a403fe26714bfe2d27" prot="public" virt="non-virtual"><scope>vt::messaging::DependentSendChain</scope><name>operator=</name></member>
      <member refid="classvt_1_1messaging_1_1_dependent_send_chain_1aa5cf0fcb78d89b1491b154c820eb9ec6" prot="private" virt="non-virtual"><scope>vt::messaging::DependentSendChain</scope><name>reset</name></member>
      <member refid="classvt_1_1messaging_1_1_dependent_send_chain_1ab83d35f473326151fe0ab2fe82b6de6e" prot="public" virt="non-virtual"><scope>vt::messaging::DependentSendChain</scope><name>~DependentSendChain</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
