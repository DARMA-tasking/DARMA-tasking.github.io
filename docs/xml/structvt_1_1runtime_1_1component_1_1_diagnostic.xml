<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1runtime_1_1component_1_1_diagnostic" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>vt::runtime::component::Diagnostic</compoundname>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component_name" prot="public" virt="non-virtual">vt::runtime::component::ComponentName</basecompoundref>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component_reducer" prot="public" virt="non-virtual">vt::runtime::component::ComponentReducer</basecompoundref>
    <derivedcompoundref refid="structvt_1_1runtime_1_1component_1_1_base_component" prot="public" virt="non-virtual">vt::runtime::component::BaseComponent</derivedcompoundref>
    <includes refid="diagnostic_8h" local="no">vt/runtime/component/diagnostic.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1ad95ea698535524d0f82c5da9beaaaf37" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_base" kindref="compound">detail::DiagnosticBase</ref> &gt;</type>
        <definition>using vt::runtime::component::Diagnostic::DiagnosticBasePtrType =  std::unique_ptr&lt;detail::DiagnosticBase&gt;</definition>
        <argsstring></argsstring>
        <name>DiagnosticBasePtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="69" column="1" bodyfile="src/vt/runtime/component/diagnostic.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1a75e737294bb63e1898d9ac4515f0cf63" prot="public" static="no">
        <type><ref refid="namespacevt_1_1runtime_1_1component_1a896637e6e183a909a17bfd8d3943c206" kindref="member">DiagnosticUpdate</ref></type>
        <definition>using vt::runtime::component::Diagnostic::UpdateType =  DiagnosticUpdate</definition>
        <argsstring></argsstring>
        <name>UpdateType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="70" column="1" bodyfile="src/vt/runtime/component/diagnostic.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1a2bcd1016fcdb6395844d4fd15d84a570" prot="public" static="no">
        <type><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307a" kindref="member">DiagnosticUnit</ref></type>
        <definition>using vt::runtime::component::Diagnostic::UnitType =  DiagnosticUnit</definition>
        <argsstring></argsstring>
        <name>UnitType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="71" column="1" bodyfile="src/vt/runtime/component/diagnostic.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1ab4cb6c67b01b76f91cc806a79169da69" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, <ref refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ad95ea698535524d0f82c5da9beaaaf37" kindref="member">DiagnosticBasePtrType</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, DiagnosticBasePtrType&gt; vt::runtime::component::Diagnostic::values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <briefdescription>
<para>Type-erased base pointers to different diagnostic values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="231" column="1" bodyfile="src/vt/runtime/component/diagnostic.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1a1b6da987a14917c7ee8a4d00138e62e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vt::runtime::component::Diagnostic::dumpState</definition>
        <argsstring>()=0</argsstring>
        <name>dumpState</name>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <reimplementedby refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695">dumpState</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1a1d6951af40ad0b4020860c0b21b1a85c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runtime::component::Diagnostic::foreachDiagnostic</definition>
        <argsstring>(std::function&lt; void(detail::DiagnosticBase *)&gt; apply)</argsstring>
        <name>foreachDiagnostic</name>
        <param>
          <type>std::function&lt; void(<ref refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_base" kindref="compound">detail::DiagnosticBase</ref> *)&gt;</type>
          <declname>apply</declname>
        </param>
        <briefdescription>
<para>Apply a function to each base diagnostic in a consistent order across all nodes. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">apply</parametername>
</parameternamelist>
<parameterdescription>
<para>function to apply that takes <computeroutput><ref refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_base" kindref="compound">detail::DiagnosticBase</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="81" column="1" bodyfile="src/vt/runtime/component/diagnostic.cc" bodystart="53" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1a9c1f4174ac87bb6ae0ec186a08adbbbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::runtime::component::Diagnostic::getDiagnosticsFootprint</definition>
        <argsstring>()</argsstring>
        <name>getDiagnosticsFootprint</name>
        <briefdescription>
<para>Return <ref refid="structvt_1_1runtime_1_1component_1_1_diagnostic" kindref="compound">Diagnostic</ref>&apos;s memory footprint. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>the footprint </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="88" column="1" bodyfile="src/vt/runtime/component/diagnostic.cc" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1a4e64b5a12ffc1874065aa8b09e6309a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void vt::runtime::component::Diagnostic::preDiagnostic</definition>
        <argsstring>()</argsstring>
        <name>preDiagnostic</name>
        <reimplementedby refid="structvt_1_1sched_1_1_scheduler_1a42835a58f541dd65cecd4d393fe78a81">preDiagnostic</reimplementedby>
        <briefdescription>
<para>Pre-diagnostic hook; this fires before finalize but after all work is done and the system is about to shut down. </para>        </briefdescription>
        <detaileddescription>
<para>is typically used to compute some final timings that the system might use to output time-based diagnostic metrics</para><para><simplesect kind="note"><para>Components can rely on this being called exactly once in the lifecycle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="100" column="1" bodyfile="src/vt/runtime/component/diagnostic.h" bodystart="100" bodyend="100"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa2cd54632710e7cdf1b20dfb676c752c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1diagnostic_1a55fcc9d6ffa285d1b085c01df2507d2f" kindref="member">diagnostic::Counter</ref></type>
        <definition>diagnostic::Counter vt::runtime::component::Diagnostic::registerCounter</definition>
        <argsstring>(std::string const &amp;key, std::string const &amp;desc, DiagnosticUnit unit=DiagnosticUnit::Units)</argsstring>
        <name>registerCounter</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307a" kindref="member">DiagnosticUnit</ref></type>
          <declname>unit</declname>
          <defval><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307aae5771a362d88a71a657bfcd21ca54b3f" kindref="member">DiagnosticUnit::Units</ref></defval>
        </param>
        <briefdescription>
<para>Register a new diagnostic counter with default type. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>unique key for diagnostic, should match across nodes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">desc</parametername>
</parameternamelist>
<parameterdescription>
<para>description of the diagnostic value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">unit</parametername>
</parameternamelist>
<parameterdescription>
<para>the unit type for this diagnostic</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the counter </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="112" column="1" bodyfile="src/vt/runtime/component/diagnostic.cc" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1a20417bbb4fe4c4d7648aef3a2699b787" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1diagnostic_1ad68069af499e2047c28d1852d77680ee" kindref="member">diagnostic::Gauge</ref></type>
        <definition>diagnostic::Gauge vt::runtime::component::Diagnostic::registerGauge</definition>
        <argsstring>(std::string const &amp;key, std::string const &amp;desc, DiagnosticUnit unit=DiagnosticUnit::Units)</argsstring>
        <name>registerGauge</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307a" kindref="member">DiagnosticUnit</ref></type>
          <declname>unit</declname>
          <defval><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307aae5771a362d88a71a657bfcd21ca54b3f" kindref="member">DiagnosticUnit::Units</ref></defval>
        </param>
        <briefdescription>
<para>Register a new diagnostic gauge with default type. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>unique key for diagnostic, should match across nodes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">desc</parametername>
</parameternamelist>
<parameterdescription>
<para>description of the diagnostic value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">unit</parametername>
</parameternamelist>
<parameterdescription>
<para>the unit type for this diagnostic</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the gauge </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="126" column="1" bodyfile="src/vt/runtime/component/diagnostic.cc" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1a5c6035a56d54cc3de270efedad3f026e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1diagnostic_1a84795feb3d3500ee2d7d59248499efb8" kindref="member">diagnostic::Timer</ref></type>
        <definition>diagnostic::Timer vt::runtime::component::Diagnostic::registerTimer</definition>
        <argsstring>(std::string const &amp;key, std::string const &amp;desc, DiagnosticUnit unit=DiagnosticUnit::Seconds)</argsstring>
        <name>registerTimer</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307a" kindref="member">DiagnosticUnit</ref></type>
          <declname>unit</declname>
          <defval><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307aa8f19a8c7566af54ea8981029730e5465" kindref="member">DiagnosticUnit::Seconds</ref></defval>
        </param>
        <briefdescription>
<para>Register a new diagnostic timer with default type. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>unique key for diagnostic, should match across nodes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">desc</parametername>
</parameternamelist>
<parameterdescription>
<para>description of the diagnostic value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">unit</parametername>
</parameternamelist>
<parameterdescription>
<para>the unit type for this diagnostic</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the timer </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="140" column="1" bodyfile="src/vt/runtime/component/diagnostic.cc" bodystart="85" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1abb1ee7f09f05c143dbdfd3346f6cdcba" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1runtime_1_1component_1_1meter_1_1_counter" kindref="compound">meter::Counter</ref>&lt; T &gt;</type>
        <definition>meter::Counter&lt; T &gt; vt::runtime::component::Diagnostic::registerCounterT</definition>
        <argsstring>(std::string const &amp;key, std::string const &amp;desc, DiagnosticUnit unit=DiagnosticUnit::Units)</argsstring>
        <name>registerCounterT</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307a" kindref="member">DiagnosticUnit</ref></type>
          <declname>unit</declname>
          <defval><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307aae5771a362d88a71a657bfcd21ca54b3f" kindref="member">DiagnosticUnit::Units</ref></defval>
        </param>
        <briefdescription>
<para>Register a new diagnostic counter. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>unique key for diagnostic, should match across nodes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">desc</parametername>
</parameternamelist>
<parameterdescription>
<para>description of the diagnostic value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">unit</parametername>
</parameternamelist>
<parameterdescription>
<para>the unit type for this diagnostic</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the counter </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="155" column="1" bodyfile="src/vt/runtime/component/diagnostic.impl.h" bodystart="58" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa220905292aeb726254d3dff2e672b00" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1runtime_1_1component_1_1meter_1_1_gauge" kindref="compound">meter::Gauge</ref>&lt; T &gt;</type>
        <definition>meter::Gauge&lt; T &gt; vt::runtime::component::Diagnostic::registerGaugeT</definition>
        <argsstring>(std::string const &amp;key, std::string const &amp;desc, DiagnosticUnit unit=DiagnosticUnit::Units)</argsstring>
        <name>registerGaugeT</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307a" kindref="member">DiagnosticUnit</ref></type>
          <declname>unit</declname>
          <defval><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307aae5771a362d88a71a657bfcd21ca54b3f" kindref="member">DiagnosticUnit::Units</ref></defval>
        </param>
        <briefdescription>
<para>Register a new diagnostic gauge. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>unique key for diagnostic, should match across nodes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">desc</parametername>
</parameternamelist>
<parameterdescription>
<para>description of the diagnostic value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">unit</parametername>
</parameternamelist>
<parameterdescription>
<para>the unit type for this diagnostic</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the gauge </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="170" column="1" bodyfile="src/vt/runtime/component/diagnostic.impl.h" bodystart="69" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1a328ecca78c6aa309bb764f3dde083c3e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1runtime_1_1component_1_1meter_1_1_timer" kindref="compound">meter::Timer</ref>&lt; T &gt;</type>
        <definition>meter::Timer&lt; T &gt; vt::runtime::component::Diagnostic::registerTimerT</definition>
        <argsstring>(std::string const &amp;key, std::string const &amp;desc, DiagnosticUnit unit=DiagnosticUnit::Seconds)</argsstring>
        <name>registerTimerT</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307a" kindref="member">DiagnosticUnit</ref></type>
          <declname>unit</declname>
          <defval><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307aa8f19a8c7566af54ea8981029730e5465" kindref="member">DiagnosticUnit::Seconds</ref></defval>
        </param>
        <briefdescription>
<para>Register a new diagnostic timer. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>unique key for diagnostic, should match across nodes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">desc</parametername>
</parameternamelist>
<parameterdescription>
<para>description of the diagnostic value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">unit</parametername>
</parameternamelist>
<parameterdescription>
<para>the unit type for this diagnostic</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the timer </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="185" column="1" bodyfile="src/vt/runtime/component/diagnostic.impl.h" bodystart="92" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1ab71509224f5716107ef5c781ba5ff487" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value" kindref="compound">detail::DiagnosticValue</ref>&lt; T &gt; *</type>
        <definition>detail::DiagnosticValue&lt; T &gt; * vt::runtime::component::Diagnostic::registerDiagnostic</definition>
        <argsstring>(std::string const &amp;key, std::string const &amp;desc, DiagnosticUpdate update, DiagnosticUnit unit=DiagnosticUnit::Units, DiagnosticTypeEnum type=DiagnosticTypeEnum::PerformanceDiagnostic, T initial_value={})</argsstring>
        <name>registerDiagnostic</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1runtime_1_1component_1a896637e6e183a909a17bfd8d3943c206" kindref="member">DiagnosticUpdate</ref></type>
          <declname>update</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307a" kindref="member">DiagnosticUnit</ref></type>
          <declname>unit</declname>
          <defval><ref refid="namespacevt_1_1runtime_1_1component_1a99ec18b08862c712176126bb7d0e307aae5771a362d88a71a657bfcd21ca54b3f" kindref="member">DiagnosticUnit::Units</ref></defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1runtime_1_1component_1af0bb99d9a054682217874bdc735ecac0" kindref="member">DiagnosticTypeEnum</ref></type>
          <declname>type</declname>
          <defval><ref refid="namespacevt_1_1runtime_1_1component_1af0bb99d9a054682217874bdc735ecac0ab95e46074ff803c7a6f7107c2c1d382c" kindref="member">DiagnosticTypeEnum::PerformanceDiagnostic</ref></defval>
        </param>
        <param>
          <type>T</type>
          <declname>initial_value</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Register a new diagnostic. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>unique key for diagnostic, should match across nodes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">desc</parametername>
</parameternamelist>
<parameterdescription>
<para>description of the diagnostic value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">update</parametername>
</parameternamelist>
<parameterdescription>
<para>the update operator that is applied for <computeroutput>updateDiagnostic</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">unit</parametername>
</parameternamelist>
<parameterdescription>
<para>the unit type for this diagnostic </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of diagnostic being registered </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initial_value</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial value for the diagnostic</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the underlying diagnostic value </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="204" column="1" bodyfile="src/vt/runtime/component/diagnostic.impl.h" bodystart="115" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runtime_1_1component_1_1_diagnostic_1a97b0e8ff394c8aa04035ff15165eb087" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::runtime::component::Diagnostic::updateDiagnostic</definition>
        <argsstring>(std::string const &amp;key, T value)</argsstring>
        <name>updateDiagnostic</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Update the current diagnostic value for a particular key. </para>        </briefdescription>
        <detaileddescription>
<para>the update will be applied depends on the <computeroutput>DiagnosticUpdate</computeroutput> that was registered when the diagnostic was created:</para><para><computeroutput><ref refid="namespacevt_1_1runtime_1_1component_1a896637e6e183a909a17bfd8d3943c206aa0ec87054b5e5b7847d0d8780a01a3d5" kindref="member">DiagnosticUpdate::Sum</ref></computeroutput> : Accumulate up the values <computeroutput><ref refid="namespacevt_1_1runtime_1_1component_1a896637e6e183a909a17bfd8d3943c206a5c0c148daa2c67922abe6018b87a759f" kindref="member">DiagnosticUpdate::Avg</ref></computeroutput> : Average the values <computeroutput><ref refid="namespacevt_1_1runtime_1_1component_1a896637e6e183a909a17bfd8d3943c206a0ebe6df8a3ac338e0512acc741823fdb" kindref="member">DiagnosticUpdate::Replace</ref></computeroutput> : Replace the existing value with each update</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>unique key for diagnostic, should match across nodes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to apply the updater to</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to diagnostic value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runtime/component/diagnostic.h" line="227" column="1" bodyfile="src/vt/runtime/component/diagnostic.impl.h" bodystart="145" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The abstract <computeroutput><ref refid="structvt_1_1runtime_1_1component_1_1_diagnostic" kindref="compound">Diagnostic</ref></computeroutput> trait for outputting debugging state information generically across VT components. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1427">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="1424" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1476">
        <label>vt::vrt::collection::balance::StatsRestartReader</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_restart_reader"/>
        <childnode refid="1475" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1487">
        <label>vt::runtime::component::PollableComponent&lt; WorkerGroupAny&lt; WorkerT &gt; &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_pollable_component"/>
        <childnode refid="1486" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1456">
        <label>vt::objgroup::ObjGroupManager</label>
        <link refid="structvt_1_1objgroup_1_1_obj_group_manager"/>
        <childnode refid="1455" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1457">
        <label>vt::runtime::component::Component&lt; Param &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1443">
        <label>vt::group::GroupManager</label>
        <link refid="structvt_1_1group_1_1_group_manager"/>
        <childnode refid="1442" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1448">
        <label>vt::location::LocationManager</label>
        <link refid="structvt_1_1location_1_1_location_manager"/>
        <childnode refid="1447" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1462">
        <label>vt::pipe::PipeManager</label>
        <link refid="structvt_1_1pipe_1_1_pipe_manager"/>
        <childnode refid="1461" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1455">
        <label>vt::runtime::component::Component&lt; ObjGroupManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1429">
        <label>vt::runtime::component::PollableComponent&lt; ActiveMessenger &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_pollable_component"/>
        <childnode refid="1428" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1483">
        <label>vt::trace::Trace</label>
        <link refid="structvt_1_1trace_1_1_trace"/>
        <childnode refid="1482" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1490">
        <label>vt::runtime::component::PollableComponent&lt; T &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_pollable_component"/>
        <childnode refid="1489" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1446">
        <label>vt::vrt::collection::balance::LBManager</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_manager"/>
        <childnode refid="1445" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1441">
        <label>vt::ctx::Context</label>
        <link refid="structvt_1_1ctx_1_1_context"/>
        <childnode refid="1440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1433">
        <label>vt::runtime::component::Component&lt; AsyncEvent &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1426">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="1461">
        <label>vt::runtime::component::Component&lt; PipeManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1473">
        <label>vt::runtime::component::Component&lt; SequencerVirtual &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1434">
        <label>vt::runtime::component::PollableComponent&lt; AsyncEvent &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_pollable_component"/>
        <childnode refid="1433" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1439">
        <label>vt::collective::CollectiveAlg</label>
        <link refid="structvt_1_1collective_1_1_collective_alg"/>
        <childnode refid="1438" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1467">
        <label>vt::runtime::component::Component&lt; Registry &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1451">
        <label>vt::runtime::component::Component&lt; MemoryUsage &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1466">
        <label>vt::rdma::RDMAManager</label>
        <link refid="structvt_1_1rdma_1_1_r_d_m_a_manager"/>
        <childnode refid="1465" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1480">
        <label>vt::runtime::component::PollableComponent&lt; TimeTriggerManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_pollable_component"/>
        <childnode refid="1479" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1470">
        <label>vt::sched::Scheduler</label>
        <link refid="structvt_1_1sched_1_1_scheduler"/>
        <childnode refid="1469" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1478">
        <label>vt::term::TerminationDetector</label>
        <link refid="structvt_1_1term_1_1_termination_detector"/>
        <childnode refid="1477" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1436">
        <label>vt::runtime::component::Component&lt; CollectionManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1454">
        <label>vt::vrt::collection::balance::NodeStats</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats"/>
        <childnode refid="1453" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1430">
        <label>vt::messaging::ActiveMessenger</label>
        <link refid="structvt_1_1messaging_1_1_active_messenger"/>
        <childnode refid="1429" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1452">
        <label>vt::util::memory::MemoryUsage</label>
        <link refid="structvt_1_1util_1_1memory_1_1_memory_usage"/>
        <childnode refid="1451" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1489">
        <label>vt::runtime::component::Component&lt; T &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1424">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="1425" relation="public-inheritance">
        </childnode>
        <childnode refid="1426" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1469">
        <label>vt::runtime::component::Component&lt; Scheduler &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1474">
        <label>vt::seq::SequencerVirtual</label>
        <link refid="structvt_1_1seq_1_1_sequencer_virtual"/>
        <childnode refid="1473" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1486">
        <label>vt::runtime::component::Component&lt; WorkerGroupAny&lt; WorkerT &gt; &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1479">
        <label>vt::runtime::component::Component&lt; TimeTriggerManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1444">
        <label>vt::group::GroupManagerT&lt; T &gt;</label>
        <link refid="structvt_1_1group_1_1_group_manager_t"/>
        <childnode refid="1443" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1458">
        <label>vt::param::Param</label>
        <link refid="structvt_1_1param_1_1_param"/>
        <childnode refid="1457" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1464">
        <label>vt::pool::Pool</label>
        <link refid="structvt_1_1pool_1_1_pool"/>
        <childnode refid="1463" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1481">
        <label>vt::timetrigger::TimeTriggerManager</label>
        <link refid="structvt_1_1timetrigger_1_1_time_trigger_manager"/>
        <childnode refid="1480" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1425">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="1465">
        <label>vt::runtime::component::Component&lt; RDMAManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1463">
        <label>vt::runtime::component::Component&lt; Pool &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1477">
        <label>vt::runtime::component::Component&lt; TerminationDetector &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1471">
        <label>vt::runtime::component::Component&lt; Sequencer &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1468">
        <label>vt::registry::Registry</label>
        <link refid="structvt_1_1registry_1_1_registry"/>
        <childnode refid="1467" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1453">
        <label>vt::runtime::component::Component&lt; NodeStats &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1460">
        <label>vt::phase::PhaseManager</label>
        <link refid="structvt_1_1phase_1_1_phase_manager"/>
        <childnode refid="1459" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1450">
        <label>vt::rdma::Manager</label>
        <link refid="structvt_1_1rdma_1_1_manager"/>
        <childnode refid="1449" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1431">
        <label>vt::runtime::component::Component&lt; ArgConfig &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1484">
        <label>vt::runtime::component::Component&lt; VirtualContextManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1432">
        <label>vt::arguments::ArgConfig</label>
        <link refid="structvt_1_1arguments_1_1_arg_config"/>
        <childnode refid="1431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1472">
        <label>vt::seq::Sequencer</label>
        <link refid="structvt_1_1seq_1_1_sequencer"/>
        <childnode refid="1471" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1440">
        <label>vt::runtime::component::Component&lt; Context &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1435">
        <label>vt::event::AsyncEvent</label>
        <link refid="structvt_1_1event_1_1_async_event"/>
        <childnode refid="1434" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1447">
        <label>vt::runtime::component::Component&lt; LocationManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1442">
        <label>vt::runtime::component::Component&lt; GroupManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1437">
        <label>vt::vrt::collection::CollectionManager</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_manager"/>
        <childnode refid="1436" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1475">
        <label>vt::runtime::component::Component&lt; StatsRestartReader &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1488">
        <label>vt::worker::WorkerGroupAny&lt; WorkerT &gt;</label>
        <link refid="structvt_1_1worker_1_1_worker_group_any"/>
        <childnode refid="1487" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1459">
        <label>vt::runtime::component::Component&lt; PhaseManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1449">
        <label>vt::runtime::component::Component&lt; Manager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1438">
        <label>vt::runtime::component::Component&lt; CollectiveAlg &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1485">
        <label>vt::vrt::VirtualContextManager</label>
        <link refid="structvt_1_1vrt_1_1_virtual_context_manager"/>
        <childnode refid="1484" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1428">
        <label>vt::runtime::component::Component&lt; ActiveMessenger &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1482">
        <label>vt::runtime::component::Component&lt; Trace &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1445">
        <label>vt::runtime::component::Component&lt; LBManager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1493">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="1491">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="1492" relation="public-inheritance">
        </childnode>
        <childnode refid="1493" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1492">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/runtime/component/diagnostic.h" line="68" column="1" bodyfile="src/vt/runtime/component/diagnostic.h" bodystart="68" bodyend="232"/>
    <listofallmembers>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1ac9c39c6eafc72a1a240ed67ea12b3e66" prot="protected" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>component_id_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ad95ea698535524d0f82c5da9beaaaf37" prot="public" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>DiagnosticBasePtrType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a1b6da987a14917c7ee8a4d00138e62e6" prot="public" virt="pure-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>dumpState</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a1d6951af40ad0b4020860c0b21b1a85c" prot="public" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>foreachDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1a45ab90398777ffdbb2ad5b62fe183d99" prot="public" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>getComponentID</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a9c1f4174ac87bb6ae0ec186a08adbbbb" prot="public" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>getDiagnosticsFootprint</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_name_1a33c06229bb605a2b2ceff68830d6d773" prot="public" virt="pure-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>name</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a4e64b5a12ffc1874065aa8b09e6309a9" prot="public" virt="virtual"><scope>vt::runtime::component::Diagnostic</scope><name>preDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1af9d694f9d62d973a2cde6e52c55bef14" prot="public" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>reducer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa2cd54632710e7cdf1b20dfb676c752c" prot="protected" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>registerCounter</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1abb1ee7f09f05c143dbdfd3346f6cdcba" prot="protected" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>registerCounterT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ab71509224f5716107ef5c781ba5ff487" prot="protected" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>registerDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a20417bbb4fe4c4d7648aef3a2699b787" prot="protected" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>registerGauge</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa220905292aeb726254d3dff2e672b00" prot="protected" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>registerGaugeT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a5c6035a56d54cc3de270efedad3f026e" prot="protected" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>registerTimer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a328ecca78c6aa309bb764f3dde083c3e" prot="protected" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>registerTimerT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a2bcd1016fcdb6395844d4fd15d84a570" prot="public" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>UnitType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a97b0e8ff394c8aa04035ff15165eb087" prot="protected" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>updateDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a75e737294bb63e1898d9ac4515f0cf63" prot="public" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>UpdateType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ab4cb6c67b01b76f91cc806a79169da69" prot="private" virt="non-virtual"><scope>vt::runtime::component::Diagnostic</scope><name>values_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
