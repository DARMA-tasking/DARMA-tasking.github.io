<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>vt::objgroup::holder::HolderObjBase</compoundname>
    <basecompoundref refid="structvt_1_1objgroup_1_1holder_1_1_holder_base" prot="public" virt="non-virtual">vt::objgroup::holder::HolderBase</basecompoundref>
    <derivedcompoundref refid="structvt_1_1objgroup_1_1holder_1_1_holder" prot="public" virt="non-virtual">vt::objgroup::holder::Holder&lt; ObjT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1objgroup_1_1holder_1_1_holder_basic" prot="public" virt="non-virtual">vt::objgroup::holder::HolderBasic&lt; ObjT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1objgroup_1_1holder_1_1_holder_user" prot="public" virt="non-virtual">vt::objgroup::holder::HolderUser&lt; UserPtr, ObjT &gt;</derivedcompoundref>
    <includes refid="holder__base_8h" local="no">holder_base.h</includes>
    <templateparamlist>
      <param>
        <type>typename ObjT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base_1a368d2b1e12c87f11475ecf13dcb66129" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vt::objgroup::holder::HolderObjBase&lt; ObjT &gt;::~HolderObjBase</definition>
        <argsstring>()=default</argsstring>
        <name>~HolderObjBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/holder/holder_base.h" line="79" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base_1a4b350b0126259d31a62fd426a08f6698" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>ObjT *</type>
        <definition>virtual ObjT* vt::objgroup::holder::HolderObjBase&lt; ObjT &gt;::get</definition>
        <argsstring>()=0</argsstring>
        <name>get</name>
        <reimplementedby refid="structvt_1_1objgroup_1_1holder_1_1_holder_1afa4ab0b8ce4108ad94f602772697c25d">get</reimplementedby>
        <reimplementedby refid="structvt_1_1objgroup_1_1holder_1_1_holder_basic_1af1d605b64e5f9d77d4b291c402133f3f">get</reimplementedby>
        <reimplementedby refid="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a102b494316b9f906a02f1c47b797e339">get</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/holder/holder_base.h" line="80" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base_1abd46e1aa84c0fea2554bf19029581e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::byte *</type>
        <definition>virtual std::byte* vt::objgroup::holder::HolderObjBase&lt; ObjT &gt;::getPtr</definition>
        <argsstring>() override=0</argsstring>
        <name>getPtr</name>
        <reimplements refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a9a15090cce1921fe9116a93b11b47be2">getPtr</reimplements>
        <reimplementedby refid="structvt_1_1objgroup_1_1holder_1_1_holder_1a421058daef664fb76d90439aef1aaea5">getPtr</reimplementedby>
        <reimplementedby refid="structvt_1_1objgroup_1_1holder_1_1_holder_basic_1a857b56b22964a3524169f6fa30307d65">getPtr</reimplementedby>
        <reimplementedby refid="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a85c5a7613142e86a830a0b5103f83ce4">getPtr</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/holder/holder_base.h" line="81" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>vt::objgroup::holder::HolderObjBase&lt; ObjT &gt;</label>
        <link refid="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>vt::objgroup::holder::Holder&lt; ObjT &gt;</label>
        <link refid="structvt_1_1objgroup_1_1holder_1_1_holder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>vt::objgroup::holder::HolderBasic&lt; ObjT &gt;</label>
        <link refid="structvt_1_1objgroup_1_1holder_1_1_holder_basic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>vt::objgroup::holder::HolderUser&lt; UserPtr, ObjT &gt;</label>
        <link refid="structvt_1_1objgroup_1_1holder_1_1_holder_user"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vt::objgroup::holder::HolderBase</label>
        <link refid="structvt_1_1objgroup_1_1holder_1_1_holder_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>vt::elm::ElementIDStruct</label>
        <link refid="structvt_1_1elm_1_1_element_i_d_struct"/>
      </node>
      <node id="1">
        <label>vt::objgroup::holder::HolderObjBase&lt; ObjT &gt;</label>
        <link refid="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>vt::elm::ElementLBData</label>
        <link refid="structvt_1_1elm_1_1_element_l_b_data"/>
        <childnode refid="4" relation="usage">
          <edgelabel>cur_time_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>vt::objgroup::holder::HolderBase</label>
        <link refid="structvt_1_1objgroup_1_1holder_1_1_holder_base"/>
        <childnode refid="3" relation="usage">
          <edgelabel>lb_data_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>elm_id_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>vt::TimeTypeWrapper</label>
        <link refid="structvt_1_1_time_type_wrapper"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/objgroup/holder/holder_base.h" line="78" column="1" bodyfile="src/vt/objgroup/holder/holder_base.h" bodystart="78" bodyend="82"/>
    <listofallmembers>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a53deb78d918d7281cf01a0f09e410411" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderObjBase</scope><name>ElementLBDataType</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a0302cbe111e4bfa8cc8cd1fc47b39b27" prot="protected" virt="non-virtual"><scope>vt::objgroup::holder::HolderObjBase</scope><name>elm_id_</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a89c0ce1f23237ab00aee86d4d339bc50" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderObjBase</scope><name>ElmIDType</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1afeebbe358baf0b2bfea57f52807be564" prot="public" virt="pure-virtual"><scope>vt::objgroup::holder::HolderObjBase</scope><name>exists</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base_1a4b350b0126259d31a62fd426a08f6698" prot="public" virt="pure-virtual"><scope>vt::objgroup::holder::HolderObjBase</scope><name>get</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a36206831fe26ea16bd7bd3079bc45a8d" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderObjBase</scope><name>getElmID</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1aa4ebca4b40c0c1904650ea6a64342732" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderObjBase</scope><name>getLBData</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base_1abd46e1aa84c0fea2554bf19029581e01" prot="public" virt="pure-virtual"><scope>vt::objgroup::holder::HolderObjBase</scope><name>getPtr</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a387f07d8e738b627a97ace582aa51430" prot="protected" virt="non-virtual"><scope>vt::objgroup::holder::HolderObjBase</scope><name>lb_data_</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a0d01f16a16316fab236b8753e7530efb" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderObjBase</scope><name>serialize</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1ac7bcdff4841dc78d23e7d96f7a383415" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderObjBase</scope><name>setElmID</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a9388d2780a5ffa01677c3c535d42fbfa" prot="public" virt="virtual"><scope>vt::objgroup::holder::HolderObjBase</scope><name>~HolderBase</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base_1a368d2b1e12c87f11475ecf13dcb66129" prot="public" virt="virtual"><scope>vt::objgroup::holder::HolderObjBase</scope><name>~HolderObjBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
