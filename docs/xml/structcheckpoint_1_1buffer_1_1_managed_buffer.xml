<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structcheckpoint_1_1buffer_1_1_managed_buffer" kind="struct" language="C++" prot="public">
    <compoundname>checkpoint::buffer::ManagedBuffer</compoundname>
    <basecompoundref refid="structcheckpoint_1_1buffer_1_1_buffer" prot="public" virt="non-virtual">checkpoint::buffer::Buffer</basecompoundref>
    <includes refid="managed__buffer_8h" local="no">managed_buffer.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structcheckpoint_1_1buffer_1_1_managed_buffer_1a89ff3aa4c92cd2c65973751ff4328dd5" prot="public" static="no">
        <type><ref refid="namespacecheckpoint_1ae57f01cdc0b81776c23b6c7c934c58f5" kindref="member">SerialByteType</ref>[]</type>
        <definition>using checkpoint::buffer::ManagedBuffer::ByteType =  SerialByteType[]</definition>
        <argsstring></argsstring>
        <name>ByteType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" line="55" column="1" bodyfile="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structcheckpoint_1_1buffer_1_1_managed_buffer_1a91bd6942b3e8f48c9edbcc6e1b148982" prot="private" static="no" mutable="no">
        <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
        <definition>SerialSizeType checkpoint::buffer::ManagedBuffer::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" line="70" column="1" bodyfile="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcheckpoint_1_1buffer_1_1_managed_buffer_1a7918a4749b6ab59e0f53ec761ee0b2e2" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structcheckpoint_1_1buffer_1_1_managed_buffer_1a89ff3aa4c92cd2c65973751ff4328dd5" kindref="member">ByteType</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ByteType&gt; checkpoint::buffer::ManagedBuffer::buffer_</definition>
        <argsstring></argsstring>
        <name>buffer_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" line="72" column="1" bodyfile="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structcheckpoint_1_1buffer_1_1_managed_buffer_1aa73edc51a8e538d5ca67fc9d1df42ba5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>checkpoint::buffer::ManagedBuffer::ManagedBuffer</definition>
        <argsstring>(SerialSizeType const &amp;size)</argsstring>
        <name>ManagedBuffer</name>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref> const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" line="57" column="1" bodyfile="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1buffer_1_1_managed_buffer_1a9a44d0c4e088ac080f13c84072a86e91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacecheckpoint_1ae57f01cdc0b81776c23b6c7c934c58f5" kindref="member">SerialByteType</ref> *</type>
        <definition>virtual SerialByteType* checkpoint::buffer::ManagedBuffer::getBuffer</definition>
        <argsstring>() const override</argsstring>
        <name>getBuffer</name>
        <reimplements refid="structcheckpoint_1_1buffer_1_1_buffer_1ad6a6457df5d7020cd3622d353eb8394b">getBuffer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" line="61" column="1" bodyfile="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1buffer_1_1_managed_buffer_1a26f85bcd885624b7c0ad6fd8572ad466" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
        <definition>virtual SerialSizeType checkpoint::buffer::ManagedBuffer::getSize</definition>
        <argsstring>() const override</argsstring>
        <name>getSize</name>
        <reimplements refid="structcheckpoint_1_1buffer_1_1_buffer_1a4d78cd3d4ab338bab7911fac4fe9434d">getSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" line="65" column="1" bodyfile="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" bodystart="65" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2597">
        <label>checkpoint::buffer::Buffer</label>
        <link refid="structcheckpoint_1_1buffer_1_1_buffer"/>
        <childnode refid="2598" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2596">
        <label>checkpoint::buffer::ManagedBuffer</label>
        <link refid="structcheckpoint_1_1buffer_1_1_managed_buffer"/>
        <childnode refid="2597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2598">
        <label>SerializedInfo</label>
        <link refid="structcheckpoint_1_1_serialized_info"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2600">
        <label>checkpoint::buffer::Buffer</label>
        <link refid="structcheckpoint_1_1buffer_1_1_buffer"/>
        <childnode refid="2601" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2599">
        <label>checkpoint::buffer::ManagedBuffer</label>
        <link refid="structcheckpoint_1_1buffer_1_1_managed_buffer"/>
        <childnode refid="2600" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2601">
        <label>SerializedInfo</label>
        <link refid="structcheckpoint_1_1_serialized_info"/>
      </node>
    </collaborationgraph>
    <location file="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" line="54" column="1" bodyfile="lib/checkpoint/src/checkpoint/buffer/managed_buffer.h" bodystart="54" bodyend="73"/>
    <listofallmembers>
      <member refid="structcheckpoint_1_1buffer_1_1_managed_buffer_1a7918a4749b6ab59e0f53ec761ee0b2e2" prot="private" virt="non-virtual"><scope>checkpoint::buffer::ManagedBuffer</scope><name>buffer_</name></member>
      <member refid="structcheckpoint_1_1buffer_1_1_managed_buffer_1a89ff3aa4c92cd2c65973751ff4328dd5" prot="public" virt="non-virtual"><scope>checkpoint::buffer::ManagedBuffer</scope><name>ByteType</name></member>
      <member refid="structcheckpoint_1_1buffer_1_1_managed_buffer_1a9a44d0c4e088ac080f13c84072a86e91" prot="public" virt="virtual"><scope>checkpoint::buffer::ManagedBuffer</scope><name>getBuffer</name></member>
      <member refid="structcheckpoint_1_1buffer_1_1_managed_buffer_1a26f85bcd885624b7c0ad6fd8572ad466" prot="public" virt="virtual"><scope>checkpoint::buffer::ManagedBuffer</scope><name>getSize</name></member>
      <member refid="structcheckpoint_1_1buffer_1_1_managed_buffer_1aa73edc51a8e538d5ca67fc9d1df42ba5" prot="public" virt="non-virtual"><scope>checkpoint::buffer::ManagedBuffer</scope><name>ManagedBuffer</name></member>
      <member refid="structcheckpoint_1_1buffer_1_1_managed_buffer_1a91bd6942b3e8f48c9edbcc6e1b148982" prot="private" virt="non-virtual"><scope>checkpoint::buffer::ManagedBuffer</scope><name>size_</name></member>
      <member refid="structcheckpoint_1_1buffer_1_1_buffer_1a55f9f6a754d4b3053460b8543b6ca1ab" prot="public" virt="virtual"><scope>checkpoint::buffer::ManagedBuffer</scope><name>~Buffer</name></member>
      <member refid="structcheckpoint_1_1_serialized_info_1aca442bb41f5c514fb79b776f5baaa0c1" prot="public" virt="virtual"><scope>checkpoint::buffer::ManagedBuffer</scope><name>~SerializedInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
