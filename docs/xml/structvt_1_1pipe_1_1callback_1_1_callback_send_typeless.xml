<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless" kind="struct" language="C++" prot="public">
    <compoundname>vt::pipe::callback::CallbackSendTypeless</compoundname>
    <basecompoundref refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l" prot="public" virt="non-virtual">vt::pipe::callback::CallbackBaseTL&lt; CallbackSendTypeless &gt;</basecompoundref>
    <derivedcompoundref refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_send_msg_c_b" prot="public" virt="non-virtual">vt::pipe::callback::cbunion::SendMsgCB</derivedcompoundref>
    <includes refid="callback__send__tl_8h" local="no">callback_send_tl.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a428997de5158e004e3f4c02effb5584a" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::pipe::callback::CallbackSendTypeless::send_node_</definition>
        <argsstring></argsstring>
        <name>send_node_</name>
        <initializer>= uninitialized_destination</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="80" column="12" bodyfile="src/vt/pipe/callback/handler_send/callback_send_tl.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a255b0aa7be25b68982a699e3e60ba40e" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::pipe::callback::CallbackSendTypeless::handler_</definition>
        <argsstring></argsstring>
        <name>handler_</name>
        <initializer>= uninitialized_handler</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="81" column="15" bodyfile="src/vt/pipe/callback/handler_send/callback_send_tl.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a23a6190d53f6eeb5e76ddce13fe64180" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackSendTypeless::CallbackSendTypeless</definition>
        <argsstring>()=default</argsstring>
        <name>CallbackSendTypeless</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="55" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a01b989d1549051d16211f71f3f355aab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackSendTypeless::CallbackSendTypeless</definition>
        <argsstring>(CallbackSendTypeless const &amp;)=default</argsstring>
        <name>CallbackSendTypeless</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless" kindref="compound">CallbackSendTypeless</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="56" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a3d85016dda42df66f15fad0e62ff3dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackSendTypeless::CallbackSendTypeless</definition>
        <argsstring>(CallbackSendTypeless &amp;&amp;)=default</argsstring>
        <name>CallbackSendTypeless</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless" kindref="compound">CallbackSendTypeless</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="57" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1ab4637d4587695d0a0883aa2f547e2b0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless" kindref="compound">CallbackSendTypeless</ref> &amp;</type>
        <definition>CallbackSendTypeless&amp; vt::pipe::callback::CallbackSendTypeless::operator=</definition>
        <argsstring>(CallbackSendTypeless const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless" kindref="compound">CallbackSendTypeless</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="58" column="24"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a9e6c08acd10d99259df449b2354ba49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::callback::CallbackSendTypeless::CallbackSendTypeless</definition>
        <argsstring>(HandlerType const in_handler, NodeType const &amp;in_send_node)</argsstring>
        <name>CallbackSendTypeless</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>in_handler</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>in_send_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="60" column="3" bodyfile="src/vt/pipe/callback/handler_send/callback_send_tl.cc" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a843c03610729c912e3019aae5c1a74a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackSendTypeless::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="65" column="8" bodyfile="src/vt/pipe/callback/handler_send/callback_send_tl.impl.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a6792e97c34e98f4b117cae791c582317" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::pipe::callback::CallbackSendTypeless::getHandler</definition>
        <argsstring>() const</argsstring>
        <name>getHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="67" column="15" bodyfile="src/vt/pipe/callback/handler_send/callback_send_tl.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a73489917b0876b98d0a8e2568148c9a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::pipe::callback::CallbackSendTypeless::getSendNode</definition>
        <argsstring>() const</argsstring>
        <name>getSendNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="68" column="12" bodyfile="src/vt/pipe/callback/handler_send/callback_send_tl.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a0dd54476c2ab4f7222660b57e11ee659" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::callback::CallbackSendTypeless::operator==</definition>
        <argsstring>(CallbackSendTypeless const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless" kindref="compound">CallbackSendTypeless</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="70" column="8" bodyfile="src/vt/pipe/callback/handler_send/callback_send_tl.h" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a7ac1bbf4f30ac7f3c2b80bbef4f55b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackSendTypeless::trigger</definition>
        <argsstring>(MsgT *msg, PipeType const &amp;pipe)</argsstring>
        <name>trigger</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="76" column="8" bodyfile="src/vt/pipe/callback/handler_send/callback_send_tl.impl.h" bodystart="65" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a014cf2e253661c7490c9ba81c92d0055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::callback::CallbackSendTypeless::triggerVoid</definition>
        <argsstring>(PipeType const &amp;pipe)</argsstring>
        <name>triggerVoid</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="77" column="8" bodyfile="src/vt/pipe/callback/handler_send/callback_send_tl.cc" bodystart="60" bodyend="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>vt::pipe::callback::CallbackSendTypeless</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vt::pipe::callback::CallbackBaseTL&lt; CallbackSendTypeless &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l"/>
      </node>
      <node id="3">
        <label>vt::pipe::callback::cbunion::SendMsgCB</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_send_msg_c_b"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>vt::pipe::callback::CallbackSendTypeless</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vt::pipe::callback::CallbackBaseTL&lt; CallbackSendTypeless &gt;</label>
        <link refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/pipe/callback/handler_send/callback_send_tl.h" line="54" column="43" bodyfile="src/vt/pipe/callback/handler_send/callback_send_tl.h" bodystart="54" bodyend="82"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l_1a9fd040600f47976c437cf0b9b0eda1f5" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>CallbackBaseTL</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a23a6190d53f6eeb5e76ddce13fe64180" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>CallbackSendTypeless</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a01b989d1549051d16211f71f3f355aab" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>CallbackSendTypeless</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a3d85016dda42df66f15fad0e62ff3dfc" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>CallbackSendTypeless</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a9e6c08acd10d99259df449b2354ba49c" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>CallbackSendTypeless</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a6792e97c34e98f4b117cae791c582317" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>getHandler</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a73489917b0876b98d0a8e2568148c9a8" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>getSendNode</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a255b0aa7be25b68982a699e3e60ba40e" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>handler_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1ab4637d4587695d0a0883aa2f547e2b0b" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>operator=</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a0dd54476c2ab4f7222660b57e11ee659" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>operator==</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a428997de5158e004e3f4c02effb5584a" prot="private" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>send_node_</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a843c03610729c912e3019aae5c1a74a2" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>serialize</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_base_t_l_1a881775a6243c432e7536735d481a5d9a" prot="public" virt="non-virtual" ambiguityscope="CallbackBaseTL&lt; CallbackSendTypeless &gt;::"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>serialize</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a7ac1bbf4f30ac7f3c2b80bbef4f55b9d" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>trigger</name></member>
      <member refid="structvt_1_1pipe_1_1callback_1_1_callback_send_typeless_1a014cf2e253661c7490c9ba81c92d0055" prot="public" virt="non-virtual"><scope>vt::pipe::callback::CallbackSendTypeless</scope><name>triggerVoid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
