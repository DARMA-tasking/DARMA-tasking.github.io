<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stats__data_8cc" kind="file" language="C++">
    <compoundname>stats_data.cc</compoundname>
    <includes refid="stats__data_8h" local="yes">vt/vrt/collection/balance/stats_data.h</includes>
    <includes refid="context_8h" local="yes">vt/context/context.h</includes>
    <includes local="no">nlohmann/json.hpp</includes>
    <incdepgraph>
      <node id="326458">
        <label>list</label>
      </node>
      <node id="326331">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
      </node>
      <node id="326450">
        <label>atomic</label>
      </node>
      <node id="326404">
        <label>checkpoint/common.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2common_8h"/>
        <childnode refid="326405" relation="include">
        </childnode>
        <childnode refid="326368" relation="include">
        </childnode>
        <childnode refid="326330" relation="include">
        </childnode>
        <childnode refid="326406" relation="include">
        </childnode>
        <childnode refid="326354" relation="include">
        </childnode>
        <childnode refid="326369" relation="include">
        </childnode>
      </node>
      <node id="326382">
        <label>vt/runtime/component/component_pack.h</label>
        <link refid="component__pack_8h"/>
        <childnode refid="326383" relation="include">
        </childnode>
        <childnode refid="326490" relation="include">
        </childnode>
        <childnode refid="326458" relation="include">
        </childnode>
        <childnode refid="326378" relation="include">
        </childnode>
        <childnode refid="326385" relation="include">
        </childnode>
        <childnode refid="326414" relation="include">
        </childnode>
        <childnode refid="326338" relation="include">
        </childnode>
        <childnode refid="326491" relation="include">
        </childnode>
      </node>
      <node id="326490">
        <label>vt/runtime/component/movable_fn.h</label>
        <link refid="movable__fn_8h"/>
      </node>
      <node id="326338">
        <label>functional</label>
      </node>
      <node id="326464">
        <label>queue</label>
      </node>
      <node id="326386">
        <label>vt/runtime/component/component_dep.h</label>
        <link refid="component__dep_8h"/>
        <childnode refid="326384" relation="include">
        </childnode>
      </node>
      <node id="326499">
        <label>vt/messaging/envelope/envelope_get.h</label>
        <link refid="envelope__get_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326495" relation="include">
        </childnode>
        <childnode refid="326496" relation="include">
        </childnode>
        <childnode refid="326500" relation="include">
        </childnode>
      </node>
      <node id="326343">
        <label>vt/epoch/epoch_impl_type.h</label>
        <link refid="epoch__impl__type_8h"/>
        <childnode refid="326330" relation="include">
        </childnode>
        <childnode refid="326344" relation="include">
        </childnode>
      </node>
      <node id="326348">
        <label>fmt/format.h</label>
      </node>
      <node id="326441">
        <label>checkpoint/dispatch/vrt/derived.h</label>
        <link refid="derived_8h"/>
        <childnode refid="326431" relation="include">
        </childnode>
        <childnode refid="326434" relation="include">
        </childnode>
        <childnode refid="326437" relation="include">
        </childnode>
        <childnode refid="326438" relation="include">
        </childnode>
        <childnode refid="326439" relation="include">
        </childnode>
      </node>
      <node id="326398">
        <label>limits</label>
      </node>
      <node id="326377">
        <label>vt/elm/elm_comm.h</label>
        <link refid="elm__comm_8h"/>
        <childnode refid="326376" relation="include">
        </childnode>
        <childnode refid="326378" relation="include">
        </childnode>
      </node>
      <node id="326468">
        <label>checkpoint/container/string_serialize.h</label>
        <link refid="string__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
      </node>
      <node id="326451">
        <label>checkpoint/container/chrono_serialize.h</label>
        <link refid="chrono__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326452" relation="include">
        </childnode>
      </node>
      <node id="326349">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="326350" relation="include">
        </childnode>
        <childnode refid="326337" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
      </node>
      <node id="326376">
        <label>vt/elm/elm_id.h</label>
        <link refid="elm__id_8h"/>
        <childnode refid="326337" relation="include">
        </childnode>
        <childnode refid="326344" relation="include">
        </childnode>
        <childnode refid="326348" relation="include">
        </childnode>
      </node>
      <node id="326350">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326352" relation="include">
        </childnode>
      </node>
      <node id="326379">
        <label>vt/timing/timing_type.h</label>
        <link refid="timing__type_8h"/>
      </node>
      <node id="326483">
        <label>vt/runtime/component/meter/timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326481" relation="include">
        </childnode>
        <childnode refid="326484" relation="include">
        </childnode>
      </node>
      <node id="326474">
        <label>checkpoint/container/view_serialize.h</label>
        <link refid="view__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326403" relation="include">
        </childnode>
        <childnode refid="326475" relation="include">
        </childnode>
        <childnode refid="326476" relation="include">
        </childnode>
        <childnode refid="326477" relation="include">
        </childnode>
      </node>
      <node id="326434">
        <label>checkpoint/dispatch/vrt/object_registry.h</label>
        <link refid="object__registry_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326431" relation="include">
        </childnode>
        <childnode refid="326435" relation="include">
        </childnode>
        <childnode refid="326338" relation="include">
        </childnode>
        <childnode refid="326352" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
      </node>
      <node id="326484">
        <label>vt/timing/timing.h</label>
        <link refid="timing_8h"/>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326485" relation="include">
        </childnode>
        <childnode refid="326355" relation="include">
        </childnode>
        <childnode refid="326379" relation="include">
        </childnode>
      </node>
      <node id="326403">
        <label>checkpoint/serializers/serializers_headers.h</label>
        <link refid="serializers__headers_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326407" relation="include">
        </childnode>
        <childnode refid="326408" relation="include">
        </childnode>
        <childnode refid="326409" relation="include">
        </childnode>
        <childnode refid="326410" relation="include">
        </childnode>
        <childnode refid="326420" relation="include">
        </childnode>
      </node>
      <node id="326409">
        <label>checkpoint/serializers/sizer.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2serializers_2sizer_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326407" relation="include">
        </childnode>
      </node>
      <node id="326453">
        <label>checkpoint/container/enum_serialize.h</label>
        <link refid="enum__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326403" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
      </node>
      <node id="326405">
        <label>checkpoint/cmake_config.h</label>
      </node>
      <node id="326397">
        <label>vt/utils/adt/histogram_approx.h</label>
        <link refid="histogram__approx_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326352" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326398" relation="include">
        </childnode>
        <childnode refid="326399" relation="include">
        </childnode>
        <childnode refid="326400" relation="include">
        </childnode>
        <childnode refid="326355" relation="include">
        </childnode>
      </node>
      <node id="326407">
        <label>checkpoint/serializers/base_serializer.h</label>
        <link refid="base__serializer_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
        <childnode refid="326368" relation="include">
        </childnode>
      </node>
      <node id="326436">
        <label>checkpoint/traits/reconstructor_traits.h</label>
        <link refid="reconstructor__traits_8h"/>
        <childnode refid="326425" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
      </node>
      <node id="326330">
        <label>cstdint</label>
      </node>
      <node id="326447">
        <label>checkpoint/container/array_serialize.h</label>
        <link refid="array__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326403" relation="include">
        </childnode>
        <childnode refid="326448" relation="include">
        </childnode>
      </node>
      <node id="326396">
        <label>vt/utils/adt/union.h</label>
        <link refid="union_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
      </node>
      <node id="326489">
        <label>vt/runtime/component/progressable.h</label>
        <link refid="progressable_8h"/>
      </node>
      <node id="326488">
        <label>vt/runtime/component/bufferable.h</label>
        <link refid="bufferable_8h"/>
      </node>
      <node id="326380">
        <label>vt/messaging/message/message.h</label>
        <link refid="message_2message_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326381" relation="include">
        </childnode>
        <childnode refid="326493" relation="include">
        </childnode>
        <childnode refid="326520" relation="include">
        </childnode>
        <childnode refid="326521" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
      </node>
      <node id="326371">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="326359" relation="include">
        </childnode>
        <childnode refid="326337" relation="include">
        </childnode>
        <childnode refid="326365" relation="include">
        </childnode>
        <childnode refid="326370" relation="include">
        </childnode>
        <childnode refid="326372" relation="include">
        </childnode>
        <childnode refid="326349" relation="include">
        </childnode>
        <childnode refid="326369" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326374" relation="include">
        </childnode>
        <childnode refid="326355" relation="include">
        </childnode>
      </node>
      <node id="326496">
        <label>vt/messaging/envelope/envelope_base.h</label>
        <link refid="envelope__base_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326495" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
      </node>
      <node id="326345">
        <label>vt/epoch/epoch_type.h</label>
        <link refid="epoch__type_8h"/>
        <childnode refid="326346" relation="include">
        </childnode>
        <childnode refid="326343" relation="include">
        </childnode>
        <childnode refid="326348" relation="include">
        </childnode>
      </node>
      <node id="326424">
        <label>checkpoint/dispatch/dispatch_serializer.h</label>
        <link refid="dispatch__serializer_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326425" relation="include">
        </childnode>
        <childnode refid="326428" relation="include">
        </childnode>
        <childnode refid="326429" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326368" relation="include">
        </childnode>
      </node>
      <node id="326511">
        <label>vt/messaging/envelope/envelope_ref.impl.h</label>
        <link refid="envelope__ref_8impl_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326510" relation="include">
        </childnode>
      </node>
      <node id="326466">
        <label>checkpoint/container/raw_ptr_serialize.h</label>
        <link refid="raw__ptr__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
      </node>
      <node id="326456">
        <label>checkpoint/dispatch/allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="326422" relation="include">
        </childnode>
        <childnode refid="326414" relation="include">
        </childnode>
      </node>
      <node id="326399">
        <label>cmath</label>
      </node>
      <node id="326369">
        <label>cassert</label>
      </node>
      <node id="326366">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="326359" relation="include">
        </childnode>
        <childnode refid="326337" relation="include">
        </childnode>
        <childnode refid="326365" relation="include">
        </childnode>
        <childnode refid="326367" relation="include">
        </childnode>
        <childnode refid="326349" relation="include">
        </childnode>
        <childnode refid="326360" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326369" relation="include">
        </childnode>
        <childnode refid="326355" relation="include">
        </childnode>
      </node>
      <node id="326325">
        <label>src/vt/vrt/collection/balance/stats_data.cc</label>
        <link refid="stats__data_8cc"/>
        <childnode refid="326326" relation="include">
        </childnode>
        <childnode refid="326502" relation="include">
        </childnode>
        <childnode refid="326523" relation="include">
        </childnode>
      </node>
      <node id="326341">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="326342" relation="include">
        </childnode>
        <childnode refid="326343" relation="include">
        </childnode>
      </node>
      <node id="326446">
        <label>stdexcept</label>
      </node>
      <node id="326359">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="326337" relation="include">
        </childnode>
      </node>
      <node id="326454">
        <label>checkpoint/container/function_serialize.h</label>
        <link refid="function__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326338" relation="include">
        </childnode>
      </node>
      <node id="326435">
        <label>checkpoint/dispatch/reconstructor.h</label>
        <link refid="reconstructor_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326436" relation="include">
        </childnode>
        <childnode refid="326426" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326368" relation="include">
        </childnode>
      </node>
      <node id="326519">
        <label>vt/pool/header/pool_header.h</label>
        <link refid="pool__header_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
      </node>
      <node id="326478">
        <label>checkpoint/checkpoint_api.impl.h</label>
        <link refid="checkpoint__api_8impl_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326402" relation="include">
        </childnode>
        <childnode refid="326413" relation="include">
        </childnode>
        <childnode refid="326412" relation="include">
        </childnode>
        <childnode refid="326414" relation="include">
        </childnode>
      </node>
      <node id="326342">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
        <childnode refid="326337" relation="include">
        </childnode>
      </node>
      <node id="326522">
        <label>nlohmann/json_fwd.hpp</label>
      </node>
      <node id="326410">
        <label>checkpoint/serializers/packer.h</label>
        <link refid="packer_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326411" relation="include">
        </childnode>
        <childnode refid="326412" relation="include">
        </childnode>
        <childnode refid="326415" relation="include">
        </childnode>
        <childnode refid="326416" relation="include">
        </childnode>
        <childnode refid="326417" relation="include">
        </childnode>
        <childnode refid="326418" relation="include">
        </childnode>
      </node>
      <node id="326356">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="326357" relation="include">
        </childnode>
        <childnode refid="326361" relation="include">
        </childnode>
        <childnode refid="326364" relation="include">
        </childnode>
      </node>
      <node id="326351">
        <label>string</label>
      </node>
      <node id="326416">
        <label>checkpoint/buffer/user_buffer.h</label>
        <link refid="user__buffer_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326412" relation="include">
        </childnode>
      </node>
      <node id="326473">
        <label>checkpoint/container/unique_ptr_serialize.h</label>
        <link refid="unique__ptr__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326435" relation="include">
        </childnode>
        <childnode refid="326432" relation="include">
        </childnode>
      </node>
      <node id="326388">
        <label>vt/runtime/component/base.h</label>
        <link refid="src_2vt_2runtime_2component_2base_8h"/>
        <childnode refid="326337" relation="include">
        </childnode>
        <childnode refid="326389" relation="include">
        </childnode>
        <childnode refid="326488" relation="include">
        </childnode>
        <childnode refid="326489" relation="include">
        </childnode>
      </node>
      <node id="326412">
        <label>checkpoint/buffer/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326413" relation="include">
        </childnode>
        <childnode refid="326414" relation="include">
        </childnode>
      </node>
      <node id="326477">
        <label>checkpoint/container/view_traverse_ndim.h</label>
        <link refid="view__traverse__ndim_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326403" relation="include">
        </childnode>
        <childnode refid="326475" relation="include">
        </childnode>
      </node>
      <node id="326461">
        <label>map</label>
      </node>
      <node id="326514">
        <label>vt/scheduler/priority.h</label>
        <link refid="priority_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326448" relation="include">
        </childnode>
        <childnode refid="326354" relation="include">
        </childnode>
      </node>
      <node id="326485">
        <label>EngFormat-Cpp/eng_format.hpp</label>
      </node>
      <node id="326429">
        <label>checkpoint/dispatch/dispatch_serializer_nonbyte.h</label>
        <link refid="dispatch__serializer__nonbyte_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326425" relation="include">
        </childnode>
        <childnode refid="326430" relation="include">
        </childnode>
        <childnode refid="326432" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326368" relation="include">
        </childnode>
        <childnode refid="326369" relation="include">
        </childnode>
      </node>
      <node id="326442">
        <label>checkpoint/dispatch/dispatch_byte_macro.h</label>
        <link refid="dispatch__byte__macro_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
      </node>
      <node id="326372">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="326368" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326352" relation="include">
        </childnode>
        <childnode refid="326373" relation="include">
        </childnode>
      </node>
      <node id="326373">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="326372" relation="include">
        </childnode>
        <childnode refid="326349" relation="include">
        </childnode>
        <childnode refid="326368" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326352" relation="include">
        </childnode>
        <childnode refid="326355" relation="include">
        </childnode>
      </node>
      <node id="326385">
        <label>unordered_set</label>
      </node>
      <node id="326509">
        <label>vt/messaging/envelope/envelope_test.impl.h</label>
        <link refid="envelope__test_8impl_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326501" relation="include">
        </childnode>
      </node>
      <node id="326495">
        <label>vt/messaging/envelope/envelope_type.h</label>
        <link refid="envelope__type_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
      </node>
      <node id="326426">
        <label>checkpoint/dispatch/reconstructor_tag.h</label>
        <link refid="reconstructor__tag_8h"/>
      </node>
      <node id="326431">
        <label>checkpoint/dispatch/vrt/registry_common.h</label>
        <link refid="registry__common_8h"/>
        <childnode refid="326347" relation="include">
        </childnode>
      </node>
      <node id="326479">
        <label>vt/runtime/component/diagnostic_meter.h</label>
        <link refid="diagnostic__meter_8h"/>
        <childnode refid="326480" relation="include">
        </childnode>
        <childnode refid="326482" relation="include">
        </childnode>
        <childnode refid="326483" relation="include">
        </childnode>
        <childnode refid="326486" relation="include">
        </childnode>
        <childnode refid="326379" relation="include">
        </childnode>
      </node>
      <node id="326457">
        <label>checkpoint/container/container_serialize.h</label>
        <link refid="container__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326403" relation="include">
        </childnode>
      </node>
      <node id="326329">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="326330" relation="include">
        </childnode>
        <childnode refid="326331" relation="include">
        </childnode>
        <childnode refid="326332" relation="include">
        </childnode>
        <childnode refid="326334" relation="include">
        </childnode>
      </node>
      <node id="326425">
        <label>checkpoint/traits/serializable_traits.h</label>
        <link refid="serializable__traits_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326403" relation="include">
        </childnode>
        <childnode refid="326426" relation="include">
        </childnode>
        <childnode refid="326427" relation="include">
        </childnode>
        <childnode refid="326330" relation="include">
        </childnode>
        <childnode refid="326369" relation="include">
        </childnode>
      </node>
      <node id="326437">
        <label>checkpoint/dispatch/vrt/serializer_registry.h</label>
        <link refid="serializer__registry_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326431" relation="include">
        </childnode>
        <childnode refid="326338" relation="include">
        </childnode>
        <childnode refid="326352" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
      </node>
      <node id="326480">
        <label>vt/runtime/component/meter/counter.h</label>
        <link refid="counter_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326481" relation="include">
        </childnode>
      </node>
      <node id="326344">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="326337" relation="include">
        </childnode>
        <childnode refid="326339" relation="include">
        </childnode>
      </node>
      <node id="326513">
        <label>vt/messaging/envelope/envelope_setup.impl.h</label>
        <link refid="envelope__setup_8impl_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326512" relation="include">
        </childnode>
        <childnode refid="326514" relation="include">
        </childnode>
      </node>
      <node id="326355">
        <label>fmt/core.h</label>
      </node>
      <node id="326471">
        <label>checkpoint/container/tuple_serialize.h</label>
        <link refid="tuple__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326403" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326354" relation="include">
        </childnode>
      </node>
      <node id="326421">
        <label>checkpoint/serializers/unpacker.impl.h</label>
        <link refid="unpacker_8impl_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326411" relation="include">
        </childnode>
        <childnode refid="326420" relation="include">
        </childnode>
        <childnode refid="326368" relation="include">
        </childnode>
        <childnode refid="326419" relation="include">
        </childnode>
      </node>
      <node id="326469">
        <label>checkpoint/container/thread_serialize.h</label>
        <link refid="thread__serialize_8h"/>
        <childnode refid="326470" relation="include">
        </childnode>
        <childnode refid="326404" relation="include">
        </childnode>
      </node>
      <node id="326432">
        <label>checkpoint/dispatch/vrt/virtual_serialize.h</label>
        <link refid="virtual__serialize_8h"/>
        <childnode refid="326433" relation="include">
        </childnode>
        <childnode refid="326441" relation="include">
        </childnode>
      </node>
      <node id="326387">
        <label>vt/runtime/component/component_traits.h</label>
        <link refid="component__traits_8h"/>
        <childnode refid="326347" relation="include">
        </childnode>
      </node>
      <node id="326444">
        <label>checkpoint/dispatch/type_registry.h</label>
        <link refid="type__registry_8h"/>
        <childnode refid="326445" relation="include">
        </childnode>
        <childnode refid="326330" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326378" relation="include">
        </childnode>
      </node>
      <node id="326391">
        <label>vt/runtime/component/component_reduce.h</label>
        <link refid="component__reduce_8h"/>
        <childnode refid="326337" relation="include">
        </childnode>
      </node>
      <node id="326384">
        <label>vt/runtime/component/component_registry.h</label>
        <link refid="component__registry_8h"/>
        <childnode refid="326337" relation="include">
        </childnode>
        <childnode refid="326352" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326385" relation="include">
        </childnode>
      </node>
      <node id="326328">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="326329" relation="include">
        </childnode>
        <childnode refid="326335" relation="include">
        </childnode>
      </node>
      <node id="326497">
        <label>vt/messaging/envelope/envelope_set.h</label>
        <link refid="envelope__set_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326495" relation="include">
        </childnode>
        <childnode refid="326496" relation="include">
        </childnode>
        <childnode refid="326498" relation="include">
        </childnode>
      </node>
      <node id="326358">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="326351" relation="include">
        </childnode>
      </node>
      <node id="326337">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="326330" relation="include">
        </childnode>
        <childnode refid="326338" relation="include">
        </childnode>
      </node>
      <node id="326362">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="326336" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
        <childnode refid="326363" relation="include">
        </childnode>
      </node>
      <node id="326439">
        <label>checkpoint/dispatch/vrt/serialize_instantiator.h</label>
        <link refid="serialize__instantiator_8h"/>
        <childnode refid="326437" relation="include">
        </childnode>
        <childnode refid="326440" relation="include">
        </childnode>
      </node>
      <node id="326413">
        <label>checkpoint/checkpoint_api.h</label>
        <link refid="checkpoint__api_8h"/>
        <childnode refid="326368" relation="include">
        </childnode>
        <childnode refid="326338" relation="include">
        </childnode>
        <childnode refid="326414" relation="include">
        </childnode>
      </node>
      <node id="326353">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
        <childnode refid="326354" relation="include">
        </childnode>
      </node>
      <node id="326486">
        <label>vt/runtime/component/meter/counter_gauge.h</label>
        <link refid="counter__gauge_8h"/>
        <childnode refid="326480" relation="include">
        </childnode>
        <childnode refid="326482" relation="include">
        </childnode>
      </node>
      <node id="326494">
        <label>vt/messaging/envelope/envelope.h</label>
        <link refid="envelope_2envelope_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326495" relation="include">
        </childnode>
        <childnode refid="326496" relation="include">
        </childnode>
        <childnode refid="326497" relation="include">
        </childnode>
        <childnode refid="326499" relation="include">
        </childnode>
        <childnode refid="326501" relation="include">
        </childnode>
        <childnode refid="326510" relation="include">
        </childnode>
        <childnode refid="326512" relation="include">
        </childnode>
        <childnode refid="326515" relation="include">
        </childnode>
        <childnode refid="326516" relation="include">
        </childnode>
      </node>
      <node id="326357">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="326358" relation="include">
        </childnode>
        <childnode refid="326337" relation="include">
        </childnode>
        <childnode refid="326359" relation="include">
        </childnode>
        <childnode refid="326360" relation="include">
        </childnode>
        <childnode refid="326332" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326355" relation="include">
        </childnode>
      </node>
      <node id="326521">
        <label>typeinfo</label>
      </node>
      <node id="326392">
        <label>vt/runtime/component/diagnostic_types.h</label>
        <link refid="diagnostic__types_8h"/>
        <childnode refid="326330" relation="include">
        </childnode>
      </node>
      <node id="326518">
        <label>vt/messaging/envelope/payload_envelope.h</label>
        <link refid="payload__envelope_8h"/>
        <childnode refid="326494" relation="include">
        </childnode>
      </node>
      <node id="326406">
        <label>cstdio</label>
      </node>
      <node id="326430">
        <label>checkpoint/dispatch/vrt/virtual_serialize_traits.h</label>
        <link refid="virtual__serialize__traits_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326431" relation="include">
        </childnode>
        <childnode refid="326427" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
      </node>
      <node id="326381">
        <label>vt/pool/pool.h</label>
        <link refid="pool_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326382" relation="include">
        </childnode>
        <childnode refid="326492" relation="include">
        </childnode>
        <childnode refid="326519" relation="include">
        </childnode>
        <childnode refid="326352" relation="include">
        </childnode>
        <childnode refid="326330" relation="include">
        </childnode>
        <childnode refid="326369" relation="include">
        </childnode>
        <childnode refid="326414" relation="include">
        </childnode>
      </node>
      <node id="326467">
        <label>checkpoint/container/shared_ptr_serialize.h</label>
        <link refid="shared__ptr__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
      </node>
      <node id="326340">
        <label>tuple</label>
      </node>
      <node id="326418">
        <label>checkpoint/serializers/packer.impl.h</label>
        <link refid="packer_8impl_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326411" relation="include">
        </childnode>
        <childnode refid="326412" relation="include">
        </childnode>
        <childnode refid="326419" relation="include">
        </childnode>
      </node>
      <node id="326440">
        <label>checkpoint/dispatch/vrt/link_derived_to_base_idx.h</label>
        <link refid="link__derived__to__base__idx_8h"/>
        <childnode refid="326437" relation="include">
        </childnode>
      </node>
      <node id="326507">
        <label>vt/utils/tls/tls.impl.h</label>
        <link refid="tls_8impl_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
      </node>
      <node id="326346">
        <label>vt/utils/strong/strong_type.h</label>
        <link refid="strong__type_8h"/>
        <childnode refid="326338" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
      </node>
      <node id="326481">
        <label>vt/runtime/component/meter/stats_pack.h</label>
        <link refid="stats__pack_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
      </node>
      <node id="326335">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="326336" relation="include">
        </childnode>
        <childnode refid="326329" relation="include">
        </childnode>
        <childnode refid="326349" relation="include">
        </childnode>
        <childnode refid="326353" relation="include">
        </childnode>
        <childnode refid="326355" relation="include">
        </childnode>
      </node>
      <node id="326482">
        <label>vt/runtime/component/meter/gauge.h</label>
        <link refid="gauge_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326481" relation="include">
        </childnode>
      </node>
      <node id="326500">
        <label>vt/messaging/envelope/envelope_get.impl.h</label>
        <link refid="envelope__get_8impl_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326499" relation="include">
        </childnode>
      </node>
      <node id="326465">
        <label>stack</label>
      </node>
      <node id="326352">
        <label>vector</label>
      </node>
      <node id="326502">
        <label>vt/context/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="326414" relation="include">
        </childnode>
        <childnode refid="326503" relation="include">
        </childnode>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326382" relation="include">
        </childnode>
        <childnode refid="326504" relation="include">
        </childnode>
        <childnode refid="326505" relation="include">
        </childnode>
        <childnode refid="326508" relation="include">
        </childnode>
      </node>
      <node id="326423">
        <label>checkpoint/dispatch/clean_type.h</label>
        <link refid="clean__type_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
      </node>
      <node id="326428">
        <label>checkpoint/dispatch/dispatch_serializer_byte.h</label>
        <link refid="dispatch__serializer__byte_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326425" relation="include">
        </childnode>
        <childnode refid="326429" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326368" relation="include">
        </childnode>
      </node>
      <node id="326449">
        <label>checkpoint/container/atomic_serialize.h</label>
        <link refid="atomic__serialize_8h"/>
        <childnode refid="326450" relation="include">
        </childnode>
        <childnode refid="326404" relation="include">
        </childnode>
      </node>
      <node id="326354">
        <label>utility</label>
      </node>
      <node id="326472">
        <label>checkpoint/container/vector_serialize.h</label>
        <link refid="vector__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326456" relation="include">
        </childnode>
        <childnode refid="326422" relation="include">
        </childnode>
        <childnode refid="326435" relation="include">
        </childnode>
        <childnode refid="326403" relation="include">
        </childnode>
        <childnode refid="326352" relation="include">
        </childnode>
      </node>
      <node id="326448">
        <label>array</label>
      </node>
      <node id="326510">
        <label>vt/messaging/envelope/envelope_ref.h</label>
        <link refid="envelope__ref_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326495" relation="include">
        </childnode>
        <childnode refid="326496" relation="include">
        </childnode>
        <childnode refid="326511" relation="include">
        </childnode>
      </node>
      <node id="326374">
        <label>sstream</label>
      </node>
      <node id="326463">
        <label>checkpoint/container/queue_serialize.h</label>
        <link refid="queue__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326464" relation="include">
        </childnode>
        <childnode refid="326465" relation="include">
        </childnode>
      </node>
      <node id="326433">
        <label>checkpoint/dispatch/vrt/base.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2vrt_2base_8h"/>
        <childnode refid="326431" relation="include">
        </childnode>
        <childnode refid="326434" relation="include">
        </childnode>
        <childnode refid="326437" relation="include">
        </childnode>
        <childnode refid="326438" relation="include">
        </childnode>
        <childnode refid="326439" relation="include">
        </childnode>
      </node>
      <node id="326390">
        <label>vt/runtime/component/component_name.h</label>
        <link refid="component__name_8h"/>
        <childnode refid="326351" relation="include">
        </childnode>
      </node>
      <node id="326394">
        <label>vt/runtime/component/diagnostic_value.h</label>
        <link refid="diagnostic__value_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326392" relation="include">
        </childnode>
        <childnode refid="326395" relation="include">
        </childnode>
        <childnode refid="326401" relation="include">
        </childnode>
        <childnode refid="326397" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326399" relation="include">
        </childnode>
      </node>
      <node id="326333">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="326427">
        <label>detector_headers.h</label>
      </node>
      <node id="326367">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="326368" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326352" relation="include">
        </childnode>
      </node>
      <node id="326332">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
        <childnode refid="326333" relation="include">
        </childnode>
      </node>
      <node id="326415">
        <label>checkpoint/buffer/managed_buffer.h</label>
        <link refid="managed__buffer_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326412" relation="include">
        </childnode>
        <childnode refid="326414" relation="include">
        </childnode>
      </node>
      <node id="326368">
        <label>cstdlib</label>
      </node>
      <node id="326422">
        <label>checkpoint/dispatch/dispatch.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326412" relation="include">
        </childnode>
        <childnode refid="326423" relation="include">
        </childnode>
        <childnode refid="326424" relation="include">
        </childnode>
        <childnode refid="326442" relation="include">
        </childnode>
        <childnode refid="326435" relation="include">
        </childnode>
        <childnode refid="326338" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326443" relation="include">
        </childnode>
      </node>
      <node id="326361">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="326359" relation="include">
        </childnode>
        <childnode refid="326362" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
      </node>
      <node id="326443">
        <label>checkpoint/dispatch/dispatch.impl.h</label>
        <link refid="lib_2checkpoint_2src_2checkpoint_2dispatch_2dispatch_8impl_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326422" relation="include">
        </childnode>
        <childnode refid="326444" relation="include">
        </childnode>
        <childnode refid="326446" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
      </node>
      <node id="326402">
        <label>checkpoint/checkpoint.h</label>
        <link refid="checkpoint_8h"/>
        <childnode refid="326403" relation="include">
        </childnode>
        <childnode refid="326422" relation="include">
        </childnode>
        <childnode refid="326425" relation="include">
        </childnode>
        <childnode refid="326447" relation="include">
        </childnode>
        <childnode refid="326449" relation="include">
        </childnode>
        <childnode refid="326451" relation="include">
        </childnode>
        <childnode refid="326453" relation="include">
        </childnode>
        <childnode refid="326454" relation="include">
        </childnode>
        <childnode refid="326455" relation="include">
        </childnode>
        <childnode refid="326460" relation="include">
        </childnode>
        <childnode refid="326463" relation="include">
        </childnode>
        <childnode refid="326466" relation="include">
        </childnode>
        <childnode refid="326467" relation="include">
        </childnode>
        <childnode refid="326468" relation="include">
        </childnode>
        <childnode refid="326469" relation="include">
        </childnode>
        <childnode refid="326471" relation="include">
        </childnode>
        <childnode refid="326472" relation="include">
        </childnode>
        <childnode refid="326473" relation="include">
        </childnode>
        <childnode refid="326474" relation="include">
        </childnode>
        <childnode refid="326413" relation="include">
        </childnode>
        <childnode refid="326478" relation="include">
        </childnode>
      </node>
      <node id="326504">
        <label>vt/context/context_attorney_fwd.h</label>
        <link refid="context__attorney__fwd_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
      </node>
      <node id="326517">
        <label>vt/messaging/envelope/envelope_extended_util.impl.h</label>
        <link refid="envelope__extended__util_8impl_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326516" relation="include">
        </childnode>
      </node>
      <node id="326445">
        <label>cstddef</label>
      </node>
      <node id="326515">
        <label>vt/messaging/envelope/envelope_extended.h</label>
        <link refid="envelope__extended_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326495" relation="include">
        </childnode>
        <childnode refid="326496" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
      </node>
      <node id="326460">
        <label>checkpoint/container/map_serialize.h</label>
        <link refid="map__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326456" relation="include">
        </childnode>
        <childnode refid="326403" relation="include">
        </childnode>
        <childnode refid="326457" relation="include">
        </childnode>
        <childnode refid="326461" relation="include">
        </childnode>
        <childnode refid="326378" relation="include">
        </childnode>
        <childnode refid="326462" relation="include">
        </childnode>
        <childnode refid="326385" relation="include">
        </childnode>
      </node>
      <node id="326459">
        <label>deque</label>
      </node>
      <node id="326378">
        <label>unordered_map</label>
      </node>
      <node id="326455">
        <label>checkpoint/container/list_serialize.h</label>
        <link refid="list__serialize_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326456" relation="include">
        </childnode>
        <childnode refid="326403" relation="include">
        </childnode>
        <childnode refid="326457" relation="include">
        </childnode>
        <childnode refid="326458" relation="include">
        </childnode>
        <childnode refid="326459" relation="include">
        </childnode>
      </node>
      <node id="326501">
        <label>vt/messaging/envelope/envelope_test.h</label>
        <link refid="envelope__test_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326502" relation="include">
        </childnode>
        <childnode refid="326495" relation="include">
        </childnode>
        <childnode refid="326496" relation="include">
        </childnode>
        <childnode refid="326509" relation="include">
        </childnode>
      </node>
      <node id="326498">
        <label>vt/messaging/envelope/envelope_set.impl.h</label>
        <link refid="envelope__set_8impl_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326497" relation="include">
        </childnode>
      </node>
      <node id="326492">
        <label>vt/pool/static_sized/memory_pool_equal.h</label>
        <link refid="memory__pool__equal_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326493" relation="include">
        </childnode>
        <childnode refid="326502" relation="include">
        </childnode>
        <childnode refid="326519" relation="include">
        </childnode>
        <childnode refid="326352" relation="include">
        </childnode>
        <childnode refid="326330" relation="include">
        </childnode>
      </node>
      <node id="326417">
        <label>checkpoint/buffer/io_buffer.h</label>
        <link refid="io__buffer_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326412" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
      </node>
      <node id="326336">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="326337" relation="include">
        </childnode>
        <childnode refid="326339" relation="include">
        </childnode>
        <childnode refid="326341" relation="include">
        </childnode>
        <childnode refid="326344" relation="include">
        </childnode>
        <childnode refid="326345" relation="include">
        </childnode>
      </node>
      <node id="326420">
        <label>checkpoint/serializers/unpacker.h</label>
        <link refid="unpacker_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326411" relation="include">
        </childnode>
        <childnode refid="326416" relation="include">
        </childnode>
        <childnode refid="326421" relation="include">
        </childnode>
      </node>
      <node id="326493">
        <label>vt/messaging/envelope.h</label>
        <link refid="envelope_8h"/>
        <childnode refid="326494" relation="include">
        </childnode>
        <childnode refid="326518" relation="include">
        </childnode>
      </node>
      <node id="326452">
        <label>chrono</label>
      </node>
      <node id="326365">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="326337" relation="include">
        </childnode>
        <childnode refid="326359" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326366" relation="include">
        </childnode>
      </node>
      <node id="326503">
        <label>mpi.h</label>
      </node>
      <node id="326512">
        <label>vt/messaging/envelope/envelope_setup.h</label>
        <link refid="envelope__setup_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326495" relation="include">
        </childnode>
        <childnode refid="326496" relation="include">
        </childnode>
        <childnode refid="326513" relation="include">
        </childnode>
      </node>
      <node id="326470">
        <label>thread</label>
      </node>
      <node id="326475">
        <label>checkpoint/container/view_traits_extract.h</label>
        <link refid="view__traits__extract_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326403" relation="include">
        </childnode>
      </node>
      <node id="326505">
        <label>vt/utils/tls/tls.h</label>
        <link refid="tls_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326506" relation="include">
        </childnode>
        <childnode refid="326507" relation="include">
        </childnode>
      </node>
      <node id="326491">
        <label>vt/runtime/component/component_pack.impl.h</label>
        <link refid="component__pack_8impl_8h"/>
        <childnode refid="326382" relation="include">
        </childnode>
      </node>
      <node id="326339">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="326337" relation="include">
        </childnode>
        <childnode refid="326330" relation="include">
        </childnode>
        <childnode refid="326338" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
      </node>
      <node id="326395">
        <label>vt/runtime/component/diagnostic_erased_value.h</label>
        <link refid="diagnostic__erased__value_8h"/>
        <childnode refid="326392" relation="include">
        </childnode>
        <childnode refid="326396" relation="include">
        </childnode>
        <childnode refid="326397" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
      </node>
      <node id="326389">
        <label>vt/runtime/component/diagnostic.h</label>
        <link refid="diagnostic_8h"/>
        <childnode refid="326390" relation="include">
        </childnode>
        <childnode refid="326391" relation="include">
        </childnode>
        <childnode refid="326392" relation="include">
        </childnode>
        <childnode refid="326393" relation="include">
        </childnode>
        <childnode refid="326394" relation="include">
        </childnode>
        <childnode refid="326479" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326414" relation="include">
        </childnode>
        <childnode refid="326378" relation="include">
        </childnode>
        <childnode refid="326338" relation="include">
        </childnode>
        <childnode refid="326487" relation="include">
        </childnode>
      </node>
      <node id="326347">
        <label>type_traits</label>
      </node>
      <node id="326462">
        <label>set</label>
      </node>
      <node id="326516">
        <label>vt/messaging/envelope/envelope_extended_util.h</label>
        <link refid="envelope__extended__util_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326495" relation="include">
        </childnode>
        <childnode refid="326496" relation="include">
        </childnode>
        <childnode refid="326515" relation="include">
        </childnode>
        <childnode refid="326517" relation="include">
        </childnode>
      </node>
      <node id="326360">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="326336" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
      </node>
      <node id="326523">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="326506">
        <label>vt/utils/tls/null_tls.h</label>
        <link refid="null__tls_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
      </node>
      <node id="326327">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="326328" relation="include">
        </childnode>
        <childnode refid="326336" relation="include">
        </childnode>
        <childnode refid="326356" relation="include">
        </childnode>
      </node>
      <node id="326401">
        <label>vt/runtime/component/diagnostic_value_base.h</label>
        <link refid="diagnostic__value__base_8h"/>
        <childnode refid="326392" relation="include">
        </childnode>
        <childnode refid="326393" relation="include">
        </childnode>
        <childnode refid="326395" relation="include">
        </childnode>
        <childnode refid="326402" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
      </node>
      <node id="326400">
        <label>algorithm</label>
      </node>
      <node id="326476">
        <label>checkpoint/container/view_traverse_manual.h</label>
        <link refid="view__traverse__manual_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326403" relation="include">
        </childnode>
        <childnode refid="326475" relation="include">
        </childnode>
      </node>
      <node id="326438">
        <label>checkpoint/dispatch/vrt/inheritance_assert_helpers.h</label>
        <link refid="inheritance__assert__helpers_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
      </node>
      <node id="326411">
        <label>checkpoint/serializers/memory_serializer.h</label>
        <link refid="memory__serializer_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326407" relation="include">
        </childnode>
      </node>
      <node id="326383">
        <label>vt/runtime/component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="326361" relation="include">
        </childnode>
        <childnode refid="326384" relation="include">
        </childnode>
        <childnode refid="326386" relation="include">
        </childnode>
        <childnode refid="326387" relation="include">
        </childnode>
        <childnode refid="326388" relation="include">
        </childnode>
        <childnode refid="326414" relation="include">
        </childnode>
      </node>
      <node id="326334">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="326419">
        <label>cstring</label>
      </node>
      <node id="326508">
        <label>vt/runnable/runnable.fwd.h</label>
        <link refid="runnable_8fwd_8h"/>
      </node>
      <node id="326487">
        <label>vt/runtime/component/diagnostic.impl.h</label>
        <link refid="diagnostic_8impl_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326389" relation="include">
        </childnode>
        <childnode refid="326394" relation="include">
        </childnode>
        <childnode refid="326414" relation="include">
        </childnode>
        <childnode refid="326398" relation="include">
        </childnode>
      </node>
      <node id="326393">
        <label>vt/runtime/component/diagnostic_units.h</label>
        <link refid="diagnostic__units_8h"/>
      </node>
      <node id="326375">
        <label>vt/vrt/collection/balance/lb_common.h</label>
        <link refid="lb__common_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326376" relation="include">
        </childnode>
        <childnode refid="326377" relation="include">
        </childnode>
        <childnode refid="326379" relation="include">
        </childnode>
        <childnode refid="326380" relation="include">
        </childnode>
        <childnode refid="326352" relation="include">
        </childnode>
        <childnode refid="326378" relation="include">
        </childnode>
      </node>
      <node id="326414">
        <label>memory</label>
      </node>
      <node id="326364">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="326365" relation="include">
        </childnode>
        <childnode refid="326370" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
      </node>
      <node id="326326">
        <label>vt/vrt/collection/balance/stats_data.h</label>
        <link refid="stats__data_8h"/>
        <childnode refid="326327" relation="include">
        </childnode>
        <childnode refid="326375" relation="include">
        </childnode>
        <childnode refid="326377" relation="include">
        </childnode>
        <childnode refid="326378" relation="include">
        </childnode>
        <childnode refid="326414" relation="include">
        </childnode>
        <childnode refid="326522" relation="include">
        </childnode>
      </node>
      <node id="326370">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="326359" relation="include">
        </childnode>
        <childnode refid="326337" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326371" relation="include">
        </childnode>
      </node>
      <node id="326408">
        <label>checkpoint/serializers/footprinter.h</label>
        <link refid="footprinter_8h"/>
        <childnode refid="326404" relation="include">
        </childnode>
        <childnode refid="326407" relation="include">
        </childnode>
      </node>
      <node id="326363">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="326336" relation="include">
        </childnode>
        <childnode refid="326329" relation="include">
        </childnode>
        <childnode refid="326359" relation="include">
        </childnode>
        <childnode refid="326362" relation="include">
        </childnode>
        <childnode refid="326360" relation="include">
        </childnode>
        <childnode refid="326358" relation="include">
        </childnode>
        <childnode refid="326351" relation="include">
        </childnode>
        <childnode refid="326340" relation="include">
        </childnode>
        <childnode refid="326347" relation="include">
        </childnode>
        <childnode refid="326355" relation="include">
        </childnode>
      </node>
      <node id="326520">
        <label>vt/messaging/message/message_serialize.h</label>
        <link refid="message__serialize_8h"/>
        <childnode refid="326347" relation="include">
        </childnode>
        <childnode refid="326402" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt">vt::vrt</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection">vt::vrt::collection</innernamespace>
    <innernamespace refid="namespacevt_1_1vrt_1_1collection_1_1balance">vt::vrt::collection::balance</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_data.cc</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2021<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stats__data_8h" kindref="compound">vt/vrt/collection/balance/stats_data.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="context_8h" kindref="compound">vt/context/context.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nlohmann/json.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a012d139c89a14e56a85f32fd82e7c7d3" kindref="member">vrt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">collection<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">balance<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a560439529230b8b96bd6bde6373ad124" kindref="member">StatsData::outputEntity</ref>(nlohmann::json&amp;<sp/>j,<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.id;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;home&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.getHomeNode();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;migratable&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.isMigratable();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a28e705281f97d1afd659848de7af7d7b" kindref="member">node_idx_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a28e705281f97d1afd659848de7af7d7b" kindref="member">node_idx_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>proxy_id<sp/>=<sp/>std::get&lt;0&gt;(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a28e705281f97d1afd659848de7af7d7b" kindref="member">node_idx_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)-&gt;second);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>idx_vec<sp/>=<sp/>std::get&lt;1&gt;(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a28e705281f97d1afd659848de7af7d7b" kindref="member">node_idx_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)-&gt;second);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;collection_id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>proxy_id;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>idx_vec.size();<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">][x]<sp/>=<sp/>idx_vec[x];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a1c281f52e1256426885206aa38f85670" kindref="member">node_objgroup_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a1c281f52e1256426885206aa38f85670" kindref="member">node_objgroup_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>proxy_id<sp/>=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a1c281f52e1256426885206aa38f85670" kindref="member">node_objgroup_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)-&gt;second;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;objgroup_id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>proxy_id;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bare<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">std::unique_ptr&lt;nlohmann::json&gt;<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1ac864e580e764d093b427e459d46b2bd4" kindref="member">StatsData::toJson</ref>(<ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>json<sp/>=<sp/>nlohmann::json;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>json<sp/>j;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689ab2d71eabd52b3ba898df5e1ee6a20089" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>std::size_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a34a782537ef1b33bfc1c7b1f635e1c72" kindref="member">node_data_</ref>.find(phase)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a34a782537ef1b33bfc1c7b1f635e1c72" kindref="member">node_data_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>elm<sp/>:<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a34a782537ef1b33bfc1c7b1f635e1c72" kindref="member">node_data_</ref>.at(phase))<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>elm.first;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref><sp/>time<sp/>=<sp/>elm.second.whole_phase_load;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;resource&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">theContext</ref>()-&gt;<ref refid="structvt_1_1ctx_1_1_context_1a0d52c263ce8516546a67443d9a86fa5f" kindref="member">getNode</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">]<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a560439529230b8b96bd6bde6373ad124" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>subphase_times<sp/>=<sp/>elm.second.subphase_loads;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>subphases<sp/>=<sp/>subphase_times.size();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subphases<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>subphases;<sp/>s++)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;subphases&quot;</highlight><highlight class="normal">][s][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;subphases&quot;</highlight><highlight class="normal">][s][</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">]<sp/>=<sp/>subphase_times[s];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a5ee2aea35e48a4855c8f99c16b588287" kindref="member">node_comm_</ref>.find(phase)<sp/>!=<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a5ee2aea35e48a4855c8f99c16b588287" kindref="member">node_comm_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>elm<sp/>:<sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a5ee2aea35e48a4855c8f99c16b588287" kindref="member">node_comm_</ref>.at(phase))<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>volume<sp/>=<sp/>elm.second;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>key<sp/>=<sp/>elm.first;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;bytes&quot;</highlight><highlight class="normal">]<sp/>=<sp/>volume.bytes;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;messages&quot;</highlight><highlight class="normal">]<sp/>=<sp/>volume.messages;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(key.cat_)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2abe55b6387170df0ca68f41225268e842" kindref="member">elm::CommCategory::Broadcast</ref>:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2a95aeb71ffd419cc14c6929f9dcd6cdff" kindref="member">elm::CommCategory::SendRecv</ref>:<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.cat_<sp/>==<sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2a95aeb71ffd419cc14c6929f9dcd6cdff" kindref="member">elm::CommCategory::SendRecv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SendRecv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Broadcast&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a560439529230b8b96bd6bde6373ad124" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">],<sp/>key.fromObj());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a560439529230b8b96bd6bde6373ad124" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">],<sp/>key.toObj());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2ae5ac0d75517cea8a327fc5252da63e0b" kindref="member">elm::CommCategory::NodeToCollection</ref>:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2ae78a087708e2798bf753815e58e0d09a" kindref="member">elm::CommCategory::NodeToCollectionBcast</ref>:<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.cat_<sp/>==<sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2ae5ac0d75517cea8a327fc5252da63e0b" kindref="member">elm::CommCategory::NodeToCollection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollectionBcast&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>key.fromNode();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a560439529230b8b96bd6bde6373ad124" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">],<sp/>key.toObj());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2abae8da2cdb9a00dd6dc7b7e642ff8192" kindref="member">elm::CommCategory::CollectionToNode</ref>:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2acf4b5610366267918ea6dc2def3edd13" kindref="member">elm::CommCategory::CollectionToNodeBcast</ref>:<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.cat_<sp/>==<sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2abae8da2cdb9a00dd6dc7b7e642ff8192" kindref="member">elm::CommCategory::CollectionToNode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNodeBcast&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>key.toNode();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a560439529230b8b96bd6bde6373ad124" kindref="member">outputEntity</ref>(j[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">][i][</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">],<sp/>key.fromObj());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2ad3b099c32afd358626c571a1c02bd197" kindref="member">elm::CommCategory::LocalInvoke</ref>:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2a057b8dfc0741801e337e981d77b4abce" kindref="member">elm::CommCategory::CollectiveToCollectionBcast</ref>:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>currently<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;json&gt;(std::move(j));</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a4456eb9f50cab15ee7cbd079603a4b6d" kindref="member">StatsData::StatsData</ref>(nlohmann::json<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>this_node<sp/>=<sp/><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">theContext</ref>()-&gt;<ref refid="structvt_1_1ctx_1_1_context_1a0d52c263ce8516546a67443d9a86fa5f" kindref="member">getNode</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>phases<sp/>=<sp/>j[</highlight><highlight class="stringliteral">&quot;phases&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phases.is_array())<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>phase<sp/>:<sp/>phases)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>phase[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tasks<sp/>=<sp/>phase[</highlight><highlight class="stringliteral">&quot;tasks&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a34a782537ef1b33bfc1c7b1f635e1c72" kindref="member">node_data_</ref>[id];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a5ee2aea35e48a4855c8f99c16b588287" kindref="member">node_comm_</ref>[id];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tasks.is_array())<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>task<sp/>:<sp/>tasks)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref><sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>etype<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(time.is_number());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(<ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref>.is_number());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(<ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref><sp/>==<sp/>this_node);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(etype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.is_number());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{object,<sp/><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0a576033c81e2ddd03d721ecef3b1b3f81" kindref="member">node</ref>};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a34a782537ef1b33bfc1c7b1f635e1c72" kindref="member">node_data_</ref>[id][elm].whole_phase_load<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">].find(</highlight><highlight class="stringliteral">&quot;collection_id&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">].<ref refid="namespacevt_1_1util_1_1json_1a6f1b13d9471c62e046731666abd9c5ed" kindref="member">end</ref>()<sp/>and</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">].find(</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">].<ref refid="namespacevt_1_1util_1_1json_1a6f1b13d9471c62e046731666abd9c5ed" kindref="member">end</ref>()</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cid<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;collection_id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid.is_number()<sp/>&amp;&amp;<sp/>idx.is_array())<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/>arr<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cid);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a28e705281f97d1afd659848de7af7d7b" kindref="member">node_idx_</ref>[elm]<sp/>=<sp/>std::make_tuple(proxy,<sp/>arr);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task.find(</highlight><highlight class="stringliteral">&quot;subphases&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>task.end())<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>subphases<sp/>=<sp/>task[</highlight><highlight class="stringliteral">&quot;subphases&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subphases.is_array())<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s<sp/>:<sp/>subphases)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sid<sp/>=<sp/>s[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stime<sp/>=<sp/>s[</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(sid.is_number());</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(stime.is_number());</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a34a782537ef1b33bfc1c7b1f635e1c72" kindref="member">node_data_</ref>[id][elm].subphase_loads.resize(</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;std::size_t&gt;(sid)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a34a782537ef1b33bfc1c7b1f635e1c72" kindref="member">node_data_</ref>[id][elm].subphase_loads[sid]<sp/>=<sp/>stime;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CommKey<sp/>=<sp/>elm::CommKey;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CommVolume<sp/>=<sp/>elm::CommVolume;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase.find(</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>phase.end())<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>comms<sp/>=<sp/>phase[</highlight><highlight class="stringliteral">&quot;communications&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comms.is_array())<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>comm<sp/>:<sp/>comms)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;bytes&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>messages<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;messages&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(bytes.is_number());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(messages.is_number());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SendRecv&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Broadcast&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_object<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(from_object.is_number());</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{from_object,<sp/>this_node};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_object<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(to_object.is_number());</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{to_object,<sp/>this_node};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey<sp/>key(</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey::CollectionTag{},</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_elm,<sp/>to_elm,<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Broadcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommVolume<sp/>vol{bytes,<sp/>messages};</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a5ee2aea35e48a4855c8f99c16b588287" kindref="member">node_comm_</ref>[id][key]<sp/>=<sp/>vol;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollection&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollectionBcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_node<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(from_node.is_number());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_object<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(to_object.is_number());</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{to_object,<sp/>this_node};</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey<sp/>key(</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey::NodeToCollectionTag{},</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(from_node),<sp/>to_elm,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NodeToCollectionBcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommVolume<sp/>vol{bytes,<sp/>messages};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a5ee2aea35e48a4855c8f99c16b588287" kindref="member">node_comm_</ref>[id][key]<sp/>=<sp/>vol;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNode&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNodeBcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_object<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(from_object.is_number());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_elm<sp/>=<sp/><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>{from_object,<sp/>this_node};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_node<sp/>=<sp/>comm[</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__assert_8h_1a60b04695e9ed43131da50386a2ced779" kindref="member">vtAssertExpr</ref>(to_node.is_number());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey<sp/>key(</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommKey::CollectionToNodeTag{},</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_elm,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(to_node),</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;CollectionToNodeBcast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommVolume<sp/>vol{bytes,<sp/>messages};</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a5ee2aea35e48a4855c8f99c16b588287" kindref="member">node_comm_</ref>[id][key]<sp/>=<sp/>vol;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@todo:<sp/>implement<sp/>subphase<sp/>communication<sp/>de-serialization,<sp/>no<sp/>use<sp/>for<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>right<sp/>now,<sp/>so<sp/>it<sp/>will<sp/>be<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a48628fce8e2356413520fed69a800bc4" kindref="member">StatsData::clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a5ee2aea35e48a4855c8f99c16b588287" kindref="member">node_comm_</ref>.clear();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a34a782537ef1b33bfc1c7b1f635e1c72" kindref="member">node_data_</ref>.clear();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1ac78802ff554a4d802a163afa5756412e" kindref="member">node_subphase_comm_</ref>.clear();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_data_1a28e705281f97d1afd659848de7af7d7b" kindref="member">node_idx_</ref>.clear();</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">}}}}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::vrt::collection::balance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/vt/vrt/collection/balance/stats_data.cc"/>
  </compounddef>
</doxygen>
