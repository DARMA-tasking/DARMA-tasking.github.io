<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1pool_1_1_memory_pool_equal" kind="struct" language="C++" prot="public">
    <compoundname>vt::pool::MemoryPoolEqual</compoundname>
    <includes refid="memory__pool__equal_8h" local="no">memory_pool_equal.h</includes>
    <templateparamlist>
      <param>
        <type>int64_t</type>
        <declname>num_bytes_t</declname>
        <defname>num_bytes_t</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1pool_1_1_memory_pool_equal_1af0be2ff27778be95adc6dad823113c27" prot="public" static="no">
        <type>std::vector&lt; void * &gt;</type>
        <definition>using vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::ContainerType =  std::vector&lt;void*&gt;</definition>
        <argsstring></argsstring>
        <name>ContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="70" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pool_1_1_memory_pool_equal_1a101fdcb943d0cb0863cf17655e0b4e1c" prot="public" static="no">
        <type>int64_t</type>
        <definition>using vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::SlotType =  int64_t</definition>
        <argsstring></argsstring>
        <name>SlotType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="71" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pool_1_1_memory_pool_equal_1a6b3a6a56431496ae69e1799c3d9856dc" prot="public" static="no">
        <type><ref refid="structvt_1_1pool_1_1_header" kindref="compound">Header</ref></type>
        <definition>using vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::HeaderType =  Header</definition>
        <argsstring></argsstring>
        <name>HeaderType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="72" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pool_1_1_memory_pool_equal_1a43bf2b08808f0f90aa1fc1588c7ffd08" prot="public" static="no">
        <type><ref refid="structvt_1_1pool_1_1_header_manager" kindref="compound">HeaderManager</ref></type>
        <definition>using vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::HeaderManagerType =  HeaderManager</definition>
        <argsstring></argsstring>
        <name>HeaderManagerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="73" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structvt_1_1pool_1_1_memory_pool_equal_1ae0435baf515fefccc015b600357bc6bb" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="structvt_1_1pool_1_1_memory_pool_equal_1a101fdcb943d0cb0863cf17655e0b4e1c" kindref="member">SlotType</ref> const</type>
        <definition>constexpr SlotType const vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::fst_pool_slot</definition>
        <argsstring></argsstring>
        <name>fst_pool_slot</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="75" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pool_1_1_memory_pool_equal_1a67dae02a7795b182a7302b9eb34924e7" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="structvt_1_1pool_1_1_memory_pool_equal_1a101fdcb943d0cb0863cf17655e0b4e1c" kindref="member">SlotType</ref> const</type>
        <definition>constexpr SlotType const vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::default_pool_size</definition>
        <argsstring></argsstring>
        <name>default_pool_size</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="76" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1pool_1_1_memory_pool_equal_1a9f303ac0fffee08f71f676014d8114a6" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1pool_1_1_memory_pool_equal_1a101fdcb943d0cb0863cf17655e0b4e1c" kindref="member">SlotType</ref> const</type>
        <definition>SlotType const vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::num_bytes_</definition>
        <argsstring></argsstring>
        <name>num_bytes_</name>
        <initializer>= num_bytes_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="88" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pool_1_1_memory_pool_equal_1a3ae57a1929e619eb6d346f196e0b1d2d" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1pool_1_1_memory_pool_equal_1a101fdcb943d0cb0863cf17655e0b4e1c" kindref="member">SlotType</ref> const</type>
        <definition>SlotType const vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::num_full_bytes_</definition>
        <argsstring></argsstring>
        <name>num_full_bytes_</name>
        <initializer>= num_bytes_t + sizeof(<ref refid="structvt_1_1pool_1_1_header" kindref="compound">Header</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="89" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pool_1_1_memory_pool_equal_1a8f5d69e4d35c30c9f9913ccc80350f0a" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1pool_1_1_memory_pool_equal_1a101fdcb943d0cb0863cf17655e0b4e1c" kindref="member">SlotType</ref></type>
        <definition>SlotType vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::pool_size_</definition>
        <argsstring></argsstring>
        <name>pool_size_</name>
        <initializer>= <ref refid="structvt_1_1pool_1_1_memory_pool_equal_1a67dae02a7795b182a7302b9eb34924e7" kindref="member">default_pool_size</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="91" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pool_1_1_memory_pool_equal_1aa9298df54e6a541e9dd8960befbf46a5" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1pool_1_1_memory_pool_equal_1a101fdcb943d0cb0863cf17655e0b4e1c" kindref="member">SlotType</ref></type>
        <definition>SlotType vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::cur_slot_</definition>
        <argsstring></argsstring>
        <name>cur_slot_</name>
        <initializer>= <ref refid="structvt_1_1pool_1_1_memory_pool_equal_1ae0435baf515fefccc015b600357bc6bb" kindref="member">fst_pool_slot</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="92" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pool_1_1_memory_pool_equal_1af8f2b40c8e28f638a675fe5f8b302782" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1pool_1_1_memory_pool_equal_1af0be2ff27778be95adc6dad823113c27" kindref="member">ContainerType</ref></type>
        <definition>ContainerType vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::holder_</definition>
        <argsstring></argsstring>
        <name>holder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="94" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pool_1_1_memory_pool_equal_1a588ccd66ce55b16d85ee47a739ec7cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::MemoryPoolEqual</definition>
        <argsstring>(SlotType const in_pool_size=default_pool_size)</argsstring>
        <name>MemoryPoolEqual</name>
        <param>
          <type><ref refid="structvt_1_1pool_1_1_memory_pool_equal_1a101fdcb943d0cb0863cf17655e0b4e1c" kindref="member">SlotType</ref> const</type>
          <declname>in_pool_size</declname>
          <defval><ref refid="structvt_1_1pool_1_1_memory_pool_equal_1a67dae02a7795b182a7302b9eb34924e7" kindref="member">default_pool_size</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="78" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.cc" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pool_1_1_memory_pool_equal_1a3639b62858bef876bf6f8a51cfdb7212" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::~MemoryPoolEqual</definition>
        <argsstring>()</argsstring>
        <name>~MemoryPoolEqual</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="80" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.cc" bodystart="63" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pool_1_1_memory_pool_equal_1a070cb7e7f56cde226fe95a71832d7deb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::alloc</definition>
        <argsstring>(size_t const &amp;sz, size_t const &amp;oversize)</argsstring>
        <name>alloc</name>
        <param>
          <type>size_t const &amp;</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>size_t const &amp;</type>
          <declname>oversize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="82" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.cc" bodystart="82" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pool_1_1_memory_pool_equal_1af02c22884cf082406c7f5dd00d9b77c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::dealloc</definition>
        <argsstring>(void *const t)</argsstring>
        <name>dealloc</name>
        <param>
          <type>void *const</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="83" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.cc" bodystart="112" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pool_1_1_memory_pool_equal_1acb03d02014eaebd24522525b059d4fb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::resizePool</definition>
        <argsstring>()</argsstring>
        <name>resizePool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="84" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.cc" bodystart="129" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pool_1_1_memory_pool_equal_1a5a760235c3429f60ba394d166ee0e26b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1pool_1_1_memory_pool_equal_1a101fdcb943d0cb0863cf17655e0b4e1c" kindref="member">SlotType</ref></type>
        <definition>MemoryPoolEqual&lt; num_bytes_t &gt;::SlotType vt::pool::MemoryPoolEqual&lt; num_bytes_t &gt;::getNumBytes</definition>
        <argsstring>()</argsstring>
        <name>getNumBytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="85" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.cc" bodystart="142" bodyend="144"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/pool/static_sized/memory_pool_equal.h" line="69" column="1" bodyfile="src/vt/pool/static_sized/memory_pool_equal.h" bodystart="69" bodyend="95"/>
    <listofallmembers>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1a070cb7e7f56cde226fe95a71832d7deb" prot="public" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>alloc</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1af0be2ff27778be95adc6dad823113c27" prot="public" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>ContainerType</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1aa9298df54e6a541e9dd8960befbf46a5" prot="private" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>cur_slot_</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1af02c22884cf082406c7f5dd00d9b77c8" prot="public" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>dealloc</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1a67dae02a7795b182a7302b9eb34924e7" prot="public" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>default_pool_size</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1ae0435baf515fefccc015b600357bc6bb" prot="public" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>fst_pool_slot</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1a5a760235c3429f60ba394d166ee0e26b" prot="public" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>getNumBytes</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1a43bf2b08808f0f90aa1fc1588c7ffd08" prot="public" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>HeaderManagerType</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1a6b3a6a56431496ae69e1799c3d9856dc" prot="public" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>HeaderType</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1af8f2b40c8e28f638a675fe5f8b302782" prot="private" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>holder_</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1a588ccd66ce55b16d85ee47a739ec7cdd" prot="public" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>MemoryPoolEqual</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1a9f303ac0fffee08f71f676014d8114a6" prot="private" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>num_bytes_</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1a3ae57a1929e619eb6d346f196e0b1d2d" prot="private" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>num_full_bytes_</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1a8f5d69e4d35c30c9f9913ccc80350f0a" prot="private" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>pool_size_</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1acb03d02014eaebd24522525b059d4fb4" prot="public" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>resizePool</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1a101fdcb943d0cb0863cf17655e0b4e1c" prot="public" virt="non-virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>SlotType</name></member>
      <member refid="structvt_1_1pool_1_1_memory_pool_equal_1a3639b62858bef876bf6f8a51cfdb7212" prot="public" virt="virtual"><scope>vt::pool::MemoryPoolEqual</scope><name>~MemoryPoolEqual</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
