<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="phase" kind="page">
    <compoundname>phase</compoundname>
    <title>Phase Manager</title>
    <briefdescription>
<para>Manage phases of time. </para>
    </briefdescription>
    <detaileddescription>
<para>Manage phases of time</para>
<para>The phase manager component <computeroutput><ref refid="structvt_1_1phase_1_1_phase_manager" kindref="compound">vt::phase::PhaseManager</ref></computeroutput>, accessed via <computeroutput><ref refid="namespacevt_1a3799d6b51fb71d7b6505760aad457e61" kindref="member">vt::thePhase()</ref></computeroutput> allows the delineation of collective intervals of time across all nodes. Load balancing, as well as other components, use phases as a boundary to perform many operations over an application&apos;s execution such as work redistribution, outputting of statistical data, or flushing trace data.</para>
<para>The main user interface is a call to <computeroutput><ref refid="namespacevt_1a3799d6b51fb71d7b6505760aad457e61" kindref="member">thePhase()</ref>-&gt;nextPhaseCollective()</computeroutput> which starts the next phase after performing a reduction. Thus, any work that belongs in the preceding phase should be synchronized by the user before this is called (e.g., by calling <computeroutput><ref refid="namespacevt_1a2fc4ef34f30b49a1781d765804bfadbb" kindref="member">vt::runInEpochCollective</ref></computeroutput>).</para>
<para>System components along with applications can register hooks with the phase manager to determine when a new phase is starting, ending, and after migrations have occurred. </para>
    </detaileddescription>
    <location file="docs/md/phase.md"/>
  </compounddef>
</doxygen>
