<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1_sendable" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::Sendable</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BaseProxyT</basecompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_elm_traits" prot="public" virt="non-virtual">vt::vrt::collection::ProxyCollectionElmTraits&lt; ColT, IndexType &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_elm_traits" prot="public" virt="non-virtual">vt::vrt::collection::ProxyCollectionElmTraits&lt; ColT, IndexT &gt;</derivedcompoundref>
    <includes refid="sendable_8h" local="no">sendable.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>ColT</declname>
        <defname>ColT</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>IndexT</declname>
        <defname>IndexT</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>BaseProxyT</declname>
        <defname>BaseProxyT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_sendable_1a26f7014b7bb14f0e4b758b5b076834f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;::Sendable</definition>
        <argsstring>()=default</argsstring>
        <name>Sendable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/send/sendable.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_sendable_1aa4b3473480b076117715d1d21b53919b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;::Sendable</definition>
        <argsstring>(typename BaseProxyT::ProxyType const &amp;in_proxy, typename BaseProxyT::ElementProxyType const &amp;in_elm)</argsstring>
        <name>Sendable</name>
        <param>
          <type>typename BaseProxyT::ProxyType const &amp;</type>
          <declname>in_proxy</declname>
        </param>
        <param>
          <type>typename BaseProxyT::ElementProxyType const &amp;</type>
          <declname>in_elm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/send/sendable.h" line="58" column="1" bodyfile="src/vt/vrt/collection/send/sendable.impl.h" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_sendable_1ae8e7cff31e30aa7cda6b958c1a81ddc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/send/sendable.h" line="64" column="1" bodyfile="src/vt/vrt/collection/send/sendable.impl.h" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_sendable_1a321d85ceafaf6525875fb7468a80ac6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a939327f58a5838cf9d7dcc7f14d1670c" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;::send</definition>
        <argsstring>(MsgT *msg) const</argsstring>
        <name>send</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/send/sendable.h" line="69" column="1" bodyfile="src/vt/vrt/collection/send/sendable.impl.h" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_sendable_1aa8c102820895d01422c14e8c0993fc90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a939327f58a5838cf9d7dcc7f14d1670c" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;::send</definition>
        <argsstring>(MsgSharedPtr&lt; MsgT &gt; msg) const</argsstring>
        <name>send</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/send/sendable.h" line="73" column="1" bodyfile="src/vt/vrt/collection/send/sendable.impl.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_sendable_1a1bae1b58a1ce80fd76ee43ff4d33905a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a939327f58a5838cf9d7dcc7f14d1670c" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;::sendMsg</definition>
        <argsstring>(messaging::MsgPtrThief&lt; MsgT &gt; msg) const</argsstring>
        <name>sendMsg</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_ptr_thief" kindref="compound">messaging::MsgPtrThief</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Create message (with action function handler) and send to collection element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments needed for creating the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/send/sendable.h" line="83" column="1" bodyfile="src/vt/vrt/collection/send/sendable.impl.h" bodystart="84" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_sendable_1a65e5494a18b398b52f12c056cff1dc16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a939327f58a5838cf9d7dcc7f14d1670c" kindref="member">ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;::send</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>send</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Create message (with action function handler) and send to collection element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments needed for creating the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/send/sendable.h" line="93" column="1" bodyfile="src/vt/vrt/collection/send/sendable.impl.h" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_sendable_1a321d85ceafaf6525875fb7468a80ac6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;::send</definition>
        <argsstring>(MsgT *msg) const</argsstring>
        <name>send</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/send/sendable.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_sendable_1aa8c102820895d01422c14e8c0993fc90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;::send</definition>
        <argsstring>(MsgSharedPtr&lt; MsgT &gt; msg) const</argsstring>
        <name>send</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/send/sendable.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_sendable_1a1bae1b58a1ce80fd76ee43ff4d33905a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;::sendMsg</definition>
        <argsstring>(messaging::MsgPtrThief&lt; MsgT &gt; msg) const</argsstring>
        <name>sendMsg</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_ptr_thief" kindref="compound">messaging::MsgPtrThief</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Create message (with action member handler) and send to collection element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments needed for creating the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/send/sendable.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_sendable_1a65e5494a18b398b52f12c056cff1dc16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;::send</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>send</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Create message (with action member handler) and send to collection element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments needed for creating the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/send/sendable.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_sendable_1adb5d41d0563ccc3d9b29f547d2b45687" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>auto</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;::sendMsg</definition>
        <argsstring>(messaging::MsgPtrThief&lt; typename ObjFuncTraits&lt; decltype(f)&gt;::MsgT &gt; msg) const</argsstring>
        <name>sendMsg</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_ptr_thief" kindref="compound">messaging::MsgPtrThief</ref>&lt; typename <ref refid="structvt_1_1_obj_func_traits" kindref="compound">ObjFuncTraits</ref>&lt; decltype(f)&gt;::MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Create message (with action function handler) and send to collection element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments needed for creating the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/send/sendable.h" line="134" column="1" bodyfile="src/vt/vrt/collection/send/sendable.h" bodystart="134" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_sendable_1a2de5ccb7685ed0d975315944da492491" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>auto</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;::send</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>send</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Create message (with action function handler) and send to collection element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments needed for creating the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pending send </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/send/sendable.h" line="149" column="1" bodyfile="src/vt/vrt/collection/send/sendable.impl.h" bodystart="135" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3752">
        <label>BaseProxyT</label>
      </node>
      <node id="3751">
        <label>vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_sendable"/>
        <childnode refid="3752" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3755">
        <label>vt::vrt::collection::ProxyCollectionElmTraits&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_elm_traits"/>
        <childnode refid="3751" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3756">
        <label>vt::vrt::collection::VrtElmProxy&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_vrt_elm_proxy"/>
        <childnode refid="3755" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3753">
        <label>ProxyCollectionElmTraits&lt; ColT, IndexType &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_elm_traits"/>
        <childnode refid="3751" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3754">
        <label>vt::vrt::collection::VrtElmProxy&lt; ColT, IndexType &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_vrt_elm_proxy"/>
        <childnode refid="3753" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3758">
        <label>BaseProxyT</label>
      </node>
      <node id="3757">
        <label>vt::vrt::collection::Sendable&lt; ColT, IndexT, BaseProxyT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_sendable"/>
        <childnode refid="3758" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/send/sendable.h" line="56" column="1" bodyfile="src/vt/vrt/collection/send/sendable.h" bodystart="56" bodyend="150"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1_sendable_1a321d85ceafaf6525875fb7468a80ac6d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Sendable</scope><name>send</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_sendable_1aa8c102820895d01422c14e8c0993fc90" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Sendable</scope><name>send</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_sendable_1a65e5494a18b398b52f12c056cff1dc16" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Sendable</scope><name>send</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_sendable_1a321d85ceafaf6525875fb7468a80ac6d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Sendable</scope><name>send</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_sendable_1aa8c102820895d01422c14e8c0993fc90" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Sendable</scope><name>send</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_sendable_1a65e5494a18b398b52f12c056cff1dc16" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Sendable</scope><name>send</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_sendable_1a2de5ccb7685ed0d975315944da492491" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Sendable</scope><name>send</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_sendable_1a26f7014b7bb14f0e4b758b5b076834f1" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Sendable</scope><name>Sendable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_sendable_1aa4b3473480b076117715d1d21b53919b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Sendable</scope><name>Sendable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_sendable_1a1bae1b58a1ce80fd76ee43ff4d33905a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Sendable</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_sendable_1a1bae1b58a1ce80fd76ee43ff4d33905a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Sendable</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_sendable_1adb5d41d0563ccc3d9b29f547d2b45687" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Sendable</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_sendable_1ae8e7cff31e30aa7cda6b958c1a81ddc3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Sendable</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
