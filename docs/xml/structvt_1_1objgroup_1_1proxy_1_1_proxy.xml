<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1objgroup_1_1proxy_1_1_proxy" kind="struct" language="C++" prot="public">
    <compoundname>vt::objgroup::proxy::Proxy</compoundname>
    <includes refid="proxy__objgroup_8h" local="no">proxy_objgroup.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>ObjT</declname>
        <defname>ObjT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a6f11b9652eee64f87bdff5a83fe1f7bb" prot="public" static="no">
        <type>ObjT</type>
        <definition>using vt::objgroup::proxy::Proxy&lt; ObjT &gt;::ObjGroupType =  ObjT</definition>
        <argsstring></argsstring>
        <name>ObjGroupType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="77" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a337be4c20cf11ff6477c7a66208cc909" prot="public" static="no">
        <type><ref refid="namespacevt_1_1collective_1_1reduce_1a7b7cb3021ac5654d92825d9fab0250b2" kindref="member">collective::reduce::ReduceStamp</ref></type>
        <definition>using vt::objgroup::proxy::Proxy&lt; ObjT &gt;::ReduceStamp =  collective::reduce::ReduceStamp</definition>
        <argsstring></argsstring>
        <name>ReduceStamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="78" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a1bdf8713203531d306702a024872bb08" prot="public" static="no">
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>using vt::objgroup::proxy::Proxy&lt; ObjT &gt;::PendingSendType =  messaging::PendingSend</definition>
        <argsstring></argsstring>
        <name>PendingSendType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="79" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a4411a5c2a4719d264060041fd15d9d03" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref></type>
        <definition>ObjGroupProxyType vt::objgroup::proxy::Proxy&lt; ObjT &gt;::proxy_</definition>
        <argsstring></argsstring>
        <name>proxy_</name>
        <initializer>= no_obj_group</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The raw proxy ID bits </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="347" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a5450776d9cabb2556765c0d0227c9589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::objgroup::proxy::Proxy&lt; ObjT &gt;::Proxy</definition>
        <argsstring>()=default</argsstring>
        <name>Proxy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1ad12a9b75a3c4844144d7a159b11af5ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::objgroup::proxy::Proxy&lt; ObjT &gt;::Proxy</definition>
        <argsstring>(Proxy const &amp;)=default</argsstring>
        <name>Proxy</name>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">Proxy</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a8711a58bb0444c24553527b6ed9d0cfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::objgroup::proxy::Proxy&lt; ObjT &gt;::Proxy</definition>
        <argsstring>(Proxy &amp;&amp;)=default</argsstring>
        <name>Proxy</name>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">Proxy</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a2fb8dafa11b8c8f70888118bdc2f1b60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">Proxy</ref> &amp;</type>
        <definition>Proxy&amp; vt::objgroup::proxy::Proxy&lt; ObjT &gt;::operator=</definition>
        <argsstring>(Proxy const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">Proxy</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1ab76d59446c73ebf1cea9c80fd70fbd6b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::objgroup::proxy::Proxy&lt; ObjT &gt;::Proxy</definition>
        <argsstring>(ObjGroupProxyType in_proxy)</argsstring>
        <name>Proxy</name>
        <param>
          <type><ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref></type>
          <declname>in_proxy</declname>
        </param>
        <briefdescription>
<para>Create a new proxy, called by the system. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the proxy ID </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="91" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.h" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a0b716ca776b1f06e0d7d45afbe9e5274" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1objgroup_1a979bd9dc714fdacafc4b83f98271bc23" kindref="member">ActiveObjType</ref>&lt; MsgT, ObjT &gt;</type>
            <declname>fn</declname>
            <defname>fn</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::objgroup::proxy::Proxy&lt; ObjT &gt;::broadcast</definition>
        <argsstring>(MsgT *msg) const</argsstring>
        <name>broadcast</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Broadcast a message to all nodes to be delivered to the local object instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>raw pointer to the message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="106" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a7616a82936034b59e1b05c6b033236a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1objgroup_1a979bd9dc714fdacafc4b83f98271bc23" kindref="member">ActiveObjType</ref>&lt; MsgT, ObjT &gt;</type>
            <declname>fn</declname>
            <defname>fn</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::objgroup::proxy::Proxy&lt; ObjT &gt;::broadcast</definition>
        <argsstring>(MsgPtr&lt; MsgT &gt; msg) const</argsstring>
        <name>broadcast</name>
        <param>
          <type><ref refid="namespacevt_1a9f5ebd62ee9d6dd8829e3e1cc4f858e9" kindref="member">MsgPtr</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Broadcast a message to all nodes to be delivered to the local object instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>managed pointer to the message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="117" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a7006ef75ce5ab6b1c8f28c62f72b81a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1objgroup_1a979bd9dc714fdacafc4b83f98271bc23" kindref="member">ActiveObjType</ref>&lt; MsgT, ObjT &gt;</type>
            <declname>fn</declname>
            <defname>fn</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a1bdf8713203531d306702a024872bb08" kindref="member">PendingSendType</ref></type>
        <definition>Proxy&lt; ObjT &gt;::PendingSendType vt::objgroup::proxy::Proxy&lt; ObjT &gt;::broadcastMsg</definition>
        <argsstring>(messaging::MsgPtrThief&lt; MsgT &gt; msg) const</argsstring>
        <name>broadcastMsg</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_ptr_thief" kindref="compound">messaging::MsgPtrThief</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Broadcast a message to all nodes to be delivered to the local object instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Takes ownership of the supplied message</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="127" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1ae4f7ac79675f035f8932e11143a4c4d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1objgroup_1a979bd9dc714fdacafc4b83f98271bc23" kindref="member">ActiveObjType</ref>&lt; MsgT, ObjT &gt;</type>
            <declname>fn</declname>
            <defname>fn</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a1bdf8713203531d306702a024872bb08" kindref="member">PendingSendType</ref></type>
        <definition>Proxy&lt; ObjT &gt;::PendingSendType vt::objgroup::proxy::Proxy&lt; ObjT &gt;::broadcast</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>broadcast</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Broadcast a message to all nodes to be delivered to the local object instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>args to pass to the message constructor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="136" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a61273d407174fb496b4aed10ec6650bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OpT</type>
            <defval><ref refid="namespacevt_1_1collective_1ab9abd77f58f0ede6d24462b95d0a1989" kindref="member">collective::None</ref></defval>
          </param>
          <param>
            <type>typename MsgPtrT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a1bdf8713203531d306702a024872bb08" kindref="member">PendingSendType</ref></type>
        <definition>Proxy&lt; ObjT &gt;::PendingSendType vt::objgroup::proxy::Proxy&lt; ObjT &gt;::reduce</definition>
        <argsstring>(MsgPtrT msg, Callback&lt; MsgT &gt; cb, ReduceStamp stamp=ReduceStamp{}) const</argsstring>
        <name>reduce</name>
        <param>
          <type>MsgPtrT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a36db99df4c973d48b1118a293fff533f" kindref="member">Callback</ref>&lt; MsgT &gt;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a337be4c20cf11ff6477c7a66208cc909" kindref="member">ReduceStamp</ref></type>
          <declname>stamp</declname>
          <defval><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a337be4c20cf11ff6477c7a66208cc909" kindref="member">ReduceStamp</ref>{}</defval>
        </param>
        <briefdescription>
<para>Reduce over the objgroup instances on each node with a callback target. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the reduction message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback to trigger after the reduction is finished </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stamp</parametername>
</parameternamelist>
<parameterdescription>
<para>the stamp to identify the reduction</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the PendingSend associated with the reduce </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="154" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="89" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1adf7063db97ee8f694b5a677abd2f8543" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OpT</type>
            <defval><ref refid="namespacevt_1_1collective_1ab9abd77f58f0ede6d24462b95d0a1989" kindref="member">collective::None</ref></defval>
          </param>
          <param>
            <type>typename MsgPtrT</type>
          </param>
          <param>
            <type>typename MsgT</type>
            <defval>typename <ref refid="structvt_1_1util_1_1_msg_ptr_type" kindref="compound">util::MsgPtrType</ref>&lt;MsgPtrT&gt;::MsgType</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a1bdf8713203531d306702a024872bb08" kindref="member">PendingSendType</ref></type>
        <definition>PendingSendType vt::objgroup::proxy::Proxy&lt; ObjT &gt;::reduce</definition>
        <argsstring>(MsgPtrT msg, Callback&lt; MsgT &gt; cb, ReduceStamp stamp=ReduceStamp{}) const</argsstring>
        <name>reduce</name>
        <param>
          <type>MsgPtrT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a36db99df4c973d48b1118a293fff533f" kindref="member">Callback</ref>&lt; MsgT &gt;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a337be4c20cf11ff6477c7a66208cc909" kindref="member">ReduceStamp</ref></type>
          <declname>stamp</declname>
          <defval><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a337be4c20cf11ff6477c7a66208cc909" kindref="member">ReduceStamp</ref>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="162" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.h" bodystart="162" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a55fdba093739d439d22076815e1ad424" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OpT</type>
            <defval><ref refid="namespacevt_1_1collective_1ab9abd77f58f0ede6d24462b95d0a1989" kindref="member">collective::None</ref></defval>
          </param>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename MsgPtrT</type>
          </param>
          <param>
            <type>typename MsgT</type>
            <defval>typename <ref refid="structvt_1_1util_1_1_msg_ptr_type" kindref="compound">util::MsgPtrType</ref>&lt;MsgPtrT&gt;::MsgType</defval>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a1bdf8713203531d306702a024872bb08" kindref="member">PendingSendType</ref></type>
        <definition>Proxy&lt; ObjT &gt;::PendingSendType vt::objgroup::proxy::Proxy&lt; ObjT &gt;::reduce</definition>
        <argsstring>(MsgPtrT msg, ReduceStamp stamp=ReduceStamp{}) const</argsstring>
        <name>reduce</name>
        <param>
          <type>MsgPtrT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a337be4c20cf11ff6477c7a66208cc909" kindref="member">ReduceStamp</ref></type>
          <declname>stamp</declname>
          <defval><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a337be4c20cf11ff6477c7a66208cc909" kindref="member">ReduceStamp</ref>{}</defval>
        </param>
        <briefdescription>
<para>Reduce over the objgroup instances on each node with a functor target. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the reduction message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stamp</parametername>
</parameternamelist>
<parameterdescription>
<para>the stamp to identify the reduction</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the PendingSend associated with the reduce </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="192" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a212f464e2e25a7c89db2553362e9728c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OpT</type>
            <defval><ref refid="namespacevt_1_1collective_1ab9abd77f58f0ede6d24462b95d0a1989" kindref="member">collective::None</ref></defval>
          </param>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename MsgPtrT</type>
          </param>
          <param>
            <type>typename MsgT</type>
            <defval>typename <ref refid="structvt_1_1util_1_1_msg_ptr_type" kindref="compound">util::MsgPtrType</ref>&lt;MsgPtrT&gt;::MsgType</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a1bdf8713203531d306702a024872bb08" kindref="member">PendingSendType</ref></type>
        <definition>PendingSendType vt::objgroup::proxy::Proxy&lt; ObjT &gt;::reduce</definition>
        <argsstring>(MsgPtrT msg, ReduceStamp stamp=ReduceStamp{}) const</argsstring>
        <name>reduce</name>
        <param>
          <type>MsgPtrT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a337be4c20cf11ff6477c7a66208cc909" kindref="member">ReduceStamp</ref></type>
          <declname>stamp</declname>
          <defval><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a337be4c20cf11ff6477c7a66208cc909" kindref="member">ReduceStamp</ref>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="199" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.h" bodystart="199" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1ad481da6a8dff55801daa9250420bae9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgPtrT</type>
          </param>
          <param>
            <type>typename MsgT</type>
            <defval>typename <ref refid="structvt_1_1util_1_1_msg_ptr_type" kindref="compound">util::MsgPtrType</ref>&lt;MsgPtrT&gt;::MsgType</defval>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a1bdf8713203531d306702a024872bb08" kindref="member">PendingSendType</ref></type>
        <definition>Proxy&lt; ObjT &gt;::PendingSendType vt::objgroup::proxy::Proxy&lt; ObjT &gt;::reduce</definition>
        <argsstring>(MsgPtrT msg, ReduceStamp stamp=ReduceStamp{}) const</argsstring>
        <name>reduce</name>
        <param>
          <type>MsgPtrT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a337be4c20cf11ff6477c7a66208cc909" kindref="member">ReduceStamp</ref></type>
          <declname>stamp</declname>
          <defval><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a337be4c20cf11ff6477c7a66208cc909" kindref="member">ReduceStamp</ref>{}</defval>
        </param>
        <briefdescription>
<para>Reduce over the objgroup instance on each node with target specified in reduction message type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the reduction message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stamp</parametername>
</parameternamelist>
<parameterdescription>
<para>the stamp to identify the reduction</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the PendingSend associated with the reduce </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="224" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="114" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ObjT *</type>
        <definition>ObjT * vt::objgroup::proxy::Proxy&lt; ObjT &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
<para>Get raw pointer to the local object instance residing on the current node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Do not hold this raw pointer longer than the object group lifetime. Once the object group is destroyed the pointer will no longer be valid.</para></simplesect>
<simplesect kind="return"><para>raw pointer to the object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="236" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a76cda2351cf7801abe2ebffa1403c5b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref></type>
        <definition>ObjGroupProxyType vt::objgroup::proxy::Proxy&lt; ObjT &gt;::getProxy</definition>
        <argsstring>() const</argsstring>
        <name>getProxy</name>
        <briefdescription>
<para>Get the underlying proxy bits that are used to identify the objgroup. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the proxy ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="243" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a28d396f4a46a50150ee94ec754c1ae85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BaseT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">Proxy</ref>&lt; BaseT &gt;</type>
        <definition>Proxy&lt; BaseT &gt; vt::objgroup::proxy::Proxy&lt; ObjT &gt;::castToBase</definition>
        <argsstring>() const</argsstring>
        <name>castToBase</name>
        <briefdescription>
<para>Cast typed proxy to the base class type for this objgroup. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>base class proxy </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="251" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a6758c7979d1f69722449cb78f998cbf1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::objgroup::proxy::Proxy&lt; ObjT &gt;::destroyCollective</definition>
        <argsstring>() const</argsstring>
        <name>destroyCollective</name>
        <briefdescription>
<para>Collective destroy this objgroup instance on all nodes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="256" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a205119186cc6b5a37d91df8eaac0500f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1rdma_1_1_handle" kindref="compound">vt::rdma::Handle</ref>&lt; T &gt;</type>
        <definition>vt::rdma::Handle&lt; T &gt; vt::objgroup::proxy::Proxy&lt; ObjT &gt;::makeHandleRDMA</definition>
        <argsstring>(std::size_t count, bool is_uniform) const</argsstring>
        <name>makeHandleRDMA</name>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_uniform</declname>
        </param>
        <briefdescription>
<para>Make a new RDMA handle for this objgroup<mdash/>a collective invocation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>the local count of T for this handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_uniform</parametername>
</parameternamelist>
<parameterdescription>
<para>whether all handles have the same count</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new RDMA handle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="267" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="155" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a7510598b2915dec55b90bf9ae61c7df9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::objgroup::proxy::Proxy&lt; ObjT &gt;::destroyHandleRDMA</definition>
        <argsstring>(vt::rdma::Handle&lt; T &gt; handle) const</argsstring>
        <name>destroyHandleRDMA</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle" kindref="compound">vt::rdma::Handle</ref>&lt; T &gt;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Destroy an RDMA handle created from this objgroup. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to destroy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="275" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a087ce0f4b9d0e6c38a8e5961747ae55c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1rdma_1_1_handle_set" kindref="compound">vt::rdma::HandleSet</ref>&lt; T &gt;</type>
        <definition>vt::rdma::HandleSet&lt; T &gt; vt::objgroup::proxy::Proxy&lt; ObjT &gt;::makeHandleSetRDMA</definition>
        <argsstring>(int32_t max_elm, std::unordered_map&lt; int32_t, std::size_t &gt; const &amp;map, bool is_uniform) const</argsstring>
        <name>makeHandleSetRDMA</name>
        <param>
          <type>int32_t</type>
          <declname>max_elm</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; int32_t, std::size_t &gt; const &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_uniform</declname>
        </param>
        <briefdescription>
<para>Make a new set of RDMA handles for this objgroup<mdash/>a collective invocation. This is the overload for a potentially sparse set of handles with a non-zero starting index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">max_elm</parametername>
</parameternamelist>
<parameterdescription>
<para>the largest lookup key on any node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">map</parametername>
</parameternamelist>
<parameterdescription>
<para>a map of the handles and corresponding counts to create </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_uniform</parametername>
</parameternamelist>
<parameterdescription>
<para>whether all handles have the same count</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new RDMA handle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="289" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="173" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a297686853a318255a860cf7b2d63675c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1rdma_1_1_handle_set" kindref="compound">vt::rdma::HandleSet</ref>&lt; T &gt;</type>
        <definition>vt::rdma::HandleSet&lt; T &gt; vt::objgroup::proxy::Proxy&lt; ObjT &gt;::makeHandleSetRDMA</definition>
        <argsstring>(int32_t max_elm, std::vector&lt; std::size_t &gt; const &amp;vec, bool is_uniform) const</argsstring>
        <name>makeHandleSetRDMA</name>
        <param>
          <type>int32_t</type>
          <declname>max_elm</declname>
        </param>
        <param>
          <type>std::vector&lt; std::size_t &gt; const &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_uniform</declname>
        </param>
        <briefdescription>
<para>Make a new set of RDMA handles for this objgroup<mdash/>a collective invocation. This is the overload for a dense, start at zero set of handles to create. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">max_elm</parametername>
</parameternamelist>
<parameterdescription>
<para>the largest lookup key on any node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vec</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of the handle counts to create </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_uniform</parametername>
</parameternamelist>
<parameterdescription>
<para>whether all handles have the same count</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new RDMA handle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="307" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="186" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a9211f7a2459cfcb28f8b90dbdc77c8bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::objgroup::proxy::Proxy&lt; ObjT &gt;::destroyHandleSetRDMA</definition>
        <argsstring>(vt::rdma::HandleSet&lt; T &gt; handle) const</argsstring>
        <name>destroyHandleSetRDMA</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_set" kindref="compound">vt::rdma::HandleSet</ref>&lt; T &gt;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Destroy a set of RDMA handles created from this objgroup. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle set to destroy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="319" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a00a267a8730fe2547776ff0136ea3895" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_elm" kindref="compound">ProxyElm</ref>&lt; ObjT &gt;</type>
        <definition>ProxyElm&lt; ObjT &gt; vt::objgroup::proxy::Proxy&lt; ObjT &gt;::operator[]</definition>
        <argsstring>(NodeType node) const</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Index the proxy to get the element proxy for a particular node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired node</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an indexed proxy to that node </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="330" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1ac290e4d37f05dc1183c205a1b9ee44cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_elm" kindref="compound">ProxyElm</ref>&lt; ObjT &gt;</type>
        <definition>ProxyElm&lt; ObjT &gt; vt::objgroup::proxy::Proxy&lt; ObjT &gt;::operator()</definition>
        <argsstring>(NodeType node) const</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Index the proxy to get the element proxy for a particular node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired node</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an indexed proxy to that node </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="339" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.impl.h" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a06222ad0a05109bfb2d3542b54c2e52a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Serializer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::objgroup::proxy::Proxy&lt; ObjT &gt;::serialize</definition>
        <argsstring>(Serializer &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>Serializer &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="342" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.h" bodystart="342" bodyend="344"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A indexable proxy to object instances on all nodes that are tied together with a common ID. </para>    </briefdescription>
    <detaileddescription>
<para>After creating an objgroup, a Proxy&lt;ObjT&gt; is returned which can be used to perform distributed operations on that object instance across all nodes.</para><para>Proxies are very inexpensive to copy and move around the system. </para>    </detaileddescription>
    <location file="src/vt/objgroup/proxy/proxy_objgroup.h" line="76" column="1" bodyfile="src/vt/objgroup/proxy/proxy_objgroup.h" bodystart="76" bodyend="348"/>
    <listofallmembers>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a0b716ca776b1f06e0d7d45afbe9e5274" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>broadcast</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a7616a82936034b59e1b05c6b033236a2" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>broadcast</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1ae4f7ac79675f035f8932e11143a4c4d3" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>broadcast</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a7006ef75ce5ab6b1c8f28c62f72b81a6" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>broadcastMsg</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a28d396f4a46a50150ee94ec754c1ae85" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>castToBase</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a6758c7979d1f69722449cb78f998cbf1" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>destroyCollective</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a7510598b2915dec55b90bf9ae61c7df9" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>destroyHandleRDMA</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a9211f7a2459cfcb28f8b90dbdc77c8bc" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>destroyHandleSetRDMA</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>get</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a76cda2351cf7801abe2ebffa1403c5b8" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>getProxy</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a205119186cc6b5a37d91df8eaac0500f" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>makeHandleRDMA</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a087ce0f4b9d0e6c38a8e5961747ae55c" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>makeHandleSetRDMA</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a297686853a318255a860cf7b2d63675c" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>makeHandleSetRDMA</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a6f11b9652eee64f87bdff5a83fe1f7bb" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>ObjGroupType</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1ac290e4d37f05dc1183c205a1b9ee44cd" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>operator()</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a2fb8dafa11b8c8f70888118bdc2f1b60" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>operator=</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a00a267a8730fe2547776ff0136ea3895" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>operator[]</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a1bdf8713203531d306702a024872bb08" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>PendingSendType</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a5450776d9cabb2556765c0d0227c9589" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>Proxy</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1ad12a9b75a3c4844144d7a159b11af5ec" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>Proxy</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a8711a58bb0444c24553527b6ed9d0cfb" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>Proxy</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1ab76d59446c73ebf1cea9c80fd70fbd6b" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>Proxy</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a4411a5c2a4719d264060041fd15d9d03" prot="private" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>proxy_</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a61273d407174fb496b4aed10ec6650bd" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>reduce</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1adf7063db97ee8f694b5a677abd2f8543" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>reduce</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a55fdba093739d439d22076815e1ad424" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>reduce</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a212f464e2e25a7c89db2553362e9728c" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>reduce</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1ad481da6a8dff55801daa9250420bae9c" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>reduce</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a337be4c20cf11ff6477c7a66208cc909" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>ReduceStamp</name></member>
      <member refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a06222ad0a05109bfb2d3542b54c2e52a" prot="public" virt="non-virtual"><scope>vt::objgroup::proxy::Proxy</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
