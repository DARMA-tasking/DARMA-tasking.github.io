<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="invoke_8h" kind="file" language="C++">
    <compoundname>invoke.h</compoundname>
    <includes refid="config_8h" local="yes">vt/config.h</includes>
    <includes refid="demangle_8h" local="yes">vt/utils/demangle/demangle.h</includes>
    <includes refid="function__ret__check_8h" local="yes">vt/utils/static_checks/function_ret_check.h</includes>
    <includes refid="trace__registry_8h" local="yes">vt/trace/trace_registry.h</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="objgroup_2manager_8impl_8h" local="yes">src/vt/objgroup/manager.impl.h</includedby>
    <includedby refid="vrt_2collection_2manager_8h" local="yes">src/vt/vrt/collection/manager.h</includedby>
    <includedby refid="vrt_2collection_2manager_8impl_8h" local="yes">src/vt/vrt/collection/manager.impl.h</includedby>
    <incdepgraph>
      <node id="202497">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
      </node>
      <node id="202507">
        <label>functional</label>
      </node>
      <node id="202513">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="202502" relation="include">
        </childnode>
        <childnode refid="202506" relation="include">
        </childnode>
        <childnode refid="202503" relation="include">
        </childnode>
      </node>
      <node id="202544">
        <label>vt/trace/trace_event.h</label>
        <link refid="trace__event_8h"/>
        <childnode refid="202541" relation="include">
        </childnode>
        <childnode refid="202503" relation="include">
        </childnode>
      </node>
      <node id="202502">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="202503" relation="include">
        </childnode>
        <childnode refid="202504" relation="include">
        </childnode>
      </node>
      <node id="202538">
        <label>assert.h</label>
      </node>
      <node id="202496">
        <label>cstdint</label>
      </node>
      <node id="202540">
        <label>vt/trace/trace_registry.h</label>
        <link refid="trace__registry_8h"/>
        <childnode refid="202541" relation="include">
        </childnode>
        <childnode refid="202543" relation="include">
        </childnode>
      </node>
      <node id="202532">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="202518" relation="include">
        </childnode>
        <childnode refid="202506" relation="include">
        </childnode>
        <childnode refid="202526" relation="include">
        </childnode>
        <childnode refid="202531" relation="include">
        </childnode>
        <childnode refid="202533" relation="include">
        </childnode>
        <childnode refid="202513" relation="include">
        </childnode>
        <childnode refid="202530" relation="include">
        </childnode>
        <childnode refid="202509" relation="include">
        </childnode>
        <childnode refid="202523" relation="include">
        </childnode>
        <childnode refid="202503" relation="include">
        </childnode>
        <childnode refid="202535" relation="include">
        </childnode>
        <childnode refid="202515" relation="include">
        </childnode>
      </node>
      <node id="202530">
        <label>cassert</label>
      </node>
      <node id="202527">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="202518" relation="include">
        </childnode>
        <childnode refid="202506" relation="include">
        </childnode>
        <childnode refid="202526" relation="include">
        </childnode>
        <childnode refid="202528" relation="include">
        </childnode>
        <childnode refid="202513" relation="include">
        </childnode>
        <childnode refid="202520" relation="include">
        </childnode>
        <childnode refid="202509" relation="include">
        </childnode>
        <childnode refid="202523" relation="include">
        </childnode>
        <childnode refid="202503" relation="include">
        </childnode>
        <childnode refid="202530" relation="include">
        </childnode>
        <childnode refid="202515" relation="include">
        </childnode>
      </node>
      <node id="202510">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="202511" relation="include">
        </childnode>
      </node>
      <node id="202518">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="202505" relation="include">
        </childnode>
        <childnode refid="202519" relation="include">
        </childnode>
      </node>
      <node id="202511">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
      </node>
      <node id="202516">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="202517" relation="include">
        </childnode>
        <childnode refid="202521" relation="include">
        </childnode>
        <childnode refid="202525" relation="include">
        </childnode>
      </node>
      <node id="202503">
        <label>string</label>
      </node>
      <node id="202539">
        <label>vt/utils/static_checks/function_ret_check.h</label>
        <link refid="function__ret__check_8h"/>
        <childnode refid="202523" relation="include">
        </childnode>
      </node>
      <node id="202533">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="202518" relation="include">
        </childnode>
        <childnode refid="202495" relation="include">
        </childnode>
        <childnode refid="202529" relation="include">
        </childnode>
        <childnode refid="202509" relation="include">
        </childnode>
        <childnode refid="202523" relation="include">
        </childnode>
        <childnode refid="202503" relation="include">
        </childnode>
        <childnode refid="202504" relation="include">
        </childnode>
        <childnode refid="202534" relation="include">
        </childnode>
      </node>
      <node id="202534">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="202533" relation="include">
        </childnode>
        <childnode refid="202513" relation="include">
        </childnode>
        <childnode refid="202529" relation="include">
        </childnode>
        <childnode refid="202509" relation="include">
        </childnode>
        <childnode refid="202523" relation="include">
        </childnode>
        <childnode refid="202503" relation="include">
        </childnode>
        <childnode refid="202504" relation="include">
        </childnode>
        <childnode refid="202515" relation="include">
        </childnode>
      </node>
      <node id="202499">
        <label>vt/configs/features/features_enableif.h</label>
        <link refid="features__enableif_8h"/>
        <childnode refid="202498" relation="include">
        </childnode>
      </node>
      <node id="202495">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="202496" relation="include">
        </childnode>
        <childnode refid="202497" relation="include">
        </childnode>
        <childnode refid="202498" relation="include">
        </childnode>
        <childnode refid="202499" relation="include">
        </childnode>
        <childnode refid="202500" relation="include">
        </childnode>
      </node>
      <node id="202512">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="202493" relation="include">
        </childnode>
        <childnode refid="202506" relation="include">
        </childnode>
        <childnode refid="202508" relation="include">
        </childnode>
      </node>
      <node id="202515">
        <label>fmt/core.h</label>
      </node>
      <node id="202493">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="202494" relation="include">
        </childnode>
        <childnode refid="202495" relation="include">
        </childnode>
        <childnode refid="202501" relation="include">
        </childnode>
      </node>
      <node id="202536">
        <label>vt/utils/demangle/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="202492" relation="include">
        </childnode>
        <childnode refid="202503" relation="include">
        </childnode>
        <childnode refid="202504" relation="include">
        </childnode>
        <childnode refid="202537" relation="include">
        </childnode>
        <childnode refid="202529" relation="include">
        </childnode>
        <childnode refid="202538" relation="include">
        </childnode>
      </node>
      <node id="202519">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="202503" relation="include">
        </childnode>
      </node>
      <node id="202506">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="202496" relation="include">
        </childnode>
        <childnode refid="202507" relation="include">
        </childnode>
      </node>
      <node id="202522">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="202505" relation="include">
        </childnode>
        <childnode refid="202495" relation="include">
        </childnode>
        <childnode refid="202518" relation="include">
        </childnode>
        <childnode refid="202503" relation="include">
        </childnode>
        <childnode refid="202509" relation="include">
        </childnode>
        <childnode refid="202523" relation="include">
        </childnode>
        <childnode refid="202524" relation="include">
        </childnode>
      </node>
      <node id="202514">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
      </node>
      <node id="202517">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="202506" relation="include">
        </childnode>
        <childnode refid="202518" relation="include">
        </childnode>
        <childnode refid="202520" relation="include">
        </childnode>
        <childnode refid="202503" relation="include">
        </childnode>
        <childnode refid="202515" relation="include">
        </childnode>
      </node>
      <node id="202541">
        <label>vt/trace/trace_common.h</label>
        <link refid="trace__common_8h"/>
        <childnode refid="202506" relation="include">
        </childnode>
        <childnode refid="202496" relation="include">
        </childnode>
        <childnode refid="202542" relation="include">
        </childnode>
      </node>
      <node id="202509">
        <label>tuple</label>
      </node>
      <node id="202501">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="202502" relation="include">
        </childnode>
        <childnode refid="202505" relation="include">
        </childnode>
        <childnode refid="202495" relation="include">
        </childnode>
        <childnode refid="202513" relation="include">
        </childnode>
        <childnode refid="202514" relation="include">
        </childnode>
        <childnode refid="202515" relation="include">
        </childnode>
      </node>
      <node id="202504">
        <label>vector</label>
      </node>
      <node id="202543">
        <label>vt/trace/trace_containers.h</label>
        <link refid="trace__containers_8h"/>
        <childnode refid="202492" relation="include">
        </childnode>
        <childnode refid="202541" relation="include">
        </childnode>
        <childnode refid="202544" relation="include">
        </childnode>
        <childnode refid="202545" relation="include">
        </childnode>
      </node>
      <node id="202535">
        <label>sstream</label>
      </node>
      <node id="202494">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="202528">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="202529" relation="include">
        </childnode>
        <childnode refid="202504" relation="include">
        </childnode>
        <childnode refid="202509" relation="include">
        </childnode>
      </node>
      <node id="202498">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
      </node>
      <node id="202529">
        <label>cstdlib</label>
      </node>
      <node id="202521">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="202518" relation="include">
        </childnode>
        <childnode refid="202522" relation="include">
        </childnode>
        <childnode refid="202509" relation="include">
        </childnode>
      </node>
      <node id="202542">
        <label>cstddef</label>
      </node>
      <node id="202545">
        <label>unordered_map</label>
      </node>
      <node id="202505">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="202506" relation="include">
        </childnode>
        <childnode refid="202508" relation="include">
        </childnode>
        <childnode refid="202510" relation="include">
        </childnode>
        <childnode refid="202512" relation="include">
        </childnode>
      </node>
      <node id="202526">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="202506" relation="include">
        </childnode>
        <childnode refid="202518" relation="include">
        </childnode>
        <childnode refid="202509" relation="include">
        </childnode>
        <childnode refid="202523" relation="include">
        </childnode>
        <childnode refid="202503" relation="include">
        </childnode>
        <childnode refid="202527" relation="include">
        </childnode>
      </node>
      <node id="202508">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="202493" relation="include">
        </childnode>
        <childnode refid="202506" relation="include">
        </childnode>
        <childnode refid="202496" relation="include">
        </childnode>
        <childnode refid="202507" relation="include">
        </childnode>
        <childnode refid="202509" relation="include">
        </childnode>
      </node>
      <node id="202523">
        <label>type_traits</label>
      </node>
      <node id="202520">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="202505" relation="include">
        </childnode>
        <childnode refid="202503" relation="include">
        </childnode>
      </node>
      <node id="202491">
        <label>src/vt/runnable/invoke.h</label>
        <link refid="invoke_8h"/>
        <childnode refid="202492" relation="include">
        </childnode>
        <childnode refid="202536" relation="include">
        </childnode>
        <childnode refid="202539" relation="include">
        </childnode>
        <childnode refid="202540" relation="include">
        </childnode>
        <childnode refid="202523" relation="include">
        </childnode>
      </node>
      <node id="202492">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="202493" relation="include">
        </childnode>
        <childnode refid="202505" relation="include">
        </childnode>
        <childnode refid="202516" relation="include">
        </childnode>
      </node>
      <node id="202500">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="202537">
        <label>cstring</label>
      </node>
      <node id="202525">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="202495" relation="include">
        </childnode>
        <childnode refid="202506" relation="include">
        </childnode>
        <childnode refid="202518" relation="include">
        </childnode>
        <childnode refid="202526" relation="include">
        </childnode>
        <childnode refid="202531" relation="include">
        </childnode>
        <childnode refid="202533" relation="include">
        </childnode>
        <childnode refid="202509" relation="include">
        </childnode>
        <childnode refid="202523" relation="include">
        </childnode>
      </node>
      <node id="202531">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="202518" relation="include">
        </childnode>
        <childnode refid="202506" relation="include">
        </childnode>
        <childnode refid="202509" relation="include">
        </childnode>
        <childnode refid="202503" relation="include">
        </childnode>
        <childnode refid="202532" relation="include">
        </childnode>
      </node>
      <node id="202524">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="202505" relation="include">
        </childnode>
        <childnode refid="202495" relation="include">
        </childnode>
        <childnode refid="202518" relation="include">
        </childnode>
        <childnode refid="202522" relation="include">
        </childnode>
        <childnode refid="202520" relation="include">
        </childnode>
        <childnode refid="202503" relation="include">
        </childnode>
        <childnode refid="202509" relation="include">
        </childnode>
        <childnode refid="202523" relation="include">
        </childnode>
        <childnode refid="202515" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="202557">
        <label>src/vt/vrt/collection/balance/greedylb/greedylb.h</label>
        <link refid="greedylb_8h"/>
        <childnode refid="202558" relation="include">
        </childnode>
        <childnode refid="202559" relation="include">
        </childnode>
      </node>
      <node id="202563">
        <label>src/vt/vrt/collection/balance/elm_stats.impl.h</label>
        <link refid="elm__stats_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202603">
        <label>src/vt/rdmahandle/handle.impl.h</label>
        <link refid="handle_8impl_8h"/>
        <childnode refid="202604" relation="include">
        </childnode>
      </node>
      <node id="202576">
        <label>src/vt/vrt/collection/collection_headers.h</label>
        <link refid="collection__headers_8h"/>
        <childnode refid="202577" relation="include">
        </childnode>
        <childnode refid="202551" relation="include">
        </childnode>
        <childnode refid="202553" relation="include">
        </childnode>
      </node>
      <node id="202610">
        <label>src/vt/trace/file_spec/spec.cc</label>
        <link refid="spec_8cc"/>
      </node>
      <node id="202611">
        <label>src/vt/vrt/collection/balance/stats_restart_reader.cc</label>
        <link refid="stats__restart__reader_8cc"/>
      </node>
      <node id="202550">
        <label>src/vt/phase/phase_manager.cc</label>
        <link refid="phase__manager_8cc"/>
      </node>
      <node id="202578">
        <label>src/vt/vrt/collection/destroy/destroyable.impl.h</label>
        <link refid="destroyable_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202564">
        <label>src/vt/vrt/collection/manager.h</label>
        <link refid="vrt_2collection_2manager_8h"/>
        <childnode refid="202565" relation="include">
        </childnode>
        <childnode refid="202566" relation="include">
        </childnode>
        <childnode refid="202567" relation="include">
        </childnode>
        <childnode refid="202568" relation="include">
        </childnode>
        <childnode refid="202569" relation="include">
        </childnode>
        <childnode refid="202570" relation="include">
        </childnode>
        <childnode refid="202563" relation="include">
        </childnode>
        <childnode refid="202558" relation="include">
        </childnode>
        <childnode refid="202561" relation="include">
        </childnode>
        <childnode refid="202559" relation="include">
        </childnode>
        <childnode refid="202571" relation="include">
        </childnode>
        <childnode refid="202572" relation="include">
        </childnode>
        <childnode refid="202573" relation="include">
        </childnode>
        <childnode refid="202574" relation="include">
        </childnode>
        <childnode refid="202576" relation="include">
        </childnode>
        <childnode refid="202578" relation="include">
        </childnode>
        <childnode refid="202579" relation="include">
        </childnode>
        <childnode refid="202580" relation="include">
        </childnode>
        <childnode refid="202581" relation="include">
        </childnode>
        <childnode refid="202582" relation="include">
        </childnode>
        <childnode refid="202583" relation="include">
        </childnode>
        <childnode refid="202584" relation="include">
        </childnode>
        <childnode refid="202575" relation="include">
        </childnode>
        <childnode refid="202585" relation="include">
        </childnode>
        <childnode refid="202586" relation="include">
        </childnode>
        <childnode refid="202587" relation="include">
        </childnode>
        <childnode refid="202588" relation="include">
        </childnode>
      </node>
      <node id="202574">
        <label>src/vt/vrt/collection/collection_builder.impl.h</label>
        <link refid="collection__builder_8impl_8h"/>
        <childnode refid="202575" relation="include">
        </childnode>
      </node>
      <node id="202570">
        <label>src/vt/scheduler/scheduler.cc</label>
        <link refid="scheduler_8cc"/>
      </node>
      <node id="202577">
        <label>src/vt/runtime/runtime.cc</label>
        <link refid="runtime_8cc"/>
      </node>
      <node id="202605">
        <label>src/vt/rdmahandle/manager.impl.h</label>
        <link refid="rdmahandle_2manager_8impl_8h"/>
        <childnode refid="202604" relation="include">
        </childnode>
      </node>
      <node id="202566">
        <label>src/vt/context/runnable_context/lb_stats.impl.h</label>
        <link refid="lb__stats_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202586">
        <label>src/vt/vrt/collection/send/sendable.impl.h</label>
        <link refid="sendable_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202608">
        <label>src/vt/topos/mapping/dense/unbounded_default.impl.h</label>
        <link refid="unbounded__default_8impl_8h"/>
        <childnode refid="202609" relation="include">
        </childnode>
      </node>
      <node id="202572">
        <label>src/vt/vrt/collection/balance/rotatelb/rotatelb.cc</label>
        <link refid="rotatelb_8cc"/>
      </node>
      <node id="202562">
        <label>src/vt/vrt/collection/balance/lb_invoke/lb_manager.h</label>
        <link refid="lb__manager_8h"/>
        <childnode refid="202556" relation="include">
        </childnode>
        <childnode refid="202563" relation="include">
        </childnode>
        <childnode refid="202559" relation="include">
        </childnode>
        <childnode refid="202584" relation="include">
        </childnode>
      </node>
      <node id="202604">
        <label>src/vt/rdmahandle/manager.h</label>
        <link refid="rdmahandle_2manager_8h"/>
        <childnode refid="202598" relation="include">
        </childnode>
        <childnode refid="202603" relation="include">
        </childnode>
        <childnode refid="202600" relation="include">
        </childnode>
        <childnode refid="202569" relation="include">
        </childnode>
        <childnode refid="202605" relation="include">
        </childnode>
        <childnode refid="202577" relation="include">
        </childnode>
        <childnode refid="202553" relation="include">
        </childnode>
        <childnode refid="202606" relation="include">
        </childnode>
      </node>
      <node id="202568">
        <label>src/vt/pipe/callback/proxy_send/callback_proxy_send.impl.h</label>
        <link refid="callback__proxy__send_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202598">
        <label>src/vt/objgroup/proxy/proxy_objgroup.impl.h</label>
        <link refid="proxy__objgroup_8impl_8h"/>
        <childnode refid="202548" relation="include">
        </childnode>
      </node>
      <node id="202585">
        <label>src/vt/vrt/collection/reducable/reducable.impl.h</label>
        <link refid="reducable_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202581">
        <label>src/vt/vrt/collection/insert/insertable.impl.h</label>
        <link refid="insertable_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202609">
        <label>src/vt/topos/mapping/dense/unbounded_default.h</label>
        <link refid="unbounded__default_8h"/>
        <childnode refid="202574" relation="include">
        </childnode>
      </node>
      <node id="202607">
        <label>src/vt/runnable/runnable.cc</label>
        <link refid="runnable_8cc"/>
      </node>
      <node id="202575">
        <label>src/vt/vrt/collection/manager.impl.h</label>
        <link refid="vrt_2collection_2manager_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202551">
        <label>src/vt/runtime/runtime_get.cc</label>
        <link refid="runtime__get_8cc"/>
      </node>
      <node id="202547">
        <label>src/vt/objgroup/manager.impl.h</label>
        <link refid="objgroup_2manager_8impl_8h"/>
        <childnode refid="202548" relation="include">
        </childnode>
      </node>
      <node id="202558">
        <label>src/vt/vrt/collection/balance/greedylb/greedylb.cc</label>
        <link refid="greedylb_8cc"/>
      </node>
      <node id="202579">
        <label>src/vt/vrt/collection/dispatch/dispatch.impl.h</label>
        <link refid="src_2vt_2vrt_2collection_2dispatch_2dispatch_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202588">
        <label>src/vt/vrt/collection/types/migratable.cc</label>
        <link refid="migratable_8cc"/>
      </node>
      <node id="202549">
        <label>src/vt/objgroup/headers.h</label>
        <link refid="objgroup_2headers_8h"/>
        <childnode refid="202550" relation="include">
        </childnode>
        <childnode refid="202551" relation="include">
        </childnode>
        <childnode refid="202552" relation="include">
        </childnode>
        <childnode refid="202553" relation="include">
        </childnode>
        <childnode refid="202555" relation="include">
        </childnode>
        <childnode refid="202561" relation="include">
        </childnode>
        <childnode refid="202560" relation="include">
        </childnode>
      </node>
      <node id="202600">
        <label>src/vt/rdmahandle/manager.cc</label>
        <link refid="rdmahandle_2manager_8cc"/>
      </node>
      <node id="202556">
        <label>src/vt/vrt/collection/balance/baselb/baselb.cc</label>
        <link refid="baselb_8cc"/>
      </node>
      <node id="202594">
        <label>src/vt/vrt/collection/balance/temperedlb/temperedlb.h</label>
        <link refid="temperedlb_8h"/>
        <childnode refid="202559" relation="include">
        </childnode>
        <childnode refid="202593" relation="include">
        </childnode>
      </node>
      <node id="202601">
        <label>src/vt/rdmahandle/sub_handle.impl.h</label>
        <link refid="sub__handle_8impl_8h"/>
        <childnode refid="202602" relation="include">
        </childnode>
      </node>
      <node id="202580">
        <label>src/vt/vrt/collection/gettable/gettable.impl.h</label>
        <link refid="gettable_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202595">
        <label>src/vt/vrt/collection/balance/zoltanlb/zoltanlb.h</label>
        <link refid="zoltanlb_8h"/>
        <childnode refid="202559" relation="include">
        </childnode>
        <childnode refid="202596" relation="include">
        </childnode>
      </node>
      <node id="202589">
        <label>src/vt/vrt/collection/balance/randomlb/randomlb.h</label>
        <link refid="randomlb_8h"/>
        <childnode refid="202559" relation="include">
        </childnode>
        <childnode refid="202590" relation="include">
        </childnode>
      </node>
      <node id="202590">
        <label>src/vt/vrt/collection/balance/randomlb/randomlb.cc</label>
        <link refid="randomlb_8cc"/>
      </node>
      <node id="202596">
        <label>src/vt/vrt/collection/balance/zoltanlb/zoltanlb.cc</label>
        <link refid="zoltanlb_8cc"/>
      </node>
      <node id="202583">
        <label>src/vt/vrt/collection/invoke/invokable.impl.h</label>
        <link refid="invokable_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202554">
        <label>src/vt/vt.h</label>
        <link refid="vt_8h"/>
      </node>
      <node id="202573">
        <label>src/vt/vrt/collection/broadcast/broadcastable.impl.h</label>
        <link refid="broadcastable_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202592">
        <label>src/vt/vrt/collection/balance/statsmaplb/statsmaplb.cc</label>
        <link refid="statsmaplb_8cc"/>
      </node>
      <node id="202584">
        <label>src/vt/vrt/collection/manager.cc</label>
        <link refid="vrt_2collection_2manager_8cc"/>
      </node>
      <node id="202597">
        <label>src/vt/objgroup/manager.cc</label>
        <link refid="objgroup_2manager_8cc"/>
      </node>
      <node id="202606">
        <label>src/vt/vrt/collection/rdmaable/rdmaable.impl.h</label>
        <link refid="rdmaable_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202591">
        <label>src/vt/vrt/collection/balance/rotatelb/rotatelb.h</label>
        <link refid="rotatelb_8h"/>
        <childnode refid="202559" relation="include">
        </childnode>
        <childnode refid="202572" relation="include">
        </childnode>
      </node>
      <node id="202548">
        <label>src/vt/objgroup/manager.h</label>
        <link refid="objgroup_2manager_8h"/>
        <childnode refid="202549" relation="include">
        </childnode>
        <childnode refid="202597" relation="include">
        </childnode>
        <childnode refid="202547" relation="include">
        </childnode>
        <childnode refid="202598" relation="include">
        </childnode>
        <childnode refid="202599" relation="include">
        </childnode>
        <childnode refid="202600" relation="include">
        </childnode>
        <childnode refid="202601" relation="include">
        </childnode>
        <childnode refid="202607" relation="include">
        </childnode>
        <childnode refid="202577" relation="include">
        </childnode>
        <childnode refid="202608" relation="include">
        </childnode>
        <childnode refid="202610" relation="include">
        </childnode>
        <childnode refid="202611" relation="include">
        </childnode>
      </node>
      <node id="202567">
        <label>src/vt/pipe/callback/proxy_bcast/callback_proxy_bcast.impl.h</label>
        <link refid="callback__proxy__bcast_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202565">
        <label>src/vt/context/runnable_context/lb_stats.cc</label>
        <link refid="lb__stats_8cc"/>
      </node>
      <node id="202599">
        <label>src/vt/objgroup/proxy/proxy_objgroup_elm.impl.h</label>
        <link refid="proxy__objgroup__elm_8impl_8h"/>
        <childnode refid="202548" relation="include">
        </childnode>
      </node>
      <node id="202587">
        <label>src/vt/vrt/collection/types/indexable.impl.h</label>
        <link refid="indexable_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202552">
        <label>src/vt/trace/trace.cc</label>
        <link refid="trace_2trace_8cc"/>
      </node>
      <node id="202561">
        <label>src/vt/vrt/collection/balance/hierarchicallb/hierlb.cc</label>
        <link refid="hierlb_8cc"/>
      </node>
      <node id="202571">
        <label>src/vt/vrt/collection/balance/node_stats.cc</label>
        <link refid="node__stats_8cc"/>
      </node>
      <node id="202546">
        <label>src/vt/runnable/invoke.h</label>
        <link refid="invoke_8h"/>
        <childnode refid="202547" relation="include">
        </childnode>
        <childnode refid="202564" relation="include">
        </childnode>
        <childnode refid="202575" relation="include">
        </childnode>
      </node>
      <node id="202559">
        <label>src/vt/vrt/collection/balance/lb_invoke/lb_manager.cc</label>
        <link refid="lb__manager_8cc"/>
      </node>
      <node id="202560">
        <label>src/vt/vrt/collection/balance/hierarchicallb/hierlb.h</label>
        <link refid="hierlb_8h"/>
        <childnode refid="202561" relation="include">
        </childnode>
        <childnode refid="202559" relation="include">
        </childnode>
      </node>
      <node id="202602">
        <label>src/vt/rdmahandle/sub_handle.h</label>
        <link refid="sub__handle_8h"/>
        <childnode refid="202603" relation="include">
        </childnode>
        <childnode refid="202569" relation="include">
        </childnode>
        <childnode refid="202605" relation="include">
        </childnode>
      </node>
      <node id="202555">
        <label>src/vt/vrt/collection/balance/baselb/baselb.h</label>
        <link refid="baselb_8h"/>
        <childnode refid="202556" relation="include">
        </childnode>
        <childnode refid="202557" relation="include">
        </childnode>
        <childnode refid="202560" relation="include">
        </childnode>
        <childnode refid="202562" relation="include">
        </childnode>
        <childnode refid="202589" relation="include">
        </childnode>
        <childnode refid="202591" relation="include">
        </childnode>
        <childnode refid="202592" relation="include">
        </childnode>
        <childnode refid="202593" relation="include">
        </childnode>
        <childnode refid="202594" relation="include">
        </childnode>
        <childnode refid="202595" relation="include">
        </childnode>
      </node>
      <node id="202553">
        <label>src/vt/transport.h</label>
        <link refid="transport_8h"/>
        <childnode refid="202554" relation="include">
        </childnode>
      </node>
      <node id="202593">
        <label>src/vt/vrt/collection/balance/temperedlb/temperedlb.cc</label>
        <link refid="temperedlb_8cc"/>
      </node>
      <node id="202582">
        <label>src/vt/vrt/collection/insert/modifyable.impl.h</label>
        <link refid="modifyable_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
      <node id="202569">
        <label>src/vt/rdmahandle/manager.collection.impl.h</label>
        <link refid="manager_8collection_8impl_8h"/>
        <childnode refid="202564" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structvt_1_1runnable_1_1_callable_wrapper" prot="public">vt::runnable::CallableWrapper</innerclass>
    <innerclass refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4" prot="public">vt::runnable::CallableWrapper&lt; Ret(*)(Args...), f &gt;</innerclass>
    <innerclass refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_class_1_1_5_08_07_args_8_8_8_08_00_01f_01_4" prot="public">vt::runnable::CallableWrapper&lt; Ret(Class::*)(Args...), f &gt;</innerclass>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1runnable">vt::runnable</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invoke.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2021<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_VT_RUNNABLE_INVOKE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_VT_RUNNABLE_INVOKE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">vt/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="demangle_8h" kindref="compound">vt/utils/demangle/demangle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="function__ret__check_8h" kindref="compound">vt/utils/static_checks/function_ret_check.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trace__registry_8h" kindref="compound">vt/trace/trace_registry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="namespacevt_1_1runnable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">runnable<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FunctionType,<sp/>FunctionType<sp/>f&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>CreatetEventTypeCStyleFunc()<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>TE<sp/>=<sp/><ref refid="structvt_1_1util_1_1demangle_1_1_template_extract" kindref="compound">vt::util::demangle::TemplateExtract</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DU<sp/>=<sp/><ref refid="structvt_1_1util_1_1demangle_1_1_demangler_utils" kindref="compound">vt::util::demangle::DemanglerUtils</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ns<sp/>=<sp/>TE::getNamespace(TE::getValueName&lt;std::decay_t&lt;FunctionType&gt;,<sp/>f&gt;());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ns.empty())</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>ns<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;(none)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DU::removeSpaces(ns);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Class&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>CreatetEventTypeMemberFunc()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>TE<sp/>=<sp/><ref refid="structvt_1_1util_1_1demangle_1_1_template_extract" kindref="compound">vt::util::demangle::TemplateExtract</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DU<sp/>=<sp/><ref refid="structvt_1_1util_1_1demangle_1_1_demangler_utils" kindref="compound">vt::util::demangle::DemanglerUtils</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>typeName<sp/>=<sp/>TE::getTypeName&lt;std::decay_t&lt;Class&gt;&gt;();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typeName.empty())</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>typeName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;(none)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DU::removeSpaces(typeName);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FunctionType,<sp/>FunctionType<sp/>f,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>CreateEventName()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>TE<sp/>=<sp/><ref refid="structvt_1_1util_1_1demangle_1_1_template_extract" kindref="compound">vt::util::demangle::TemplateExtract</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DU<sp/>=<sp/><ref refid="structvt_1_1util_1_1demangle_1_1_demangler_utils" kindref="compound">vt::util::demangle::DemanglerUtils</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>arg_types<sp/>=<sp/>{TE::getTypeName&lt;Args&gt;()...};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>argsV<sp/>=<sp/>DU::join(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,<sp/>arg_types);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>valueName<sp/>=<sp/>TE::getValueName&lt;FunctionType,<sp/>f&gt;();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>barename<sp/>=<sp/>TE::getBarename(valueName);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DU::removeSpaces(barename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>+<sp/>argsV<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FunctionType,<sp/>FunctionType<sp/>f&gt;</highlight></codeline>
<codeline lineno="94" refid="structvt_1_1runnable_1_1_callable_wrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1runnable_1_1_callable_wrapper" kindref="compound">CallableWrapper</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Ret,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args,<sp/>Ret<sp/>(*f)(Args...)&gt;</highlight></codeline>
<codeline lineno="97" refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1runnable_1_1_callable_wrapper" kindref="compound">CallableWrapper</ref>&lt;Ret(*)(Args...),<sp/>f&gt;<sp/>{</highlight></codeline>
<codeline lineno="98" refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1a938ed1b338498b8a181a98b03044a868" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1a938ed1b338498b8a181a98b03044a868" kindref="member">Type</ref><sp/>=<sp/>Ret(*)(Args...);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1a868f1b55c864d4ec4cb0f3198daabf36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1a868f1b55c864d4ec4cb0f3198daabf36" kindref="member">GetEventTypeName</ref>()<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreatetEventTypeCStyleFunc&lt;Type,<sp/>f&gt;();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1aec3ca15a6d06c597a19baa33f482d73c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1aec3ca15a6d06c597a19baa33f482d73c" kindref="member">GetEventName</ref>()<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateEventName&lt;<ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">Type</ref>,<sp/>f,<sp/>Args...&gt;();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1abb931e8a586cb613b27359d8993bb623" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1trace_1a3c14050715ba9eceaeff51fb3de64f2f" kindref="member">trace::TraceEntryIDType</ref><sp/><ref refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1abb931e8a586cb613b27359d8993bb623" kindref="member">GetTraceID</ref>()<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_registry_1a557118b7661378a6c74ed693b87c3d83" kindref="member">trace::TraceRegistry::registerEventHashed</ref>(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetEventTypeName(),<sp/>GetEventName()</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Ret,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Class,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args,<sp/>Ret<sp/>(Class::*f)(Args...)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="118" refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_class_1_1_5_08_07_args_8_8_8_08_00_01f_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1runnable_1_1_callable_wrapper" kindref="compound">CallableWrapper</ref>&lt;Ret<sp/>(Class::*)(Args...),<sp/>f&gt;<sp/>{</highlight></codeline>
<codeline lineno="119" refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_class_1_1_5_08_07_args_8_8_8_08_00_01f_01_4_1a48718cefa1c892ac7bc1a5f12880e206" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_class_1_1_5_08_07_args_8_8_8_08_00_01f_01_4_1a48718cefa1c892ac7bc1a5f12880e206" kindref="member">Type</ref><sp/>=<sp/>Ret<sp/>(Class::*)(Args...);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_class_1_1_5_08_07_args_8_8_8_08_00_01f_01_4_1a0c08379ceb7a7d040708ab70bcf91613" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_class_1_1_5_08_07_args_8_8_8_08_00_01f_01_4_1a0c08379ceb7a7d040708ab70bcf91613" kindref="member">GetEventTypeName</ref>()<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreatetEventTypeMemberFunc&lt;Class&gt;();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_class_1_1_5_08_07_args_8_8_8_08_00_01f_01_4_1a2cd81ad76e4e93b63af736e539ad8dd6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_class_1_1_5_08_07_args_8_8_8_08_00_01f_01_4_1a2cd81ad76e4e93b63af736e539ad8dd6" kindref="member">GetEventName</ref>()<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateEventName&lt;<ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">Type</ref>,<sp/>f,<sp/>Args...&gt;();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_class_1_1_5_08_07_args_8_8_8_08_00_01f_01_4_1ac995f6f81128dc8df45ce13361122f50" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1trace_1a3c14050715ba9eceaeff51fb3de64f2f" kindref="member">trace::TraceEntryIDType</ref><sp/><ref refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_class_1_1_5_08_07_args_8_8_8_08_00_01f_01_4_1ac995f6f81128dc8df45ce13361122f50" kindref="member">GetTraceID</ref>()<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_registry_1a557118b7661378a6c74ed693b87c3d83" kindref="member">trace::TraceRegistry::registerEventHashed</ref>(</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetEventTypeName(),<sp/>GetEventName()</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>vt_check_enabled(trace_enabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable,<sp/>Callable<sp/>f,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_processing_tag" kindref="compound">trace::TraceProcessingTag</ref><sp/>BeginProcessingInvokeEvent()<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>trace_id<sp/>=<sp/><ref refid="structvt_1_1runnable_1_1_callable_wrapper" kindref="compound">CallableWrapper&lt;Callable, f&gt;::GetTraceID</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>trace_event<sp/>=<sp/>theTrace()-&gt;messageCreation(trace_id,<sp/>0);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>from_node<sp/>=<sp/><ref refid="namespacevt_1a26551fe0e6e6a1371111df5b12c7e92c" kindref="member">theContext</ref>()-&gt;<ref refid="structvt_1_1ctx_1_1_context_1a0d52c263ce8516546a67443d9a86fa5f" kindref="member">getNode</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theTrace()-&gt;beginProcessing(trace_id,<sp/>0,<sp/>trace_event,<sp/>from_node);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable,<sp/>Callable<sp/>f,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EndProcessingInvokeEvent(<ref refid="structvt_1_1trace_1_1_trace_processing_tag" kindref="compound">trace::TraceProcessingTag</ref><sp/>processing_tag)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>theTrace()-&gt;endProcessing(processing_tag);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>trace_id<sp/>=<sp/><ref refid="structvt_1_1runnable_1_1_callable_wrapper" kindref="compound">CallableWrapper&lt;Callable, f&gt;::GetTraceID</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>theTrace()-&gt;messageCreation(trace_id,<sp/>0);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Fn,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">Type</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;std::is_pointer&lt;std::decay_t&lt;T1&gt;&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args</highlight></codeline>
<codeline lineno="159"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="160" refid="namespacevt_1_1runnable_1a4253e4fa9c8c6e68da420ab440f2b298" refkind="member"><highlight class="normal">decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/><ref refid="namespacevt_1_1runnable_1a4253e4fa9c8c6e68da420ab440f2b298" kindref="member">invokeImpl</ref>(Type<sp/>Fn::*f,<sp/>T1&amp;&amp;<sp/>obj,<sp/>Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((*std::forward&lt;T1&gt;(obj)).*f)(std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Fn,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">Type</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;!std::is_pointer&lt;std::decay_t&lt;T1&gt;&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args</highlight></codeline>
<codeline lineno="168"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/><ref refid="namespacevt_1_1runnable_1a4253e4fa9c8c6e68da420ab440f2b298" kindref="member">invokeImpl</ref>(Type<sp/>Fn::*f,<sp/>T1&amp;&amp;<sp/>obj,<sp/>Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(std::forward&lt;T1&gt;(obj).*f)(std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="174" refid="namespacevt_1_1runnable_1af14b1c72fc3bf8437c2b89021af7eecf" refkind="member"><highlight class="normal">decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/><ref refid="namespacevt_1_1runnable_1a4253e4fa9c8c6e68da420ab440f2b298" kindref="member">invokeImpl</ref>(Callable&amp;&amp;<sp/>f,<sp/>Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::forward&lt;Callable&gt;(f)(std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable,<sp/>Callable<sp/>f,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="179" refid="namespacevt_1_1runnable_1a14fa3dbf3bef4a683fc7284452b766d3" refkind="member"><highlight class="normal"><ref refid="namespacevt_1_1util_1ae9a553985cdc8e9bd4e55f55161f2929" kindref="member">util::Copyable&lt;Callable&gt;</ref><sp/><ref refid="namespacevt_1_1runnable_1a14fa3dbf3bef4a683fc7284452b766d3" kindref="member">invoke</ref>(Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>vt_check_enabled(trace_enabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>processing_tag<sp/>=</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginProcessingInvokeEvent&lt;Callable,<sp/>f&gt;();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>returnVal<sp/>=<sp/><ref refid="namespacevt_1_1runnable_1a4253e4fa9c8c6e68da420ab440f2b298" kindref="member">invokeImpl</ref>(f,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>vt_check_enabled(trace_enabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>EndProcessingInvokeEvent&lt;Callable,<sp/>f&gt;(processing_tag);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnVal;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable,<sp/>Callable<sp/>f,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="195" refid="namespacevt_1_1runnable_1aa86b7892ea9590c2e8fef9ed0ca4e80c" refkind="member"><highlight class="normal"><ref refid="namespacevt_1_1util_1a0760a3963341a602dfe2dfc42d78c867" kindref="member">util::NotCopyable&lt;Callable&gt;</ref><sp/><ref refid="namespacevt_1_1runnable_1a14fa3dbf3bef4a683fc7284452b766d3" kindref="member">invoke</ref>(Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>vt_check_enabled(trace_enabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>processing_tag<sp/>=</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginProcessingInvokeEvent&lt;Callable,<sp/>f&gt;();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>returnVal<sp/>=<sp/><ref refid="namespacevt_1_1runnable_1a4253e4fa9c8c6e68da420ab440f2b298" kindref="member">invokeImpl</ref>(f,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>vt_check_enabled(trace_enabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>EndProcessingInvokeEvent&lt;Callable,<sp/>f&gt;(processing_tag);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(returnVal);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable,<sp/>Callable<sp/>f,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="211" refid="namespacevt_1_1runnable_1ad7a4c11af0d8864939dca87f89fba1cb" refkind="member"><highlight class="normal"><ref refid="namespacevt_1_1util_1a97df3e28837417537b3bc035c74f064d" kindref="member">util::IsVoidReturn&lt;Callable&gt;</ref><sp/><ref refid="namespacevt_1_1runnable_1a14fa3dbf3bef4a683fc7284452b766d3" kindref="member">invoke</ref>(Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>vt_check_enabled(trace_enabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>processing_tag<sp/>=</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginProcessingInvokeEvent&lt;Callable,<sp/>f&gt;();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1runnable_1a4253e4fa9c8c6e68da420ab440f2b298" kindref="member">invokeImpl</ref>(f,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>vt_check_enabled(trace_enabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>EndProcessingInvokeEvent&lt;Callable,<sp/>f&gt;(processing_tag);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">}}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vt::runnable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_VT_RUNNABLE_INVOKE_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/vt/runnable/invoke.h"/>
  </compounddef>
</doxygen>
