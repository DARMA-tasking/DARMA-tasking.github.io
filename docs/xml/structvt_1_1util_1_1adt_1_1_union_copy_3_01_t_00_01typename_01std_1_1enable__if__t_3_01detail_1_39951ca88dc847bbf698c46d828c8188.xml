<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01detail_1_39951ca88dc847bbf698c46d828c8188" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::adt::UnionCopy&lt; T, typename std::enable_if_t&lt; detail::IsTriviallyCopyable&lt; T, Ts... &gt;::value &gt;, Ts... &gt;</compoundname>
    <basecompoundref refid="structvt_1_1util_1_1adt_1_1_union_destroy" prot="public" virt="non-virtual">vt::util::adt::UnionDestroy&lt; T, void, Ts... &gt;</basecompoundref>
    <includes refid="union_8h" local="no">union.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>Ts</declname>
        <defname>Ts</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01detail_1_39951ca88dc847bbf698c46d828c8188_1a83dd753c07140cbec4bd884382ec1370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::util::adt::UnionCopy&lt; T, typename std::enable_if_t&lt; detail::IsTriviallyCopyable&lt; T, Ts... &gt;::value &gt;, Ts... &gt;::UnionCopy</definition>
        <argsstring>()=default</argsstring>
        <name>UnionCopy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/adt/union.h" line="467" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4167">
        <label>vt::util::adt::UnionDestroy&lt; T, void, Ts... &gt;</label>
        <link refid="structvt_1_1util_1_1adt_1_1_union_destroy"/>
      </node>
      <node id="4166">
        <label>vt::util::adt::UnionCopy&lt; T, typename std::enable_if_t&lt; detail::IsTriviallyCopyable&lt; T, Ts... &gt;::value &gt;, Ts... &gt;</label>
        <link refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01detail_1_39951ca88dc847bbf698c46d828c8188"/>
        <childnode refid="4167" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4169">
        <label>vt::util::adt::UnionDestroy&lt; T, void, Ts... &gt;</label>
        <link refid="structvt_1_1util_1_1adt_1_1_union_destroy"/>
      </node>
      <node id="4168">
        <label>vt::util::adt::UnionCopy&lt; T, typename std::enable_if_t&lt; detail::IsTriviallyCopyable&lt; T, Ts... &gt;::value &gt;, Ts... &gt;</label>
        <link refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01detail_1_39951ca88dc847bbf698c46d828c8188"/>
        <childnode refid="4169" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/utils/adt/union.h" line="465" column="1" bodyfile="src/vt/utils/adt/union.h" bodystart="461" bodyend="469"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1adt_1_1_union_copy_3_01_t_00_01typename_01std_1_1enable__if__t_3_01detail_1_39951ca88dc847bbf698c46d828c8188_1a83dd753c07140cbec4bd884382ec1370" prot="public" virt="non-virtual"><scope>vt::util::adt::UnionCopy&lt; T, typename std::enable_if_t&lt; detail::IsTriviallyCopyable&lt; T, Ts... &gt;::value &gt;, Ts... &gt;</scope><name>UnionCopy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
