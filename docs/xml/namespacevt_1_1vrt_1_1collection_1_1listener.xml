<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacevt_1_1vrt_1_1collection_1_1listener" kind="namespace" language="C++">
    <compoundname>vt::vrt::collection::listener</compoundname>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1listener_1a96ace4b58b3d91759e7abda5cc33b012" prot="public" static="no">
        <name>ElementEventEnum</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1listener_1a96ace4b58b3d91759e7abda5cc33b012a13f83c592fd326a19a0b4e5196bcbc27" prot="public">
          <name>ElementCreated</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>When an element is first constructed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1listener_1a96ace4b58b3d91759e7abda5cc33b012a74a4ebfb91a5d2efd17810fcf21b0d6a" prot="public">
          <name>ElementDestroyed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>When an element is destroyed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1listener_1a96ace4b58b3d91759e7abda5cc33b012a83a275aac9439b3fe0cff1b3f685d14d" prot="public">
          <name>ElementMigratedOut</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>When an element migrates out </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1listener_1a96ace4b58b3d91759e7abda5cc33b012a52681015b599c7461eeea5c717df6a25" prot="public">
          <name>ElementMigratedIn</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>When an element migrates in </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for differentiating between types of element events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/listener/listen_events.h" line="57" column="1" bodyfile="src/vt/vrt/collection/listener/listen_events.h" bodystart="57" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1listener_1a62d04c44a3c187eae66bdba2090b4505" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="namespacevt_1_1vrt_1_1collection_1_1listener_1a96ace4b58b3d91759e7abda5cc33b012" kindref="member">listener::ElementEventEnum</ref>, IndexT)&gt;</type>
        <definition>using vt::vrt::collection::listener::ListenFnType = typedef std::function&lt;void(listener::ElementEventEnum, IndexT)&gt;</definition>
        <argsstring></argsstring>
        <name>ListenFnType</name>
        <briefdescription>
<para>Listener function type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/listener/listen_events.h" line="68" column="1" bodyfile="src/vt/vrt/collection/listener/listen_events.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/vrt/collection/listener/listen_events.h" line="52" column="1"/>
  </compounddef>
</doxygen>
