<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1_collection_proxy" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::CollectionProxy</compoundname>
    <basecompoundref refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_traits" prot="public" virt="non-virtual">vt::vrt::collection::ProxyCollectionTraits&lt; ColT, IndexT &gt;</basecompoundref>
    <includes refid="collection__proxy_8h" local="no">collection_proxy.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>ColT</declname>
        <defname>ColT</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>IndexT</declname>
        <defname>IndexT</defname>
        <defval>typename ColT::IndexType</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a892c21eae1dca37321d7973f72b55b0a" prot="public" static="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_vrt_elm_proxy" kindref="compound">VrtElmProxy</ref>&lt; ColT, IndexT &gt;</type>
        <definition>using vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;::ElmProxyType =  VrtElmProxy&lt;ColT, IndexT&gt;</definition>
        <argsstring></argsstring>
        <name>ElmProxyType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/collection_proxy.h" line="64" column="1" bodyfile="src/vt/vrt/proxy/collection_proxy.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a5cc052678774abc3b4811f273f0df405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;::CollectionProxy</definition>
        <argsstring>()=default</argsstring>
        <name>CollectionProxy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/collection_proxy.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1ae9e5efa3735abd08a7b3d68375447f92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;::CollectionProxy</definition>
        <argsstring>(CollectionProxy const &amp;)=default</argsstring>
        <name>CollectionProxy</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy" kindref="compound">CollectionProxy</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/collection_proxy.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1ac4762724e6b3c028f183b42f635d69ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;::CollectionProxy</definition>
        <argsstring>(VirtualProxyType const in_proxy)</argsstring>
        <name>CollectionProxy</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const</type>
          <declname>in_proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/collection_proxy.h" line="68" column="1" bodyfile="src/vt/vrt/proxy/collection_proxy.impl.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1ab70ea05660c740600207b58db48cc4f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy" kindref="compound">CollectionProxy</ref> &amp;</type>
        <definition>CollectionProxy&amp; vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;::operator=</definition>
        <argsstring>(CollectionProxy const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy" kindref="compound">CollectionProxy</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/collection_proxy.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a0119b05e9284408d0b6dfc8fc47b12d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>IndexArgsT</declname>
            <defname>IndexArgsT</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a892c21eae1dca37321d7973f72b55b0a" kindref="member">ElmProxyType</ref></type>
        <definition>CollectionProxy&lt; ColT, IndexT &gt;::ElmProxyType vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;::indexArgs</definition>
        <argsstring>(IndexArgsT &amp;&amp;... idx) const</argsstring>
        <name>indexArgs</name>
        <param>
          <type>IndexArgsT &amp;&amp;...</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/collection_proxy.h" line="73" column="1" bodyfile="src/vt/vrt/proxy/collection_proxy.impl.h" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a9dcc562f78ac9f7dbef426c33c3b6f53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a892c21eae1dca37321d7973f72b55b0a" kindref="member">ElmProxyType</ref></type>
        <definition>CollectionProxy&lt; ColT, IndexT &gt;::ElmProxyType vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;::index</definition>
        <argsstring>(IndexT const &amp;idx) const</argsstring>
        <name>index</name>
        <param>
          <type>IndexT const &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/collection_proxy.h" line="74" column="1" bodyfile="src/vt/vrt/proxy/collection_proxy.impl.h" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1aadaff277615aa5f7b051a6387e695e16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Tp</type>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;      std::is_convertible&lt;        typename IndexT::BuildIndexType, typename std::decay&lt;Tp&gt;::type      &gt;::value, Tp    &gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a892c21eae1dca37321d7973f72b55b0a" kindref="member">ElmProxyType</ref></type>
        <definition>CollectionProxy&lt; ColT, IndexT &gt;::ElmProxyType vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;::operator[]</definition>
        <argsstring>(Tp &amp;&amp;tp) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>Tp &amp;&amp;</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/collection_proxy.h" line="84" column="1" bodyfile="src/vt/vrt/proxy/collection_proxy.impl.h" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a8a06bed8946060c4d1e11f665e05e64f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Tp</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Tn</declname>
            <defname>Tn</defname>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;      std::is_convertible&lt;        typename IndexT::BuildIndexType, typename std::decay&lt;Tp&gt;::type      &gt;::value, Tp    &gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a892c21eae1dca37321d7973f72b55b0a" kindref="member">ElmProxyType</ref></type>
        <definition>CollectionProxy&lt; ColT, IndexT &gt;::ElmProxyType vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;::operator()</definition>
        <argsstring>(Tp &amp;&amp;tp, Tn &amp;&amp;... tn) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Tp &amp;&amp;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>Tn &amp;&amp;...</type>
          <declname>tn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/collection_proxy.h" line="94" column="1" bodyfile="src/vt/vrt/proxy/collection_proxy.impl.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a81f027fb0c7d2b55ec06a2f91dd8d72e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexU</type>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;      std::is_same&lt;IndexT, typename std::decay&lt;IndexU&gt;::type&gt;::value, IndexU    &gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a892c21eae1dca37321d7973f72b55b0a" kindref="member">ElmProxyType</ref></type>
        <definition>CollectionProxy&lt; ColT, IndexT &gt;::ElmProxyType vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;::operator[]</definition>
        <argsstring>(IndexU const &amp;idx) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>IndexU const &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/collection_proxy.h" line="102" column="1" bodyfile="src/vt/vrt/proxy/collection_proxy.impl.h" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a53d97b9ca0294b4254556620463708d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexU</type>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;      std::is_same&lt;IndexT, typename std::decay&lt;IndexU&gt;::type&gt;::value, IndexU    &gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a892c21eae1dca37321d7973f72b55b0a" kindref="member">ElmProxyType</ref></type>
        <definition>CollectionProxy&lt; ColT, IndexT &gt;::ElmProxyType vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;::operator()</definition>
        <argsstring>(IndexU const &amp;idx) const</argsstring>
        <name>operator()</name>
        <param>
          <type>IndexU const &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/collection_proxy.h" line="110" column="1" bodyfile="src/vt/vrt/proxy/collection_proxy.impl.h" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1abec1613e3487c767e7c8c060abe8781a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;::setFocusedSubPhase</definition>
        <argsstring>(balance::ElementStats::SubphaseType subphase)</argsstring>
        <name>setFocusedSubPhase</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_element_stats_1af9ec1f2527b6569a003579f7950db71e" kindref="member">balance::ElementStats::SubphaseType</ref></type>
          <declname>subphase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a subphase from which load records should be considered, in place of the summed load over the entire phase.</para><para>This must be called on every process </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/collection_proxy.h" line="118" column="1" bodyfile="src/vt/vrt/proxy/collection_proxy.impl.h" bodystart="105" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="758">
        <label>BaseProxyT</label>
      </node>
      <node id="757">
        <label>col_proxy::Chain1&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_reducable"/>
        <childnode refid="758" relation="public-inheritance">
        </childnode>
      </node>
      <node id="755">
        <label>vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy"/>
        <childnode refid="756" relation="public-inheritance">
        </childnode>
      </node>
      <node id="756">
        <label>vt::vrt::collection::ProxyCollectionTraits&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_traits"/>
        <childnode refid="757" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="762">
        <label>BaseProxyT</label>
      </node>
      <node id="761">
        <label>col_proxy::Chain1&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_reducable"/>
        <childnode refid="762" relation="public-inheritance">
        </childnode>
      </node>
      <node id="759">
        <label>vt::vrt::collection::CollectionProxy&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy"/>
        <childnode refid="760" relation="public-inheritance">
        </childnode>
      </node>
      <node id="760">
        <label>vt::vrt::collection::ProxyCollectionTraits&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_traits"/>
        <childnode refid="761" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/proxy/collection_proxy.h" line="63" column="1" bodyfile="src/vt/vrt/proxy/collection_proxy.h" bodystart="63" bodyend="119"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a5cc052678774abc3b4811f273f0df405" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>CollectionProxy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1ae9e5efa3735abd08a7b3d68375447f92" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>CollectionProxy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1ac4762724e6b3c028f183b42f635d69ce" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>CollectionProxy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a892c21eae1dca37321d7973f72b55b0a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>ElmProxyType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a9dcc562f78ac9f7dbef426c33c3b6f53" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>index</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a0119b05e9284408d0b6dfc8fc47b12d6" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>indexArgs</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a8a06bed8946060c4d1e11f665e05e64f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>operator()</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a53d97b9ca0294b4254556620463708d9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>operator()</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1ab70ea05660c740600207b58db48cc4f6" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>operator=</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_traits_1a1765ee2517b39f1fe0b1168556071afd" prot="public" virt="non-virtual" ambiguityscope="vt::vrt::collection::ProxyCollectionTraits::"><scope>vt::vrt::collection::CollectionProxy</scope><name>operator=</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_reducable_1a7df8661d0e353935f034c4c0174c0872" prot="public" virt="non-virtual" ambiguityscope="vt::vrt::collection::Reducable::"><scope>vt::vrt::collection::CollectionProxy</scope><name>operator=</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1aadaff277615aa5f7b051a6387e695e16" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>operator[]</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1a81f027fb0c7d2b55ec06a2f91dd8d72e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>operator[]</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_traits_1a2dd8fe584f3a88035deebce13902f470" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>ProxyCollectionTraits</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_traits_1a004719bb3273ae561bb97ab0ef63d4ff" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>ProxyCollectionTraits</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_traits_1af8c270e30f87c1247a811b6116c3622c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>ProxyCollectionTraits</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_proxy_collection_traits_1a2fec1dfd064e656c8167bee07b9c3918" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>ProxyCollectionTraits</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_reducable_1a807b462380873448bfcf4661b4b28a2d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>Reducable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_reducable_1aafc682961c7c961547d91358cda46792" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>Reducable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_reducable_1a4c5250ba5364ae0965c119773e87f4e8" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>Reducable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_reducable_1a658b587cdafda69c95ad0a2efe7a73fe" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>Reducable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_reducable_1af049a8809d46da10f48d5fecbb1ace3d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>reduce</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_reducable_1a4bd8f4179c7bfaddaac074a23e2c647b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>reduce</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_reducable_1a4bf1d380e884ea2568626a6195cba321" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>reduce</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_reducable_1aac9bcd9f1bf69f13ab7b206580fc6969" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>reduce</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_reducable_1a431a1840392806c219759867e4d9516e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>reduceExpr</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_reducable_1a6f8d457832242aa26bbce67e9d6318a0" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>reduceExpr</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_reducable_1a9f5a6c385efafe1fa52937f4809a9486" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>ReduceIdxFuncType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_proxy_1abec1613e3487c767e7c8c060abe8781a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionProxy</scope><name>setFocusedSubPhase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
