<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::balance::MultiplePhases</compoundname>
    <basecompoundref refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model" prot="public" virt="non-virtual">vt::vrt::collection::balance::ComposedModel</basecompoundref>
    <includes refid="multiple__phases_8h" local="no">multiple_phases.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases_1a26b2a79fd6145e7e3ab56581a8558584" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::vrt::collection::balance::MultiplePhases::future_phase_block_size_</definition>
        <argsstring></argsstring>
        <name>future_phase_block_size_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/multiple_phases.h" line="85" column="1" bodyfile="src/vt/vrt/collection/balance/model/multiple_phases.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases_1a28aba5fe005d35319e34ca8406aca936" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::balance::MultiplePhases::MultiplePhases</definition>
        <argsstring>(std::shared_ptr&lt; balance::LoadModel &gt; base, int in_future_phase_block_size)</argsstring>
        <name>MultiplePhases</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" kindref="compound">balance::LoadModel</ref> &gt;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>int</type>
          <declname>in_future_phase_block_size</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>the base model</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_future_phase_block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>how many phases to predict as each single queried phase </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/multiple_phases.h" line="76" column="1" bodyfile="src/vt/vrt/collection/balance/model/multiple_phases.h" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases_1a33c88bd41140d5f508c5e74fdccd6c30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacevt_1a8fb51741340b87d7aaee0bef60e9896b" kindref="member">LoadType</ref></type>
        <definition>LoadType vt::vrt::collection::balance::MultiplePhases::getModeledLoad</definition>
        <argsstring>(ElementIDStruct object, PhaseOffset when) const override</argsstring>
        <name>getModeledLoad</name>
        <reimplements refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a07737f979ebca207a76e6b810c386409">getModeledLoad</reimplements>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset" kindref="compound">PhaseOffset</ref></type>
          <declname>when</declname>
        </param>
        <briefdescription>
<para>Provide an estimate of the given object&apos;s load during a specified interval. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>The object whose load is desired </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">when</parametername>
</parameternamelist>
<parameterdescription>
<para>The interval in which the estimated load is desired</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>How much computation time the object is estimated to require</para></simplesect>
The <computeroutput>updateLoads</computeroutput> method must have been called before any call to this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/model/multiple_phases.h" line="82" column="1" bodyfile="src/vt/vrt/collection/balance/model/multiple_phases.cc" bodystart="49" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Predict an object&apos;s load as a sum over blocks of N future phases. </para>    </briefdescription>
    <detaileddescription>
<para>Expected to be most useful either when queried by an explicitly subphase-aware vector-optimizing load balancer, or when queried by a whole-phase scalar-optimizing load balancer with a <ref refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_norm" kindref="compound">Norm</ref> model composed on top of this.</para><para>Multiple phase blocked predictions will only be meaningfully different from single phase predictions when composed on top of a Predictor model that is not constant across future phases. I.e. <computeroutput><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_linear_model" kindref="compound">LinearModel</ref></computeroutput> rather than <computeroutput><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_naive_persistence" kindref="compound">NaivePersistence</ref></computeroutput> or <computeroutput><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_persistence_median_last_n" kindref="compound">PersistenceMedianLastN</ref></computeroutput>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2886">
        <label>vt::vrt::collection::balance::ComposedModel</label>
        <link refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model"/>
        <childnode refid="2887" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2885">
        <label>vt::vrt::collection::balance::MultiplePhases</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases"/>
        <childnode refid="2886" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2887">
        <label>vt::vrt::collection::balance::LoadModel</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2889">
        <label>vt::vrt::collection::balance::ComposedModel</label>
        <link refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model"/>
        <childnode refid="2890" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2888">
        <label>vt::vrt::collection::balance::MultiplePhases</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases"/>
        <childnode refid="2889" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2890">
        <label>vt::vrt::collection::balance::LoadModel</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/balance/model/multiple_phases.h" line="67" column="1" bodyfile="src/vt/vrt/collection/balance/model/multiple_phases.h" bodystart="67" bodyend="86"/>
    <listofallmembers>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a7d32b6f8a0ca5970674238325df11783" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>begin</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a84b77c1fceb9e07a0706b896a4d9e9c9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>ComposedModel</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a2b3212a8438a4b58a73c41db841f15b7" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>end</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases_1a26b2a79fd6145e7e3ab56581a8558584" prot="private" virt="non-virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>future_phase_block_size_</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a500c3cd4c8e63cfdeea3edb5ddbcba47" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>getModeledComm</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases_1a33c88bd41140d5f508c5e74fdccd6c30" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>getModeledLoad</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a85bd890eb6e94c85cbfeb9ef321139dc" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>getNumCompletedPhases</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1abd58ffd308443021356aff2595c6980f" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>getNumObjects</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a20bb994d1b3b27eb2a82729d7d5c30f3" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>getNumPastPhasesNeeded</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a744a16572614d11e554b1bf53b7c57f6" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>getNumSubphases</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a290b32e5baedcd01d38170937514c145" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>getRawLoad</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1ad6e2a1c572a80e35acad0fcf1a0e8071" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>hasRawLoad</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a90f345e752441d66b2893027f2626226" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>LoadModel</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases_1a28aba5fe005d35319e34ca8406aca936" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>MultiplePhases</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a52e2210225947697a235b75c385eb104" prot="public" virt="non-virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>serialize</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1a3a7da5e81a933ea88f87a1226fd3b401" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>setLoads</name></member>
      <member refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model_1ad8108b4392d63b7f09e443920a64933a" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>updateLoads</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model_1a6478a387f285b322a48ee1d8a80fc6f7" prot="public" virt="virtual"><scope>vt::vrt::collection::balance::MultiplePhases</scope><name>~LoadModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
