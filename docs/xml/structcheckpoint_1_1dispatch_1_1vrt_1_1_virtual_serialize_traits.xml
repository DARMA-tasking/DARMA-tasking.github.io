<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits" kind="struct" language="C++" prot="public">
    <compoundname>checkpoint::dispatch::vrt::VirtualSerializeTraits</compoundname>
    <includes refid="virtual__serialize__traits_8h" local="no">virtual_serialize_traits.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a900e9fcb655c36ab48fd6db0f0258b75" prot="public" static="no">
        <type>::<ref refid="namespacecheckpoint_1_1dispatch_1_1vrt_1a41abdf16741a7c58e926d9813985bd2f" kindref="member">checkpoint::dispatch::vrt::checkpoint_base_type_t</ref>&lt; U &gt;</type>
        <definition>using checkpoint::dispatch::vrt::VirtualSerializeTraits&lt; T &gt;::has_base_typedef_t =  ::checkpoint::dispatch::vrt::checkpoint_base_type_t&lt;U&gt;</definition>
        <argsstring></argsstring>
        <name>has_base_typedef_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expect a typedef: using _CheckpointVirtualSerializerBaseType = T; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" line="65" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a5ef65f047ffa20ed206485238ceb2af5" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a900e9fcb655c36ab48fd6db0f0258b75" kindref="member">has_base_typedef_t</ref>, T &gt;</type>
        <definition>using checkpoint::dispatch::vrt::VirtualSerializeTraits&lt; T &gt;::has_base_typedef =  detection::is_detected&lt;has_base_typedef_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_base_typedef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" line="67" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a5b78afee2cf468bf3fedddb017c9aad0" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;()._checkpointDynamicSerialize(std::declval&lt; void * &gt;(), std::declval&lt; <ref refid="namespacecheckpoint_1_1dispatch_1_1vrt_1acd3f9e6b091bcfbc23dc35ea8ef45d3b" kindref="member">TypeIdx</ref> &gt;(), std::declval&lt; <ref refid="namespacecheckpoint_1_1dispatch_1_1vrt_1acd3f9e6b091bcfbc23dc35ea8ef45d3b" kindref="member">TypeIdx</ref> &gt;()))</type>
        <definition>using checkpoint::dispatch::vrt::VirtualSerializeTraits&lt; T &gt;::has_dynamic_serialize_t =  decltype( std::declval&lt;U&gt;()._checkpointDynamicSerialize( std::declval&lt;void*&gt;(), std::declval&lt;TypeIdx&gt;(), std::declval&lt;TypeIdx&gt;() ) )</definition>
        <argsstring></argsstring>
        <name>has_dynamic_serialize_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expect dynamic serialize method: virtual void _checkpointDynamicSerialize(void*, TypeIdx, TypeIdx); </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" line="74" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a716daac95820b854a4f7dc6ae1eb8d2f" prot="public" static="no">
        <type>detection::is_detected&lt; <ref refid="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a5b78afee2cf468bf3fedddb017c9aad0" kindref="member">has_dynamic_serialize_t</ref>, T &gt;</type>
        <definition>using checkpoint::dispatch::vrt::VirtualSerializeTraits&lt; T &gt;::has_dynamic_serialize =  detection::is_detected&lt;has_dynamic_serialize_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_dynamic_serialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" line="82" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a6a4e72c1d80374001f122c17ac1cc0e8" prot="public" static="no">
        <type>decltype(std::declval&lt; U &gt;()._checkpointDynamicTypeIndex())</type>
        <definition>using checkpoint::dispatch::vrt::VirtualSerializeTraits&lt; T &gt;::has_dynamic_type_index_t =  decltype( std::declval&lt;U&gt;()._checkpointDynamicTypeIndex() )</definition>
        <argsstring></argsstring>
        <name>has_dynamic_type_index_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expect dynamic type idx method: virtual TypeIdx _checkpointDynamicTypeIndex(); </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" line="89" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a5eb693a371780ee8f5e81a825e62bd5d" prot="public" static="no">
        <type>detection::is_detected_exact&lt; <ref refid="namespacecheckpoint_1_1dispatch_1_1vrt_1acd3f9e6b091bcfbc23dc35ea8ef45d3b" kindref="member">TypeIdx</ref>, <ref refid="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a6a4e72c1d80374001f122c17ac1cc0e8" kindref="member">has_dynamic_type_index_t</ref>, T &gt;</type>
        <definition>using checkpoint::dispatch::vrt::VirtualSerializeTraits&lt; T &gt;::has_dynamic_type_index =  detection::is_detected_exact&lt;TypeIdx, has_dynamic_type_index_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_dynamic_type_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" line="93" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a21d83fdae98269101791620d64160887" prot="public" static="yes" mutable="no">
        <type>constexpr auto const</type>
        <definition>constexpr auto const checkpoint::dispatch::vrt::VirtualSerializeTraits&lt; T &gt;::has_virtual_serialize</definition>
        <argsstring></argsstring>
        <name>has_virtual_serialize</name>
        <initializer>=
    has_dynamic_serialize::value and
    has_dynamic_type_index::value and
    has_base_typedef::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" line="97" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a97ce9c5581f6ff66cbc91d5ca5750e2f" prot="public" static="yes" mutable="no">
        <type>constexpr auto const</type>
        <definition>constexpr auto const checkpoint::dispatch::vrt::VirtualSerializeTraits&lt; T &gt;::has_not_virtual_serialize</definition>
        <argsstring></argsstring>
        <name>has_not_virtual_serialize</name>
        <initializer>=
    not <ref refid="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a21d83fdae98269101791620d64160887" kindref="member">has_virtual_serialize</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" line="103" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" line="58" column="1" bodyfile="lib/checkpoint/src/checkpoint/dispatch/vrt/virtual_serialize_traits.h" bodystart="58" bodyend="105"/>
    <listofallmembers>
      <member refid="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a5ef65f047ffa20ed206485238ceb2af5" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::vrt::VirtualSerializeTraits</scope><name>has_base_typedef</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a900e9fcb655c36ab48fd6db0f0258b75" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::vrt::VirtualSerializeTraits</scope><name>has_base_typedef_t</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a716daac95820b854a4f7dc6ae1eb8d2f" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::vrt::VirtualSerializeTraits</scope><name>has_dynamic_serialize</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a5b78afee2cf468bf3fedddb017c9aad0" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::vrt::VirtualSerializeTraits</scope><name>has_dynamic_serialize_t</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a5eb693a371780ee8f5e81a825e62bd5d" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::vrt::VirtualSerializeTraits</scope><name>has_dynamic_type_index</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a6a4e72c1d80374001f122c17ac1cc0e8" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::vrt::VirtualSerializeTraits</scope><name>has_dynamic_type_index_t</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a97ce9c5581f6ff66cbc91d5ca5750e2f" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::vrt::VirtualSerializeTraits</scope><name>has_not_virtual_serialize</name></member>
      <member refid="structcheckpoint_1_1dispatch_1_1vrt_1_1_virtual_serialize_traits_1a21d83fdae98269101791620d64160887" prot="public" virt="non-virtual"><scope>checkpoint::dispatch::vrt::VirtualSerializeTraits</scope><name>has_virtual_serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
