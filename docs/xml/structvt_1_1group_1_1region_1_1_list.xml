<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1group_1_1region_1_1_list" kind="struct" language="C++" prot="public">
    <compoundname>vt::group::region::List</compoundname>
    <basecompoundref refid="structvt_1_1group_1_1region_1_1_region" prot="public" virt="non-virtual">vt::group::region::Region</basecompoundref>
    <includes refid="group__list_8h" local="no">group_list.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1group_1_1region_1_1_list_1a69d0f04a06a9f069becd00a6c894dbe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct ShallowList</definition>
        <argsstring></argsstring>
        <name>ShallowList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="60" column="1" bodyfile="src/vt/group/region/group_list.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1group_1_1region_1_1_list_1ac1c943c35cae4e25a2e65095d5e11bb4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::group::region::List::is_sorted_</definition>
        <argsstring></argsstring>
        <name>is_sorted_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="74" column="1" bodyfile="src/vt/group/region/group_list.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1region_1_1_list_1a572bda4d9766fc8eb0c5eaca48f7b416" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a4e35b2fc6dca06aca0b7bc0e19b35c5a" kindref="member">ListType</ref></type>
        <definition>ListType vt::group::region::List::list_</definition>
        <argsstring></argsstring>
        <name>list_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="75" column="1" bodyfile="src/vt/group/region/group_list.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1a1c670c1ead337cb8abceecf810e629ca" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::group::region::List::List</definition>
        <argsstring>(ListType const &amp;in_list)</argsstring>
        <name>List</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a4e35b2fc6dca06aca0b7bc0e19b35c5a" kindref="member">ListType</ref> const &amp;</type>
          <declname>in_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="51" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1ad065a462795289684b4bce819702c99d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::group::region::List::List</definition>
        <argsstring>(ListType &amp;&amp;in_list)</argsstring>
        <name>List</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a4e35b2fc6dca06aca0b7bc0e19b35c5a" kindref="member">ListType</ref> &amp;&amp;</type>
          <declname>in_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="52" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1acf3b9e946b2aa160985a65aa15288b82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::group::region::List::List</definition>
        <argsstring>(List const &amp;in_other, BoundType in_remove_extent)</argsstring>
        <name>List</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_list" kindref="compound">List</ref> const &amp;</type>
          <declname>in_other</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref></type>
          <declname>in_remove_extent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="53" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="89" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1ac23de857aeb512b1129fe62dd50dfe9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::group::region::List::List</definition>
        <argsstring>(BoundType const *const list, SizeType const &amp;size, bool const &amp;is_sorted)</argsstring>
        <name>List</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref> const *const</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a9bb381adf31111aae34dbc644bad6c1f" kindref="member">SizeType</ref> const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_sorted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="54" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="100" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1a4f5cfc858b58c690a24f10621351e904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::group::region::List::List</definition>
        <argsstring>(List const &amp;)=default</argsstring>
        <name>List</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_list" kindref="compound">List</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1a832f5f93b9542d7a961d0398e1f6cf10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::group::region::List::List</definition>
        <argsstring>(List &amp;&amp;)=default</argsstring>
        <name>List</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_list" kindref="compound">List</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1a60aabaef773693847cb82501bfe8d0ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_list" kindref="compound">List</ref> &amp;</type>
        <definition>List&amp; vt::group::region::List::operator=</definition>
        <argsstring>(List const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_list" kindref="compound">List</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1a9a74188a75483097c41253616527ac46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a9bb381adf31111aae34dbc644bad6c1f" kindref="member">SizeType</ref></type>
        <definition>List::SizeType vt::group::region::List::getSize</definition>
        <argsstring>() const override</argsstring>
        <name>getSize</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1ab0db5f78c57943b4b9973ba2c7c619f7">getSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="62" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1acebca171776662bdf481ed1eb7ee4c09" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::group::region::List::sort</definition>
        <argsstring>() override</argsstring>
        <name>sort</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a169304bf82a87ff958333595bed2603d">sort</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="63" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1ac85ec02f77a44a2dadc1b51231e113a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool vt::group::region::List::contains</definition>
        <argsstring>(NodeType const &amp;node) override</argsstring>
        <name>contains</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a1e0ebd7367476fb397faf06a03b5583c">contains</reimplements>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="64" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="72" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1ade171ca43a1bef2feef9952625fba71a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a4e35b2fc6dca06aca0b7bc0e19b35c5a" kindref="member">ListType</ref> const  &amp;</type>
        <definition>List::ListType const  &amp; vt::group::region::List::makeList</definition>
        <argsstring>() override</argsstring>
        <name>makeList</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1ac85c027b3c402c712c888aefc198c6be">makeList</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="65" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1abdde7f8c33453db1938e9a27b3f18bd9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool vt::group::region::List::isList</definition>
        <argsstring>() const override</argsstring>
        <name>isList</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a5c05e6ebee5a6d7e77d9ebf33c9ff50c">isList</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="66" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1a99c726e227dbac4f8efaa45a37033238" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref></type>
        <definition>List::BoundType vt::group::region::List::head</definition>
        <argsstring>() const override</argsstring>
        <name>head</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a09d21333389937f11dd5d3e6ba566c54">head</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="67" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="115" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1aaa38a1cc3062ed93fd6d6fbe2c65f1cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" kindref="member">RegionUPtrType</ref></type>
        <definition>List::RegionUPtrType vt::group::region::List::tail</definition>
        <argsstring>() const override</argsstring>
        <name>tail</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a7d5bc5711c1b7954e27defa4dc94af40">tail</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="68" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="122" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1a0f8352e79bb541ad17ea80843a363304" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1ab8d05c0978c7f38292a9ed5a15498a4b" kindref="member">SplitRegionType</ref></type>
        <definition>List::SplitRegionType vt::group::region::List::split</definition>
        <argsstring>() const override</argsstring>
        <name>split</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a2cbbbff6358f0f63235d95501858f512">split</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="69" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="131" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1ac5885572f4cd651003cd6012ba247cda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" kindref="member">RegionUPtrType</ref></type>
        <definition>List::RegionUPtrType vt::group::region::List::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a040d20a4f8c6fa351d7fe1cbfcae3a03">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="70" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_list_1ad1950419288564d76527c24bd6d4f3a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::group::region::List::splitN</definition>
        <argsstring>(int nsplits, ApplyFnType apply) const override</argsstring>
        <name>splitN</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1ae8660d4218b57e91664dedfa807cd936">splitN</reimplements>
        <param>
          <type>int</type>
          <declname>nsplits</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a7c9e99b1157d2fe2f3e6fc36a1463a96" kindref="member">ApplyFnType</ref></type>
          <declname>apply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_list.h" line="71" column="1" bodyfile="src/vt/group/region/group_list.cc" bodystart="156" bodyend="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1678">
        <label>vt::group::region::List</label>
        <link refid="structvt_1_1group_1_1region_1_1_list"/>
        <childnode refid="1679" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1679">
        <label>vt::group::region::Region</label>
        <link refid="structvt_1_1group_1_1region_1_1_region"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1680">
        <label>vt::group::region::List</label>
        <link refid="structvt_1_1group_1_1region_1_1_list"/>
        <childnode refid="1681" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1681">
        <label>vt::group::region::Region</label>
        <link refid="structvt_1_1group_1_1region_1_1_region"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/group/region/group_list.h" line="50" column="1" bodyfile="src/vt/group/region/group_list.h" bodystart="50" bodyend="76"/>
    <listofallmembers>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a7c9e99b1157d2fe2f3e6fc36a1463a96" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>ApplyFnType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>BoundType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1ac85ec02f77a44a2dadc1b51231e113a7" prot="public" virt="virtual"><scope>vt::group::region::List</scope><name>contains</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1ac5885572f4cd651003cd6012ba247cda" prot="public" virt="virtual"><scope>vt::group::region::List</scope><name>copy</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1a9a74188a75483097c41253616527ac46" prot="public" virt="virtual"><scope>vt::group::region::List</scope><name>getSize</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1a99c726e227dbac4f8efaa45a37033238" prot="public" virt="virtual"><scope>vt::group::region::List</scope><name>head</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1ac1c943c35cae4e25a2e65095d5e11bb4" prot="private" virt="non-virtual"><scope>vt::group::region::List</scope><name>is_sorted_</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1abdde7f8c33453db1938e9a27b3f18bd9" prot="public" virt="virtual"><scope>vt::group::region::List</scope><name>isList</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1a1c670c1ead337cb8abceecf810e629ca" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>List</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1ad065a462795289684b4bce819702c99d" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>List</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1acf3b9e946b2aa160985a65aa15288b82" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>List</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1ac23de857aeb512b1129fe62dd50dfe9f" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>List</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1a4f5cfc858b58c690a24f10621351e904" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>List</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1a832f5f93b9542d7a961d0398e1f6cf10" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>List</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1a572bda4d9766fc8eb0c5eaca48f7b416" prot="private" virt="non-virtual"><scope>vt::group::region::List</scope><name>list_</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a4e35b2fc6dca06aca0b7bc0e19b35c5a" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>ListType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1ade171ca43a1bef2feef9952625fba71a" prot="public" virt="virtual"><scope>vt::group::region::List</scope><name>makeList</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1a60aabaef773693847cb82501bfe8d0ad" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>operator=</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a79f6795196ce4fd9fff863cf2a5bf30d" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>RegionPtr</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>RegionUPtrType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1a69d0f04a06a9f069becd00a6c894dbe9" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>ShallowList</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a9bb381adf31111aae34dbc644bad6c1f" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>SizeType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1acebca171776662bdf481ed1eb7ee4c09" prot="public" virt="virtual"><scope>vt::group::region::List</scope><name>sort</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1a0f8352e79bb541ad17ea80843a363304" prot="public" virt="virtual"><scope>vt::group::region::List</scope><name>split</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1ad1950419288564d76527c24bd6d4f3a3" prot="public" virt="virtual"><scope>vt::group::region::List</scope><name>splitN</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1ab8d05c0978c7f38292a9ed5a15498a4b" prot="public" virt="non-virtual"><scope>vt::group::region::List</scope><name>SplitRegionType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_list_1aaa38a1cc3062ed93fd6d6fbe2c65f1cf" prot="public" virt="virtual"><scope>vt::group::region::List</scope><name>tail</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1adb017be8010659a0da19f66c8265fe10" prot="public" virt="virtual"><scope>vt::group::region::List</scope><name>~Region</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
