<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1ctx_1_1_t_d" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>vt::ctx::TD</compoundname>
    <basecompoundref refid="structvt_1_1ctx_1_1_base" prot="public" virt="non-virtual">vt::ctx::Base</basecompoundref>
    <includes refid="td_8h" local="no">td.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1ctx_1_1_t_d_1a27c1d8888dd9b0fcc0b6a8f31f7ebdb7" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::ctx::TD::ep_</definition>
        <argsstring></argsstring>
        <name>ep_</name>
        <initializer>= no_epoch</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The epoch for the task </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="110" column="1" bodyfile="src/vt/context/runnable_context/td.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1ctx_1_1_t_d_1ae63dbf338735e6ffd69ae2d67a24e3fb" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::ctx::TD::base_epoch_stack_size_</definition>
        <argsstring></argsstring>
        <name>base_epoch_stack_size_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Epoch stack size at start </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="111" column="1" bodyfile="src/vt/context/runnable_context/td.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1ctx_1_1_t_d_1aa960a5f0ddf7725eb720d8bc68f1325f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &gt;</type>
        <definition>std::vector&lt;EpochType&gt; vt::ctx::TD::suspended_epochs_</definition>
        <argsstring></argsstring>
        <name>suspended_epochs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Suspended epoch stack </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="112" column="1" bodyfile="src/vt/context/runnable_context/td.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1ade8d2b390d1b4a484dd9f5f20546bc91" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::ctx::TD::TD</definition>
        <argsstring>(EpochType in_ep)</argsstring>
        <name>TD</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>in_ep</declname>
        </param>
        <briefdescription>
<para>Construct with a given epoch; produce on that epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_ep</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="69" column="1" bodyfile="src/vt/context/runnable_context/td.cc" bodystart="50" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1a7682445c6790c8176124c080c3ca340c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>vt::ctx::TD::~TD</definition>
        <argsstring>()</argsstring>
        <name>~TD</name>
        <briefdescription>
<para>When destroyed, consume the epoch held by the context. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="74" column="1" bodyfile="src/vt/context/runnable_context/td.cc" bodystart="58" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1a59c6dbce4737da7d99a9175be2ed9053" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgPtrT</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vt::ctx::TD::TD</definition>
        <argsstring>(MsgPtrT msg)</argsstring>
        <name>TD</name>
        <param>
          <type>MsgPtrT</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Construct with a message to extract the epoch; produce on that epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to extract the epoch from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="83" column="1" bodyfile="src/vt/context/runnable_context/td.impl.h" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1a5ba29186cd3ac75a48272e0ac050228b" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void vt::ctx::TD::begin</definition>
        <argsstring>() final override</argsstring>
        <name>begin</name>
        <reimplements refid="structvt_1_1ctx_1_1_base_1aab5524952e1bb163ccba5df64a303168">begin</reimplements>
        <briefdescription>
<para>During begin <computeroutput><ref refid="structvt_1_1ctx_1_1_t_d" kindref="compound">TD</ref></computeroutput> will capture the epoch stack size and push <computeroutput>ep_</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="88" column="1" bodyfile="src/vt/context/runnable_context/td.cc" bodystart="64" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1a5131b9af6b389c90c1ac908c7dcc59b9" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void vt::ctx::TD::end</definition>
        <argsstring>() final override</argsstring>
        <name>end</name>
        <reimplements refid="structvt_1_1ctx_1_1_base_1a113bac732b2831caa8eed11609ccaf0e">end</reimplements>
        <briefdescription>
<para>During end <computeroutput><ref refid="structvt_1_1ctx_1_1_t_d" kindref="compound">TD</ref></computeroutput> will pop all epochs off of the stack down to the size in captured in <computeroutput><ref refid="structvt_1_1ctx_1_1_t_d_1a5ba29186cd3ac75a48272e0ac050228b" kindref="member">begin()</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="94" column="1" bodyfile="src/vt/context/runnable_context/td.cc" bodystart="79" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1aa0a190994d71eda5321da08464a810a9" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void vt::ctx::TD::suspend</definition>
        <argsstring>() final override</argsstring>
        <name>suspend</name>
        <reimplements refid="structvt_1_1ctx_1_1_base_1a445badaaad72b44313084b2c95a13003">suspend</reimplements>
        <briefdescription>
<para>When suspended, <computeroutput><ref refid="structvt_1_1ctx_1_1_t_d" kindref="compound">TD</ref></computeroutput> will preserve any epochs pushed on the stack after begin and restore the stack back to the state before begin was invoked. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="101" column="1" bodyfile="src/vt/context/runnable_context/td.cc" bodystart="101" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1aa21b5afe01312244e338eefecde83bc6" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void vt::ctx::TD::resume</definition>
        <argsstring>() final override</argsstring>
        <name>resume</name>
        <reimplements refid="structvt_1_1ctx_1_1_base_1a303afabb40ed83057fbe30c744db95da">resume</reimplements>
        <briefdescription>
<para>When resumed, <computeroutput><ref refid="structvt_1_1ctx_1_1_t_d" kindref="compound">TD</ref></computeroutput> will restore the stack back from when it was suspended. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="107" column="1" bodyfile="src/vt/context/runnable_context/td.cc" bodystart="119" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="structvt_1_1ctx_1_1_context" kindref="compound">Context</ref> for termination detection to be preserved with a task. Manages the epoch stack associated with running tasks. Produces and consumes in the constructor and destructor to ensure termination is not detected early. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3888">
        <label>vt::ctx::TD</label>
        <link refid="structvt_1_1ctx_1_1_t_d"/>
        <childnode refid="3889" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3889">
        <label>vt::ctx::Base</label>
        <link refid="structvt_1_1ctx_1_1_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3890">
        <label>vt::ctx::TD</label>
        <link refid="structvt_1_1ctx_1_1_t_d"/>
        <childnode refid="3891" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3891">
        <label>vt::ctx::Base</label>
        <link refid="structvt_1_1ctx_1_1_base"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/context/runnable_context/td.h" line="62" column="1" bodyfile="src/vt/context/runnable_context/td.h" bodystart="62" bodyend="113"/>
    <listofallmembers>
      <member refid="structvt_1_1ctx_1_1_t_d_1ae63dbf338735e6ffd69ae2d67a24e3fb" prot="private" virt="non-virtual"><scope>vt::ctx::TD</scope><name>base_epoch_stack_size_</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1a5ba29186cd3ac75a48272e0ac050228b" prot="public" virt="virtual"><scope>vt::ctx::TD</scope><name>begin</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1a5131b9af6b389c90c1ac908c7dcc59b9" prot="public" virt="virtual"><scope>vt::ctx::TD</scope><name>end</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1a27c1d8888dd9b0fcc0b6a8f31f7ebdb7" prot="private" virt="non-virtual"><scope>vt::ctx::TD</scope><name>ep_</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1aa21b5afe01312244e338eefecde83bc6" prot="public" virt="virtual"><scope>vt::ctx::TD</scope><name>resume</name></member>
      <member refid="structvt_1_1ctx_1_1_base_1ad704f380544dc7e874e23f5700c52db0" prot="public" virt="virtual"><scope>vt::ctx::TD</scope><name>send</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1aa0a190994d71eda5321da08464a810a9" prot="public" virt="virtual"><scope>vt::ctx::TD</scope><name>suspend</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1aa960a5f0ddf7725eb720d8bc68f1325f" prot="private" virt="non-virtual"><scope>vt::ctx::TD</scope><name>suspended_epochs_</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1ade8d2b390d1b4a484dd9f5f20546bc91" prot="public" virt="non-virtual"><scope>vt::ctx::TD</scope><name>TD</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1a59c6dbce4737da7d99a9175be2ed9053" prot="public" virt="non-virtual"><scope>vt::ctx::TD</scope><name>TD</name></member>
      <member refid="structvt_1_1ctx_1_1_base_1a11811118c1c91d93e7679610bf8377f2" prot="public" virt="virtual"><scope>vt::ctx::TD</scope><name>~Base</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1a7682445c6790c8176124c080c3ca340c" prot="public" virt="virtual"><scope>vt::ctx::TD</scope><name>~TD</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
