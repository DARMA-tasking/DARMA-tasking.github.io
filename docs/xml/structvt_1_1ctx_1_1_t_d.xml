<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1ctx_1_1_t_d" kind="struct" language="C++" prot="public">
    <compoundname>vt::ctx::TD</compoundname>
    <includes refid="td_8h" local="no">td.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1ctx_1_1_t_d_1a27c1d8888dd9b0fcc0b6a8f31f7ebdb7" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a81d11b28122d43bf9834577e4a06440f" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::ctx::TD::ep_</definition>
        <argsstring></argsstring>
        <name>ep_</name>
        <initializer>= no_epoch</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The epoch for the task </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="108" column="1" bodyfile="src/vt/context/runnable_context/td.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1a1cb75bb3a0803da9cc471b675aa9124e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::ctx::TD::TD</definition>
        <argsstring>()=default</argsstring>
        <name>TD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1ade8d2b390d1b4a484dd9f5f20546bc91" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::ctx::TD::TD</definition>
        <argsstring>(EpochType in_ep)</argsstring>
        <name>TD</name>
        <param>
          <type><ref refid="namespacevt_1a81d11b28122d43bf9834577e4a06440f" kindref="member">EpochType</ref></type>
          <declname>in_ep</declname>
        </param>
        <briefdescription>
<para>Construct with a given epoch; produce on that epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_ep</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="72" column="1" bodyfile="src/vt/context/runnable_context/td.cc" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1a632c366417b95a168c345cfb17051eeb" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgPtrT</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vt::ctx::TD::TD</definition>
        <argsstring>(MsgPtrT const &amp;msg)</argsstring>
        <name>TD</name>
        <param>
          <type>MsgPtrT const &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Construct with a message to extract the epoch; produce on that epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to extract the epoch from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="81" column="1" bodyfile="src/vt/context/runnable_context/td.impl.h" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1a648eebf5cd551a0917f7a304b03da05d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::ctx::TD::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
<para>During start <computeroutput><ref refid="structvt_1_1ctx_1_1_t_d" kindref="compound">TD</ref></computeroutput> will capture the epoch stack size and push <computeroutput>ep_</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="86" column="1" bodyfile="src/vt/context/runnable_context/td.cc" bodystart="56" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1a4c103ae125725848ad7af51e6c88144e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::ctx::TD::finish</definition>
        <argsstring>()</argsstring>
        <name>finish</name>
        <briefdescription>
<para>During finish <computeroutput><ref refid="structvt_1_1ctx_1_1_t_d" kindref="compound">TD</ref></computeroutput> will pop all epochs off of the stack down to the size it captured in <computeroutput><ref refid="structvt_1_1ctx_1_1_t_d_1a648eebf5cd551a0917f7a304b03da05d" kindref="member">start()</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="92" column="1" bodyfile="src/vt/context/runnable_context/td.cc" bodystart="66" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1ab66a4c01265c0c43d95d0084ea8c5ff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::ctx::TD::suspend</definition>
        <argsstring>()</argsstring>
        <name>suspend</name>
        <briefdescription>
<para>When suspended, <computeroutput><ref refid="structvt_1_1ctx_1_1_t_d" kindref="compound">TD</ref></computeroutput> will preserve any epochs pushed on the stack after begin and restore the stack back to the state before begin was invoked. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="99" column="1" bodyfile="src/vt/context/runnable_context/td.cc" bodystart="84" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1ctx_1_1_t_d_1a0092946ebad71b2518fa8fa5a7eeb3f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::ctx::TD::resume</definition>
        <argsstring>()</argsstring>
        <name>resume</name>
        <briefdescription>
<para>When resumed, <computeroutput><ref refid="structvt_1_1ctx_1_1_t_d" kindref="compound">TD</ref></computeroutput> will restore the stack back from when it was suspended. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/context/runnable_context/td.h" line="105" column="1" bodyfile="src/vt/context/runnable_context/td.cc" bodystart="97" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="structvt_1_1ctx_1_1_context" kindref="compound">Context</ref> for termination detection to be preserved with a task. Manages the epoch stack associated with running tasks. Produces and consumes in the constructor and destructor to ensure termination is not detected early. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4072">
        <label>vt::ctx::TD</label>
        <link refid="structvt_1_1ctx_1_1_t_d"/>
        <childnode refid="4073" relation="usage">
          <edgelabel>ep_</edgelabel>
        </childnode>
      </node>
      <node id="4075">
        <label>T</label>
      </node>
      <node id="4073">
        <label>vt::epoch::EpochType</label>
        <link refid="structvt_1_1epoch_1_1_epoch_type"/>
        <childnode refid="4074" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4074">
        <label>Strong&lt; detail::EpochImplType, detail::no_epoch_impl, detail::EpochImplTag &gt;</label>
        <link refid="structvt_1_1util_1_1strong_1_1detail_1_1_strong"/>
        <childnode refid="4075" relation="usage">
          <edgelabel>v_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/context/runnable_context/td.h" line="63" column="1" bodyfile="src/vt/context/runnable_context/td.h" bodystart="63" bodyend="113"/>
    <listofallmembers>
      <member refid="structvt_1_1ctx_1_1_t_d_1a27c1d8888dd9b0fcc0b6a8f31f7ebdb7" prot="private" virt="non-virtual"><scope>vt::ctx::TD</scope><name>ep_</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1a4c103ae125725848ad7af51e6c88144e" prot="public" virt="non-virtual"><scope>vt::ctx::TD</scope><name>finish</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1a0092946ebad71b2518fa8fa5a7eeb3f2" prot="public" virt="non-virtual"><scope>vt::ctx::TD</scope><name>resume</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1a648eebf5cd551a0917f7a304b03da05d" prot="public" virt="non-virtual"><scope>vt::ctx::TD</scope><name>start</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1ab66a4c01265c0c43d95d0084ea8c5ff9" prot="public" virt="non-virtual"><scope>vt::ctx::TD</scope><name>suspend</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1a1cb75bb3a0803da9cc471b675aa9124e" prot="public" virt="non-virtual"><scope>vt::ctx::TD</scope><name>TD</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1ade8d2b390d1b4a484dd9f5f20546bc91" prot="public" virt="non-virtual"><scope>vt::ctx::TD</scope><name>TD</name></member>
      <member refid="structvt_1_1ctx_1_1_t_d_1a632c366417b95a168c345cfb17051eeb" prot="public" virt="non-virtual"><scope>vt::ctx::TD</scope><name>TD</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
