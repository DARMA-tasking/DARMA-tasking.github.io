<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structvt_1_1phase_1_1_phase_hook_i_d" kind="struct" language="C++" prot="public">
    <compoundname>vt::phase::PhaseHookID</compoundname>
    <includes refid="phase__hook__id_8h" local="no">phase_hook_id.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1phase_1_1_phase_hook_i_d_1a346e5d84677fffb1e9f1f393b7d13779" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct PhaseManager</definition>
        <argsstring></argsstring>
        <name>PhaseManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/phase/phase_hook_id.h" line="80" column="3" bodyfile="src/vt/phase/phase_hook_id.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1phase_1_1_phase_hook_i_d_1a6c2f927ed509d68a0acd18c47f47679b" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1phase_1aec9a63fdd99680d7a7fe99d321193811" kindref="member">PhaseHook</ref></type>
        <definition>PhaseHook vt::phase::PhaseHookID::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/phase/phase_hook_id.h" line="112" column="13" bodyfile="src/vt/phase/phase_hook_id.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1phase_1_1_phase_hook_i_d_1afccddafce973b00c55d3ac4e7c4635d5" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::phase::PhaseHookID::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/phase/phase_hook_id.h" line="113" column="15" bodyfile="src/vt/phase/phase_hook_id.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1phase_1_1_phase_hook_i_d_1a56d0ba883374ef1eb57dcbbb094511da" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::phase::PhaseHookID::is_collective_</definition>
        <argsstring></argsstring>
        <name>is_collective_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/phase/phase_hook_id.h" line="114" column="8" bodyfile="src/vt/phase/phase_hook_id.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1phase_1_1_phase_hook_i_d_1a88e238f6a6411dc0974e93a0b4972833" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::phase::PhaseHookID::is_rooted_</definition>
        <argsstring></argsstring>
        <name>is_rooted_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/phase/phase_hook_id.h" line="115" column="8" bodyfile="src/vt/phase/phase_hook_id.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1phase_1_1_phase_hook_i_d_1a2671882c570d309ddfb2301bdc773f26" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::phase::PhaseHookID::PhaseHookID</definition>
        <argsstring>(PhaseHook in_type, std::size_t in_id, bool in_is_collective, bool in_is_rooted)</argsstring>
        <name>PhaseHookID</name>
        <param>
          <type><ref refid="namespacevt_1_1phase_1aec9a63fdd99680d7a7fe99d321193811" kindref="member">PhaseHook</ref></type>
          <declname>in_type</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>in_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_is_collective</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_is_rooted</declname>
        </param>
        <briefdescription>
<para>Used by the system to create a new phase hook ID. </para>
        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of hook </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the registered ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_is_collective</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it is collective </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_is_rooted</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it is rooted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/phase/phase_hook_id.h" line="71" column="3" bodyfile="src/vt/phase/phase_hook_id.h" bodystart="71" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1phase_1_1_phase_hook_i_d_1a2174260d92495e701ce0636e62b25004" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1phase_1aec9a63fdd99680d7a7fe99d321193811" kindref="member">PhaseHook</ref></type>
        <definition>PhaseHook vt::phase::PhaseHookID::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <briefdescription>
<para>Get the type of hook. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the type of hook </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/phase/phase_hook_id.h" line="88" column="13" bodyfile="src/vt/phase/phase_hook_id.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1phase_1_1_phase_hook_i_d_1ad00ab1e7e2854b3463b39e96ab149a13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::phase::PhaseHookID::getID</definition>
        <argsstring>() const</argsstring>
        <name>getID</name>
        <briefdescription>
<para>Get the ID of the registered hook. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the registered hook ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/phase/phase_hook_id.h" line="95" column="15" bodyfile="src/vt/phase/phase_hook_id.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1phase_1_1_phase_hook_i_d_1ad3f0edab6498385a2611f41f7a658ffa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::phase::PhaseHookID::getIsCollective</definition>
        <argsstring>() const</argsstring>
        <name>getIsCollective</name>
        <briefdescription>
<para>Get whether the hook is collective or not. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it is collective </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/phase/phase_hook_id.h" line="102" column="15" bodyfile="src/vt/phase/phase_hook_id.h" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1phase_1_1_phase_hook_i_d_1a0084724ed8635e3307198227d7055a9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::phase::PhaseHookID::getIsRooted</definition>
        <argsstring>() const</argsstring>
        <name>getIsRooted</name>
        <briefdescription>
<para>Get whether the hook is rooted or not. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it is rooted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/phase/phase_hook_id.h" line="109" column="15" bodyfile="src/vt/phase/phase_hook_id.h" bodystart="109" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A registered phase hook used to identify it and unregister it. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/phase/phase_hook_id.h" line="59" column="18" bodyfile="src/vt/phase/phase_hook_id.h" bodystart="59" bodyend="116"/>
    <listofallmembers>
      <member refid="structvt_1_1phase_1_1_phase_hook_i_d_1ad00ab1e7e2854b3463b39e96ab149a13" prot="public" virt="non-virtual"><scope>vt::phase::PhaseHookID</scope><name>getID</name></member>
      <member refid="structvt_1_1phase_1_1_phase_hook_i_d_1ad3f0edab6498385a2611f41f7a658ffa" prot="public" virt="non-virtual"><scope>vt::phase::PhaseHookID</scope><name>getIsCollective</name></member>
      <member refid="structvt_1_1phase_1_1_phase_hook_i_d_1a0084724ed8635e3307198227d7055a9a" prot="public" virt="non-virtual"><scope>vt::phase::PhaseHookID</scope><name>getIsRooted</name></member>
      <member refid="structvt_1_1phase_1_1_phase_hook_i_d_1a2174260d92495e701ce0636e62b25004" prot="public" virt="non-virtual"><scope>vt::phase::PhaseHookID</scope><name>getType</name></member>
      <member refid="structvt_1_1phase_1_1_phase_hook_i_d_1afccddafce973b00c55d3ac4e7c4635d5" prot="private" virt="non-virtual"><scope>vt::phase::PhaseHookID</scope><name>id_</name></member>
      <member refid="structvt_1_1phase_1_1_phase_hook_i_d_1a56d0ba883374ef1eb57dcbbb094511da" prot="private" virt="non-virtual"><scope>vt::phase::PhaseHookID</scope><name>is_collective_</name></member>
      <member refid="structvt_1_1phase_1_1_phase_hook_i_d_1a88e238f6a6411dc0974e93a0b4972833" prot="private" virt="non-virtual"><scope>vt::phase::PhaseHookID</scope><name>is_rooted_</name></member>
      <member refid="structvt_1_1phase_1_1_phase_hook_i_d_1a2671882c570d309ddfb2301bdc773f26" prot="private" virt="non-virtual"><scope>vt::phase::PhaseHookID</scope><name>PhaseHookID</name></member>
      <member refid="structvt_1_1phase_1_1_phase_hook_i_d_1a346e5d84677fffb1e9f1f393b7d13779" prot="private" virt="non-virtual"><scope>vt::phase::PhaseHookID</scope><name>PhaseManager</name></member>
      <member refid="structvt_1_1phase_1_1_phase_hook_i_d_1a6c2f927ed509d68a0acd18c47f47679b" prot="private" virt="non-virtual"><scope>vt::phase::PhaseHookID</scope><name>type_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
