<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1location_1_1_entity_location_coord" kind="struct" language="C++" prot="public">
    <compoundname>vt::location::EntityLocationCoord</compoundname>
    <basecompoundref refid="structvt_1_1location_1_1_location_coord" prot="public" virt="non-virtual">vt::location::LocationCoord</basecompoundref>
    <includes refid="location_8fwd_8h" local="no">location.fwd.h</includes>
    <templateparamlist>
      <param>
        <type>typename EntityID</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1location_1_1_entity_location_coord_1a685f9eee868b7b9e01072a5b303548bc" prot="public" static="no">
        <type><ref refid="structvt_1_1location_1_1_loc_record" kindref="compound">LocRecord</ref>&lt; EntityID &gt;</type>
        <definition>using vt::location::EntityLocationCoord&lt; EntityID &gt;::LocRecType =  LocRecord&lt;EntityID&gt;</definition>
        <argsstring></argsstring>
        <name>LocRecType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="96" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1location_1_1_entity_location_coord_1a8824e120b11c3234534a6dce11fe0c69" prot="public" static="no">
        <type><ref refid="structvt_1_1location_1_1_loc_lookup" kindref="compound">LocLookup</ref>&lt; EntityID, <ref refid="structvt_1_1location_1_1_entity_location_coord_1a685f9eee868b7b9e01072a5b303548bc" kindref="member">LocRecType</ref> &gt;</type>
        <definition>using vt::location::EntityLocationCoord&lt; EntityID &gt;::LocCacheType =  LocLookup&lt;EntityID, LocRecType&gt;</definition>
        <argsstring></argsstring>
        <name>LocCacheType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="97" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1location_1_1_entity_location_coord_1ab0db07ed0b9f75712922733dd467b100" prot="public" static="no">
        <type><ref refid="structvt_1_1location_1_1_loc_entity" kindref="compound">LocEntity</ref>&lt; EntityID &gt;</type>
        <definition>using vt::location::EntityLocationCoord&lt; EntityID &gt;::LocEntityMsg =  LocEntity&lt;EntityID&gt;</definition>
        <argsstring></argsstring>
        <name>LocEntityMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="98" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1location_1_1_entity_location_coord_1a90aee70e2e80fe4c1abf1d0616113708" prot="public" static="no">
        <type>std::unordered_set&lt; EntityID &gt;</type>
        <definition>using vt::location::EntityLocationCoord&lt; EntityID &gt;::LocalRegisteredContType =  std::unordered_set&lt;EntityID&gt;</definition>
        <argsstring></argsstring>
        <name>LocalRegisteredContType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="99" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1location_1_1_entity_location_coord_1a0c6d24fed6c690ac6d044b11d884df65" prot="public" static="no">
        <type>std::unordered_map&lt; EntityID, <ref refid="structvt_1_1location_1_1_entity_location_coord_1ab0db07ed0b9f75712922733dd467b100" kindref="member">LocEntityMsg</ref> &gt;</type>
        <definition>using vt::location::EntityLocationCoord&lt; EntityID &gt;::LocalRegisteredMsgContType =  std::unordered_map&lt;EntityID, LocEntityMsg&gt;</definition>
        <argsstring></argsstring>
        <name>LocalRegisteredMsgContType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="100" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1location_1_1_entity_location_coord_1a093712fbaa7584cb35db2b33514a719a" prot="public" static="no">
        <type>std::list&lt; <ref refid="namespacevt_1_1location_1a3a9235e0ceb341bef225d2cc46606e9e" kindref="member">NodeActionType</ref> &gt;</type>
        <definition>using vt::location::EntityLocationCoord&lt; EntityID &gt;::ActionListType =  std::list&lt;NodeActionType&gt;</definition>
        <argsstring></argsstring>
        <name>ActionListType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="101" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1location_1_1_entity_location_coord_1a41b5c3792967e089c7e592b705c266c3" prot="public" static="no">
        <type><ref refid="structvt_1_1location_1_1_pending_location_lookup" kindref="compound">PendingLocationLookup</ref>&lt; EntityID &gt;</type>
        <definition>using vt::location::EntityLocationCoord&lt; EntityID &gt;::PendingType =  PendingLocationLookup&lt;EntityID&gt;</definition>
        <argsstring></argsstring>
        <name>PendingType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="102" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1location_1_1_entity_location_coord_1a495c5dfc3aa444524af9aede4b20cfdc" prot="public" static="no">
        <type>std::unordered_map&lt; EntityID, <ref refid="structvt_1_1location_1_1_entity_location_coord_1a093712fbaa7584cb35db2b33514a719a" kindref="member">ActionListType</ref> &gt;</type>
        <definition>using vt::location::EntityLocationCoord&lt; EntityID &gt;::PendingLocLookupsType =  std::unordered_map&lt;EntityID, ActionListType&gt;</definition>
        <argsstring></argsstring>
        <name>PendingLocLookupsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="103" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1location_1_1_entity_location_coord_1afeaaebfc1d7cbdd20cccbd348d96748a" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1location_1aa5ccc1a42aa22b0b41fcfbbdee314dca" kindref="member">LocEventID</ref>, <ref refid="structvt_1_1location_1_1_entity_location_coord_1a41b5c3792967e089c7e592b705c266c3" kindref="member">PendingType</ref> &gt;</type>
        <definition>using vt::location::EntityLocationCoord&lt; EntityID &gt;::ActionContainerType =  std::unordered_map&lt;LocEventID, PendingType&gt;</definition>
        <argsstring></argsstring>
        <name>ActionContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="104" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1location_1_1_entity_location_coord_1a8799cbd5fb0fb04cfdd1012fe1d5908f" prot="public" static="no">
        <type><ref refid="structvt_1_1location_1_1_location_msg" kindref="compound">LocationMsg</ref>&lt; EntityID &gt;</type>
        <definition>using vt::location::EntityLocationCoord&lt; EntityID &gt;::LocMsgType =  LocationMsg&lt;EntityID&gt;</definition>
        <argsstring></argsstring>
        <name>LocMsgType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="105" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1location_1_1_entity_location_coord_1a492ca5404229c05923f69bae396f2ac4" prot="public" static="no">
        <type>std::unordered_map&lt; EntityID, std::unordered_set&lt; <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> &gt; &gt;</type>
        <definition>using vt::location::EntityLocationCoord&lt; EntityID &gt;::LocAsksType =  std::unordered_map&lt;EntityID, std::unordered_set&lt;NodeType&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>LocAsksType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="106" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1location_1_1_entity_location_coord_1a69e037fef241a04659b4068c8ae1513f" prot="public" static="no">
        <type><ref refid="structvt_1_1location_1_1_entity_msg" kindref="compound">EntityMsg</ref>&lt; EntityID, MessageT &gt;</type>
        <definition>using vt::location::EntityLocationCoord&lt; EntityID &gt;::EntityMsgType =  EntityMsg&lt;EntityID, MessageT&gt;</definition>
        <argsstring></argsstring>
        <name>EntityMsgType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="109" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1location_1_1_entity_location_coord_1ade191f7cf6aba682f960abef1ddab9fc" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1location_1a4db6456e8024af2d23fc5ae560fef866" kindref="member">LocInstType</ref></type>
        <definition>LocInstType vt::location::EntityLocationCoord&lt; EntityID &gt;::this_inst</definition>
        <argsstring></argsstring>
        <name>this_inst</name>
        <initializer>= no_loc_inst</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="441" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1location_1_1_entity_location_coord_1a48417f0a02356ec97b97250b18ba43f2" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1location_1_1_entity_location_coord_1a0c6d24fed6c690ac6d044b11d884df65" kindref="member">LocalRegisteredMsgContType</ref></type>
        <definition>LocalRegisteredMsgContType vt::location::EntityLocationCoord&lt; EntityID &gt;::local_registered_msg_han_</definition>
        <argsstring></argsstring>
        <name>local_registered_msg_han_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="444" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1location_1_1_entity_location_coord_1a17f116f6581c4f67c2c5450db40f70a6" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1location_1_1_entity_location_coord_1a90aee70e2e80fe4c1abf1d0616113708" kindref="member">LocalRegisteredContType</ref></type>
        <definition>LocalRegisteredContType vt::location::EntityLocationCoord&lt; EntityID &gt;::local_registered_</definition>
        <argsstring></argsstring>
        <name>local_registered_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="447" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1location_1_1_entity_location_coord_1a4822f7d8be8fd72319ad7a1823cf5fc9" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1location_1_1_entity_location_coord_1a8824e120b11c3234534a6dce11fe0c69" kindref="member">LocCacheType</ref></type>
        <definition>LocCacheType vt::location::EntityLocationCoord&lt; EntityID &gt;::recs_</definition>
        <argsstring></argsstring>
        <name>recs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="450" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1location_1_1_entity_location_coord_1aa62ca806fbfc08f754e7e72dd9e91a7a" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1location_1_1_entity_location_coord_1afeaaebfc1d7cbdd20cccbd348d96748a" kindref="member">ActionContainerType</ref></type>
        <definition>ActionContainerType vt::location::EntityLocationCoord&lt; EntityID &gt;::pending_actions_</definition>
        <argsstring></argsstring>
        <name>pending_actions_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="453" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1location_1_1_entity_location_coord_1a321719e0c1c938ef5dc8134ac92849fd" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1location_1_1_entity_location_coord_1a495c5dfc3aa444524af9aede4b20cfdc" kindref="member">PendingLocLookupsType</ref></type>
        <definition>PendingLocLookupsType vt::location::EntityLocationCoord&lt; EntityID &gt;::pending_lookups_</definition>
        <argsstring></argsstring>
        <name>pending_lookups_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="456" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1location_1_1_entity_location_coord_1a52abbeb79fc2d24889a05ac87ad6e7f5" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1location_1_1_entity_location_coord_1a492ca5404229c05923f69bae396f2ac4" kindref="member">LocAsksType</ref></type>
        <definition>LocAsksType vt::location::EntityLocationCoord&lt; EntityID &gt;::loc_asks_</definition>
        <argsstring></argsstring>
        <name>loc_asks_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="459" column="1" bodyfile="src/vt/topos/location/location.h" bodystart="459" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a84d2166e5a2c192b081c222e15e93882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::location::EntityLocationCoord&lt; EntityID &gt;::EntityLocationCoord</definition>
        <argsstring>()</argsstring>
        <name>EntityLocationCoord</name>
        <briefdescription>
<para>System call to construct a new entity coordinator. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="114" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a0a25560f861221daafca33ce2657f04b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::location::EntityLocationCoord&lt; EntityID &gt;::EntityLocationCoord</definition>
        <argsstring>(collection_lm_tag_t, LocInstType identifier)</argsstring>
        <name>EntityLocationCoord</name>
        <param>
          <type><ref refid="structvt_1_1location_1_1collection__lm__tag__t" kindref="compound">collection_lm_tag_t</ref></type>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1location_1a4db6456e8024af2d23fc5ae560fef866" kindref="member">LocInstType</ref></type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
<para>System call to construct a new entity coordinator for collections. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in"><ref refid="structvt_1_1location_1_1collection__lm__tag__t" kindref="compound">collection_lm_tag_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>tag </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity class identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="123" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a5dcddcc605ab3cd16d94161e895b88e3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::location::EntityLocationCoord&lt; EntityID &gt;::EntityLocationCoord</definition>
        <argsstring>(LocInstType const identifier)</argsstring>
        <name>EntityLocationCoord</name>
        <param>
          <type><ref refid="namespacevt_1_1location_1a4db6456e8024af2d23fc5ae560fef866" kindref="member">LocInstType</ref> const</type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
<para>System call to construct a new entity coordinator. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity class identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="130" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="75" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1af68fd9bb9fcbf02f693ba2af503ed409" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>vt::location::EntityLocationCoord&lt; EntityID &gt;::~EntityLocationCoord</definition>
        <argsstring>()</argsstring>
        <name>~EntityLocationCoord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="132" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="92" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a3d7f6c252ad5cb8d1084620946245970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::registerEntity</definition>
        <argsstring>(EntityID const &amp;id, NodeType const &amp;home, LocMsgActionType msg_action=nullptr, bool const &amp;migrated=false)</argsstring>
        <name>registerEntity</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1location_1ad0a130e4d79e745543925240e13e8f08" kindref="member">LocMsgActionType</ref></type>
          <declname>msg_action</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>migrated</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Register a new entity. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home</parametername>
</parameternamelist>
<parameterdescription>
<para>the home node for this entity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg_action</parametername>
</parameternamelist>
<parameterdescription>
<para>function to trigger when message arrives for it </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">migrated</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it migrated in: <computeroutput>entityEmigrated</computeroutput> is preferred </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="142" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="96" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a0d3a9a66cddeb6929ed8452a02ba7681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::registerEntityRemote</definition>
        <argsstring>(EntityID const &amp;id, NodeType const &amp;home, NodeType const create_node, LocMsgActionType msg_action=nullptr)</argsstring>
        <name>registerEntityRemote</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const</type>
          <declname>create_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1location_1ad0a130e4d79e745543925240e13e8f08" kindref="member">LocMsgActionType</ref></type>
          <declname>msg_action</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Register a new entity that has been created remotely<mdash/>on another rank off the home node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Example: an insertion occurs off home node. The insertion node sends a message to the home and makes this invocation</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home</parametername>
</parameternamelist>
<parameterdescription>
<para>the home node for this entity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">create_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node where the creation is occurring </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg_action</parametername>
</parameternamelist>
<parameterdescription>
<para>function to trigger when message arrives for it </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="159" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="183" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a076ec3a6b06e74567e7281adb0645cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::unregisterEntity</definition>
        <argsstring>(EntityID const &amp;id)</argsstring>
        <name>unregisterEntity</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Unregister an entity. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="169" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="215" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a770fca228907ff6f818ab184d7580a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::entityEmigrated</definition>
        <argsstring>(EntityID const &amp;id, NodeType const &amp;new_node)</argsstring>
        <name>entityEmigrated</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>new_node</declname>
        </param>
        <briefdescription>
<para>Tell coordinator that the entity has migrated to another node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">new_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node it was migrated to </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="178" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="242" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a67df1eb9ae48ef4b181dafda9ae3ff71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::entityImmigrated</definition>
        <argsstring>(EntityID const &amp;id, NodeType const &amp;home_node, NodeType const &amp;__attribute__((unused)) from_node, LocMsgActionType msg_action=nullptr)</argsstring>
        <name>entityImmigrated</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>home_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;__attribute__((unused))</type>
          <declname>from_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1location_1ad0a130e4d79e745543925240e13e8f08" kindref="member">LocMsgActionType</ref></type>
          <declname>msg_action</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Register a migrated entity on new node. </para>        </briefdescription>
        <detaileddescription>
<para>This should be called after the entity is migrated when it arrived on the new node: order of operations:</para><para>1) Node 0: registerEntity(my_id, ...); 2) Node 0: entityEmigrated(my_id, 1); 3) Node 1: entityImmigrated(my_id, &lt;home&gt;, 0, ...);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the home node for the entity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg_action</parametername>
</parameternamelist>
<parameterdescription>
<para>function to trigger when message arrives for it </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="195" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="261" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a129f501be83c7fceb47466c34d733248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::getLocation</definition>
        <argsstring>(EntityID const &amp;id, NodeType const &amp;home_node, NodeActionType const &amp;action)</argsstring>
        <name>getLocation</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>home_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1location_1a3a9235e0ceb341bef225d2cc46606e9e" kindref="member">NodeActionType</ref> const &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Get the location of an entity. </para>        </briefdescription>
        <detaileddescription>
<para>Get the location of a entity: the `action&apos; is triggered when the location of the entity is resolved. This is an asynchronous call that may send messages to discover the location of the entity `id&apos;. To resolve the location the method uses the following algorithm:</para><para>1) Check locally for the entity&apos;s existence 2) If not local, search for a cache entry with location info 3) If no cache information available, send resolution message to home node. a) The home node applies the same algorithm, starting with (1) b) On step 3, if no information is known, the manager buffers the request, waiting to the entity to be registered in the future.</para><para><simplesect kind="note"><para>Migrations may make this information inaccurate; the node delivered to `action&apos; reflects the current known state, which may be remote.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the home node for the entity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>the action to trigger with the discovered location </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="223" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="371" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a0432bf605db83627c15e2c53920aff97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MessageT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MessageT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::routeMsgHandler</definition>
        <argsstring>(EntityID const &amp;id, NodeType const &amp;home_node, MessageT *m)</argsstring>
        <name>routeMsgHandler</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>home_node</declname>
        </param>
        <param>
          <type>MessageT *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Route a message with a custom handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home_node</parametername>
</parameternamelist>
<parameterdescription>
<para>home node for entity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="235" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="632" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1ad0465263fbb33cf63819fd2c86f10cec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MessageT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MessageT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::routeMsgSerializeHandler</definition>
        <argsstring>(EntityID const &amp;id, NodeType const &amp;home_node, MsgSharedPtr&lt; MessageT &gt; msg)</argsstring>
        <name>routeMsgSerializeHandler</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>home_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MessageT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Route a serialized message with a custom handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home_node</parametername>
</parameternamelist>
<parameterdescription>
<para>home node for entity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="247" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="652" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1adead0cbbf14cc160034b55abfa5b9ca0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MessageT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::routeMsg</definition>
        <argsstring>(EntityID const &amp;id, NodeType const &amp;home_node, MsgSharedPtr&lt; MessageT &gt; msg, bool const serialize_msg=false, NodeType from_node=uninitialized_destination)</argsstring>
        <name>routeMsg</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>home_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MessageT &gt;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>serialize_msg</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>from_node</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <briefdescription>
<para>Route a message to the default handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home_node</parametername>
</parameternamelist>
<parameterdescription>
<para>home node for the entity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">serialize_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it should be serialized (optional) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">from_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the sending node (optional) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="261" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="679" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a1a1d8dfa9ac9fdceadb5c2ef9b9cecb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MessageT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::routeMsgSerialize</definition>
        <argsstring>(EntityID const &amp;id, NodeType const &amp;home_node, MsgSharedPtr&lt; MessageT &gt; msg)</argsstring>
        <name>routeMsgSerialize</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>home_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MessageT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Route a message to the default handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home_node</parametername>
</parameternamelist>
<parameterdescription>
<para>home node for the entity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="275" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="671" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1ae7c1ec3412f2a16ea3f40d6bb39f23ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::routeNonEagerAction</definition>
        <argsstring>(EntityID const &amp;id, NodeType const &amp;home_node, ActionNodeType action)</argsstring>
        <name>routeNonEagerAction</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>home_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a0436cb2d620dcbb21b5b49cd9c9c4749" kindref="member">ActionNodeType</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Route a message with non-eager protocol. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home_node</parametername>
</parameternamelist>
<parameterdescription>
<para>home node for the entity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action once entity is found </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="286" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="622" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a96e4c5c2a943450554b17c34f05995d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::updatePendingRequest</definition>
        <argsstring>(LocEventID const &amp;event_id, EntityID const &amp;id, NodeType const &amp;resolved_node, NodeType const &amp;home_node)</argsstring>
        <name>updatePendingRequest</name>
        <param>
          <type><ref refid="namespacevt_1_1location_1aa5ccc1a42aa22b0b41fcfbbdee314dca" kindref="member">LocEventID</ref> const &amp;</type>
          <declname>event_id</declname>
        </param>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>resolved_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>home_node</declname>
        </param>
        <briefdescription>
<para>Update location. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the event ID waiting on the location </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">resolved_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node reported to have the entity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the home node for the entity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="298" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="725" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a33f2bf9523cfc89fae0f1151fa2d87db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::printCurrentCache</definition>
        <argsstring>() const</argsstring>
        <name>printCurrentCache</name>
        <briefdescription>
<para>Output the current cache state. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="306" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="771" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a9e6d5b9783f617f4e036ad9f7ba19953" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::location::EntityLocationCoord&lt; EntityID &gt;::isCached</definition>
        <argsstring>(EntityID const &amp;id) const</argsstring>
        <name>isCached</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if the purported location of an entity is cached. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it is cached </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="315" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="271" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1ac20c510b73a5f6f753269b6d05b389aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::clearCache</definition>
        <argsstring>()</argsstring>
        <name>clearCache</name>
        <briefdescription>
<para>Clear the cache. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="320" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="276" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a9903f0c4581b9d8a231293e98cf9a11c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::sendEagerUpdate</definition>
        <argsstring>(EntityID const &amp;id, NodeType ask_node, NodeType home_node, NodeType deliver_node)</argsstring>
        <name>sendEagerUpdate</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>ask_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>home_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>deliver_node</declname>
        </param>
        <briefdescription>
<para>Send back an eager update on a discovered location. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ask_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the asking node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the home node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">deliver_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node discovered which delivered the message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="330" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="461" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a02337c5b5c23bf81b540568107103ef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::handleEagerUpdate</definition>
        <argsstring>(EntityID const &amp;id, NodeType home_node, NodeType deliver_node)</argsstring>
        <name>handleEagerUpdate</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>home_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>deliver_node</declname>
        </param>
        <briefdescription>
<para>Update cache on eager update received. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the home node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">deliver_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node discovered which delivered the message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="342" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="434" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a5d41b90c998e6de566868868c9cc4ba1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MessageT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::location::EntityLocationCoord&lt; EntityID &gt;::useEagerProtocol</definition>
        <argsstring>(MsgSharedPtr&lt; MessageT &gt; msg) const</argsstring>
        <name>useEagerProtocol</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MessageT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Check if the eager or rendezvous protocol should be used. </para>        </briefdescription>
        <detaileddescription>
<para>eager protocol, typically used for small messages, forwards the message even if the location is stale or unknown (to the home node). The rendezvous protocol, typically used for large messages, will send a control message to determine the location of the entity before sending the actual data. The threshold between these two modes is controlled by <computeroutput>small_msg_max_size</computeroutput> </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to check</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it is of eager size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="360" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="282" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1abff79ccad9dcd168217f99ee97048beb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1location_1a4db6456e8024af2d23fc5ae560fef866" kindref="member">LocInstType</ref></type>
        <definition>LocInstType vt::location::EntityLocationCoord&lt; EntityID &gt;::getInst</definition>
        <argsstring>() const</argsstring>
        <name>getInst</name>
        <briefdescription>
<para>Get the instance identifier for this location manager. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>the instance ID </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="438" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="776" bodyend="778"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a1a6da8e3885d431284325e2959c48f8e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MessageT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::routedHandler</definition>
        <argsstring>(MessageT *msg)</argsstring>
        <name>routedHandler</name>
        <param>
          <type>MessageT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Handle relocation on different node. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="369" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="782" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a42978b37cb0a0847f929f49e6286e5bc" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::getLocationHandler</definition>
        <argsstring>(LocMsgType *msg)</argsstring>
        <name>getLocationHandler</name>
        <param>
          <type><ref refid="structvt_1_1location_1_1_entity_location_coord_1a8799cbd5fb0fb04cfdd1012fe1d5908f" kindref="member">LocMsgType</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Request location handler from this node. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the location request message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="376" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="816" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a6102920cd3ab80156a77e5f15d92ffcf" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::updateLocation</definition>
        <argsstring>(LocMsgType *msg)</argsstring>
        <name>updateLocation</name>
        <param>
          <type><ref refid="structvt_1_1location_1_1_entity_location_coord_1a8799cbd5fb0fb04cfdd1012fe1d5908f" kindref="member">LocMsgType</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Update the location on this node. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the location update message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="383" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="865" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a98ffa928c0a52ed5d6852200db31ade6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::recvEagerUpdate</definition>
        <argsstring>(LocMsgType *msg)</argsstring>
        <name>recvEagerUpdate</name>
        <param>
          <type><ref refid="structvt_1_1location_1_1_entity_location_coord_1a8799cbd5fb0fb04cfdd1012fe1d5908f" kindref="member">LocMsgType</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Receive an eager location update. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the location update message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="390" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="899" bodyend="922"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a697b9b80d69caa89c8abfb0d7b075720" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MessageT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::routeMsgEager</definition>
        <argsstring>(bool const is_serialized, EntityID const &amp;id, NodeType const &amp;home_node, MsgSharedPtr&lt; MessageT &gt; msg)</argsstring>
        <name>routeMsgEager</name>
        <param>
          <type>bool const</type>
          <declname>is_serialized</declname>
        </param>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>home_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MessageT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Route a message to destination with eager protocol. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_serialized</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it is serialized </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the home node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to route </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="401" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="315" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a2e325cea09f376da4be61cd540455618" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MessageT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::routeMsgNode</definition>
        <argsstring>(bool const is_serialized, EntityID const &amp;id, NodeType const &amp;home_node, NodeType const &amp;to_node, MsgSharedPtr&lt; MessageT &gt; msg)</argsstring>
        <name>routeMsgNode</name>
        <param>
          <type>bool const</type>
          <declname>is_serialized</declname>
        </param>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>home_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>to_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MessageT &gt;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Route a message to destination with rendezvous protocol. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_serialized</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it is serialized </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">home_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the home node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">to_node</parametername>
</parameternamelist>
<parameterdescription>
<para>destination node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to route </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="416" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="483" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1location_1_1_entity_location_coord_1a2b2c69634e3ef42e2625541cd234b350" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::location::EntityLocationCoord&lt; EntityID &gt;::insertPendingEntityAction</definition>
        <argsstring>(EntityID const &amp;id, NodeActionType action)</argsstring>
        <name>insertPendingEntityAction</name>
        <param>
          <type>EntityID const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1location_1a3a9235e0ceb341bef225d2cc46606e9e" kindref="member">NodeActionType</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Insert a pending entity action. </para>        </briefdescription>
        <detaileddescription>
<para>actions that are waiting on an entity to be registered on this node. Once <computeroutput>registerEntity</computeroutput> is called, these actions will get triggered.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>action to execute </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/topos/location/location.h" line="430" column="1" bodyfile="src/vt/topos/location/location.impl.h" bodystart="291" bodyend="311"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Part of a core VT component that manages the distributed location of virtual entities. </para>    </briefdescription>
    <detaileddescription>
<para>Allows general registration of an <computeroutput>EntityID</computeroutput> that is tracked across the system as it migrates. Routes messages to the appropriate node by inheriting from <computeroutput><ref refid="structvt_1_1location_1_1_entity_msg" kindref="compound">EntityMsg</ref></computeroutput> and sending it through the routing algorithm. Manages a distributed table of entities and their location allowing an entity to be found anywhere in the system. Caches locations to speed up resolution once a location is known. Allows migration of an entity at any time; forwards messages if they miss in the cache.</para><para>The <computeroutput>registerEntity</computeroutput> method allows an external component to locally register an entity as existing on this node. If the entity is deleted, <computeroutput>unregisterEntity</computeroutput> should be called; if the entity is migrated, <computeroutput>entityEmigrated</computeroutput> should be invoked on the node from which the entity is emigrating. A message may arrive for the entity by a location coordinator calling <computeroutput>routeMsg</computeroutput> to the associated entity. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1644">
        <label>vt::location::LocationCoord</label>
        <link refid="structvt_1_1location_1_1_location_coord"/>
      </node>
      <node id="1643">
        <label>vt::location::EntityLocationCoord&lt; EntityID &gt;</label>
        <link refid="structvt_1_1location_1_1_entity_location_coord"/>
        <childnode refid="1644" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1646">
        <label>vt::location::LocationCoord</label>
        <link refid="structvt_1_1location_1_1_location_coord"/>
      </node>
      <node id="1647">
        <label>vt::location::LocLookup&lt; EntityID, LocRecType &gt;</label>
        <link refid="structvt_1_1location_1_1_loc_lookup"/>
        <childnode refid="1648" relation="usage">
          <edgelabel>cache_</edgelabel>
        </childnode>
        <childnode refid="1649" relation="usage">
          <edgelabel>directory_</edgelabel>
        </childnode>
      </node>
      <node id="1649">
        <label>vt::location::Directory&lt; EntityID, LocRecType &gt;</label>
        <link refid="structvt_1_1location_1_1_directory"/>
      </node>
      <node id="1648">
        <label>vt::location::LocationCache&lt; EntityID, LocRecType &gt;</label>
        <link refid="structvt_1_1location_1_1_location_cache"/>
      </node>
      <node id="1645">
        <label>vt::location::EntityLocationCoord&lt; EntityID &gt;</label>
        <link refid="structvt_1_1location_1_1_entity_location_coord"/>
        <childnode refid="1646" relation="public-inheritance">
        </childnode>
        <childnode refid="1647" relation="usage">
          <edgelabel>recs_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/topos/location/location.fwd.h" line="52" column="1" bodyfile="src/vt/topos/location/location.fwd.h" bodystart="52" bodyend="-1"/>
    <listofallmembers>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1afeaaebfc1d7cbdd20cccbd348d96748a" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>ActionContainerType</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a093712fbaa7584cb35db2b33514a719a" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>ActionListType</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1ac20c510b73a5f6f753269b6d05b389aa" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>clearCache</name></member>
      <member refid="structvt_1_1location_1_1_location_coord_1aa94c83bab2f01365b14852e7b80e6aec" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>data</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a770fca228907ff6f818ab184d7580a5e" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>entityEmigrated</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a67df1eb9ae48ef4b181dafda9ae3ff71" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>entityImmigrated</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a84d2166e5a2c192b081c222e15e93882" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>EntityLocationCoord</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a0a25560f861221daafca33ce2657f04b" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>EntityLocationCoord</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a5dcddcc605ab3cd16d94161e895b88e3" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>EntityLocationCoord</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a69e037fef241a04659b4068c8ae1513f" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>EntityMsgType</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1abff79ccad9dcd168217f99ee97048beb" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>getInst</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a129f501be83c7fceb47466c34d733248" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>getLocation</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a42978b37cb0a0847f929f49e6286e5bc" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>getLocationHandler</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a02337c5b5c23bf81b540568107103ef4" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>handleEagerUpdate</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a2b2c69634e3ef42e2625541cd234b350" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>insertPendingEntityAction</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a9e6d5b9783f617f4e036ad9f7ba19953" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>isCached</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a52abbeb79fc2d24889a05ac87ad6e7f5" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>loc_asks_</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a17f116f6581c4f67c2c5450db40f70a6" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>local_registered_</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a48417f0a02356ec97b97250b18ba43f2" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>local_registered_msg_han_</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a90aee70e2e80fe4c1abf1d0616113708" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>LocalRegisteredContType</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a0c6d24fed6c690ac6d044b11d884df65" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>LocalRegisteredMsgContType</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a492ca5404229c05923f69bae396f2ac4" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>LocAsksType</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a8824e120b11c3234534a6dce11fe0c69" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>LocCacheType</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1ab0db07ed0b9f75712922733dd467b100" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>LocEntityMsg</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a8799cbd5fb0fb04cfdd1012fe1d5908f" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>LocMsgType</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a685f9eee868b7b9e01072a5b303548bc" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>LocRecType</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1aa62ca806fbfc08f754e7e72dd9e91a7a" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>pending_actions_</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a321719e0c1c938ef5dc8134ac92849fd" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>pending_lookups_</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a495c5dfc3aa444524af9aede4b20cfdc" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>PendingLocLookupsType</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a41b5c3792967e089c7e592b705c266c3" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>PendingType</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a33f2bf9523cfc89fae0f1151fa2d87db" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>printCurrentCache</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a4822f7d8be8fd72319ad7a1823cf5fc9" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>recs_</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a98ffa928c0a52ed5d6852200db31ade6" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>recvEagerUpdate</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a3d7f6c252ad5cb8d1084620946245970" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>registerEntity</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a0d3a9a66cddeb6929ed8452a02ba7681" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>registerEntityRemote</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a1a6da8e3885d431284325e2959c48f8e" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>routedHandler</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1adead0cbbf14cc160034b55abfa5b9ca0" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>routeMsg</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a697b9b80d69caa89c8abfb0d7b075720" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>routeMsgEager</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a0432bf605db83627c15e2c53920aff97" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>routeMsgHandler</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a2e325cea09f376da4be61cd540455618" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>routeMsgNode</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a1a1d8dfa9ac9fdceadb5c2ef9b9cecb6" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>routeMsgSerialize</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1ad0465263fbb33cf63819fd2c86f10cec" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>routeMsgSerializeHandler</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1ae7c1ec3412f2a16ea3f40d6bb39f23ca" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>routeNonEagerAction</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a9903f0c4581b9d8a231293e98cf9a11c" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>sendEagerUpdate</name></member>
      <member refid="structvt_1_1location_1_1_location_coord_1a753861168e43ce015323fba60f45faf7" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>serialize</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1ade191f7cf6aba682f960abef1ddab9fc" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>this_inst</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a076ec3a6b06e74567e7281adb0645cd7" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>unregisterEntity</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a6102920cd3ab80156a77e5f15d92ffcf" prot="private" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>updateLocation</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a96e4c5c2a943450554b17c34f05995d0" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>updatePendingRequest</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1a5d41b90c998e6de566868868c9cc4ba1" prot="public" virt="non-virtual"><scope>vt::location::EntityLocationCoord</scope><name>useEagerProtocol</name></member>
      <member refid="structvt_1_1location_1_1_entity_location_coord_1af68fd9bb9fcbf02f693ba2af503ed409" prot="public" virt="virtual"><scope>vt::location::EntityLocationCoord</scope><name>~EntityLocationCoord</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
