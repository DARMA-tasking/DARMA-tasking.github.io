<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1messaging_1_1_active_msg" kind="struct" language="C++" prot="public">
    <compoundname>vt::messaging::ActiveMsg</compoundname>
    <basecompoundref refid="structvt_1_1messaging_1_1_base_msg" prot="public" virt="non-virtual">vt::messaging::BaseMsg</basecompoundref>
    <derivedcompoundref refid="structvt_1_1group_1_1_group_msg" prot="public" virt="non-virtual">vt::group::GroupMsg&lt;::vt::Message &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1collective_1_1barrier_1_1_barrier_msg" prot="public" virt="non-virtual">vt::collective::barrier::BarrierMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1collective_1_1scatter_1_1_scatter_msg" prot="public" virt="non-virtual">vt::collective::scatter::ScatterMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1_event_check_finished_msg" prot="public" virt="non-virtual">vt::EventCheckFinishedMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1_event_finished_msg" prot="public" virt="non-virtual">vt::EventFinishedMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1group_1_1global_1_1_group_sync_msg" prot="public" virt="non-virtual">vt::group::global::GroupSyncMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1location_1_1_location_msg" prot="public" virt="non-virtual">vt::location::LocationMsg&lt; EntityID &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1param_1_1_data_msg" prot="public" virt="non-virtual">vt::param::DataMsg&lt; Tuple &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1pipe_1_1_callback_msg" prot="public" virt="non-virtual">vt::pipe::CallbackMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1rdma_1_1_channel_message" prot="public" virt="non-virtual">vt::rdma::ChannelMessage</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1rdma_1_1_create_channel" prot="public" virt="non-virtual">vt::rdma::CreateChannel</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1rdma_1_1_get_info_channel" prot="public" virt="non-virtual">vt::rdma::GetInfoChannel</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1rdma_1_1impl_1_1_inform_r_d_m_a_msg" prot="public" virt="non-virtual">vt::rdma::impl::InformRDMAMsg&lt; ProxyT, IndexT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1rdma_1_1_r_d_m_a_op_finished_message" prot="public" virt="non-virtual">vt::rdma::RDMAOpFinishedMessage&lt; EnvelopeT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1rdma_1_1_request_data_message" prot="public" virt="non-virtual">vt::rdma::RequestDataMessage&lt; EnvelopeT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1rdma_1_1_send_data_message" prot="public" virt="non-virtual">vt::rdma::SendDataMessage&lt; EnvelopeT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1rdma_1_1_state_message" prot="public" virt="non-virtual">vt::rdma::StateMessage&lt; StateT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1term_1_1_build_graph_msg" prot="public" virt="non-virtual">vt::term::BuildGraphMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1term_1_1ds_1_1_ack_msg" prot="public" virt="non-virtual">vt::term::ds::AckMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1term_1_1_hang_check_msg" prot="public" virt="non-virtual">vt::term::HangCheckMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1term_1_1_term_counter_msg" prot="public" virt="non-virtual">vt::term::TermCounterMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1term_1_1_term_msg" prot="public" virt="non-virtual">vt::term::TermMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1term_1_1_term_terminated_msg" prot="public" virt="non-virtual">vt::term::TermTerminatedMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1term_1_1_term_terminated_reply_msg" prot="public" virt="non-virtual">vt::term::TermTerminatedReplyMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_msg" prot="public" virt="non-virtual">vt::trace::file_spec::TraceSpec::SpecMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1trace_1_1_user_event_registry_1_1_new_user_event_msg" prot="public" virt="non-virtual">vt::trace::UserEventRegistry::NewUserEventMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_act_insert_msg" prot="public" virt="non-virtual">vt::vrt::collection::ActInsertMsg&lt; ColT, IndexT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_gossip_msg" prot="public" virt="non-virtual">vt::vrt::collection::balance::GossipMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_collection_create_msg" prot="public" virt="non-virtual">vt::vrt::collection::CollectionCreateMsg&lt; RemoteInfo, ArgsTuple, CollectionT, IndexT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_collection_phase_msg" prot="public" virt="non-virtual">vt::vrt::collection::CollectionPhaseMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_destroy_msg" prot="public" virt="non-virtual">vt::vrt::collection::DestroyMsg&lt; ColT, IndexT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_done_insert_msg" prot="public" virt="non-virtual">vt::vrt::collection::DoneInsertMsg&lt; ColT, IndexT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_insert_msg" prot="public" virt="non-virtual">vt::vrt::collection::InsertMsg&lt; ColT, IndexT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_l_b_tree_down_msg" prot="public" virt="non-virtual">vt::vrt::collection::lb::LBTreeDownMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_l_b_tree_up_msg" prot="public" virt="non-virtual">vt::vrt::collection::lb::LBTreeUpMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_rotate_obj_msg" prot="public" virt="non-virtual">vt::vrt::collection::lb::RotateObjMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_transfer_msg" prot="public" virt="non-virtual">vt::vrt::collection::lb::TransferMsg&lt; Transfer &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_migrate_msg" prot="public" virt="non-virtual">vt::vrt::collection::MigrateMsg&lt; ColT, IndexT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_update_insert_msg" prot="public" virt="non-virtual">vt::vrt::collection::UpdateInsertMsg&lt; ColT, IndexT &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1_virtual_proxy_request_msg" prot="public" virt="non-virtual">vt::vrt::VirtualProxyRequestMsg</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1_vrt_construct_msg" prot="public" virt="non-virtual">vt::vrt::VrtConstructMsg&lt; RemoteInfo, ArgsTuple, VirtualContextT &gt;</derivedcompoundref>
    <includes refid="message_2message_8h" local="no">vt/messaging/message/message.h</includes>
    <templateparamlist>
      <param>
        <type>typename EnvelopeT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1messaging_1_1_active_msg_1a6e2b0541c25f7290555bf50d7cc05874" prot="public" static="no">
        <type>EnvelopeT</type>
        <definition>using vt::messaging::ActiveMsg&lt; EnvelopeT &gt;::EnvelopeType =  EnvelopeT</definition>
        <argsstring></argsstring>
        <name>EnvelopeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/message/message.h" line="81" column="1" bodyfile="src/vt/messaging/message/message.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1messaging_1_1_active_msg_1ac2e6d93267991027ce78c968b17064c7" prot="public" static="no">
        <type><ref refid="structvt_1_1messaging_1_1_base_msg" kindref="compound">BaseMsg</ref></type>
        <definition>using vt::messaging::ActiveMsg&lt; EnvelopeT &gt;::MessageParentType =  BaseMsg</definition>
        <argsstring></argsstring>
        <name>MessageParentType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/message/message.h" line="212" column="1" bodyfile="src/vt/messaging/message/message.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1messaging_1_1_active_msg_1ae3f8937b2c95f548f1a3c3340b887c09" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1messaging_1_1_active_msg_1a6e2b0541c25f7290555bf50d7cc05874" kindref="member">EnvelopeType</ref></type>
        <definition>EnvelopeType vt::messaging::ActiveMsg&lt; EnvelopeT &gt;::env</definition>
        <argsstring></argsstring>
        <name>env</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/message/message.h" line="88" column="1" bodyfile="src/vt/messaging/message/message.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1messaging_1_1_active_msg_1a5fd6a7b78c86b8f1e36198142990a4c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::messaging::ActiveMsg&lt; EnvelopeT &gt;::ActiveMsg</definition>
        <argsstring>()</argsstring>
        <name>ActiveMsg</name>
        <briefdescription>
<para>Construct an empty message; initializes the envelope state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/message/message.h" line="93" column="1" bodyfile="src/vt/messaging/message/message.h" bodystart="93" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1messaging_1_1_active_msg_1a758f02bef5991c48d6c9a56c30ca7ad9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::messaging::ActiveMsg&lt; EnvelopeT &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Explicitly serialize this message. </para>        </briefdescription>
        <detaileddescription>
<para>Should be called froms derived type that support/require serialization.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the serializer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/message/message.h" line="200" column="1" bodyfile="src/vt/messaging/message/message.h" bodystart="200" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1messaging_1_1_active_msg_1a97b214f27e477ea5951a2d697f2256e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::messaging::ActiveMsg&lt; EnvelopeT &gt;::vt_msg_serialize_mode_</definition>
        <argsstring>(support)</argsstring>
        <name>vt_msg_serialize_mode_</name>
        <param>
          <type><ref refid="namespacevt_1_1messaging_1a436c5b9fc7f591e5978a136999cb9ef8a434990c8a25d2be94863561ae98bd682" kindref="member">support</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/message/message.h" line="213" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1messaging_1_1_active_msg_1ac79d16742251f19ed94f9725ed866f64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void* vt::messaging::ActiveMsg&lt; EnvelopeT &gt;::operator new</definition>
        <argsstring>(std::size_t sz)</argsstring>
        <name>operator new</name>
        <param>
          <type>std::size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/message/message.h" line="175" column="1" bodyfile="src/vt/messaging/message/message.h" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1messaging_1_1_active_msg_1ac13140f75e5238670c81589a84881ac1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void* vt::messaging::ActiveMsg&lt; EnvelopeT &gt;::operator new</definition>
        <argsstring>(std::size_t sz, std::size_t oversize)</argsstring>
        <name>operator new</name>
        <param>
          <type>std::size_t</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>oversize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/message/message.h" line="179" column="1" bodyfile="src/vt/messaging/message/message.h" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1messaging_1_1_active_msg_1a37cd0731f99157266333772f501d390d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vt::messaging::ActiveMsg&lt; EnvelopeT &gt;::operator delete</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/message/message.h" line="183" column="1" bodyfile="src/vt/messaging/message/message.h" bodystart="183" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1messaging_1_1_active_msg_1a03927a2881ef7e3308765361cb89c606" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void* vt::messaging::ActiveMsg&lt; EnvelopeT &gt;::operator new</definition>
        <argsstring>(std::size_t, void *mem)</argsstring>
        <name>operator new</name>
        <param>
          <type>std::size_t</type>
        </param>
        <param>
          <type>void *</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/message/message.h" line="187" column="1" bodyfile="src/vt/messaging/message/message.h" bodystart="187" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The base class for all messages. Common alias is <computeroutput><ref refid="namespacevt_1a3a3ddfef40b4c90915fa43cdd5f129ea" kindref="member">vt::Message</ref></computeroutput> which uses the default envelope. </para>    </briefdescription>
    <detaileddescription>
<para>This is templated over the envelope to allow longer or shorter messages to be used depending on the target and needed envelope bits. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="79">
        <label>vt::vrt::collection::MigrateMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migrate_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>vt::EventFinishedMsg&lt; Envelope &gt;</label>
        <link refid="structvt_1_1_event_finished_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="81">
        <label>vt::vrt::VirtualProxyRequestMsg&lt; Envelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1_virtual_proxy_request_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="73">
        <label>vt::vrt::collection::DoneInsertMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_done_insert_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>vt::messaging::ActiveMsg&lt; EnvelopeT &gt;</label>
        <link refid="structvt_1_1messaging_1_1_active_msg"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>vt::param::DataMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1param_1_1_data_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="66">
        <label>vt::trace::file_spec::TraceSpec::SpecMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1trace_1_1file__spec_1_1_trace_spec_1_1_spec_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>vt::rdma::GetInfoChannel&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1rdma_1_1_get_info_channel"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>vt::vrt::collection::lb::RotateObjMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_rotate_obj_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>vt::collective::scatter::ScatterMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1collective_1_1scatter_1_1_scatter_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="82">
        <label>vt::vrt::VrtConstructMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1_vrt_construct_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="75">
        <label>vt::vrt::collection::lb::LBTreeDownMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_l_b_tree_down_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="63">
        <label>vt::term::TermMsg&lt; Envelope &gt;</label>
        <link refid="structvt_1_1term_1_1_term_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>vt::group::GroupRangeMsg</label>
        <link refid="structvt_1_1group_1_1_group_range_msg"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>vt::rdma::CreateChannel&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1rdma_1_1_create_channel"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>vt::rdma::RequestDataMessage&lt; EnvelopeT &gt;</label>
        <link refid="structvt_1_1rdma_1_1_request_data_message"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>vt::term::BuildGraphMsg&lt; Envelope &gt;</label>
        <link refid="structvt_1_1term_1_1_build_graph_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>vt::rdma::ChannelMessage&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1rdma_1_1_channel_message"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="72">
        <label>vt::vrt::collection::DestroyMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_destroy_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>vt::term::TermTerminatedMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1term_1_1_term_terminated_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>vt::messaging::BaseMsg</label>
        <link refid="structvt_1_1messaging_1_1_base_msg"/>
      </node>
      <node id="48">
        <label>vt::location::LocationMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1location_1_1_location_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>vt::collective::barrier::BarrierMsg&lt; EpochEnvelope &gt;</label>
        <link refid="structvt_1_1collective_1_1barrier_1_1_barrier_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>vt::pipe::CallbackMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1pipe_1_1_callback_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>GroupMsg&lt;::vt::Message &gt;</label>
        <link refid="structvt_1_1group_1_1_group_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="70">
        <label>vt::vrt::collection::CollectionCreateMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_create_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="68">
        <label>vt::vrt::collection::ActInsertMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_act_insert_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>vt::group::GroupInfoMsg&lt; GroupMsg&lt;::vt::Message &gt; &gt;</label>
        <link refid="structvt_1_1group_1_1_group_info_msg"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>vt::EventCheckFinishedMsg&lt; Envelope &gt;</label>
        <link refid="structvt_1_1_event_check_finished_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>vt::rdma::StateMessage&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1rdma_1_1_state_message"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="74">
        <label>vt::vrt::collection::InsertMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_insert_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="71">
        <label>vt::vrt::collection::CollectionPhaseMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_phase_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>vt::term::ds::AckMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1term_1_1ds_1_1_ack_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="65">
        <label>vt::term::TermTerminatedReplyMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1term_1_1_term_terminated_reply_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>vt::group::global::GroupSyncMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1group_1_1global_1_1_group_sync_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="78">
        <label>vt::vrt::collection::lb::TransferMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_transfer_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="62">
        <label>vt::term::TermCounterMsg&lt; Envelope &gt;</label>
        <link refid="structvt_1_1term_1_1_term_counter_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>vt::vrt::collection::balance::GossipMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_gossip_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="67">
        <label>vt::trace::UserEventRegistry::NewUserEventMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1trace_1_1_user_event_registry_1_1_new_user_event_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="61">
        <label>vt::term::HangCheckMsg&lt; Envelope &gt;</label>
        <link refid="structvt_1_1term_1_1_hang_check_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>vt::rdma::RDMAOpFinishedMessage&lt; EnvelopeT &gt;</label>
        <link refid="structvt_1_1rdma_1_1_r_d_m_a_op_finished_message"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="76">
        <label>vt::vrt::collection::lb::LBTreeUpMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_l_b_tree_up_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>vt::rdma::SendDataMessage&lt; EnvelopeT &gt;</label>
        <link refid="structvt_1_1rdma_1_1_send_data_message"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>vt::rdma::impl::InformRDMAMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1rdma_1_1impl_1_1_inform_r_d_m_a_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="80">
        <label>vt::vrt::collection::UpdateInsertMsg&lt; EpochTagEnvelope &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_update_insert_msg"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="83">
        <label>vt::messaging::ActiveMsg&lt; EnvelopeT &gt;</label>
        <link refid="structvt_1_1messaging_1_1_active_msg"/>
        <childnode refid="84" relation="public-inheritance">
        </childnode>
      </node>
      <node id="84">
        <label>vt::messaging::BaseMsg</label>
        <link refid="structvt_1_1messaging_1_1_base_msg"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/messaging/message/message.h" line="80" column="1" bodyfile="src/vt/messaging/message/message.h" bodystart="80" bodyend="214"/>
    <listofallmembers>
      <member refid="structvt_1_1messaging_1_1_active_msg_1a5fd6a7b78c86b8f1e36198142990a4c4" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveMsg</scope><name>ActiveMsg</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1ae3f8937b2c95f548f1a3c3340b887c09" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveMsg</scope><name>env</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1a6e2b0541c25f7290555bf50d7cc05874" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveMsg</scope><name>EnvelopeType</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1ac2e6d93267991027ce78c968b17064c7" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveMsg</scope><name>MessageParentType</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1a37cd0731f99157266333772f501d390d" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveMsg</scope><name>operator delete</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1ac79d16742251f19ed94f9725ed866f64" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveMsg</scope><name>operator new</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1ac13140f75e5238670c81589a84881ac1" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveMsg</scope><name>operator new</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1a03927a2881ef7e3308765361cb89c606" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveMsg</scope><name>operator new</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1a758f02bef5991c48d6c9a56c30ca7ad9" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveMsg</scope><name>serialize</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1a97b214f27e477ea5951a2d697f2256e7" prot="public" virt="non-virtual"><scope>vt::messaging::ActiveMsg</scope><name>vt_msg_serialize_mode_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
