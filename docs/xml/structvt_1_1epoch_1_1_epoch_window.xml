<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1epoch_1_1_epoch_window" kind="struct" language="C++" prot="public">
    <compoundname>vt::epoch::EpochWindow</compoundname>
    <includes refid="epoch__window_8h" local="no">epoch_window.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1epoch_1_1_epoch_window_1a74c5c529d1a7fddf5f2d7a5cb9dbe4af" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1epoch_1_1_epoch_type" kindref="compound">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochWindow::archetype_epoch_</definition>
        <argsstring></argsstring>
        <name>archetype_epoch_</name>
        <initializer>= no_epoch</initializer>
        <briefdescription>
<para>The archetypical epoch for this window container (category,rooted,user,..) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="150" column="1" bodyfile="src/vt/epoch/epoch_window.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1epoch_1_1_epoch_window_1aa4facaab20709fbf16c061bd89b6a4e9" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1aaefb2bd6d08c8dc0ff26ed43636611b1" kindref="member">vt::StrongIntegralSet</ref>&lt; <ref refid="structvt_1_1epoch_1_1_epoch_type" kindref="compound">EpochType</ref> &gt;</type>
        <definition>vt::StrongIntegralSet&lt;EpochType&gt; vt::epoch::EpochWindow::terminated_epochs_</definition>
        <argsstring></argsstring>
        <name>terminated_epochs_</name>
        <briefdescription>
<para>The set of epochs terminated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="153" column="1" bodyfile="src/vt/epoch/epoch_window.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1epoch_1_1_epoch_window_1a962a9c46d450a13ccfd9bf4b822bf527" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespacevt_1_1adt_1a075b41b03183cb280d453f44d5397637" kindref="member">adt::RangedCounter</ref>&lt; <ref refid="structvt_1_1epoch_1_1_epoch_type_1aef70d29ac80a421e67bc15ffbe9b9e70" kindref="member">EpochType::ImplType</ref> &gt; &gt;</type>
        <definition>std::unique_ptr&lt;adt::RangedCounter&lt;EpochType::ImplType&gt; &gt; vt::epoch::EpochWindow::next_epoch_</definition>
        <argsstring></argsstring>
        <name>next_epoch_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The next epoch to potentially allocate within the proper range for the archetype. Used to continuously allocate epochs far apart from previous allocated epochs instead of consulting <computeroutput>terminated_epoch_</computeroutput> to select the next one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="159" column="1" bodyfile="src/vt/epoch/epoch_window.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1epoch_1_1_epoch_window_1a2c33b5bc9f0228eccd15b3788c4b1022" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t vt::epoch::EpochWindow::total_terminated_</definition>
        <argsstring></argsstring>
        <name>total_terminated_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The total number of terminated epochs for this window.</para><para><simplesect kind="note"><para>This is distinct from terminated_epochs_.size() due to potential re-use of epochs and because all epochs start out in &quot;terminated&quot; state. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="167" column="1" bodyfile="src/vt/epoch/epoch_window.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_window_1ab0d58ee25bf04051ac80ff32a4fcd8e5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::epoch::EpochWindow::EpochWindow</definition>
        <argsstring>(EpochType in_epoch)</argsstring>
        <name>EpochWindow</name>
        <param>
          <type><ref refid="structvt_1_1epoch_1_1_epoch_type" kindref="compound">EpochType</ref></type>
          <declname>in_epoch</declname>
        </param>
        <briefdescription>
<para>Initialize the <computeroutput><ref refid="structvt_1_1epoch_1_1_epoch_window" kindref="compound">EpochWindow</ref></computeroutput> with a given epoch&apos;s archetype. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch with the control bits for this window </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="72" column="1" bodyfile="src/vt/epoch/epoch_window.cc" bodystart="51" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_window_1ae9bbc46060c62f7adeac93620d4ae0fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1epoch_1_1_epoch_type" kindref="compound">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochWindow::getFirst</definition>
        <argsstring>() const</argsstring>
        <name>getFirst</name>
        <briefdescription>
<para>Get the first terminated epoch in the window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="84" column="1" bodyfile="src/vt/epoch/epoch_window.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_window_1a8105180308f26a76483992775e8b4da5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1epoch_1_1_epoch_type" kindref="compound">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochWindow::getLast</definition>
        <argsstring>() const</argsstring>
        <name>getLast</name>
        <briefdescription>
<para>Get the last terminated epoch in the window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="89" column="1" bodyfile="src/vt/epoch/epoch_window.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_window_1a950c2b957d27d722e9fd311a7639c989" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::epoch::EpochWindow::isTerminated</definition>
        <argsstring>(EpochType epoch) const</argsstring>
        <name>isTerminated</name>
        <param>
          <type><ref refid="structvt_1_1epoch_1_1_epoch_type" kindref="compound">EpochType</ref></type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Check if an epoch is terminated or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to check for termination </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="96" column="1" bodyfile="src/vt/epoch/epoch_window.cc" bodystart="180" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_window_1a7dda8662e2956ec569b00827e863454a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::epoch::EpochWindow::setEpochTerminated</definition>
        <argsstring>(EpochType epoch)</argsstring>
        <name>setEpochTerminated</name>
        <param>
          <type><ref refid="structvt_1_1epoch_1_1_epoch_type" kindref="compound">EpochType</ref></type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Tell the epoch window that an epoch has been terminated. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch that has terminated </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="103" column="1" bodyfile="src/vt/epoch/epoch_window.cc" bodystart="159" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_window_1ac264a0a8ab40a44eb18d8192663772f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::epoch::EpochWindow::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
<para>Get the size of the current terminated epochs set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="108" column="1" bodyfile="src/vt/epoch/epoch_window.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_window_1a55dc39196c78f85094d97b61149bfcba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t vt::epoch::EpochWindow::getTotalTerminated</definition>
        <argsstring>() const</argsstring>
        <name>getTotalTerminated</name>
        <briefdescription>
<para>Get the total number of terminated epochs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This might under count if invoked while the runtime is active/processing work!</para></simplesect>
<simplesect kind="return"><para>the total number of epochs that have started and terminated while the runtime was active </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="119" column="1" bodyfile="src/vt/epoch/epoch_window.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_window_1a0c18249fdbc30c5e4ee0de6949a320a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1epoch_1_1_epoch_type" kindref="compound">EpochType</ref></type>
        <definition>EpochType vt::epoch::EpochWindow::allocateNewEpoch</definition>
        <argsstring>()</argsstring>
        <name>allocateNewEpoch</name>
        <briefdescription>
<para>Allocate/generate a new epoch with the proper control bits. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Applies an approximate LRU policy when generating a new epoch. This ensures that if an epoch &quot;recently&quot; terminates, it is not reallocated immediately. This is important because termination actions on an epoch can be registered <emphasis>after</emphasis> an epoch terminates.</para></simplesect>
<simplesect kind="return"><para>a new epoch within the window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="131" column="1" bodyfile="src/vt/epoch/epoch_window.cc" bodystart="101" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_window_1a584f6dedf7cc4d28a8a153348a2f5c2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Serializer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::epoch::EpochWindow::serialize</definition>
        <argsstring>(Serializer &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>Serializer &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="134" column="1" bodyfile="src/vt/epoch/epoch_window.h" bodystart="134" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_window_1a6efc8f11ec346d89ebbfcb36069b6e78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::epoch::EpochWindow::activateEpoch</definition>
        <argsstring>(EpochType epoch)</argsstring>
        <name>activateEpoch</name>
        <param>
          <type><ref refid="structvt_1_1epoch_1_1_epoch_type" kindref="compound">EpochType</ref></type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Activate an epoch: goes from the state terminated to non-terminated. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epoch</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to activate </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="146" column="1" bodyfile="src/vt/epoch/epoch_window.cc" bodystart="129" bodyend="157"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1epoch_1_1_epoch_window_1a9f6b34a8ba87a8a4e6669b3b09958ba2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::epoch::EpochWindow::isArchetypal</definition>
        <argsstring>(EpochType epoch)</argsstring>
        <name>isArchetypal</name>
        <param>
          <type><ref refid="structvt_1_1epoch_1_1_epoch_type" kindref="compound">EpochType</ref></type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
<para>Check if a given epoch matches the archetype that this window holds. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_window.h" line="78" column="1" bodyfile="src/vt/epoch/epoch_window.cc" bodystart="123" bodyend="127"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Allocates new epochs and holds the set of terminated epochs for a given epoch &quot;archetype&quot;. </para>    </briefdescription>
    <detaileddescription>
<para>An epoch&apos;s archetype is the epoch&apos;s control bits that make it belong to a certain category/scope/root/etc. based on the control bit pattern. The window tracks the state of all the epochs with a certain control bit configuration. Because the control bits are embedded in the high bits, the window starts contiguous and may get fragmented as epochs are activated and then terminate out of order. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="1792">
        <label>T</label>
      </node>
      <node id="1790">
        <label>vt::epoch::EpochType</label>
        <link refid="structvt_1_1epoch_1_1_epoch_type"/>
        <childnode refid="1791" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1789">
        <label>vt::term::interval::IntegralSetBase&lt; ImplType &gt;</label>
        <link refid="structvt_1_1term_1_1interval_1_1_integral_set_base"/>
      </node>
      <node id="1787">
        <label>vt::epoch::EpochWindow</label>
        <link refid="structvt_1_1epoch_1_1_epoch_window"/>
        <childnode refid="1788" relation="usage">
          <edgelabel>terminated_epochs_</edgelabel>
        </childnode>
        <childnode refid="1790" relation="usage">
          <edgelabel>archetype_epoch_</edgelabel>
        </childnode>
      </node>
      <node id="1788">
        <label>vt::term::interval::StrongIntegralSet&lt; vt::epoch::EpochType &gt;</label>
        <link refid="structvt_1_1term_1_1interval_1_1_strong_integral_set"/>
        <childnode refid="1789" relation="usage">
          <edgelabel>impl_</edgelabel>
        </childnode>
      </node>
      <node id="1791">
        <label>Strong&lt; detail::EpochImplType, detail::no_epoch_impl, detail::EpochImplTag &gt;</label>
        <link refid="structvt_1_1util_1_1strong_1_1detail_1_1_strong"/>
        <childnode refid="1792" relation="usage">
          <edgelabel>v_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/epoch/epoch_window.h" line="65" column="1" bodyfile="src/vt/epoch/epoch_window.h" bodystart="65" bodyend="168"/>
    <listofallmembers>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1a6efc8f11ec346d89ebbfcb36069b6e78" prot="public" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>activateEpoch</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1a0c18249fdbc30c5e4ee0de6949a320a4" prot="public" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>allocateNewEpoch</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1a74c5c529d1a7fddf5f2d7a5cb9dbe4af" prot="private" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>archetype_epoch_</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1ab0d58ee25bf04051ac80ff32a4fcd8e5" prot="public" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>EpochWindow</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1ae9bbc46060c62f7adeac93620d4ae0fc" prot="public" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>getFirst</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1a8105180308f26a76483992775e8b4da5" prot="public" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>getLast</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1ac264a0a8ab40a44eb18d8192663772f2" prot="public" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>getSize</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1a55dc39196c78f85094d97b61149bfcba" prot="public" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>getTotalTerminated</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1a9f6b34a8ba87a8a4e6669b3b09958ba2" prot="private" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>isArchetypal</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1a950c2b957d27d722e9fd311a7639c989" prot="public" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>isTerminated</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1a962a9c46d450a13ccfd9bf4b822bf527" prot="private" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>next_epoch_</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1a584f6dedf7cc4d28a8a153348a2f5c2c" prot="public" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>serialize</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1a7dda8662e2956ec569b00827e863454a" prot="public" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>setEpochTerminated</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1aa4facaab20709fbf16c061bd89b6a4e9" prot="private" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>terminated_epochs_</name></member>
      <member refid="structvt_1_1epoch_1_1_epoch_window_1a2c33b5bc9f0228eccd15b3788c4b1022" prot="private" virt="non-virtual"><scope>vt::epoch::EpochWindow</scope><name>total_terminated_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
