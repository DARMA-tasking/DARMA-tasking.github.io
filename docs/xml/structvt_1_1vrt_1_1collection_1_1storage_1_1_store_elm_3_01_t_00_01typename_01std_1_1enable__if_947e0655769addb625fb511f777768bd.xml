<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</compoundname>
    <basecompoundref refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base" prot="public" virt="non-virtual">vt::vrt::collection::storage::StoreElmBase</basecompoundref>
    <includes refid="store__elm_8h" local="no">store_elm.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1aad3ecc5effe2f7965a083da05ffa4c5f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::dump_to_json</definition>
        <argsstring></argsstring>
        <name>dump_to_json</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="213" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1a97c2111aad25f504ad9e1fd0744d8700" prot="public" static="no" mutable="no">
        <type>bool bool</type>
        <definition>bool bool vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::provide_to_lb</definition>
        <argsstring></argsstring>
        <name>provide_to_lb</name>
        <bitfield> StoreElmBase(dump_to_json</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="213" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1ad2f7d3b8c3c4358d7e2c352721aaa717" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::elm_</definition>
        <argsstring></argsstring>
        <name>elm_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The stored value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="269" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1a594cc389e2453269fd32cce7ff3b48a7" prot="public" static="no" const="no" explicit="no" inline="no" refqual="rvalue" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::checkpoint_virtual_serialize_derived_from</definition>
        <argsstring>(StoreElmBase) template&lt; typename U &gt; explicit StoreElm(U &amp;&amp;u</argsstring>
        <name>checkpoint_virtual_serialize_derived_from</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base" kindref="compound">StoreElmBase</ref></type>
        </param>
        <briefdescription>
<para>polymorphic serializer for derived class </para>        </briefdescription>
        <detaileddescription>
<para>Construct with value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u</parametername>
</parameternamelist>
<parameterdescription>
<para>the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dump_to_json</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to dump to json </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">provide_to_lb</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to provide to LB </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1a50ca481760e09bd66574f18794ad8426" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool bool</type>
        <definition>bool bool vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::elm_</definition>
        <argsstring>(std::forward&lt; U &gt;(u))</argsstring>
        <name>elm_</name>
        <param>
          <type>std::forward&lt; U &gt;</type>
          <array>u</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="215" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="215" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1ad8dfd05ce5b4a6937906fce29733ac37" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::StoreElm</definition>
        <argsstring>(checkpoint::SERIALIZE_CONSTRUCT_TAG)</argsstring>
        <name>StoreElm</name>
        <param>
          <type><ref refid="namespacecheckpoint_1a7ff642cff4d72d01a16ab10e9bc363ef" kindref="member">checkpoint::SERIALIZE_CONSTRUCT_TAG</ref></type>
        </param>
        <briefdescription>
<para>Serialization re-constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">SERIALIZE_CONSTRUCT_TAG</parametername>
</parameternamelist>
<parameterdescription>
<para>tag </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="223" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1ae4824f71a4909c65fab811ef7b97f9aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializer</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the serializer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="231" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1aca0afee85781dbc7e76c3dff59ab4136" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
<para>Get the underlying value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="241" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1afd8bb1f887dfb0a9d165693b1c7040ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const  &amp;</type>
        <definition>T const&amp; vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
<para>Get the underlying value as const. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="248" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1aea4bf3c797fb58b2e53fcbf6010c31d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>nlohmann::json</type>
        <definition>nlohmann::json vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::toJson</definition>
        <argsstring>() override</argsstring>
        <name>toJson</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a3c207bb3612dba2db9fef7e0e7f2e717">toJson</reimplements>
        <briefdescription>
<para>Generate the json if jsonable. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the json </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="255" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1a7eea2c008b62018472a0b5f544320788" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::variant&lt; int, double, std::string &gt;</type>
        <definition>std::variant&lt;int, double, std::string&gt; vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::toVariant</definition>
        <argsstring>() override</argsstring>
        <name>toVariant</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a1cfa9cc885ea3f22678b80701498c0ff">toVariant</reimplements>
        <briefdescription>
<para>Generate variant if applicable. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the variant </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="264" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="264" bodyend="266"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2461">
        <label>vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd"/>
        <childnode refid="2462" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2462">
        <label>vt::vrt::collection::storage::StoreElmBase</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2463">
        <label>vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd"/>
        <childnode refid="2464" relation="public-inheritance">
        </childnode>
        <childnode refid="2465" relation="usage">
          <edgelabel>elm_</edgelabel>
        </childnode>
      </node>
      <node id="2465">
        <label>T</label>
      </node>
      <node id="2464">
        <label>vt::vrt::collection::storage::StoreElmBase</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="201" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="195" bodyend="270"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1a594cc389e2453269fd32cce7ff3b48a7" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>checkpoint_virtual_serialize_derived_from</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1ace4bb0073e5de18f3743ca10c31fdf2d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>checkpoint_virtual_serialize_root</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1aad3ecc5effe2f7965a083da05ffa4c5f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>dump_to_json</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a7bd87e77194a384ecb0a7450d9e7a24a" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>dump_to_json_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1ad2f7d3b8c3c4358d7e2c352721aaa717" prot="private" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>elm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1a50ca481760e09bd66574f18794ad8426" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>elm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1aca0afee85781dbc7e76c3dff59ab4136" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>get</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1afd8bb1f887dfb0a9d165693b1c7040ae" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>get</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1ad10346011cc11fffcfb52bf4b124f207" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>maybeGenerateJson</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a2da42349fb45cd9bc61c71073cf5dc76" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>maybeGenerateVariant</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1a97c2111aad25f504ad9e1fd0744d8700" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>provide_to_lb</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a2818c3e0d6a4c0705170f98c0b51347e" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>provide_to_lb_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1ae28a8d2455a7429f43937fbe03249a4a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>provideToLB</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1ae4824f71a4909c65fab811ef7b97f9aa" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1add1ac8f8fa0142bebb916bfd0474cc16" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>shouldJson</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1ad8dfd05ce5b4a6937906fce29733ac37" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>StoreElm</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a7fa798418159b33d18f1b4a687c727c1" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>StoreElmBase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a8deb42154070f2636df8f6fecdd6430c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>StoreElmBase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1aea4bf3c797fb58b2e53fcbf6010c31d1" prot="public" virt="virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>toJson</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1a7eea2c008b62018472a0b5f544320788" prot="public" virt="virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>toVariant</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a564f20122fff98f72f65752ce610f05e" prot="public" virt="virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>~StoreElmBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
