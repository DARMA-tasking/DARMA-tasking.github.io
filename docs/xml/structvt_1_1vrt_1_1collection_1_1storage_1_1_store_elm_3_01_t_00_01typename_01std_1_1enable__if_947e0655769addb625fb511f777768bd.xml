<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</compoundname>
    <basecompoundref refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base" prot="public" virt="non-virtual">vt::vrt::collection::storage::StoreElmBase</basecompoundref>
    <includes refid="store__elm_8h" local="no">store_elm.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1ad2f7d3b8c3c4358d7e2c352721aaa717" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::elm_</definition>
        <argsstring></argsstring>
        <name>elm_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The stored value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="160" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1a045703618378e71f8de2a9f00adbfc3b" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::checkpoint_virtual_serialize_derived_from</definition>
        <argsstring>(StoreElmBase) template&lt; typename U &gt; explicit StoreElm(U &amp;&amp;u)</argsstring>
        <name>checkpoint_virtual_serialize_derived_from</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base" kindref="compound">StoreElmBase</ref></type>
        </param>
        <briefdescription>
<para>polymorphic serializer for derived class </para>        </briefdescription>
        <detaileddescription>
<para>Construct with value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u</parametername>
</parameternamelist>
<parameterdescription>
<para>the value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="116" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="116" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1ad8dfd05ce5b4a6937906fce29733ac37" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::StoreElm</definition>
        <argsstring>(checkpoint::SERIALIZE_CONSTRUCT_TAG)</argsstring>
        <name>StoreElm</name>
        <param>
          <type><ref refid="namespacecheckpoint_1a7ff642cff4d72d01a16ab10e9bc363ef" kindref="member">checkpoint::SERIALIZE_CONSTRUCT_TAG</ref></type>
        </param>
        <briefdescription>
<para>Serialization re-constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">SERIALIZE_CONSTRUCT_TAG</parametername>
</parameternamelist>
<parameterdescription>
<para>tag </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="133" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1ae4824f71a4909c65fab811ef7b97f9aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Serializer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the serializer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="141" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1aca0afee85781dbc7e76c3dff59ab4136" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
<para>Get the underlying value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="150" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1afd8bb1f887dfb0a9d165693b1c7040ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const  &amp;</type>
        <definition>T const&amp; vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
<para>Get the underlying value as const. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="157" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="157" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2350">
        <label>vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd"/>
        <childnode refid="2351" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2351">
        <label>vt::vrt::collection::storage::StoreElmBase</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2352">
        <label>vt::vrt::collection::storage::is_serializable &gt;&gt;&lt; T &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd"/>
        <childnode refid="2353" relation="public-inheritance">
        </childnode>
        <childnode refid="2354" relation="usage">
          <edgelabel>elm_</edgelabel>
        </childnode>
      </node>
      <node id="2354">
        <label>T</label>
      </node>
      <node id="2353">
        <label>vt::vrt::collection::storage::StoreElmBase</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/types/storage/store_elm.h" line="114" column="1" bodyfile="src/vt/vrt/collection/types/storage/store_elm.h" bodystart="108" bodyend="161"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1a045703618378e71f8de2a9f00adbfc3b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>checkpoint_virtual_serialize_derived_from</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1ac2c2e12a6f742e08b9d9771ebb26f08d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>checkpoint_virtual_serialize_root</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1ad2f7d3b8c3c4358d7e2c352721aaa717" prot="private" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>elm_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1aca0afee85781dbc7e76c3dff59ab4136" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>get</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1afd8bb1f887dfb0a9d165693b1c7040ae" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>get</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1ae4824f71a4909c65fab811ef7b97f9aa" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_3_01_t_00_01typename_01std_1_1enable__if_947e0655769addb625fb511f777768bd_1ad8dfd05ce5b4a6937906fce29733ac37" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>StoreElm</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base_1a564f20122fff98f72f65752ce610f05e" prot="public" virt="virtual"><scope>vt::vrt::collection::storage::StoreElm&lt; T, typename std::enable_if_t&lt; ::checkpoint::SerializableTraits&lt; T &gt;::is_serializable &gt;&gt;</scope><name>~StoreElmBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
