<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="traits_8h" kind="file" language="C++">
    <compoundname>traits.h</compoundname>
    <includes refid="config_8h" local="yes">vt/config.h</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">functional</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="246430">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
        <childnode refid="246431" relation="include">
        </childnode>
      </node>
      <node id="246441">
        <label>functional</label>
      </node>
      <node id="246449">
        <label>fmt/format.h</label>
      </node>
      <node id="246432">
        <label>vt/configs/features/features_metafeatures.h</label>
        <link refid="features__metafeatures_8h"/>
        <childnode refid="246431" relation="include">
        </childnode>
      </node>
      <node id="246447">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="246436" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
      </node>
      <node id="246436">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="246437" relation="include">
        </childnode>
        <childnode refid="246438" relation="include">
        </childnode>
      </node>
      <node id="246429">
        <label>cstdint</label>
      </node>
      <node id="246466">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="246452" relation="include">
        </childnode>
        <childnode refid="246440" relation="include">
        </childnode>
        <childnode refid="246460" relation="include">
        </childnode>
        <childnode refid="246465" relation="include">
        </childnode>
        <childnode refid="246467" relation="include">
        </childnode>
        <childnode refid="246447" relation="include">
        </childnode>
        <childnode refid="246464" relation="include">
        </childnode>
        <childnode refid="246443" relation="include">
        </childnode>
        <childnode refid="246457" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
        <childnode refid="246469" relation="include">
        </childnode>
        <childnode refid="246449" relation="include">
        </childnode>
      </node>
      <node id="246464">
        <label>cassert</label>
      </node>
      <node id="246461">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="246452" relation="include">
        </childnode>
        <childnode refid="246440" relation="include">
        </childnode>
        <childnode refid="246460" relation="include">
        </childnode>
        <childnode refid="246462" relation="include">
        </childnode>
        <childnode refid="246447" relation="include">
        </childnode>
        <childnode refid="246454" relation="include">
        </childnode>
        <childnode refid="246443" relation="include">
        </childnode>
        <childnode refid="246457" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
        <childnode refid="246464" relation="include">
        </childnode>
        <childnode refid="246449" relation="include">
        </childnode>
      </node>
      <node id="246444">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="246445" relation="include">
        </childnode>
      </node>
      <node id="246452">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="246439" relation="include">
        </childnode>
        <childnode refid="246453" relation="include">
        </childnode>
        <childnode refid="246443" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
      </node>
      <node id="246445">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
      </node>
      <node id="246450">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="246451" relation="include">
        </childnode>
        <childnode refid="246455" relation="include">
        </childnode>
        <childnode refid="246459" relation="include">
        </childnode>
      </node>
      <node id="246437">
        <label>string</label>
      </node>
      <node id="246467">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="246452" relation="include">
        </childnode>
        <childnode refid="246428" relation="include">
        </childnode>
        <childnode refid="246463" relation="include">
        </childnode>
        <childnode refid="246443" relation="include">
        </childnode>
        <childnode refid="246457" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
        <childnode refid="246438" relation="include">
        </childnode>
        <childnode refid="246468" relation="include">
        </childnode>
      </node>
      <node id="246468">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="246467" relation="include">
        </childnode>
        <childnode refid="246447" relation="include">
        </childnode>
        <childnode refid="246463" relation="include">
        </childnode>
        <childnode refid="246443" relation="include">
        </childnode>
        <childnode refid="246457" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
        <childnode refid="246438" relation="include">
        </childnode>
        <childnode refid="246449" relation="include">
        </childnode>
      </node>
      <node id="246433">
        <label>vt/configs/features/features_enableif.h</label>
        <link refid="features__enableif_8h"/>
        <childnode refid="246430" relation="include">
        </childnode>
        <childnode refid="246431" relation="include">
        </childnode>
      </node>
      <node id="246428">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="246429" relation="include">
        </childnode>
        <childnode refid="246430" relation="include">
        </childnode>
        <childnode refid="246431" relation="include">
        </childnode>
        <childnode refid="246432" relation="include">
        </childnode>
        <childnode refid="246433" relation="include">
        </childnode>
        <childnode refid="246434" relation="include">
        </childnode>
      </node>
      <node id="246446">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="246426" relation="include">
        </childnode>
        <childnode refid="246440" relation="include">
        </childnode>
        <childnode refid="246442" relation="include">
        </childnode>
      </node>
      <node id="246426">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="246427" relation="include">
        </childnode>
        <childnode refid="246428" relation="include">
        </childnode>
        <childnode refid="246435" relation="include">
        </childnode>
      </node>
      <node id="246453">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="246437" relation="include">
        </childnode>
      </node>
      <node id="246440">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="246429" relation="include">
        </childnode>
        <childnode refid="246441" relation="include">
        </childnode>
      </node>
      <node id="246456">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="246439" relation="include">
        </childnode>
        <childnode refid="246428" relation="include">
        </childnode>
        <childnode refid="246452" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
        <childnode refid="246443" relation="include">
        </childnode>
        <childnode refid="246457" relation="include">
        </childnode>
        <childnode refid="246458" relation="include">
        </childnode>
      </node>
      <node id="246448">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
        <childnode refid="246443" relation="include">
        </childnode>
      </node>
      <node id="246451">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="246428" relation="include">
        </childnode>
        <childnode refid="246440" relation="include">
        </childnode>
        <childnode refid="246452" relation="include">
        </childnode>
        <childnode refid="246454" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
        <childnode refid="246449" relation="include">
        </childnode>
      </node>
      <node id="246443">
        <label>tuple</label>
      </node>
      <node id="246435">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="246436" relation="include">
        </childnode>
        <childnode refid="246439" relation="include">
        </childnode>
        <childnode refid="246428" relation="include">
        </childnode>
        <childnode refid="246447" relation="include">
        </childnode>
        <childnode refid="246448" relation="include">
        </childnode>
        <childnode refid="246449" relation="include">
        </childnode>
      </node>
      <node id="246438">
        <label>vector</label>
      </node>
      <node id="246424">
        <label>src/vt/topos/index/traits/traits.h</label>
        <link refid="traits_8h"/>
        <childnode refid="246425" relation="include">
        </childnode>
        <childnode refid="246429" relation="include">
        </childnode>
        <childnode refid="246441" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
      </node>
      <node id="246469">
        <label>sstream</label>
      </node>
      <node id="246427">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="246462">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="246463" relation="include">
        </childnode>
        <childnode refid="246438" relation="include">
        </childnode>
        <childnode refid="246443" relation="include">
        </childnode>
      </node>
      <node id="246431">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
      </node>
      <node id="246463">
        <label>cstdlib</label>
      </node>
      <node id="246455">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="246428" relation="include">
        </childnode>
        <childnode refid="246452" relation="include">
        </childnode>
        <childnode refid="246456" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
        <childnode refid="246443" relation="include">
        </childnode>
        <childnode refid="246457" relation="include">
        </childnode>
      </node>
      <node id="246439">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="246440" relation="include">
        </childnode>
        <childnode refid="246442" relation="include">
        </childnode>
        <childnode refid="246444" relation="include">
        </childnode>
        <childnode refid="246446" relation="include">
        </childnode>
      </node>
      <node id="246460">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="246440" relation="include">
        </childnode>
        <childnode refid="246452" relation="include">
        </childnode>
        <childnode refid="246443" relation="include">
        </childnode>
        <childnode refid="246457" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
        <childnode refid="246461" relation="include">
        </childnode>
      </node>
      <node id="246442">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="246426" relation="include">
        </childnode>
        <childnode refid="246440" relation="include">
        </childnode>
        <childnode refid="246429" relation="include">
        </childnode>
        <childnode refid="246441" relation="include">
        </childnode>
        <childnode refid="246443" relation="include">
        </childnode>
      </node>
      <node id="246457">
        <label>type_traits</label>
      </node>
      <node id="246454">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="246439" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
        <childnode refid="246449" relation="include">
        </childnode>
      </node>
      <node id="246425">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="246426" relation="include">
        </childnode>
        <childnode refid="246439" relation="include">
        </childnode>
        <childnode refid="246450" relation="include">
        </childnode>
      </node>
      <node id="246434">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="246459">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="246428" relation="include">
        </childnode>
        <childnode refid="246440" relation="include">
        </childnode>
        <childnode refid="246452" relation="include">
        </childnode>
        <childnode refid="246460" relation="include">
        </childnode>
        <childnode refid="246465" relation="include">
        </childnode>
        <childnode refid="246467" relation="include">
        </childnode>
        <childnode refid="246464" relation="include">
        </childnode>
        <childnode refid="246443" relation="include">
        </childnode>
        <childnode refid="246457" relation="include">
        </childnode>
      </node>
      <node id="246465">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="246452" relation="include">
        </childnode>
        <childnode refid="246440" relation="include">
        </childnode>
        <childnode refid="246443" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
        <childnode refid="246466" relation="include">
        </childnode>
      </node>
      <node id="246458">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="246439" relation="include">
        </childnode>
        <childnode refid="246428" relation="include">
        </childnode>
        <childnode refid="246452" relation="include">
        </childnode>
        <childnode refid="246456" relation="include">
        </childnode>
        <childnode refid="246454" relation="include">
        </childnode>
        <childnode refid="246437" relation="include">
        </childnode>
        <childnode refid="246443" relation="include">
        </childnode>
        <childnode refid="246457" relation="include">
        </childnode>
        <childnode refid="246449" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traits.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA<sp/>Toolkit<sp/>v.<sp/>1.0.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="42"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="43"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_TOPOS_INDEX_TRAITS_TRAITS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_TOPOS_INDEX_TRAITS_TRAITS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">vt/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>vt_check_enabled(detector)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;detector_headers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>vt_check_enabled(detector)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>vt_check_enabled(detector)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">index<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IndexTraits<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>IndexSizeType_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U::IndexSizeType;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_IndexSizeType<sp/>=<sp/>detection::is_detected&lt;IndexSizeType_t,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Vs&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>constructor_t<sp/>=<sp/>decltype(U(std::declval&lt;Vs&gt;()...));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_default_constructor<sp/>=<sp/>detection::is_detected&lt;constructor_t,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>copy_constructor_t<sp/>=<sp/>decltype(U(std::declval&lt;U<sp/>const&amp;&gt;()));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_copy_constructor<sp/>=<sp/>detection::is_detected&lt;copy_constructor_t,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>copy_assignment_t<sp/>=<sp/>decltype(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>std::declval&lt;U&gt;().</highlight><highlight class="keyword">operator</highlight><highlight class="normal">=(std::declval&lt;U<sp/>const&amp;&gt;())</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_copy_assignment<sp/>=<sp/>detection::is_detected_convertible&lt;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>T,<sp/>copy_assignment_t,<sp/>T</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>&gt;;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>operator_eq_t<sp/>=<sp/>decltype(</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>U(std::declval&lt;U&gt;().</highlight><highlight class="keyword">operator</highlight><highlight class="normal">=(std::declval&lt;U<sp/>const&amp;&gt;()))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_operator_eq<sp/>=<sp/>detection::is_detected&lt;operator_eq_t,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>equality_t<sp/>=<sp/>decltype(</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>std::declval&lt;U&gt;().</highlight><highlight class="keyword">operator</highlight><highlight class="normal">==(std::declval&lt;U<sp/>const&amp;&gt;())</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_equality<sp/>=<sp/>detection::is_detected&lt;equality_t,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>packedSize_t<sp/>=<sp/>decltype(std::declval&lt;U<sp/>const&amp;&gt;().packedSize());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_packedSize<sp/>=<sp/>detection::is_detected_convertible&lt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>size_t,<sp/>packedSize_t,<sp/>T</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>&gt;;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>indexIsByteCopyable_t<sp/>=<sp/>decltype(</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::declval&lt;U<sp/>const&amp;&gt;().indexIsByteCopyable()</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_indexIsByteCopyable<sp/>=<sp/>detection::is_detected&lt;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>indexIsByteCopyable_t,<sp/>T</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>&gt;;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>uniqueBits_t<sp/>=<sp/>decltype(std::declval&lt;U<sp/>const&amp;&gt;().uniqueBits());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_uniqueBits<sp/>=<sp/>detection::is_detected_convertible&lt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevt_1a913e1f07b5228dd8bb64040dc6dcea14" kindref="member">UniqueIndexBitType</ref>,<sp/>uniqueBits_t,<sp/>T</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>&gt;;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ApplyType<sp/>=<sp/>std::function&lt;void(U)&gt;;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>foreach_t<sp/>=<sp/>decltype(</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>std::declval&lt;U<sp/>const&amp;&gt;().</highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::declval&lt;U<sp/>const&amp;&gt;(),<sp/>std::declval&lt;ApplyType&lt;U&gt;&gt;()</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_foreach<sp/>=<sp/>detection::is_detected&lt;foreach_t,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>IsByteCopyable_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U::IsByteCopyable;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_IsByteCopyable<sp/>=<sp/>detection::is_detected&lt;IsByteCopyable_t,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>toString_t<sp/>=<sp/>decltype(std::declval&lt;U<sp/>const&amp;&gt;().toString());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_toString<sp/>=<sp/>detection::is_detected_convertible&lt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string,<sp/>toString_t,<sp/>T</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>&gt;;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>numDims_t<sp/>=<sp/>decltype(std::declval&lt;U<sp/>const&amp;&gt;().ndims());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_numDims<sp/>=<sp/>detection::is_detected_convertible&lt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t,<sp/>numDims_t,<sp/>T</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>&gt;;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>build_index_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U::BuildIndexType;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_build_index<sp/>=<sp/>detection::is_detected&lt;build_index_t,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>defines<sp/>what<sp/>it<sp/>means<sp/>to<sp/>be<sp/>an<sp/>`Index&apos;;<sp/>i.e.,<sp/>the<sp/>index<sp/>concept.</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>is_index<sp/>=</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>default<sp/>constructor,<sp/>copy<sp/>constructor,<sp/>copy<sp/>assignment<sp/>operator</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>has_copy_constructor::value<sp/><sp/><sp/><sp/>and</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>has_default_constructor::value<sp/>and</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>has_copy_assignment::value<sp/><sp/><sp/><sp/><sp/>and</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>operator==</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>has_equality::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>has_operator_eq::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>typedefs:</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>IndexSizeType,<sp/>IsByteCopyable,<sp/>BuildIndexType</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>has_IndexSizeType::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/>and</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>has_IsByteCopyable::value<sp/><sp/><sp/><sp/><sp/><sp/>and</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>has_build_index::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>methods:</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>packedSize(),<sp/>indexIsByteCopyable(),<sp/>uniqueBits(),<sp/>foreach(),</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>toString(),<sp/>ndims()</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>has_packedSize::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>has_indexIsByteCopyable::value<sp/>and</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>has_uniqueBits::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>has_foreach::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>has_toString::value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>has_numDims::value;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>vt::index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*vt_check_enabled(detector)*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_TOPOS_INDEX_TRAITS_TRAITS_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/vt/topos/index/traits/traits.h"/>
  </compounddef>
</doxygen>
