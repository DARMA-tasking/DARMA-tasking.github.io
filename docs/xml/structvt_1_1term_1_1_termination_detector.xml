<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1term_1_1_termination_detector" kind="struct" language="C++" prot="public">
    <compoundname>vt::term::TerminationDetector</compoundname>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component" prot="public" virt="non-virtual">vt::runtime::component::Component&lt; TerminationDetector &gt;</basecompoundref>
    <basecompoundref refid="structvt_1_1term_1_1_term_action" prot="public" virt="non-virtual">vt::term::TermAction</basecompoundref>
    <basecompoundref refid="structvt_1_1collective_1_1tree_1_1_tree" prot="public" virt="non-virtual">vt::collective::tree::Tree</basecompoundref>
    <basecompoundref refid="structvt_1_1term_1_1ds_1_1_state_d_s" prot="public" virt="non-virtual">vt::term::ds::StateDS</basecompoundref>
    <basecompoundref refid="structvt_1_1term_1_1_term_interface" prot="public" virt="non-virtual">vt::term::TermInterface</basecompoundref>
    <includes refid="termination_8h" local="no">termination.h</includes>
    <innerclass refid="structvt_1_1term_1_1_termination_detector_1_1_scoped" prot="public">vt::term::TerminationDetector::Scoped</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="structvt_1_1term_1_1_termination_detector_1a4f3ede9a87f39d86e85f92b36a6c6a30" prot="private" static="no">
        <name>CallFromEnum</name>
        <enumvalue id="structvt_1_1term_1_1_termination_detector_1a4f3ede9a87f39d86e85f92b36a6c6a30a4beac8e3ddc4064785a61aa7949e3bda" prot="private">
          <name>Root</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structvt_1_1term_1_1_termination_detector_1a4f3ede9a87f39d86e85f92b36a6c6a30a73c8bf8079c6c90553937f74f98c99fc" prot="private">
          <name>NonRoot</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="231" column="1" bodyfile="src/vt/termination/termination.h" bodystart="231" bodyend="231"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1term_1_1_termination_detector_1a69e2615b61e072977463eea5b20b7933" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref>, T &gt;</type>
        <definition>using vt::term::TerminationDetector::EpochContainerType =  std::unordered_map&lt;EpochType, T&gt;</definition>
        <argsstring></argsstring>
        <name>EpochContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="82" column="1" bodyfile="src/vt/termination/termination.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1_termination_detector_1a0a47413bcb7bf5e10ecb31e7871a9268" prot="public" static="no">
        <type><ref refid="structvt_1_1term_1_1_term_state" kindref="compound">TermState</ref></type>
        <definition>using vt::term::TerminationDetector::TermStateType =  TermState</definition>
        <argsstring></argsstring>
        <name>TermStateType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="83" column="1" bodyfile="src/vt/termination/termination.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1_termination_detector_1aa96c37b5c120063060c6418c48e64bd1" prot="public" static="no">
        <type><ref refid="structvt_1_1term_1_1ds_1_1_state_d_s_1af98cfe31c25f710273ee103026d538e4" kindref="member">term::ds::StateDS::TerminatorType</ref></type>
        <definition>using vt::term::TerminationDetector::TermStateDSType =  term::ds::StateDS::TerminatorType</definition>
        <argsstring></argsstring>
        <name>TermStateDSType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="84" column="1" bodyfile="src/vt/termination/termination.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1_termination_detector_1a2c002273d9304c3cf72be85dd7d3ce52" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1term_1_1_epoch_window" kindref="compound">EpochWindow</ref> &gt;</type>
        <definition>using vt::term::TerminationDetector::WindowType =  std::unique_ptr&lt;EpochWindow&gt;</definition>
        <argsstring></argsstring>
        <name>WindowType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="85" column="1" bodyfile="src/vt/termination/termination.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1_termination_detector_1a6b172cf395acf512b3f9698651c4e10d" prot="public" static="no">
        <type><ref refid="structvt_1_1arguments_1_1_arg_config" kindref="compound">vt::arguments::ArgConfig</ref></type>
        <definition>using vt::term::TerminationDetector::ArgType =  vt::arguments::ArgConfig</definition>
        <argsstring></argsstring>
        <name>ArgType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="86" column="1" bodyfile="src/vt/termination/termination.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1_termination_detector_1ac8df9c8a604ee2073ce195a994aaf252" prot="public" static="no">
        <type><ref refid="structvt_1_1term_1_1_epoch_dependency_1a3f00b47c33158f3241ebbeb0a0cb7b1d" kindref="member">EpochDependency::SuccessorBagType</ref></type>
        <definition>using vt::term::TerminationDetector::SuccessorBagType =  EpochDependency::SuccessorBagType</definition>
        <argsstring></argsstring>
        <name>SuccessorBagType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="87" column="1" bodyfile="src/vt/termination/termination.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1_termination_detector_1af67f0ab522e54eb06d8ac541526155e3" prot="public" static="no">
        <type><ref refid="structvt_1_1termination_1_1graph_1_1_epoch_graph" kindref="compound">termination::graph::EpochGraph</ref></type>
        <definition>using vt::term::TerminationDetector::EpochGraph =  termination::graph::EpochGraph</definition>
        <argsstring></argsstring>
        <name>EpochGraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="88" column="1" bodyfile="src/vt/termination/termination.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1term_1_1_termination_detector_1aec8abc5a3b161ac7df73ff3ba385dace" prot="public" static="no">
        <type><ref refid="structvt_1_1termination_1_1graph_1_1_epoch_graph_msg" kindref="compound">termination::graph::EpochGraphMsg</ref>&lt; <ref refid="structvt_1_1term_1_1_termination_detector_1af67f0ab522e54eb06d8ac541526155e3" kindref="member">EpochGraph</ref> &gt;</type>
        <definition>using vt::term::TerminationDetector::EpochGraphMsg =  termination::graph::EpochGraphMsg&lt;EpochGraph&gt;</definition>
        <argsstring></argsstring>
        <name>EpochGraphMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="89" column="1" bodyfile="src/vt/termination/termination.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1term_1_1_termination_detector_1a9c0b991de134b4bc5bebf051bd067b9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct ds::StateDS</definition>
        <argsstring></argsstring>
        <name>ds::StateDS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="114" column="1" bodyfile="src/vt/termination/termination.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="structvt_1_1term_1_1_termination_detector_1a628421bb882cfbd05876660b5b7dc150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct TermState</definition>
        <argsstring></argsstring>
        <name>TermState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="115" column="1" bodyfile="src/vt/termination/termination.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="structvt_1_1term_1_1_termination_detector_1aee175d34803c93c65e4323ab28f04088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct EpochDependency</definition>
        <argsstring></argsstring>
        <name>EpochDependency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="116" column="1" bodyfile="src/vt/termination/termination.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1term_1_1_termination_detector_1a9027001de957f59eb36bb5784f7af4b1" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structvt_1_1term_1_1_termination_detector_1_1_scoped" kindref="compound">vt::term::TerminationDetector::Scoped</ref></type>
        <definition>struct vt::term::TerminationDetector::Scoped  vt::term::TerminationDetector::scope</definition>
        <argsstring></argsstring>
        <name>scope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="139" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1term_1_1_termination_detector_1a49337963d174e5be73fcf467304428a6" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1term_1_1_term_action_1ae4c635b69751d887666814700ed64d65" kindref="member">TermStateType</ref></type>
        <definition>TermStateType vt::term::TerminationDetector::any_epoch_state_</definition>
        <argsstring></argsstring>
        <name>any_epoch_state_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="317" column="1" bodyfile="src/vt/termination/termination.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1term_1_1_termination_detector_1a5f873fb4a66c8364ec7859bbc608fe55" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1term_1_1_term_action_1ae4c635b69751d887666814700ed64d65" kindref="member">TermStateType</ref></type>
        <definition>TermStateType vt::term::TerminationDetector::hang_</definition>
        <argsstring></argsstring>
        <name>hang_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="319" column="1" bodyfile="src/vt/termination/termination.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1term_1_1_termination_detector_1a0c55ef5345253002f9de6e5c4337c53a" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1term_1_1_termination_detector_1a69e2615b61e072977463eea5b20b7933" kindref="member">EpochContainerType</ref>&lt; <ref refid="structvt_1_1term_1_1_term_action_1ae4c635b69751d887666814700ed64d65" kindref="member">TermStateType</ref> &gt;</type>
        <definition>EpochContainerType&lt;TermStateType&gt; vt::term::TerminationDetector::epoch_state_</definition>
        <argsstring></argsstring>
        <name>epoch_state_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="321" column="1" bodyfile="src/vt/termination/termination.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1term_1_1_termination_detector_1a876ef1f0029acf64d473f23a8f78b2f7" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref>, <ref refid="structvt_1_1term_1_1_termination_detector_1a2c002273d9304c3cf72be85dd7d3ce52" kindref="member">WindowType</ref> &gt;</type>
        <definition>std::unordered_map&lt;EpochType,WindowType&gt; vt::term::TerminationDetector::epoch_arch_</definition>
        <argsstring></argsstring>
        <name>epoch_arch_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="323" column="1" bodyfile="src/vt/termination/termination.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1term_1_1_termination_detector_1ad44ae49373693dff2bafb7afae937c9b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1term_1_1_epoch_window" kindref="compound">EpochWindow</ref> &gt;</type>
        <definition>std::unique_ptr&lt;EpochWindow&gt; vt::term::TerminationDetector::epoch_coll_</definition>
        <argsstring></argsstring>
        <name>epoch_coll_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="325" column="1" bodyfile="src/vt/termination/termination.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1term_1_1_termination_detector_1a22c7c6cc9c6cd48b5570dbae226a56f3" prot="private" static="no" mutable="no">
        <type>std::unordered_set&lt; <ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &gt;</type>
        <definition>std::unordered_set&lt;EpochType&gt; vt::term::TerminationDetector::epoch_ready_</definition>
        <argsstring></argsstring>
        <name>epoch_ready_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="327" column="1" bodyfile="src/vt/termination/termination.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1term_1_1_termination_detector_1a95cdb85a87fcf162725bc6515b43a002" prot="private" static="no" mutable="no">
        <type>std::unordered_set&lt; <ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &gt;</type>
        <definition>std::unordered_set&lt;EpochType&gt; vt::term::TerminationDetector::epoch_wait_status_</definition>
        <argsstring></argsstring>
        <name>epoch_wait_status_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="329" column="1" bodyfile="src/vt/termination/termination.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1term_1_1_termination_detector_1a68afeac40869ccc50882f717106b382f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::term::TerminationDetector::has_printed_epoch_graph</definition>
        <argsstring></argsstring>
        <name>has_printed_epoch_graph</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="331" column="1" bodyfile="src/vt/termination/termination.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a9e6bc0a436aa1bb5f6b344ac795b3303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::term::TerminationDetector::TerminationDetector</definition>
        <argsstring>()</argsstring>
        <name>TerminationDetector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="91" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="68" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a1a1a29c2374a70427d8173ec31d55421" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual vt::term::TerminationDetector::~TerminationDetector</definition>
        <argsstring>()</argsstring>
        <name>~TerminationDetector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="92" column="1" bodyfile="src/vt/termination/termination.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a6cffc7850bc178af04fb542d50f82086" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string vt::term::TerminationDetector::name</definition>
        <argsstring>() override</argsstring>
        <name>name</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_base_component_1a7701485f3539f78d42e6bad47fc7eb78">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="94" column="1" bodyfile="src/vt/termination/termination.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a3c31a1c36b5d55e9d28b5b26b2436573" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::produce</definition>
        <argsstring>(EpochType epoch=any_epoch_sentinel, TermCounterType num_units=1, NodeType node=uninitialized_destination)</argsstring>
        <name>produce</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>epoch</declname>
          <defval>any_epoch_sentinel</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1term_1a4fd378cdb0c36683afc1b3399d685f7f" kindref="member">TermCounterType</ref></type>
          <declname>num_units</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>node</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="102" column="1" bodyfile="src/vt/termination/termination.impl.h" bodystart="54" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a950215186c7303d99316ece6ea31c4cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::consume</definition>
        <argsstring>(EpochType epoch=any_epoch_sentinel, TermCounterType num_units=1, NodeType node=uninitialized_destination)</argsstring>
        <name>consume</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>epoch</declname>
          <defval>any_epoch_sentinel</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1term_1a4fd378cdb0c36683afc1b3399d685f7f" kindref="member">TermCounterType</ref></type>
          <declname>num_units</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>node</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="106" column="1" bodyfile="src/vt/termination/termination.impl.h" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1ad863add6716d920778eef1298016a0ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::hangDetectSend</definition>
        <argsstring>()</argsstring>
        <name>hangDetectSend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="110" column="1" bodyfile="src/vt/termination/termination.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1ad9b79c662481216d0bb70f81b12dfbf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::hangDetectRecv</definition>
        <argsstring>()</argsstring>
        <name>hangDetectRecv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="111" column="1" bodyfile="src/vt/termination/termination.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1ad95b226357b77e29c415627bbca4e798" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::term::TerminationDetector::isRooted</definition>
        <argsstring>(EpochType epoch)</argsstring>
        <name>isRooted</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="118" column="1" bodyfile="src/vt/termination/termination.impl.h" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a3ab6ba4618093384b6ddd6c0607df543" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::term::TerminationDetector::isDS</definition>
        <argsstring>(EpochType epoch)</argsstring>
        <name>isDS</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="119" column="1" bodyfile="src/vt/termination/termination.impl.h" bodystart="75" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a546a48949da827a98dea2cfaffeddb91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1_termination_detector_1aa96c37b5c120063060c6418c48e64bd1" kindref="member">TermStateDSType</ref> *</type>
        <definition>TerminationDetector::TermStateDSType * vt::term::TerminationDetector::getDSTerm</definition>
        <argsstring>(EpochType epoch, bool is_root=false)</argsstring>
        <name>getDSTerm</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>epoch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_root</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="120" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="196" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a756e767b99e869966247c9198403afb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::resetGlobalTerm</definition>
        <argsstring>()</argsstring>
        <name>resetGlobalTerm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="122" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="311" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a3b1e4a0d87c5af08fc36925ec74504fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::freeEpoch</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>freeEpoch</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="123" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="317" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1ab0724773b4856bfe8225bc5bc0ca6ec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::term::TerminationDetector::makeEpochRooted</definition>
        <argsstring>(UseDS use_ds=UseDS{false}, SuccessorEpochCapture successor=SuccessorEpochCapture{})</argsstring>
        <name>makeEpochRooted</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_use_d_s" kindref="compound">UseDS</ref></type>
          <declname>use_ds</declname>
          <defval><ref refid="structvt_1_1term_1_1_use_d_s" kindref="compound">UseDS</ref>{false}</defval>
        </param>
        <param>
          <type><ref refid="structvt_1_1term_1_1_successor_epoch_capture" kindref="compound">SuccessorEpochCapture</ref></type>
          <declname>successor</declname>
          <defval><ref refid="structvt_1_1term_1_1_successor_epoch_capture" kindref="compound">SuccessorEpochCapture</ref>{}</defval>
        </param>
        <briefdescription>
<para>Create a new rooted epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">use_ds</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to use the Dijkstra-Scholten algorithm </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">successor</parametername>
</parameternamelist>
<parameterdescription>
<para>successor epoch that waits for this new epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="154" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="1030" bodyend="1034"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a748dfa37925107b37bde702e6c5f4aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::term::TerminationDetector::makeEpochCollective</definition>
        <argsstring>(SuccessorEpochCapture successor=SuccessorEpochCapture{})</argsstring>
        <name>makeEpochCollective</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_successor_epoch_capture" kindref="compound">SuccessorEpochCapture</ref></type>
          <declname>successor</declname>
          <defval><ref refid="structvt_1_1term_1_1_successor_epoch_capture" kindref="compound">SuccessorEpochCapture</ref>{}</defval>
        </param>
        <briefdescription>
<para>Create a new collective epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">successor</parametername>
</parameternamelist>
<parameterdescription>
<para>successor epoch that waits for this new epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="166" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="1064" bodyend="1073"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1ab40facc51a93c0c1612d9858f708d697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::term::TerminationDetector::makeEpochRooted</definition>
        <argsstring>(std::string const &amp;label, UseDS use_ds=UseDS{false}, SuccessorEpochCapture successor=SuccessorEpochCapture{})</argsstring>
        <name>makeEpochRooted</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1term_1_1_use_d_s" kindref="compound">UseDS</ref></type>
          <declname>use_ds</declname>
          <defval><ref refid="structvt_1_1term_1_1_use_d_s" kindref="compound">UseDS</ref>{false}</defval>
        </param>
        <param>
          <type><ref refid="structvt_1_1term_1_1_successor_epoch_capture" kindref="compound">SuccessorEpochCapture</ref></type>
          <declname>successor</declname>
          <defval><ref refid="structvt_1_1term_1_1_successor_epoch_capture" kindref="compound">SuccessorEpochCapture</ref>{}</defval>
        </param>
        <briefdescription>
<para>Create a new rooted epoch with a label. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">label</parametername>
</parameternamelist>
<parameterdescription>
<para>epoch label for debugging purposes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">use_ds</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to use the Dijkstra-Scholten algorithm </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">successor</parametername>
</parameternamelist>
<parameterdescription>
<para>successor epoch that waits for this new epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="179" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="1036" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a67f24233f3d3e02ca7c1d6dc94e343c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::term::TerminationDetector::makeEpochCollective</definition>
        <argsstring>(std::string const &amp;label, SuccessorEpochCapture successor=SuccessorEpochCapture{})</argsstring>
        <name>makeEpochCollective</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1term_1_1_successor_epoch_capture" kindref="compound">SuccessorEpochCapture</ref></type>
          <declname>successor</declname>
          <defval><ref refid="structvt_1_1term_1_1_successor_epoch_capture" kindref="compound">SuccessorEpochCapture</ref>{}</defval>
        </param>
        <briefdescription>
<para>Create a collective epoch with a label. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">label</parametername>
</parameternamelist>
<parameterdescription>
<para>epoch label for debugging purposes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">successor</parametername>
</parameternamelist>
<parameterdescription>
<para>successor epoch that waits for this new epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="193" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="1075" bodyend="1095"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1aa21e984d13f1e459becf695cca348920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::term::TerminationDetector::makeEpoch</definition>
        <argsstring>(std::string const &amp;label, bool is_coll, UseDS use_ds=UseDS{false}, SuccessorEpochCapture successor=SuccessorEpochCapture{})</argsstring>
        <name>makeEpoch</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_coll</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1term_1_1_use_d_s" kindref="compound">UseDS</ref></type>
          <declname>use_ds</declname>
          <defval><ref refid="structvt_1_1term_1_1_use_d_s" kindref="compound">UseDS</ref>{false}</defval>
        </param>
        <param>
          <type><ref refid="structvt_1_1term_1_1_successor_epoch_capture" kindref="compound">SuccessorEpochCapture</ref></type>
          <declname>successor</declname>
          <defval><ref refid="structvt_1_1term_1_1_successor_epoch_capture" kindref="compound">SuccessorEpochCapture</ref>{}</defval>
        </param>
        <briefdescription>
<para>Create a new rooted or collective epoch with a label. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">label</parametername>
</parameternamelist>
<parameterdescription>
<para>epoch label for debugging purposes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_coll</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to create a collective or rooted epoch </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">use_ds</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to use the Dijkstra-Scholten algorithm </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">successor</parametername>
</parameternamelist>
<parameterdescription>
<para>successor epoch that waits for this new epoch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="208" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="1097" bodyend="1104"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1af9f932ff57f12da573a75adbbaee73df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::activateEpoch</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>activateEpoch</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="215" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="1106" bodyend="1120"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1ad54d75c50bd3f34f30247817737bc303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::finishedEpoch</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>finishedEpoch</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="216" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="953" bodyend="968"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a349739e9ee6dea98a863b4afb1e49c10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::finishNoActivateEpoch</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>finishNoActivateEpoch</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="217" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="945" bodyend="951"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1abf693185b7818949fb7edc6cd3507245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::term::TerminationDetector::makeEpochRootedWave</definition>
        <argsstring>(SuccessorEpochCapture successor, std::string const &amp;label=&quot;&quot;)</argsstring>
        <name>makeEpochRootedWave</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_successor_epoch_capture" kindref="compound">SuccessorEpochCapture</ref></type>
          <declname>successor</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>label</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="223" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="970" bodyend="1001"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1ace8e32a81e88bd714ee6d7011bf1c7eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::term::TerminationDetector::makeEpochRootedDS</definition>
        <argsstring>(SuccessorEpochCapture successor, std::string const &amp;label=&quot;&quot;)</argsstring>
        <name>makeEpochRootedDS</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_successor_epoch_capture" kindref="compound">SuccessorEpochCapture</ref></type>
          <declname>successor</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>label</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="226" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="1003" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a782a54afd99943982ce455416828ea66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::startEpochGraphBuild</definition>
        <argsstring>()</argsstring>
        <name>startEpochGraphBuild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="256" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="608" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1acb639c048af01c8d67c82db0227888a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::setLocalTerminated</definition>
        <argsstring>(bool const terminated, bool const no_propagate=true)</argsstring>
        <name>setLocalTerminated</name>
        <param>
          <type>bool const</type>
          <declname>terminated</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>no_propagate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="264" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="134" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a4a54157fff0152b531b26c4a18393049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::maybePropagate</definition>
        <argsstring>()</argsstring>
        <name>maybePropagate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="265" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="254" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1aa5802cb6f199f3359b1a85058102220c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1term_1a4fd378cdb0c36683afc1b3399d685f7f" kindref="member">TermCounterType</ref></type>
        <definition>TermCounterType vt::term::TerminationDetector::getNumUnits</definition>
        <argsstring>() const</argsstring>
        <name>getNumUnits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="266" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1af0b08c4a5dd17d893e677ad280bef84a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::term::TerminationDetector::getNumTerminatedCollectiveEpochs</definition>
        <argsstring>() const</argsstring>
        <name>getNumTerminatedCollectiveEpochs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="267" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="1163" bodyend="1165"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a1d3cebd2600b5a3900dd9954de55cf35" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacevt_1_1term_1ad8ec9b371608fc88e7fdeef219785b27" kindref="member">TermStatusEnum</ref></type>
        <definition>TermStatusEnum vt::term::TerminationDetector::testEpochTerminated</definition>
        <argsstring>(EpochType epoch) override</argsstring>
        <name>testEpochTerminated</name>
        <reimplements refid="structvt_1_1term_1_1_term_terminated_1a9d23b646c13a95738f72f7abfc8774c7">testEpochTerminated</reimplements>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="271" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="807" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a2c85d1d5316235e068433f4a3984a67e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::term::TerminationDetector::isEpochTerminated</definition>
        <argsstring>(EpochType epoch)</argsstring>
        <name>isEpochTerminated</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="273" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="803" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1adb20ee8033c61f520d50592dd33b3080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structvt_1_1term_1_1_termination_detector_1af67f0ab522e54eb06d8ac541526155e3" kindref="member">EpochGraph</ref> &gt;</type>
        <definition>std::shared_ptr&lt; TerminationDetector::EpochGraph &gt; vt::term::TerminationDetector::makeGraph</definition>
        <argsstring>()</argsstring>
        <name>makeGraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="276" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="343" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a18685d6c5c81e5f1c73d92891cef601b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::addDependency</definition>
        <argsstring>(EpochType predecessor, EpochType successoor)</argsstring>
        <name>addDependency</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>predecessor</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>successoor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="294" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="888" bodyend="926"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a185004af9f842c58258128456ef27160" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1_termination_detector_1a69e2615b61e072977463eea5b20b7933" kindref="member">EpochContainerType</ref>&lt; <ref refid="structvt_1_1term_1_1_term_action_1ae4c635b69751d887666814700ed64d65" kindref="member">TermStateType</ref> &gt; const  &amp;</type>
        <definition>EpochContainerType&lt;TermStateType&gt; const&amp; vt::term::TerminationDetector::getEpochState</definition>
        <argsstring>()</argsstring>
        <name>getEpochState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="298" column="1" bodyfile="src/vt/termination/termination.h" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a8eb6730fc343957d0a788919b641762e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_set&lt; <ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &gt; const  &amp;</type>
        <definition>std::unordered_set&lt;EpochType&gt; const&amp; vt::term::TerminationDetector::getEpochReadySet</definition>
        <argsstring>()</argsstring>
        <name>getEpochReadySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="299" column="1" bodyfile="src/vt/termination/termination.h" bodystart="299" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1aed77c0e79a681705e941314e7415df35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_set&lt; <ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> &gt; const  &amp;</type>
        <definition>std::unordered_set&lt;EpochType&gt; const&amp; vt::term::TerminationDetector::getEpochWaitSet</definition>
        <argsstring>()</argsstring>
        <name>getEpochWaitSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="300" column="1" bodyfile="src/vt/termination/termination.h" bodystart="300" bodyend="300"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a7fae7c4264078f157ceb79df1ee5c458" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1_term_action_1ae4c635b69751d887666814700ed64d65" kindref="member">TermStateType</ref> &amp;</type>
        <definition>TerminationDetector::TermStateType &amp; vt::term::TerminationDetector::findOrCreateState</definition>
        <argsstring>(EpochType const &amp;epoch, bool is_ready)</argsstring>
        <name>findOrCreateState</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_ready</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="233" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="151" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a40a2ebe4e220dace273cc6570dd70b01" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::cleanupEpoch</definition>
        <argsstring>(EpochType const &amp;epoch, CallFromEnum from)</argsstring>
        <name>cleanupEpoch</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type>CallFromEnum</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="234" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="671" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a048f9a1dc93ec837a3f885ebae77ddb4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::produceConsumeState</definition>
        <argsstring>(TermStateType &amp;state, TermCounterType const num_units, bool produce, NodeType node)</argsstring>
        <name>produceConsumeState</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_term_action_1ae4c635b69751d887666814700ed64d65" kindref="member">TermStateType</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1term_1a4fd378cdb0c36683afc1b3399d685f7f" kindref="member">TermCounterType</ref> const</type>
          <declname>num_units</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>produce</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="235" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="175" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a3e06098a7b54106910ea9000e2571a39" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::produceConsume</definition>
        <argsstring>(EpochType epoch=any_epoch_sentinel, TermCounterType num_units=1, bool produce=true, NodeType node=uninitialized_destination)</argsstring>
        <name>produceConsume</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>epoch</declname>
          <defval>any_epoch_sentinel</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1term_1a4fd378cdb0c36683afc1b3399d685f7f" kindref="member">TermCounterType</ref></type>
          <declname>num_units</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>produce</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>node</declname>
          <defval>uninitialized_destination</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="239" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="222" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a233dc0ec4468f6e8006c959d613c28fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::propagateEpochExternalState</definition>
        <argsstring>(TermStateType &amp;state, TermCounterType const &amp;prod, TermCounterType const &amp;cons)</argsstring>
        <name>propagateEpochExternalState</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_term_action_1ae4c635b69751d887666814700ed64d65" kindref="member">TermStateType</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1term_1a4fd378cdb0c36683afc1b3399d685f7f" kindref="member">TermCounterType</ref> const &amp;</type>
          <declname>prod</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1term_1a4fd378cdb0c36683afc1b3399d685f7f" kindref="member">TermCounterType</ref> const &amp;</type>
          <declname>cons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="243" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="270" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a580b7ba3727a7358125cf217e9dcab19" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::propagateEpochExternal</definition>
        <argsstring>(EpochType const &amp;epoch, TermCounterType const &amp;prod, TermCounterType const &amp;cons)</argsstring>
        <name>propagateEpochExternal</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1term_1a4fd378cdb0c36683afc1b3399d685f7f" kindref="member">TermCounterType</ref> const &amp;</type>
          <declname>prod</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1term_1a4fd378cdb0c36683afc1b3399d685f7f" kindref="member">TermCounterType</ref> const &amp;</type>
          <declname>cons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="246" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="290" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1ad812a021139b95077ff0168611401334" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::term::TerminationDetector::getArchetype</definition>
        <argsstring>(EpochType const &amp;epoch) const</argsstring>
        <name>getArchetype</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="251" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="104" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a9fb190f8db25f2296025de31dc7df72c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1_epoch_window" kindref="compound">EpochWindow</ref> *</type>
        <definition>EpochWindow * vt::term::TerminationDetector::getWindow</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>getWindow</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="252" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="110" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a9460b5236e34a5baa344b0ac814ce3c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::countsConstant</definition>
        <argsstring>(TermStateType &amp;state)</argsstring>
        <name>countsConstant</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_term_action_1ae4c635b69751d887666814700ed64d65" kindref="member">TermStateType</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="253" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="536" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a7637035e3f3c0f898d8dc79bbc2d8bf4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::updateResolvedEpochs</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>updateResolvedEpochs</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="259" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="790" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a8a6c9a639b67a774e15c98d4b9d80166" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::inquireTerminated</definition>
        <argsstring>(EpochType const &amp;epoch, NodeType const &amp;from_node)</argsstring>
        <name>inquireTerminated</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>from_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="260" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="740" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a4ea359dfd9c7cbd1c8dc96f5dff78ed1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::replyTerminated</definition>
        <argsstring>(EpochType const &amp;epoch, bool const &amp;is_terminated)</argsstring>
        <name>replyTerminated</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_terminated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="261" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="771" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a8f39f31278d42572260d09fb4c72aceb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::term::TerminationDetector::propagateEpoch</definition>
        <argsstring>(TermStateType &amp;state)</argsstring>
        <name>propagateEpoch</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_term_action_1ae4c635b69751d887666814700ed64d65" kindref="member">TermStateType</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="284" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="409" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a54a16b81d1c0717a4a7cd1adff5b146e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::epochTerminated</definition>
        <argsstring>(EpochType const &amp;epoch, CallFromEnum from)</argsstring>
        <name>epochTerminated</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type>CallFromEnum</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="285" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="714" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1aa26ade7d870d21b3ec9f5e97154bb847" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::epochContinue</definition>
        <argsstring>(EpochType const &amp;epoch, TermWaveType const &amp;wave)</argsstring>
        <name>epochContinue</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1term_1a4af17606966b2b5a6cba523bc39095a3" kindref="member">TermWaveType</ref> const &amp;</type>
          <declname>wave</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="286" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="854" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a0522eb82931331906a8be4a3571393b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::setupNewEpoch</definition>
        <argsstring>(EpochType const &amp;epoch, std::string const &amp;label)</argsstring>
        <name>setupNewEpoch</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="287" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="1144" bodyend="1161"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a93d5fd6eead47198c2ed4daaaf68c7ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::readyNewEpoch</definition>
        <argsstring>(EpochType const &amp;epoch)</argsstring>
        <name>readyNewEpoch</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="288" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1ab8ed0e9dd8e865c318c98013a99cd8a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::makeRootedHan</definition>
        <argsstring>(EpochType const &amp;epoch, bool is_root, std::string const &amp;label=&quot;&quot;)</argsstring>
        <name>makeRootedHan</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const &amp;</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_root</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>label</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="289" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="1122" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a34e823e14dcdd47e32c6eff45c3bf2de" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1term_1_1_epoch_dependency" kindref="compound">EpochDependency</ref> *</type>
        <definition>EpochDependency * vt::term::TerminationDetector::getEpochDep</definition>
        <argsstring>(EpochType epoch)</argsstring>
        <name>getEpochDep</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="303" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="877" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1aac9b76ef4345ca2c757f829a17bb7bfb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::removeEpochStateDependency</definition>
        <argsstring>(EpochType ep)</argsstring>
        <name>removeEpochStateDependency</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>ep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="304" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="928" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1ac0c59133b2db32f599aa4b5f8f451fe0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::addEpochStateDependency</definition>
        <argsstring>(EpochType ep)</argsstring>
        <name>addEpochStateDependency</name>
        <param>
          <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref></type>
          <declname>ep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="305" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="938" bodyend="943"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1af9fd292c8d1bcc5eba9ee1fb39c29ea2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::hangCheckHandler</definition>
        <argsstring>(HangCheckMsg *msg)</argsstring>
        <name>hangCheckHandler</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_hang_check_msg" kindref="compound">HangCheckMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="279" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="619" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1adb3b87cb03a5991e059bb7930ec5d682" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::buildLocalGraphHandler</definition>
        <argsstring>(BuildGraphMsg *msg)</argsstring>
        <name>buildLocalGraphHandler</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_build_graph_msg" kindref="compound">BuildGraphMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="280" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="624" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a5a8084f2dc7df36da7e78d088ae8cae9" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::epochGraphBuiltHandler</definition>
        <argsstring>(EpochGraphMsg *msg)</argsstring>
        <name>epochGraphBuiltHandler</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_termination_detector_1aec8abc5a3b161ac7df73ff3ba385dace" kindref="member">EpochGraphMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="281" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="659" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a3290a7d57d60b0877a39379945303675" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::makeRootedHandler</definition>
        <argsstring>(TermMsg *msg)</argsstring>
        <name>makeRootedHandler</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_term_msg" kindref="compound">TermMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="308" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a77d03435714d4abea092f464c42af1f0" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::inquireEpochTerminated</definition>
        <argsstring>(TermTerminatedMsg *msg)</argsstring>
        <name>inquireEpochTerminated</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_term_terminated_msg" kindref="compound">TermTerminatedMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="309" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1ad4e25e7f6a8703bdff30bc2f56ab195f" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::replyEpochTerminated</definition>
        <argsstring>(TermTerminatedReplyMsg *msg)</argsstring>
        <name>replyEpochTerminated</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_term_terminated_reply_msg" kindref="compound">TermTerminatedReplyMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="310" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a75c8f7279bbd48daec2ddc7ee0f0b7b3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::propagateEpochHandler</definition>
        <argsstring>(TermCounterMsg *msg)</argsstring>
        <name>propagateEpochHandler</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_term_counter_msg" kindref="compound">TermCounterMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="311" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1af1429c4e6d684bc0487f1b4a6d6bbf43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::epochTerminatedHandler</definition>
        <argsstring>(TermMsg *msg)</argsstring>
        <name>epochTerminatedHandler</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_term_msg" kindref="compound">TermMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="312" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1term_1_1_termination_detector_1a5791344ef9d163fa9cb17b136ca68549" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::term::TerminationDetector::epochContinueHandler</definition>
        <argsstring>(TermMsg *msg)</argsstring>
        <name>epochContinueHandler</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1_term_msg" kindref="compound">TermMsg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/termination.h" line="313" column="1" bodyfile="src/vt/termination/termination.cc" bodystart="88" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2944">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="2945" relation="public-inheritance">
        </childnode>
        <childnode refid="2946" relation="public-inheritance">
        </childnode>
        <childnode refid="2947" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2951">
        <label>DijkstraScholtenTerm</label>
        <link refid="structvt_1_1term_1_1ds_1_1_state_d_s"/>
      </node>
      <node id="2948">
        <label>vt::term::TermAction</label>
        <link refid="structvt_1_1term_1_1_term_action"/>
        <childnode refid="2949" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2942">
        <label>vt::term::TerminationDetector</label>
        <link refid="structvt_1_1term_1_1_termination_detector"/>
        <childnode refid="2943" relation="public-inheritance">
        </childnode>
        <childnode refid="2948" relation="public-inheritance">
        </childnode>
        <childnode refid="2950" relation="public-inheritance">
        </childnode>
        <childnode refid="2951" relation="public-inheritance">
        </childnode>
        <childnode refid="2952" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2945">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
      </node>
      <node id="2949">
        <label>vt::term::TermTerminated</label>
        <link refid="structvt_1_1term_1_1_term_terminated"/>
      </node>
      <node id="2943">
        <label>vt::runtime::component::Component&lt; TerminationDetector &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="2944" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2946">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="2947">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="2950">
        <label>vt::collective::tree::Tree</label>
        <link refid="structvt_1_1collective_1_1tree_1_1_tree"/>
      </node>
      <node id="2952">
        <label>vt::term::TermInterface</label>
        <link refid="structvt_1_1term_1_1_term_interface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2955">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="2956" relation="public-inheritance">
        </childnode>
        <childnode refid="2957" relation="public-inheritance">
        </childnode>
        <childnode refid="2958" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2964">
        <label>vt::term::TerminationDetector::Scoped</label>
        <link refid="structvt_1_1term_1_1_termination_detector_1_1_scoped"/>
      </node>
      <node id="2962">
        <label>DijkstraScholtenTerm</label>
        <link refid="structvt_1_1term_1_1ds_1_1_state_d_s"/>
      </node>
      <node id="2959">
        <label>vt::term::TermAction</label>
        <link refid="structvt_1_1term_1_1_term_action"/>
        <childnode refid="2960" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2953">
        <label>vt::term::TerminationDetector</label>
        <link refid="structvt_1_1term_1_1_termination_detector"/>
        <childnode refid="2954" relation="public-inheritance">
        </childnode>
        <childnode refid="2959" relation="public-inheritance">
        </childnode>
        <childnode refid="2961" relation="public-inheritance">
        </childnode>
        <childnode refid="2962" relation="public-inheritance">
        </childnode>
        <childnode refid="2963" relation="public-inheritance">
        </childnode>
        <childnode refid="2964" relation="usage">
          <edgelabel>scope</edgelabel>
        </childnode>
      </node>
      <node id="2956">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
      </node>
      <node id="2960">
        <label>vt::term::TermTerminated</label>
        <link refid="structvt_1_1term_1_1_term_terminated"/>
      </node>
      <node id="2954">
        <label>vt::runtime::component::Component&lt; TerminationDetector &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="2955" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2957">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="2958">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="2961">
        <label>vt::collective::tree::Tree</label>
        <link refid="structvt_1_1collective_1_1tree_1_1_tree"/>
      </node>
      <node id="2963">
        <label>vt::term::TermInterface</label>
        <link refid="structvt_1_1term_1_1_term_interface"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/termination/termination.h" line="80" column="1" bodyfile="src/vt/termination/termination.h" bodystart="77" bodyend="332"/>
    <listofallmembers>
      <member refid="structvt_1_1term_1_1ds_1_1_state_d_s_1a60aafca7a5eef1368e55c02508a0f3bf" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>acknowledge</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1a3b7ff49ce82fc33a7a1ebda8797c02b7" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>ActionContType</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1af9f932ff57f12da573a75adbbaee73df" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>activateEpoch</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1a1227042cb4eb38937fb8ed34bcbdf998" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>addAction</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1a15b79357805676e1ff2f880b02fd4061" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>addAction</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1a2429a48171da578d25d7672486a24b51" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>addActionEpoch</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1a3ccd1689f56ab62821cfa6b1e65fc60b" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>addActionUnique</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1a9e9e174482720b4886ea4e8c38ead0d7" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>addDefaultAction</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a18685d6c5c81e5f1c73d92891cef601b" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>addDependency</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1ac0c59133b2db32f599aa4b5f8f451fe0" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>addEpochStateDependency</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1a873f01594c4c30233ea9a409b2067150" prot="protected" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>afterAddEpochAction</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a49337963d174e5be73fcf467304428a6" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>any_epoch_state_</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a6b172cf395acf512b3f9698651c4e10d" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>ArgType</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1adb3b87cb03a5991e059bb7930ec5d682" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>buildLocalGraphHandler</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1aa4a32326730b20530526e1db6512c017" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>CallableActionType</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1a802aaa899ce87dc9f8a53d43b202044c" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>CallableContType</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1ad9e499fefd57d3bea8e0cae68a6b7f61" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>CallableVecType</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a4f3ede9a87f39d86e85f92b36a6c6a30" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>CallFromEnum</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a40a2ebe4e220dace273cc6570dd70b01" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>cleanupEpoch</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1aa5ec547b72f5da20aa4bee7cab6d3f35" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>clearActions</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1a942136955ad91cd2e464e05956115ed3" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>clearActionsEpoch</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ab954824329584814bb652ea810cd62e3" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1a94c1d493860adff6ae69c5eb31bb3f" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>Component</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a950215186c7303d99316ece6ea31c4cd" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>consume</name></member>
      <member refid="structvt_1_1term_1_1_term_interface_1a6e117a0857540c82133b7a10bfa5d39e" prot="public" virt="non-virtual" ambiguityscope="vt::term::TermInterface::"><scope>vt::term::TerminationDetector</scope><name>consume</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a9460b5236e34a5baa344b0ac814ce3c9" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>countsConstant</name></member>
      <member refid="structvt_1_1term_1_1ds_1_1_state_d_s_1a55a5290621f7de06a421793daba374e8" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>disengage</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a9c0b991de134b4bc5bebf051bd067b9f" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>ds::StateDS</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695" prot="public" virt="virtual"><scope>vt::term::TerminationDetector</scope><name>dumpState</name></member>
      <member refid="structvt_1_1term_1_1ds_1_1_state_d_s_1aba302de614dd639f5d93f4f5b6dd6108" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>Endpoint</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1ac552185f8a4f39d516a7caecd5d89d51" prot="protected" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>epoch_actions_</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a876ef1f0029acf64d473f23a8f78b2f7" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>epoch_arch_</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1a43bab937874af46a501ccf865336fcb9" prot="protected" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>epoch_callable_actions_</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1ad44ae49373693dff2bafb7afae937c9b" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>epoch_coll_</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a22c7c6cc9c6cd48b5570dbae226a56f3" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>epoch_ready_</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a0c55ef5345253002f9de6e5c4337c53a" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>epoch_state_</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a95cdb85a87fcf162725bc6515b43a002" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>epoch_wait_status_</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1acefe3cb1e2a2bcf0d530082f53a2bada" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>EpochActionContType</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a69e2615b61e072977463eea5b20b7933" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>EpochContainerType</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1aa26ade7d870d21b3ec9f5e97154bb847" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>epochContinue</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a5791344ef9d163fa9cb17b136ca68549" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>epochContinueHandler</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1aee175d34803c93c65e4323ab28f04088" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>EpochDependency</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1af67f0ab522e54eb06d8ac541526155e3" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>EpochGraph</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a5a8084f2dc7df36da7e78d088ae8cae9" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>epochGraphBuiltHandler</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1aec8abc5a3b161ac7df73ff3ba385dace" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>EpochGraphMsg</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1afcbc07a9b40ff2b6d53e9522877a745d" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>EpochStateType</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a54a16b81d1c0717a4a7cd1adff5b146e" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>epochTerminated</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1af1429c4e6d684bc0487f1b4a6d6bbf43" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>epochTerminatedHandler</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a098e362de01af6054e5491fba671a959" prot="public" virt="virtual"><scope>vt::term::TerminationDetector</scope><name>finalize</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a7fae7c4264078f157ceb79df1ee5c458" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>findOrCreateState</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1ad54d75c50bd3f34f30247817737bc303" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>finishedEpoch</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a349739e9ee6dea98a863b4afb1e49c10" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>finishNoActivateEpoch</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ad5546485f90dd449a203f174b1374a01" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>foreachChild</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a8200f03bf19b18b2323d1fcb99d5335f" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>foreachChild</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a3b1e4a0d87c5af08fc36925ec74504fd" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>freeEpoch</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1ad812a021139b95077ff0168611401334" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getArchetype</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a57b3edade6230de16232213b7c4380f5" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getChildren</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a39e27b1538bf00674a5a653dfd7a0e83" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getChildren</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a546a48949da827a98dea2cfaffeddb91" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getDSTerm</name></member>
      <member refid="structvt_1_1term_1_1ds_1_1_state_d_s_1ac016de8bc9946fdf5386ff17b0ee3ab6" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getDSTermMap</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a34e823e14dcdd47e32c6eff45c3bf2de" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getEpochDep</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a8eb6730fc343957d0a788919b641762e" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getEpochReadySet</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a185004af9f842c58258128456ef27160" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getEpochState</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1aed77c0e79a681705e941314e7415df35" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getEpochWaitSet</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ad68dc6aac90193cc15955d7bd1a5b1fc" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getNumChildren</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1af0b08c4a5dd17d893e677ad280bef84a" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getNumTerminatedCollectiveEpochs</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ac387d211dbc2689a216a3b99bc332507" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getNumTotalChildren</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a294b7827285c140d412a4344f3b135d5" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getNumTotalChildren</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1aa5802cb6f199f3359b1a85058102220c" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getNumUnits</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ab509dada696b718152e8ac04edd551af" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getParent</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a9fb190f8db25f2296025de31dc7df72c" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>getWindow</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1ab3254cc3e17bf4649173323eedb10ae7" prot="protected" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>global_term_actions_</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a5f873fb4a66c8364ec7859bbc608fe55" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>hang_</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1af9fd292c8d1bcc5eba9ee1fb39c29ea2" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>hangCheckHandler</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1ad9b79c662481216d0bb70f81b12dfbf8" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>hangDetectRecv</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1ad863add6716d920778eef1298016a0ea" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>hangDetectSend</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a68afeac40869ccc50882f717106b382f" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>has_printed_epoch_graph</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aca5f3a7c1db697b6d0ba70de7ff8b887" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>hasCons</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a389e53dbfc20013d66ef09d4f42c0a53" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>hasNoCons</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a7f07384d294e59796add9ce6be2d6410" prot="public" virt="virtual"><scope>vt::term::TerminationDetector</scope><name>initialize</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a77d03435714d4abea092f464c42af1f0" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>inquireEpochTerminated</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a8a6c9a639b67a774e15c98d4b9d80166" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>inquireTerminated</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a3ab6ba4618093384b6ddd6c0607df543" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>isDS</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a2c85d1d5316235e068433f4a3984a67e" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>isEpochTerminated</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a88b2add909b0035f4844317481ed559b" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>isRoot</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1ad95b226357b77e29c415627bbca4e798" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>isRooted</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1aa21e984d13f1e459becf695cca348920" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>makeEpoch</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a748dfa37925107b37bde702e6c5f4aa4" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>makeEpochCollective</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a67f24233f3d3e02ca7c1d6dc94e343c9" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>makeEpochCollective</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1ab0724773b4856bfe8225bc5bc0ca6ec0" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>makeEpochRooted</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1ab40facc51a93c0c1612d9858f708d697" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>makeEpochRooted</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1ace8e32a81e88bd714ee6d7011bf1c7eb" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>makeEpochRootedDS</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1abf693185b7818949fb7edc6cd3507245" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>makeEpochRootedWave</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1adb20ee8033c61f520d50592dd33b3080" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>makeGraph</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1ab8ed0e9dd8e865c318c98013a99cd8a1" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>makeRootedHan</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a3290a7d57d60b0877a39379945303675" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>makeRootedHandler</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a4a54157fff0152b531b26c4a18393049" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>maybePropagate</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a6cffc7850bc178af04fb542d50f82086" prot="public" virt="virtual"><scope>vt::term::TerminationDetector</scope><name>name</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a834e7b54ea2dceae42db7c5ea859753f" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>NodeListType</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a4f3ede9a87f39d86e85f92b36a6c6a30a73c8bf8079c6c90553937f74f98c99fc" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>NonRoot</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a56532f6b47b9c71864980b73deee2d5a" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>numLevels</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1af64acc9543dc1bd1b56d6ed17b003425" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>NumLevelsType</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a5ce4242e9580c807baa74168401f381a" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>OperationType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a5a15bd0369a9d3765a6c70249bada96f" prot="public" virt="virtual"><scope>vt::term::TerminationDetector</scope><name>pollable</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a3c31a1c36b5d55e9d28b5b26b2436573" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>produce</name></member>
      <member refid="structvt_1_1term_1_1_term_interface_1a38661883a7d3a721e50c6ab2d9e10edb" prot="public" virt="non-virtual" ambiguityscope="vt::term::TermInterface::"><scope>vt::term::TerminationDetector</scope><name>produce</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a3e06098a7b54106910ea9000e2571a39" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>produceConsume</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a048f9a1dc93ec837a3f885ebae77ddb4" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>produceConsumeState</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1dab11d9eb5bed8dfd5a3bb8fdf67f5a" prot="public" virt="virtual"><scope>vt::term::TerminationDetector</scope><name>progress</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a8f39f31278d42572260d09fb4c72aceb" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>propagateEpoch</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a580b7ba3727a7358125cf217e9dcab19" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>propagateEpochExternal</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a233dc0ec4468f6e8006c959d613c28fd" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>propagateEpochExternalState</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a75c8f7279bbd48daec2ddc7ee0f0b7b3" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>propagateEpochHandler</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a93d5fd6eead47198c2ed4daaaf68c7ed" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>readyNewEpoch</name></member>
      <member refid="structvt_1_1term_1_1_term_interface_1afffcd1367305830597216a7b48886cb1" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>recv</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1aac9b76ef4345ca2c757f829a17bb7bfb" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>removeEpochStateDependency</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1ad4e25e7f6a8703bdff30bc2f56ab195f" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>replyEpochTerminated</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a4ea359dfd9c7cbd1c8dc96f5dff78ed1" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>replyTerminated</name></member>
      <member refid="structvt_1_1term_1_1ds_1_1_state_d_s_1acdf0151492a1e35c6565c65b138e8ac9" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>requestAck</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a756e767b99e869966247c9198403afb6" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>resetGlobalTerm</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a4f3ede9a87f39d86e85f92b36a6c6a30a4beac8e3ddc4064785a61aa7949e3bda" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>Root</name></member>
      <member refid="structvt_1_1term_1_1ds_1_1_state_d_s_1a26ae9b485dbb46e46b48e73a321cfd8b" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>rootTerminated</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a9027001de957f59eb36bb5784f7af4b1" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>scope</name></member>
      <member refid="structvt_1_1term_1_1_term_interface_1a21ef75badf08fea19807204e502ec4fe" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>send</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1acb639c048af01c8d67c82db0227888a4" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>setLocalTerminated</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a0522eb82931331906a8be4a3571393b5" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>setupNewEpoch</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1aa3120d3bdbb2a308dd6831aa52d0ebb0" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>setupTree</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a782a54afd99943982ce455416828ea66" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>startEpochGraphBuild</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aad3974307ab3b2e1df389a91310f68c2" prot="public" virt="virtual"><scope>vt::term::TerminationDetector</scope><name>startup</name></member>
      <member refid="structvt_1_1term_1_1ds_1_1_state_d_s_1a8b90d70734aebbe6cbea49fa8fc713f2" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>StateDS</name></member>
      <member refid="structvt_1_1term_1_1ds_1_1_state_d_s_1aa84d97ee4f2f52142bddb1ec2238a722" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>StateDS</name></member>
      <member refid="structvt_1_1term_1_1ds_1_1_state_d_s_1a83663b5cf3c5cc43eaa8bb0bd5edee31" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>StateDS</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a7d82b061566ef21d6438f4701ae6b733" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>staticInit</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aaada4d04e8adf4cc5556bed2fdcdb321" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>staticInit</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1ac8df9c8a604ee2073ce195a994aaf252" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>SuccessorBagType</name></member>
      <member refid="structvt_1_1term_1_1ds_1_1_state_d_s_1a97a12b9645ebe99171d7680baab34b5d" prot="protected" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>term_</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1ac0b0f4271452cfbea674c6a7c4f50a4b" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>TermAction</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a9e6bc0a436aa1bb5f6b344ac795b3303" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>TerminationDetector</name></member>
      <member refid="structvt_1_1term_1_1ds_1_1_state_d_s_1af98cfe31c25f710273ee103026d538e4" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>TerminatorType</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a628421bb882cfbd05876660b5b7dc150" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>TermState</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1aa96c37b5c120063060c6418c48e64bd1" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>TermStateDSType</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a0a47413bcb7bf5e10ecb31e7871a9268" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>TermStateType</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a1d3cebd2600b5a3900dd9954de55cf35" prot="public" virt="virtual"><scope>vt::term::TerminationDetector</scope><name>testEpochTerminated</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ae9570e9a8f303295744e99b527603a51" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>Tree</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1ad759f716890ce5344a6c6053fcdc7055" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>Tree</name></member>
      <member refid="structvt_1_1collective_1_1tree_1_1_tree_1a949f8b592559125bf225bd3828bd6b88" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>Tree</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1a0cf69a46cb567f12844745cb37a91971" prot="protected" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>triggerAllActions</name></member>
      <member refid="structvt_1_1term_1_1_term_action_1a23cc1dcce197af4e2e81fa659d952d94" prot="protected" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>triggerAllEpochActions</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a7637035e3f3c0f898d8dc79bbc2d8bf4" prot="private" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>updateResolvedEpochs</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a2c002273d9304c3cf72be85dd7d3ce52" prot="public" virt="non-virtual"><scope>vt::term::TerminationDetector</scope><name>WindowType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a9190b5cb499f9cfdacc1e0bd98a1805a" prot="public" virt="virtual"><scope>vt::term::TerminationDetector</scope><name>~BaseComponent</name></member>
      <member refid="structvt_1_1term_1_1_termination_detector_1a1a1a29c2374a70427d8173ec31d55421" prot="public" virt="virtual"><scope>vt::term::TerminationDetector</scope><name>~TerminationDetector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
