<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="trace__user_8h" kind="file" language="C++">
    <compoundname>trace_user.h</compoundname>
    <includes refid="config_8h" local="yes">vt/config.h</includes>
    <includes refid="trace__common_8h" local="yes">vt/trace/trace_common.h</includes>
    <includes local="no">string</includes>
    <includedby refid="trace_2trace_8cc" local="yes">src/vt/trace/trace.cc</includedby>
    <includedby refid="trace__headers_8h" local="yes">src/vt/trace/trace_headers.h</includedby>
    <includedby refid="trace__lite_8cc" local="yes">src/vt/trace/trace_lite.cc</includedby>
    <includedby refid="trace__user_8cc" local="yes">src/vt/trace/trace_user.cc</includedby>
    <incdepgraph>
      <node id="270082">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
      </node>
      <node id="270089">
        <label>functional</label>
      </node>
      <node id="270094">
        <label>vt/epoch/epoch_impl_type.h</label>
        <link refid="epoch__impl__type_8h"/>
        <childnode refid="270081" relation="include">
        </childnode>
        <childnode refid="270095" relation="include">
        </childnode>
      </node>
      <node id="270100">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="270101" relation="include">
        </childnode>
        <childnode refid="270088" relation="include">
        </childnode>
        <childnode refid="270102" relation="include">
        </childnode>
      </node>
      <node id="270101">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="270102" relation="include">
        </childnode>
        <childnode refid="270103" relation="include">
        </childnode>
      </node>
      <node id="270081">
        <label>cstdint</label>
      </node>
      <node id="270077">
        <label>src/vt/trace/trace_user.h</label>
        <link refid="trace__user_8h"/>
        <childnode refid="270078" relation="include">
        </childnode>
        <childnode refid="270126" relation="include">
        </childnode>
        <childnode refid="270102" relation="include">
        </childnode>
      </node>
      <node id="270122">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="270110" relation="include">
        </childnode>
        <childnode refid="270088" relation="include">
        </childnode>
        <childnode refid="270116" relation="include">
        </childnode>
        <childnode refid="270121" relation="include">
        </childnode>
        <childnode refid="270123" relation="include">
        </childnode>
        <childnode refid="270100" relation="include">
        </childnode>
        <childnode refid="270120" relation="include">
        </childnode>
        <childnode refid="270091" relation="include">
        </childnode>
        <childnode refid="270098" relation="include">
        </childnode>
        <childnode refid="270102" relation="include">
        </childnode>
        <childnode refid="270125" relation="include">
        </childnode>
        <childnode refid="270106" relation="include">
        </childnode>
      </node>
      <node id="270096">
        <label>vt/epoch/epoch_type.h</label>
        <link refid="epoch__type_8h"/>
        <childnode refid="270097" relation="include">
        </childnode>
        <childnode refid="270094" relation="include">
        </childnode>
        <childnode refid="270099" relation="include">
        </childnode>
      </node>
      <node id="270106">
        <label>fmt-vt/core.h</label>
      </node>
      <node id="270120">
        <label>cassert</label>
      </node>
      <node id="270117">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="270110" relation="include">
        </childnode>
        <childnode refid="270088" relation="include">
        </childnode>
        <childnode refid="270116" relation="include">
        </childnode>
        <childnode refid="270118" relation="include">
        </childnode>
        <childnode refid="270100" relation="include">
        </childnode>
        <childnode refid="270111" relation="include">
        </childnode>
        <childnode refid="270091" relation="include">
        </childnode>
        <childnode refid="270098" relation="include">
        </childnode>
        <childnode refid="270102" relation="include">
        </childnode>
        <childnode refid="270120" relation="include">
        </childnode>
        <childnode refid="270106" relation="include">
        </childnode>
      </node>
      <node id="270092">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="270093" relation="include">
        </childnode>
        <childnode refid="270094" relation="include">
        </childnode>
      </node>
      <node id="270110">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="270088" relation="include">
        </childnode>
      </node>
      <node id="270093">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
        <childnode refid="270088" relation="include">
        </childnode>
      </node>
      <node id="270107">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="270108" relation="include">
        </childnode>
        <childnode refid="270112" relation="include">
        </childnode>
        <childnode refid="270115" relation="include">
        </childnode>
      </node>
      <node id="270102">
        <label>string</label>
      </node>
      <node id="270123">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="270119" relation="include">
        </childnode>
        <childnode refid="270091" relation="include">
        </childnode>
        <childnode refid="270098" relation="include">
        </childnode>
        <childnode refid="270102" relation="include">
        </childnode>
        <childnode refid="270103" relation="include">
        </childnode>
        <childnode refid="270124" relation="include">
        </childnode>
      </node>
      <node id="270124">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="270123" relation="include">
        </childnode>
        <childnode refid="270100" relation="include">
        </childnode>
        <childnode refid="270119" relation="include">
        </childnode>
        <childnode refid="270091" relation="include">
        </childnode>
        <childnode refid="270098" relation="include">
        </childnode>
        <childnode refid="270102" relation="include">
        </childnode>
        <childnode refid="270103" relation="include">
        </childnode>
        <childnode refid="270106" relation="include">
        </childnode>
      </node>
      <node id="270099">
        <label>fmt-vt/format.h</label>
      </node>
      <node id="270080">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="270081" relation="include">
        </childnode>
        <childnode refid="270082" relation="include">
        </childnode>
        <childnode refid="270083" relation="include">
        </childnode>
        <childnode refid="270085" relation="include">
        </childnode>
      </node>
      <node id="270095">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="270088" relation="include">
        </childnode>
        <childnode refid="270090" relation="include">
        </childnode>
      </node>
      <node id="270079">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="270080" relation="include">
        </childnode>
        <childnode refid="270086" relation="include">
        </childnode>
      </node>
      <node id="270109">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="270102" relation="include">
        </childnode>
      </node>
      <node id="270088">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="270081" relation="include">
        </childnode>
        <childnode refid="270089" relation="include">
        </childnode>
      </node>
      <node id="270113">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="270087" relation="include">
        </childnode>
        <childnode refid="270102" relation="include">
        </childnode>
        <childnode refid="270091" relation="include">
        </childnode>
        <childnode refid="270098" relation="include">
        </childnode>
        <childnode refid="270114" relation="include">
        </childnode>
      </node>
      <node id="270104">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
        <childnode refid="270105" relation="include">
        </childnode>
      </node>
      <node id="270108">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="270109" relation="include">
        </childnode>
        <childnode refid="270088" relation="include">
        </childnode>
        <childnode refid="270110" relation="include">
        </childnode>
        <childnode refid="270111" relation="include">
        </childnode>
        <childnode refid="270083" relation="include">
        </childnode>
        <childnode refid="270102" relation="include">
        </childnode>
        <childnode refid="270106" relation="include">
        </childnode>
      </node>
      <node id="270126">
        <label>vt/trace/trace_common.h</label>
        <link refid="trace__common_8h"/>
        <childnode refid="270088" relation="include">
        </childnode>
        <childnode refid="270081" relation="include">
        </childnode>
        <childnode refid="270127" relation="include">
        </childnode>
      </node>
      <node id="270091">
        <label>tuple</label>
      </node>
      <node id="270097">
        <label>vt/utils/strong/strong_type.h</label>
        <link refid="strong__type_8h"/>
        <childnode refid="270089" relation="include">
        </childnode>
        <childnode refid="270098" relation="include">
        </childnode>
      </node>
      <node id="270086">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="270087" relation="include">
        </childnode>
        <childnode refid="270080" relation="include">
        </childnode>
        <childnode refid="270100" relation="include">
        </childnode>
        <childnode refid="270104" relation="include">
        </childnode>
        <childnode refid="270106" relation="include">
        </childnode>
      </node>
      <node id="270103">
        <label>vector</label>
      </node>
      <node id="270105">
        <label>utility</label>
      </node>
      <node id="270125">
        <label>sstream</label>
      </node>
      <node id="270084">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="270118">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="270119" relation="include">
        </childnode>
        <childnode refid="270102" relation="include">
        </childnode>
        <childnode refid="270091" relation="include">
        </childnode>
        <childnode refid="270103" relation="include">
        </childnode>
      </node>
      <node id="270083">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
        <childnode refid="270084" relation="include">
        </childnode>
      </node>
      <node id="270119">
        <label>cstdlib</label>
      </node>
      <node id="270112">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="270110" relation="include">
        </childnode>
        <childnode refid="270113" relation="include">
        </childnode>
        <childnode refid="270091" relation="include">
        </childnode>
      </node>
      <node id="270127">
        <label>cstddef</label>
      </node>
      <node id="270087">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="270088" relation="include">
        </childnode>
        <childnode refid="270090" relation="include">
        </childnode>
        <childnode refid="270092" relation="include">
        </childnode>
        <childnode refid="270095" relation="include">
        </childnode>
        <childnode refid="270096" relation="include">
        </childnode>
      </node>
      <node id="270116">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="270088" relation="include">
        </childnode>
        <childnode refid="270110" relation="include">
        </childnode>
        <childnode refid="270091" relation="include">
        </childnode>
        <childnode refid="270098" relation="include">
        </childnode>
        <childnode refid="270102" relation="include">
        </childnode>
        <childnode refid="270117" relation="include">
        </childnode>
      </node>
      <node id="270090">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="270088" relation="include">
        </childnode>
        <childnode refid="270081" relation="include">
        </childnode>
        <childnode refid="270089" relation="include">
        </childnode>
        <childnode refid="270091" relation="include">
        </childnode>
      </node>
      <node id="270098">
        <label>type_traits</label>
      </node>
      <node id="270111">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="270087" relation="include">
        </childnode>
        <childnode refid="270102" relation="include">
        </childnode>
      </node>
      <node id="270078">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="270079" relation="include">
        </childnode>
        <childnode refid="270087" relation="include">
        </childnode>
        <childnode refid="270107" relation="include">
        </childnode>
      </node>
      <node id="270085">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="270115">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="270116" relation="include">
        </childnode>
        <childnode refid="270121" relation="include">
        </childnode>
        <childnode refid="270091" relation="include">
        </childnode>
        <childnode refid="270098" relation="include">
        </childnode>
      </node>
      <node id="270121">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="270110" relation="include">
        </childnode>
        <childnode refid="270088" relation="include">
        </childnode>
        <childnode refid="270091" relation="include">
        </childnode>
        <childnode refid="270102" relation="include">
        </childnode>
        <childnode refid="270122" relation="include">
        </childnode>
      </node>
      <node id="270114">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="270087" relation="include">
        </childnode>
        <childnode refid="270080" relation="include">
        </childnode>
        <childnode refid="270110" relation="include">
        </childnode>
        <childnode refid="270113" relation="include">
        </childnode>
        <childnode refid="270111" relation="include">
        </childnode>
        <childnode refid="270109" relation="include">
        </childnode>
        <childnode refid="270102" relation="include">
        </childnode>
        <childnode refid="270091" relation="include">
        </childnode>
        <childnode refid="270098" relation="include">
        </childnode>
        <childnode refid="270106" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="270134">
        <label>src/vt/trace/trace_user.cc</label>
        <link refid="trace__user_8cc"/>
      </node>
      <node id="270128">
        <label>src/vt/trace/trace_user.h</label>
        <link refid="trace__user_8h"/>
        <childnode refid="270129" relation="include">
        </childnode>
        <childnode refid="270130" relation="include">
        </childnode>
        <childnode refid="270133" relation="include">
        </childnode>
        <childnode refid="270134" relation="include">
        </childnode>
      </node>
      <node id="270133">
        <label>src/vt/trace/trace_lite.cc</label>
        <link refid="trace__lite_8cc"/>
      </node>
      <node id="270130">
        <label>src/vt/trace/trace_headers.h</label>
        <link refid="trace__headers_8h"/>
        <childnode refid="270131" relation="include">
        </childnode>
      </node>
      <node id="270132">
        <label>src/vt/vt.h</label>
        <link refid="vt_8h"/>
      </node>
      <node id="270129">
        <label>src/vt/trace/trace.cc</label>
        <link refid="trace_2trace_8cc"/>
      </node>
      <node id="270131">
        <label>src/vt/transport.h</label>
        <link refid="transport_8h"/>
        <childnode refid="270132" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structvt_1_1trace_1_1_trace_scoped_note" prot="public">vt::trace::TraceScopedNote</innerclass>
    <innerclass refid="structvt_1_1trace_1_1_trace_scoped_event" prot="public">vt::trace::TraceScopedEvent</innerclass>
    <innerclass refid="structvt_1_1trace_1_1_trace_scoped_event_hash" prot="public">vt::trace::TraceScopedEventHash</innerclass>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1trace">vt::trace</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trace_user.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2021<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_VT_TRACE_TRACE_USER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_VT_TRACE_TRACE_USER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">vt/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trace__common_8h" kindref="compound">vt/trace/trace_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689aa14cb3132cde2e74239755b4c3944f43" kindref="member">trace</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref><sp/><ref refid="namespacevt_1_1trace_1ab52bad26cd57cc6e59953c814192b0f1" kindref="member">registerEventCollective</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>name);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref><sp/><ref refid="namespacevt_1_1trace_1a0cacc6989895f36e577db51e16df1e23" kindref="member">registerEventRooted</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>name);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref><sp/><ref refid="namespacevt_1_1trace_1ad1f604656798749839b36d1d29def59e" kindref="member">registerEventHashed</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>name);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1trace_1ac973a9573bd3cc0a3fead674a4551ac5" kindref="member">addUserEvent</ref>(<ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a9e0b3f734ed730f6f3117f0687eda7df" kindref="member">event</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1trace_1ab090a5c9eae800c6820c88b3fe56c9c8" kindref="member">addUserEventBracketed</ref>(<ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a9e0b3f734ed730f6f3117f0687eda7df" kindref="member">event</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1util_1_1json_1aff36ae299329e1a06ef8aab084f59f4f" kindref="member">begin</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1util_1_1json_1a6f1b13d9471c62e046731666abd9c5ed" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1trace_1ad679bbbe9a03da579b442dfdba9cef7b" kindref="member">addUserNote</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>note);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1trace_1a0ec1ac44fb179f29245a36b887f588f1" kindref="member">addUserData</ref>(int32_t<sp/>data);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1trace_1a4617340b633aaa7261727dab91532a2a" kindref="member">addUserBracketedNote</ref>(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1util_1_1json_1aff36ae299329e1a06ef8aab084f59f4f" kindref="member">begin</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1util_1_1json_1a6f1b13d9471c62e046731666abd9c5ed" kindref="member">end</ref>,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>note,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a9e0b3f734ed730f6f3117f0687eda7df" kindref="member">event</ref><sp/>=<sp/>no_trace_event</highlight></codeline>
<codeline lineno="132"><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1trace_1a4b3d43783121ba2ef4459b9d0ce36e6c" kindref="member">addUserNotePre</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>note,<sp/><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a9e0b3f734ed730f6f3117f0687eda7df" kindref="member">event</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1trace_1aa827aafa1d2a9ae4e22fd7494ef2750b" kindref="member">addUserNoteEpi</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>note,<sp/><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a9e0b3f734ed730f6f3117f0687eda7df" kindref="member">event</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>vt_check_enabled(trace_enabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TraceScopedEventHash<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1a47bf49378624ed567d669457a0cedef0" kindref="member">TraceScopedEventHash</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>in_str)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>begin_(TraceLite::<ref refid="namespacevt_1_1timing_1adb71f74fee337dab5a317e58e7d35b1d" kindref="member">getCurrentTime</ref>()),</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str_(in_str)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>event_<sp/>=<sp/><ref refid="namespacevt_1_1trace_1ad1f604656798749839b36d1d29def59e" kindref="member">registerEventHashed</ref>(str_);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1a47bf49378624ed567d669457a0cedef0" kindref="member">TraceScopedEventHash</ref>&amp;<sp/>operator=(<ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1a47bf49378624ed567d669457a0cedef0" kindref="member">TraceScopedEventHash</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>~<ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1a47bf49378624ed567d669457a0cedef0" kindref="member">TraceScopedEventHash</ref>()<sp/>{<sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1ae9d589c131c9fbb66b1a1f32304d661f" kindref="member">end</ref>();<sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1ae9d589c131c9fbb66b1a1f32304d661f" kindref="member">end</ref>()<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event_<sp/>!=<sp/>no_user_event_id)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1ae9d589c131c9fbb66b1a1f32304d661f" kindref="member">end</ref><sp/>=<sp/><ref refid="structvt_1_1trace_1_1_trace_lite_1ad1d8159d645a3b7047ce3f2e0c080f8d" kindref="member">TraceLite::getCurrentTime</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>theTrace()-&gt;addUserEventBracketed(event_,<sp/>begin_,<sp/>end);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>event_<sp/>=<sp/>no_user_event_id;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>begin_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>std::string<sp/>str_<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref><sp/>event_<sp/>=<sp/>no_user_event_id;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TraceScopedEvent<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>TraceScopedEvent(<ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref><sp/><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a9e0b3f734ed730f6f3117f0687eda7df" kindref="member">event</ref>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>begin_(event<sp/>!=<sp/>no_user_event_id<sp/>?<sp/>TraceLite::<ref refid="namespacevt_1_1timing_1adb71f74fee337dab5a317e58e7d35b1d" kindref="member">getCurrentTime</ref>()<sp/>:<sp/>0),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>event_(event)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>TraceScopedEvent(TraceScopedEvent<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>TraceScopedEvent(TraceScopedEvent<sp/>&amp;&amp;other)<sp/>noexcept</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(begin_,<sp/>other.begin_);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(event_,<sp/>other.event_);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>TraceScopedEvent&amp;<sp/>operator=(TraceScopedEvent<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>TraceScopedEvent&amp;<sp/>operator=(TraceScopedEvent<sp/>&amp;&amp;other)<sp/>noexcept</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(begin_,<sp/>other.begin_);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(event_,<sp/>other.event_);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>~TraceScopedEvent()<sp/>{<sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1ae9d589c131c9fbb66b1a1f32304d661f" kindref="member">end</ref>();<sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1ae9d589c131c9fbb66b1a1f32304d661f" kindref="member">end</ref>()<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event_<sp/>!=<sp/>no_user_event_id)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1ae9d589c131c9fbb66b1a1f32304d661f" kindref="member">end</ref><sp/>=<sp/><ref refid="structvt_1_1trace_1_1_trace_lite_1ad1d8159d645a3b7047ce3f2e0c080f8d" kindref="member">TraceLite::getCurrentTime</ref>();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>theTrace()-&gt;addUserEventBracketed(event_,<sp/>begin_,<sp/>end);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>event_<sp/>=<sp/>no_user_event_id;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>begin_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref><sp/>event_<sp/>=<sp/>no_user_event_id;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TraceScopedNote<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>TraceScopedNote(</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>in_note,<sp/><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>in_event<sp/>=<sp/>no_trace_event</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>)<sp/>:<sp/>begin_(in_event<sp/>!=<sp/>no_trace_event<sp/>?<sp/>TraceLite::<ref refid="namespacevt_1_1timing_1adb71f74fee337dab5a317e58e7d35b1d" kindref="member">getCurrentTime</ref>()<sp/>:<sp/>0),</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>event_(in_event),</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>note_(in_note)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>TraceScopedNote(TraceScopedNote<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>TraceScopedNote(TraceScopedNote<sp/>&amp;&amp;other)<sp/>noexcept</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(begin_,<sp/>other.begin_);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(event_,<sp/>other.event_);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(note_,<sp/>other.note_);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>TraceScopedNote&amp;<sp/>operator=(TraceScopedNote<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>TraceScopedNote&amp;<sp/>operator=(TraceScopedNote<sp/>&amp;&amp;other)<sp/>noexcept</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(begin_,<sp/>other.begin_);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(event_,<sp/>other.event_);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(note_,<sp/>other.note_);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>~TraceScopedNote()<sp/>{<sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1ae9d589c131c9fbb66b1a1f32304d661f" kindref="member">end</ref>();<sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1ae9d589c131c9fbb66b1a1f32304d661f" kindref="member">end</ref>()<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event_<sp/>!=<sp/>no_user_event_id)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1ae9d589c131c9fbb66b1a1f32304d661f" kindref="member">end</ref><sp/>=<sp/><ref refid="structvt_1_1trace_1_1_trace_lite_1ad1d8159d645a3b7047ce3f2e0c080f8d" kindref="member">TraceLite::getCurrentTime</ref>();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>theTrace()-&gt;addUserBracketedNote(begin_,<sp/>end,<sp/>note_,<sp/>event_);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>event_<sp/>=<sp/>no_user_event_id;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setEvent(<ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>in_event)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>event_<sp/>=<sp/>in_event;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>begin_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref><sp/>event_<sp/>=<sp/>no_trace_event;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>std::string<sp/>note_<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">};</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="structvt_1_1trace_1_1_trace_scoped_note" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1trace_1_1_trace_scoped_note" kindref="compound">TraceScopedNote</ref><sp/>final<sp/>{</highlight></codeline>
<codeline lineno="323" refid="structvt_1_1trace_1_1_trace_scoped_note_1ab7dda5555f9118355f6cc77f7b3cdec8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_note_1ab7dda5555f9118355f6cc77f7b3cdec8" kindref="member">TraceScopedNote</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>no_trace_event)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="structvt_1_1trace_1_1_trace_scoped_note_1abfffe38b863ed36f508a3aecef7c094b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_note_1abfffe38b863ed36f508a3aecef7c094b" kindref="member">end</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="326" refid="structvt_1_1trace_1_1_trace_scoped_note_1aebd0afbbbe580b82d5669c8a90a1bc01" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_note_1aebd0afbbbe580b82d5669c8a90a1bc01" kindref="member">setEvent</ref>(<ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>in_event)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal">};</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="structvt_1_1trace_1_1_trace_scoped_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1trace_1_1_trace_scoped_event" kindref="compound">TraceScopedEvent</ref><sp/>final<sp/>{</highlight></codeline>
<codeline lineno="330" refid="structvt_1_1trace_1_1_trace_scoped_event_1a24bcc4470b83bf3e573164bbc71bb995" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_1a24bcc4470b83bf3e573164bbc71bb995" kindref="member">TraceScopedEvent</ref>(<ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref>)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="structvt_1_1trace_1_1_trace_scoped_event_1af1c826007629d7a7ec77070cca809697" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_1af1c826007629d7a7ec77070cca809697" kindref="member">end</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal">};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="structvt_1_1trace_1_1_trace_scoped_event_hash" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash" kindref="compound">TraceScopedEventHash</ref><sp/>final<sp/>{</highlight></codeline>
<codeline lineno="336" refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1a47bf49378624ed567d669457a0cedef0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1a47bf49378624ed567d669457a0cedef0" kindref="member">TraceScopedEventHash</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1ae9d589c131c9fbb66b1a1f32304d661f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1trace_1_1_trace_scoped_event_hash_1ae9d589c131c9fbb66b1a1f32304d661f" kindref="member">end</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal">};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">}}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::trace<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_VT_TRACE_TRACE_USER_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/vt/trace/trace_user.h"/>
  </compounddef>
</doxygen>
