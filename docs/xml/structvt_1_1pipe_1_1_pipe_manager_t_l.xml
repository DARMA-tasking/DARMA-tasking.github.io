<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1pipe_1_1_pipe_manager_t_l" kind="struct" language="C++" prot="public">
    <compoundname>vt::pipe::PipeManagerTL</compoundname>
    <basecompoundref refid="structvt_1_1pipe_1_1_pipe_manager_base" prot="public" virt="virtual">vt::pipe::PipeManagerBase</basecompoundref>
    <derivedcompoundref refid="structvt_1_1pipe_1_1_pipe_manager" prot="public" virt="non-virtual">vt::pipe::PipeManager</derivedcompoundref>
    <includes refid="pipe__manager__tl_8h" local="no">pipe_manager_tl.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0bf4e2e805b3ce2be9f499e0e39aadfa" prot="public" static="no">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1a1f4b9c5fe895842f49952a29592bc206" kindref="member">vrt::collection::ActiveColTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
        <definition>using vt::pipe::PipeManagerTL::ColHanType =  vrt::collection::ActiveColTypedFnType&lt;MsgT,ColT&gt;</definition>
        <argsstring></argsstring>
        <name>ColHanType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="63" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1abf7ad21be4f3d0db51d643aa8ea959cc" prot="public" static="no">
        <type><ref refid="namespacevt_1_1vrt_1_1collection_1a87925616c03cf4ccc548d33b2fe172ee" kindref="member">vrt::collection::ActiveColMemberTypedFnType</ref>&lt; MsgT, ColT &gt;</type>
        <definition>using vt::pipe::PipeManagerTL::ColMemType =  vrt::collection::ActiveColMemberTypedFnType&lt;MsgT,ColT&gt;</definition>
        <argsstring></argsstring>
        <name>ColMemType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="66" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a1a8a2e05fd84f8ac7b7dda4b64e5abe5" prot="public" static="no">
        <type><ref refid="namespacevt_1_1objgroup_1a979bd9dc714fdacafc4b83f98271bc23" kindref="member">objgroup::ActiveObjType</ref>&lt; MsgT, ObjT &gt;</type>
        <definition>using vt::pipe::PipeManagerTL::ObjMemType =  objgroup::ActiveObjType&lt;MsgT,ObjT&gt;</definition>
        <argsstring></argsstring>
        <name>ObjMemType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="69" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1af56c58cad882496e35f01227d4da3898" prot="public" static="no">
        <type><ref refid="namespacevt_1a0d58a693bfb96e0ce5d145692a1a1f98" kindref="member">CollectionProxy</ref>&lt; ColT, typename ColT::IndexType &gt;</type>
        <definition>using vt::pipe::PipeManagerTL::ColProxyType =  CollectionProxy&lt;ColT,typename ColT::IndexType&gt;</definition>
        <argsstring></argsstring>
        <name>ColProxyType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="72" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a1cc1d0f1c80a36488f9b5d282e9755d2" prot="public" static="no">
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_raw_base_single" kindref="compound">callback::cbunion::CallbackRawBaseSingle</ref></type>
        <definition>using vt::pipe::PipeManagerTL::CallbackType =  callback::cbunion::CallbackRawBaseSingle</definition>
        <argsstring></argsstring>
        <name>CallbackType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="74" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1af6fc2c17f1729fa06450441b0ee81cb1" prot="public" static="no">
        <type><ref refid="structvt_1_1pipe_1_1callback_1_1cbunion_1_1_callback_typed" kindref="compound">callback::cbunion::CallbackTyped</ref>&lt; MsgT &gt;</type>
        <definition>using vt::pipe::PipeManagerTL::CallbackMsgType =  callback::cbunion::CallbackTyped&lt;MsgT&gt;</definition>
        <argsstring></argsstring>
        <name>CallbackMsgType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="77" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1ac2c474a68a93bbc8e1d86eb99dabf1dc" prot="public" static="no">
        <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt;</type>
        <definition>using vt::pipe::PipeManagerTL::FnType =  ActiveTypedFnType&lt;MsgT&gt;</definition>
        <argsstring></argsstring>
        <name>FnType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="80" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" prot="public" static="no">
        <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1af6fc2c17f1729fa06450441b0ee81cb1" kindref="member">CallbackMsgType</ref>&lt; MsgT &gt;</type>
        <definition>using vt::pipe::PipeManagerTL::DefType =  CallbackMsgType&lt;MsgT&gt;</definition>
        <argsstring></argsstring>
        <name>DefType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="83" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a8d394521df58abfd90c1d81c998f22e3" prot="public" static="no">
        <type><ref refid="namespacevt_1_1pipe_1_1signal_1acbe257d1ae44f20fa9fd9b6ed3057caf" kindref="member">signal::SigVoidType</ref></type>
        <definition>using vt::pipe::PipeManagerTL::V =  signal::SigVoidType</definition>
        <argsstring></argsstring>
        <name>V</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="85" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1aff917693da92fdfb5b275c7cf61e5e8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1ac2c474a68a93bbc8e1d86eb99dabf1dc" kindref="member">FnType</ref>&lt; T &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackSingleSendT</definition>
        <argsstring>(NodeType const &amp;node)</argsstring>
        <name>makeCallbackSingleSendT</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a8776a3e14cce177c3b31aed347177750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1ac2c474a68a93bbc8e1d86eb99dabf1dc" kindref="member">FnType</ref>&lt; T &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackSingleSend</definition>
        <argsstring>(NodeType const &amp;node)</argsstring>
        <name>makeCallbackSingleSend</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a1c5332868e96ae95eaa99bf7d755a6a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1ac2c474a68a93bbc8e1d86eb99dabf1dc" kindref="member">FnType</ref>&lt; T &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackSingleBcast</definition>
        <argsstring>(bool const &amp;inc)</argsstring>
        <name>makeCallbackSingleBcast</name>
        <param>
          <type>bool const &amp;</type>
          <declname>inc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a446f98d0a74d66539a411e1d41caa505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename T</type>
            <defval>typename <ref refid="structvt_1_1util_1_1_functor_extractor" kindref="compound">util::FunctorExtractor</ref>&lt;FunctorT&gt;::MessageType</defval>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackFunctorSend</definition>
        <argsstring>(NodeType const &amp;node)</argsstring>
        <name>makeCallbackFunctorSend</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1ac5ba44c5897bd1ecfb6f360f5da0a703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename T</type>
            <defval>typename <ref refid="structvt_1_1util_1_1_functor_extractor" kindref="compound">util::FunctorExtractor</ref>&lt;FunctorT&gt;::MessageType</defval>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackFunctorBcast</definition>
        <argsstring>(bool const &amp;inc)</argsstring>
        <name>makeCallbackFunctorBcast</name>
        <param>
          <type>bool const &amp;</type>
          <declname>inc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1ac2c128da30637e0672086df5abea84a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;<ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a8d394521df58abfd90c1d81c998f22e3" kindref="member">V</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackFunctorSendVoid</definition>
        <argsstring>(NodeType const &amp;node)</argsstring>
        <name>makeCallbackFunctorSendVoid</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1af52b65bf8c8ded91ac833b77b3c3c50e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;<ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a8d394521df58abfd90c1d81c998f22e3" kindref="member">V</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackFunctorBcastVoid</definition>
        <argsstring>(bool const &amp;inc)</argsstring>
        <name>makeCallbackFunctorBcastVoid</name>
        <param>
          <type>bool const &amp;</type>
          <declname>inc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1ac266833a39ac44ecb5e25af77b55723c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;<ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a8d394521df58abfd90c1d81c998f22e3" kindref="member">V</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackSingleAnonVoid</definition>
        <argsstring>(FuncVoidType fn)</argsstring>
        <name>makeCallbackSingleAnonVoid</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_base_1acd6f0c71f38f08d53f85e83b65406d77" kindref="member">FuncVoidType</ref></type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1ab34ea3692c443b16199848802aa2dd8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackSingleAnon</definition>
        <argsstring>(FuncMsgType&lt; T &gt; fn)</argsstring>
        <name>makeCallbackSingleAnon</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_base_1aa54eee64ab32a27777a672d49eb861f4" kindref="member">FuncMsgType</ref>&lt; T &gt;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5841de52fc4e59bd5ac844c0d51487e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackSingleAnon</definition>
        <argsstring>(U *u, FuncMsgCtxType&lt; T, U &gt; fn)</argsstring>
        <name>makeCallbackSingleAnon</name>
        <param>
          <type>U *</type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_base_1a73fdf82ece0411b3dc644c99b763f7a9" kindref="member">FuncMsgCtxType</ref>&lt; T, U &gt;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1aaf15f3c5311092b8237901353ac4be9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;<ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a8d394521df58abfd90c1d81c998f22e3" kindref="member">V</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackSingleAnon</definition>
        <argsstring>(U *u, FuncCtxType&lt; U &gt; fn)</argsstring>
        <name>makeCallbackSingleAnon</name>
        <param>
          <type>U *</type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_base_1ad8463823b6b4cfdb67c119d6d22e3bac" kindref="member">FuncCtxType</ref>&lt; U &gt;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a2c8c3a5aca22b2526fe68dd543a8a888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0bf4e2e805b3ce2be9f499e0e39aadfa" kindref="member">ColHanType</ref>&lt; ColT, T &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackSingleProxySend</definition>
        <argsstring>(typename ColT::ProxyType proxy)</argsstring>
        <name>makeCallbackSingleProxySend</name>
        <param>
          <type>typename ColT::ProxyType</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a2c8c3a5aca22b2526fe68dd543a8a888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1abf7ad21be4f3d0db51d643aa8ea959cc" kindref="member">ColMemType</ref>&lt; ColT, T &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackSingleProxySend</definition>
        <argsstring>(typename ColT::ProxyType proxy)</argsstring>
        <name>makeCallbackSingleProxySend</name>
        <param>
          <type>typename ColT::ProxyType</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a98f92fd3f75e48766b55c7b7253c19b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a1a8a2e05fd84f8ac7b7dda4b64e5abe5" kindref="member">ObjMemType</ref>&lt; ObjT, T &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackObjGrpSend</definition>
        <argsstring>(objgroup::proxy::ProxyElm&lt; ObjT &gt; proxy)</argsstring>
        <name>makeCallbackObjGrpSend</name>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_elm" kindref="compound">objgroup::proxy::ProxyElm</ref>&lt; ObjT &gt;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a8a4da1e38acd018f847aa9fddae44956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a1a8a2e05fd84f8ac7b7dda4b64e5abe5" kindref="member">ObjMemType</ref>&lt; ObjT, T &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackObjGrpBcast</definition>
        <argsstring>(objgroup::proxy::Proxy&lt; ObjT &gt; proxy)</argsstring>
        <name>makeCallbackObjGrpBcast</name>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">objgroup::proxy::Proxy</ref>&lt; ObjT &gt;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0f66ce82b544151cbdec67a13a6ead34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0bf4e2e805b3ce2be9f499e0e39aadfa" kindref="member">ColHanType</ref>&lt; ColT, T &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackSingleProxyBcast</definition>
        <argsstring>(ColProxyType&lt; ColT &gt; proxy)</argsstring>
        <name>makeCallbackSingleProxyBcast</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1af56c58cad882496e35f01227d4da3898" kindref="member">ColProxyType</ref>&lt; ColT &gt;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1aff70024da9ee15ef2c935ca21d18a80d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0bf4e2e805b3ce2be9f499e0e39aadfa" kindref="member">ColHanType</ref>&lt; ColT, T &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackSingleProxyBcastDirect</definition>
        <argsstring>(ColProxyType&lt; ColT &gt; proxy)</argsstring>
        <name>makeCallbackSingleProxyBcastDirect</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1af56c58cad882496e35f01227d4da3898" kindref="member">ColProxyType</ref>&lt; ColT &gt;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1aff70024da9ee15ef2c935ca21d18a80d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1abf7ad21be4f3d0db51d643aa8ea959cc" kindref="member">ColMemType</ref>&lt; ColT, T &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>CbkT</type>
        <definition>CbkT vt::pipe::PipeManagerTL::makeCallbackSingleProxyBcastDirect</definition>
        <argsstring>(ColProxyType&lt; ColT &gt; proxy)</argsstring>
        <name>makeCallbackSingleProxyBcastDirect</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1af56c58cad882496e35f01227d4da3898" kindref="member">ColProxyType</ref>&lt; ColT &gt;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1aff965bd75d398d45ad11d33feeb7a7c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a1cc1d0f1c80a36488f9b5d282e9755d2" kindref="member">CallbackType</ref></type>
        <definition>PipeManagerTL::CallbackType vt::pipe::PipeManagerTL::makeCallback</definition>
        <argsstring>()</argsstring>
        <name>makeCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="181" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="74" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a9644742f82b43a851e8a20755302a2e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1af6fc2c17f1729fa06450441b0ee81cb1" kindref="member">CallbackMsgType</ref>&lt; T &gt;</type>
        <definition>PipeManagerTL::CallbackMsgType&lt; T &gt; vt::pipe::PipeManagerTL::makeCallbackTyped</definition>
        <argsstring>()</argsstring>
        <name>makeCallbackTyped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="184" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a379d983dfbf654ed01281d96148175f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; T &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::PipeManagerTL::addListener</definition>
        <argsstring>(CbkT const &amp;cb, NodeType const &amp;node)</argsstring>
        <name>addListener</name>
        <param>
          <type>CbkT const &amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1abf50654cc9c8823790a0bb8fe0d0024f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; T &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::PipeManagerTL::addListenerBcast</definition>
        <argsstring>(CbkT const &amp;cb, bool const &amp;inc)</argsstring>
        <name>addListenerBcast</name>
        <param>
          <type>CbkT const &amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>inc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1abc9236c8ff7a657b1b04fd7604d616b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename T</type>
            <defval>typename <ref refid="structvt_1_1util_1_1_functor_extractor" kindref="compound">util::FunctorExtractor</ref>&lt;FunctorT&gt;::MessageType</defval>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::PipeManagerTL::addListenerFunctor</definition>
        <argsstring>(CbkT const &amp;cb, NodeType const &amp;node)</argsstring>
        <name>addListenerFunctor</name>
        <param>
          <type>CbkT const &amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a12cd5abf9d9a082369419a5cc5b7b0f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;<ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a8d394521df58abfd90c1d81c998f22e3" kindref="member">V</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::PipeManagerTL::addListenerFunctorVoid</definition>
        <argsstring>(CbkT const &amp;cb, NodeType const &amp;node)</argsstring>
        <name>addListenerFunctorVoid</name>
        <param>
          <type>CbkT const &amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a508e6625e15b9315a24af97670468802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename T</type>
            <defval>typename <ref refid="structvt_1_1util_1_1_functor_extractor" kindref="compound">util::FunctorExtractor</ref>&lt;FunctorT&gt;::MessageType</defval>
          </param>
          <param>
            <type>typename CbkT</type>
            <defval><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" kindref="member">DefType</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::PipeManagerTL::addListenerFunctorBcast</definition>
        <argsstring>(CbkT const &amp;cb, bool const &amp;inc)</argsstring>
        <name>addListenerFunctorBcast</name>
        <param>
          <type>CbkT const &amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>inc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1ae1aee468ba813cc359e3d3602722b161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::PipeManagerTL::addListener</definition>
        <argsstring>(CallbackT const &amp;cb, NodeType const &amp;node)</argsstring>
        <name>addListener</name>
        <param>
          <type>CallbackT const &amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="90" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a371e41dfb29c097dcf45fa2ae91cbf02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::PipeManagerTL::addListenerBcast</definition>
        <argsstring>(CallbackT const &amp;cb, bool const &amp;inc)</argsstring>
        <name>addListenerBcast</name>
        <param>
          <type>CallbackT const &amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>inc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="98" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1aca69c630748b177c01af61b39ffad0ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::PipeManagerTL::addListenerFunctor</definition>
        <argsstring>(CallbackT const &amp;cb, NodeType const &amp;node)</argsstring>
        <name>addListenerFunctor</name>
        <param>
          <type>CallbackT const &amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="106" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="106" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a12039964ec1deb173f0ee83ad4c8a543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::PipeManagerTL::addListenerFunctorVoid</definition>
        <argsstring>(CallbackT const &amp;cb, NodeType const &amp;node)</argsstring>
        <name>addListenerFunctorVoid</name>
        <param>
          <type>CallbackT const &amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="117" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="117" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0afd65bacbf65155b3ad095c32aa1038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::pipe::PipeManagerTL::addListenerFunctorBcast</definition>
        <argsstring>(CallbackT const &amp;cb, bool const &amp;inc)</argsstring>
        <name>addListenerFunctorBcast</name>
        <param>
          <type>CallbackT const &amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>inc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="129" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="129" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0da1b385495f0a625754f17db45a4066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0bf4e2e805b3ce2be9f499e0e39aadfa" kindref="member">PipeManagerTL::ColHanType</ref>&lt; ColT, MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackSingleProxySend</definition>
        <argsstring>(typename ColT::ProxyType proxy)</argsstring>
        <name>makeCallbackSingleProxySend</name>
        <param>
          <type>typename ColT::ProxyType</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="144" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="144" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a304681fe59bec2e1ad28a357f48aeab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a1a8a2e05fd84f8ac7b7dda4b64e5abe5" kindref="member">PipeManagerTL::ObjMemType</ref>&lt; ObjT, MsgT &gt;</type>
            <declname>fn</declname>
            <defname>fn</defname>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackObjGrpSend</definition>
        <argsstring>(objgroup::proxy::ProxyElm&lt; ObjT &gt; proxy)</argsstring>
        <name>makeCallbackObjGrpSend</name>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_elm" kindref="compound">objgroup::proxy::ProxyElm</ref>&lt; ObjT &gt;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="193" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="193" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a9caf63b8c6577acd4884933c1b9cc886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a1a8a2e05fd84f8ac7b7dda4b64e5abe5" kindref="member">PipeManagerTL::ObjMemType</ref>&lt; ObjT, MsgT &gt;</type>
            <declname>fn</declname>
            <defname>fn</defname>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackObjGrpBcast</definition>
        <argsstring>(objgroup::proxy::Proxy&lt; ObjT &gt; proxy)</argsstring>
        <name>makeCallbackObjGrpBcast</name>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">objgroup::proxy::Proxy</ref>&lt; ObjT &gt;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="214" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="214" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1aff5140772699150c68dc912017e3a670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0bf4e2e805b3ce2be9f499e0e39aadfa" kindref="member">PipeManagerTL::ColHanType</ref>&lt; ColT, MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackSingleProxyBcast</definition>
        <argsstring>(ColProxyType&lt; ColT &gt; proxy)</argsstring>
        <name>makeCallbackSingleProxyBcast</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1af56c58cad882496e35f01227d4da3898" kindref="member">ColProxyType</ref>&lt; ColT &gt;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="236" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="236" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a41fec001a4e698cb2bac888a6a48d606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0bf4e2e805b3ce2be9f499e0e39aadfa" kindref="member">PipeManagerTL::ColHanType</ref>&lt; ColT, MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackSingleProxyBcastDirect</definition>
        <argsstring>(ColProxyType&lt; ColT &gt; proxy)</argsstring>
        <name>makeCallbackSingleProxyBcastDirect</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1af56c58cad882496e35f01227d4da3898" kindref="member">ColProxyType</ref>&lt; ColT &gt;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="258" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="258" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1ab160500f39018d96e56743095a1869e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackSingleSend</definition>
        <argsstring>(NodeType const &amp;send_to_node)</argsstring>
        <name>makeCallbackSingleSend</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>send_to_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="312" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="312" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1ac4d276c82d9f04628263ffd07841fdcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackSingleSendT</definition>
        <argsstring>(NodeType const &amp;send_to_node)</argsstring>
        <name>makeCallbackSingleSendT</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>send_to_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="323" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="323" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a833e03e949cc04c1a801780eb71fd7e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackSingleBcast</definition>
        <argsstring>(bool const &amp;inc)</argsstring>
        <name>makeCallbackSingleBcast</name>
        <param>
          <type>bool const &amp;</type>
          <declname>inc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="334" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="334" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a63c4743a384180c7276afc95302364e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackSingleAnonVoid</definition>
        <argsstring>(FuncVoidType fn)</argsstring>
        <name>makeCallbackSingleAnonVoid</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_base_1acd6f0c71f38f08d53f85e83b65406d77" kindref="member">FuncVoidType</ref></type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="345" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="345" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1ae75afb01250ca2dcb98edc05b4aca57d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename C</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackSingleAnon</definition>
        <argsstring>(C *ctx, FuncCtxType&lt; C &gt; fn)</argsstring>
        <name>makeCallbackSingleAnon</name>
        <param>
          <type>C *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_base_1ad8463823b6b4cfdb67c119d6d22e3bac" kindref="member">FuncCtxType</ref>&lt; C &gt;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="360" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="360" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f29e3456069847eddd1b64bcecca2f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename C</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackSingleAnon</definition>
        <argsstring>(C *ctx, FuncMsgCtxType&lt; MsgT, C &gt; fn)</argsstring>
        <name>makeCallbackSingleAnon</name>
        <param>
          <type>C *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_base_1a73fdf82ece0411b3dc644c99b763f7a9" kindref="member">FuncMsgCtxType</ref>&lt; MsgT, C &gt;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="373" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="373" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a49d1f142e82be5584fa5b9e5ccf85272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackSingleAnon</definition>
        <argsstring>(FuncMsgType&lt; MsgT &gt; fn)</argsstring>
        <name>makeCallbackSingleAnon</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_manager_base_1aa54eee64ab32a27777a672d49eb861f4" kindref="member">FuncMsgType</ref>&lt; MsgT &gt;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="386" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="386" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a2e9eb336fb5e2f6927b64068411ff2c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackFunctorSend</definition>
        <argsstring>(NodeType const &amp;send_to_node)</argsstring>
        <name>makeCallbackFunctorSend</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>send_to_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="401" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="401" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1abb18372fac34782285cdb5d84f4ab449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackFunctorBcast</definition>
        <argsstring>(bool const &amp;inc)</argsstring>
        <name>makeCallbackFunctorBcast</name>
        <param>
          <type>bool const &amp;</type>
          <declname>inc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="414" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="414" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1a71bfb005f664ca5f0f6935afbcdb17de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackFunctorSendVoid</definition>
        <argsstring>(NodeType const &amp;send_to_node)</argsstring>
        <name>makeCallbackFunctorSendVoid</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>send_to_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="427" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="427" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_manager_t_l_1abca9b24d9d37eb7b3ca6bb3c62160889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename CallbackT</type>
          </param>
        </templateparamlist>
        <type>CallbackT</type>
        <definition>CallbackT vt::pipe::PipeManagerTL::makeCallbackFunctorBcastVoid</definition>
        <argsstring>(bool const &amp;inc)</argsstring>
        <name>makeCallbackFunctorBcastVoid</name>
        <param>
          <type>bool const &amp;</type>
          <declname>inc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/pipe_manager_tl.impl.h" line="438" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.impl.h" bodystart="438" bodyend="445"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2218">
        <label>vt::pipe::PipeManager</label>
        <link refid="structvt_1_1pipe_1_1_pipe_manager"/>
        <childnode refid="2216" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2216">
        <label>vt::pipe::PipeManagerTL</label>
        <link refid="structvt_1_1pipe_1_1_pipe_manager_t_l"/>
        <childnode refid="2217" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2217">
        <label>vt::pipe::PipeManagerBase</label>
        <link refid="structvt_1_1pipe_1_1_pipe_manager_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2219">
        <label>vt::pipe::PipeManagerTL</label>
        <link refid="structvt_1_1pipe_1_1_pipe_manager_t_l"/>
        <childnode refid="2220" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2220">
        <label>vt::pipe::PipeManagerBase</label>
        <link refid="structvt_1_1pipe_1_1_pipe_manager_base"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/pipe/pipe_manager_tl.h" line="61" column="1" bodyfile="src/vt/pipe/pipe_manager_tl.h" bodystart="61" bodyend="208"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a379d983dfbf654ed01281d96148175f3" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>addListener</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1ae1aee468ba813cc359e3d3602722b161" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>addListener</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1aa878aef84540ec6c2ca89096683d407e" prot="public" virt="non-virtual" ambiguityscope="vt::pipe::PipeManagerBase::"><scope>vt::pipe::PipeManagerTL</scope><name>addListener</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1aee28bc7a33e3a0b796aa8fcdd6f72bd9" prot="protected" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>addListenerAny</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1abf50654cc9c8823790a0bb8fe0d0024f" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>addListenerBcast</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a371e41dfb29c097dcf45fa2ae91cbf02" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>addListenerBcast</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1abc9236c8ff7a657b1b04fd7604d616b9" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>addListenerFunctor</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1aca69c630748b177c01af61b39ffad0ec" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>addListenerFunctor</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a508e6625e15b9315a24af97670468802" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>addListenerFunctorBcast</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0afd65bacbf65155b3ad095c32aa1038" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>addListenerFunctorBcast</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a12cd5abf9d9a082369419a5cc5b7b0f8" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>addListenerFunctorVoid</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a12039964ec1deb173f0ee83ad4c8a543" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>addListenerFunctorVoid</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1ae486f94f76733fd3d97ff393c35d0e5e" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>addListenerVoid</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1af6fc2c17f1729fa06450441b0ee81cb1" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>CallbackMsgType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a1cc1d0f1c80a36488f9b5d282e9755d2" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>CallbackType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0bf4e2e805b3ce2be9f499e0e39aadfa" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>ColHanType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1abf7ad21be4f3d0db51d643aa8ea959cc" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>ColMemType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1af56c58cad882496e35f01227d4da3898" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>ColProxyType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f78dde989930cf645a8bd67301740a7" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>DefType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a983e301505317c5ba2041461e7dec84a" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>DispatchFuncType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1ac2c474a68a93bbc8e1d86eb99dabf1dc" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>FnType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1ad8463823b6b4cfdb67c119d6d22e3bac" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>FuncCtxType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a73fdf82ece0411b3dc644c99b763f7a9" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>FuncMsgCtxType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1aa54eee64ab32a27777a672d49eb861f4" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>FuncMsgType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a7ddc75a14fa50cd8521641ef6f9ea78d" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>FuncType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1acd6f0c71f38f08d53f85e83b65406d77" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>FuncVoidType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a27d24548529db938aeeb6fe11af985a1" prot="protected" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>generalSignalTrigger</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1aff965bd75d398d45ad11d33feeb7a7c5" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallback</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a6fec17887d5cae03c513088ccb4ce3db" prot="protected" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackAny</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a7fbd6f5b88e5cca79f8588ea67ce6161" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackFunc</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1ac5ba44c5897bd1ecfb6f360f5da0a703" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackFunctorBcast</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1abb18372fac34782285cdb5d84f4ab449" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackFunctorBcast</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1af52b65bf8c8ded91ac833b77b3c3c50e" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackFunctorBcastVoid</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1abca9b24d9d37eb7b3ca6bb3c62160889" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackFunctorBcastVoid</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a446f98d0a74d66539a411e1d41caa505" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackFunctorSend</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a2e9eb336fb5e2f6927b64068411ff2c8" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackFunctorSend</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1ac2c128da30637e0672086df5abea84a3" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackFunctorSendVoid</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a71bfb005f664ca5f0f6935afbcdb17de" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackFunctorSendVoid</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a20bf85e7494b5d018ed24b052f56fc28" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackFuncVoid</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a8a4da1e38acd018f847aa9fddae44956" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackObjGrpBcast</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a9caf63b8c6577acd4884933c1b9cc886" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackObjGrpBcast</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a98f92fd3f75e48766b55c7b7253c19b4" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackObjGrpSend</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a304681fe59bec2e1ad28a357f48aeab3" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackObjGrpSend</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1ab34ea3692c443b16199848802aa2dd8c" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleAnon</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5841de52fc4e59bd5ac844c0d51487e9" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleAnon</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1aaf15f3c5311092b8237901353ac4be9b" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleAnon</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1ae75afb01250ca2dcb98edc05b4aca57d" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleAnon</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a5f29e3456069847eddd1b64bcecca2f2" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleAnon</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a49d1f142e82be5584fa5b9e5ccf85272" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleAnon</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1ac266833a39ac44ecb5e25af77b55723c" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleAnonVoid</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a63c4743a384180c7276afc95302364e6" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleAnonVoid</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a1c5332868e96ae95eaa99bf7d755a6a1" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleBcast</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a833e03e949cc04c1a801780eb71fd7e1" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleBcast</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0f66ce82b544151cbdec67a13a6ead34" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleProxyBcast</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1aff5140772699150c68dc912017e3a670" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleProxyBcast</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1aff70024da9ee15ef2c935ca21d18a80d" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleProxyBcastDirect</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1aff70024da9ee15ef2c935ca21d18a80d" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleProxyBcastDirect</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a41fec001a4e698cb2bac888a6a48d606" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleProxyBcastDirect</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a2c8c3a5aca22b2526fe68dd543a8a888" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleProxySend</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a2c8c3a5aca22b2526fe68dd543a8a888" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleProxySend</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a0da1b385495f0a625754f17db45a4066" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleProxySend</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a8776a3e14cce177c3b31aed347177750" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleSend</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1ab160500f39018d96e56743095a1869e8" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleSend</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1aff917693da92fdfb5b275c7cf61e5e8b" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleSendT</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1ac4d276c82d9f04628263ffd07841fdcf" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackSingleSendT</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a9644742f82b43a851e8a20755302a2e0" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makeCallbackTyped</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1af1ba11407837cb69b4d205dd7ba880b0" prot="protected" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>makePipeID</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a458f8135ed2a44ec51afb21676c5db50" prot="protected" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>newPipeState</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a1a8a2e05fd84f8ac7b7dda4b64e5abe5" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>ObjMemType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a6b3b1e6d6bfe21308090d2dc62743961" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>PipeManagerBase</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a1364798bda487c9fb04879599f96c507" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>PipeStateType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a27f1aea903f8e05655eb84ae1474c729" prot="protected" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>registerCallback</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1acae150f3cb2f27a84f39186ad4dd1a37" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>triggerCallbackHan</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a56855a2a2c55decbb79971f51fb9dcce" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>triggerCallbackMsgHan</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a32f82a02196fe42e98ae3b628b73ae6d" prot="protected" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>triggerPipe</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1a34492ef027a92525ca5acc4e86b360ce" prot="protected" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>triggerPipeTyped</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1ad21185d07e9c3a0206d3d5a791f668a3" prot="protected" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>triggerPipeUnknown</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_t_l_1a8d394521df58abfd90c1d81c998f22e3" prot="public" virt="non-virtual"><scope>vt::pipe::PipeManagerTL</scope><name>V</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_manager_base_1af7b66141f69a485c6fce5e02bbbd3f89" prot="public" virt="virtual"><scope>vt::pipe::PipeManagerTL</scope><name>~PipeManagerBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
