<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="trace" kind="page">
    <compoundname>trace</compoundname>
    <title>Tracing</title>
    <detaileddescription>
<para>Trace distributed events</para><para>The optional trace component <computeroutput><ref refid="structvt_1_1trace_1_1_trace" kindref="compound">vt::trace::Trace</ref></computeroutput>, accessed via <computeroutput>vt::theTrace()</computeroutput> builds a distributed trace of events, including VT handlers, user events, and MPI invocations via the PMPI interface. It outputs <ulink url="http://charm.cs.uiuc.edu/software">Projections</ulink> log and sts files to enable performance analysis after execution.</para><para>To enable tracing at runtime, the trace component must be enabled at compile time with cmake. To enable tracing pass the cmake flag: <programlisting><codeline><highlight class="normal">-Dvt_trace_enabled=1</highlight></codeline>
</programlisting></para><sect1 id="trace_1tracing-spec-file">
<title>Tracing Specification File</title>
<para>In order to customize when tracing is enabled and disabled, a trace specification file can be passed to <bold><emphasis>vt</emphasis></bold> via a command-line flag: <computeroutput>--vt_trace_spec --vt_trace_spec_file=filename.spec</computeroutput>.</para><para>For details about vt&apos;s Specification File see <ref refid="spec-file" kindref="compound">Spec File</ref></para></sect1>
<sect1 id="trace_1incremental-tracing">
<title>Incremental Trace Output</title>
<para>The trace events can be configured to be saved to the file in the incremental matter. To configure the interval of the flushes use the <computeroutput>--vt_trace_flush_size=X</computeroutput> parameter. The <computeroutput>X</computeroutput> stands for the number of trace events before the next flush.</para><para><simplesect kind="note"><para>The incremental flushing will be blocked in the case of an incomplete user note. In that scenario there will be no output to the files. All trace events will be kept in memory and will be tried to be flushed on the next interval if the incomplete notes were closed. </para></simplesect>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
