<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1rdma_1_1_holder" kind="struct" language="C++" prot="public">
    <compoundname>vt::rdma::Holder</compoundname>
    <includes refid="rdmahandle_2holder_8h" local="no">holder.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type><ref refid="namespacevt_1_1rdma_1a0234ff19cfb3c04718cfdfd36b2d6d88" kindref="member">HandleEnum</ref></type>
        <declname>E</declname>
        <defname>E</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1rdma_1_1_holder_1a1fd6b9bc3f72bb2b64e602de3982929d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct Manager</definition>
        <argsstring></argsstring>
        <name>Manager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="67" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_holder_1a32fc545bf53fbbd4002369112e5f02e0" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1rdma_1_1_handle_key" kindref="compound">HandleKey</ref></type>
        <definition>HandleKey vt::rdma::Holder&lt; T, E &gt;::key_</definition>
        <argsstring></argsstring>
        <name>key_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="118" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_holder_1a05f6eae32db15a58ef6cced25fde7980" prot="private" static="no" mutable="no">
        <type>MPI_Win</type>
        <definition>MPI_Win vt::rdma::Holder&lt; T, E &gt;::data_window_</definition>
        <argsstring></argsstring>
        <name>data_window_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="119" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_holder_1adfcf34183c7325a69e1ac6f550c471f1" prot="private" static="no" mutable="no">
        <type>MPI_Win</type>
        <definition>MPI_Win vt::rdma::Holder&lt; T, E &gt;::control_window_</definition>
        <argsstring></argsstring>
        <name>control_window_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="120" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_holder_1a347938e7cc24c482672fc73ed7be9406" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* vt::rdma::Holder&lt; T, E &gt;::data_base_</definition>
        <argsstring></argsstring>
        <name>data_base_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="121" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_holder_1a4f9ee10b09fb58524ac3659f180a4a96" prot="private" static="no" mutable="no">
        <type>uint64_t *</type>
        <definition>uint64_t* vt::rdma::Holder&lt; T, E &gt;::control_base_</definition>
        <argsstring></argsstring>
        <name>control_base_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="122" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_holder_1adba61a40f9dd80d86ac7d0d82d415923" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::rdma::Holder&lt; T, E &gt;::count_</definition>
        <argsstring></argsstring>
        <name>count_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="123" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_holder_1ad61ee11705da8cf0ba8664b3173e7370" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::rdma::Holder&lt; T, E &gt;::ready_</definition>
        <argsstring></argsstring>
        <name>ready_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="124" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_holder_1aecfc6828df1f361fa24e2780b07b6d56" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::rdma::Holder&lt; T, E &gt;::mpi2_</definition>
        <argsstring></argsstring>
        <name>mpi2_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="125" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_holder_1a6c137c841a55e053778597860c6761e8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::rdma::Holder&lt; T, E &gt;::uniform_size_</definition>
        <argsstring></argsstring>
        <name>uniform_size_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="126" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_holder_1a0995b9b9adfce492d7d3dead1ed8ac7a" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1rdma_1_1_handle" kindref="compound">Handle</ref>&lt; T, E &gt;</type>
        <definition>Handle&lt;T,E&gt; vt::rdma::Holder&lt; T, E &gt;::handle_</definition>
        <argsstring></argsstring>
        <name>handle_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="127" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1aa0d947b72bd66a1a0507062f3dffd590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::rdma::Holder&lt; T, E &gt;::Holder</definition>
        <argsstring>()=default</argsstring>
        <name>Holder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1a61b649c8c420b9f2f6310d752bdef79c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::rdma::Holder&lt; T, E &gt;::ready</definition>
        <argsstring>() const</argsstring>
        <name>ready</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="65" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1a31433de5996d42f49a16fe0f05bd51cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structvt_1_1rdma_1_1_lock_m_p_i" kindref="compound">LockMPI</ref> &gt;</type>
        <definition>std::shared_ptr&lt; LockMPI &gt; vt::rdma::Holder&lt; T, E &gt;::lock</definition>
        <argsstring>(Lock l, vt::NodeType node)</argsstring>
        <name>lock</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="78" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1afe6dd03862a68f941a44258aac9ef03d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::Holder&lt; T, E &gt;::deallocate</definition>
        <argsstring>()</argsstring>
        <name>deallocate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="81" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="118" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1a352b9ae14f0f60cee7df78231d2debfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callable</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::rdma::Holder&lt; T, E &gt;::access</definition>
        <argsstring>(Lock l, Callable fn, std::size_t offset)</argsstring>
        <name>access</name>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>Callable</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="84" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1a13c46ec783f1df901cfd7db7f65e0e85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::rdma::Holder&lt; T, E &gt;::getCount</definition>
        <argsstring>(vt::NodeType node, Lock l=Lock::Shared)</argsstring>
        <name>getCount</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref></type>
          <declname>l</declname>
          <defval><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70aa6156ea9d66fef24e87e841fbabf7cca" kindref="member">Lock::Shared</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="86" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="102" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1abca462aa3e98d1c0fb4852743eaed04a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1rdma_1_1_request_holder" kindref="compound">RequestHolder</ref></type>
        <definition>RequestHolder vt::rdma::Holder&lt; T, E &gt;::rget</definition>
        <argsstring>(vt::NodeType node, Lock l, T *ptr, std::size_t len, int offset)</argsstring>
        <name>rget</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="88" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="144" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1a065715e0c91be9b411b490b740fc064a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::Holder&lt; T, E &gt;::get</definition>
        <argsstring>(vt::NodeType node, Lock l, T *ptr, std::size_t len, int offset)</argsstring>
        <name>get</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="91" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="173" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1ae3f9105ec3abe794bd39f24ef55f1c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1rdma_1_1_request_holder" kindref="compound">RequestHolder</ref></type>
        <definition>RequestHolder vt::rdma::Holder&lt; T, E &gt;::rput</definition>
        <argsstring>(vt::NodeType node, Lock l, T *ptr, std::size_t len, int offset)</argsstring>
        <name>rput</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="93" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="180" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1ad6edaae632bb4025e8d29f27abfcf81c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::Holder&lt; T, E &gt;::put</definition>
        <argsstring>(vt::NodeType node, Lock l, T *ptr, std::size_t len, int offset)</argsstring>
        <name>put</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="96" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="209" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1a1d1abbaaad0d2490b01b10493fe78e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1rdma_1_1_request_holder" kindref="compound">RequestHolder</ref></type>
        <definition>RequestHolder vt::rdma::Holder&lt; T, E &gt;::raccum</definition>
        <argsstring>(vt::NodeType node, Lock l, T *ptr, std::size_t len, int offset, MPI_Op op)</argsstring>
        <name>raccum</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>MPI_Op</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="98" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="233" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1affd535937b2b5e3bd243e4cae43d779e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::Holder&lt; T, E &gt;::accum</definition>
        <argsstring>(vt::NodeType node, Lock l, T *ptr, std::size_t len, int offset, MPI_Op op)</argsstring>
        <name>accum</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>MPI_Op</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="102" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="267" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1a21514973be4a2a9107be043fe727d9f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T vt::rdma::Holder&lt; T, E &gt;::fetchOp</definition>
        <argsstring>(vt::NodeType node, Lock l, T ptr, int offset, MPI_Op op)</argsstring>
        <name>fetchOp</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>T</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>MPI_Op</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="107" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="216" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1ae0131450f2f087c80faa444810aa25ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::Holder&lt; T, E &gt;::fence</definition>
        <argsstring>(int assert=0)</argsstring>
        <name>fence</name>
        <param>
          <type>int</type>
          <declname>assert</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="109" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1a85d338b1beb4c041aa477b18c4eaa312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::Holder&lt; T, E &gt;::sync</definition>
        <argsstring>()</argsstring>
        <name>sync</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="110" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="280" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1af2bb524d70bdaa0eaad2a394c0e9b633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::Holder&lt; T, E &gt;::flush</definition>
        <argsstring>(vt::NodeType node)</argsstring>
        <name>flush</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="111" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="285" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1a4b576d334034884d7c72b89310fd4f57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::Holder&lt; T, E &gt;::flushLocal</definition>
        <argsstring>(vt::NodeType node)</argsstring>
        <name>flushLocal</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="112" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="290" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1a667a140d3db4f68da8af0f9d6533a88a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::Holder&lt; T, E &gt;::flushAll</definition>
        <argsstring>()</argsstring>
        <name>flushAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="113" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="295" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1af5a5f41fb16fbf8ee0f7f1b51120cb65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::rdma::Holder&lt; T, E &gt;::isUniform</definition>
        <argsstring>() const</argsstring>
        <name>isUniform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="115" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="115" bodyend="115"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1ab5feb3bca7aad2b37c7249f3abf7ab05" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ProxyT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::rdma::Holder&lt; T, E &gt;::addHandle</definition>
        <argsstring>(HandleKey key, ElemType lin, Handle&lt; T, E &gt; han, std::size_t size, bool uniform_size)</argsstring>
        <name>addHandle</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_key" kindref="compound">HandleKey</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1a38e310504e675aa1bcaf7811019b0df2" kindref="member">ElemType</ref></type>
          <declname>lin</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle" kindref="compound">Handle</ref>&lt; T, E &gt;</type>
          <declname>han</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>uniform_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="71" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_holder_1a7dc5e735fb6f919dabec8e118683b4ae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::Holder&lt; T, E &gt;::allocateDataWindow</definition>
        <argsstring>(std::size_t const in_len=0)</argsstring>
        <name>allocateDataWindow</name>
        <param>
          <type>std::size_t const</type>
          <declname>in_len</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/holder.h" line="75" column="1" bodyfile="src/vt/rdmahandle/holder.impl.h" bodystart="66" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1725">
        <label>vt::rdma::Holder&lt; T, E &gt;</label>
        <link refid="structvt_1_1rdma_1_1_holder"/>
        <childnode refid="1726" relation="usage">
          <edgelabel>key_</edgelabel>
        </childnode>
        <childnode refid="1727" relation="usage">
          <edgelabel>handle_</edgelabel>
        </childnode>
      </node>
      <node id="1726">
        <label>vt::rdma::HandleKey</label>
        <link refid="structvt_1_1rdma_1_1_handle_key"/>
      </node>
      <node id="1727">
        <label>vt::rdma::Handle&lt; T, E &gt;</label>
        <link refid="structvt_1_1rdma_1_1_handle"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/rdmahandle/holder.h" line="62" column="1" bodyfile="src/vt/rdmahandle/holder.h" bodystart="62" bodyend="128"/>
    <listofallmembers>
      <member refid="structvt_1_1rdma_1_1_holder_1a352b9ae14f0f60cee7df78231d2debfe" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>access</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1affd535937b2b5e3bd243e4cae43d779e" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>accum</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1ab5feb3bca7aad2b37c7249f3abf7ab05" prot="private" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>addHandle</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a7dc5e735fb6f919dabec8e118683b4ae" prot="private" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>allocateDataWindow</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a4f9ee10b09fb58524ac3659f180a4a96" prot="private" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>control_base_</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1adfcf34183c7325a69e1ac6f550c471f1" prot="private" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>control_window_</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1adba61a40f9dd80d86ac7d0d82d415923" prot="private" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>count_</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a347938e7cc24c482672fc73ed7be9406" prot="private" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>data_base_</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a05f6eae32db15a58ef6cced25fde7980" prot="private" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>data_window_</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1afe6dd03862a68f941a44258aac9ef03d" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>deallocate</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1ae0131450f2f087c80faa444810aa25ed" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>fence</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a21514973be4a2a9107be043fe727d9f0" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>fetchOp</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1af2bb524d70bdaa0eaad2a394c0e9b633" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>flush</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a667a140d3db4f68da8af0f9d6533a88a" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>flushAll</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a4b576d334034884d7c72b89310fd4f57" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>flushLocal</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a065715e0c91be9b411b490b740fc064a" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>get</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a13c46ec783f1df901cfd7db7f65e0e85" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>getCount</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a0995b9b9adfce492d7d3dead1ed8ac7a" prot="private" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>handle_</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1aa0d947b72bd66a1a0507062f3dffd590" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>Holder</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1af5a5f41fb16fbf8ee0f7f1b51120cb65" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>isUniform</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a32fc545bf53fbbd4002369112e5f02e0" prot="private" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>key_</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a31433de5996d42f49a16fe0f05bd51cf" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>lock</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a1fd6b9bc3f72bb2b64e602de3982929d" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>Manager</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1aecfc6828df1f361fa24e2780b07b6d56" prot="private" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>mpi2_</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1ad6edaae632bb4025e8d29f27abfcf81c" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>put</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a1d1abbaaad0d2490b01b10493fe78e36" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>raccum</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a61b649c8c420b9f2f6310d752bdef79c" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>ready</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1ad61ee11705da8cf0ba8664b3173e7370" prot="private" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>ready_</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1abca462aa3e98d1c0fb4852743eaed04a" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>rget</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1ae3f9105ec3abe794bd39f24ef55f1c29" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>rput</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a85d338b1beb4c041aa477b18c4eaa312" prot="public" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>sync</name></member>
      <member refid="structvt_1_1rdma_1_1_holder_1a6c137c841a55e053778597860c6761e8" prot="private" virt="non-virtual"><scope>vt::rdma::Holder</scope><name>uniform_size_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
