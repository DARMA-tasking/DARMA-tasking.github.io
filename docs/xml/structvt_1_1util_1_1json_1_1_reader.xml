<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structvt_1_1util_1_1json_1_1_reader" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::json::Reader</compoundname>
    <includes refid="json__reader_8h" local="no">json_reader.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_reader_1a291e175a92898f3cb80c2f05f1350326" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::util::json::Reader::filename_</definition>
        <argsstring></argsstring>
        <name>filename_</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The file name </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_reader.h" line="86" column="15" bodyfile="src/vt/utils/json/json_reader.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_reader_1a144aa8a5e2d81ce335d9bce88afca096" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::util::json::Reader::Reader</definition>
        <argsstring>(std::string const &amp;in_filename)</argsstring>
        <name>Reader</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in_filename</declname>
        </param>
        <briefdescription>
<para>Construct the reader. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the file name to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_compressed</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the data is compressed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_reader.h" line="67" column="12" bodyfile="src/vt/utils/json/json_reader.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_reader_1aaba62e5b17f0840092f13ea2b7edf554" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::util::json::Reader::isCompressed</definition>
        <argsstring>() const</argsstring>
        <name>isCompressed</name>
        <briefdescription>
<para>Check if the file is compressed or not. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether the file is compressed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_reader.h" line="76" column="8" bodyfile="src/vt/utils/json/json_reader.cc" bodystart="54" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_reader_1a908f4834ad9fc0d4428fcb1db53f8382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; nlohmann::json &gt;</type>
        <definition>std::unique_ptr&lt; nlohmann::json &gt; vt::util::json::Reader::readFile</definition>
        <argsstring>()</argsstring>
        <name>readFile</name>
        <briefdescription>
<para>Read the file and output JSON. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the JSON </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/json_reader.h" line="83" column="19" bodyfile="src/vt/utils/json/json_reader.cc" bodystart="78" bodyend="93"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="structvt_1_1util_1_1json_1_1_reader" kindref="compound">Reader</ref> for JSON files either compressed or not. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/utils/json/json_reader.h" line="59" column="13" bodyfile="src/vt/utils/json/json_reader.h" bodystart="59" bodyend="87"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1json_1_1_reader_1a291e175a92898f3cb80c2f05f1350326" prot="private" virt="non-virtual"><scope>vt::util::json::Reader</scope><name>filename_</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_reader_1aaba62e5b17f0840092f13ea2b7edf554" prot="public" virt="non-virtual"><scope>vt::util::json::Reader</scope><name>isCompressed</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_reader_1a144aa8a5e2d81ce335d9bce88afca096" prot="public" virt="non-virtual"><scope>vt::util::json::Reader</scope><name>Reader</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_reader_1a908f4834ad9fc0d4428fcb1db53f8382" prot="public" virt="non-virtual"><scope>vt::util::json::Reader</scope><name>readFile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
