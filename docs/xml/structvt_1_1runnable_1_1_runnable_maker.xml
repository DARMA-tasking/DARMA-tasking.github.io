<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1runnable_1_1_runnable_maker" kind="struct" language="C++" prot="public">
    <compoundname>vt::runnable::RunnableMaker</compoundname>
    <includes refid="make__runnable_8h" local="no">make_runnable.h</includes>
    <templateparamlist>
      <param>
        <type>typename MsgT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_maker_1abae85bf10b5b296af40656123ec5a111" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> *</type>
        <definition>RunnableNew* vt::runnable::RunnableMaker&lt; MsgT &gt;::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="291" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_maker_1a95ea956b75e1ea1ca8084462cc35f4bf" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MsgT &gt; const  &amp;</type>
        <definition>MsgSharedPtr&lt;MsgT&gt; const&amp; vt::runnable::RunnableMaker&lt; MsgT &gt;::msg_</definition>
        <argsstring></argsstring>
        <name>msg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="292" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_maker_1a627ad83f0608f9b91c5ecedecf2f8d75" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::runnable::RunnableMaker&lt; MsgT &gt;::handler_</definition>
        <argsstring></argsstring>
        <name>handler_</name>
        <initializer>= uninitialized_handler</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="293" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_maker_1a52fd27acc3c3259743fdd7aed09d690d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runnable::RunnableMaker&lt; MsgT &gt;::set_handler_</definition>
        <argsstring></argsstring>
        <name>set_handler_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="294" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_maker_1a5a50a669e9bf0a147fdeb2a482554304" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runnable::RunnableMaker&lt; MsgT &gt;::is_void_</definition>
        <argsstring></argsstring>
        <name>is_void_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="295" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_maker_1ad053690f0793a709289f3c1d240a2851" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::runnable::RunnableMaker&lt; MsgT &gt;::from_node_</definition>
        <argsstring></argsstring>
        <name>from_node_</name>
        <initializer>= uninitialized_destination</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="296" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_maker_1a1a09d169753ee4c91ba1b42c291038f0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runnable::RunnableMaker&lt; MsgT &gt;::is_done_</definition>
        <argsstring></argsstring>
        <name>is_done_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="297" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_maker_1a1f1afd6fa4a701c8e620e30838099725" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runnable::RunnableMaker&lt; MsgT &gt;::is_term_</definition>
        <argsstring></argsstring>
        <name>is_term_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="298" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1runnable_1_1_runnable_maker_1a0cd87f711041bf7cfa22ef5746ee880c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::runnable::RunnableMaker&lt; MsgT &gt;::has_msg_</definition>
        <argsstring></argsstring>
        <name>has_msg_</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="299" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1a8bdfaa900a10d5b950428476ae57c829" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::runnable::RunnableMaker&lt; MsgT &gt;::RunnableMaker</definition>
        <argsstring>(RunnableNew *in_impl, MsgSharedPtr&lt; MsgT &gt; const &amp;in_msg, HandlerType in_handler, NodeType in_from_node)</argsstring>
        <name>RunnableMaker</name>
        <param>
          <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref> *</type>
          <declname>in_impl</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MsgT &gt; const &amp;</type>
          <declname>in_msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>in_handler</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>in_from_node</declname>
        </param>
        <briefdescription>
<para>Construct the builder. Shall not be called directly. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_impl</parametername>
</parameternamelist>
<parameterdescription>
<para>the runnable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the associated message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_han_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_from_node</parametername>
</parameternamelist>
<parameterdescription>
<para>the from node for the runnable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="75" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="75" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1adf8ab1ce30a6577494f1c5dc4d454186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::runnable::RunnableMaker&lt; MsgT &gt;::RunnableMaker</definition>
        <argsstring>(RunnableMaker const &amp;)=delete</argsstring>
        <name>RunnableMaker</name>
        <param>
          <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1abeee34efa8b7bc1586727bee5f71c6d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::runnable::RunnableMaker&lt; MsgT &gt;::RunnableMaker</definition>
        <argsstring>(RunnableMaker &amp;&amp;)=default</argsstring>
        <name>RunnableMaker</name>
        <param>
          <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1a0700d91c1114ae97ac74a4841ec2499c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::runnable::RunnableMaker&lt; MsgT &gt;::~RunnableMaker</definition>
        <argsstring>()</argsstring>
        <name>~RunnableMaker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="88" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="88" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1aa547117a9c2e36d77f60712ec78eef58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref> &amp;&amp;</type>
        <definition>RunnableMaker&amp;&amp; vt::runnable::RunnableMaker&lt; MsgT &gt;::withContinuation</definition>
        <argsstring>(ActionType cont)</argsstring>
        <name>withContinuation</name>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>cont</declname>
        </param>
        <briefdescription>
<para>Add a continuation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cont</parametername>
</parameternamelist>
<parameterdescription>
<para>the continuation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="99" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1a60b98132fcf31de89854ca70c087eb0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref> &amp;&amp;</type>
        <definition>RunnableMaker&amp;&amp; vt::runnable::RunnableMaker&lt; MsgT &gt;::withTDEpoch</definition>
        <argsstring>(EpochType ep, bool is_term=false)</argsstring>
        <name>withTDEpoch</name>
        <param>
          <type><ref refid="namespacevt_1a81d11b28122d43bf9834577e4a06440f" kindref="member">EpochType</ref></type>
          <declname>ep</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_term</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Add a termination epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ep</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_term</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it&apos;s a termination message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="110" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="110" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1ab1d3e7c7e5da4cf309a58b0e4a17070e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref> &amp;&amp;</type>
        <definition>RunnableMaker&amp;&amp; vt::runnable::RunnableMaker&lt; MsgT &gt;::withTDEpochFromMsg</definition>
        <argsstring>(bool is_term=false)</argsstring>
        <name>withTDEpochFromMsg</name>
        <param>
          <type>bool</type>
          <declname>is_term</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Add a termination message to extract an epoch. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_term</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it&apos;s a termination message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="123" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="123" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1a1b37afe7a5ab185c29e85e0d6ebbbc82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ElmT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref> &amp;&amp;</type>
        <definition>RunnableMaker&amp;&amp; vt::runnable::RunnableMaker&lt; MsgT &gt;::withElementHandler</definition>
        <argsstring>(ElmT *elm)</argsstring>
        <name>withElementHandler</name>
        <param>
          <type>ElmT *</type>
          <declname>elm</declname>
        </param>
        <briefdescription>
<para>Add an typed element handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">elm</parametername>
</parameternamelist>
<parameterdescription>
<para>the element </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="137" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="137" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1aed99a9b0607da59ab7ad7ee56255fcc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ElmT</type>
          </param>
          <param>
            <type>typename IdxT</type>
            <defval>typename ElmT::IndexType</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref> &amp;&amp;</type>
        <definition>RunnableMaker&amp;&amp; vt::runnable::RunnableMaker&lt; MsgT &gt;::withCollection</definition>
        <argsstring>(ElmT *elm)</argsstring>
        <name>withCollection</name>
        <param>
          <type>ElmT *</type>
          <declname>elm</declname>
        </param>
        <briefdescription>
<para>Add a collection; sets up the handler and collection contexts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">elm</parametername>
</parameternamelist>
<parameterdescription>
<para>the collection element pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="149" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="149" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1a191c03660b94c5b49b929c92d9608604" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ElmT</type>
          </param>
          <param>
            <type>typename MsgU</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref> &amp;&amp;</type>
        <definition>RunnableMaker&amp;&amp; vt::runnable::RunnableMaker&lt; MsgT &gt;::withLBData</definition>
        <argsstring>(ElmT *elm, MsgU *msg)</argsstring>
        <name>withLBData</name>
        <param>
          <type>ElmT *</type>
          <declname>elm</declname>
        </param>
        <param>
          <type>MsgU *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Add LB data for instrumentation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">elm</parametername>
</parameternamelist>
<parameterdescription>
<para>the element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the associated message (might be different than the already captured one) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="173" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="173" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1a42a6e2d7b273b6bb61d6659c2651d3c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ElmT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref> &amp;&amp;</type>
        <definition>RunnableMaker&amp;&amp; vt::runnable::RunnableMaker&lt; MsgT &gt;::withLBDataVoidMsg</definition>
        <argsstring>(ElmT *elm)</argsstring>
        <name>withLBDataVoidMsg</name>
        <param>
          <type>ElmT *</type>
          <declname>elm</declname>
        </param>
        <briefdescription>
<para>Add LB data for instrumentation (without a message) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">elm</parametername>
</parameternamelist>
<parameterdescription>
<para>the element </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="186" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1af44e0061ec3a17b27dfbc64e60d1fcef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename LBDataT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref> &amp;&amp;</type>
        <definition>RunnableMaker&amp;&amp; vt::runnable::RunnableMaker&lt; MsgT &gt;::withLBData</definition>
        <argsstring>(LBDataT *lb_data, T elm_id)</argsstring>
        <name>withLBData</name>
        <param>
          <type>LBDataT *</type>
          <declname>lb_data</declname>
        </param>
        <param>
          <type>T</type>
          <declname>elm_id</declname>
        </param>
        <briefdescription>
<para>Add LB data for instrumentation directly with element ID and LB data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lb_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the LB data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elm_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the element ID </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="197" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="197" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1a14daf2e1c58f498590974fa97c22c61a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ElmT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref> &amp;&amp;</type>
        <definition>RunnableMaker&amp;&amp; vt::runnable::RunnableMaker&lt; MsgT &gt;::withLBData</definition>
        <argsstring>(ElmT *elm)</argsstring>
        <name>withLBData</name>
        <param>
          <type>ElmT *</type>
          <declname>elm</declname>
        </param>
        <briefdescription>
<para>Add LB data for instrumentation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">elm</parametername>
</parameternamelist>
<parameterdescription>
<para>the element </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="210" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="210" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1aa0ae94d80e43385c18ee1e2afbce59a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableMaker&lt; MsgT &gt;::runOrEnqueue</definition>
        <argsstring>(bool should_run)</argsstring>
        <name>runOrEnqueue</name>
        <param>
          <type>bool</type>
          <declname>should_run</declname>
        </param>
        <briefdescription>
<para>Run or enqueue the runnable depending on argument. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">should_run</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it should be run (if false, it will be enqueued) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="244" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="244" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1a8fb3e1362dd6f746e991786654f5bd40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableMaker&lt; MsgT &gt;::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <briefdescription>
<para>Run the runnable immediately. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="255" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="255" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1a76516d824c744bdd347806012a78e19b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableMaker&lt; MsgT &gt;::enqueue</definition>
        <argsstring>()</argsstring>
        <name>enqueue</name>
        <briefdescription>
<para>Enqueue the runnable in the scheduler for execution later. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="266" column="1" bodyfile="src/vt/runnable/make_runnable.impl.h" bodystart="53" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1abe4aca5620c53dc9e035c3a60fe8c76b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref> &amp;&amp;</type>
        <definition>RunnableMaker&amp;&amp; vt::runnable::RunnableMaker&lt; MsgT &gt;::withExplicitTask</definition>
        <argsstring>(ActionType task_)</argsstring>
        <name>withExplicitTask</name>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>task_</declname>
        </param>
        <briefdescription>
<para>Set an explicit task for this runnable (not going through normal handler) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">task_</parametername>
</parameternamelist>
<parameterdescription>
<para>the task to execute </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="274" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="274" bodyend="277"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1runnable_1_1_runnable_maker_1add114dad8a3f0769bed8b8396ba9a13a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::runnable::RunnableMaker&lt; MsgT &gt;::setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
<para>Setup for running or enqueuing. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="283" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="283" bodyend="288"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Convenience builder class for setting up a <computeroutput><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">RunnableNew</ref></computeroutput> before enqueuing it or running it. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3672">
        <label>vt::messaging::MsgSharedPtr&lt; MsgT &gt;</label>
        <link refid="structvt_1_1messaging_1_1_msg_shared_ptr"/>
        <childnode refid="3670" relation="usage">
          <edgelabel>ptr_</edgelabel>
        </childnode>
        <childnode refid="3671" relation="usage">
          <edgelabel>impl_</edgelabel>
        </childnode>
      </node>
      <node id="3665">
        <label>vt::ctx::TD</label>
        <link refid="structvt_1_1ctx_1_1_t_d"/>
        <childnode refid="3666" relation="usage">
          <edgelabel>ep_</edgelabel>
        </childnode>
      </node>
      <node id="3668">
        <label>T</label>
      </node>
      <node id="3661">
        <label>vt::elm::ElementIDStruct</label>
        <link refid="structvt_1_1elm_1_1_element_i_d_struct"/>
      </node>
      <node id="3666">
        <label>vt::epoch::EpochType</label>
        <link refid="structvt_1_1epoch_1_1_epoch_type"/>
        <childnode refid="3667" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3662">
        <label>vt::ctx::SetContext</label>
        <link refid="structvt_1_1ctx_1_1_set_context"/>
        <childnode refid="3663" relation="usage">
          <edgelabel>cur_task_</edgelabel>
          <edgelabel>prev_task_</edgelabel>
        </childnode>
      </node>
      <node id="3671">
        <label>vt::messaging::MsgPtrImplBase</label>
        <link refid="structvt_1_1messaging_1_1_msg_ptr_impl_base"/>
      </node>
      <node id="3670">
        <label>vt::messaging::BaseMsg</label>
        <link refid="structvt_1_1messaging_1_1_base_msg"/>
      </node>
      <node id="3656">
        <label>vt::runnable::RunnableMaker&lt; MsgT &gt;</label>
        <link refid="structvt_1_1runnable_1_1_runnable_maker"/>
        <childnode refid="3657" relation="usage">
          <edgelabel>impl_</edgelabel>
        </childnode>
        <childnode refid="3672" relation="usage">
          <edgelabel>msg_</edgelabel>
        </childnode>
      </node>
      <node id="3660">
        <label>vt::elm::ElementLBData</label>
        <link refid="structvt_1_1elm_1_1_element_l_b_data"/>
      </node>
      <node id="3658">
        <label>vt::runnable::detail::Contexts</label>
        <link refid="structvt_1_1runnable_1_1detail_1_1_contexts"/>
        <childnode refid="3659" relation="usage">
          <edgelabel>lb</edgelabel>
        </childnode>
        <childnode refid="3662" relation="usage">
          <edgelabel>setcontext</edgelabel>
        </childnode>
        <childnode refid="3664" relation="usage">
          <edgelabel>cont</edgelabel>
        </childnode>
        <childnode refid="3665" relation="usage">
          <edgelabel>td</edgelabel>
        </childnode>
      </node>
      <node id="3664">
        <label>vt::ctx::Continuation</label>
        <link refid="structvt_1_1ctx_1_1_continuation"/>
      </node>
      <node id="3663">
        <label>vt::util::ptr::ObserverPtr&lt; vt::runnable::RunnableNew &gt;</label>
        <link refid="structvt_1_1util_1_1ptr_1_1_observer_ptr"/>
        <childnode refid="3657" relation="usage">
          <edgelabel>p_</edgelabel>
        </childnode>
      </node>
      <node id="3659">
        <label>vt::ctx::LBData</label>
        <link refid="structvt_1_1ctx_1_1_l_b_data"/>
        <childnode refid="3660" relation="usage">
          <edgelabel>lb_data_</edgelabel>
        </childnode>
        <childnode refid="3661" relation="usage">
          <edgelabel>cur_elm_id_</edgelabel>
        </childnode>
      </node>
      <node id="3657">
        <label>vt::runnable::RunnableNew</label>
        <link refid="structvt_1_1runnable_1_1_runnable_new"/>
        <childnode refid="3658" relation="usage">
          <edgelabel>contexts_</edgelabel>
        </childnode>
        <childnode refid="3669" relation="usage">
          <edgelabel>msg_</edgelabel>
        </childnode>
      </node>
      <node id="3669">
        <label>vt::messaging::MsgSharedPtr&lt; vt::messaging::ActiveMsg &gt;</label>
        <link refid="structvt_1_1messaging_1_1_msg_shared_ptr"/>
        <childnode refid="3670" relation="usage">
          <edgelabel>ptr_</edgelabel>
        </childnode>
        <childnode refid="3671" relation="usage">
          <edgelabel>impl_</edgelabel>
        </childnode>
      </node>
      <node id="3667">
        <label>Strong&lt; detail::EpochImplType, detail::no_epoch_impl, detail::EpochImplTag &gt;</label>
        <link refid="structvt_1_1util_1_1strong_1_1detail_1_1_strong"/>
        <childnode refid="3668" relation="usage">
          <edgelabel>v_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/runnable/make_runnable.h" line="65" column="1" bodyfile="src/vt/runnable/make_runnable.h" bodystart="65" bodyend="300"/>
    <listofallmembers>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a76516d824c744bdd347806012a78e19b" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>enqueue</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1ad053690f0793a709289f3c1d240a2851" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>from_node_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a627ad83f0608f9b91c5ecedecf2f8d75" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>handler_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a0cd87f711041bf7cfa22ef5746ee880c" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>has_msg_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1abae85bf10b5b296af40656123ec5a111" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>impl_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a1a09d169753ee4c91ba1b42c291038f0" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>is_done_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a1f1afd6fa4a701c8e620e30838099725" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>is_term_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a5a50a669e9bf0a147fdeb2a482554304" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>is_void_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a95ea956b75e1ea1ca8084462cc35f4bf" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>msg_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a8fb3e1362dd6f746e991786654f5bd40" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>run</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a8bdfaa900a10d5b950428476ae57c829" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>RunnableMaker</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1adf8ab1ce30a6577494f1c5dc4d454186" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>RunnableMaker</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1abeee34efa8b7bc1586727bee5f71c6d4" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>RunnableMaker</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1aa0ae94d80e43385c18ee1e2afbce59a2" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>runOrEnqueue</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a52fd27acc3c3259743fdd7aed09d690d" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>set_handler_</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1add114dad8a3f0769bed8b8396ba9a13a" prot="private" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>setup</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1aed99a9b0607da59ab7ad7ee56255fcc8" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>withCollection</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1aa547117a9c2e36d77f60712ec78eef58" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>withContinuation</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a1b37afe7a5ab185c29e85e0d6ebbbc82" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>withElementHandler</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1abe4aca5620c53dc9e035c3a60fe8c76b" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>withExplicitTask</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a191c03660b94c5b49b929c92d9608604" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>withLBData</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1af44e0061ec3a17b27dfbc64e60d1fcef" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>withLBData</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a14daf2e1c58f498590974fa97c22c61a" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>withLBData</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a42a6e2d7b273b6bb61d6659c2651d3c5" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>withLBDataVoidMsg</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a60b98132fcf31de89854ca70c087eb0e" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>withTDEpoch</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1ab1d3e7c7e5da4cf309a58b0e4a17070e" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>withTDEpochFromMsg</name></member>
      <member refid="structvt_1_1runnable_1_1_runnable_maker_1a0700d91c1114ae97ac74a4841ec2499c" prot="public" virt="non-virtual"><scope>vt::runnable::RunnableMaker</scope><name>~RunnableMaker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
