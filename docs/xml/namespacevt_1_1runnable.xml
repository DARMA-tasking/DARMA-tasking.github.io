<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="namespacevt_1_1runnable" kind="namespace" language="C++">
    <compoundname>vt::runnable</compoundname>
    <innerclass refid="structvt_1_1runnable_1_1_runnable_maker" prot="public">vt::runnable::RunnableMaker</innerclass>
    <innerclass refid="structvt_1_1runnable_1_1_runnable_new" prot="public">vt::runnable::RunnableNew</innerclass>
    <innerclass refid="structvt_1_1runnable_1_1_runnable_new_alloc" prot="public">vt::runnable::RunnableNewAlloc</innerclass>
    <innernamespace refid="namespacevt_1_1runnable_1_1detail">vt::runnable::detail</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1runnable_1a004d4b72c158a64f01404ac5dac24ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>auto</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto vt::runnable::invoke</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>invoke</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/invoke.h" line="147" column="6" bodyfile="src/vt/runnable/invoke.h" bodystart="147" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1runnable_1a767f5673027ff59a60d513209691f5ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callable</type>
          </param>
          <param>
            <type>Callable</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto vt::runnable::invoke</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>invoke</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/invoke.h" line="156" column="6" bodyfile="src/vt/runnable/invoke.h" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1runnable_1afb8d5dae85a94591271296e201b4f838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref>&lt; U &gt;</type>
        <definition>RunnableMaker&lt;U&gt; vt::runnable::makeRunnable</definition>
        <argsstring>(MsgSharedPtr&lt; U &gt; const &amp;msg, bool is_threaded, HandlerType handler, NodeType from)</argsstring>
        <name>makeRunnable</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; U &gt; const &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_threaded</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Make a new runnable with a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_threaded</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it is threaded </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler bits </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">from</parametername>
</parameternamelist>
<parameterdescription>
<para>the node that caused this runnable to execute </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">han_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of handler</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the maker for further customization </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="337" column="15" bodyfile="src/vt/runnable/make_runnable.h" bodystart="337" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1runnable_1aa35ee520f896c49ba7f3952acb5881b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_maker" kindref="compound">RunnableMaker</ref>&lt; <ref refid="namespacevt_1a44d0d4e144748f2b19a1cfd962f50338" kindref="member">BaseMsgType</ref> &gt;</type>
        <definition>RunnableMaker&lt;BaseMsgType&gt; vt::runnable::makeRunnableVoid</definition>
        <argsstring>(bool is_threaded, HandlerType handler, NodeType from)</argsstring>
        <name>makeRunnableVoid</name>
        <param>
          <type>bool</type>
          <declname>is_threaded</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Make a new runnable without a message (void handler) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_threaded</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it is threaded </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler bits </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">from</parametername>
</parameternamelist>
<parameterdescription>
<para>the node that caused this runnable to execute</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the maker for further customization </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/make_runnable.h" line="362" column="22" bodyfile="src/vt/runnable/make_runnable.h" bodystart="362" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1runnable_1afec92e402b96766d18a24246651015f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structvt_1_1ctx_1_1_set_context" kindref="compound">ctx::SetContext</ref> *</type>
        <definition>ctx::SetContext* vt::runnable::RunnableNew::get&lt; ctx::SetContext &gt;</definition>
        <argsstring>()</argsstring>
        <name>RunnableNew::get&lt; ctx::SetContext &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.impl.h" line="54" column="8" bodyfile="src/vt/runnable/runnable.impl.h" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1runnable_1ace1b6a23d611fae4fa00910100d91702" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structvt_1_1ctx_1_1_l_b_data" kindref="compound">ctx::LBData</ref> *</type>
        <definition>ctx::LBData* vt::runnable::RunnableNew::get&lt; ctx::LBData &gt;</definition>
        <argsstring>()</argsstring>
        <name>RunnableNew::get&lt; ctx::LBData &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/runnable.impl.h" line="59" column="8" bodyfile="src/vt/runnable/runnable.impl.h" bodystart="59" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/runnable/invoke.h" line="60" column="29"/>
  </compounddef>
</doxygen>
