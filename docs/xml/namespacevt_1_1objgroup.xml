<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacevt_1_1objgroup" kind="namespace" language="C++">
    <compoundname>vt::objgroup</compoundname>
    <innerclass refid="structvt_1_1objgroup_1_1_base_obj" prot="public">vt::objgroup::BaseObj</innerclass>
    <innerclass refid="structvt_1_1objgroup_1_1_obj_group_manager" prot="public">vt::objgroup::ObjGroupManager</innerclass>
    <innernamespace refid="namespacevt_1_1objgroup_1_1detail">vt::objgroup::detail</innernamespace>
    <innernamespace refid="namespacevt_1_1objgroup_1_1holder">vt::objgroup::holder</innernamespace>
    <innernamespace refid="namespacevt_1_1objgroup_1_1proxy">vt::objgroup::proxy</innernamespace>
    <innernamespace refid="namespacevt_1_1objgroup_1_1registry">vt::objgroup::registry</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacevt_1_1objgroup_1a25bec5d3c8e8bb02b62280eec62b8ac7" prot="public" static="no">
        <type>void(BaseObj::*)(<ref refid="namespacevt_1ac34f95a5e2b8109b55bfba52b074443d" kindref="member">vt::BaseMessage</ref> *)</type>
        <definition>using vt::objgroup::ActiveObjAnyType = typedef void(BaseObj::*)(vt::BaseMessage*)</definition>
        <argsstring></argsstring>
        <name>ActiveObjAnyType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/active_func/active_func.h" line="52" column="1" bodyfile="src/vt/objgroup/active_func/active_func.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1objgroup_1a979bd9dc714fdacafc4b83f98271bc23" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename ObjT</type>
          </param>
        </templateparamlist>
        <type>void(ObjT::*)(MsgT *)</type>
        <definition>using vt::objgroup::ActiveObjType = typedef void(ObjT::*)(MsgT*)</definition>
        <argsstring></argsstring>
        <name>ActiveObjType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/active_func/active_func.h" line="55" column="1" bodyfile="src/vt/objgroup/active_func/active_func.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1objgroup_1a54a50ff6833bf618e5bedb9a3b6d0e07" prot="public" static="no">
        <type>uint32_t</type>
        <definition>using vt::objgroup::ObjGroupIDType = typedef uint32_t</definition>
        <argsstring></argsstring>
        <name>ObjGroupIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/common.h" line="49" column="1" bodyfile="src/vt/objgroup/common.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1objgroup_1a378e4b966221779c74f3a2f921eb2421" prot="public" static="no">
        <type>uint16_t</type>
        <definition>using vt::objgroup::ObjTypeIdxType = typedef uint16_t</definition>
        <argsstring></argsstring>
        <name>ObjTypeIdxType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/common.h" line="50" column="1" bodyfile="src/vt/objgroup/common.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1objgroup_1a091464c0acd2328e46c0152a064122ae" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1_1objgroup_1a54a50ff6833bf618e5bedb9a3b6d0e07" kindref="member">ObjGroupIDType</ref> const</type>
        <definition>constexpr ObjGroupIDType const vt::objgroup::fst_obj_group_id</definition>
        <argsstring></argsstring>
        <name>fst_obj_group_id</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/common.h" line="52" column="39" bodyfile="src/vt/objgroup/common.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1objgroup_1a51307ccb565eb0441ba64949c67031cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref>, std::unique_ptr&lt; <ref refid="structvt_1_1objgroup_1_1holder_1_1_holder_base" kindref="compound">holder::HolderBase</ref> &gt; &gt; &amp;</type>
        <definition>std::unordered_map&lt; ObjGroupProxyType, std::unique_ptr&lt; holder::HolderBase &gt; &gt; &amp; vt::objgroup::getObjs</definition>
        <argsstring>()</argsstring>
        <name>getObjs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/manager.cc" line="140" column="20" bodyfile="src/vt/objgroup/manager.cc" bodystart="140" bodyend="142" declfile="src/vt/objgroup/manager.fwd.h" declline="68" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1objgroup_1a0574ec1b0319596b2f2af0a107108390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref>, std::vector&lt; <ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> &gt; &gt; &amp;</type>
        <definition>std::unordered_map&lt; ObjGroupProxyType, std::vector&lt; ActionType &gt; &gt; &amp; vt::objgroup::getPending</definition>
        <argsstring>()</argsstring>
        <name>getPending</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/manager.cc" line="144" column="20" bodyfile="src/vt/objgroup/manager.cc" bodystart="144" bodyend="146" declfile="src/vt/objgroup/manager.fwd.h" declline="69" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1objgroup_1ad45be555d5ff3bd308e8f61e4e2dd909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::objgroup::dispatchObjGroup</definition>
        <argsstring>(MsgSharedPtr&lt; MsgT &gt; msg, HandlerType han, NodeType from_node, ActionType cont)</argsstring>
        <name>dispatchObjGroup</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>from_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/manager.static.h" line="168" column="6" bodyfile="src/vt/objgroup/manager.static.h" bodystart="168" bodyend="177" declfile="src/vt/objgroup/manager.fwd.h" declline="64" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1objgroup_1a6efc2df6997b609c551848af332cfb15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::objgroup::send</definition>
        <argsstring>(MsgSharedPtr&lt; MsgT &gt; msg, HandlerType han, NodeType node)</argsstring>
        <name>send</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/manager.static.h" line="57" column="24" bodyfile="src/vt/objgroup/manager.static.h" bodystart="57" bodyend="75" declfile="src/vt/objgroup/manager.fwd.h" declline="72" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1objgroup_1a93db5149930b07803d8cc987449baa66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>auto</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) vt::objgroup::invoke</definition>
        <argsstring>(messaging::MsgSharedPtr&lt; MsgT &gt; msg, HandlerType han, NodeType node)</argsstring>
        <name>invoke</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_shared_ptr" kindref="compound">messaging::MsgSharedPtr</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>han</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/manager.static.h" line="78" column="10" bodyfile="src/vt/objgroup/manager.static.h" bodystart="78" bodyend="100" declfile="src/vt/objgroup/manager.fwd.h" declline="74" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1objgroup_1a1986e4cf0b0e869e44860cd1d98196e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1messaging_1_1_pending_send" kindref="compound">messaging::PendingSend</ref></type>
        <definition>messaging::PendingSend vt::objgroup::broadcast</definition>
        <argsstring>(MsgSharedPtr&lt; MsgT &gt; msg, HandlerType han)</argsstring>
        <name>broadcast</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>han</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/manager.static.h" line="103" column="24" bodyfile="src/vt/objgroup/manager.static.h" bodystart="103" bodyend="105" declfile="src/vt/objgroup/manager.fwd.h" declline="76" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/objgroup/active_func/active_func.h" line="50" column="12"/>
  </compounddef>
</doxygen>
