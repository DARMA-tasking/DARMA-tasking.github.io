<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::RDMAable</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BaseProxyT</basecompoundref>
    <includes refid="rdmaable_8h" local="no">rdmaable.h</includes>
    <templateparamlist>
      <param>
        <type>typename ColT</type>
      </param>
      <param>
        <type>typename IndexT</type>
      </param>
      <param>
        <type>typename BaseProxyT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1af26e9e951d466ed7ced91adaf495b6cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::RDMAable&lt; ColT, IndexT, BaseProxyT &gt;::RDMAable</definition>
        <argsstring>()=default</argsstring>
        <name>RDMAable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/rdmaable/rdmaable.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1a03d580ecebe0bffebe79272af156899c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::RDMAable&lt; ColT, IndexT, BaseProxyT &gt;::RDMAable</definition>
        <argsstring>(RDMAable const &amp;)=default</argsstring>
        <name>RDMAable</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable" kindref="compound">RDMAable</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/rdmaable/rdmaable.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1a5b5055174533c011cc0fb8d0eb36b13c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::RDMAable&lt; ColT, IndexT, BaseProxyT &gt;::RDMAable</definition>
        <argsstring>(RDMAable &amp;&amp;)=default</argsstring>
        <name>RDMAable</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable" kindref="compound">RDMAable</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/rdmaable/rdmaable.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1a8e246341e17012efae4f42b6d317595e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::RDMAable&lt; ColT, IndexT, BaseProxyT &gt;::RDMAable</definition>
        <argsstring>(VirtualProxyType const in_proxy)</argsstring>
        <name>RDMAable</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const</type>
          <declname>in_proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/rdmaable/rdmaable.h" line="59" column="1" bodyfile="src/vt/vrt/collection/rdmaable/rdmaable.impl.h" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1adabf09e2a2616594bc4e087c22c668f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable" kindref="compound">RDMAable</ref> &amp;</type>
        <definition>RDMAable&amp; vt::vrt::collection::RDMAable&lt; ColT, IndexT, BaseProxyT &gt;::operator=</definition>
        <argsstring>(RDMAable const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable" kindref="compound">RDMAable</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/rdmaable/rdmaable.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1a220f2637cb911ba9cb7bbc1ee11d960f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1rdma_1_1_handle" kindref="compound">vt::rdma::Handle</ref>&lt; T, <ref refid="namespacevt_1_1rdma_1a0234ff19cfb3c04718cfdfd36b2d6d88a0c5c41d6a0319a61d3a5e8a060b7c4d7" kindref="member">vt::rdma::HandleEnum::StaticSize</ref>, IndexT &gt;</type>
        <definition>vt::rdma::Handle&lt; T, vt::rdma::HandleEnum::StaticSize, IndexT &gt; vt::vrt::collection::RDMAable&lt; ColT, IndexT, BaseProxyT &gt;::makeHandleRDMA</definition>
        <argsstring>(IndexT idx, std::size_t count, bool is_uniform) const</argsstring>
        <name>makeHandleRDMA</name>
        <param>
          <type>IndexT</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_uniform</declname>
        </param>
        <briefdescription>
<para>Make a new RDMA handle for this collection<mdash/>a collective invocation across all elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>the local count of T for this handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_uniform</parametername>
</parameternamelist>
<parameterdescription>
<para>whether all handles have the same count</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new RDMA handle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/rdmaable/rdmaable.h" line="73" column="1" bodyfile="src/vt/vrt/collection/rdmaable/rdmaable.impl.h" bodystart="62" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1ab7b416ab8ea4643f17fde1e95ce4bea5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1rdma_1a0234ff19cfb3c04718cfdfd36b2d6d88" kindref="member">vt::rdma::HandleEnum</ref></type>
            <declname>E</declname>
            <defname>E</defname>
          </param>
          <param>
            <type>typename IndexU</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::RDMAable&lt; ColT, IndexT, BaseProxyT &gt;::destroyHandleRDMA</definition>
        <argsstring>(vt::rdma::Handle&lt; T, E, IndexU &gt; handle) const</argsstring>
        <name>destroyHandleRDMA</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle" kindref="compound">vt::rdma::Handle</ref>&lt; T, E, IndexU &gt;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Destroy an RDMA handle created for this collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to destroy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/rdmaable/rdmaable.h" line="81" column="1" bodyfile="src/vt/vrt/collection/rdmaable/rdmaable.impl.h" bodystart="74" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3153">
        <label>BaseProxyT</label>
      </node>
      <node id="3152">
        <label>vt::vrt::collection::RDMAable&lt; ColT, IndexT, BaseProxyT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable"/>
        <childnode refid="3153" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3155">
        <label>BaseProxyT</label>
      </node>
      <node id="3154">
        <label>vt::vrt::collection::RDMAable&lt; ColT, IndexT, BaseProxyT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable"/>
        <childnode refid="3155" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/rdmaable/rdmaable.h" line="55" column="1" bodyfile="src/vt/vrt/collection/rdmaable/rdmaable.h" bodystart="55" bodyend="83"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1ab7b416ab8ea4643f17fde1e95ce4bea5" prot="public" virt="non-virtual"><scope>vt::vrt::collection::RDMAable</scope><name>destroyHandleRDMA</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1a220f2637cb911ba9cb7bbc1ee11d960f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::RDMAable</scope><name>makeHandleRDMA</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1adabf09e2a2616594bc4e087c22c668f6" prot="public" virt="non-virtual"><scope>vt::vrt::collection::RDMAable</scope><name>operator=</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1af26e9e951d466ed7ced91adaf495b6cd" prot="public" virt="non-virtual"><scope>vt::vrt::collection::RDMAable</scope><name>RDMAable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1a03d580ecebe0bffebe79272af156899c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::RDMAable</scope><name>RDMAable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1a5b5055174533c011cc0fb8d0eb36b13c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::RDMAable</scope><name>RDMAable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_r_d_m_aable_1a8e246341e17012efae4f42b6d317595e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::RDMAable</scope><name>RDMAable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
