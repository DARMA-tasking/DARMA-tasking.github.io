<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1util_1_1memory_1_1_sbrk" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>vt::util::memory::Sbrk</compoundname>
    <basecompoundref refid="structvt_1_1util_1_1memory_1_1_reporter" prot="public" virt="non-virtual">vt::util::memory::Reporter</basecompoundref>
    <includes refid="memory__usage_8h" local="no">memory_usage.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1memory_1_1_sbrk_1a094b373315eb32e9d570dbff59d4a0bb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::util::memory::Sbrk::inited_</definition>
        <argsstring></argsstring>
        <name>inited_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="67" column="1" bodyfile="src/vt/utils/memory/memory_usage.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1memory_1_1_sbrk_1a583d05e2d35145d77402a3a84b3399ae" prot="private" static="no" mutable="no">
        <type>uintptr_t</type>
        <definition>uintptr_t vt::util::memory::Sbrk::sbrkinit_</definition>
        <argsstring></argsstring>
        <name>sbrkinit_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="68" column="1" bodyfile="src/vt/utils/memory/memory_usage.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1memory_1_1_sbrk_1af4df47e41f60e7f2da7a6b47c8b4a046" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::util::memory::Sbrk::getUsage</definition>
        <argsstring>() override</argsstring>
        <name>getUsage</name>
        <reimplements refid="structvt_1_1util_1_1memory_1_1_reporter_1a372574f51fdb68077cd3d227ee373de5">getUsage</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="63" column="1" bodyfile="src/vt/utils/memory/memory_usage.cc" bodystart="101" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1memory_1_1_sbrk_1a21fc8bafbdf0a4bb92184474dae1d0f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string vt::util::memory::Sbrk::getName</definition>
        <argsstring>() override</argsstring>
        <name>getName</name>
        <reimplements refid="structvt_1_1util_1_1memory_1_1_reporter_1a83fc36e9cff3ce2deedf1d4546694713">getName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/memory/memory_usage.h" line="64" column="1" bodyfile="src/vt/utils/memory/memory_usage.cc" bodystart="117" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3644">
        <label>vt::util::memory::Sbrk</label>
        <link refid="structvt_1_1util_1_1memory_1_1_sbrk"/>
        <childnode refid="3645" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3645">
        <label>vt::util::memory::Reporter</label>
        <link refid="structvt_1_1util_1_1memory_1_1_reporter"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3646">
        <label>vt::util::memory::Sbrk</label>
        <link refid="structvt_1_1util_1_1memory_1_1_sbrk"/>
        <childnode refid="3647" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3647">
        <label>vt::util::memory::Reporter</label>
        <link refid="structvt_1_1util_1_1memory_1_1_reporter"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/utils/memory/memory_usage.h" line="62" column="1" bodyfile="src/vt/utils/memory/memory_usage.h" bodystart="62" bodyend="69"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1memory_1_1_sbrk_1a21fc8bafbdf0a4bb92184474dae1d0f1" prot="public" virt="virtual"><scope>vt::util::memory::Sbrk</scope><name>getName</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_sbrk_1af4df47e41f60e7f2da7a6b47c8b4a046" prot="public" virt="virtual"><scope>vt::util::memory::Sbrk</scope><name>getUsage</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_sbrk_1a094b373315eb32e9d570dbff59d4a0bb" prot="private" virt="non-virtual"><scope>vt::util::memory::Sbrk</scope><name>inited_</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_sbrk_1a583d05e2d35145d77402a3a84b3399ae" prot="private" virt="non-virtual"><scope>vt::util::memory::Sbrk</scope><name>sbrkinit_</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_reporter_1af00503d786ee4c923b0a942e52af0429" prot="public" virt="non-virtual"><scope>vt::util::memory::Sbrk</scope><name>serialize</name></member>
      <member refid="structvt_1_1util_1_1memory_1_1_reporter_1a9b5c8c4345a2e1d758fd9f583d5ea63a" prot="public" virt="virtual"><scope>vt::util::memory::Sbrk</scope><name>~Reporter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
