<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1util_1_1json_1_1_input_iterator" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::json::InputIterator</compoundname>
    <includes refid="input__iterator_8h" local="no">input_iterator.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1util_1_1json_1_1_input_iterator_1ade8dadafc1ee3baa8ebf11bcfbb1efd4" prot="public" static="no">
        <type>char</type>
        <definition>using vt::util::json::InputIterator::CharType =  char</definition>
        <argsstring></argsstring>
        <name>CharType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/input_iterator.h" line="58" column="1" bodyfile="src/vt/utils/json/input_iterator.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1json_1_1_input_iterator_1a8848ced4895e3d8c2cb9394e61cac30b" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using vt::util::json::InputIterator::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/input_iterator.h" line="60" column="1" bodyfile="src/vt/utils/json/input_iterator.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1json_1_1_input_iterator_1a5f85f8a6e8a9aded85bbc4927cdb754e" prot="public" static="no">
        <type><ref refid="structvt_1_1util_1_1json_1_1_input_iterator_1ade8dadafc1ee3baa8ebf11bcfbb1efd4" kindref="member">CharType</ref></type>
        <definition>using vt::util::json::InputIterator::value_type =  CharType</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/input_iterator.h" line="61" column="1" bodyfile="src/vt/utils/json/input_iterator.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1json_1_1_input_iterator_1a508d1d9795a5002f52471321197e4174" prot="public" static="no">
        <type><ref refid="structvt_1_1util_1_1json_1_1_input_iterator_1ade8dadafc1ee3baa8ebf11bcfbb1efd4" kindref="member">CharType</ref> const  *</type>
        <definition>using vt::util::json::InputIterator::pointer =  CharType const*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/input_iterator.h" line="62" column="1" bodyfile="src/vt/utils/json/input_iterator.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1json_1_1_input_iterator_1ac178e9ca2ff42160d54fd0b9080c1d40" prot="public" static="no">
        <type><ref refid="structvt_1_1util_1_1json_1_1_input_iterator_1ade8dadafc1ee3baa8ebf11bcfbb1efd4" kindref="member">CharType</ref> const  &amp;</type>
        <definition>using vt::util::json::InputIterator::reference =  CharType const&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/input_iterator.h" line="63" column="1" bodyfile="src/vt/utils/json/input_iterator.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1json_1_1_input_iterator_1aad0dbb52ba057b1f84bebfa6ca22a5e8" prot="public" static="no">
        <type>std::input_iterator_tag</type>
        <definition>using vt::util::json::InputIterator::iterator_category =  std::input_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/input_iterator.h" line="64" column="1" bodyfile="src/vt/utils/json/input_iterator.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1json_1_1_input_iterator_1aabe22e55b250f758b86079a40c62be5f" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1util_1_1json_1_1_decompression_input_container" kindref="compound">DecompressionInputContainer</ref> const  *</type>
        <definition>DecompressionInputContainer const* vt::util::json::InputIterator::c_</definition>
        <argsstring></argsstring>
        <name>c_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The underlying container with the data. <simplesect kind="note"><para>: We lie about constness here to satisfy the iterator concept: the <computeroutput><ref refid="structvt_1_1util_1_1json_1_1_decompression_input_container" kindref="compound">DecompressionInputContainer</ref></computeroutput> can not traverse the data in a stateless manner because it decompresses with chunks. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/input_iterator.h" line="92" column="1" bodyfile="src/vt/utils/json/input_iterator.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_input_iterator_1a62d85ae4d87d2fc677c384fb0debfb2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::util::json::InputIterator::InputIterator</definition>
        <argsstring>()=default</argsstring>
        <name>InputIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/input_iterator.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_input_iterator_1af09c946a493856653ba6c790b35d9e33" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::util::json::InputIterator::InputIterator</definition>
        <argsstring>(DecompressionInputContainer const *in_c)</argsstring>
        <name>InputIterator</name>
        <param>
          <type><ref refid="structvt_1_1util_1_1json_1_1_decompression_input_container" kindref="compound">DecompressionInputContainer</ref> const *</type>
          <declname>in_c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/input_iterator.h" line="67" column="1" bodyfile="src/vt/utils/json/input_iterator.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_input_iterator_1af098fb45d489bf7213638f814204d1cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1util_1_1json_1_1_input_iterator" kindref="compound">InputIterator</ref> &amp;</type>
        <definition>InputIterator&amp; vt::util::json::InputIterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/input_iterator.h" line="71" column="1" bodyfile="src/vt/utils/json/input_iterator.h" bodystart="71" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_input_iterator_1a12d5ee7bb678281ddbd8bda5d09b881f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::util::json::InputIterator::operator!=</definition>
        <argsstring>(InputIterator const &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="structvt_1_1util_1_1json_1_1_input_iterator" kindref="compound">InputIterator</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/input_iterator.h" line="79" column="1" bodyfile="src/vt/utils/json/input_iterator.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1json_1_1_input_iterator_1a609b10dde4627f8a0bf5211eaf87210b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1util_1_1json_1_1_input_iterator_1ac178e9ca2ff42160d54fd0b9080c1d40" kindref="member">reference</ref></type>
        <definition>reference vt::util::json::InputIterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/json/input_iterator.h" line="83" column="1" bodyfile="src/vt/utils/json/input_iterator.h" bodystart="83" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Input iterator for compressed input data. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2295">
        <label>vt::util::json::InputIterator</label>
        <link refid="structvt_1_1util_1_1json_1_1_input_iterator"/>
        <childnode refid="2296" relation="usage">
          <edgelabel>c_</edgelabel>
        </childnode>
      </node>
      <node id="2296">
        <label>vt::util::json::DecompressionInputContainer</label>
        <link refid="structvt_1_1util_1_1json_1_1_decompression_input_container"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/utils/json/input_iterator.h" line="56" column="1" bodyfile="src/vt/utils/json/input_iterator.h" bodystart="56" bodyend="93"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1json_1_1_input_iterator_1aabe22e55b250f758b86079a40c62be5f" prot="private" virt="non-virtual"><scope>vt::util::json::InputIterator</scope><name>c_</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_input_iterator_1ade8dadafc1ee3baa8ebf11bcfbb1efd4" prot="public" virt="non-virtual"><scope>vt::util::json::InputIterator</scope><name>CharType</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_input_iterator_1a8848ced4895e3d8c2cb9394e61cac30b" prot="public" virt="non-virtual"><scope>vt::util::json::InputIterator</scope><name>difference_type</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_input_iterator_1a62d85ae4d87d2fc677c384fb0debfb2a" prot="public" virt="non-virtual"><scope>vt::util::json::InputIterator</scope><name>InputIterator</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_input_iterator_1af09c946a493856653ba6c790b35d9e33" prot="public" virt="non-virtual"><scope>vt::util::json::InputIterator</scope><name>InputIterator</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_input_iterator_1aad0dbb52ba057b1f84bebfa6ca22a5e8" prot="public" virt="non-virtual"><scope>vt::util::json::InputIterator</scope><name>iterator_category</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_input_iterator_1a12d5ee7bb678281ddbd8bda5d09b881f" prot="public" virt="non-virtual"><scope>vt::util::json::InputIterator</scope><name>operator!=</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_input_iterator_1a609b10dde4627f8a0bf5211eaf87210b" prot="public" virt="non-virtual"><scope>vt::util::json::InputIterator</scope><name>operator*</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_input_iterator_1af098fb45d489bf7213638f814204d1cd" prot="public" virt="non-virtual"><scope>vt::util::json::InputIterator</scope><name>operator++</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_input_iterator_1a508d1d9795a5002f52471321197e4174" prot="public" virt="non-virtual"><scope>vt::util::json::InputIterator</scope><name>pointer</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_input_iterator_1ac178e9ca2ff42160d54fd0b9080c1d40" prot="public" virt="non-virtual"><scope>vt::util::json::InputIterator</scope><name>reference</name></member>
      <member refid="structvt_1_1util_1_1json_1_1_input_iterator_1a5f85f8a6e8a9aded85bbc4927cdb754e" prot="public" virt="non-virtual"><scope>vt::util::json::InputIterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
