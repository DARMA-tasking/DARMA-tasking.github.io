<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacevt_1_1vrt_1_1collection_1_1balance" kind="namespace" language="C++">
    <compoundname>vt::vrt::collection::balance</compoundname>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_collection_l_b_data" prot="public">vt::vrt::collection::balance::CollectionLBData</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_collect_stats_msg" prot="public">vt::vrt::collection::balance::CollectStatsMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_comm_overhead" prot="public">vt::vrt::collection::balance::CommOverhead</innerclass>
    <innerclass refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model" prot="public">vt::vrt::collection::balance::ComposedModel</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_concatenated_iterator" prot="public">vt::vrt::collection::balance::ConcatenatedIterator</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_config_entry" prot="public">vt::vrt::collection::balance::ConfigEntry</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter" prot="public">vt::vrt::collection::balance::Converter</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01bool_01_4" prot="public">vt::vrt::collection::balance::Converter&lt; bool &gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01double_01_4" prot="public">vt::vrt::collection::balance::Converter&lt; double &gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01int32__t_01_4" prot="public">vt::vrt::collection::balance::Converter&lt; int32_t &gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01std_1_1string_01_4" prot="public">vt::vrt::collection::balance::Converter&lt; std::string &gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_dual_load_map_object_iterator" prot="public">vt::vrt::collection::balance::DualLoadMapObjectIterator</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_filter_iterator" prot="public">vt::vrt::collection::balance::FilterIterator</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_invoke_msg" prot="public">vt::vrt::collection::balance::InvokeMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_lazy_migration_msg" prot="public">vt::vrt::collection::balance::LazyMigrationMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_args_enum_converter" prot="public">vt::vrt::collection::balance::LBArgsEnumConverter</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_holder" prot="public">vt::vrt::collection::balance::LBDataHolder</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_data_restart_reader" prot="public">vt::vrt::collection::balance::LBDataRestartReader</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_manager" prot="public">vt::vrt::collection::balance::LBManager</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_linear_model" prot="public">vt::vrt::collection::balance::LinearModel</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_data" prot="public">vt::vrt::collection::balance::LoadData</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_map_object_iterator" prot="public">vt::vrt::collection::balance::LoadMapObjectIterator</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" prot="public">vt::vrt::collection::balance::LoadModel</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_msg" prot="public">vt::vrt::collection::balance::LoadMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_msg_async" prot="public">vt::vrt::collection::balance::LoadMsgAsync</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_summary" prot="public">vt::vrt::collection::balance::LoadSummary</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases" prot="public">vt::vrt::collection::balance::MultiplePhases</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_naive_persistence" prot="public">vt::vrt::collection::balance::NaivePersistence</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_l_b_data" prot="public">vt::vrt::collection::balance::NodeLBData</innerclass>
    <innerclass refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_norm" prot="public">vt::vrt::collection::balance::Norm</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_object_iterator" prot="public">vt::vrt::collection::balance::ObjectIterator</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_object_iterator_impl" prot="public">vt::vrt::collection::balance::ObjectIteratorImpl</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection" prot="public">vt::vrt::collection::balance::PerCollection</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_persistence_median_last_n" prot="public">vt::vrt::collection::balance::PersistenceMedianLastN</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset" prot="public">vt::vrt::collection::balance::PhaseOffset</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_proposed_reassignment" prot="public">vt::vrt::collection::balance::ProposedReassignment</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data" prot="public">vt::vrt::collection::balance::RawData</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_config" prot="public">vt::vrt::collection::balance::ReadLBConfig</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_reassignment" prot="public">vt::vrt::collection::balance::Reassignment</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_reassignment_msg" prot="public">vt::vrt::collection::balance::ReassignmentMsg</innerclass>
    <innerclass refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_select_subphases" prot="public">vt::vrt::collection::balance::SelectSubphases</innerclass>
    <innerclass refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_weighted_communication_volume" prot="public">vt::vrt::collection::balance::WeightedCommunicationVolume</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_weighted_messages" prot="public">vt::vrt::collection::balance::WeightedMessages</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5c" prot="public" static="no">
        <name>LBType</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5cad12268b59a4f1098aee001f9a1750020" prot="public">
          <name>NoLB</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5ca1dbdecf7c5022a1b5ebe56c7d005b1b4" prot="public">
          <name>GreedyLB</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5ca3ec40a010851f7bcfceacfb5142d8fd2" prot="public">
          <name>HierarchicalLB</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5ca5b1f9f84eddef3d97637267cbf0f7039" prot="public">
          <name>RotateLB</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5caffc8c84817fe6cfb4e7a75f140832be6" prot="public">
          <name>TemperedLB</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5ca819964866ff64fb1e1c44eeaba3f37a0" prot="public">
          <name>OfflineLB</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5ca6aadc0284cdcb7afaf7043f5d49179b9" prot="public">
          <name>RandomLB</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5ca625d131077e872c91ccbafacc7ebf63f" prot="public">
          <name>TestSerializationLB</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5cafc12abb10c19518f2ab45ca2cb130e47" prot="public">
          <name>TemperedWMin</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_type.h" line="55" column="1" bodyfile="src/vt/vrt/collection/balance/lb_type.h" bodystart="55" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" prot="public" static="no">
        <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">elm::ElementIDStruct</ref></type>
        <definition>using vt::vrt::collection::balance::ElementIDStruct = typedef elm::ElementIDStruct</definition>
        <argsstring></argsstring>
        <name>ElementIDStruct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="63" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a592736f733df4f90856df90a1fd08905" prot="public" static="no">
        <type><ref refid="namespacevt_1_1elm_1a63afb64985b41b7b6dcf2f01336391f8" kindref="member">elm::ElementIDType</ref></type>
        <definition>using vt::vrt::collection::balance::ElementIDType = typedef elm::ElementIDType</definition>
        <argsstring></argsstring>
        <name>ElementIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="64" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a01ee1fb0ae2da1d2ab7fdca3be9ae351" prot="public" static="no">
        <type><ref refid="namespacevt_1_1elm_1a38487cb8896b9b4763efa9022fab560e" kindref="member">elm::CommMapType</ref></type>
        <definition>using vt::vrt::collection::balance::CommMapType = typedef elm::CommMapType</definition>
        <argsstring></argsstring>
        <name>CommMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="65" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a5339303db2e1ce964d783a53fd74e6b1" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_summary" kindref="compound">LoadSummary</ref> &gt;</type>
        <definition>using vt::vrt::collection::balance::LoadMapType = typedef std::unordered_map&lt;ElementIDStruct, LoadSummary&gt;</definition>
        <argsstring></argsstring>
        <name>LoadMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="115" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a8bdadb2583f128dd256e7d5a10826542" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>, std::vector&lt; <ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref> &gt; &gt;</type>
        <definition>using vt::vrt::collection::balance::SubphaseLoadMapType = typedef std::unordered_map&lt;ElementIDStruct, std::vector&lt;TimeType&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>SubphaseLoadMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="116" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a5794b6bc763c88c78228074bd0d1a50f" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref>, std::unordered_map&lt; std::string, std::variant&lt; int, double, std::string &gt; &gt; &gt;</type>
        <definition>using vt::vrt::collection::balance::DataMapType = typedef std::unordered_map&lt; ElementIDStruct, std::unordered_map&lt;std::string, std::variant&lt;int, double, std::string&gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>DataMapType</name>
        <briefdescription>
<para>User-defined LB values map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="119" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac1bb9eee8129549177880dbb4e5f6a34" prot="public" static="no">
        <type>int64_t</type>
        <definition>using vt::vrt::collection::balance::ConfigIndex = typedef int64_t</definition>
        <argsstring></argsstring>
        <name>ConfigIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/read_lb.h" line="57" column="1" bodyfile="src/vt/vrt/collection/balance/read_lb.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a52ea24fc34efe0530364f4c50eec8b40" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a592736f733df4f90856df90a1fd08905" kindref="member">ElementIDType</ref> const</type>
        <definition>constexpr ElementIDType const vt::vrt::collection::balance::no_element_id</definition>
        <argsstring></argsstring>
        <name>no_element_id</name>
        <initializer>= elm::no_element_id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="67" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1balance_1acd690cbf213e760e9b40e721bdeeeb4e" prot="public" static="yes" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5c" kindref="member">LBType</ref>, std::string &gt;</type>
        <definition>std::unordered_map&lt;LBType,std::string&gt; vt::vrt::collection::balance::lb_names_</definition>
        <argsstring></argsstring>
        <name>lb_names_</name>
        <initializer>= {
  {<ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5cad12268b59a4f1098aee001f9a1750020" kindref="member">LBType::NoLB</ref>,                std::string{&quot;NoLB&quot;               }},



  {LBType::GreedyLB,            std::string{&quot;GreedyLB&quot;           }},
  {LBType::HierarchicalLB,      std::string{&quot;HierarchicalLB&quot;     }},
  {LBType::RotateLB,            std::string{&quot;RotateLB&quot;           }},
  {LBType::TemperedLB,          std::string{&quot;TemperedLB&quot;         }},
  {LBType::OfflineLB,           std::string{&quot;OfflineLB&quot;          }},
  {LBType::RandomLB,            std::string{&quot;RandomLB&quot;           }},
  {LBType::TestSerializationLB, std::string{&quot;TestSerializationLB&quot;}},
  {LBType::TemperedWMin,        std::string{&quot;TemperedWMin&quot;       }},
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_type.cc" line="51" column="1" bodyfile="src/vt/vrt/collection/balance/lb_type.cc" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1balance_1aaed7e09146a45c2932ca185a55161723" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto vt::vrt::collection::balance::param_str</definition>
        <argsstring></argsstring>
        <name>param_str</name>
        <initializer>= [](
  std::map&lt;std::string,std::string&gt; const&amp; params
) -&gt; std::string {
  if (params.empty()) {
    return &quot;&quot;;
  }

  std::stringstream ss;
  ss &lt;&lt; &quot; with arguments `&quot;;
  for (auto const&amp; param : params) {
    ss &lt;&lt; fmt::format(&quot;{}={} &quot;,
      <ref refid="namespacevt_1_1debug_1add365336d7aa2053b5b7588ccad48ac7" kindref="member">vt::debug::emph</ref>(param.first),
      <ref refid="namespacevt_1_1debug_1add365336d7aa2053b5b7588ccad48ac7" kindref="member">vt::debug::emph</ref>(param.second));
  }
  ss.seekp(-1, ss.cur);
  ss &lt;&lt; &apos;`&apos;;
  return ss.str();
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/read_lb.cc" line="296" column="1" bodyfile="src/vt/vrt/collection/balance/read_lb.cc" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1balance_1af2f6674ecc7191ddbfe31e87569fe334" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto vt::vrt::collection::balance::excluded_str</definition>
        <argsstring></argsstring>
        <name>excluded_str</name>
        <initializer>= [](<ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1ac1bb9eee8129549177880dbb4e5f6a34" kindref="member">ConfigIndex</ref> idx) -&gt; std::string {
  std::stringstream ss;
  auto exact_entries = <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_config_1a5e32057d53bfad17ba659a57b810c559" kindref="member">ReadLBConfig::getExactEntries</ref>();
  auto max_idx = exact_entries.empty() ? 0 : exact_entries.rbegin()-&gt;first;

  for (auto k = 1; k*idx &lt;= max_idx; k++) {
    auto next_entry = <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_config_1a2811ea4fc680cc4dfe94d8c9160f7514" kindref="member">ReadLBConfig::entry</ref>(k*idx);
    if (next_entry != nullptr and next_entry-&gt;getIdx() != idx) {
      ss &lt;&lt; fmt::format(&quot;{}, &quot;, <ref refid="namespacevt_1_1debug_1add365336d7aa2053b5b7588ccad48ac7" kindref="member">debug::emph</ref>(std::to_string(k*idx)));
    }
  }
  std::string s = ss.str();
  return s.empty() ? s : s.substr(0, s.size() - 2);
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/read_lb.cc" line="315" column="1" bodyfile="src/vt/vrt/collection/balance/read_lb.cc" bodystart="315" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1ae3bc5e1c68d2f55908748501fcba9146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_summary" kindref="compound">LoadSummary</ref></type>
        <definition>LoadSummary vt::vrt::collection::balance::getObjectLoads</definition>
        <argsstring>(std::shared_ptr&lt; LoadModel &gt; model, ElementIDStruct object, PhaseOffset when)</argsstring>
        <name>getObjectLoads</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" kindref="compound">LoadModel</ref> &gt;</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset" kindref="compound">PhaseOffset</ref></type>
          <declname>when</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.cc" line="54" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.cc" bodystart="54" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a5e4d4bdd2fceaebcb89d669b8a1b2361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_summary" kindref="compound">LoadSummary</ref></type>
        <definition>LoadSummary vt::vrt::collection::balance::getObjectLoads</definition>
        <argsstring>(LoadModel *model, ElementIDStruct object, PhaseOffset when)</argsstring>
        <name>getObjectLoads</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" kindref="compound">LoadModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset" kindref="compound">PhaseOffset</ref></type>
          <declname>when</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.cc" line="60" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.cc" bodystart="60" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a458d9ee80526c682a9ece08ec4073ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_summary" kindref="compound">LoadSummary</ref></type>
        <definition>LoadSummary vt::vrt::collection::balance::getObjectRawLoads</definition>
        <argsstring>(std::shared_ptr&lt; LoadModel &gt; model, ElementIDStruct object, PhaseOffset when)</argsstring>
        <name>getObjectRawLoads</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" kindref="compound">LoadModel</ref> &gt;</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset" kindref="compound">PhaseOffset</ref></type>
          <declname>when</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.cc" line="76" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.cc" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a05566d60449203a260750b0ab3ab2834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_summary" kindref="compound">LoadSummary</ref></type>
        <definition>LoadSummary vt::vrt::collection::balance::getObjectRawLoads</definition>
        <argsstring>(LoadModel *model, ElementIDStruct object, PhaseOffset when)</argsstring>
        <name>getObjectRawLoads</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" kindref="compound">LoadModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a9f5b53fafb270212279a4757d2c4cd28" kindref="member">ElementIDStruct</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset" kindref="compound">PhaseOffset</ref></type>
          <declname>when</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.cc" line="82" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.cc" bodystart="82" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a3e23892df34e34f78bfa995cad0aa98e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_summary" kindref="compound">LoadSummary</ref></type>
        <definition>LoadSummary vt::vrt::collection::balance::getNodeLoads</definition>
        <argsstring>(std::shared_ptr&lt; LoadModel &gt; model, PhaseOffset when)</argsstring>
        <name>getNodeLoads</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" kindref="compound">LoadModel</ref> &gt;</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset" kindref="compound">PhaseOffset</ref></type>
          <declname>when</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.cc" line="100" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.cc" bodystart="100" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a36a9f7b402e41e88d3840df04e39eb6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::applyReassignment</definition>
        <argsstring>(const std::shared_ptr&lt; const balance::Reassignment &gt; &amp;reassignment)</argsstring>
        <name>applyReassignment</name>
        <param>
          <type>const std::shared_ptr&lt; const <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_reassignment" kindref="compound">balance::Reassignment</ref> &gt; &amp;</type>
          <declname>reassignment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.cc" line="114" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.cc" bodystart="114" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a4b385056c706c7325c54963e7d9a1b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_data" kindref="compound">balance::LoadData</ref></type>
        <definition>balance::LoadData vt::vrt::collection::balance::reduceVec</definition>
        <argsstring>(lb::Statistic stat, std::vector&lt; balance::LoadData &gt; &amp;&amp;vec)</argsstring>
        <name>reduceVec</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1" kindref="member">lb::Statistic</ref></type>
          <declname>stat</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_data" kindref="compound">balance::LoadData</ref> &gt; &amp;&amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_invoke/lb_manager.cc" line="607" column="1" bodyfile="src/vt/vrt/collection/balance/lb_invoke/lb_manager.cc" bodystart="607" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac3a36cc89a7a64a5a0dc703562b5151f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b_1a83eb4daec14edfb8780422e95b8e38d3" kindref="member">lb::BaseLB::ElementCommType</ref> &gt;</type>
        <definition>std::unordered_map&lt;NodeType, lb::BaseLB::ElementCommType&gt; vt::vrt::collection::balance::getSharedEdges</definition>
        <argsstring>(elm::CommMapType const &amp;comm_data)</argsstring>
        <name>getSharedEdges</name>
        <param>
          <type><ref refid="namespacevt_1_1elm_1a38487cb8896b9b4763efa9022fab560e" kindref="member">elm::CommMapType</ref> const &amp;</type>
          <declname>comm_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_invoke/lb_manager.cc" line="777" column="1" bodyfile="src/vt/vrt/collection/balance/lb_invoke/lb_manager.cc" bodystart="777" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1adb94fe32f6565b52ab18e5e0131c48b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::balance::makeGraphSymmetric</definition>
        <argsstring>(PhaseType phase, objgroup::proxy::Proxy&lt; lb::BaseLB &gt; proxy)</argsstring>
        <name>makeGraphSymmetric</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">objgroup::proxy::Proxy</ref>&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b" kindref="compound">lb::BaseLB</ref> &gt;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_invoke/lb_manager.cc" line="817" column="1" bodyfile="src/vt/vrt/collection/balance/lb_invoke/lb_manager.cc" bodystart="817" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1ab24424d5cc677e1c6dfe67d5e03efc70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5c" kindref="member">LBType</ref>, std::string &gt; &amp;</type>
        <definition>std::unordered_map&lt; LBType, std::string &gt; &amp; vt::vrt::collection::balance::get_lb_names</definition>
        <argsstring>()</argsstring>
        <name>get_lb_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_type.cc" line="66" column="1" bodyfile="src/vt/vrt/collection/balance/lb_type.cc" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a00d08e980a291c93c4c8b34101e7cd3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a592736f733df4f90856df90a1fd08905" kindref="member">ElementIDType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a592736f733df4f90856df90a1fd08905" kindref="member">ElementIDType</ref> &gt;</type>
        <definition>std::pair&lt;ElementIDType, ElementIDType&gt; vt::vrt::collection::balance::getRecvSendDirection</definition>
        <argsstring>(elm::CommKeyType const &amp;comm)</argsstring>
        <name>getRecvSendDirection</name>
        <param>
          <type><ref refid="namespacevt_1_1elm_1a89067ebf8407548591583dd2f60b53b5" kindref="member">elm::CommKeyType</ref> const &amp;</type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_lb_data.cc" line="245" column="1" bodyfile="src/vt/vrt/collection/balance/node_lb_data.cc" bodystart="245" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a605ea184edf7f99b0022f960f71bf4d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vt::vrt::collection::balance::eatWhitespace</definition>
        <argsstring>(std::ifstream &amp;file)</argsstring>
        <name>eatWhitespace</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/read_lb.cc" line="131" column="1" bodyfile="src/vt/vrt/collection/balance/read_lb.cc" bodystart="131" bodyend="136"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/elm/elm_lb_data.h" line="51" column="1"/>
  </compounddef>
</doxygen>
