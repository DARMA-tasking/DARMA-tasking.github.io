<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacevt_1_1vrt_1_1collection_1_1balance" kind="namespace" language="C++">
    <compoundname>vt::vrt::collection::balance</compoundname>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_comm_overhead" prot="public">vt::vrt::collection::balance::CommOverhead</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_comm_volume" prot="public">vt::vrt::collection::balance::CommVolume</innerclass>
    <innerclass refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_composed_model" prot="public">vt::vrt::collection::balance::ComposedModel</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter" prot="public">vt::vrt::collection::balance::Converter</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01bool_01_4" prot="public">vt::vrt::collection::balance::Converter&lt; bool &gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01double_01_4" prot="public">vt::vrt::collection::balance::Converter&lt; double &gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01int32__t_01_4" prot="public">vt::vrt::collection::balance::Converter&lt; int32_t &gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_converter_3_01std_1_1string_01_4" prot="public">vt::vrt::collection::balance::Converter&lt; std::string &gt;</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_element_stats" prot="public">vt::vrt::collection::balance::ElementStats</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_gossip_msg" prot="public">vt::vrt::collection::balance::GossipMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_invoke_msg" prot="public">vt::vrt::collection::balance::InvokeMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_lazy_migration_msg" prot="public">vt::vrt::collection::balance::LazyMigrationMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_comm_key" prot="public">vt::vrt::collection::balance::LBCommKey</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_listener" prot="public">vt::vrt::collection::balance::LBListener</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_manager" prot="public">vt::vrt::collection::balance::LBManager</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_linear_model" prot="public">vt::vrt::collection::balance::LinearModel</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_load_data" prot="public">vt::vrt::collection::balance::LoadData</innerclass>
    <innerclass refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_load_model" prot="public">vt::vrt::collection::balance::LoadModel</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_multiple_phases" prot="public">vt::vrt::collection::balance::MultiplePhases</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_naive_persistence" prot="public">vt::vrt::collection::balance::NaivePersistence</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats" prot="public">vt::vrt::collection::balance::NodeStats</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_node_stats_msg" prot="public">vt::vrt::collection::balance::NodeStatsMsg</innerclass>
    <innerclass refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_norm" prot="public">vt::vrt::collection::balance::Norm</innerclass>
    <innerclass refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_object_iterator" prot="public">vt::vrt::collection::balance::ObjectIterator</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_per_collection" prot="public">vt::vrt::collection::balance::PerCollection</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_persistence_median_last_n" prot="public">vt::vrt::collection::balance::PersistenceMedianLastN</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_msg_base" prot="public">vt::vrt::collection::balance::PhaseMsgBase</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_offset" prot="public">vt::vrt::collection::balance::PhaseOffset</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_raw_data" prot="public">vt::vrt::collection::balance::RawData</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec" prot="public">vt::vrt::collection::balance::ReadLBSpec</innerclass>
    <innerclass refid="classvt_1_1vrt_1_1collection_1_1balance_1_1_select_subphases" prot="public">vt::vrt::collection::balance::SelectSubphases</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_spec_entry" prot="public">vt::vrt::collection::balance::SpecEntry</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_stats_restart_reader" prot="public">vt::vrt::collection::balance::StatsRestartReader</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a9cc6c6884ca0416dae824e9204093c57" prot="public" static="no">
        <name>CommCategory</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1a9cc6c6884ca0416dae824e9204093c57a95aeb71ffd419cc14c6929f9dcd6cdff" prot="public">
          <name>SendRecv</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1a9cc6c6884ca0416dae824e9204093c57abae8da2cdb9a00dd6dc7b7e642ff8192" prot="public">
          <name>CollectionToNode</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1a9cc6c6884ca0416dae824e9204093c57ae5ac0d75517cea8a327fc5252da63e0b" prot="public">
          <name>NodeToCollection</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1a9cc6c6884ca0416dae824e9204093c57abe55b6387170df0ca68f41225268e842" prot="public">
          <name>Broadcast</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1a9cc6c6884ca0416dae824e9204093c57acf4b5610366267918ea6dc2def3edd13" prot="public">
          <name>CollectionToNodeBcast</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1a9cc6c6884ca0416dae824e9204093c57ae78a087708e2798bf753815e58e0d09a" prot="public">
          <name>NodeToCollectionBcast</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1a9cc6c6884ca0416dae824e9204093c57a057b8dfc0741801e337e981d77b4abce" prot="public">
          <name>CollectiveToCollectionBcast</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_comm.h" line="55" column="1" bodyfile="src/vt/vrt/collection/balance/lb_comm.h" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5c" prot="public" static="no">
        <name>LBType</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5cad12268b59a4f1098aee001f9a1750020" prot="public">
          <name>NoLB</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5ca1dbdecf7c5022a1b5ebe56c7d005b1b4" prot="public">
          <name>GreedyLB</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5ca3ec40a010851f7bcfceacfb5142d8fd2" prot="public">
          <name>HierarchicalLB</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5ca5b1f9f84eddef3d97637267cbf0f7039" prot="public">
          <name>RotateLB</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5caebdcdfb04a6f0274f7af8471f4aaace5" prot="public">
          <name>GossipLB</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5cabe5786565be3f6ef20bb58481695b652" prot="public">
          <name>StatsMapLB</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5ca6aadc0284cdcb7afaf7043f5d49179b9" prot="public">
          <name>RandomLB</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_type.h" line="56" column="1" bodyfile="src/vt/vrt/collection/balance/lb_type.h" bodystart="56" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a01c9a1060d83d052604a3ff12918033a" prot="public" static="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_l_b_comm_key" kindref="compound">LBCommKey</ref></type>
        <definition>using vt::vrt::collection::balance::CommKeyType = typedef LBCommKey</definition>
        <argsstring></argsstring>
        <name>CommKeyType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_comm.h" line="148" column="1" bodyfile="src/vt/vrt/collection/balance/lb_comm.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a0772d7dd137393e9874b9f8caa96d420" prot="public" static="no">
        <type>double</type>
        <definition>using vt::vrt::collection::balance::CommBytesType = typedef double</definition>
        <argsstring></argsstring>
        <name>CommBytesType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_comm.h" line="149" column="1" bodyfile="src/vt/vrt/collection/balance/lb_comm.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a10860c956804d644db54a16012352728" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a01c9a1060d83d052604a3ff12918033a" kindref="member">CommKeyType</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_comm_volume" kindref="compound">CommVolume</ref> &gt;</type>
        <definition>using vt::vrt::collection::balance::CommMapType = typedef std::unordered_map&lt;CommKeyType,CommVolume&gt;</definition>
        <argsstring></argsstring>
        <name>CommMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_comm.h" line="171" column="1" bodyfile="src/vt/vrt/collection/balance/lb_comm.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" prot="public" static="no">
        <type>uint64_t</type>
        <definition>using vt::vrt::collection::balance::ElementIDType = typedef uint64_t</definition>
        <argsstring></argsstring>
        <name>ElementIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="57" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a45306ee4bf38fe3fb586d1ee2fa3d147" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref>, <ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref> &gt;</type>
        <definition>using vt::vrt::collection::balance::LoadMapType = typedef std::unordered_map&lt;ElementIDType,TimeType&gt;</definition>
        <argsstring></argsstring>
        <name>LoadMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="61" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a3d91523158c1025b7b665240072f3b7e" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref>, std::vector&lt; <ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref> &gt; &gt;</type>
        <definition>using vt::vrt::collection::balance::SubphaseLoadMapType = typedef std::unordered_map&lt;ElementIDType, std::vector&lt;TimeType&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>SubphaseLoadMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="62" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a7120dc064f6e8c4157a5f4c81b825393" prot="public" static="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_msg_base" kindref="compound">PhaseMsgBase</ref>&lt; ColT, <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_message" kindref="compound">CollectionMessage</ref>&lt; ColT &gt; &gt;</type>
        <definition>using vt::vrt::collection::balance::PhaseMsg = typedef PhaseMsgBase&lt;ColT,CollectionMessage&lt;ColT&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>PhaseMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/phase_msg.h" line="80" column="1" bodyfile="src/vt/vrt/collection/balance/phase_msg.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a04cf83e524629461fafc8d349af8ac8a" prot="public" static="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_phase_msg_base" kindref="compound">PhaseMsgBase</ref>&lt; ColT, <ref refid="namespacevt_1_1collective_1a28b82d5d48c9bc6e4fd738fcbf9e0f62" kindref="member">collective::ReduceTMsg</ref>&lt; <ref refid="namespacevt_1_1collective_1af988b64711231f96d33ebfaf891e52a4" kindref="member">collective::NoneType</ref> &gt; &gt;</type>
        <definition>using vt::vrt::collection::balance::PhaseReduceMsg = typedef PhaseMsgBase&lt; ColT,collective::ReduceTMsg&lt;collective::NoneType&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>PhaseReduceMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/phase_msg.h" line="83" column="1" bodyfile="src/vt/vrt/collection/balance/phase_msg.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a72a5e0d9936ddf57f8e6c64e0e9fd123" prot="public" static="no">
        <type>int64_t</type>
        <definition>using vt::vrt::collection::balance::SpecIndex = typedef int64_t</definition>
        <argsstring></argsstring>
        <name>SpecIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/read_lb.h" line="58" column="1" bodyfile="src/vt/vrt/collection/balance/read_lb.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a52ea24fc34efe0530364f4c50eec8b40" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref> const</type>
        <definition>constexpr ElementIDType const vt::vrt::collection::balance::no_element_id</definition>
        <argsstring></argsstring>
        <name>no_element_id</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="59" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a25f2d26f8832c24be922ebbb2cd7c119" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5c" kindref="member">LBType</ref>, std::string &gt;</type>
        <definition>std::unordered_map&lt; LBType, std::string &gt; vt::vrt::collection::balance::lb_names_</definition>
        <argsstring></argsstring>
        <name>lb_names_</name>
        <initializer>= {
  {<ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5cad12268b59a4f1098aee001f9a1750020" kindref="member">LBType::NoLB</ref>,           std::string{&quot;NoLB&quot;          }},



  {LBType::GreedyLB,       std::string{&quot;GreedyLB&quot;      }},
  {LBType::HierarchicalLB, std::string{&quot;HierarchicalLB&quot;}},
  {LBType::RotateLB,       std::string{&quot;RotateLB&quot;      }},
  {LBType::GossipLB,       std::string{&quot;GossipLB&quot;      }},
  {LBType::StatsMapLB,     std::string{&quot;StatsMapLB&quot;    }},
  {LBType::RandomLB,       std::string{&quot;RandomLB&quot;      }},
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_type.cc" line="53" column="1" bodyfile="src/vt/vrt/collection/balance/lb_type.cc" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1balance_1aaed7e09146a45c2932ca185a55161723" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto vt::vrt::collection::balance::param_str</definition>
        <argsstring></argsstring>
        <name>param_str</name>
        <initializer>= [](
  std::map&lt;std::string,std::string&gt; const&amp; params
) -&gt; std::string {
  if (params.empty()) {
    return &quot;&quot;;
  }

  std::stringstream ss;
  ss &lt;&lt; &quot; with arguments `&quot;;
  for (auto const&amp; param : params) {
    ss &lt;&lt; fmt::format(&quot;{}={} &quot;,
      <ref refid="namespacevt_1_1debug_1add365336d7aa2053b5b7588ccad48ac7" kindref="member">vt::debug::emph</ref>(param.first),
      <ref refid="namespacevt_1_1debug_1add365336d7aa2053b5b7588ccad48ac7" kindref="member">vt::debug::emph</ref>(param.second));
  }
  ss.seekp(-1, ss.cur);
  ss &lt;&lt; &apos;`&apos;;
  return ss.str();
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/read_lb.cc" line="297" column="1" bodyfile="src/vt/vrt/collection/balance/read_lb.cc" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1balance_1af2f6674ecc7191ddbfe31e87569fe334" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto vt::vrt::collection::balance::excluded_str</definition>
        <argsstring></argsstring>
        <name>excluded_str</name>
        <initializer>= [](<ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a72a5e0d9936ddf57f8e6c64e0e9fd123" kindref="member">SpecIndex</ref> idx) -&gt; std::string {
  std::stringstream ss;
  auto exact_entries = <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1a9a982a88b574472a21a3e574cc6c27ba" kindref="member">ReadLBSpec::getExactEntries</ref>();
  auto max_idx = exact_entries.empty() ? 0 : exact_entries.rbegin()-&gt;first;

  for (auto k = 1; k*idx &lt;= max_idx; k++) {
    auto next_entry = <ref refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_read_l_b_spec_1af9e1e7f7ea03e6a7bc06d38c2ca28544" kindref="member">ReadLBSpec::entry</ref>(k*idx);
    if (next_entry != nullptr and next_entry-&gt;getIdx() != idx) {
      ss &lt;&lt; fmt::format(&quot;{}, &quot;, <ref refid="namespacevt_1_1debug_1add365336d7aa2053b5b7588ccad48ac7" kindref="member">debug::emph</ref>(std::to_string(k*idx)));
    }
  }
  std::string s = ss.str();
  return s.empty() ? s : s.substr(0, s.size() - 2);
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/read_lb.cc" line="316" column="1" bodyfile="src/vt/vrt/collection/balance/read_lb.cc" bodystart="316" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1af20727e3c42016658b1abf7836ead728" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::vrt::collection::balance::objGetNode</definition>
        <argsstring>(ElementIDType const id)</argsstring>
        <name>objGetNode</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref> const</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_comm.h" line="65" column="1" bodyfile="src/vt/vrt/collection/balance/lb_comm.h" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a783d95de203cabd0f599440e9869c313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::balance::serialize</definition>
        <argsstring>(SerializerT &amp;s, LBType lb)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1ac4f99693509affcc67db182d4aad9b5c" kindref="member">LBType</ref></type>
          <declname>lb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_type.h" line="70" column="1" bodyfile="src/vt/vrt/collection/balance/lb_type.h" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a2d79bdb3acf651303e8a8a0b42d75d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a14c8d2c972f2913aa3f1636e5be0a120" kindref="member">ElementIDType</ref> &gt;</type>
        <definition>std::pair&lt;ElementIDType, ElementIDType&gt; vt::vrt::collection::balance::getRecvSendDirection</definition>
        <argsstring>(CommKeyType const &amp;comm)</argsstring>
        <name>getRecvSendDirection</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1balance_1a01c9a1060d83d052604a3ff12918033a" kindref="member">CommKeyType</ref> const &amp;</type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/node_stats.cc" line="234" column="1" bodyfile="src/vt/vrt/collection/balance/node_stats.cc" bodystart="234" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1balance_1a605ea184edf7f99b0022f960f71bf4d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vt::vrt::collection::balance::eatWhitespace</definition>
        <argsstring>(std::ifstream &amp;file)</argsstring>
        <name>eatWhitespace</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/read_lb.cc" line="132" column="1" bodyfile="src/vt/vrt/collection/balance/read_lb.cc" bodystart="132" bodyend="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/runtime/runtime_component_fwd.h" line="94" column="1"/>
  </compounddef>
</doxygen>
