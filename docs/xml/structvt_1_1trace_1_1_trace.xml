<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1trace_1_1_trace" kind="struct" language="C++" prot="public">
    <compoundname>vt::trace::Trace</compoundname>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component" prot="public" virt="non-virtual">vt::runtime::component::Component&lt; Trace &gt;</basecompoundref>
    <includes refid="trace_8h" local="no">trace.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1trace_1_1_trace_1a43306d96a91e49db081eaea016f1dd0a" prot="public" static="no">
        <type><ref refid="structvt_1_1trace_1_1_log" kindref="compound">Log</ref></type>
        <definition>using vt::trace::Trace::LogType =  Log</definition>
        <argsstring></argsstring>
        <name>LogType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="91" column="1" bodyfile="src/vt/trace/trace.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1trace_1_1_trace_1accb35b20499dfdd46e6c79daae9fc265" prot="public" static="no">
        <type><ref refid="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1d" kindref="member">eTraceConstants</ref></type>
        <definition>using vt::trace::Trace::TraceConstantsType =  eTraceConstants</definition>
        <argsstring></argsstring>
        <name>TraceConstantsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="92" column="1" bodyfile="src/vt/trace/trace.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1trace_1_1_trace_1ab8db9218a8ab87f59773fcbf81433787" prot="public" static="no">
        <type>int64_t</type>
        <definition>using vt::trace::Trace::TimeIntegerType =  int64_t</definition>
        <argsstring></argsstring>
        <name>TimeIntegerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="93" column="1" bodyfile="src/vt/trace/trace.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1trace_1_1_trace_1a9d07ee9d9e92f63674da9954cfe9830b" prot="public" static="no">
        <type>std::queue&lt; <ref refid="structvt_1_1trace_1_1_trace_1a43306d96a91e49db081eaea016f1dd0a" kindref="member">LogType</ref> &gt;</type>
        <definition>using vt::trace::Trace::TraceContainerType =  std::queue&lt;LogType&gt;</definition>
        <argsstring></argsstring>
        <name>TraceContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="94" column="1" bodyfile="src/vt/trace/trace.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1trace_1_1_trace_1af27d223028d10a196680513defcef3d6" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structvt_1_1trace_1_1_trace_1a43306d96a91e49db081eaea016f1dd0a" kindref="member">LogType</ref> &gt;</type>
        <definition>using vt::trace::Trace::TraceStackType =  std::vector&lt;LogType&gt;</definition>
        <argsstring></argsstring>
        <name>TraceStackType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="97" column="1" bodyfile="src/vt/trace/trace.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1trace_1_1_trace_1a727542f4171681f2ef03df2c3abce04c" prot="public" static="no">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>using vt::trace::Trace::EventHoldStackType =  std::vector&lt;std::size_t&gt;</definition>
        <argsstring></argsstring>
        <name>EventHoldStackType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="98" column="1" bodyfile="src/vt/trace/trace.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1trace_1_1_trace_1add132ae9df1b7ef820c8082c32b0f839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct Log</definition>
        <argsstring></argsstring>
        <name>Log</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="106" column="1" bodyfile="src/vt/trace/trace.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="structvt_1_1trace_1_1_trace_1a17caa1eeb27fd6a4af8786a7f0679d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void insertNewUserEvent</definition>
        <argsstring>(UserEventIDType event, std::string const &amp;name)</argsstring>
        <name>insertNewUserEvent</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="204" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="305" bodyend="309"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a0f00be1050ef823347cf2d5daaa0e1c4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::trace::Trace::incremental_flush_mode</definition>
        <argsstring></argsstring>
        <name>incremental_flush_mode</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="248" column="1" bodyfile="src/vt/trace/trace.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1aa1bf33a64015c5a67cb7b6f8a8087d67" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1trace_1_1_trace_1a9d07ee9d9e92f63674da9954cfe9830b" kindref="member">TraceContainerType</ref></type>
        <definition>TraceContainerType vt::trace::Trace::traces_</definition>
        <argsstring></argsstring>
        <name>traces_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="251" column="1" bodyfile="src/vt/trace/trace.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1aa115f04475f49fbb780f504560c46367" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1trace_1_1_trace_1af27d223028d10a196680513defcef3d6" kindref="member">TraceStackType</ref></type>
        <definition>TraceStackType vt::trace::Trace::open_events_</definition>
        <argsstring></argsstring>
        <name>open_events_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="252" column="1" bodyfile="src/vt/trace/trace.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a48ea31a71be22303456facfc1bb86cda" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1trace_1_1_trace_1a727542f4171681f2ef03df2c3abce04c" kindref="member">EventHoldStackType</ref></type>
        <definition>EventHoldStackType vt::trace::Trace::event_holds_</definition>
        <argsstring></argsstring>
        <name>event_holds_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="253" column="1" bodyfile="src/vt/trace/trace.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a602b4a23bc05392194862fe61333c5dd" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref></type>
        <definition>TraceEventIDType vt::trace::Trace::cur_event_</definition>
        <argsstring></argsstring>
        <name>cur_event_</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="255" column="1" bodyfile="src/vt/trace/trace.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a632f07e447cc81aaeeb66e786944a5c5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::trace::Trace::enabled_</definition>
        <argsstring></argsstring>
        <name>enabled_</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="256" column="1" bodyfile="src/vt/trace/trace.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a4a15f7071c60dc69afa392a335b28d05" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::trace::Trace::idle_begun_</definition>
        <argsstring></argsstring>
        <name>idle_begun_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="257" column="1" bodyfile="src/vt/trace/trace.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a1ab1dc5822421f7ff32e0de299a56d65" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vt::trace::Trace::start_time_</definition>
        <argsstring></argsstring>
        <name>start_time_</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="258" column="1" bodyfile="src/vt/trace/trace.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a5850927ef50c2074b82dd5a18852850e" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1trace_1_1_user_event_registry" kindref="compound">UserEventRegistry</ref></type>
        <definition>UserEventRegistry vt::trace::Trace::user_event_</definition>
        <argsstring></argsstring>
        <name>user_event_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="259" column="1" bodyfile="src/vt/trace/trace.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a23105afa15b4dc435aa047f76305ece7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::trace::Trace::prog_name_</definition>
        <argsstring></argsstring>
        <name>prog_name_</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="261" column="1" bodyfile="src/vt/trace/trace.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a4acd447be1327ebc5c3df38d5a40e138" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::trace::Trace::trace_name_</definition>
        <argsstring></argsstring>
        <name>trace_name_</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="262" column="1" bodyfile="src/vt/trace/trace.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a5304514e96243ad75d8e2d775eaf40c5" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::trace::Trace::full_trace_name_</definition>
        <argsstring></argsstring>
        <name>full_trace_name_</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="263" column="1" bodyfile="src/vt/trace/trace.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a5f89444a6ab438319c52d00bb6bce470" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::trace::Trace::full_sts_name_</definition>
        <argsstring></argsstring>
        <name>full_sts_name_</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="264" column="1" bodyfile="src/vt/trace/trace.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a92e71504eb0b39de506ce157c1073443" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::trace::Trace::full_dir_name_</definition>
        <argsstring></argsstring>
        <name>full_dir_name_</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="265" column="1" bodyfile="src/vt/trace/trace.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a8bb3cd03753fc88c9c1b20990e254b4e" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1trace_1_1vt__gz_file" kindref="compound">vt_gzFile</ref> &gt;</type>
        <definition>std::unique_ptr&lt;vt_gzFile&gt; vt::trace::Trace::log_file_</definition>
        <argsstring></argsstring>
        <name>log_file_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="266" column="1" bodyfile="src/vt/trace/trace.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a1ee7ce001d317ebb4b30dc04e5902ca4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::trace::Trace::wrote_sts_file_</definition>
        <argsstring></argsstring>
        <name>wrote_sts_file_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="267" column="1" bodyfile="src/vt/trace/trace.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a3469fd513c3de85df68e56299e1e5247" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t vt::trace::Trace::trace_write_count_</definition>
        <argsstring></argsstring>
        <name>trace_write_count_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="268" column="1" bodyfile="src/vt/trace/trace.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a15282e64860d2a553d39396c9c1fe784" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref></type>
        <definition>ObjGroupProxyType vt::trace::Trace::spec_proxy_</definition>
        <argsstring></argsstring>
        <name>spec_proxy_</name>
        <initializer>= vt::no_obj_group</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="270" column="1" bodyfile="src/vt/trace/trace.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1aa24ff46d33eb7fead86a961725589320" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::trace::Trace::trace_enabled_cur_phase_</definition>
        <argsstring></argsstring>
        <name>trace_enabled_cur_phase_</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="271" column="1" bodyfile="src/vt/trace/trace.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1trace_1_1_trace_1a20ab4375701a67ac8b2d01f95b64c395" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::Trace::flush_event_</definition>
        <argsstring></argsstring>
        <name>flush_event_</name>
        <initializer>= no_user_event_id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="272" column="1" bodyfile="src/vt/trace/trace.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a2b736f560ee446cbd84aaf96e25c8d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::trace::Trace::Trace</definition>
        <argsstring>(std::string const &amp;in_prog_name)</argsstring>
        <name>Trace</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in_prog_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="100" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="90" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a80b3426aed07572525ef4834b0c4dedd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>vt::trace::Trace::~Trace</definition>
        <argsstring>()</argsstring>
        <name>~Trace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="102" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="218" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1aaae4bbf6d009229a5c8b9db67a127942" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string vt::trace::Trace::name</definition>
        <argsstring>() override</argsstring>
        <name>name</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_base_component_1a7701485f3539f78d42e6bad47fc7eb78">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="104" column="1" bodyfile="src/vt/trace/trace.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a6825144c1fb635304c957dee8f667b4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vt::trace::Trace::getTraceName</definition>
        <argsstring>() const</argsstring>
        <name>getTraceName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="108" column="1" bodyfile="src/vt/trace/trace.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1af92da7879adc530c72945530b0bfa11d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vt::trace::Trace::getSTSName</definition>
        <argsstring>() const</argsstring>
        <name>getSTSName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="109" column="1" bodyfile="src/vt/trace/trace.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1ae2e8213035c557a769cf0fd1a41533a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vt::trace::Trace::getDirectory</definition>
        <argsstring>() const</argsstring>
        <name>getDirectory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="110" column="1" bodyfile="src/vt/trace/trace.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a24019edd964c0a307008f8d6a0f1f825" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::initialize</definition>
        <argsstring>() override</argsstring>
        <name>initialize</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_1a7f07384d294e59796add9ce6be2d6410">initialize</reimplements>
        <briefdescription>
<para>Empty default overridden initialize method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="112" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="123" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a52cc4e12a7159cf21d8893b961834af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::setupNames</definition>
        <argsstring>(std::string const &amp;in_prog_name)</argsstring>
        <name>setupNames</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in_prog_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="113" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="171" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a8f1a745228757b9d2ece4cd226d9540c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1trace_1_1_trace_processing_tag" kindref="compound">TraceProcessingTag</ref></type>
        <definition>TraceProcessingTag vt::trace::Trace::beginProcessing</definition>
        <argsstring>(TraceEntryIDType const ep, TraceMsgLenType const len, TraceEventIDType const event, NodeType const from_node, uint64_t const idx1=0, uint64_t const idx2=0, uint64_t const idx3=0, uint64_t const idx4=0, double const time=getCurrentTime())</argsstring>
        <name>beginProcessing</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a3c14050715ba9eceaeff51fb3de64f2f" kindref="member">TraceEntryIDType</ref> const</type>
          <declname>ep</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1aeb598f45d67d41db7902e494f2f0ce59" kindref="member">TraceMsgLenType</ref> const</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref> const</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const</type>
          <declname>from_node</declname>
        </param>
        <param>
          <type>uint64_t const</type>
          <declname>idx1</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint64_t const</type>
          <declname>idx2</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint64_t const</type>
          <declname>idx3</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint64_t const</type>
          <declname>idx4</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double const</type>
          <declname>time</declname>
          <defval><ref refid="structvt_1_1trace_1_1_trace_1a04cf6b76b4ced1bc90d246a34c948db5" kindref="member">getCurrentTime</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initiate a paired event. Currently endProcessing MUST be called in the opposite order of beginProcessing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="118" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="448" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a18f66e844acc133fce37c2c9d9f939e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::endProcessing</definition>
        <argsstring>(TraceProcessingTag const &amp;processing_tag, double const time=getCurrentTime())</argsstring>
        <name>endProcessing</name>
        <param>
          <type><ref refid="structvt_1_1trace_1_1_trace_processing_tag" kindref="compound">TraceProcessingTag</ref> const &amp;</type>
          <declname>processing_tag</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>time</declname>
          <defval><ref refid="structvt_1_1trace_1_1_trace_1a04cf6b76b4ced1bc90d246a34c948db5" kindref="member">getCurrentTime</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finalize a paired event. The processing_tag value comes from beginProcessing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="128" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="481" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a0e6566503861138843e7dc0a9ba30180" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::beginSchedulerLoop</definition>
        <argsstring>()</argsstring>
        <name>beginSchedulerLoop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="133" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="531" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1ad7ee4fc8c75874a524ce7cc1501209fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::endSchedulerLoop</definition>
        <argsstring>()</argsstring>
        <name>endSchedulerLoop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="134" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="536" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a530af1b7b48cf389744325f6f7e7f05e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::beginIdle</definition>
        <argsstring>(double const time=getCurrentTime())</argsstring>
        <name>beginIdle</name>
        <param>
          <type>double const</type>
          <declname>time</declname>
          <defval><ref refid="structvt_1_1trace_1_1_trace_1a04cf6b76b4ced1bc90d246a34c948db5" kindref="member">getCurrentTime</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="136" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="550" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a0262f4025460c9d61cac60420e75ef77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::endIdle</definition>
        <argsstring>(double const time=getCurrentTime())</argsstring>
        <name>endIdle</name>
        <param>
          <type>double const</type>
          <declname>time</declname>
          <defval><ref refid="structvt_1_1trace_1_1_trace_1a04cf6b76b4ced1bc90d246a34c948db5" kindref="member">getCurrentTime</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="137" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="572" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a9a106f7f39e605745994d20bb526f8cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::Trace::registerUserEventColl</definition>
        <argsstring>(std::string const &amp;name)</argsstring>
        <name>registerUserEventColl</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="139" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="287" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a99fcca49a5506c3ee5cda67e541e37cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::Trace::registerUserEventRoot</definition>
        <argsstring>(std::string const &amp;name)</argsstring>
        <name>registerUserEventRoot</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="140" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="291" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a1b80a8ca6bebbfbe61f8b119342e14f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
        <definition>UserEventIDType vt::trace::Trace::registerUserEventHash</definition>
        <argsstring>(std::string const &amp;name)</argsstring>
        <name>registerUserEventHash</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="141" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="295" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1ade8d39718f60924f1aeb178ccda56cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::registerUserEventManual</definition>
        <argsstring>(std::string const &amp;name, UserSpecEventIDType id)</argsstring>
        <name>registerUserEventManual</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a70c43e0e1596eea236912d4197d3120a" kindref="member">UserSpecEventIDType</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="142" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="299" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a0a4bbdf7bd3c2b8742cbceb24389a4c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::addUserEvent</definition>
        <argsstring>(UserEventIDType event)</argsstring>
        <name>addUserEvent</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="144" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="311" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a2d9fac6bd71ba67e4f87b7efd7c6c6c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::addUserEventManual</definition>
        <argsstring>(UserSpecEventIDType event)</argsstring>
        <name>addUserEventManual</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a70c43e0e1596eea236912d4197d3120a" kindref="member">UserSpecEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="145" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="331" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1ae57a7ff5517a5bc0694677f10810b545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::addUserEventBracketed</definition>
        <argsstring>(UserEventIDType event, double begin, double end)</argsstring>
        <name>addUserEventBracketed</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>double</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="146" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="346" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1ab0dd676ca3870682b0c52669d3603c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::addUserEventBracketedManual</definition>
        <argsstring>(UserSpecEventIDType event, double begin, double end)</argsstring>
        <name>addUserEventBracketedManual</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a70c43e0e1596eea236912d4197d3120a" kindref="member">UserSpecEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>double</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="147" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="426" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a1264ea508298bfeb6a6ef5e06d9214f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::addUserEventBracketedBegin</definition>
        <argsstring>(UserEventIDType event)</argsstring>
        <name>addUserEventBracketedBegin</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="150" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="368" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a9ed44cd0fb5939013ae30de2aeb8aa0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::addUserEventBracketedEnd</definition>
        <argsstring>(UserEventIDType event)</argsstring>
        <name>addUserEventBracketedEnd</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a5908920d051c144c89f17c69ed262350" kindref="member">UserEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="151" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="388" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1ab6def24560e35a011beb771b2a05894c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::addUserEventBracketedManualBegin</definition>
        <argsstring>(UserSpecEventIDType event)</argsstring>
        <name>addUserEventBracketedManualBegin</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a70c43e0e1596eea236912d4197d3120a" kindref="member">UserSpecEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="152" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="408" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a5de97038ac60bfcdf868c3f32637ef9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::addUserEventBracketedManualEnd</definition>
        <argsstring>(UserSpecEventIDType event)</argsstring>
        <name>addUserEventBracketedManualEnd</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a70c43e0e1596eea236912d4197d3120a" kindref="member">UserSpecEventIDType</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="153" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="417" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a8be5309a84a6d0f99df0eb835fedf3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::addUserNote</definition>
        <argsstring>(std::string const &amp;note)</argsstring>
        <name>addUserNote</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>note</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="154" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="228" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a7f5ede52aa552c2eac88b894853a2efe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::addUserData</definition>
        <argsstring>(int32_t data)</argsstring>
        <name>addUserData</name>
        <param>
          <type>int32_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="155" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="247" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1acb4416918d08379892bcf9ec85621309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::addUserBracketedNote</definition>
        <argsstring>(double const begin, double const end, std::string const &amp;note, TraceEventIDType const event=no_trace_event)</argsstring>
        <name>addUserBracketedNote</name>
        <param>
          <type>double const</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>end</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>note</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref> const</type>
          <declname>event</declname>
          <defval>no_trace_event</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="156" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="266" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1abc497f6fa641ac1c2c20889815b06dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::addMemoryEvent</definition>
        <argsstring>(std::size_t memory, double const time=getCurrentTime())</argsstring>
        <name>addMemoryEvent</name>
        <param>
          <type>std::size_t</type>
          <declname>memory</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>time</declname>
          <defval><ref refid="structvt_1_1trace_1_1_trace_1a04cf6b76b4ced1bc90d246a34c948db5" kindref="member">getCurrentTime</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="161" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="443" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a5b5091197568d7ed104bb40d68b4ddd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref></type>
        <definition>TraceEventIDType vt::trace::Trace::messageCreation</definition>
        <argsstring>(TraceEntryIDType const ep, TraceMsgLenType const len, double const time=getCurrentTime())</argsstring>
        <name>messageCreation</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a3c14050715ba9eceaeff51fb3de64f2f" kindref="member">TraceEntryIDType</ref> const</type>
          <declname>ep</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1aeb598f45d67d41db7902e494f2f0ce59" kindref="member">TraceMsgLenType</ref> const</type>
          <declname>len</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>time</declname>
          <defval><ref refid="structvt_1_1trace_1_1_trace_1a04cf6b76b4ced1bc90d246a34c948db5" kindref="member">getCurrentTime</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="166" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="594" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1ad034b14649101fb530eccfb4e2b958ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref></type>
        <definition>TraceEventIDType vt::trace::Trace::messageCreationBcast</definition>
        <argsstring>(TraceEntryIDType const ep, TraceMsgLenType const len, double const time=getCurrentTime())</argsstring>
        <name>messageCreationBcast</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a3c14050715ba9eceaeff51fb3de64f2f" kindref="member">TraceEntryIDType</ref> const</type>
          <declname>ep</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1aeb598f45d67d41db7902e494f2f0ce59" kindref="member">TraceMsgLenType</ref> const</type>
          <declname>len</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>time</declname>
          <defval><ref refid="structvt_1_1trace_1_1_trace_1a04cf6b76b4ced1bc90d246a34c948db5" kindref="member">getCurrentTime</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="170" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="609" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1aa14d58fb03a226e213f72bb03a13bb9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref></type>
        <definition>TraceEventIDType vt::trace::Trace::messageRecv</definition>
        <argsstring>(TraceEntryIDType const ep, TraceMsgLenType const len, NodeType const from_node, double const time=getCurrentTime())</argsstring>
        <name>messageRecv</name>
        <param>
          <type><ref refid="namespacevt_1_1trace_1a3c14050715ba9eceaeff51fb3de64f2f" kindref="member">TraceEntryIDType</ref> const</type>
          <declname>ep</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1aeb598f45d67d41db7902e494f2f0ce59" kindref="member">TraceMsgLenType</ref> const</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const</type>
          <declname>from_node</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>time</declname>
          <defval><ref refid="structvt_1_1trace_1_1_trace_1a04cf6b76b4ced1bc90d246a34c948db5" kindref="member">getCurrentTime</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="174" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="624" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1ae7ef14764ce87e0ea8baf802db400066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::enableTracing</definition>
        <argsstring>()</argsstring>
        <name>enableTracing</name>
        <briefdescription>
<para>Enable logging of events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="180" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="795" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a54f34dbcf8960de7b319e44ef9b76eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::disableTracing</definition>
        <argsstring>()</argsstring>
        <name>disableTracing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable logging of events. Events already logged may still be written to the trace log. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="184" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="799" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a4b911a4f90a4b6b76c03341db7d94fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::trace::Trace::checkDynamicRuntimeEnabled</definition>
        <argsstring>()</argsstring>
        <name>checkDynamicRuntimeEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="186" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="640" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a06f74f8d2c0c2fb97be14a264fd36a45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::loadAndBroadcastSpec</definition>
        <argsstring>()</argsstring>
        <name>loadAndBroadcastSpec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="188" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="145" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1aa2740411eec8e1dabf10d60f48193e69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::setTraceEnabledCurrentPhase</definition>
        <argsstring>(PhaseType cur_phase)</argsstring>
        <name>setTraceEnabledCurrentPhase</name>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>cur_phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="189" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="658" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a2e07094a48c47b9c591003f0b57305c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::flushTracesFile</definition>
        <argsstring>(bool useGlobalSync)</argsstring>
        <name>flushTracesFile</name>
        <param>
          <type>bool</type>
          <declname>useGlobalSync</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="191" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="824" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1ac764c356a7f81abadfe643d618f22b15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::cleanupTracesFile</definition>
        <argsstring>()</argsstring>
        <name>cleanupTracesFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="192" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="803" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a1e7429d95dbddd9f235a02800d158d36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::trace::Trace::inIdleEvent</definition>
        <argsstring>() const</argsstring>
        <name>inIdleEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="194" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="167" bodyend="169"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a04cf6b76b4ced1bc90d246a34c948db5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double vt::trace::Trace::getCurrentTime</definition>
        <argsstring>()</argsstring>
        <name>getCurrentTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="196" column="1" bodyfile="src/vt/trace/trace.h" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a0b3d919285d2f0f33cebfb2ecbc9ad00" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1trace_1_1_trace_1ab8db9218a8ab87f59773fcbf81433787" kindref="member">TimeIntegerType</ref></type>
        <definition>static TimeIntegerType vt::trace::Trace::timeToInt</definition>
        <argsstring>(double const time)</argsstring>
        <name>timeToInt</name>
        <param>
          <type>double const</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="200" column="1" bodyfile="src/vt/trace/trace.h" bodystart="200" bodyend="202"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a379bc0fb498dc794d75f8b44c6f940b2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::emitTraceForTopProcessingEvent</definition>
        <argsstring>(double const time, TraceConstantsType const type)</argsstring>
        <name>emitTraceForTopProcessingEvent</name>
        <param>
          <type>double const</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1trace_1acf454dfbd581b0ebae895f90b5927a1d" kindref="member">TraceConstantsType</ref> const</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="210" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="774" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a7d0fc2fd82be06ecd24bf4e2b33ac52b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::writeTracesFile</definition>
        <argsstring>(int flush, bool is_incremental_flush)</argsstring>
        <name>writeTracesFile</name>
        <param>
          <type>int</type>
          <declname>flush</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_incremental_flush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="227" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="839" bodyend="890"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a90d5f7400d362293c78f041cb42fce35" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::outputControlFile</definition>
        <argsstring>(std::ofstream &amp;file)</argsstring>
        <name>outputControlFile</name>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="229" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="1090" bodyend="1181"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1add92bd2da3d78dd7ad2f1112583c4596" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a64a7185f3e102df8d8258f263ccd1582" kindref="member">TraceEventIDType</ref></type>
        <definition>TraceEventIDType vt::trace::Trace::logEvent</definition>
        <argsstring>(LogType &amp;&amp;log)</argsstring>
        <name>logEvent</name>
        <param>
          <type><ref refid="structvt_1_1trace_1_1_trace_1a43306d96a91e49db081eaea016f1dd0a" kindref="member">LogType</ref> &amp;&amp;</type>
          <declname>log</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structvt_1_1trace_1_1_log" kindref="compound">Log</ref> an event, returning a trace event ID if accepted or no_trace_event if not accepted (eg. no tracing on node). The log object is invalidated after the call. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="237" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="694" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a502cebeb41c667ecce682191c69dacd5" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::trace::Trace::getTracesSize</definition>
        <argsstring>() const</argsstring>
        <name>getTracesSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="239" column="1" bodyfile="src/vt/trace/trace.h" bodystart="239" bodyend="241"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a97809e03528a6f31a3d990c41edfef0a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::outputTraces</definition>
        <argsstring>(vt_gzFile *file, TraceContainerType &amp;traces, double start_time, int flush)</argsstring>
        <name>outputTraces</name>
        <param>
          <type><ref refid="structvt_1_1trace_1_1vt__gz_file" kindref="compound">vt_gzFile</ref> *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1trace_1_1_trace_1a9d07ee9d9e92f63674da9954cfe9830b" kindref="member">TraceContainerType</ref> &amp;</type>
          <declname>traces</declname>
        </param>
        <param>
          <type>double</type>
          <declname>start_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="216" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="892" bodyend="1088"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a29e34e42f1e80a7a7171397322d3012d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::outputHeader</definition>
        <argsstring>(vt_gzFile *file, NodeType const node, double const start)</argsstring>
        <name>outputHeader</name>
        <param>
          <type><ref refid="structvt_1_1trace_1_1vt__gz_file" kindref="compound">vt_gzFile</ref> *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const</type>
          <declname>node</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="220" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="1183" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1aefd9cc22457e4a086c0705f7a850375c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::trace::Trace::outputFooter</definition>
        <argsstring>(vt_gzFile *file, NodeType const node, double const start)</argsstring>
        <name>outputFooter</name>
        <param>
          <type><ref refid="structvt_1_1trace_1_1vt__gz_file" kindref="compound">vt_gzFile</ref> *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const</type>
          <declname>node</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="223" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="1193" bodyend="1200"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1ad2511af5eeb837db4360a6e30b12aebb" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::trace::Trace::traceWritingEnabled</definition>
        <argsstring>(NodeType node)</argsstring>
        <name>traceWritingEnabled</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="231" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="784" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1trace_1_1_trace_1a6d72cba8cfa150f7c97e99b9d65a1cf7" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::trace::Trace::isStsOutputNode</definition>
        <argsstring>(NodeType node)</argsstring>
        <name>isStsOutputNode</name>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/trace/trace.h" line="232" column="1" bodyfile="src/vt/trace/trace.cc" bodystart="790" bodyend="793"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3002">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="3003" relation="public-inheritance">
        </childnode>
        <childnode refid="3004" relation="public-inheritance">
        </childnode>
        <childnode refid="3005" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3000">
        <label>vt::trace::Trace</label>
        <link refid="structvt_1_1trace_1_1_trace"/>
        <childnode refid="3001" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3003">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
      </node>
      <node id="3004">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="3005">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="3001">
        <label>vt::runtime::component::Component&lt; Trace &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="3002" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3008">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="3009" relation="public-inheritance">
        </childnode>
        <childnode refid="3010" relation="public-inheritance">
        </childnode>
        <childnode refid="3011" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3006">
        <label>vt::trace::Trace</label>
        <link refid="structvt_1_1trace_1_1_trace"/>
        <childnode refid="3007" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3009">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
      </node>
      <node id="3010">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="3011">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="3007">
        <label>vt::runtime::component::Component&lt; Trace &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="3008" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/trace/trace.h" line="90" column="1" bodyfile="src/vt/trace/trace.h" bodystart="90" bodyend="273"/>
    <listofallmembers>
      <member refid="structvt_1_1trace_1_1_trace_1abc497f6fa641ac1c2c20889815b06dbc" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>addMemoryEvent</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1acb4416918d08379892bcf9ec85621309" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>addUserBracketedNote</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a7f5ede52aa552c2eac88b894853a2efe" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>addUserData</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a0a4bbdf7bd3c2b8742cbceb24389a4c0" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>addUserEvent</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1ae57a7ff5517a5bc0694677f10810b545" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>addUserEventBracketed</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a1264ea508298bfeb6a6ef5e06d9214f9" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>addUserEventBracketedBegin</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a9ed44cd0fb5939013ae30de2aeb8aa0e" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>addUserEventBracketedEnd</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1ab0dd676ca3870682b0c52669d3603c11" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>addUserEventBracketedManual</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1ab6def24560e35a011beb771b2a05894c" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>addUserEventBracketedManualBegin</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a5de97038ac60bfcdf868c3f32637ef9e" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>addUserEventBracketedManualEnd</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a2d9fac6bd71ba67e4f87b7efd7c6c6c7" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>addUserEventManual</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a8be5309a84a6d0f99df0eb835fedf3b1" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>addUserNote</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a530af1b7b48cf389744325f6f7e7f05e" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>beginIdle</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a8f1a745228757b9d2ece4cd226d9540c" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>beginProcessing</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a0e6566503861138843e7dc0a9ba30180" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>beginSchedulerLoop</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a4b911a4f90a4b6b76c03341db7d94fdd" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>checkDynamicRuntimeEnabled</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1ac764c356a7f81abadfe643d618f22b15" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>cleanupTracesFile</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ab954824329584814bb652ea810cd62e3" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1a94c1d493860adff6ae69c5eb31bb3f" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>Component</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a602b4a23bc05392194862fe61333c5dd" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>cur_event_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a54f34dbcf8960de7b319e44ef9b76eb0" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>disableTracing</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695" prot="public" virt="virtual"><scope>vt::trace::Trace</scope><name>dumpState</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a379bc0fb498dc794d75f8b44c6f940b2" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>emitTraceForTopProcessingEvent</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a632f07e447cc81aaeeb66e786944a5c5" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>enabled_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1ae7ef14764ce87e0ea8baf802db400066" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>enableTracing</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a0262f4025460c9d61cac60420e75ef77" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>endIdle</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a18f66e844acc133fce37c2c9d9f939e0" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>endProcessing</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1ad7ee4fc8c75874a524ce7cc1501209fd" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>endSchedulerLoop</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a48ea31a71be22303456facfc1bb86cda" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>event_holds_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a727542f4171681f2ef03df2c3abce04c" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>EventHoldStackType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a098e362de01af6054e5491fba671a959" prot="public" virt="virtual"><scope>vt::trace::Trace</scope><name>finalize</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a20ab4375701a67ac8b2d01f95b64c395" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>flush_event_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a2e07094a48c47b9c591003f0b57305c7" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>flushTracesFile</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a92e71504eb0b39de506ce157c1073443" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>full_dir_name_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a5f89444a6ab438319c52d00bb6bce470" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>full_sts_name_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a5304514e96243ad75d8e2d775eaf40c5" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>full_trace_name_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a04cf6b76b4ced1bc90d246a34c948db5" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>getCurrentTime</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1ae2e8213035c557a769cf0fd1a41533a5" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>getDirectory</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1af92da7879adc530c72945530b0bfa11d" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>getSTSName</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a6825144c1fb635304c957dee8f667b4a" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>getTraceName</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a502cebeb41c667ecce682191c69dacd5" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>getTracesSize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aca5f3a7c1db697b6d0ba70de7ff8b887" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>hasCons</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a389e53dbfc20013d66ef09d4f42c0a53" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>hasNoCons</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a4a15f7071c60dc69afa392a335b28d05" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>idle_begun_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a0f00be1050ef823347cf2d5daaa0e1c4" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>incremental_flush_mode</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a1e7429d95dbddd9f235a02800d158d36" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>inIdleEvent</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a24019edd964c0a307008f8d6a0f1f825" prot="public" virt="virtual"><scope>vt::trace::Trace</scope><name>initialize</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a17caa1eeb27fd6a4af8786a7f0679d77" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>insertNewUserEvent</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a6d72cba8cfa150f7c97e99b9d65a1cf7" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>isStsOutputNode</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a06f74f8d2c0c2fb97be14a264fd36a45" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>loadAndBroadcastSpec</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1add132ae9df1b7ef820c8082c32b0f839" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>Log</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a8bb3cd03753fc88c9c1b20990e254b4e" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>log_file_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1add92bd2da3d78dd7ad2f1112583c4596" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>logEvent</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a43306d96a91e49db081eaea016f1dd0a" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>LogType</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a5b5091197568d7ed104bb40d68b4ddd7" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>messageCreation</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1ad034b14649101fb530eccfb4e2b958ce" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>messageCreationBcast</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1aa14d58fb03a226e213f72bb03a13bb9f" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>messageRecv</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1aaae4bbf6d009229a5c8b9db67a127942" prot="public" virt="virtual"><scope>vt::trace::Trace</scope><name>name</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1aa115f04475f49fbb780f504560c46367" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>open_events_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a90d5f7400d362293c78f041cb42fce35" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>outputControlFile</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1aefd9cc22457e4a086c0705f7a850375c" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>outputFooter</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a29e34e42f1e80a7a7171397322d3012d" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>outputHeader</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a97809e03528a6f31a3d990c41edfef0a" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>outputTraces</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a5a15bd0369a9d3765a6c70249bada96f" prot="public" virt="virtual"><scope>vt::trace::Trace</scope><name>pollable</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a23105afa15b4dc435aa047f76305ece7" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>prog_name_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1dab11d9eb5bed8dfd5a3bb8fdf67f5a" prot="public" virt="virtual"><scope>vt::trace::Trace</scope><name>progress</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a9a106f7f39e605745994d20bb526f8cf" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>registerUserEventColl</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a1b80a8ca6bebbfbe61f8b119342e14f7" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>registerUserEventHash</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1ade8d39718f60924f1aeb178ccda56cbc" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>registerUserEventManual</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a99fcca49a5506c3ee5cda67e541e37cc" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>registerUserEventRoot</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1aa2740411eec8e1dabf10d60f48193e69" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>setTraceEnabledCurrentPhase</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a52cc4e12a7159cf21d8893b961834af8" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>setupNames</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a15282e64860d2a553d39396c9c1fe784" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>spec_proxy_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a1ab1dc5822421f7ff32e0de299a56d65" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>start_time_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aad3974307ab3b2e1df389a91310f68c2" prot="public" virt="virtual"><scope>vt::trace::Trace</scope><name>startup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a7d82b061566ef21d6438f4701ae6b733" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>staticInit</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aaada4d04e8adf4cc5556bed2fdcdb321" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>staticInit</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1ab8db9218a8ab87f59773fcbf81433787" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>TimeIntegerType</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a0b3d919285d2f0f33cebfb2ecbc9ad00" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>timeToInt</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a2b736f560ee446cbd84aaf96e25c8d0b" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>Trace</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1aa24ff46d33eb7fead86a961725589320" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>trace_enabled_cur_phase_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a4acd447be1327ebc5c3df38d5a40e138" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>trace_name_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a3469fd513c3de85df68e56299e1e5247" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>trace_write_count_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1accb35b20499dfdd46e6c79daae9fc265" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>TraceConstantsType</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a9d07ee9d9e92f63674da9954cfe9830b" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>TraceContainerType</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1aa1bf33a64015c5a67cb7b6f8a8087d67" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>traces_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1af27d223028d10a196680513defcef3d6" prot="public" virt="non-virtual"><scope>vt::trace::Trace</scope><name>TraceStackType</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1ad2511af5eeb837db4360a6e30b12aebb" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>traceWritingEnabled</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a5850927ef50c2074b82dd5a18852850e" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>user_event_</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a7d0fc2fd82be06ecd24bf4e2b33ac52b" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>writeTracesFile</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a1ee7ce001d317ebb4b30dc04e5902ca4" prot="private" virt="non-virtual"><scope>vt::trace::Trace</scope><name>wrote_sts_file_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a9190b5cb499f9cfdacc1e0bd98a1805a" prot="public" virt="virtual"><scope>vt::trace::Trace</scope><name>~BaseComponent</name></member>
      <member refid="structvt_1_1trace_1_1_trace_1a80b3426aed07572525ef4834b0c4dedd" prot="public" virt="virtual"><scope>vt::trace::Trace</scope><name>~Trace</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
