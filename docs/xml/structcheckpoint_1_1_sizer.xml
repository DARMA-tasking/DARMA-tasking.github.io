<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structcheckpoint_1_1_sizer" kind="struct" language="C++" prot="public">
    <compoundname>checkpoint::Sizer</compoundname>
    <basecompoundref refid="structcheckpoint_1_1_base_serializer" prot="public" virt="non-virtual">checkpoint::BaseSerializer</basecompoundref>
    <includes refid="lib_2checkpoint_2src_2checkpoint_2serializers_2sizer_8h" local="no">sizer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structcheckpoint_1_1_sizer_1a94e13ec6a5656d3b82dc787c00390bf2" prot="private" static="no" mutable="no">
        <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
        <definition>SerialSizeType checkpoint::Sizer::num_bytes_</definition>
        <argsstring></argsstring>
        <name>num_bytes_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Count of bytes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/sizer.h" line="82" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/sizer.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structcheckpoint_1_1_sizer_1a17995329af9eec00859e86c6fabf4890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>checkpoint::Sizer::Sizer</definition>
        <argsstring>()</argsstring>
        <name>Sizer</name>
        <briefdescription>
<para>Construct a sizer. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/sizer.h" line="63" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/sizer.cc" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1_sizer_1a9cabfd6cafb49a79b645663c41e4c74a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
        <definition>SerialSizeType checkpoint::Sizer::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
<para>Get the current size. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/sizer.h" line="70" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/sizer.cc" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1_sizer_1a1141bde0fae75fd8be9ad5187876594d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checkpoint::Sizer::contiguousBytes</definition>
        <argsstring>(void *ptr, SerialSizeType size, SerialSizeType num_elms)</argsstring>
        <name>contiguousBytes</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
          <declname>num_elms</declname>
        </param>
        <briefdescription>
<para>Add contiguous bytes to the sizer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>the element being serialized (not used) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bytes for each element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_elms</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of elements </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/sizer.h" line="79" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/sizer.cc" bodystart="56" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="structcheckpoint_1_1_sizer" kindref="compound">Sizer</ref> serializers for sizing the contents of classes as a preprocessing pass before packing content so a properly sized buffer can be allocated. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3912">
        <label>checkpoint::Sizer</label>
        <link refid="structcheckpoint_1_1_sizer"/>
        <childnode refid="3913" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3913">
        <label>checkpoint::BaseSerializer</label>
        <link refid="structcheckpoint_1_1_base_serializer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3914">
        <label>checkpoint::Sizer</label>
        <link refid="structcheckpoint_1_1_sizer"/>
        <childnode refid="3915" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3915">
        <label>checkpoint::BaseSerializer</label>
        <link refid="structcheckpoint_1_1_base_serializer"/>
      </node>
    </collaborationgraph>
    <location file="lib/checkpoint/src/checkpoint/serializers/sizer.h" line="59" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/sizer.h" bodystart="59" bodyend="83"/>
    <listofallmembers>
      <member refid="structcheckpoint_1_1_base_serializer_1ac1d15d1c529fe82280fd9547b3843541" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>addBytes</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a54ef6d9ab0a03d637822dcdacd146763" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>BaseSerializer</name></member>
      <member refid="structcheckpoint_1_1_sizer_1a1141bde0fae75fd8be9ad5187876594d" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>contiguousBytes</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a7a18f4ba50fcfd8b37c8a6efc459ccde" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>contiguousTyped</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1ae5f1634cea01bf4e28008320fed7be1d" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>countBytes</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a1755296c5fbd3cdc5df3390d20c80fae" prot="protected" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>cur_mode_</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a6e98a837a89de1750749e4ef8742489c" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>DispatcherType</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a09da55de0edbc77e33c2a29b374ebdc1" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>getBuffer</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1ad9a3bf9aa8081b6efdf8a45ba92ef641" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>getMode</name></member>
      <member refid="structcheckpoint_1_1_sizer_1a9cabfd6cafb49a79b645663c41e4c74a" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>getSize</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a2b6d088bf58d9c77f12a959763bb307b" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>getSpotIncrement</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a76960f01f04457bca6a40d91d2c4b486" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>isFootprinting</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a1a91b7c0fc85cbd31356791bbf288b0e" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>isPacking</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a2d28600a09495b5b9d9b90ae27caa708" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>isSizing</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a36efbc9aa78bd2d4b017ac40dacfe9b7" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>isUnpacking</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a5325585631201d413d7992e8916d6f57" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>isVirtualDisabled</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1aaa856a02f204d9c3892810b87671b3e9" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>ModeType</name></member>
      <member refid="structcheckpoint_1_1_sizer_1a94e13ec6a5656d3b82dc787c00390bf2" prot="private" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>num_bytes_</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1ab16e2ffa62f03f8410b116c637bd4adc" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>setVirtualDisabled</name></member>
      <member refid="structcheckpoint_1_1_sizer_1a17995329af9eec00859e86c6fabf4890" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>Sizer</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a375bc80d210beae8ffd46229e800e3a0" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>skip</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1a6ccb8bb1430ac5665aac995b6330bc8a" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>usedBufferSize</name></member>
      <member refid="structcheckpoint_1_1_base_serializer_1acdffc3101eb51baafe4a13939ba23e70" prot="protected" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>virtual_disabled_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
