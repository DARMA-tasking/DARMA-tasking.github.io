<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structcheckpoint_1_1_sizer" kind="struct" language="C++" prot="public">
    <compoundname>checkpoint::Sizer</compoundname>
    <basecompoundref refid="structcheckpoint_1_1_serializer" prot="public" virt="non-virtual">checkpoint::Serializer</basecompoundref>
    <includes refid="lib_2checkpoint_2src_2checkpoint_2serializers_2sizer_8h" local="no">sizer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structcheckpoint_1_1_sizer_1a94e13ec6a5656d3b82dc787c00390bf2" prot="private" static="no" mutable="no">
        <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
        <definition>SerialSizeType checkpoint::Sizer::num_bytes_</definition>
        <argsstring></argsstring>
        <name>num_bytes_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/sizer.h" line="60" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/sizer.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structcheckpoint_1_1_sizer_1a17995329af9eec00859e86c6fabf4890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>checkpoint::Sizer::Sizer</definition>
        <argsstring>()</argsstring>
        <name>Sizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/sizer.h" line="54" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/sizer.cc" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1_sizer_1a9cabfd6cafb49a79b645663c41e4c74a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
        <definition>SerialSizeType checkpoint::Sizer::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/sizer.h" line="56" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/sizer.cc" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structcheckpoint_1_1_sizer_1a815b43e2422239df38ad4e324f1ffec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checkpoint::Sizer::contiguousBytes</definition>
        <argsstring>(void *, SerialSizeType size, SerialSizeType num_elms)</argsstring>
        <name>contiguousBytes</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="namespacecheckpoint_1a083f6674da3f94c2901b18c6d238217c" kindref="member">SerialSizeType</ref></type>
          <declname>num_elms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/serializers/sizer.h" line="57" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/sizer.cc" bodystart="57" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3593">
        <label>checkpoint::Sizer</label>
        <link refid="structcheckpoint_1_1_sizer"/>
        <childnode refid="3594" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3594">
        <label>checkpoint::Serializer</label>
        <link refid="structcheckpoint_1_1_serializer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3595">
        <label>checkpoint::Sizer</label>
        <link refid="structcheckpoint_1_1_sizer"/>
        <childnode refid="3596" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3596">
        <label>checkpoint::Serializer</label>
        <link refid="structcheckpoint_1_1_serializer"/>
      </node>
    </collaborationgraph>
    <location file="lib/checkpoint/src/checkpoint/serializers/sizer.h" line="53" column="1" bodyfile="lib/checkpoint/src/checkpoint/serializers/sizer.h" bodystart="53" bodyend="61"/>
    <listofallmembers>
      <member refid="structcheckpoint_1_1_sizer_1a815b43e2422239df38ad4e324f1ffec0" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>contiguousBytes</name></member>
      <member refid="structcheckpoint_1_1_serializer_1af2f453fc63424918a16ea6024d576a3e" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>contiguousTyped</name></member>
      <member refid="structcheckpoint_1_1_serializer_1a805ae9ce395614512dfb6b0bd2c22881" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>countBytes</name></member>
      <member refid="structcheckpoint_1_1_serializer_1a89a1f207ad5ff75654cb6d48f432be37" prot="protected" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>cur_mode_</name></member>
      <member refid="structcheckpoint_1_1_serializer_1ad8effc5884f1ed37b6b4507422f6d72c" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>DispatcherType</name></member>
      <member refid="structcheckpoint_1_1_serializer_1a6231bd380e02ee8668e7a6efebca2664" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>getBuffer</name></member>
      <member refid="structcheckpoint_1_1_serializer_1a2b22a87a81fb9ff1b00dd96bbe4debe2" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>getMode</name></member>
      <member refid="structcheckpoint_1_1_sizer_1a9cabfd6cafb49a79b645663c41e4c74a" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>getSize</name></member>
      <member refid="structcheckpoint_1_1_serializer_1af2fc82901c31232b7549b20a8732de30" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>getSpotIncrement</name></member>
      <member refid="structcheckpoint_1_1_serializer_1a01f395bfaa39a8311925c71537877378" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>isFootprinting</name></member>
      <member refid="structcheckpoint_1_1_serializer_1aee9d2701f508fff94bad836576443cd9" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>isPacking</name></member>
      <member refid="structcheckpoint_1_1_serializer_1a27e3304ca8c9de113675b7692e5aa65f" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>isSizing</name></member>
      <member refid="structcheckpoint_1_1_serializer_1a3a09ea026ff2c6ddf863f9c1a6463466" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>isUnpacking</name></member>
      <member refid="structcheckpoint_1_1_serializer_1af45e225cdb3a750a06de80a8cd5c6c37" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>isVirtualDisabled</name></member>
      <member refid="structcheckpoint_1_1_serializer_1a4c307e2592dc4224d8a13148109c5764" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>ModeType</name></member>
      <member refid="structcheckpoint_1_1_sizer_1a94e13ec6a5656d3b82dc787c00390bf2" prot="private" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>num_bytes_</name></member>
      <member refid="structcheckpoint_1_1_serializer_1a4007a463384ec96a4c21bd7f049f0be5" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>Serializer</name></member>
      <member refid="structcheckpoint_1_1_serializer_1af57d7cd51e94dd44a5be184456c2d59f" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>setVirtualDisabled</name></member>
      <member refid="structcheckpoint_1_1_sizer_1a17995329af9eec00859e86c6fabf4890" prot="public" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>Sizer</name></member>
      <member refid="structcheckpoint_1_1_serializer_1a46ef3c0da77d80853882a7cad641c2af" prot="protected" virt="non-virtual"><scope>checkpoint::Sizer</scope><name>virtual_disabled_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
