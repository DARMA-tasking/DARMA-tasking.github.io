<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1_epoch_guard" kind="struct" language="C++" prot="public">
    <compoundname>vt::EpochGuard</compoundname>
    <includes refid="epoch__guard_8h" local="no">epoch_guard.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1_epoch_guard_1aecd3303d5b5594b0f19791a472ce515c" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a81d11b28122d43bf9834577e4a06440f" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::EpochGuard::guarded_epoch_</definition>
        <argsstring></argsstring>
        <name>guarded_epoch_</name>
        <initializer>= no_epoch</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/epoch_guard.h" line="102" column="1" bodyfile="src/vt/termination/epoch_guard.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1_epoch_guard_1a89230b0cb27404fe74fd19ba667c54dc" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::EpochGuard::EpochGuard</definition>
        <argsstring>(EpochType ep)</argsstring>
        <name>EpochGuard</name>
        <param>
          <type><ref refid="namespacevt_1a81d11b28122d43bf9834577e4a06440f" kindref="member">EpochType</ref></type>
          <declname>ep</declname>
        </param>
        <briefdescription>
<para>Construct the <ref refid="structvt_1_1_epoch_guard" kindref="compound">EpochGuard</ref> with a given epoch. </para>        </briefdescription>
        <detaileddescription>
<para>The given epoch will be popped when <ref refid="structvt_1_1_epoch_guard" kindref="compound">EpochGuard</ref> is destroyed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ep</parametername>
</parameternamelist>
<parameterdescription>
<para>the epoch to manage</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>ep != vt::no_epoch </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/epoch_guard.h" line="74" column="1" bodyfile="src/vt/termination/epoch_guard.cc" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1_epoch_guard_1a04f94ad13c6c3e709427adea95293ab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::EpochGuard::EpochGuard</definition>
        <argsstring>(const EpochGuard &amp;)=delete</argsstring>
        <name>EpochGuard</name>
        <param>
          <type>const <ref refid="structvt_1_1_epoch_guard" kindref="compound">EpochGuard</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/epoch_guard.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1_epoch_guard_1a0a59db6f3b1d71c397f64a37ed43fd40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::EpochGuard::EpochGuard</definition>
        <argsstring>(EpochGuard &amp;&amp;) noexcept=default</argsstring>
        <name>EpochGuard</name>
        <param>
          <type><ref refid="structvt_1_1_epoch_guard" kindref="compound">EpochGuard</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/epoch_guard.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1_epoch_guard_1adf6677491e5d70a81645216b3cb65d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::EpochGuard::~EpochGuard</definition>
        <argsstring>()</argsstring>
        <name>~EpochGuard</name>
        <briefdescription>
<para>Destroy the <ref refid="structvt_1_1_epoch_guard" kindref="compound">EpochGuard</ref>, popping the managed epoch. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/epoch_guard.h" line="82" column="1" bodyfile="src/vt/termination/epoch_guard.cc" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1_epoch_guard_1adc52bcc301ca61c7cf3d52c725345ee6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1_epoch_guard" kindref="compound">EpochGuard</ref> &amp;</type>
        <definition>EpochGuard&amp; vt::EpochGuard::operator=</definition>
        <argsstring>(const EpochGuard &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structvt_1_1_epoch_guard" kindref="compound">EpochGuard</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/epoch_guard.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1_epoch_guard_1aac8048b562920e1628ee5020d0e29da4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1_epoch_guard" kindref="compound">EpochGuard</ref> &amp;</type>
        <definition>EpochGuard&amp; vt::EpochGuard::operator=</definition>
        <argsstring>(EpochGuard &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1_epoch_guard" kindref="compound">EpochGuard</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/epoch_guard.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1_epoch_guard_1aa0106927b2e50b4be20bee542d264dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::EpochGuard::pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <briefdescription>
<para>Manually pop the managed epoch. </para>        </briefdescription>
        <detaileddescription>
<para>This operation effectively sets the managed epoch to vt::no_epoch </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/epoch_guard.h" line="92" column="1" bodyfile="src/vt/termination/epoch_guard.cc" bodystart="56" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1_epoch_guard_1a41d2d7190be38fe256d6d8476a1f460e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a81d11b28122d43bf9834577e4a06440f" kindref="member">EpochType</ref></type>
        <definition>EpochType vt::EpochGuard::get_epoch</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get_epoch</name>
        <briefdescription>
<para>Obtain a handle to the managed epoch. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the managed epoch, or vt::no_epoch if the managed epoch was popped </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/epoch_guard.h" line="99" column="1" bodyfile="src/vt/termination/epoch_guard.cc" bodystart="63" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An epoch warapper that provides an RAII-style mechanism for owning an epoch for the duration of a scope block. </para>    </briefdescription>
    <detaileddescription>
<para>When <ref refid="structvt_1_1_epoch_guard" kindref="compound">EpochGuard</ref> is created, it pushes the given epoch onto the epoch stack. When <ref refid="structvt_1_1_epoch_guard" kindref="compound">EpochGuard</ref> is destroyed, it pops the epoch. It can explicitly pop the epoch early.</para><para><ref refid="structvt_1_1_epoch_guard" kindref="compound">EpochGuard</ref> is non-copyable.</para><para><simplesect kind="see"><para><ref refid="structvt_1_1messaging_1_1_active_messenger_1ac60a61b85392a5c40d2334919981963a" kindref="member">vt::messaging::ActiveMessenger::pushEpoch</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="structvt_1_1messaging_1_1_active_messenger_1a0ff3c2d9bf6ccd66002679b93821229c" kindref="member">vt::messaging::ActiveMessenger::popEpoch</ref> </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="1716">
        <label>T</label>
      </node>
      <node id="1713">
        <label>vt::EpochGuard</label>
        <link refid="structvt_1_1_epoch_guard"/>
        <childnode refid="1714" relation="usage">
          <edgelabel>guarded_epoch_</edgelabel>
        </childnode>
      </node>
      <node id="1714">
        <label>vt::epoch::EpochType</label>
        <link refid="structvt_1_1epoch_1_1_epoch_type"/>
        <childnode refid="1715" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1715">
        <label>Strong&lt; detail::EpochImplType, detail::no_epoch_impl, detail::EpochImplTag &gt;</label>
        <link refid="structvt_1_1util_1_1strong_1_1detail_1_1_strong"/>
        <childnode refid="1716" relation="usage">
          <edgelabel>v_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/termination/epoch_guard.h" line="63" column="1" bodyfile="src/vt/termination/epoch_guard.h" bodystart="63" bodyend="103"/>
    <listofallmembers>
      <member refid="structvt_1_1_epoch_guard_1a89230b0cb27404fe74fd19ba667c54dc" prot="public" virt="non-virtual"><scope>vt::EpochGuard</scope><name>EpochGuard</name></member>
      <member refid="structvt_1_1_epoch_guard_1a04f94ad13c6c3e709427adea95293ab6" prot="public" virt="non-virtual"><scope>vt::EpochGuard</scope><name>EpochGuard</name></member>
      <member refid="structvt_1_1_epoch_guard_1a0a59db6f3b1d71c397f64a37ed43fd40" prot="public" virt="non-virtual"><scope>vt::EpochGuard</scope><name>EpochGuard</name></member>
      <member refid="structvt_1_1_epoch_guard_1a41d2d7190be38fe256d6d8476a1f460e" prot="public" virt="non-virtual"><scope>vt::EpochGuard</scope><name>get_epoch</name></member>
      <member refid="structvt_1_1_epoch_guard_1aecd3303d5b5594b0f19791a472ce515c" prot="private" virt="non-virtual"><scope>vt::EpochGuard</scope><name>guarded_epoch_</name></member>
      <member refid="structvt_1_1_epoch_guard_1adc52bcc301ca61c7cf3d52c725345ee6" prot="public" virt="non-virtual"><scope>vt::EpochGuard</scope><name>operator=</name></member>
      <member refid="structvt_1_1_epoch_guard_1aac8048b562920e1628ee5020d0e29da4" prot="public" virt="non-virtual"><scope>vt::EpochGuard</scope><name>operator=</name></member>
      <member refid="structvt_1_1_epoch_guard_1aa0106927b2e50b4be20bee542d264dba" prot="public" virt="non-virtual"><scope>vt::EpochGuard</scope><name>pop</name></member>
      <member refid="structvt_1_1_epoch_guard_1adf6677491e5d70a81645216b3cb65d0a" prot="public" virt="non-virtual"><scope>vt::EpochGuard</scope><name>~EpochGuard</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
