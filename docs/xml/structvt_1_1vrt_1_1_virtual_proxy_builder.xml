<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1_virtual_proxy_builder" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::VirtualProxyBuilder</compoundname>
    <includes refid="vrt_2proxy_2proxy__bits_8h" local="no">proxy_bits.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1ada5085518120bf7605a4fbf60863f037" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
        <definition>VirtualProxyType vt::vrt::VirtualProxyBuilder::createProxy</definition>
        <argsstring>(VirtualIDType const &amp;id, NodeType const &amp;node, bool const &amp;is_coll=false, bool const &amp;is_migratable=false, bool const &amp;is_distributed=false)</argsstring>
        <name>createProxy</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a84d0891f52f70728c3fc2172cffb464b" kindref="member">VirtualIDType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_coll</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_migratable</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_distributed</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="80" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="50" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1a148a3a90992f5f6bbfaa41631eded0a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
        <definition>VirtualProxyType vt::vrt::VirtualProxyBuilder::createRemoteProxy</definition>
        <argsstring>(VirtualRemoteIDType const &amp;id, NodeType const &amp;this_node, NodeType const &amp;target_node, bool const &amp;is_coll, bool const &amp;is_migratable)</argsstring>
        <name>createRemoteProxy</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a8184ab8c530ce523edcdc4f4c38565be" kindref="member">VirtualRemoteIDType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>this_node</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>target_node</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_coll</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_migratable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="87" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="67" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1a352827b1e11d9e59bce97126f37426aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::VirtualProxyBuilder::setIsCollection</definition>
        <argsstring>(VirtualProxyType &amp;proxy, bool const &amp;is_coll)</argsstring>
        <name>setIsCollection</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_coll</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="95" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1a53b2c14444534c95b230e4403aef9ccc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::VirtualProxyBuilder::setIsMigratable</definition>
        <argsstring>(VirtualProxyType &amp;proxy, bool const &amp;is_migratable)</argsstring>
        <name>setIsMigratable</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_migratable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="96" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1ab9c411d0812ee6854f477f1efed661fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::VirtualProxyBuilder::setIsRemote</definition>
        <argsstring>(VirtualProxyType &amp;proxy, bool const &amp;is_remote)</argsstring>
        <name>setIsRemote</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_remote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="97" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1a9d86ac5516ac3617501680ce2c6e28c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::VirtualProxyBuilder::setVirtualNode</definition>
        <argsstring>(VirtualProxyType &amp;proxy, NodeType const &amp;node)</argsstring>
        <name>setVirtualNode</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="98" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="101" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1af6ebd54a5d68ae11fa349e71c7b1bbe6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::VirtualProxyBuilder::setVirtualID</definition>
        <argsstring>(VirtualProxyType &amp;proxy, VirtualIDType const &amp;id)</argsstring>
        <name>setVirtualID</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a84d0891f52f70728c3fc2172cffb464b" kindref="member">VirtualIDType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="99" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="109" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1afc8a88f9e489dcf37e925ae1b0442128" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::VirtualProxyBuilder::setVirtualRemoteNode</definition>
        <argsstring>(VirtualProxyType &amp;proxy, NodeType const &amp;node)</argsstring>
        <name>setVirtualRemoteNode</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="100" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="117" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1a531eb058c08a809d6266533e4ed597ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::VirtualProxyBuilder::setVirtualRemoteID</definition>
        <argsstring>(VirtualProxyType &amp;proxy, VirtualRemoteIDType const &amp;id)</argsstring>
        <name>setVirtualRemoteID</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1a8184ab8c530ce523edcdc4f4c38565be" kindref="member">VirtualRemoteIDType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="101" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="125" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1a87543511e2cbf4af1fc98ebf1b12161f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::VirtualProxyBuilder::isCollection</definition>
        <argsstring>(VirtualProxyType const &amp;proxy)</argsstring>
        <name>isCollection</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="102" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="133" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1ab402290d7e593c587a650b9dd1d369cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::VirtualProxyBuilder::isMigratable</definition>
        <argsstring>(VirtualProxyType const &amp;proxy)</argsstring>
        <name>isMigratable</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="103" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="139" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1a75a4a4421ad2659544b8f9c7b1958264" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::VirtualProxyBuilder::isRemote</definition>
        <argsstring>(VirtualProxyType const &amp;proxy)</argsstring>
        <name>isRemote</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="104" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1a7a1da6be27725072ef4805adb879521c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::vrt::VirtualProxyBuilder::getVirtualNode</definition>
        <argsstring>(VirtualProxyType const &amp;proxy)</argsstring>
        <name>getVirtualNode</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="105" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="151" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_virtual_proxy_builder_1ae19d816cebcb1999c2f0f9c8126a7127" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1vrt_1a84d0891f52f70728c3fc2172cffb464b" kindref="member">VirtualIDType</ref></type>
        <definition>VirtualIDType vt::vrt::VirtualProxyBuilder::getVirtualID</definition>
        <argsstring>(VirtualProxyType const &amp;proxy)</argsstring>
        <name>getVirtualID</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/proxy/proxy_bits.h" line="106" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.cc" bodystart="159" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/vrt/proxy/proxy_bits.h" line="79" column="1" bodyfile="src/vt/vrt/proxy/proxy_bits.h" bodystart="79" bodyend="107"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1ada5085518120bf7605a4fbf60863f037" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>createProxy</name></member>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1a148a3a90992f5f6bbfaa41631eded0a9" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>createRemoteProxy</name></member>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1ae19d816cebcb1999c2f0f9c8126a7127" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>getVirtualID</name></member>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1a7a1da6be27725072ef4805adb879521c" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>getVirtualNode</name></member>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1a87543511e2cbf4af1fc98ebf1b12161f" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>isCollection</name></member>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1ab402290d7e593c587a650b9dd1d369cc" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>isMigratable</name></member>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1a75a4a4421ad2659544b8f9c7b1958264" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>isRemote</name></member>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1a352827b1e11d9e59bce97126f37426aa" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>setIsCollection</name></member>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1a53b2c14444534c95b230e4403aef9ccc" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>setIsMigratable</name></member>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1ab9c411d0812ee6854f477f1efed661fb" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>setIsRemote</name></member>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1af6ebd54a5d68ae11fa349e71c7b1bbe6" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>setVirtualID</name></member>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1a9d86ac5516ac3617501680ce2c6e28c0" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>setVirtualNode</name></member>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1a531eb058c08a809d6266533e4ed597ba" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>setVirtualRemoteID</name></member>
      <member refid="structvt_1_1vrt_1_1_virtual_proxy_builder_1afc8a88f9e489dcf37e925ae1b0442128" prot="public" virt="non-virtual"><scope>vt::vrt::VirtualProxyBuilder</scope><name>setVirtualRemoteNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
