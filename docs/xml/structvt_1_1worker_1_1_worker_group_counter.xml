<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1worker_1_1_worker_group_counter" kind="struct" language="C++" prot="public">
    <compoundname>vt::worker::WorkerGroupCounter</compoundname>
    <derivedcompoundref refid="structvt_1_1worker_1_1_worker_group_any" prot="public" virt="non-virtual">vt::worker::WorkerGroupAny&lt; WorkerT &gt;</derivedcompoundref>
    <includes refid="worker__group__counter_8h" local="no">worker_group_counter.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_counter_1ae91ad4af172549bb99e1b7c32a1a0f71" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="namespacevt_1_1worker_1abcb798436f1cdc4fab035def5b912d1f" kindref="member">eWorkerGroupEvent</ref>)&gt;</type>
        <definition>using vt::worker::WorkerGroupCounter::IdleListenerType =  std::function&lt;void(eWorkerGroupEvent)&gt;</definition>
        <argsstring></argsstring>
        <name>IdleListenerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="61" column="1" bodyfile="src/vt/worker/worker_group_counter.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_counter_1a27ecc5576966def3b786c8470e3fbf9d" prot="public" static="no">
        <type>std::list&lt; <ref refid="structvt_1_1worker_1_1_worker_group_counter_1ae91ad4af172549bb99e1b7c32a1a0f71" kindref="member">IdleListenerType</ref> &gt;</type>
        <definition>using vt::worker::WorkerGroupCounter::IdleListenerContainerType =  std::list&lt;IdleListenerType&gt;</definition>
        <argsstring></argsstring>
        <name>IdleListenerContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="62" column="1" bodyfile="src/vt/worker/worker_group_counter.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1worker_1_1_worker_group_counter_1ab0ceac7975b91fa9c08f8c416a4ea1cc" prot="public" static="no">
        <type>ProcessBuffer&lt; <ref refid="namespacevt_1_1worker_1a8080c49350b0520151601a8b24d6c6cf" kindref="member">WorkUnitCountType</ref> &gt;</type>
        <definition>using vt::worker::WorkerGroupCounter::EnqueueCountContainerType =  ProcessBuffer&lt;WorkUnitCountType&gt;</definition>
        <argsstring></argsstring>
        <name>EnqueueCountContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="63" column="1" bodyfile="src/vt/worker/worker_group_counter.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1worker_1_1_worker_group_counter_1a9637b5ea108554b2243ad0de5f211940" prot="private" static="no" mutable="no">
        <type>AtomicType&lt; <ref refid="namespacevt_1_1worker_1a8080c49350b0520151601a8b24d6c6cf" kindref="member">WorkUnitCountType</ref> &gt;</type>
        <definition>AtomicType&lt;WorkUnitCountType&gt; vt::worker::WorkerGroupCounter::num_enqueued_</definition>
        <argsstring></argsstring>
        <name>num_enqueued_</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="85" column="1" bodyfile="src/vt/worker/worker_group_counter.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1worker_1_1_worker_group_counter_1a725b7c60813d11208d5a1277bc0e7834" prot="private" static="no" mutable="no">
        <type>AtomicType&lt; <ref refid="namespacevt_1_1worker_1a8080c49350b0520151601a8b24d6c6cf" kindref="member">WorkUnitCountType</ref> &gt;</type>
        <definition>AtomicType&lt;WorkUnitCountType&gt; vt::worker::WorkerGroupCounter::num_finished_</definition>
        <argsstring></argsstring>
        <name>num_finished_</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="86" column="1" bodyfile="src/vt/worker/worker_group_counter.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1worker_1_1_worker_group_counter_1ad8e2001326cc6034e5bb45b6b6572b32" prot="private" static="no" mutable="no">
        <type>AtomicType&lt; bool &gt;</type>
        <definition>AtomicType&lt;bool&gt; vt::worker::WorkerGroupCounter::maybe_idle_</definition>
        <argsstring></argsstring>
        <name>maybe_idle_</name>
        <initializer>= {false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="87" column="1" bodyfile="src/vt/worker/worker_group_counter.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1worker_1_1_worker_group_counter_1ae8c275b953a8e67c039cdb518fc8a705" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1worker_1a8080c49350b0520151601a8b24d6c6cf" kindref="member">WorkUnitCountType</ref></type>
        <definition>WorkUnitCountType vt::worker::WorkerGroupCounter::num_consumed_</definition>
        <argsstring></argsstring>
        <name>num_consumed_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="88" column="1" bodyfile="src/vt/worker/worker_group_counter.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1worker_1_1_worker_group_counter_1a4f9e39a318fde14321c23cd4f8048005" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1worker_1_1_worker_group_counter_1a27ecc5576966def3b786c8470e3fbf9d" kindref="member">IdleListenerContainerType</ref></type>
        <definition>IdleListenerContainerType vt::worker::WorkerGroupCounter::listeners_</definition>
        <argsstring></argsstring>
        <name>listeners_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="89" column="1" bodyfile="src/vt/worker/worker_group_counter.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1worker_1_1_worker_group_counter_1a0d841e228f4643df513490e67febffbc" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1worker_1abcb798436f1cdc4fab035def5b912d1f" kindref="member">eWorkerGroupEvent</ref></type>
        <definition>eWorkerGroupEvent vt::worker::WorkerGroupCounter::last_event_</definition>
        <argsstring></argsstring>
        <name>last_event_</name>
        <initializer>= eWorkerGroupEvent::InvalidEvent</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="90" column="1" bodyfile="src/vt/worker/worker_group_counter.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1worker_1_1_worker_group_counter_1ab1eaca2789dc3ebfcb445374f2068b26" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1worker_1_1_worker_group_counter_1ab0ceac7975b91fa9c08f8c416a4ea1cc" kindref="member">EnqueueCountContainerType</ref></type>
        <definition>EnqueueCountContainerType vt::worker::WorkerGroupCounter::enqueued_count_</definition>
        <argsstring></argsstring>
        <name>enqueued_count_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="91" column="1" bodyfile="src/vt/worker/worker_group_counter.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1worker_1_1_worker_group_counter_1a88169cef0c2a49dc51f8f77e8136080f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::worker::WorkerGroupCounter::WorkerGroupCounter</definition>
        <argsstring>()</argsstring>
        <name>WorkerGroupCounter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="65" column="1" bodyfile="src/vt/worker/worker_group_counter.h" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1worker_1_1_worker_group_counter_1adbcab001bd3585539767059478456fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::worker::WorkerGroupCounter::enqueued</definition>
        <argsstring>(WorkUnitCountType num=1)</argsstring>
        <name>enqueued</name>
        <param>
          <type><ref refid="namespacevt_1_1worker_1a8080c49350b0520151601a8b24d6c6cf" kindref="member">WorkUnitCountType</ref></type>
          <declname>num</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="70" column="1" bodyfile="src/vt/worker/worker_group_counter.cc" bodystart="64" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1worker_1_1_worker_group_counter_1a6b77b96f91b97de8d59685a2504a9e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::worker::WorkerGroupCounter::finished</definition>
        <argsstring>(WorkerIDType id, WorkUnitCountType num=1)</argsstring>
        <name>finished</name>
        <param>
          <type><ref refid="namespacevt_1a656e362091da17b9b93d0655b36e3392" kindref="member">WorkerIDType</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1worker_1a8080c49350b0520151601a8b24d6c6cf" kindref="member">WorkUnitCountType</ref></type>
          <declname>num</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="71" column="1" bodyfile="src/vt/worker/worker_group_counter.cc" bodystart="86" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1worker_1_1_worker_group_counter_1af638994494fff8661d7cef5008014ab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::worker::WorkerGroupCounter::enqueuedComm</definition>
        <argsstring>(WorkUnitCountType num=1)</argsstring>
        <name>enqueuedComm</name>
        <param>
          <type><ref refid="namespacevt_1_1worker_1a8080c49350b0520151601a8b24d6c6cf" kindref="member">WorkUnitCountType</ref></type>
          <declname>num</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="74" column="1" bodyfile="src/vt/worker/worker_group_counter.cc" bodystart="73" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1worker_1_1_worker_group_counter_1a8b08821803e2b9ecad9167dc79d2795c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::worker::WorkerGroupCounter::registerIdleListener</definition>
        <argsstring>(IdleListenerType listener)</argsstring>
        <name>registerIdleListener</name>
        <param>
          <type><ref refid="structvt_1_1worker_1_1_worker_group_counter_1ae91ad4af172549bb99e1b7c32a1a0f71" kindref="member">IdleListenerType</ref></type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="75" column="1" bodyfile="src/vt/worker/worker_group_counter.cc" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1worker_1_1_worker_group_counter_1aa8ff0b55fb1a1501690db258ced55899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::worker::WorkerGroupCounter::progress</definition>
        <argsstring>()</argsstring>
        <name>progress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="76" column="1" bodyfile="src/vt/worker/worker_group_counter.cc" bodystart="117" bodyend="152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1worker_1_1_worker_group_counter_1a30b0164f0d85080bb272e8930b02df4c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::worker::WorkerGroupCounter::assertCommThread</definition>
        <argsstring>()</argsstring>
        <name>assertCommThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="79" column="1" bodyfile="src/vt/worker/worker_group_counter.cc" bodystart="103" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1worker_1_1_worker_group_counter_1a20ddb42ebdebae2134ecb33feef95d19" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::worker::WorkerGroupCounter::attachEnqueueProgressFn</definition>
        <argsstring>()</argsstring>
        <name>attachEnqueueProgressFn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="80" column="1" bodyfile="src/vt/worker/worker_group_counter.cc" bodystart="58" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1worker_1_1_worker_group_counter_1a39e2bdc226316ec5d4cddc3a6d10fb52" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::worker::WorkerGroupCounter::triggerListeners</definition>
        <argsstring>(eWorkerGroupEvent event)</argsstring>
        <name>triggerListeners</name>
        <param>
          <type><ref refid="namespacevt_1_1worker_1abcb798436f1cdc4fab035def5b912d1f" kindref="member">eWorkerGroupEvent</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="81" column="1" bodyfile="src/vt/worker/worker_group_counter.cc" bodystart="170" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1worker_1_1_worker_group_counter_1a8aa7187f5ced78fc69e7f323817ea752" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::worker::WorkerGroupCounter::updateConsumedTerm</definition>
        <argsstring>()</argsstring>
        <name>updateConsumedTerm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/worker/worker_group_counter.h" line="82" column="1" bodyfile="src/vt/worker/worker_group_counter.cc" bodystart="154" bodyend="168"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4173">
        <label>vt::worker::WorkerGroupCounter</label>
        <link refid="structvt_1_1worker_1_1_worker_group_counter"/>
      </node>
      <node id="4174">
        <label>vt::worker::WorkerGroupAny&lt; WorkerT &gt;</label>
        <link refid="structvt_1_1worker_1_1_worker_group_any"/>
        <childnode refid="4173" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/vt/worker/worker_group_counter.h" line="60" column="1" bodyfile="src/vt/worker/worker_group_counter.h" bodystart="60" bodyend="92"/>
    <listofallmembers>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1a30b0164f0d85080bb272e8930b02df4c" prot="protected" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>assertCommThread</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1a20ddb42ebdebae2134ecb33feef95d19" prot="protected" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>attachEnqueueProgressFn</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1ab0ceac7975b91fa9c08f8c416a4ea1cc" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>EnqueueCountContainerType</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1adbcab001bd3585539767059478456fa2" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>enqueued</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1ab1eaca2789dc3ebfcb445374f2068b26" prot="private" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>enqueued_count_</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1af638994494fff8661d7cef5008014ab8" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>enqueuedComm</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1a6b77b96f91b97de8d59685a2504a9e6a" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>finished</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1a27ecc5576966def3b786c8470e3fbf9d" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>IdleListenerContainerType</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1ae91ad4af172549bb99e1b7c32a1a0f71" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>IdleListenerType</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1a0d841e228f4643df513490e67febffbc" prot="private" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>last_event_</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1a4f9e39a318fde14321c23cd4f8048005" prot="private" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>listeners_</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1ad8e2001326cc6034e5bb45b6b6572b32" prot="private" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>maybe_idle_</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1ae8c275b953a8e67c039cdb518fc8a705" prot="private" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>num_consumed_</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1a9637b5ea108554b2243ad0de5f211940" prot="private" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>num_enqueued_</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1a725b7c60813d11208d5a1277bc0e7834" prot="private" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>num_finished_</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1aa8ff0b55fb1a1501690db258ced55899" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>progress</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1a8b08821803e2b9ecad9167dc79d2795c" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>registerIdleListener</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1a39e2bdc226316ec5d4cddc3a6d10fb52" prot="protected" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>triggerListeners</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1a8aa7187f5ced78fc69e7f323817ea752" prot="protected" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>updateConsumedTerm</name></member>
      <member refid="structvt_1_1worker_1_1_worker_group_counter_1a88169cef0c2a49dc51f8f77e8136080f" prot="public" virt="non-virtual"><scope>vt::worker::WorkerGroupCounter</scope><name>WorkerGroupCounter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
