<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1_element_holder" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::ElementHolder</compoundname>
    <includes refid="elm__holder_8h" local="no">elm_holder.h</includes>
    <templateparamlist>
      <param>
        <type>typename IndexT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1aab2fd054199e1fed22be78fa1969eb2c" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1_indexable" kindref="compound">Indexable</ref>&lt; IndexT &gt; &gt;</type>
        <definition>using vt::vrt::collection::ElementHolder&lt; IndexT &gt;::VirtualPtrType =  std::unique_ptr&lt;Indexable&lt;IndexT&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>VirtualPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="64" column="3" bodyfile="src/vt/vrt/collection/holders/elm_holder.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1a25d5596b79044ad1d5b21c83820e0b1c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::ElementHolder&lt; IndexT &gt;::erased_</definition>
        <argsstring></argsstring>
        <name>erased_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="73" column="8" bodyfile="src/vt/vrt/collection/holders/elm_holder.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1ad84006b095efa23b1b9513e5f31e1d33" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1aab2fd054199e1fed22be78fa1969eb2c" kindref="member">VirtualPtrType</ref></type>
        <definition>VirtualPtrType vt::vrt::collection::ElementHolder&lt; IndexT &gt;::vc_ptr_</definition>
        <argsstring></argsstring>
        <name>vc_ptr_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="74" column="18" bodyfile="src/vt/vrt/collection/holders/elm_holder.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1aba2cf4951626be16bd2b2c4e52b8d4f5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::ElementHolder&lt; IndexT &gt;::ElementHolder</definition>
        <argsstring>(VirtualPtrType in_vc_ptr_)</argsstring>
        <name>ElementHolder</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1aab2fd054199e1fed22be78fa1969eb2c" kindref="member">VirtualPtrType</ref></type>
          <declname>in_vc_ptr_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="66" column="12" bodyfile="src/vt/vrt/collection/holders/elm_holder.impl.h" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1a36b03582059f06e1e9d60d5c38b53338" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::ElementHolder&lt; IndexT &gt;::ElementHolder</definition>
        <argsstring>(ElementHolder &amp;&amp;)=default</argsstring>
        <name>ElementHolder</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_element_holder" kindref="compound">ElementHolder</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="67" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1a9f8f4304168ecb1a0b13f2b58a0abd0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vt::vrt::collection::ElementHolder&lt; IndexT &gt;::~ElementHolder</definition>
        <argsstring>()=default</argsstring>
        <name>~ElementHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="69" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1a4fcba6438d97c525ff5f73d372a31133" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VirtualPtrType::pointer</type>
        <definition>ElementHolder&lt; IndexT &gt;::VirtualPtrType::pointer vt::vrt::collection::ElementHolder&lt; IndexT &gt;::getRawPtr</definition>
        <argsstring>() const</argsstring>
        <name>getRawPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="71" column="36" bodyfile="src/vt/vrt/collection/holders/elm_holder.impl.h" bodystart="65" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The holder for the actual collection object that saves a unique_ptr to the element. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/vrt/collection/holders/elm_holder.h" line="63" column="20" bodyfile="src/vt/vrt/collection/holders/elm_holder.h" bodystart="63" bodyend="75"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1aba2cf4951626be16bd2b2c4e52b8d4f5" prot="public" virt="non-virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>ElementHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1a36b03582059f06e1e9d60d5c38b53338" prot="public" virt="non-virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>ElementHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1a25d5596b79044ad1d5b21c83820e0b1c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>erased_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1a4fcba6438d97c525ff5f73d372a31133" prot="public" virt="non-virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>getRawPtr</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1ad84006b095efa23b1b9513e5f31e1d33" prot="public" virt="non-virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>vc_ptr_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1aab2fd054199e1fed22be78fa1969eb2c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>VirtualPtrType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1a9f8f4304168ecb1a0b13f2b58a0abd0b" prot="public" virt="virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>~ElementHolder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
