<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1_element_holder" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::ElementHolder</compoundname>
    <includes refid="elm__holder_8h" local="no">elm_holder.h</includes>
    <templateparamlist>
      <param>
        <type>typename ColT</type>
      </param>
      <param>
        <type>typename IndexT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1afc12d1a71ec8f735f1b7fe12a067c8a6" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1_collection_base" kindref="compound">CollectionBase</ref>&lt; ColT, IndexT &gt; &gt;</type>
        <definition>using vt::vrt::collection::ElementHolder&lt; ColT, IndexT &gt;::VirtualPtrType =  std::unique_ptr&lt;CollectionBase&lt;ColT,IndexT&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>VirtualPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="64" column="1" bodyfile="src/vt/vrt/collection/holders/elm_holder.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1ae832cd8e53efb97b0b57497320d3fa2f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::ElementHolder&lt; ColT, IndexT &gt;::erased_</definition>
        <argsstring></argsstring>
        <name>erased_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="73" column="1" bodyfile="src/vt/vrt/collection/holders/elm_holder.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1a2112b3755d594225583fb89ab3185bd2" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1afc12d1a71ec8f735f1b7fe12a067c8a6" kindref="member">VirtualPtrType</ref></type>
        <definition>VirtualPtrType vt::vrt::collection::ElementHolder&lt; ColT, IndexT &gt;::vc_ptr_</definition>
        <argsstring></argsstring>
        <name>vc_ptr_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="74" column="1" bodyfile="src/vt/vrt/collection/holders/elm_holder.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1ad8d672e74c498a661fa251bcad5cf148" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::ElementHolder&lt; ColT, IndexT &gt;::ElementHolder</definition>
        <argsstring>(VirtualPtrType in_vc_ptr_)</argsstring>
        <name>ElementHolder</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1afc12d1a71ec8f735f1b7fe12a067c8a6" kindref="member">VirtualPtrType</ref></type>
          <declname>in_vc_ptr_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="66" column="1" bodyfile="src/vt/vrt/collection/holders/elm_holder.impl.h" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1acc214e54954edc0d8112c59ea7e51c02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::ElementHolder&lt; ColT, IndexT &gt;::ElementHolder</definition>
        <argsstring>(ElementHolder &amp;&amp;)=default</argsstring>
        <name>ElementHolder</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1_element_holder" kindref="compound">ElementHolder</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1ab74327ed9bdbe171d7feab3a1efb8d63" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vt::vrt::collection::ElementHolder&lt; ColT, IndexT &gt;::~ElementHolder</definition>
        <argsstring>()=default</argsstring>
        <name>~ElementHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_element_holder_1a3db2beb1053f1da4abe1944e0aa33129" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VirtualPtrType::pointer</type>
        <definition>ElementHolder&lt; ColT, IndexT &gt;::VirtualPtrType::pointer vt::vrt::collection::ElementHolder&lt; ColT, IndexT &gt;::getRawPtr</definition>
        <argsstring>() const</argsstring>
        <name>getRawPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/elm_holder.h" line="71" column="1" bodyfile="src/vt/vrt/collection/holders/elm_holder.impl.h" bodystart="65" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The holder for the actual collection object that saves a unique_ptr to the element. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/vrt/collection/holders/elm_holder.h" line="63" column="1" bodyfile="src/vt/vrt/collection/holders/elm_holder.h" bodystart="63" bodyend="75"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1ad8d672e74c498a661fa251bcad5cf148" prot="public" virt="non-virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>ElementHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1acc214e54954edc0d8112c59ea7e51c02" prot="public" virt="non-virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>ElementHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1ae832cd8e53efb97b0b57497320d3fa2f" prot="public" virt="non-virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>erased_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1a3db2beb1053f1da4abe1944e0aa33129" prot="public" virt="non-virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>getRawPtr</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1a2112b3755d594225583fb89ab3185bd2" prot="public" virt="non-virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>vc_ptr_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1afc12d1a71ec8f735f1b7fe12a067c8a6" prot="public" virt="non-virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>VirtualPtrType</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_element_holder_1ab74327ed9bdbe171d7feab3a1efb8d63" prot="public" virt="virtual"><scope>vt::vrt::collection::ElementHolder</scope><name>~ElementHolder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
