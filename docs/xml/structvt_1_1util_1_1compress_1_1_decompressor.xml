<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1util_1_1compress_1_1_decompressor" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::compress::Decompressor</compoundname>
    <basecompoundref refid="structvt_1_1util_1_1compress_1_1_decompressor_base" prot="public" virt="non-virtual">vt::util::compress::DecompressorBase</basecompoundref>
    <includes refid="decompressor_8h" local="no">decompressor.h</includes>
    <templateparamlist>
      <param>
        <type>typename Readable</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1compress_1_1_decompressor_1a1a6c6dcbc87b9d96ff849e745b587f20" prot="private" static="no" mutable="no">
        <type>Readable</type>
        <definition>Readable vt::util::compress::Decompressor&lt; Readable &gt;::r_</definition>
        <argsstring></argsstring>
        <name>r_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/decompressor.h" line="101" column="1" bodyfile="src/vt/utils/compress/decompressor.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1compress_1_1_decompressor_1ae65156f7178d43c24eeacf68b157308f" prot="private" static="no" mutable="no">
        <type>BrotliDecoderState *</type>
        <definition>BrotliDecoderState* vt::util::compress::Decompressor&lt; Readable &gt;::dec_</definition>
        <argsstring></argsstring>
        <name>dec_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Underlying decoder state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/decompressor.h" line="102" column="1" bodyfile="src/vt/utils/compress/decompressor.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1compress_1_1_decompressor_1a5e6aa993526c932e80f9c3c40b31722d" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::util::compress::Decompressor&lt; Readable &gt;::in_buf_len_</definition>
        <argsstring></argsstring>
        <name>in_buf_len_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Input buffer max length (chunk) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/decompressor.h" line="103" column="1" bodyfile="src/vt/utils/compress/decompressor.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1compress_1_1_decompressor_1a47ec6000bc3a90508998f828551e3cea" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; uint8_t[]&gt;</type>
        <definition>std::unique_ptr&lt;uint8_t[]&gt; vt::util::compress::Decompressor&lt; Readable &gt;::buf_in_</definition>
        <argsstring></argsstring>
        <name>buf_in_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Temporary input buffer to read </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/decompressor.h" line="104" column="1" bodyfile="src/vt/utils/compress/decompressor.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1compress_1_1_decompressor_1a466a4d462c81a5032753fdfc11bfd54c" prot="private" static="no" mutable="no">
        <type>uint8_t const  *</type>
        <definition>uint8_t const* vt::util::compress::Decompressor&lt; Readable &gt;::next_in_</definition>
        <argsstring></argsstring>
        <name>next_in_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Next input pointer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/decompressor.h" line="105" column="1" bodyfile="src/vt/utils/compress/decompressor.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1compress_1_1_decompressor_1a61e8c9887a2c088f395493c94935fc0d" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::util::compress::Decompressor&lt; Readable &gt;::avail_in_</definition>
        <argsstring></argsstring>
        <name>avail_in_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Available length of input data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/decompressor.h" line="106" column="1" bodyfile="src/vt/utils/compress/decompressor.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1compress_1_1_decompressor_1aacf9c7d0a68ce970bd5219674f03c49b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::util::compress::Decompressor&lt; Readable &gt;::Decompressor</definition>
        <argsstring>(Readable in_r, std::size_t buf_len_=1&lt;&lt; 16)</argsstring>
        <name>Decompressor</name>
        <param>
          <type>Readable</type>
          <declname>in_r</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>buf_len_</declname>
          <defval>1&lt;&lt; 16</defval>
        </param>
        <briefdescription>
<para>Construct the decompressor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_r</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream-like readable to read from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf_len_</parametername>
</parameternamelist>
<parameterdescription>
<para>the temporary buffer length </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/decompressor.h" line="71" column="1" bodyfile="src/vt/utils/compress/decompressor.impl.h" bodystart="53" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1compress_1_1_decompressor_1a73d32684c506f355f425f3230dd5a7e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>vt::util::compress::Decompressor&lt; Readable &gt;::~Decompressor</definition>
        <argsstring>()</argsstring>
        <name>~Decompressor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/decompressor.h" line="73" column="1" bodyfile="src/vt/utils/compress/decompressor.impl.h" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1compress_1_1_decompressor_1a75d6946b3e1526fcf0cc6931f5e61774" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::util::compress::Decompressor&lt; Readable &gt;::read</definition>
        <argsstring>(uint8_t *output_buffer, std::size_t bytes_to_output) override</argsstring>
        <name>read</name>
        <reimplements refid="structvt_1_1util_1_1compress_1_1_decompressor_base_1ab203ef8c8540beae635abd77d0409df1">read</reimplements>
        <param>
          <type>uint8_t *</type>
          <declname>output_buffer</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>bytes_to_output</declname>
        </param>
        <briefdescription>
<para>Read bytes into output buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">output_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bytes_to_output</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bytes in the output buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>how many bytes it actually read into the buffer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/decompressor.h" line="83" column="1" bodyfile="src/vt/utils/compress/decompressor.impl.h" bodystart="91" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1compress_1_1_decompressor_1a68ee22d625a76f53fbda4b829863d01d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool vt::util::compress::Decompressor&lt; Readable &gt;::done</definition>
        <argsstring>() const override</argsstring>
        <name>done</name>
        <reimplements refid="structvt_1_1util_1_1compress_1_1_decompressor_base_1ab9c1b966391fe8e83a1ed30d968b606b">done</reimplements>
        <briefdescription>
<para>Whether we are done with decompressing the file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether we are done </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/decompressor.h" line="90" column="1" bodyfile="src/vt/utils/compress/decompressor.impl.h" bodystart="78" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1util_1_1compress_1_1_decompressor_1ac3dbfbc0bf26e58037008071ad4ebb63" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::util::compress::Decompressor&lt; Readable &gt;::getMoreInput</definition>
        <argsstring>()</argsstring>
        <name>getMoreInput</name>
        <briefdescription>
<para>Get more input, we need it to keep streaming output. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>whether more input is available </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/decompressor.h" line="98" column="1" bodyfile="src/vt/utils/compress/decompressor.impl.h" bodystart="154" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A streaming decompressor for reading an input buffer with brotli compression. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1415">
        <label>vt::util::compress::DecompressorBase</label>
        <link refid="structvt_1_1util_1_1compress_1_1_decompressor_base"/>
      </node>
      <node id="1414">
        <label>vt::util::compress::Decompressor&lt; Readable &gt;</label>
        <link refid="structvt_1_1util_1_1compress_1_1_decompressor"/>
        <childnode refid="1415" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1417">
        <label>vt::util::compress::DecompressorBase</label>
        <link refid="structvt_1_1util_1_1compress_1_1_decompressor_base"/>
      </node>
      <node id="1416">
        <label>vt::util::compress::Decompressor&lt; Readable &gt;</label>
        <link refid="structvt_1_1util_1_1compress_1_1_decompressor"/>
        <childnode refid="1417" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/utils/compress/decompressor.h" line="63" column="1" bodyfile="src/vt/utils/compress/decompressor.h" bodystart="63" bodyend="107"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1compress_1_1_decompressor_1a61e8c9887a2c088f395493c94935fc0d" prot="private" virt="non-virtual"><scope>vt::util::compress::Decompressor</scope><name>avail_in_</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_decompressor_1a47ec6000bc3a90508998f828551e3cea" prot="private" virt="non-virtual"><scope>vt::util::compress::Decompressor</scope><name>buf_in_</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_decompressor_1ae65156f7178d43c24eeacf68b157308f" prot="private" virt="non-virtual"><scope>vt::util::compress::Decompressor</scope><name>dec_</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_decompressor_1aacf9c7d0a68ce970bd5219674f03c49b" prot="public" virt="non-virtual"><scope>vt::util::compress::Decompressor</scope><name>Decompressor</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_decompressor_1a68ee22d625a76f53fbda4b829863d01d" prot="public" virt="virtual"><scope>vt::util::compress::Decompressor</scope><name>done</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_decompressor_1ac3dbfbc0bf26e58037008071ad4ebb63" prot="protected" virt="non-virtual"><scope>vt::util::compress::Decompressor</scope><name>getMoreInput</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_decompressor_1a5e6aa993526c932e80f9c3c40b31722d" prot="private" virt="non-virtual"><scope>vt::util::compress::Decompressor</scope><name>in_buf_len_</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_decompressor_1a466a4d462c81a5032753fdfc11bfd54c" prot="private" virt="non-virtual"><scope>vt::util::compress::Decompressor</scope><name>next_in_</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_decompressor_1a1a6c6dcbc87b9d96ff849e745b587f20" prot="private" virt="non-virtual"><scope>vt::util::compress::Decompressor</scope><name>r_</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_decompressor_1a75d6946b3e1526fcf0cc6931f5e61774" prot="public" virt="virtual"><scope>vt::util::compress::Decompressor</scope><name>read</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_decompressor_1a73d32684c506f355f425f3230dd5a7e7" prot="public" virt="virtual"><scope>vt::util::compress::Decompressor</scope><name>~Decompressor</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_decompressor_base_1aa81872201422e0b7a5fed31b0fcb062b" prot="public" virt="virtual"><scope>vt::util::compress::Decompressor</scope><name>~DecompressorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
