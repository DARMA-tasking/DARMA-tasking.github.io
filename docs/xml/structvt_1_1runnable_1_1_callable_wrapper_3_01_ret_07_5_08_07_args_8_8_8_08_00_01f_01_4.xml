<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4" kind="struct" language="C++" prot="public">
    <compoundname>vt::runnable::CallableWrapper&lt; Ret(*)(Args...), f &gt;</compoundname>
    <includes refid="invoke_8h" local="no">invoke.h</includes>
    <templateparamlist>
      <param>
        <type>typename Ret</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
      <param>
        <type>Ret(*)(Args...)</type>
        <declname>f</declname>
        <defname>f</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1a938ed1b338498b8a181a98b03044a868" prot="public" static="no">
        <type>Ret(*)(Args...)</type>
        <definition>using vt::runnable::CallableWrapper&lt; Ret(*)(Args...), f &gt;::Type =  Ret(*)(Args...)</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/invoke.h" line="98" column="1" bodyfile="src/vt/runnable/invoke.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1a868f1b55c864d4ec4cb0f3198daabf36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string vt::runnable::CallableWrapper&lt; Ret(*)(Args...), f &gt;::GetEventTypeName</definition>
        <argsstring>()</argsstring>
        <name>GetEventTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/invoke.h" line="100" column="1" bodyfile="src/vt/runnable/invoke.h" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1aec3ca15a6d06c597a19baa33f482d73c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string vt::runnable::CallableWrapper&lt; Ret(*)(Args...), f &gt;::GetEventName</definition>
        <argsstring>()</argsstring>
        <name>GetEventName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/invoke.h" line="104" column="1" bodyfile="src/vt/runnable/invoke.h" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1abb931e8a586cb613b27359d8993bb623" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1trace_1a3c14050715ba9eceaeff51fb3de64f2f" kindref="member">trace::TraceEntryIDType</ref></type>
        <definition>static trace::TraceEntryIDType vt::runnable::CallableWrapper&lt; Ret(*)(Args...), f &gt;::GetTraceID</definition>
        <argsstring>()</argsstring>
        <name>GetTraceID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/runnable/invoke.h" line="108" column="1" bodyfile="src/vt/runnable/invoke.h" bodystart="108" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/runnable/invoke.h" line="97" column="1" bodyfile="src/vt/runnable/invoke.h" bodystart="97" bodyend="113"/>
    <listofallmembers>
      <member refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1aec3ca15a6d06c597a19baa33f482d73c" prot="public" virt="non-virtual"><scope>vt::runnable::CallableWrapper&lt; Ret(*)(Args...), f &gt;</scope><name>GetEventName</name></member>
      <member refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1a868f1b55c864d4ec4cb0f3198daabf36" prot="public" virt="non-virtual"><scope>vt::runnable::CallableWrapper&lt; Ret(*)(Args...), f &gt;</scope><name>GetEventTypeName</name></member>
      <member refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1abb931e8a586cb613b27359d8993bb623" prot="public" virt="non-virtual"><scope>vt::runnable::CallableWrapper&lt; Ret(*)(Args...), f &gt;</scope><name>GetTraceID</name></member>
      <member refid="structvt_1_1runnable_1_1_callable_wrapper_3_01_ret_07_5_08_07_args_8_8_8_08_00_01f_01_4_1a938ed1b338498b8a181a98b03044a868" prot="public" virt="non-virtual"><scope>vt::runnable::CallableWrapper&lt; Ret(*)(Args...), f &gt;</scope><name>Type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
