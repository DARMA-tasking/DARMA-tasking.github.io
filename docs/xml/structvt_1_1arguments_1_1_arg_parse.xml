<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1arguments_1_1_arg_parse" kind="struct" language="C++" prot="public">
    <compoundname>vt::arguments::ArgParse</compoundname>
    <includes refid="argparse_8h" local="no">argparse.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="structvt_1_1arguments_1_1_arg_parse_1abe793d3075b5e2f794fe08f5e904a2b0" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool vt::arguments::ArgParse::parsed_</definition>
        <argsstring></argsstring>
        <name>parsed_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/configs/arguments/argparse.h" line="63" column="1" bodyfile="src/vt/configs/arguments/argparse.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1arguments_1_1_arg_parse_1aa52644ac4285c8ad995379964cf38983" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; int, std::string &gt;</type>
        <definition>std::tuple&lt; int, std::string &gt; vt::arguments::ArgParse::parse</definition>
        <argsstring>(int &amp;argc, char **&amp;argv)</argsstring>
        <name>parse</name>
        <param>
          <type>int &amp;</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **&amp;</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the arguments into <ref refid="structvt_1_1arguments_1_1_arg_config" kindref="compound">ArgConfig</ref>. Re-assigns argc/argv to remove consumed arguments. On success the tuple will be {-1, &quot;&quot;}. Otherwise the exit code (which may be 0 if help was requested) will be returned along with an appropriate display message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/configs/arguments/argparse.h" line="60" column="1" bodyfile="src/vt/configs/arguments/args.cc" bodystart="591" bodyend="633"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/configs/arguments/argparse.h" line="53" column="1" bodyfile="src/vt/configs/arguments/argparse.h" bodystart="53" bodyend="64"/>
    <listofallmembers>
      <member refid="structvt_1_1arguments_1_1_arg_parse_1aa52644ac4285c8ad995379964cf38983" prot="public" virt="non-virtual"><scope>vt::arguments::ArgParse</scope><name>parse</name></member>
      <member refid="structvt_1_1arguments_1_1_arg_parse_1abe793d3075b5e2f794fe08f5e904a2b0" prot="private" virt="non-virtual"><scope>vt::arguments::ArgParse</scope><name>parsed_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
