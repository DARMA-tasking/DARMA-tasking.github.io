<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1group_1_1region_1_1_range" kind="struct" language="C++" prot="public">
    <compoundname>vt::group::region::Range</compoundname>
    <basecompoundref refid="structvt_1_1group_1_1region_1_1_region" prot="public" virt="non-virtual">vt::group::region::Region</basecompoundref>
    <includes refid="group__range_8h" local="no">group_range.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1group_1_1region_1_1_range_1a2a3990246b3bab9c29636b30aa9741ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct RangeData</definition>
        <argsstring></argsstring>
        <name>RangeData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="80" column="1" bodyfile="src/vt/group/region/group_range.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1group_1_1region_1_1_range_1aa5903785818d44ac6bc7a85ff61664f3" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref> const</type>
        <definition>BoundType const vt::group::region::Range::lo_</definition>
        <argsstring></argsstring>
        <name>lo_</name>
        <initializer>= uninitialized_destination</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="83" column="1" bodyfile="src/vt/group/region/group_range.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1region_1_1_range_1ac4a27a2eba9f7efc7d96beb12cecdc04" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref> const</type>
        <definition>BoundType const vt::group::region::Range::hi_</definition>
        <argsstring></argsstring>
        <name>hi_</name>
        <initializer>= uninitialized_destination</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="84" column="1" bodyfile="src/vt/group/region/group_range.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1region_1_1_range_1ad483fd4ac3bb38c69501fd95cef3890c" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref> const</type>
        <definition>BoundType const vt::group::region::Range::stride_</definition>
        <argsstring></argsstring>
        <name>stride_</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="85" column="1" bodyfile="src/vt/group/region/group_range.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1region_1_1_range_1aa0193a445bff44cfb5c27864d485ce97" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::group::region::Range::made_list_</definition>
        <argsstring></argsstring>
        <name>made_list_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="86" column="1" bodyfile="src/vt/group/region/group_range.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1region_1_1_range_1a6f0b75bfcf63316d937430e2a49fb79f" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a4e35b2fc6dca06aca0b7bc0e19b35c5a" kindref="member">ListType</ref></type>
        <definition>ListType vt::group::region::Range::list_</definition>
        <argsstring></argsstring>
        <name>list_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="87" column="1" bodyfile="src/vt/group/region/group_range.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1a6691cd13c504bdabbb67129f652b816a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::group::region::Range::Range</definition>
        <argsstring>(BoundType const &amp;in_lo, BoundType const &amp;in_hi, BoundType const &amp;stride=1)</argsstring>
        <name>Range</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref> const &amp;</type>
          <declname>in_lo</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref> const &amp;</type>
          <declname>in_hi</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref> const &amp;</type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="58" column="1" bodyfile="src/vt/group/region/group_range.cc" bodystart="57" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1a9cd7425570ad25a2d5faf70b5f233bbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::group::region::Range::Range</definition>
        <argsstring>(Range const &amp;in_other, BoundType in_remove_extent)</argsstring>
        <name>Range</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_range" kindref="compound">Range</ref> const &amp;</type>
          <declname>in_other</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref></type>
          <declname>in_remove_extent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="61" column="1" bodyfile="src/vt/group/region/group_range.cc" bodystart="96" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1aaf4f48ee287bd842d3a0c1260737bcb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::group::region::Range::Range</definition>
        <argsstring>(Range const &amp;)=default</argsstring>
        <name>Range</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_range" kindref="compound">Range</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1a58248b99e3e8dfbf73a014d2af6f238c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::group::region::Range::Range</definition>
        <argsstring>(Range &amp;&amp;)=default</argsstring>
        <name>Range</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_range" kindref="compound">Range</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1a7a1ee1554643ce6074d24dc129cef8a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_range" kindref="compound">Range</ref> &amp;</type>
        <definition>Range&amp; vt::group::region::Range::operator=</definition>
        <argsstring>(Range const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_range" kindref="compound">Range</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1a111a632a4bba6b6940a3d036bd4cba76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a9bb381adf31111aae34dbc644bad6c1f" kindref="member">SizeType</ref></type>
        <definition>Range::SizeType vt::group::region::Range::getSize</definition>
        <argsstring>() const override</argsstring>
        <name>getSize</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1ab0db5f78c57943b4b9973ba2c7c619f7">getSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="69" column="1" bodyfile="src/vt/group/region/group_range.cc" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1aa24e09be54662ffd11413803689ed7f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::group::region::Range::sort</definition>
        <argsstring>() override</argsstring>
        <name>sort</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a169304bf82a87ff958333595bed2603d">sort</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="70" column="1" bodyfile="src/vt/group/region/group_range.cc" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1a1e8b87b37b06d3803fd3b287fde3564b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool vt::group::region::Range::contains</definition>
        <argsstring>(NodeType const &amp;node) override</argsstring>
        <name>contains</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a1e0ebd7367476fb397faf06a03b5583c">contains</reimplements>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="71" column="1" bodyfile="src/vt/group/region/group_range.cc" bodystart="74" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1abd64b2d424a89ab0f603be15957d0fd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a4e35b2fc6dca06aca0b7bc0e19b35c5a" kindref="member">ListType</ref> const  &amp;</type>
        <definition>Range::ListType const  &amp; vt::group::region::Range::makeList</definition>
        <argsstring>() override</argsstring>
        <name>makeList</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1ac85c027b3c402c712c888aefc198c6be">makeList</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="72" column="1" bodyfile="src/vt/group/region/group_range.cc" bodystart="84" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1aaa2df0017d61507802bcc90a88fcda91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool vt::group::region::Range::isList</definition>
        <argsstring>() const override</argsstring>
        <name>isList</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a5c05e6ebee5a6d7e77d9ebf33c9ff50c">isList</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="73" column="1" bodyfile="src/vt/group/region/group_range.cc" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1ab6abce20eb32475d0ae734770b6586c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" kindref="member">BoundType</ref></type>
        <definition>Range::BoundType vt::group::region::Range::head</definition>
        <argsstring>() const override</argsstring>
        <name>head</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a09d21333389937f11dd5d3e6ba566c54">head</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="74" column="1" bodyfile="src/vt/group/region/group_range.cc" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1a409f171c688707fa71e4aea1099ce691" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" kindref="member">RegionUPtrType</ref></type>
        <definition>Range::RegionUPtrType vt::group::region::Range::tail</definition>
        <argsstring>() const override</argsstring>
        <name>tail</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a7d5bc5711c1b7954e27defa4dc94af40">tail</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="75" column="1" bodyfile="src/vt/group/region/group_range.cc" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1a0d2542edc1fccecc5ba898484f0ccd3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1ab8d05c0978c7f38292a9ed5a15498a4b" kindref="member">SplitRegionType</ref></type>
        <definition>Range::SplitRegionType vt::group::region::Range::split</definition>
        <argsstring>() const override</argsstring>
        <name>split</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a2cbbbff6358f0f63235d95501858f512">split</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="76" column="1" bodyfile="src/vt/group/region/group_range.cc" bodystart="116" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1a9b7985ec60471524e11bb933fd0f6821" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" kindref="member">RegionUPtrType</ref></type>
        <definition>Range::RegionUPtrType vt::group::region::Range::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1a040d20a4f8c6fa351d7fe1cbfcae3a03">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="77" column="1" bodyfile="src/vt/group/region/group_range.cc" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1region_1_1_range_1a6fcfec2c3fabe024559c2f278a8d12e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::group::region::Range::splitN</definition>
        <argsstring>(int nsplits, ApplyFnType apply) const override</argsstring>
        <name>splitN</name>
        <reimplements refid="structvt_1_1group_1_1region_1_1_region_1ae8660d4218b57e91664dedfa807cd936">splitN</reimplements>
        <param>
          <type>int</type>
          <declname>nsplits</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a7c9e99b1157d2fe2f3e6fc36a1463a96" kindref="member">ApplyFnType</ref></type>
          <declname>apply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/region/group_range.h" line="78" column="1" bodyfile="src/vt/group/region/group_range.cc" bodystart="131" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2574">
        <label>vt::group::region::Region</label>
        <link refid="structvt_1_1group_1_1region_1_1_region"/>
      </node>
      <node id="2573">
        <label>vt::group::region::Range</label>
        <link refid="structvt_1_1group_1_1region_1_1_range"/>
        <childnode refid="2574" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2576">
        <label>vt::group::region::Region</label>
        <link refid="structvt_1_1group_1_1region_1_1_region"/>
      </node>
      <node id="2575">
        <label>vt::group::region::Range</label>
        <link refid="structvt_1_1group_1_1region_1_1_range"/>
        <childnode refid="2576" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/group/region/group_range.h" line="57" column="1" bodyfile="src/vt/group/region/group_range.h" bodystart="57" bodyend="88"/>
    <listofallmembers>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a7c9e99b1157d2fe2f3e6fc36a1463a96" prot="public" virt="non-virtual"><scope>vt::group::region::Range</scope><name>ApplyFnType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1abf426ff85bed72c1c6524fad6a9f1751" prot="public" virt="non-virtual"><scope>vt::group::region::Range</scope><name>BoundType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1a1e8b87b37b06d3803fd3b287fde3564b" prot="public" virt="virtual"><scope>vt::group::region::Range</scope><name>contains</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1a9b7985ec60471524e11bb933fd0f6821" prot="public" virt="virtual"><scope>vt::group::region::Range</scope><name>copy</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1a111a632a4bba6b6940a3d036bd4cba76" prot="public" virt="virtual"><scope>vt::group::region::Range</scope><name>getSize</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1ab6abce20eb32475d0ae734770b6586c0" prot="public" virt="virtual"><scope>vt::group::region::Range</scope><name>head</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1ac4a27a2eba9f7efc7d96beb12cecdc04" prot="private" virt="non-virtual"><scope>vt::group::region::Range</scope><name>hi_</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1aaa2df0017d61507802bcc90a88fcda91" prot="public" virt="virtual"><scope>vt::group::region::Range</scope><name>isList</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1a6f0b75bfcf63316d937430e2a49fb79f" prot="private" virt="non-virtual"><scope>vt::group::region::Range</scope><name>list_</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a4e35b2fc6dca06aca0b7bc0e19b35c5a" prot="public" virt="non-virtual"><scope>vt::group::region::Range</scope><name>ListType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1aa5903785818d44ac6bc7a85ff61664f3" prot="private" virt="non-virtual"><scope>vt::group::region::Range</scope><name>lo_</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1aa0193a445bff44cfb5c27864d485ce97" prot="private" virt="non-virtual"><scope>vt::group::region::Range</scope><name>made_list_</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1abd64b2d424a89ab0f603be15957d0fd4" prot="public" virt="virtual"><scope>vt::group::region::Range</scope><name>makeList</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1a7a1ee1554643ce6074d24dc129cef8a1" prot="public" virt="non-virtual"><scope>vt::group::region::Range</scope><name>operator=</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1a6691cd13c504bdabbb67129f652b816a" prot="public" virt="non-virtual"><scope>vt::group::region::Range</scope><name>Range</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1a9cd7425570ad25a2d5faf70b5f233bbd" prot="public" virt="non-virtual"><scope>vt::group::region::Range</scope><name>Range</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1aaf4f48ee287bd842d3a0c1260737bcb1" prot="public" virt="non-virtual"><scope>vt::group::region::Range</scope><name>Range</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1a58248b99e3e8dfbf73a014d2af6f238c" prot="public" virt="non-virtual"><scope>vt::group::region::Range</scope><name>Range</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1a2a3990246b3bab9c29636b30aa9741ac" prot="public" virt="non-virtual"><scope>vt::group::region::Range</scope><name>RangeData</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a79f6795196ce4fd9fff863cf2a5bf30d" prot="public" virt="non-virtual"><scope>vt::group::region::Range</scope><name>RegionPtr</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1ae5f42cf159116a3cf8bd65423eb01037" prot="public" virt="non-virtual"><scope>vt::group::region::Range</scope><name>RegionUPtrType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1a9bb381adf31111aae34dbc644bad6c1f" prot="public" virt="non-virtual"><scope>vt::group::region::Range</scope><name>SizeType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1aa24e09be54662ffd11413803689ed7f8" prot="public" virt="virtual"><scope>vt::group::region::Range</scope><name>sort</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1a0d2542edc1fccecc5ba898484f0ccd3f" prot="public" virt="virtual"><scope>vt::group::region::Range</scope><name>split</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1a6fcfec2c3fabe024559c2f278a8d12e5" prot="public" virt="virtual"><scope>vt::group::region::Range</scope><name>splitN</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1ab8d05c0978c7f38292a9ed5a15498a4b" prot="public" virt="non-virtual"><scope>vt::group::region::Range</scope><name>SplitRegionType</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1ad483fd4ac3bb38c69501fd95cef3890c" prot="private" virt="non-virtual"><scope>vt::group::region::Range</scope><name>stride_</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_range_1a409f171c688707fa71e4aea1099ce691" prot="public" virt="virtual"><scope>vt::group::region::Range</scope><name>tail</name></member>
      <member refid="structvt_1_1group_1_1region_1_1_region_1adb017be8010659a0da19f66c8265fe10" prot="public" virt="virtual"><scope>vt::group::region::Range</scope><name>~Region</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
