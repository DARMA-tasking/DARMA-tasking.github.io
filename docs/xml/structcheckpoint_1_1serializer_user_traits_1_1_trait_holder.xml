<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kind="struct" language="C++" prot="public">
    <compoundname>checkpoint::serializerUserTraits::TraitHolder</compoundname>
    <includes refid="user__traits_8h" local="no">user_traits.h</includes>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>Traits</declname>
        <defname>Traits</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1a88f0717625c71d50c5d772de7bd9dd04" prot="protected" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::disjunction&lt; <ref refid="structcheckpoint_1_1serializer_user_traits_1_1traits__match" kindref="compound">traits_match</ref>&lt; T, Traits &gt;... &gt;</type>
        <definition>using checkpoint::serializerUserTraits::TraitHolder&lt; Traits &gt;::has_trait =  std::disjunction&lt;traits_match&lt;T, Traits&gt;...&gt;</definition>
        <argsstring></argsstring>
        <name>has_trait</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/traits/user_traits.h" line="167" column="5" bodyfile="lib/checkpoint/src/checkpoint/traits/user_traits.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1a0506b020cc5d38f26059aaca5ee6a08c" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt; Traits..., T... &gt;</type>
        <definition>using checkpoint::serializerUserTraits::TraitHolder&lt; Traits &gt;::With =  TraitHolder&lt;Traits..., T...&gt;</definition>
        <argsstring></argsstring>
        <name>With</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/traits/user_traits.h" line="171" column="5" bodyfile="lib/checkpoint/src/checkpoint/traits/user_traits.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1a7572ef4b2674f6d04d7f08ad71f2092a" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt; T..., Traits... &gt;</type>
        <definition>using checkpoint::serializerUserTraits::TraitHolder&lt; Traits &gt;::WithPre =  TraitHolder&lt;T..., Traits...&gt;</definition>
        <argsstring></argsstring>
        <name>WithPre</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/traits/user_traits.h" line="174" column="5" bodyfile="lib/checkpoint/src/checkpoint/traits/user_traits.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1a9f9ad754e9b115a901baa5b0c193cf33" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>std::conjunction&lt; <ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1a88f0717625c71d50c5d772de7bd9dd04" kindref="member">has_trait</ref>&lt; T &gt;... &gt;</type>
        <definition>using checkpoint::serializerUserTraits::TraitHolder&lt; Traits &gt;::has =  std::conjunction&lt;has_trait&lt;T&gt;...&gt;</definition>
        <argsstring></argsstring>
        <name>has</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/traits/user_traits.h" line="178" column="5" bodyfile="lib/checkpoint/src/checkpoint/traits/user_traits.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1a35f80a4c28f6d76921a868e856973843" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>std::disjunction&lt; <ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1a88f0717625c71d50c5d772de7bd9dd04" kindref="member">has_trait</ref>&lt; T &gt;... &gt;</type>
        <definition>using checkpoint::serializerUserTraits::TraitHolder&lt; Traits &gt;::has_any =  std::disjunction&lt;has_trait&lt;T&gt;...&gt;</definition>
        <argsstring></argsstring>
        <name>has_any</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/traits/user_traits.h" line="181" column="5" bodyfile="lib/checkpoint/src/checkpoint/traits/user_traits.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1ab42948e367fb5f0dfabc297d56d53df1" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacecheckpoint_1_1serializer_user_traits_1adb444edefe1962ba291323f1e70cf2be" kindref="member">WithoutTraits</ref>&lt; <ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt; Traits... &gt;, T... &gt;</type>
        <definition>using checkpoint::serializerUserTraits::TraitHolder&lt; Traits &gt;::Without =  WithoutTraits&lt;TraitHolder&lt;Traits...&gt;, T...&gt;</definition>
        <argsstring></argsstring>
        <name>Without</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/traits/user_traits.h" line="188" column="5" bodyfile="lib/checkpoint/src/checkpoint/traits/user_traits.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1ac8e7980c53b4d5e5d02f1d2a3f0d1941" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
          </param>
        </templateparamlist>
        <type>friend struct</type>
        <definition>friend struct TraitHolder</definition>
        <argsstring></argsstring>
        <name>TraitHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/traits/user_traits.h" line="164" column="5" bodyfile="lib/checkpoint/src/checkpoint/traits/user_traits.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/checkpoint/src/checkpoint/traits/user_traits.h" line="51" column="3" bodyfile="lib/checkpoint/src/checkpoint/traits/user_traits.h" bodystart="51" bodyend="-1"/>
    <listofallmembers>
      <member refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1a9f9ad754e9b115a901baa5b0c193cf33" prot="public" virt="non-virtual"><scope>checkpoint::serializerUserTraits::TraitHolder</scope><name>has</name></member>
      <member refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1a35f80a4c28f6d76921a868e856973843" prot="public" virt="non-virtual"><scope>checkpoint::serializerUserTraits::TraitHolder</scope><name>has_any</name></member>
      <member refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1a88f0717625c71d50c5d772de7bd9dd04" prot="protected" virt="non-virtual"><scope>checkpoint::serializerUserTraits::TraitHolder</scope><name>has_trait</name></member>
      <member refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1ac8e7980c53b4d5e5d02f1d2a3f0d1941" prot="protected" virt="non-virtual"><scope>checkpoint::serializerUserTraits::TraitHolder</scope><name>TraitHolder</name></member>
      <member refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1a0506b020cc5d38f26059aaca5ee6a08c" prot="public" virt="non-virtual"><scope>checkpoint::serializerUserTraits::TraitHolder</scope><name>With</name></member>
      <member refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1ab42948e367fb5f0dfabc297d56d53df1" prot="public" virt="non-virtual"><scope>checkpoint::serializerUserTraits::TraitHolder</scope><name>Without</name></member>
      <member refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder_1a7572ef4b2674f6d04d7f08ad71f2092a" prot="public" virt="non-virtual"><scope>checkpoint::serializerUserTraits::TraitHolder</scope><name>WithPre</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
