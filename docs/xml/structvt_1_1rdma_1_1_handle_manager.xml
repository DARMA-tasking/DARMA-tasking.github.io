<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1rdma_1_1_handle_manager" kind="struct" language="C++" prot="public">
    <compoundname>vt::rdma::HandleManager</compoundname>
    <includes refid="rdma__handle_8h" local="no">rdma_handle.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_handle_manager_1a7645bd240d1f95084087f2b01c0d343f" prot="public" static="no">
        <type><ref refid="namespacevt_1_1rdma_1a91e7211515508952960ca446ea609f65" kindref="member">Bits</ref></type>
        <definition>using vt::rdma::HandleManager::RDMA_BitsType =  Bits</definition>
        <argsstring></argsstring>
        <name>RDMA_BitsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="58" column="3" bodyfile="src/vt/rdma/rdma_handle.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_handle_manager_1ae80c26da7c940c50ddfc3625d4faad74" prot="public" static="no">
        <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">Type</ref></type>
        <definition>using vt::rdma::HandleManager::RDMA_TypeType =  Type</definition>
        <argsstring></argsstring>
        <name>RDMA_TypeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="59" column="3" bodyfile="src/vt/rdma/rdma_handle.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" prot="public" static="no">
        <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref></type>
        <definition>using vt::rdma::HandleManager::RDMA_UniversalIdType =  RDMA_HandleType</definition>
        <argsstring></argsstring>
        <name>RDMA_UniversalIdType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="60" column="3" bodyfile="src/vt/rdma/rdma_handle.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1rdma_1_1_handle_manager_1a768264cec2a3b9bc0d354624cfa7d863" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::HandleManager::setIsSized</definition>
        <argsstring>(RDMA_UniversalIdType &amp;handle, bool const &amp;is_sized)</argsstring>
        <name>setIsSized</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" kindref="member">RDMA_UniversalIdType</ref> &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_sized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="62" column="15" bodyfile="src/vt/rdma/rdma_handle.cc" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_handle_manager_1a81e715ef00f47433e44f77b210729b4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::HandleManager::setIsCollective</definition>
        <argsstring>(RDMA_UniversalIdType &amp;handle, bool const &amp;is_collective)</argsstring>
        <name>setIsCollective</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" kindref="member">RDMA_UniversalIdType</ref> &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_collective</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="63" column="15" bodyfile="src/vt/rdma/rdma_handle.cc" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_handle_manager_1a6d4b1801135d4dfd0b8299e8f879eb25" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::HandleManager::setIsHandler</definition>
        <argsstring>(RDMA_UniversalIdType &amp;handle, bool const &amp;is_handler)</argsstring>
        <name>setIsHandler</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" kindref="member">RDMA_UniversalIdType</ref> &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="64" column="15" bodyfile="src/vt/rdma/rdma_handle.cc" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_handle_manager_1a3218bb2c602a6051318249f99fea1354" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::HandleManager::setOpType</definition>
        <argsstring>(RDMA_UniversalIdType &amp;handle, RDMA_TypeType const &amp;rdma_type)</argsstring>
        <name>setOpType</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" kindref="member">RDMA_UniversalIdType</ref> &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMA_TypeType</ref> const &amp;</type>
          <declname>rdma_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="67" column="15" bodyfile="src/vt/rdma/rdma_handle.cc" bodystart="67" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_handle_manager_1a8237e079f8a8ccf049b51778a1502e16" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::HandleManager::setRdmaNode</definition>
        <argsstring>(RDMA_UniversalIdType &amp;handle, NodeType const &amp;node)</argsstring>
        <name>setRdmaNode</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" kindref="member">RDMA_UniversalIdType</ref> &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="70" column="15" bodyfile="src/vt/rdma/rdma_handle.cc" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_handle_manager_1a4ae25273b2cfd378111090752b9517dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::HandleManager::setRdmaIdentifier</definition>
        <argsstring>(RDMA_UniversalIdType &amp;handle, RDMA_IdentifierType const &amp;ident)</argsstring>
        <name>setRdmaIdentifier</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" kindref="member">RDMA_UniversalIdType</ref> &amp;</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1rdma_1a3b7f2eba1e9063a37d9301061c1432f1" kindref="member">RDMA_IdentifierType</ref> const &amp;</type>
          <declname>ident</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="71" column="15" bodyfile="src/vt/rdma/rdma_handle.cc" bodystart="81" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_handle_manager_1a80488969f034c0ae7e525c9f249b59af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::rdma::HandleManager::getRdmaNode</definition>
        <argsstring>(RDMA_UniversalIdType const &amp;handle)</argsstring>
        <name>getRdmaNode</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" kindref="member">RDMA_UniversalIdType</ref> const &amp;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="74" column="19" bodyfile="src/vt/rdma/rdma_handle.cc" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_handle_manager_1ad6f12c5af90a234af9bd717afd523a41" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1rdma_1a3b7f2eba1e9063a37d9301061c1432f1" kindref="member">RDMA_IdentifierType</ref></type>
        <definition>RDMA_IdentifierType vt::rdma::HandleManager::getRdmaIdentifier</definition>
        <argsstring>(RDMA_UniversalIdType const &amp;handle)</argsstring>
        <name>getRdmaIdentifier</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" kindref="member">RDMA_UniversalIdType</ref> const &amp;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="75" column="30" bodyfile="src/vt/rdma/rdma_handle.cc" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_handle_manager_1ab39b12a946cd70fdc18033167187d9a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::rdma::HandleManager::isSized</definition>
        <argsstring>(RDMA_UniversalIdType const &amp;handle)</argsstring>
        <name>isSized</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" kindref="member">RDMA_UniversalIdType</ref> const &amp;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="76" column="15" bodyfile="src/vt/rdma/rdma_handle.cc" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_handle_manager_1a0aa955ef0d6bea53f38eaf82fa428beb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::rdma::HandleManager::isCollective</definition>
        <argsstring>(RDMA_UniversalIdType const &amp;handle)</argsstring>
        <name>isCollective</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" kindref="member">RDMA_UniversalIdType</ref> const &amp;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="77" column="15" bodyfile="src/vt/rdma/rdma_handle.cc" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_handle_manager_1a8e70acc8027b2be6cab2d9e2a165c7f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::rdma::HandleManager::isHandler</definition>
        <argsstring>(RDMA_UniversalIdType const &amp;handle)</argsstring>
        <name>isHandler</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" kindref="member">RDMA_UniversalIdType</ref> const &amp;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="78" column="15" bodyfile="src/vt/rdma/rdma_handle.cc" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_handle_manager_1a9587289289345a60a93f7c1de730880c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1rdma_1ac848e1d9da43db6294bd06f83e5d3946" kindref="member">RDMA_TypeType</ref></type>
        <definition>HandleManager::RDMA_TypeType vt::rdma::HandleManager::getOpType</definition>
        <argsstring>(RDMA_UniversalIdType const &amp;handle)</argsstring>
        <name>getOpType</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" kindref="member">RDMA_UniversalIdType</ref> const &amp;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="79" column="24" bodyfile="src/vt/rdma/rdma_handle.cc" bodystart="115" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_handle_manager_1ac92a909e182d24b3fd7bcc704260c9fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" kindref="member">RDMA_UniversalIdType</ref></type>
        <definition>HandleManager::RDMA_UniversalIdType vt::rdma::HandleManager::createNewHandler</definition>
        <argsstring>()</argsstring>
        <name>createNewHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdma/rdma_handle.h" line="80" column="31" bodyfile="src/vt/rdma/rdma_handle.cc" bodystart="124" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/rdma/rdma_handle.h" line="57" column="1" bodyfile="src/vt/rdma/rdma_handle.h" bodystart="57" bodyend="81"/>
    <listofallmembers>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1ac92a909e182d24b3fd7bcc704260c9fd" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>createNewHandler</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1a9587289289345a60a93f7c1de730880c" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>getOpType</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1ad6f12c5af90a234af9bd717afd523a41" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>getRdmaIdentifier</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1a80488969f034c0ae7e525c9f249b59af" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>getRdmaNode</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1a0aa955ef0d6bea53f38eaf82fa428beb" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>isCollective</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1a8e70acc8027b2be6cab2d9e2a165c7f2" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>isHandler</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1ab39b12a946cd70fdc18033167187d9a8" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>isSized</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1a7645bd240d1f95084087f2b01c0d343f" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>RDMA_BitsType</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1ae80c26da7c940c50ddfc3625d4faad74" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>RDMA_TypeType</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1acebfe9aa5887a015cc5da18f4f7e55ae" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>RDMA_UniversalIdType</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1a81e715ef00f47433e44f77b210729b4e" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>setIsCollective</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1a6d4b1801135d4dfd0b8299e8f879eb25" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>setIsHandler</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1a768264cec2a3b9bc0d354624cfa7d863" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>setIsSized</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1a3218bb2c602a6051318249f99fea1354" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>setOpType</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1a4ae25273b2cfd378111090752b9517dc" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>setRdmaIdentifier</name></member>
      <member refid="structvt_1_1rdma_1_1_handle_manager_1a8237e079f8a8ccf049b51778a1502e16" prot="public" virt="non-virtual"><scope>vt::rdma::HandleManager</scope><name>setRdmaNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
