<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1util_1_1fntraits_1_1detail_1_1_func_traits_impl_3_01std_1_1enable__if__t_3_01std_1_1ad5feb26a13a77ffcef5dc070c332fb3" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::fntraits::detail::FuncTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, Return(*)()&gt;</compoundname>
    <includes refid="fntraits_8h" local="no">fntraits.h</includes>
    <templateparamlist>
      <param>
        <type>typename Return</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_func_traits_impl_3_01std_1_1enable__if__t_3_01std_1_1ad5feb26a13a77ffcef5dc070c332fb3_1a09e43dec76f0534e7031572ecd3b5dd7" prot="public" static="no">
        <type><ref refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_no_msg" kindref="compound">NoMsg</ref></type>
        <definition>using vt::util::fntraits::detail::FuncTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, Return(*)()&gt;::MsgT =  NoMsg</definition>
        <argsstring></argsstring>
        <name>MsgT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="174" column="1" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_func_traits_impl_3_01std_1_1enable__if__t_3_01std_1_1ad5feb26a13a77ffcef5dc070c332fb3_1a88453b0f708f1b1ec93369ee9aa75f86" prot="public" static="no">
        <type>Return</type>
        <definition>using vt::util::fntraits::detail::FuncTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, Return(*)()&gt;::ReturnT =  Return</definition>
        <argsstring></argsstring>
        <name>ReturnT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="175" column="1" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_func_traits_impl_3_01std_1_1enable__if__t_3_01std_1_1ad5feb26a13a77ffcef5dc070c332fb3_1a6ce8162e330b061d450abbd514cfbf01" prot="public" static="no">
        <type>std::tuple&lt;&gt;</type>
        <definition>using vt::util::fntraits::detail::FuncTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, Return(*)()&gt;::TupleType =  std::tuple&lt;&gt;</definition>
        <argsstring></argsstring>
        <name>TupleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="176" column="1" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1fntraits_1_1detail_1_1_func_traits_impl_3_01std_1_1enable__if__t_3_01std_1_1ad5feb26a13a77ffcef5dc070c332fb3_1add80d665c7fc3d31c661f1087f3c9143" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool vt::util::fntraits::detail::FuncTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, Return(*)()&gt;::is_member</definition>
        <argsstring></argsstring>
        <name>is_member</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/fntraits/fntraits.h" line="173" column="1" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/utils/fntraits/fntraits.h" line="172" column="1" bodyfile="src/vt/utils/fntraits/fntraits.h" bodystart="169" bodyend="177"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_func_traits_impl_3_01std_1_1enable__if__t_3_01std_1_1ad5feb26a13a77ffcef5dc070c332fb3_1add80d665c7fc3d31c661f1087f3c9143" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FuncTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, Return(*)()&gt;</scope><name>is_member</name></member>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_func_traits_impl_3_01std_1_1enable__if__t_3_01std_1_1ad5feb26a13a77ffcef5dc070c332fb3_1a09e43dec76f0534e7031572ecd3b5dd7" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FuncTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, Return(*)()&gt;</scope><name>MsgT</name></member>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_func_traits_impl_3_01std_1_1enable__if__t_3_01std_1_1ad5feb26a13a77ffcef5dc070c332fb3_1a88453b0f708f1b1ec93369ee9aa75f86" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FuncTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, Return(*)()&gt;</scope><name>ReturnT</name></member>
      <member refid="structvt_1_1util_1_1fntraits_1_1detail_1_1_func_traits_impl_3_01std_1_1enable__if__t_3_01std_1_1ad5feb26a13a77ffcef5dc070c332fb3_1a6ce8162e330b061d450abbd514cfbf01" prot="public" virt="non-virtual"><scope>vt::util::fntraits::detail::FuncTraitsImpl&lt; std::enable_if_t&lt; std::is_same_v&lt; void, void &gt; &gt;, Return(*)()&gt;</scope><name>TupleType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
