<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::storage::Storable</compoundname>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_migratable" prot="public" virt="non-virtual">vt::vrt::collection::Migratable</derivedcompoundref>
    <includes refid="storable_8h" local="no">storable.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1ade35c0e0ef45b53ffad56cbc349cfb82" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::unique_ptr&lt; <ref refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_store_elm_base" kindref="compound">StoreElmBase</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::unique_ptr&lt;StoreElmBase&gt; &gt; vt::vrt::collection::storage::Storable::map_</definition>
        <argsstring></argsstring>
        <name>map_</name>
        <briefdescription>
<para>Map of type-erased, stored values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/storable.h" line="136" column="1" bodyfile="src/vt/vrt/collection/types/storage/storable.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1aa6cb609d17c3fffd1416842cf9cc27e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::storage::Storable::Storable</definition>
        <argsstring>()=default</argsstring>
        <name>Storable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/storable.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a9fac390a50e3de2776afb730dd3c0418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::storage::Storable::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Serializer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the serializer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/storable.h" line="70" column="1" bodyfile="src/vt/vrt/collection/types/storage/storable.impl.h" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a8c0cbce1b3e261dd375d431a56a7c350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::storage::Storable::valInsert</definition>
        <argsstring>(std::string const &amp;str, U &amp;&amp;u)</argsstring>
        <name>valInsert</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>U &amp;&amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Insert a new key/value pair. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u</parametername>
</parameternamelist>
<parameterdescription>
<para>the value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/storable.h" line="79" column="1" bodyfile="src/vt/vrt/collection/types/storage/storable.impl.h" bodystart="57" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a7c4652c490f753648bedf483bcb3f75d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::storage::Storable::valInsert</definition>
        <argsstring>(std::string const &amp;str, U &amp;&amp;u, bool dump_to_json)</argsstring>
        <name>valInsert</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>U &amp;&amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dump_to_json</declname>
        </param>
        <briefdescription>
<para>Insert a new key/value pair. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u</parametername>
</parameternamelist>
<parameterdescription>
<para>the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dump_to_json</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to include in json file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/storable.h" line="89" column="1" bodyfile="src/vt/vrt/collection/types/storage/storable.impl.h" bodystart="70" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a81a60463dff73c6375422344c8eb410c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>U &amp;</type>
        <definition>U &amp; vt::vrt::collection::storage::Storable::valGet</definition>
        <argsstring>(std::string const &amp;str)</argsstring>
        <name>valGet</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Get the value from a key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the key</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the associated value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/storable.h" line="99" column="1" bodyfile="src/vt/vrt/collection/types/storage/storable.impl.h" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a5014622ff587047270462efeca4ca2dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>U const  &amp;</type>
        <definition>U const  &amp; vt::vrt::collection::storage::Storable::valGet</definition>
        <argsstring>(std::string const &amp;str) const</argsstring>
        <name>valGet</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Get the const value from a key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the key</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the associated, const value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/storable.h" line="109" column="1" bodyfile="src/vt/vrt/collection/types/storage/storable.impl.h" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a46884264a54e5be7fc231208dc468b8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::vrt::collection::storage::Storable::valExists</definition>
        <argsstring>(std::string const &amp;str) const</argsstring>
        <name>valExists</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Check if a key exists. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the key</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it exists </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/storable.h" line="118" column="1" bodyfile="src/vt/vrt/collection/types/storage/storable.cc" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a760fb8a543d0684b259fdbf078bcafb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::storage::Storable::valRemove</definition>
        <argsstring>(std::string const &amp;str)</argsstring>
        <name>valRemove</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Remove a key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the key </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/storable.h" line="125" column="1" bodyfile="src/vt/vrt/collection/types/storage/storable.cc" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1afc24cbef1191dfd0457575ddd28b12d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>nlohmann::json vt::vrt::collection::storage::Storable::toJson</definition>
        <argsstring>()</argsstring>
        <name>toJson</name>
        <briefdescription>
<para>Generate the json if applicable. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the json </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/storage/storable.h" line="132" column="1" bodyfile="src/vt/vrt/collection/types/storage/storable.cc" bodystart="59" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Trait for collection elements to store values inside the collection. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4059">
        <label>vt::vrt::collection::CollectionBase&lt; IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_base"/>
        <childnode refid="4058" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4057">
        <label>vt::vrt::collection::Migratable</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migratable"/>
        <childnode refid="4056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4056">
        <label>vt::vrt::collection::storage::Storable</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable"/>
      </node>
      <node id="4060">
        <label>vt::vrt::collection::Collection&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection"/>
        <childnode refid="4059" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4058">
        <label>vt::vrt::collection::Indexable&lt; IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_indexable"/>
        <childnode refid="4057" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/vt/vrt/collection/types/storage/storable.h" line="60" column="1" bodyfile="src/vt/vrt/collection/types/storage/storable.h" bodystart="60" bodyend="137"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1ade35c0e0ef45b53ffad56cbc349cfb82" prot="private" virt="non-virtual"><scope>vt::vrt::collection::storage::Storable</scope><name>map_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a9fac390a50e3de2776afb730dd3c0418" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::Storable</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1aa6cb609d17c3fffd1416842cf9cc27e9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::Storable</scope><name>Storable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1afc24cbef1191dfd0457575ddd28b12d9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::Storable</scope><name>toJson</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a46884264a54e5be7fc231208dc468b8e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::Storable</scope><name>valExists</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a81a60463dff73c6375422344c8eb410c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::Storable</scope><name>valGet</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a5014622ff587047270462efeca4ca2dd" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::Storable</scope><name>valGet</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a8c0cbce1b3e261dd375d431a56a7c350" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::Storable</scope><name>valInsert</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a7c4652c490f753648bedf483bcb3f75d" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::Storable</scope><name>valInsert</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1storage_1_1_storable_1a760fb8a543d0684b259fdbf078bcafb8" prot="public" virt="non-virtual"><scope>vt::vrt::collection::storage::Storable</scope><name>valRemove</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
