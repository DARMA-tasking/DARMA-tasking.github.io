<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1_indexable" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::Indexable</compoundname>
    <basecompoundref refid="structvt_1_1vrt_1_1collection_1_1_migratable" prot="public" virt="non-virtual">vt::vrt::collection::Migratable&lt; ColT &gt;</basecompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_collection_base" prot="public" virt="non-virtual">vt::vrt::collection::CollectionBase&lt; ColT, IndexT &gt;</derivedcompoundref>
    <includes refid="indexable_8h" local="no">indexable.h</includes>
    <templateparamlist>
      <param>
        <type>typename ColT</type>
      </param>
      <param>
        <type>typename IndexT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1vrt_1_1collection_1_1_indexable_1abb4eb03ec2c75b459ceec69021d22a2b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct CollectionTypeAttorney</definition>
        <argsstring></argsstring>
        <name>CollectionTypeAttorney</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/indexable.h" line="69" column="1" bodyfile="src/vt/vrt/collection/types/indexable.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_indexable_1af53a3263aa2646ce9ab84d88cf6fb7b4" prot="private" static="no" mutable="no">
        <type>IndexT</type>
        <definition>IndexT vt::vrt::collection::Indexable&lt; ColT, IndexT &gt;::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/indexable.h" line="75" column="1" bodyfile="src/vt/vrt/collection/types/indexable.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_indexable_1a124a656cc53b94e64b58f8919150b60b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::Indexable&lt; ColT, IndexT &gt;::set_index_</definition>
        <argsstring></argsstring>
        <name>set_index_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/indexable.h" line="79" column="1" bodyfile="src/vt/vrt/collection/types/indexable.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_indexable_1ad398d2870a2cd045a87adf71722eb3d3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::Indexable&lt; ColT, IndexT &gt;::Indexable</definition>
        <argsstring>(IndexT &amp;&amp;in_index)</argsstring>
        <name>Indexable</name>
        <param>
          <type>IndexT &amp;&amp;</type>
          <declname>in_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/indexable.h" line="59" column="1" bodyfile="src/vt/vrt/collection/types/indexable.impl.h" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_indexable_1a6ead4d5d60a5ae95fd846f0a81916e96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::Indexable&lt; ColT, IndexT &gt;::Indexable</definition>
        <argsstring>()=default</argsstring>
        <name>Indexable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/indexable.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_indexable_1abbb101f9344176d40171f54362b8a9b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>IndexT const  &amp;</type>
        <definition>IndexT const  &amp; vt::vrt::collection::Indexable&lt; ColT, IndexT &gt;::getIndex</definition>
        <argsstring>() const</argsstring>
        <name>getIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/indexable.h" line="62" column="1" bodyfile="src/vt/vrt/collection/types/indexable.impl.h" bodystart="67" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_indexable_1a065dbf0bf541f5adbe25b62d9c29106b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::Indexable&lt; ColT, IndexT &gt;::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/indexable.impl.h" line="79" column="1" bodyfile="src/vt/vrt/collection/types/indexable.impl.h" bodystart="79" bodyend="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_indexable_1ad72d517033d00b94ee524ae6d2b7c050" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Serializer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::collection::Indexable&lt; ColT, IndexT &gt;::serialize</definition>
        <argsstring>(Serializer &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>Serializer &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/indexable.h" line="66" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_indexable_1a63173d73fb803df5db60f73e403257a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::Indexable&lt; ColT, IndexT &gt;::setIndex</definition>
        <argsstring>(IndexT const &amp;in_index)</argsstring>
        <name>setIndex</name>
        <param>
          <type>IndexT const &amp;</type>
          <declname>in_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/types/indexable.h" line="71" column="1" bodyfile="src/vt/vrt/collection/types/indexable.impl.h" bodystart="86" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1476">
        <label>vt::vrt::collection::CollectionBase&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_base"/>
        <childnode refid="1469" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1469">
        <label>vt::vrt::collection::Indexable&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_indexable"/>
        <childnode refid="1470" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1471">
        <label>vt::vrt::collection::MigrateHookBase</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base"/>
        <childnode refid="1472" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1470">
        <label>vt::vrt::collection::Migratable&lt; ColT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migratable"/>
        <childnode refid="1471" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1474">
        <label>vt::vrt::VrtBase</label>
        <link refid="structvt_1_1vrt_1_1_vrt_base"/>
      </node>
      <node id="1478">
        <label>vt::vrt::collection::StaticCollectionBase&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_static_collection_base"/>
        <childnode refid="1476" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1472">
        <label>vt::vrt::collection::MigrateHookInterface</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_interface"/>
        <childnode refid="1473" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1477">
        <label>vt::vrt::collection::DynamicCollectionBase&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_dynamic_collection_base"/>
        <childnode refid="1476" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1480">
        <label>vt::vrt::collection::StaticInsertableCollectionBase&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_static_insertable_collection_base"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1481">
        <label>vt::vrt::collection::InsertableCollection&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_insertable_collection"/>
        <childnode refid="1480" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1473">
        <label>vt::vrt::collection::UntypedCollection</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_untyped_collection"/>
        <childnode refid="1474" relation="public-inheritance">
        </childnode>
        <childnode refid="1475" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1479">
        <label>vt::vrt::collection::Collection&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1475">
        <label>vt::HasMigrate</label>
        <link refid="structvt_1_1_has_migrate"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1482">
        <label>vt::vrt::collection::Indexable&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_indexable"/>
        <childnode refid="1483" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1484">
        <label>vt::vrt::collection::MigrateHookBase</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base"/>
        <childnode refid="1485" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1483">
        <label>vt::vrt::collection::Migratable&lt; ColT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migratable"/>
        <childnode refid="1484" relation="public-inheritance">
        </childnode>
        <childnode refid="1489" relation="usage">
          <edgelabel>stats_</edgelabel>
        </childnode>
      </node>
      <node id="1487">
        <label>vt::vrt::VrtBase</label>
        <link refid="structvt_1_1vrt_1_1_vrt_base"/>
      </node>
      <node id="1489">
        <label>vt::vrt::collection::balance::ElementStats</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1balance_1_1_element_stats"/>
      </node>
      <node id="1485">
        <label>vt::vrt::collection::MigrateHookInterface</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_interface"/>
        <childnode refid="1486" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1486">
        <label>vt::vrt::collection::UntypedCollection</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_untyped_collection"/>
        <childnode refid="1487" relation="public-inheritance">
        </childnode>
        <childnode refid="1488" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1488">
        <label>vt::HasMigrate</label>
        <link refid="structvt_1_1_has_migrate"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/types/indexable.h" line="57" column="1" bodyfile="src/vt/vrt/collection/types/indexable.h" bodystart="57" bodyend="80"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1_indexable_1abb4eb03ec2c75b459ceec69021d22a2b" prot="private" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>CollectionTypeAttorney</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1a06210254fae9b543b5db7543760ae33d" prot="public" virt="virtual"><scope>vt::vrt::collection::Indexable</scope><name>destroy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base_1a9b687a96cbba5d12d1c87aee0e985997" prot="public" virt="virtual"><scope>vt::vrt::collection::Indexable</scope><name>epiMigrateIn</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base_1aa5bdff485cc373da8828e845a45bccb6" prot="public" virt="virtual"><scope>vt::vrt::collection::Indexable</scope><name>epiMigrateOut</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1acf870053154679cbcda64e42ff479302" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>getElmID</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_indexable_1abbb101f9344176d40171f54362b8a9b5" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>getIndex</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1a30ea8cc8e915777f3106038c73cdb499" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>getProxy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1aad0c3895e538ca34ff2e75ec0e121dfa" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>getStats</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1ad4b0d23e17edfa41221af6eefb05ad69" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>getTempID</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_indexable_1af53a3263aa2646ce9ab84d88cf6fb7b4" prot="private" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>index_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_indexable_1ad398d2870a2cd045a87adf71722eb3d3" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>Indexable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_indexable_1a6ead4d5d60a5ae95fd846f0a81916e96" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>Indexable</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1aed21a92808d62ff482cb44d750267b0c" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>Migratable</name></member>
      <member refid="structvt_1_1_has_migrate_1a7b35a6214b83de93380f5fc568a744c8" prot="public" virt="pure-virtual"><scope>vt::vrt::collection::Indexable</scope><name>migrate</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base_1abed6481a2a5fd65b9c50bf190a9b8282" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>MigrateHookBase</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_interface_1a7fcec6d6a05c806ba91d418ee4dd6910" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>MigrateHookInterface</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base_1aca3947e263443c0460cea7d75fbae2bf" prot="public" virt="virtual"><scope>vt::vrt::collection::Indexable</scope><name>preMigrateIn</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base_1aefb49af057c90295e89ae029fd7ba8bb" prot="public" virt="virtual"><scope>vt::vrt::collection::Indexable</scope><name>preMigrateOut</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_indexable_1ad72d517033d00b94ee524ae6d2b7c050" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_indexable_1a065dbf0bf541f5adbe25b62d9c29106b" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_indexable_1a124a656cc53b94e64b58f8919150b60b" prot="private" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>set_index_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_indexable_1a63173d73fb803df5db60f73e403257a4" prot="private" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>setIndex</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1aa85b1aa3096a2adffe229927d76cebfd" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>setProxy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1a311e171ef2dafb9d26975f3677e4fdaa" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>stats_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1a905932dd92539fb68fa811c8a21e8e30" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>stats_elm_id_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_migratable_1a0a6e381b0220dbb905a755e8262c8695" prot="protected" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>temp_elm_id_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_untyped_collection_1aebf5af4f6a9b0376dd35e1fb3fd85bac" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>UntypedCollection</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1a5f98da4f22c55e58f5759eb84ac7cd06" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>VrtBase</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1a7cc2b4f4ad3f2807e73b3d7a0a5b3676" prot="public" virt="non-virtual"><scope>vt::vrt::collection::Indexable</scope><name>VrtBase</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1a16d15fcaabbf2e477315466dcaaa6f84" prot="public" virt="virtual"><scope>vt::vrt::collection::Indexable</scope><name>~VrtBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
