<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structcheckpoint_1_1detail_1_1get__value__type_3_01_t_00_01std_1_1void__t_3_01typename_01_t_1_1mapped__type_01_4_4" kind="struct" language="C++" prot="public">
    <compoundname>checkpoint::detail::get_value_type&lt; T, std::void_t&lt; typename T::mapped_type &gt;&gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">true_type</basecompoundref>
    <includes refid="container__serialize_8h" local="no">container_serialize.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structcheckpoint_1_1detail_1_1get__value__type_3_01_t_00_01std_1_1void__t_3_01typename_01_t_1_1mapped__type_01_4_4_1a254bda548d374f1de10f6a72d8ff5a3d" prot="public" static="no">
        <type>std::pair&lt; typename T::key_type, typename T::mapped_type &gt;</type>
        <definition>using checkpoint::detail::mapped_type &gt;&gt;&lt; T &gt;::value_type =  std::pair&lt;typename T::key_type, typename T::mapped_type&gt;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/checkpoint/src/checkpoint/container/container_serialize.h" line="64" column="3" bodyfile="lib/checkpoint/src/checkpoint/container/container_serialize.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>true_type</label>
      </node>
      <node id="1">
        <label>checkpoint::detail::mapped_type &gt;&gt;&lt; T &gt;</label>
        <link refid="structcheckpoint_1_1detail_1_1get__value__type_3_01_t_00_01std_1_1void__t_3_01typename_01_t_1_1mapped__type_01_4_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>true_type</label>
      </node>
      <node id="1">
        <label>checkpoint::detail::mapped_type &gt;&gt;&lt; T &gt;</label>
        <link refid="structcheckpoint_1_1detail_1_1get__value__type_3_01_t_00_01std_1_1void__t_3_01typename_01_t_1_1mapped__type_01_4_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/checkpoint/src/checkpoint/container/container_serialize.h" line="63" column="17" bodyfile="lib/checkpoint/src/checkpoint/container/container_serialize.h" bodystart="61" bodyend="65"/>
    <listofallmembers>
      <member refid="structcheckpoint_1_1detail_1_1get__value__type_3_01_t_00_01std_1_1void__t_3_01typename_01_t_1_1mapped__type_01_4_4_1a254bda548d374f1de10f6a72d8ff5a3d" prot="public" virt="non-virtual"><scope>checkpoint::detail::get_value_type&lt; T, std::void_t&lt; typename T::mapped_type &gt;&gt;</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
