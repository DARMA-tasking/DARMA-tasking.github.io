<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacevt_1_1auto__registry" kind="namespace" language="C++">
    <compoundname>vt::auto_registry</compoundname>
    <innerclass refid="structvt_1_1auto__registry_1_1_auto_reg_info" prot="public">vt::auto_registry::AutoRegInfo</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_base_handlers_dispatcher" prot="public">vt::auto_registry::BaseHandlersDispatcher</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_base_maps_dispatcher" prot="public">vt::auto_registry::BaseMapsDispatcher</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_base_scatter_dispatcher" prot="public">vt::auto_registry::BaseScatterDispatcher</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_functor_adapter" prot="public">vt::auto_registry::FunctorAdapter</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_functor_adapter_args" prot="public">vt::auto_registry::FunctorAdapterArgs</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_functor_adapter_args_3_01_obj_type_t_01_4" prot="public">vt::auto_registry::FunctorAdapterArgs&lt; ObjTypeT &gt;</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_functor_adapter_args_3_01_obj_type_t_00_01_msg_t_01_4" prot="public">vt::auto_registry::FunctorAdapterArgs&lt; ObjTypeT, MsgT &gt;</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_functor_adapter_member" prot="public">vt::auto_registry::FunctorAdapterMember</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_functor_adapter_param" prot="public">vt::auto_registry::FunctorAdapterParam</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_handlers_dispatcher" prot="public">vt::auto_registry::HandlersDispatcher</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_index_holder" prot="public">vt::auto_registry::IndexHolder</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_maps_dispatcher" prot="public">vt::auto_registry::MapsDispatcher</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_max_index_holder" prot="public">vt::auto_registry::MaxIndexHolder</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_num_args_tag_type" prot="public">vt::auto_registry::NumArgsTagType</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_functor" prot="public">vt::auto_registry::RegistrarFunctor</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_gen" prot="public">vt::auto_registry::RegistrarGen</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_gen_info" prot="public">vt::auto_registry::RegistrarGenInfo</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_gen_info_base" prot="public">vt::auto_registry::RegistrarGenInfoBase</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_gen_info_impl" prot="public">vt::auto_registry::RegistrarGenInfoImpl</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_helper" prot="public">vt::auto_registry::RegistrarHelper</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_index" prot="public">vt::auto_registry::RegistrarIndex</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_wrapper_functor" prot="public">vt::auto_registry::RegistrarWrapperFunctor</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_wrapper_gen" prot="public">vt::auto_registry::RegistrarWrapperGen</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_wrapper_index" prot="public">vt::auto_registry::RegistrarWrapperIndex</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_runnable_functor" prot="public">vt::auto_registry::RunnableFunctor</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_runnable_gen" prot="public">vt::auto_registry::RunnableGen</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_scatter_dispatcher" prot="public">vt::auto_registry::ScatterDispatcher</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_sentinel_object" prot="public">vt::auto_registry::SentinelObject</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_functor_3_01_runnable_t_00_01_reg_t_00_01_info_t_00_01_ec57e5bbdf77219785996b8aa3819a29" prot="public">vt::auto_registry::RegistrarFunctor&lt; RunnableT, RegT, InfoT, FnT, std::enable_if_t&lt; std::is_same&lt; InfoT, AutoRegInfo&lt; AutoActiveType &gt; &gt;::value &gt;&gt;</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_helper_3_01_runnable_t_00_01_reg_t_00_01_info_t_00_01_f99b40767eb3aff35ccfdc592721ff945" prot="public">vt::auto_registry::RegistrarHelper&lt; RunnableT, RegT, InfoT, FnT, std::enable_if_t&lt; not std::is_same&lt; InfoT, AutoRegInfo&lt; BaseHandlersDispatcherPtr &gt; &gt;::value and not std::is_same&lt; InfoT, AutoRegInfo&lt; BaseMapsDispatcherPtr &gt; &gt;::value and not std::is_same&lt; InfoT, AutoRegInfo&lt; BaseScatterDispatcherPtr &gt; &gt;::value &gt;&gt;</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_functor_3_01_runnable_t_00_01_reg_t_00_01_info_t_00_01_4e1b66c1fb5f9a7f528e44d26c164c07" prot="public">vt::auto_registry::RegistrarFunctor&lt; RunnableT, RegT, InfoT, FnT, std::enable_if_t&lt; std::is_same&lt; InfoT, AutoRegInfo&lt; AutoActiveMapType &gt; &gt;::value &gt;&gt;</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_helper_3_01_runnable_t_00_01_reg_t_00_01_info_t_00_01_f088bfe4085ec4873f9421256b755c7cc" prot="public">vt::auto_registry::RegistrarHelper&lt; RunnableT, RegT, InfoT, FnT, std::enable_if_t&lt; std::is_same&lt; InfoT, AutoRegInfo&lt; BaseScatterDispatcherPtr &gt; &gt;::value &gt;&gt;</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_helper_3_01_runnable_t_00_01_reg_t_00_01_info_t_00_01_f217d2e10f45b17517a6a17cd37637802" prot="public">vt::auto_registry::RegistrarHelper&lt; RunnableT, RegT, InfoT, FnT, std::enable_if_t&lt; std::is_same&lt; InfoT, AutoRegInfo&lt; BaseHandlersDispatcherPtr &gt; &gt;::value &gt;&gt;</innerclass>
    <innerclass refid="structvt_1_1auto__registry_1_1_registrar_helper_3_01_runnable_t_00_01_reg_t_00_01_info_t_00_01_f89013229108d15297d7bd1027e58f098" prot="public">vt::auto_registry::RegistrarHelper&lt; RunnableT, RegT, InfoT, FnT, std::enable_if_t&lt; std::is_same&lt; InfoT, AutoRegInfo&lt; BaseMapsDispatcherPtr &gt; &gt;::value &gt;&gt;</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacevt_1_1auto__registry_1a9f369ca2b484130b396729e2ddf05241" prot="public" static="no">
        <name>RegistryTypeEnum</name>
        <enumvalue id="namespacevt_1_1auto__registry_1a9f369ca2b484130b396729e2ddf05241aed767d8e868d24805af30efeb716d412" prot="public">
          <name>RegGeneral</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1auto__registry_1a9f369ca2b484130b396729e2ddf05241a5bea9106f95a8bef8ca7cd40bc47a759" prot="public">
          <name>RegMap</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1auto__registry_1a9f369ca2b484130b396729e2ddf05241ac7be085300a153f4424a5f71f3d1aacf" prot="public">
          <name>RegVrt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1auto__registry_1a9f369ca2b484130b396729e2ddf05241aa1b195fd3c3e81c3577ff2dd6e5b0615" prot="public">
          <name>RegSeed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1auto__registry_1a9f369ca2b484130b396729e2ddf05241a326a64dfc90f61612fb2c05d810b0b3a" prot="public">
          <name>RegVrtCollection</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1auto__registry_1a9f369ca2b484130b396729e2ddf05241ac314a4779c309a8472ca4d3d42476fd3" prot="public">
          <name>RegVrtCollectionMember</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1auto__registry_1a9f369ca2b484130b396729e2ddf05241a7d04d9f3c814885ce58139f6f4d7a8f3" prot="public">
          <name>RegRDMAGet</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1auto__registry_1a9f369ca2b484130b396729e2ddf05241aa7a5911e2f2656b224d1c0a709d4b4af" prot="public">
          <name>RegRDMAPut</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1auto__registry_1a9f369ca2b484130b396729e2ddf05241afcf88785f449d5ff3251eddef9e0ae8a" prot="public">
          <name>RegIndex</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1auto__registry_1a9f369ca2b484130b396729e2ddf05241a56bbebfc734558a4a4606cb988692fb9" prot="public">
          <name>RegObjGroup</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_type_enum.h" line="49" column="1" bodyfile="src/vt/registry/auto/auto_registry_type_enum.h" bodystart="49" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a0166496b1137bbc1b20adfeb5e19cf0e" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1auto__registry_1_1_base_handlers_dispatcher" kindref="compound">BaseHandlersDispatcher</ref> &gt;</type>
        <definition>using vt::auto_registry::BaseHandlersDispatcherPtr = typedef std::unique_ptr&lt;BaseHandlersDispatcher&gt;</definition>
        <argsstring></argsstring>
        <name>BaseHandlersDispatcherPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="197" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1aacf403872e2d1ae4d749738c02904c01" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1auto__registry_1_1_base_maps_dispatcher" kindref="compound">BaseMapsDispatcher</ref> &gt;</type>
        <definition>using vt::auto_registry::BaseMapsDispatcherPtr = typedef std::unique_ptr&lt;BaseMapsDispatcher&gt;</definition>
        <argsstring></argsstring>
        <name>BaseMapsDispatcherPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="198" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1aba7be4c573c0f1361c024e4d3293a62a" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1auto__registry_1_1_base_scatter_dispatcher" kindref="compound">BaseScatterDispatcher</ref> &gt;</type>
        <definition>using vt::auto_registry::BaseScatterDispatcherPtr = typedef std::unique_ptr&lt;BaseScatterDispatcher&gt;</definition>
        <argsstring></argsstring>
        <name>BaseScatterDispatcherPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="199" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a2c91a60d4d3c0d80a563c3d4f54162eb" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a0166496b1137bbc1b20adfeb5e19cf0e" kindref="member">BaseHandlersDispatcherPtr</ref></type>
        <definition>using vt::auto_registry::AutoActiveType = typedef BaseHandlersDispatcherPtr</definition>
        <argsstring></argsstring>
        <name>AutoActiveType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="201" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a092979b3ed6cf9e21e6a5823fdaa0c12" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a0166496b1137bbc1b20adfeb5e19cf0e" kindref="member">BaseHandlersDispatcherPtr</ref></type>
        <definition>using vt::auto_registry::AutoActiveFunctorType = typedef BaseHandlersDispatcherPtr</definition>
        <argsstring></argsstring>
        <name>AutoActiveFunctorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="202" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a3e4aadbe33ef7af6d8b87f72876aee41" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a0166496b1137bbc1b20adfeb5e19cf0e" kindref="member">BaseHandlersDispatcherPtr</ref></type>
        <definition>using vt::auto_registry::AutoActiveVCType = typedef BaseHandlersDispatcherPtr</definition>
        <argsstring></argsstring>
        <name>AutoActiveVCType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="203" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a14267fe1eee84b3f2205aecac48cafe4" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a0166496b1137bbc1b20adfeb5e19cf0e" kindref="member">BaseHandlersDispatcherPtr</ref></type>
        <definition>using vt::auto_registry::AutoActiveCollectionType = typedef BaseHandlersDispatcherPtr</definition>
        <argsstring></argsstring>
        <name>AutoActiveCollectionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="204" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1af5d102e15ae09e22dbc560f5b64ec758" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a0166496b1137bbc1b20adfeb5e19cf0e" kindref="member">BaseHandlersDispatcherPtr</ref></type>
        <definition>using vt::auto_registry::AutoActiveCollectionMemType = typedef BaseHandlersDispatcherPtr</definition>
        <argsstring></argsstring>
        <name>AutoActiveCollectionMemType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="205" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a4b369568c19084c562ddbeef6894a145" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a0166496b1137bbc1b20adfeb5e19cf0e" kindref="member">BaseHandlersDispatcherPtr</ref></type>
        <definition>using vt::auto_registry::AutoActiveObjGroupType = typedef BaseHandlersDispatcherPtr</definition>
        <argsstring></argsstring>
        <name>AutoActiveObjGroupType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="206" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1ae1bc8f9afc86cc589761fbbf22064601" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1aacf403872e2d1ae4d749738c02904c01" kindref="member">BaseMapsDispatcherPtr</ref></type>
        <definition>using vt::auto_registry::AutoActiveMapType = typedef BaseMapsDispatcherPtr</definition>
        <argsstring></argsstring>
        <name>AutoActiveMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="207" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a05a587ebd105ed89932361888de7e4ae" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1aacf403872e2d1ae4d749738c02904c01" kindref="member">BaseMapsDispatcherPtr</ref></type>
        <definition>using vt::auto_registry::AutoActiveMapFunctorType = typedef BaseMapsDispatcherPtr</definition>
        <argsstring></argsstring>
        <name>AutoActiveMapFunctorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="208" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a9b5f3bdf0a9a503806cfd4f2747c82f6" prot="public" static="no">
        <type><ref refid="namespacevt_1_1mapping_1a254b50d55be91c3bd002481b2e96da7e" kindref="member">mapping::ActiveSeedMapFnPtrType</ref></type>
        <definition>using vt::auto_registry::AutoActiveSeedMapType = typedef mapping::ActiveSeedMapFnPtrType</definition>
        <argsstring></argsstring>
        <name>AutoActiveSeedMapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="210" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a039813f93a5804c77ae612e0318fb335" prot="public" static="no">
        <type><ref refid="namespacevt_1ae4fbf97da623bfcd09ee8379de756257" kindref="member">ActiveRDMAGetFnPtrType</ref></type>
        <definition>using vt::auto_registry::AutoActiveRDMAGetType = typedef ActiveRDMAGetFnPtrType</definition>
        <argsstring></argsstring>
        <name>AutoActiveRDMAGetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="211" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a1f67d3efa37b61040b56258ca59df088" prot="public" static="no">
        <type><ref refid="namespacevt_1a23220eaaee4345f7371d35e3aee23c70" kindref="member">ActiveRDMAPutFnPtrType</ref></type>
        <definition>using vt::auto_registry::AutoActiveRDMAPutType = typedef ActiveRDMAPutFnPtrType</definition>
        <argsstring></argsstring>
        <name>AutoActiveRDMAPutType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="212" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1ad5ff1c3344b954a1e1212c72c74e4a7a" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using vt::auto_registry::AutoActiveIndexType = typedef std::size_t</definition>
        <argsstring></argsstring>
        <name>AutoActiveIndexType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="213" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a6014637a7590cbfcd2884a23c3e5b576" prot="public" static="no">
        <type><ref refid="structvt_1_1_handler_manager" kindref="compound">vt::HandlerManager</ref></type>
        <definition>using vt::auto_registry::HandlerManagerType = typedef vt::HandlerManager</definition>
        <argsstring></argsstring>
        <name>HandlerManagerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="215" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1ae295e18699146815bb7d7674594d95d7" prot="public" static="no">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>using vt::auto_registry::AutoHandlerType = typedef HandlerType</definition>
        <argsstring></argsstring>
        <name>AutoHandlerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="216" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1aebda1d9d765bc9147dc654ad0712c936" prot="public" static="no">
        <type>int16_t</type>
        <definition>using vt::auto_registry::NumArgsType = typedef int16_t</definition>
        <argsstring></argsstring>
        <name>NumArgsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="217" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1af3f78826dd69454aeb914a3c7bec0a52" prot="public" static="no">
        <type><ref refid="structvt_1_1auto__registry_1_1_auto_reg_info" kindref="compound">AutoRegInfo</ref>&lt; Fn &gt;</type>
        <definition>using vt::auto_registry::AutoRegInfoType = typedef AutoRegInfo&lt;Fn&gt;</definition>
        <argsstring></argsstring>
        <name>AutoRegInfoType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="322" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespacevt_1_1auto__registry_1af3f78826dd69454aeb914a3c7bec0a52" kindref="member">AutoRegInfoType</ref>&lt; RegInfoT &gt; &gt;</type>
        <definition>using vt::auto_registry::RegContType = typedef std::vector&lt;AutoRegInfoType&lt;RegInfoT&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>RegContType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="325" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a08dc8b065a2c2fd466ae6299eb9ca6b9" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" kindref="member">RegContType</ref>&lt; <ref refid="namespacevt_1_1auto__registry_1a2c91a60d4d3c0d80a563c3d4f54162eb" kindref="member">AutoActiveType</ref> &gt;</type>
        <definition>using vt::auto_registry::AutoActiveContainerType = typedef RegContType&lt;AutoActiveType&gt;</definition>
        <argsstring></argsstring>
        <name>AutoActiveContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="327" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a39e866b6d2db660ab9cd9f7cacfa5595" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" kindref="member">RegContType</ref>&lt; <ref refid="namespacevt_1_1auto__registry_1a3e4aadbe33ef7af6d8b87f72876aee41" kindref="member">AutoActiveVCType</ref> &gt;</type>
        <definition>using vt::auto_registry::AutoActiveVCContainerType = typedef RegContType&lt;AutoActiveVCType&gt;</definition>
        <argsstring></argsstring>
        <name>AutoActiveVCContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="328" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a6d9b82aa23fd781ab64b6b4e55a4c94f" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" kindref="member">RegContType</ref>&lt; <ref refid="namespacevt_1_1auto__registry_1a14267fe1eee84b3f2205aecac48cafe4" kindref="member">AutoActiveCollectionType</ref> &gt;</type>
        <definition>using vt::auto_registry::AutoActiveCollectionContainerType = typedef RegContType&lt;AutoActiveCollectionType&gt;</definition>
        <argsstring></argsstring>
        <name>AutoActiveCollectionContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="329" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a2843152c64eb58ed89991d1d2ae2c3f1" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" kindref="member">RegContType</ref>&lt; <ref refid="namespacevt_1_1auto__registry_1af5d102e15ae09e22dbc560f5b64ec758" kindref="member">AutoActiveCollectionMemType</ref> &gt;</type>
        <definition>using vt::auto_registry::AutoActiveCollectionMemContainerType = typedef RegContType&lt;AutoActiveCollectionMemType&gt;</definition>
        <argsstring></argsstring>
        <name>AutoActiveCollectionMemContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="330" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a9c5b8f15bca7b0ca4d56cae7c9f85d12" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" kindref="member">RegContType</ref>&lt; <ref refid="namespacevt_1_1auto__registry_1ae1bc8f9afc86cc589761fbbf22064601" kindref="member">AutoActiveMapType</ref> &gt;</type>
        <definition>using vt::auto_registry::AutoActiveMapContainerType = typedef RegContType&lt;AutoActiveMapType&gt;</definition>
        <argsstring></argsstring>
        <name>AutoActiveMapContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="331" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a531e799a0af154cbf069df74aec0f765" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" kindref="member">RegContType</ref>&lt; <ref refid="namespacevt_1_1auto__registry_1a05a587ebd105ed89932361888de7e4ae" kindref="member">AutoActiveMapFunctorType</ref> &gt;</type>
        <definition>using vt::auto_registry::AutoActiveMapFunctorContainerType = typedef RegContType&lt;AutoActiveMapFunctorType&gt;</definition>
        <argsstring></argsstring>
        <name>AutoActiveMapFunctorContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="332" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1ab66be9508a849981974eb0c5f9909ff4" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" kindref="member">RegContType</ref>&lt; <ref refid="namespacevt_1_1auto__registry_1a9b5f3bdf0a9a503806cfd4f2747c82f6" kindref="member">AutoActiveSeedMapType</ref> &gt;</type>
        <definition>using vt::auto_registry::AutoActiveSeedMapContainerType = typedef RegContType&lt;AutoActiveSeedMapType&gt;</definition>
        <argsstring></argsstring>
        <name>AutoActiveSeedMapContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="333" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1abe0cefefe73cf87e520a5ab3ebc88f4a" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" kindref="member">RegContType</ref>&lt; <ref refid="namespacevt_1_1auto__registry_1a092979b3ed6cf9e21e6a5823fdaa0c12" kindref="member">AutoActiveFunctorType</ref> &gt;</type>
        <definition>using vt::auto_registry::AutoActiveFunctorContainerType = typedef RegContType&lt;AutoActiveFunctorType&gt;</definition>
        <argsstring></argsstring>
        <name>AutoActiveFunctorContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="334" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a85bc3ac8c35caf2f304c24a73a07f1c6" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" kindref="member">RegContType</ref>&lt; <ref refid="namespacevt_1_1auto__registry_1a039813f93a5804c77ae612e0318fb335" kindref="member">AutoActiveRDMAGetType</ref> &gt;</type>
        <definition>using vt::auto_registry::AutoActiveRDMAGetContainerType = typedef RegContType&lt;AutoActiveRDMAGetType&gt;</definition>
        <argsstring></argsstring>
        <name>AutoActiveRDMAGetContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="335" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a7051002e8986239f9c5f986384ebec66" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" kindref="member">RegContType</ref>&lt; <ref refid="namespacevt_1_1auto__registry_1a1f67d3efa37b61040b56258ca59df088" kindref="member">AutoActiveRDMAPutType</ref> &gt;</type>
        <definition>using vt::auto_registry::AutoActiveRDMAPutContainerType = typedef RegContType&lt;AutoActiveRDMAPutType&gt;</definition>
        <argsstring></argsstring>
        <name>AutoActiveRDMAPutContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="336" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a892918ae7bc486701964f7e5e0bb0c8a" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" kindref="member">RegContType</ref>&lt; <ref refid="namespacevt_1_1auto__registry_1ad5ff1c3344b954a1e1212c72c74e4a7a" kindref="member">AutoActiveIndexType</ref> &gt;</type>
        <definition>using vt::auto_registry::AutoActiveIndexContainerType = typedef RegContType&lt;AutoActiveIndexType&gt;</definition>
        <argsstring></argsstring>
        <name>AutoActiveIndexContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="337" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a2328b4aa12baaa0b0fc0bf07ed2be755" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" kindref="member">RegContType</ref>&lt; <ref refid="namespacevt_1_1auto__registry_1a4b369568c19084c562ddbeef6894a145" kindref="member">AutoActiveObjGroupType</ref> &gt;</type>
        <definition>using vt::auto_registry::AutoActiveObjGroupContainerType = typedef RegContType&lt;AutoActiveObjGroupType&gt;</definition>
        <argsstring></argsstring>
        <name>AutoActiveObjGroupContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="338" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1auto__registry_1a0f315fdd34135b6a311be7225157bb6b" prot="public" static="no">
        <type><ref refid="namespacevt_1_1auto__registry_1a988a4943e4c8fe82b56f5b13bddceb2b" kindref="member">RegContType</ref>&lt; <ref refid="namespacevt_1_1auto__registry_1aba7be4c573c0f1361c024e4d3293a62a" kindref="member">BaseScatterDispatcherPtr</ref> &gt;</type>
        <definition>using vt::auto_registry::ScatterContainerType = typedef RegContType&lt;BaseScatterDispatcherPtr&gt;</definition>
        <argsstring></argsstring>
        <name>ScatterContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="339" column="1" bodyfile="src/vt/registry/auto/auto_registry_common.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1auto__registry_1a231f9f2b4ca53ce844f0c680bcf161d3" prot="public" static="yes" mutable="no">
        <type>struct vt::auto_registry::NumArgsTagType</type>
        <definition>struct vt::auto_registry::NumArgsTagType  vt::auto_registry::NumArgsTag</definition>
        <argsstring></argsstring>
        <name>NumArgsTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_common.h" line="221" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a94926420bd6db07e6c1ae51ab0b06227" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1a2c91a60d4d3c0d80a563c3d4f54162eb" kindref="member">AutoActiveType</ref> const  &amp;</type>
        <definition>AutoActiveType const  &amp; vt::auto_registry::getAutoHandler</definition>
        <argsstring>(HandlerType const handler)</argsstring>
        <name>getAutoHandler</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry.h" line="63" column="1" bodyfile="src/vt/registry/auto/auto_registry_impl.h" bodystart="183" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1afffd0c18d759d1903adcfd5703cf383c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1a4b369568c19084c562ddbeef6894a145" kindref="member">AutoActiveObjGroupType</ref> const  &amp;</type>
        <definition>AutoActiveObjGroupType const  &amp; vt::auto_registry::getAutoHandlerObjGroup</definition>
        <argsstring>(HandlerType han)</argsstring>
        <name>getAutoHandlerObjGroup</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>han</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry.h" line="65" column="1" bodyfile="src/vt/registry/auto/auto_registry_impl.h" bodystart="57" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a0c47caf1e4978208704029c0d0f925f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1ae295e18699146815bb7d7674594d95d7" kindref="member">AutoHandlerType</ref></type>
        <definition>AutoHandlerType vt::auto_registry::getAutoHandlerObjTypeIdx</definition>
        <argsstring>(HandlerType han)</argsstring>
        <name>getAutoHandlerObjTypeIdx</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
          <declname>han</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry.h" line="66" column="1" bodyfile="src/vt/registry/auto/auto_registry_impl.h" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1af096c71af57c441be5d6d5f9c1dd52fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>objgroup::ActiveObjType&lt; MsgT, ObjT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerObjGroup</definition>
        <argsstring>(HandlerControlType control)</argsstring>
        <name>makeAutoHandlerObjGroup</name>
        <param>
          <type><ref refid="namespacevt_1adbbef13b92f0a93b14c219b7cc8a48f2" kindref="member">HandlerControlType</ref></type>
          <declname>control</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry.h" line="69" column="1" bodyfile="src/vt/registry/auto/auto_registry_impl.h" bodystart="92" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1abac49a5da9edd265913ca474a6624a09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>ActiveTypedFnType&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandler</definition>
        <argsstring>(MsgT *const msg)</argsstring>
        <name>makeAutoHandler</name>
        <param>
          <type>MsgT *const</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a965b4801e4d0aee0e5b86342c92baf68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>ActiveTypedFnType&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandler</definition>
        <argsstring>()</argsstring>
        <name>makeAutoHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry.h" line="75" column="1" bodyfile="src/vt/registry/auto/auto_registry_impl.h" bodystart="113" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a5253f6bb76b4c7e98416fddd05c2695e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>T</type>
            <declname>value</declname>
            <defname>value</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerParam</definition>
        <argsstring>()</argsstring>
        <name>makeAutoHandlerParam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry.h" line="78" column="1" bodyfile="src/vt/registry/auto/auto_registry_impl.h" bodystart="168" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a1eb25883c6f5332dbbf4a61bd22bbf2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>objgroup::ActiveObjType&lt; MsgT, ObjT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::auto_registry::setHandlerTraceNameObjGroup</definition>
        <argsstring>(HandlerControlType ctrl, std::string const &amp;name, std::string const &amp;parent=&quot;&quot;)</argsstring>
        <name>setHandlerTraceNameObjGroup</name>
        <param>
          <type><ref refid="namespacevt_1adbbef13b92f0a93b14c219b7cc8a48f2" kindref="member">HandlerControlType</ref></type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>parent</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry.h" line="81" column="1" bodyfile="src/vt/registry/auto/auto_registry_impl.h" bodystart="202" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a9239b3d69aac342e6b7d7554ef84a9cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>ActiveTypedFnType&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::auto_registry::setHandlerTraceName</definition>
        <argsstring>(std::string const &amp;name, std::string const &amp;parent=&quot;&quot;)</argsstring>
        <name>setHandlerTraceName</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>parent</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry.h" line="86" column="1" bodyfile="src/vt/registry/auto/auto_registry_impl.h" bodystart="213" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a17d2c4f9e89f02c580ae34b0a6db8397" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto vt::auto_registry::proxyOperatorToNewInstanceReg</definition>
        <argsstring>(Args... args)</argsstring>
        <name>proxyOperatorToNewInstanceReg</name>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_general.h" line="62" column="1" bodyfile="src/vt/registry/auto/auto_registry_general.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1ab2ee3a933397aba4f50be12646be5fa7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RegT</type>
          </param>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>RegT &amp;</type>
        <definition>RegT &amp; vt::auto_registry::getAutoRegistryGen</definition>
        <argsstring>()</argsstring>
        <name>getAutoRegistryGen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_general.h" line="255" column="1" bodyfile="src/vt/registry/auto/auto_registry_general.h" bodystart="258" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1aa16ec3feb8483e91ba4775b634ba0c65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AdapterT</type>
          </param>
          <param>
            <type>typename RegT</type>
          </param>
          <param>
            <type>typename InfoT</type>
          </param>
          <param>
            <type>typename FnT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1auto__registry_1ae295e18699146815bb7d7674594d95d7" kindref="member">AutoHandlerType</ref></type>
        <definition>AutoHandlerType vt::auto_registry::registerActiveGen</definition>
        <argsstring>()</argsstring>
        <name>registerActiveGen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_general.h" line="276" column="1" bodyfile="src/vt/registry/auto/auto_registry_general_impl.h" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1ac9a527b4b0a2e875b45fe8c1f4fc881e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>T</type>
            <declname>value</declname>
            <defname>value</defname>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerObjGroupParam</definition>
        <argsstring>(HandlerControlType ctrl)</argsstring>
        <name>makeAutoHandlerObjGroupParam</name>
        <param>
          <type><ref refid="namespacevt_1adbbef13b92f0a93b14c219b7cc8a48f2" kindref="member">HandlerControlType</ref></type>
          <declname>ctrl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_impl.h" line="72" column="1" bodyfile="src/vt/registry/auto/auto_registry_impl.h" bodystart="72" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a4fa21479ba39b8c493729b941f9f267b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MessageT</type>
          </param>
          <param>
            <type>ActiveTypedFnType&lt; MessageT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeScatterHandler</definition>
        <argsstring>()</argsstring>
        <name>makeScatterHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_impl.h" line="129" column="1" bodyfile="src/vt/registry/auto/auto_registry_impl.h" bodystart="129" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1abbf75aeffaf0835ce13b2b34502fc2cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1aba7be4c573c0f1361c024e4d3293a62a" kindref="member">BaseScatterDispatcherPtr</ref> const  &amp;</type>
        <definition>BaseScatterDispatcherPtr const&amp; vt::auto_registry::getScatterAutoHandler</definition>
        <argsstring>(HandlerType const handler)</argsstring>
        <name>getScatterAutoHandler</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_impl.h" line="149" column="1" bodyfile="src/vt/registry/auto/auto_registry_impl.h" bodystart="149" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a57bbf5c4993cf2d733838cd60d17323f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>T</type>
            <declname>value</declname>
            <defname>value</defname>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerParam</definition>
        <argsstring>()</argsstring>
        <name>makeAutoHandlerParam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_impl.h" line="168" column="1" bodyfile="src/vt/registry/auto/auto_registry_impl.h" bodystart="168" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a473fb7ec675cc28fde0d6b0c5b19ac19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>bool</type>
            <declname>is_msg</declname>
            <defname>is_msg</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerFunctor</definition>
        <argsstring>()</argsstring>
        <name>makeAutoHandlerFunctor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_interface.h" line="59" column="1" bodyfile="src/vt/registry/auto/functor/auto_registry_functor_impl.h" bodystart="58" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1ae91f2c29e8baf7efbb9887bbf0067403" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1a092979b3ed6cf9e21e6a5823fdaa0c12" kindref="member">AutoActiveFunctorType</ref> const  &amp;</type>
        <definition>AutoActiveFunctorType const  &amp; vt::auto_registry::getAutoHandlerFunctor</definition>
        <argsstring>(HandlerType const handler)</argsstring>
        <name>getAutoHandlerFunctor</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/auto_registry_interface.h" line="63" column="1" bodyfile="src/vt/registry/auto/functor/auto_registry_functor_impl.h" bodystart="150" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1aa8b9f3bba171bdeddc87cd8b2293d424" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1a14267fe1eee84b3f2205aecac48cafe4" kindref="member">AutoActiveCollectionType</ref> const  &amp;</type>
        <definition>AutoActiveCollectionType const  &amp; vt::auto_registry::getAutoHandlerCollection</definition>
        <argsstring>(HandlerType const handler)</argsstring>
        <name>getAutoHandlerCollection</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/collection/auto_registry_collection.h" line="58" column="1" bodyfile="src/vt/registry/auto/collection/auto_registry_collection.impl.h" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1aaba50e36f081bdaf661f1571a6599551" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>ActiveColTypedFnType&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerCollection</definition>
        <argsstring>()</argsstring>
        <name>makeAutoHandlerCollection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/collection/auto_registry_collection.h" line="61" column="1" bodyfile="src/vt/registry/auto/collection/auto_registry_collection.impl.h" bodystart="61" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1aed13f53b41e1f57f0affe56b7f9b8ef2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1af5d102e15ae09e22dbc560f5b64ec758" kindref="member">AutoActiveCollectionMemType</ref> const  &amp;</type>
        <definition>AutoActiveCollectionMemType const  &amp; vt::auto_registry::getAutoHandlerCollectionMem</definition>
        <argsstring>(HandlerType const handler)</argsstring>
        <name>getAutoHandlerCollectionMem</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/collection/auto_registry_collection.h" line="64" column="1" bodyfile="src/vt/registry/auto/collection/auto_registry_collection.impl.h" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a495c63ee09b75f019a6b86957806a417" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>ActiveColMemberTypedFnType&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerCollectionMem</definition>
        <argsstring>()</argsstring>
        <name>makeAutoHandlerCollectionMem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/collection/auto_registry_collection.h" line="69" column="1" bodyfile="src/vt/registry/auto/collection/auto_registry_collection.impl.h" bodystart="85" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1abcd63ffd3deb79225296818ff09a8970" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>T</type>
            <declname>value</declname>
            <defname>value</defname>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerCollectionMemParam</definition>
        <argsstring>()</argsstring>
        <name>makeAutoHandlerCollectionMemParam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/collection/auto_registry_collection.h" line="72" column="1" bodyfile="src/vt/registry/auto/collection/auto_registry_collection.impl.h" bodystart="101" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a2532642e28246a717542b6a62aa8e37a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>ActiveColTypedFnType&lt; MsgT, ColT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::auto_registry::setHandlerTraceNameColl</definition>
        <argsstring>(std::string const &amp;name, std::string const &amp;parent=&quot;&quot;)</argsstring>
        <name>setHandlerTraceNameColl</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>parent</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/collection/auto_registry_collection.h" line="75" column="1" bodyfile="src/vt/registry/auto/collection/auto_registry_collection.impl.h" bodystart="115" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a409d348d2435acd9ce36a38c12d13322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>ActiveColMemberTypedFnType&lt; MsgT, ColT &gt;</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::auto_registry::setHandlerTraceNameCollMem</definition>
        <argsstring>(std::string const &amp;name, std::string const &amp;parent=&quot;&quot;)</argsstring>
        <name>setHandlerTraceNameCollMem</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>parent</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/collection/auto_registry_collection.h" line="78" column="1" bodyfile="src/vt/registry/auto/collection/auto_registry_collection.impl.h" bodystart="124" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a410be4f1a89d51d09a347c72d650ea8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1aebda1d9d765bc9147dc654ad0712c936" kindref="member">NumArgsType</ref></type>
        <definition>NumArgsType vt::auto_registry::getAutoHandlerFunctorArgs</definition>
        <argsstring>(HandlerType const handler)</argsstring>
        <name>getAutoHandlerFunctorArgs</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/functor/auto_registry_functor.h" line="59" column="1" bodyfile="src/vt/registry/auto/functor/auto_registry_functor_impl.h" bodystart="142" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1ab7e130e8790e4df4dc1d35476d1736e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename RegT</type>
          </param>
          <param>
            <type>typename InfoT</type>
          </param>
          <param>
            <type>typename FnT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1auto__registry_1ae295e18699146815bb7d7674594d95d7" kindref="member">AutoHandlerType</ref></type>
        <definition>AutoHandlerType vt::auto_registry::registerActiveFunctor</definition>
        <argsstring>()</argsstring>
        <name>registerActiveFunctor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/functor/auto_registry_functor.h" line="70" column="1" bodyfile="src/vt/registry/auto/functor/auto_registry_functor_impl.h" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a590741e9077c758629426d70ea37f4bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::auto_registry::getMaxIndexSize</definition>
        <argsstring>()</argsstring>
        <name>getMaxIndexSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/index/auto_registry_index.h" line="53" column="1" bodyfile="src/vt/registry/auto/index/auto_registry_index.impl.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a14e79eb6744c7f1584d46304356295e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1auto__registry_1ae295e18699146815bb7d7674594d95d7" kindref="member">AutoHandlerType</ref></type>
        <definition>AutoHandlerType vt::auto_registry::makeAutoIndex</definition>
        <argsstring>()</argsstring>
        <name>makeAutoIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/index/auto_registry_index.h" line="56" column="1" bodyfile="src/vt/registry/auto/index/auto_registry_index.impl.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a234dcadb35d20ff9a4d0e2464680aa36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1auto__registry_1ae295e18699146815bb7d7674594d95d7" kindref="member">AutoHandlerType</ref></type>
        <definition>AutoHandlerType vt::auto_registry::registerIndex</definition>
        <argsstring>()</argsstring>
        <name>registerIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/index/auto_registry_index_reg.h" line="89" column="1" bodyfile="src/vt/registry/auto/index/auto_registry_index_reg.h" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1ae33262fbb020ed50b79047d4ff7dd9cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1ae1bc8f9afc86cc589761fbbf22064601" kindref="member">AutoActiveMapType</ref> const  &amp;</type>
        <definition>AutoActiveMapType const  &amp; vt::auto_registry::getAutoHandlerFunctorMap</definition>
        <argsstring>(HandlerType const han)</argsstring>
        <name>getAutoHandlerFunctorMap</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>han</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/map/auto_registry_map.h" line="57" column="1" bodyfile="src/vt/registry/auto/map/auto_registry_map_impl.h" bodystart="88" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a64989cf40ed8fc5266f9eb67607f4842" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctorT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerFunctorMap</definition>
        <argsstring>()</argsstring>
        <name>makeAutoHandlerFunctorMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/map/auto_registry_map.h" line="60" column="1" bodyfile="src/vt/registry/auto/map/auto_registry_map_impl.h" bodystart="66" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a66df7e6d0ce9044414cb82bbfe077e85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1ae1bc8f9afc86cc589761fbbf22064601" kindref="member">AutoActiveMapType</ref> const  &amp;</type>
        <definition>AutoActiveMapType const  &amp; vt::auto_registry::getAutoHandlerMap</definition>
        <argsstring>(HandlerType const handler)</argsstring>
        <name>getAutoHandlerMap</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/map/auto_registry_map.h" line="63" column="1" bodyfile="src/vt/registry/auto/map/auto_registry_map_impl.h" bodystart="130" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a07288f368e86daba0e0045a8e7bfda92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexT</type>
          </param>
          <param>
            <type>ActiveMapTypedFnType&lt; IndexT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerMap</definition>
        <argsstring>()</argsstring>
        <name>makeAutoHandlerMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/map/auto_registry_map.h" line="66" column="1" bodyfile="src/vt/registry/auto/map/auto_registry_map_impl.h" bodystart="110" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a980b2e745c30944c6352bd6add8e585a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1a9b5f3bdf0a9a503806cfd4f2747c82f6" kindref="member">AutoActiveSeedMapType</ref></type>
        <definition>AutoActiveSeedMapType vt::auto_registry::getAutoHandlerSeedMap</definition>
        <argsstring>(HandlerType const handler)</argsstring>
        <name>getAutoHandlerSeedMap</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/map/auto_registry_map.h" line="69" column="1" bodyfile="src/vt/registry/auto/map/auto_registry_map_impl.h" bodystart="161" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a566748acf9e0867edadcf5e556b01b00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ActiveSeedMapFnType *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerSeedMap</definition>
        <argsstring>()</argsstring>
        <name>makeAutoHandlerSeedMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/map/auto_registry_map.h" line="72" column="1" bodyfile="src/vt/registry/auto/map/auto_registry_map_impl.h" bodystart="140" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a5969065f9c4ca94b47b3d896859d2cf9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1ae1bc8f9afc86cc589761fbbf22064601" kindref="member">AutoActiveMapType</ref> const  &amp;</type>
        <definition>AutoActiveMapType const  &amp; vt::auto_registry::getHandlerMap</definition>
        <argsstring>(HandlerType const han)</argsstring>
        <name>getHandlerMap</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>han</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/map/auto_registry_map.h" line="74" column="1" bodyfile="src/vt/registry/auto/map/auto_registry_map_impl.h" bodystart="171" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a28f13a453b20fa9ccdfafaaab238bb65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1a039813f93a5804c77ae612e0318fb335" kindref="member">AutoActiveRDMAGetType</ref></type>
        <definition>AutoActiveRDMAGetType vt::auto_registry::getAutoHandlerRDMAGet</definition>
        <argsstring>(HandlerType const handler)</argsstring>
        <name>getAutoHandlerRDMAGet</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/rdma/auto_registry_rdma.h" line="55" column="1" bodyfile="src/vt/registry/auto/rdma/auto_registry_rdma.impl.h" bodystart="74" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a56ae4569cdf3ba2d87a8e3caf0c706f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1a1f67d3efa37b61040b56258ca59df088" kindref="member">AutoActiveRDMAPutType</ref></type>
        <definition>AutoActiveRDMAPutType vt::auto_registry::getAutoHandlerRDMAPut</definition>
        <argsstring>(HandlerType const handler)</argsstring>
        <name>getAutoHandlerRDMAPut</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/rdma/auto_registry_rdma.h" line="56" column="1" bodyfile="src/vt/registry/auto/rdma/auto_registry_rdma.impl.h" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1ab932bdb453695e6be54e2647dabd8c2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>ActiveTypedRDMAPutFnType&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerRDMAPut</definition>
        <argsstring>()</argsstring>
        <name>makeAutoHandlerRDMAPut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/rdma/auto_registry_rdma.h" line="59" column="1" bodyfile="src/vt/registry/auto/rdma/auto_registry_rdma.impl.h" bodystart="62" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a4ae7737d1cfa28838af83f35778dc46f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>ActiveTypedRDMAGetFnType&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerRDMAGet</definition>
        <argsstring>()</argsstring>
        <name>makeAutoHandlerRDMAGet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/rdma/auto_registry_rdma.h" line="62" column="1" bodyfile="src/vt/registry/auto/rdma/auto_registry_rdma.impl.h" bodystart="82" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a275efac0694c523b38a098c103ef63f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1auto__registry_1a3e4aadbe33ef7af6d8b87f72876aee41" kindref="member">AutoActiveVCType</ref> const  &amp;</type>
        <definition>AutoActiveVCType const  &amp; vt::auto_registry::getAutoHandlerVC</definition>
        <argsstring>(HandlerType const handler)</argsstring>
        <name>getAutoHandlerVC</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/vc/auto_registry_vc.h" line="57" column="1" bodyfile="src/vt/registry/auto/vc/auto_registry_vc_impl.h" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1auto__registry_1a196f413473a495e5a3762d1bd95a2648" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VrtT</type>
          </param>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>ActiveVrtTypedFnType&lt; MsgT, VrtT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::auto_registry::makeAutoHandlerVC</definition>
        <argsstring>()</argsstring>
        <name>makeAutoHandlerVC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/vc/auto_registry_vc.h" line="60" column="1" bodyfile="src/vt/registry/auto/vc/auto_registry_vc_impl.h" bodystart="58" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/registry/auto/auto_registry.cc" line="50" column="1"/>
  </compounddef>
</doxygen>
