<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1rdma_1_1_manager" kind="struct" language="C++" prot="public">
    <compoundname>vt::rdma::Manager</compoundname>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component" prot="public" virt="non-virtual">vt::runtime::component::Component&lt; Manager &gt;</basecompoundref>
    <includes refid="rdmahandle_2manager_8h" local="no">vt/rdmahandle/manager.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_manager_1a75d5cdc6428ea19f5ec665b04dcd7166" prot="public" static="no">
        <type><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy</ref>&lt; <ref refid="structvt_1_1rdma_1_1_manager" kindref="compound">Manager</ref> &gt;</type>
        <definition>using vt::rdma::Manager::ProxyType =  vt::objgroup::proxy::Proxy&lt;Manager&gt;</definition>
        <argsstring></argsstring>
        <name>ProxyType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="84" column="1" bodyfile="src/vt/rdmahandle/manager.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_manager_1ad794893058cec7595bc2bcb466ce7d3f" prot="public" static="no">
        <type>std::unordered_map&lt; int64_t, <ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> &gt;</type>
        <definition>using vt::rdma::Manager::ElemToHandle =  std::unordered_map&lt;int64_t, RDMA_HandleType&gt;</definition>
        <argsstring></argsstring>
        <name>ElemToHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="85" column="1" bodyfile="src/vt/rdmahandle/manager.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_manager_1aac6e7c58d320c302ea08461941d65f6e" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref>, <ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref> &gt;</type>
        <definition>using vt::rdma::Manager::HandleToManager =  std::unordered_map&lt;RDMA_HandleType, ObjGroupProxyType&gt;</definition>
        <argsstring></argsstring>
        <name>HandleToManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="86" column="1" bodyfile="src/vt/rdmahandle/manager.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1rdma_1_1_manager_1a7a5509b81547110f71aa85027520cfd5" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1_collective_scope" kindref="compound">collective::CollectiveScope</ref></type>
        <definition>using vt::rdma::Manager::CollectiveScopeType =  collective::CollectiveScope</definition>
        <argsstring></argsstring>
        <name>CollectiveScopeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="87" column="1" bodyfile="src/vt/rdmahandle/manager.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_manager_1a1aa2e20b7843cdc8efeddda319195113" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref>, <ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref> &gt;</type>
        <definition>std::unordered_map&lt;ObjGroupProxyType, RDMA_HandleType&gt; vt::rdma::Manager::cur_handle_obj_group_</definition>
        <argsstring></argsstring>
        <name>cur_handle_obj_group_</name>
        <briefdescription>
<para>Current collective handle for a given objgroup proxy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="232" column="1" bodyfile="src/vt/rdmahandle/manager.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_manager_1adde6a1913c6089be9439b5833489a66c" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref>, <ref refid="structvt_1_1rdma_1_1_manager_1ad794893058cec7595bc2bcb466ce7d3f" kindref="member">ElemToHandle</ref> &gt;</type>
        <definition>std::unordered_map&lt;VirtualProxyType, ElemToHandle&gt; vt::rdma::Manager::cur_handle_collection_</definition>
        <argsstring></argsstring>
        <name>cur_handle_collection_</name>
        <briefdescription>
<para>Current collective handle for a given collection proxy &amp; element index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="235" column="1" bodyfile="src/vt/rdmahandle/manager.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_manager_1ae579c90339a37d953a57dc942ff5f6d1" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref>, <ref refid="structvt_1_1rdma_1_1_manager_1aac6e7c58d320c302ea08461941d65f6e" kindref="member">HandleToManager</ref> &gt;</type>
        <definition>std::unordered_map&lt;VirtualProxyType, HandleToManager&gt; vt::rdma::Manager::collection_to_manager_</definition>
        <argsstring></argsstring>
        <name>collection_to_manager_</name>
        <briefdescription>
<para>The manager for a given handle and collection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="238" column="1" bodyfile="src/vt/rdmahandle/manager.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_manager_1a033b59b7b1ecdf7e813d2999c03134cb" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1rdma_1_1_manager_1a75d5cdc6428ea19f5ec665b04dcd7166" kindref="member">ProxyType</ref></type>
        <definition>ProxyType vt::rdma::Manager::proxy_</definition>
        <argsstring></argsstring>
        <name>proxy_</name>
        <briefdescription>
<para>Objgroup proxy for this manager. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="241" column="1" bodyfile="src/vt/rdmahandle/manager.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_manager_1ad82ac94d4020fbdba45ee4bb8b69b7eb" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1rdma_1_1_manager_1a7a5509b81547110f71aa85027520cfd5" kindref="member">CollectiveScopeType</ref></type>
        <definition>CollectiveScopeType vt::rdma::Manager::collective_scope_</definition>
        <argsstring></argsstring>
        <name>collective_scope_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="248" column="1" bodyfile="src/vt/rdmahandle/manager.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="structvt_1_1rdma_1_1_manager_1ab5b5ed6b205fba6f378ef22cdb3d4143" prot="private" static="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1rdma_1a0234ff19cfb3c04718cfdfd36b2d6d88" kindref="member">HandleEnum</ref></type>
            <declname>E</declname>
            <defname>E</defname>
          </param>
        </templateparamlist>
        <type>std::unordered_map&lt; <ref refid="structvt_1_1rdma_1_1_handle_key" kindref="compound">HandleKey</ref>, <ref refid="structvt_1_1rdma_1_1_holder" kindref="compound">Holder</ref>&lt; T, E &gt; &gt;</type>
        <definition>std::unordered_map&lt; HandleKey, Holder&lt; T, E &gt; &gt; vt::rdma::Manager::holder_</definition>
        <argsstring></argsstring>
        <name>holder_</name>
        <initializer>= {}</initializer>
        <briefdescription>
<para><ref refid="structvt_1_1rdma_1_1_holder" kindref="compound">Holder</ref> for RDMA control data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="245" column="1" bodyfile="src/vt/rdmahandle/manager.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1aa5d34a3c5fa988278255562eea5f8aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::rdma::Manager::Manager</definition>
        <argsstring>()</argsstring>
        <name>Manager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="89" column="1" bodyfile="src/vt/rdmahandle/manager.cc" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1aa649646fe571ac8100a39737ac413a8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string vt::rdma::Manager::name</definition>
        <argsstring>() override</argsstring>
        <name>name</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_base_component_1a7701485f3539f78d42e6bad47fc7eb78">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="91" column="1" bodyfile="src/vt/rdmahandle/manager.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1ad4ff20cf1ba6e870326b20900e6eb581" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::rdma::Manager::finalize</definition>
        <argsstring>() override</argsstring>
        <name>finalize</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_1a098e362de01af6054e5491fba671a959">finalize</reimplements>
        <briefdescription>
<para>Destroy the component, called when VT is finalized. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="96" column="1" bodyfile="src/vt/rdmahandle/manager.cc" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1a1aea03b0c098e22cedc08159a64dbd7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1rdma_1a0234ff19cfb3c04718cfdfd36b2d6d88" kindref="member">HandleEnum</ref></type>
            <declname>E</declname>
            <defname>E</defname>
          </param>
          <param>
            <type>typename ProxyT</type>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1rdma_1_1_handle" kindref="compound">Handle</ref>&lt; T, E &gt;</type>
        <definition>Handle&lt; T, E &gt; vt::rdma::Manager::makeHandleCollectiveObjGroup</definition>
        <argsstring>(ProxyT proxy, std::size_t count, bool uniform_count=true)</argsstring>
        <name>makeHandleCollectiveObjGroup</name>
        <param>
          <type>ProxyT</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>uniform_count</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Construct a new, distributed RDMA handle for an objgroup. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the objgroup&apos;s proxy </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>the local count of T for this handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uniform_count</parametername>
</parameternamelist>
<parameterdescription>
<para>whether all handles have the same count</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new handle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="137" column="1" bodyfile="src/vt/rdmahandle/manager.impl.h" bodystart="124" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1aa86a5f0d86cd0e721f863a68fbe66a35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1rdma_1a0234ff19cfb3c04718cfdfd36b2d6d88" kindref="member">HandleEnum</ref></type>
            <declname>E</declname>
            <defname>E</defname>
          </param>
          <param>
            <type>typename ProxyT</type>
          </param>
          <param>
            <type>typename LookupT</type>
            <defval>typename <ref refid="structvt_1_1rdma_1_1_handle_set" kindref="compound">HandleSet</ref>&lt;T&gt;::LookupType</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1rdma_1_1_handle_set" kindref="compound">HandleSet</ref>&lt; T &gt;</type>
        <definition>HandleSet&lt; T &gt; vt::rdma::Manager::makeHandleSetCollectiveObjGroup</definition>
        <argsstring>(ProxyT proxy_objgroup, LookupT max_lookup, std::unordered_map&lt; LookupT, std::size_t &gt; const &amp;map, bool dense_start_with_zero, bool uniform_size=true)</argsstring>
        <name>makeHandleSetCollectiveObjGroup</name>
        <param>
          <type>ProxyT</type>
          <declname>proxy_objgroup</declname>
        </param>
        <param>
          <type>LookupT</type>
          <declname>max_lookup</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; LookupT, std::size_t &gt; const &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dense_start_with_zero</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>uniform_size</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Construct a static (non-migratable) set of new, distributed RDMA handles for an objgroup. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the objgroup&apos;s proxy </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_lookup</parametername>
</parameternamelist>
<parameterdescription>
<para>the max lookup on any node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">map</parametername>
</parameternamelist>
<parameterdescription>
<para>a map of the handles and corresponding sizes to create </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dense_start_with_zero</parametername>
</parameternamelist>
<parameterdescription>
<para>handle indices are dense and start at zero </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uniform_size</parametername>
</parameternamelist>
<parameterdescription>
<para>whether all handles have the same size</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new handle set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="159" column="1" bodyfile="src/vt/rdmahandle/manager.impl.h" bodystart="144" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1aad62be5c2cb0225139cf3d665b5fd7f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1rdma_1a0234ff19cfb3c04718cfdfd36b2d6d88" kindref="member">HandleEnum</ref></type>
            <declname>E</declname>
            <defname>E</defname>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename ProxyT</type>
          </param>
          <param>
            <type>typename IndexT</type>
            <defval>typename ColT::IndexType</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1rdma_1_1_handle" kindref="compound">Handle</ref>&lt; T, E, IndexT &gt;</type>
        <definition>Handle&lt; T, E, IndexT &gt; vt::rdma::Manager::makeCollectionHandles</definition>
        <argsstring>(ProxyT collection_proxy, std::size_t idx_count, bool uniform_size=true, RDMA_HandleType next_handle=no_rdma_handle, vt::HandlerType map_han=-1, IndexT in_range={})</argsstring>
        <name>makeCollectionHandles</name>
        <param>
          <type>ProxyT</type>
          <declname>collection_proxy</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>idx_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>uniform_size</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a10442579ec4e7ebef223818e64bcf908" kindref="member">RDMA_HandleType</ref></type>
          <declname>next_handle</declname>
          <defval>no_rdma_handle</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">vt::HandlerType</ref></type>
          <declname>map_han</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>IndexT</type>
          <declname>in_range</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Construct a migratable set of new, distributed RDMA handles for a collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">collection_proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the collection proxy with index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx_count</parametername>
</parameternamelist>
<parameterdescription>
<para>the local count of T for this handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uniform_size</parametername>
</parameternamelist>
<parameterdescription>
<para>whether all handles have the same size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">next_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>system-use-only, the handle ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">map_han</parametername>
</parameternamelist>
<parameterdescription>
<para>system-use-only, element map for collection </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_range</parametername>
</parameternamelist>
<parameterdescription>
<para>system-use-only, range for collection</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new handle set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="187" column="1" bodyfile="src/vt/rdmahandle/manager.collection.impl.h" bodystart="76" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1a4219310feca011fd242e654c9ba51280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1rdma_1a0234ff19cfb3c04718cfdfd36b2d6d88" kindref="member">HandleEnum</ref></type>
            <declname>E</declname>
            <defname>E</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::rdma::Manager::deleteHandleCollectiveObjGroup</definition>
        <argsstring>(Handle&lt; T, E &gt; const &amp;han)</argsstring>
        <name>deleteHandleCollectiveObjGroup</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle" kindref="compound">Handle</ref>&lt; T, E &gt; const &amp;</type>
          <declname>han</declname>
        </param>
        <briefdescription>
<para>Destroy and garbage collect an RDMA handle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to destroy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="199" column="1" bodyfile="src/vt/rdmahandle/manager.impl.h" bodystart="171" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1a9b3b9bf148a8225295879481345e4af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::rdma::Manager::deleteHandleSetCollectiveObjGroup</definition>
        <argsstring>(HandleSet&lt; T &gt; &amp;han)</argsstring>
        <name>deleteHandleSetCollectiveObjGroup</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_set" kindref="compound">HandleSet</ref>&lt; T &gt; &amp;</type>
          <declname>han</declname>
        </param>
        <briefdescription>
<para>Destroy and garbage collect an RDMA handle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to destroy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="207" column="1" bodyfile="src/vt/rdmahandle/manager.impl.h" bodystart="181" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1a3a1f982e986d58e91837a2b1aa048468" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1rdma_1a0234ff19cfb3c04718cfdfd36b2d6d88" kindref="member">HandleEnum</ref></type>
            <declname>E</declname>
            <defname>E</defname>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::rdma::Manager::deleteHandleCollection</definition>
        <argsstring>(Handle&lt; T, E, IndexT &gt; &amp;han)</argsstring>
        <name>deleteHandleCollection</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle" kindref="compound">Handle</ref>&lt; T, E, IndexT &gt; &amp;</type>
          <declname>han</declname>
        </param>
        <briefdescription>
<para>Destroy and garbage collect a handle from a collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">han</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to destroy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="215" column="1" bodyfile="src/vt/rdmahandle/manager.impl.h" bodystart="189" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1a60c463246971a6d782e55f13fd60d092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1rdma_1a0234ff19cfb3c04718cfdfd36b2d6d88" kindref="member">HandleEnum</ref></type>
            <declname>E</declname>
            <defname>E</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1rdma_1_1_holder" kindref="compound">Holder</ref>&lt; T, E &gt; &amp;</type>
        <definition>Holder&lt; T, E &gt; &amp; vt::rdma::Manager::getEntry</definition>
        <argsstring>(HandleKey const &amp;key)</argsstring>
        <name>getEntry</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_handle_key" kindref="compound">HandleKey</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="218" column="1" bodyfile="src/vt/rdmahandle/manager.impl.h" bodystart="214" bodyend="218"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1a15ba4b8e5b58df7f050fc1cdaf5f2bcd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::rdma::Manager::setup</definition>
        <argsstring>(ProxyType in_proxy)</argsstring>
        <name>setup</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1_manager_1a75d5cdc6428ea19f5ec665b04dcd7166" kindref="member">ProxyType</ref></type>
          <declname>in_proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="104" column="1" bodyfile="src/vt/rdmahandle/manager.cc" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1a462f2059efb91643275a921c84f72f67" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1rdma_1a0234ff19cfb3c04718cfdfd36b2d6d88" kindref="member">HandleEnum</ref></type>
            <declname>E</declname>
            <defname>E</defname>
          </param>
          <param>
            <type>typename ProxyT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::rdma::Manager::finishMake</definition>
        <argsstring>(impl::ConstructMsg&lt; T, E, ProxyT &gt; *msg)</argsstring>
        <name>finishMake</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1impl_1_1_construct_msg" kindref="compound">impl::ConstructMsg</ref>&lt; T, E, ProxyT &gt; *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="113" column="1" bodyfile="src/vt/rdmahandle/manager.impl.h" bodystart="108" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1a5dfbaf5c43691eaf3dcce5b14c4d8951" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1_1rdma_1a0234ff19cfb3c04718cfdfd36b2d6d88" kindref="member">HandleEnum</ref></type>
            <declname>E</declname>
            <defname>E</defname>
          </param>
          <param>
            <type>typename ProxyT</type>
          </param>
          <param>
            <type>typename ColT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::rdma::Manager::informCollectionRDMA</definition>
        <argsstring>(impl::InformRDMAMsg&lt; ProxyT, typename ColT::IndexType &gt; *msg)</argsstring>
        <name>informCollectionRDMA</name>
        <param>
          <type><ref refid="structvt_1_1rdma_1_1impl_1_1_inform_r_d_m_a_msg" kindref="compound">impl::InformRDMAMsg</ref>&lt; ProxyT, typename ColT::IndexType &gt; *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="122" column="1" bodyfile="src/vt/rdmahandle/manager.collection.impl.h" bodystart="56" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1a4a4972102f481ce6190cf8cf01a83cb8" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref></type>
        <definition>static vt::NodeType vt::rdma::Manager::staticHandleMap</definition>
        <argsstring>(vt::Index2D *idx, vt::Index2D *, vt::NodeType)</argsstring>
        <name>staticHandleMap</name>
        <param>
          <type><ref refid="namespacevt_1a3bab786053b74a3d856fff1412ffa73a" kindref="member">vt::Index2D</ref> *</type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a3bab786053b74a3d856fff1412ffa73a" kindref="member">vt::Index2D</ref> *</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">vt::NodeType</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="221" column="1" bodyfile="src/vt/rdmahandle/manager.h" bodystart="221" bodyend="225"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1rdma_1_1_manager_1ab79a91b3feabfc37e6f0b5000e9d3949" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1rdma_1_1_manager" kindref="compound">Manager</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Manager &gt; vt::rdma::Manager::construct</definition>
        <argsstring>()</argsstring>
        <name>construct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/rdmahandle/manager.h" line="228" column="1" bodyfile="src/vt/rdmahandle/manager.cc" bodystart="64" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>RDMA <ref refid="structvt_1_1rdma_1_1_handle" kindref="compound">Handle</ref> <ref refid="structvt_1_1rdma_1_1_manager" kindref="compound">Manager</ref> for creation of node- or index-level handles. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1913">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="1914" relation="public-inheritance">
        </childnode>
        <childnode refid="1915" relation="public-inheritance">
        </childnode>
        <childnode refid="1916" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1914">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
      </node>
      <node id="1911">
        <label>vt::rdma::Manager</label>
        <link refid="structvt_1_1rdma_1_1_manager"/>
        <childnode refid="1912" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1915">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="1916">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="1912">
        <label>vt::runtime::component::Component&lt; Manager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1913" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1919">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="1920" relation="public-inheritance">
        </childnode>
        <childnode refid="1921" relation="public-inheritance">
        </childnode>
        <childnode refid="1922" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1920">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
      </node>
      <node id="1917">
        <label>vt::rdma::Manager</label>
        <link refid="structvt_1_1rdma_1_1_manager"/>
        <childnode refid="1918" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1921">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="1922">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="1918">
        <label>vt::runtime::component::Component&lt; Manager &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="1919" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/rdmahandle/manager.h" line="83" column="1" bodyfile="src/vt/rdmahandle/manager.h" bodystart="83" bodyend="249"/>
    <listofallmembers>
      <member refid="structvt_1_1rdma_1_1_manager_1ae579c90339a37d953a57dc942ff5f6d1" prot="private" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>collection_to_manager_</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1ad82ac94d4020fbdba45ee4bb8b69b7eb" prot="private" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>collective_scope_</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1a7a5509b81547110f71aa85027520cfd5" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>CollectiveScopeType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ab954824329584814bb652ea810cd62e3" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1a94c1d493860adff6ae69c5eb31bb3f" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a7b791c5956fad1774db36bd457d6158a" prot="protected" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>component_id_</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1ab79a91b3feabfc37e6f0b5000e9d3949" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>construct</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1adde6a1913c6089be9439b5833489a66c" prot="private" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>cur_handle_collection_</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1a1aa2e20b7843cdc8efeddda319195113" prot="private" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>cur_handle_obj_group_</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1a3a1f982e986d58e91837a2b1aa048468" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>deleteHandleCollection</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1a4219310feca011fd242e654c9ba51280" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>deleteHandleCollectiveObjGroup</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1a9b3b9bf148a8225295879481345e4af3" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>deleteHandleSetCollectiveObjGroup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695" prot="public" virt="virtual"><scope>vt::rdma::Manager</scope><name>dumpState</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1ad794893058cec7595bc2bcb466ce7d3f" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>ElemToHandle</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1ad4ff20cf1ba6e870326b20900e6eb581" prot="public" virt="virtual"><scope>vt::rdma::Manager</scope><name>finalize</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1a462f2059efb91643275a921c84f72f67" prot="private" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>finishMake</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1aa5b0980785f4de36affd4d10d255634b" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>getComponentID</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1a60c463246971a6d782e55f13fd60d092" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>getEntry</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1aac6e7c58d320c302ea08461941d65f6e" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>HandleToManager</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aca5f3a7c1db697b6d0ba70de7ff8b887" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>hasCons</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a389e53dbfc20013d66ef09d4f42c0a53" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>hasNoCons</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1ab5b5ed6b205fba6f378ef22cdb3d4143" prot="private" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>holder_</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1a5dfbaf5c43691eaf3dcce5b14c4d8951" prot="private" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>informCollectionRDMA</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a7f07384d294e59796add9ce6be2d6410" prot="public" virt="virtual"><scope>vt::rdma::Manager</scope><name>initialize</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1aad62be5c2cb0225139cf3d665b5fd7f2" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>makeCollectionHandles</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1a1aea03b0c098e22cedc08159a64dbd7c" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>makeHandleCollectiveObjGroup</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1aa86a5f0d86cd0e721f863a68fbe66a35" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>makeHandleSetCollectiveObjGroup</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1aa5d34a3c5fa988278255562eea5f8aca" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>Manager</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1aa649646fe571ac8100a39737ac413a8d" prot="public" virt="virtual"><scope>vt::rdma::Manager</scope><name>name</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a5a15bd0369a9d3765a6c70249bada96f" prot="public" virt="virtual"><scope>vt::rdma::Manager</scope><name>pollable</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1dab11d9eb5bed8dfd5a3bb8fdf67f5a" prot="public" virt="virtual"><scope>vt::rdma::Manager</scope><name>progress</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1a033b59b7b1ecdf7e813d2999c03134cb" prot="private" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>proxy_</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1a75d5cdc6428ea19f5ec665b04dcd7166" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>ProxyType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a69c53ea9651f96565e23307667c8eaef" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>reducer</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1a15ba4b8e5b58df7f050fc1cdaf5f2bcd" prot="private" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>setup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aad3974307ab3b2e1df389a91310f68c2" prot="public" virt="virtual"><scope>vt::rdma::Manager</scope><name>startup</name></member>
      <member refid="structvt_1_1rdma_1_1_manager_1a4a4972102f481ce6190cf8cf01a83cb8" prot="private" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>staticHandleMap</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a7d82b061566ef21d6438f4701ae6b733" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>staticInit</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1aaada4d04e8adf4cc5556bed2fdcdb321" prot="public" virt="non-virtual"><scope>vt::rdma::Manager</scope><name>staticInit</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a9190b5cb499f9cfdacc1e0bd98a1805a" prot="public" virt="virtual"><scope>vt::rdma::Manager</scope><name>~BaseComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
