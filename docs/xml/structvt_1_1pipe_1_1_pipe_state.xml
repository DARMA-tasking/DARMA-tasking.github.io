<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1pipe_1_1_pipe_state" kind="struct" language="C++" prot="public">
    <compoundname>vt::pipe::PipeState</compoundname>
    <includes refid="pipe__state_8h" local="no">pipe_state.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1_pipe_state_1ad81b637847d9c3185420c58c9272ed7d" prot="public" static="no">
        <type>std::function&lt; void(void *)&gt;</type>
        <definition>using vt::pipe::PipeState::DispatchFuncType =  std::function&lt;void(void*)&gt;</definition>
        <argsstring></argsstring>
        <name>DispatchFuncType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="55" column="1" bodyfile="src/vt/pipe/state/pipe_state.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1pipe_1_1_pipe_state_1afc74c762209659919822abb37dda8b89" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::pipe::PipeState::automatic_</definition>
        <argsstring></argsstring>
        <name>automatic_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="78" column="1" bodyfile="src/vt/pipe/state/pipe_state.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1_pipe_state_1af73f5f3e239e4db909b1cde2aa7de3f3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::pipe::PipeState::typeless_</definition>
        <argsstring></argsstring>
        <name>typeless_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="79" column="1" bodyfile="src/vt/pipe/state/pipe_state.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1_pipe_state_1a8f072bad48c155b0c8b43ca2f709cac5" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ace18d74dd489d9ea506d38789fffce34" kindref="member">PipeRefType</ref></type>
        <definition>PipeRefType vt::pipe::PipeState::num_signals_expected_</definition>
        <argsstring></argsstring>
        <name>num_signals_expected_</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="80" column="1" bodyfile="src/vt/pipe/state/pipe_state.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1_pipe_state_1ac5a387ab62c0961fe8ffa32e0e56c439" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ace18d74dd489d9ea506d38789fffce34" kindref="member">PipeRefType</ref></type>
        <definition>PipeRefType vt::pipe::PipeState::num_signals_received_</definition>
        <argsstring></argsstring>
        <name>num_signals_received_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="81" column="1" bodyfile="src/vt/pipe/state/pipe_state.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1_pipe_state_1a258aa24dd89b3b90e4f4045ec0d52cda" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ace18d74dd489d9ea506d38789fffce34" kindref="member">PipeRefType</ref></type>
        <definition>PipeRefType vt::pipe::PipeState::num_listeners_expected_</definition>
        <argsstring></argsstring>
        <name>num_listeners_expected_</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="82" column="1" bodyfile="src/vt/pipe/state/pipe_state.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1_pipe_state_1ae46d41d7d03a6503e5b647cb9a424bcf" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ace18d74dd489d9ea506d38789fffce34" kindref="member">PipeRefType</ref></type>
        <definition>PipeRefType vt::pipe::PipeState::num_listeners_received_</definition>
        <argsstring></argsstring>
        <name>num_listeners_received_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="83" column="1" bodyfile="src/vt/pipe/state/pipe_state.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1_pipe_state_1a7444cbbce857d44145abb9e44eda23ea" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref></type>
        <definition>PipeType vt::pipe::PipeState::pipe_</definition>
        <argsstring></argsstring>
        <name>pipe_</name>
        <initializer>= no_pipe</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="84" column="1" bodyfile="src/vt/pipe/state/pipe_state.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1pipe_1_1_pipe_state_1aca06c747d1462b15cf61431ea7d35330" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1pipe_1_1_pipe_state_1ad81b637847d9c3185420c58c9272ed7d" kindref="member">DispatchFuncType</ref></type>
        <definition>DispatchFuncType vt::pipe::PipeState::dispatch_</definition>
        <argsstring></argsstring>
        <name>dispatch_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="85" column="1" bodyfile="src/vt/pipe/state/pipe_state.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_state_1ae243864cd9ea61ddc564b6b3a0870eb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::PipeState::PipeState</definition>
        <argsstring>(PipeType const &amp;in_pipe, PipeRefType const &amp;in_signals, PipeRefType const &amp;in_lis, bool const &amp;in_typeless=false)</argsstring>
        <name>PipeState</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ace18d74dd489d9ea506d38789fffce34" kindref="member">PipeRefType</ref> const &amp;</type>
          <declname>in_signals</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ace18d74dd489d9ea506d38789fffce34" kindref="member">PipeRefType</ref> const &amp;</type>
          <declname>in_lis</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>in_typeless</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="57" column="1" bodyfile="src/vt/pipe/state/pipe_state.cc" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_state_1a2f6a2a7f657b0938d0214fc16b65969c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::pipe::PipeState::PipeState</definition>
        <argsstring>(PipeType const &amp;in_pipe, bool const &amp;in_typeless=false)</argsstring>
        <name>PipeState</name>
        <param>
          <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref> const &amp;</type>
          <declname>in_pipe</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>in_typeless</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="62" column="1" bodyfile="src/vt/pipe/state/pipe_state.cc" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_state_1a3cd72e7d91b3752e2cb19bc42b7de397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::PipeState::signalRecv</definition>
        <argsstring>()</argsstring>
        <name>signalRecv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="64" column="1" bodyfile="src/vt/pipe/state/pipe_state.cc" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_state_1acfbe1dc3cac73153543a394b4f8add35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::PipeState::listenerReg</definition>
        <argsstring>()</argsstring>
        <name>listenerReg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="65" column="1" bodyfile="src/vt/pipe/state/pipe_state.cc" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_state_1ada2a4221edc09264da146ff158e37d3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::PipeState::isAutomatic</definition>
        <argsstring>() const</argsstring>
        <name>isAutomatic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="66" column="1" bodyfile="src/vt/pipe/state/pipe_state.cc" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_state_1a0e20b860728e1aded738be02074c5861" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::PipeState::isTypeless</definition>
        <argsstring>() const</argsstring>
        <name>isTypeless</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="67" column="1" bodyfile="src/vt/pipe/state/pipe_state.cc" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_state_1a8922ec696ab8a01651a53011a548b067" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::PipeState::isPersist</definition>
        <argsstring>() const</argsstring>
        <name>isPersist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="68" column="1" bodyfile="src/vt/pipe/state/pipe_state.cc" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_state_1ab69e2e4c5783a5df48087fdb436a7a2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1ac9852acda74d1896f48f406cd72c7bd3" kindref="member">PipeType</ref></type>
        <definition>PipeType vt::pipe::PipeState::getPipe</definition>
        <argsstring>() const</argsstring>
        <name>getPipe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="69" column="1" bodyfile="src/vt/pipe/state/pipe_state.cc" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_state_1a593b2ce5b04ce3e4234654f454868434" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::PipeState::finished</definition>
        <argsstring>() const</argsstring>
        <name>finished</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="70" column="1" bodyfile="src/vt/pipe/state/pipe_state.cc" bodystart="102" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_state_1ad7ec2850c900f8359affd00af6d7e0cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1ace18d74dd489d9ea506d38789fffce34" kindref="member">PipeRefType</ref></type>
        <definition>PipeRefType vt::pipe::PipeState::refsPerListener</definition>
        <argsstring>() const</argsstring>
        <name>refsPerListener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="71" column="1" bodyfile="src/vt/pipe/state/pipe_state.cc" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_state_1adbd64a53d60cfe18a7c9994cf2af901b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::pipe::PipeState::hasDispatch</definition>
        <argsstring>() const</argsstring>
        <name>hasDispatch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="73" column="1" bodyfile="src/vt/pipe/state/pipe_state.cc" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_state_1a436083ce72366f0bece034065bb3aca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::PipeState::setDispatch</definition>
        <argsstring>(DispatchFuncType in_dispatch)</argsstring>
        <name>setDispatch</name>
        <param>
          <type><ref refid="structvt_1_1pipe_1_1_pipe_state_1ad81b637847d9c3185420c58c9272ed7d" kindref="member">DispatchFuncType</ref></type>
          <declname>in_dispatch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="74" column="1" bodyfile="src/vt/pipe/state/pipe_state.cc" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1pipe_1_1_pipe_state_1a1e2aea22713ea6b745323f6b3f82b6ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::pipe::PipeState::dispatch</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>dispatch</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/state/pipe_state.h" line="75" column="1" bodyfile="src/vt/pipe/state/pipe_state.cc" bodystart="97" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/pipe/state/pipe_state.h" line="54" column="1" bodyfile="src/vt/pipe/state/pipe_state.h" bodystart="54" bodyend="86"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1afc74c762209659919822abb37dda8b89" prot="private" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>automatic_</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1a1e2aea22713ea6b745323f6b3f82b6ed" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>dispatch</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1aca06c747d1462b15cf61431ea7d35330" prot="private" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>dispatch_</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1ad81b637847d9c3185420c58c9272ed7d" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>DispatchFuncType</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1a593b2ce5b04ce3e4234654f454868434" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>finished</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1ab69e2e4c5783a5df48087fdb436a7a2f" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>getPipe</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1adbd64a53d60cfe18a7c9994cf2af901b" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>hasDispatch</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1ada2a4221edc09264da146ff158e37d3c" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>isAutomatic</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1a8922ec696ab8a01651a53011a548b067" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>isPersist</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1a0e20b860728e1aded738be02074c5861" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>isTypeless</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1acfbe1dc3cac73153543a394b4f8add35" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>listenerReg</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1a258aa24dd89b3b90e4f4045ec0d52cda" prot="private" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>num_listeners_expected_</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1ae46d41d7d03a6503e5b647cb9a424bcf" prot="private" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>num_listeners_received_</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1a8f072bad48c155b0c8b43ca2f709cac5" prot="private" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>num_signals_expected_</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1ac5a387ab62c0961fe8ffa32e0e56c439" prot="private" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>num_signals_received_</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1a7444cbbce857d44145abb9e44eda23ea" prot="private" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>pipe_</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1ae243864cd9ea61ddc564b6b3a0870eb4" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>PipeState</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1a2f6a2a7f657b0938d0214fc16b65969c" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>PipeState</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1ad7ec2850c900f8359affd00af6d7e0cc" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>refsPerListener</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1a436083ce72366f0bece034065bb3aca1" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>setDispatch</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1a3cd72e7d91b3752e2cb19bc42b7de397" prot="public" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>signalRecv</name></member>
      <member refid="structvt_1_1pipe_1_1_pipe_state_1af73f5f3e239e4db909b1cde2aa7de3f3" prot="private" virt="non-virtual"><scope>vt::pipe::PipeState</scope><name>typeless_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
