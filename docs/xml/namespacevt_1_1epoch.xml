<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacevt_1_1epoch" kind="namespace" language="C++">
    <compoundname>vt::epoch</compoundname>
    <innerclass refid="structvt_1_1epoch_1_1_epoch_manip" prot="public">vt::epoch::EpochManip</innerclass>
    <innerclass refid="structvt_1_1epoch_1_1_epoch_window" prot="public">vt::epoch::EpochWindow</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacevt_1_1epoch_1a8cbcd2bf5d3ce987837869c26a1d00ad" prot="public" static="no">
        <name>eEpochHeader</name>
        <enumvalue id="namespacevt_1_1epoch_1a8cbcd2bf5d3ce987837869c26a1d00ada4bbf8ef3641b58f81dc5320f32df0178" prot="public">
          <name>RootedEpoch</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The header bit positions for an epoch (<computeroutput><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">vt::EpochType</ref></computeroutput>) </para>        </briefdescription>
        <detaileddescription>
<para>This is a description of how <computeroutput>EpochType</computeroutput> is actually laid out in memory.</para><para><verbatim>* ========================= Layout of the Epoch =========================
*
*   w-1 .............. w-h-1 ...............w-h-c-1 ....................0
*   | &lt;EpochHeader&gt; ... | &lt;EpochCategory&gt; ... | &lt;Sequential Epoch ID&gt;   |
*                                             |                          \
*      *where*    h = epoch_header_num_bits,  |                           \
*                 c = epoch_category_num_bits,|                            \
*                 w = sizeof(EpochType) * 8   |                             \
*                 n = sizeof(NodeType)        ^  16  ^ 5 ^   [remainder]     ^
*                                            /                               |
*                                           /                                |
*                                   _______                                  |
*                                  /                                          \
*                                  | .... n .... | ..........................|
*                                    &lt;NodeType&gt;          &lt;SeqEpochID&gt;
*
*  +++++++++++++++++++++++++++++++++++++++++++  Rooted Extended Layout ++
*
*   &lt;EpochHeader&gt;   = &lt;IsRooted&gt; &lt;HasCategory&gt;
*   ....3 bits...   = ..bit 1..   ...bit 2...
*
* =======================================================================
* </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="87" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" prot="public" static="no">
        <name>eEpochCategory</name>
        <enumvalue id="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7caa6136714a068313660a40ae6bd15410c" prot="public">
          <name>NoCategoryEpoch</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7cae357e225fcb0ad22e8152c68f4d9829f" prot="public">
          <name>InsertEpoch</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7ca317c96e0b9f3b6871d4832a7f9e31e9f" prot="public">
          <name>DijkstraScholtenEpoch</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>These are different categories of epochs that are allowed. </para>        </briefdescription>
        <detaileddescription>
<para>These category bits statically identify an epoch as a certain type which can be used to dispatch control logic. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="116" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="116" bodyend="120"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1epoch_1aff6d7581e1d2888909564a5deaaf11a9" prot="public" static="no">
        <name>eEpochColl</name>
        <enumvalue id="namespacevt_1_1epoch_1aff6d7581e1d2888909564a5deaaf11a9abbdc913c0a12f5a5617e1146a11f5fb5" prot="public">
          <name>cEpochSequential</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1aff6d7581e1d2888909564a5deaaf11a9ac42416b5e5a9257c76fb7a691c7d79be" prot="public">
          <name>cEpochCategory</name>
          <initializer>= eEpochColl::cEpochSequential + epoch_seq_coll_num_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1aff6d7581e1d2888909564a5deaaf11a9a87c678c589ab0fbaf738353c3d9ea9d5" prot="public">
          <name>cEpochIsRooted</name>
          <initializer>= eEpochColl::cEpochCategory   + epoch_category_num_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Epoch layout enum for collective epochs to help with manipulating the bits. </para>        </briefdescription>
        <detaileddescription>
<para>This describes the layout of the epoch used by <computeroutput><ref refid="structvt_1_1epoch_1_1_epoch_manip" kindref="compound">EpochManip</ref></computeroutput> to get/set the bits on an <computeroutput>EpochType</computeroutput> field </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="144" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1epoch_1a03454759f2f9572f84e51fdb7d76007d" prot="public" static="no">
        <name>eEpochRoot</name>
        <enumvalue id="namespacevt_1_1epoch_1a03454759f2f9572f84e51fdb7d76007dabcd342843facde01d354a2456ae5ed1f" prot="public">
          <name>rEpochSequential</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a03454759f2f9572f84e51fdb7d76007da19f3b4d1d3a2178e5e4a66f0a260520b" prot="public">
          <name>rEpochNode</name>
          <initializer>= eEpochRoot::rEpochSequential + epoch_seq_root_num_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a03454759f2f9572f84e51fdb7d76007da39238912b8dfc520dab52217f960c860" prot="public">
          <name>rEpochCategory</name>
          <initializer>= eEpochRoot::rEpochNode       + node_num_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a03454759f2f9572f84e51fdb7d76007daac0bb1e87c328e3165a0114430693cb8" prot="public">
          <name>rEpochIsRooted</name>
          <initializer>= eEpochRoot::rEpochCategory   + epoch_category_num_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Epoch layout enum for rooted epochs to help with manipulating the bits. </para>        </briefdescription>
        <detaileddescription>
<para>This describes the layout of the epoch used by <computeroutput><ref refid="structvt_1_1epoch_1_1_epoch_manip" kindref="compound">EpochManip</ref></computeroutput> to get/set the bits on an <computeroutput>EpochType</computeroutput> field </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="157" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="157" bodyend="162"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1epoch_1a49d573a2f334563116b142b362fc7179" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref> const</type>
        <definition>constexpr BitCountType const vt::epoch::epoch_root_num_bits</definition>
        <argsstring></argsstring>
        <name>epoch_root_num_bits</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>Number of bits for root flag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="92" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1a8f2bc2bbaa699acd6df3481411c62840" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref> const</type>
        <definition>constexpr BitCountType const vt::epoch::epoch_category_num_bits</definition>
        <argsstring></argsstring>
        <name>epoch_category_num_bits</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>The number of bits for all types of categories. </para>        </briefdescription>
        <detaileddescription>
<para>Important: if you add new types of epoch headers to the preceding enum, you must ensure that the number of epoch header bits is sufficient to hold all the header types. Important: if you add categories to the enum of epoch categories, you must ensure the <computeroutput>epoch_category_num_bits</computeroutput> is sufficiently large. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="108" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1a7b685f82770a3fcc466184367e691096" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref> const</type>
        <definition>constexpr BitCountType const vt::epoch::epoch_seq_coll_num_bits</definition>
        <argsstring></argsstring>
        <name>epoch_seq_coll_num_bits</name>
        <initializer>=
  sizeof(<ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref>) * 8 -
  (epoch_root_num_bits + epoch_category_num_bits)</initializer>
        <briefdescription>
<para>The number of sequential ID bits remaining for a collective <computeroutput>EpochType</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="128" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1a5f5d2cfc3813fcc3fb6a12376caad1a8" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref> const</type>
        <definition>constexpr BitCountType const vt::epoch::epoch_seq_root_num_bits</definition>
        <argsstring></argsstring>
        <name>epoch_seq_root_num_bits</name>
        <initializer>=
  sizeof(<ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref>) * 8 -
  (epoch_root_num_bits + epoch_category_num_bits + node_num_bits)</initializer>
        <briefdescription>
<para>The total number of bits remaining for a rooted <computeroutput>EpochType</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="133" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1aa4ce334f32c1c41f1bd652549216938e" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const</type>
        <definition>constexpr EpochType const vt::epoch::first_epoch</definition>
        <argsstring></argsstring>
        <name>first_epoch</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>The first epoch sequence number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="165" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1a13e30a87ab5e94c06b7e41bfc866140c" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const</type>
        <definition>constexpr NodeType const vt::epoch::default_epoch_node</definition>
        <argsstring></argsstring>
        <name>default_epoch_node</name>
        <initializer>= uninitialized_destination</initializer>
        <briefdescription>
<para>The default epoch node used for non-rooted epochs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="168" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1a3275d160ddb287e39eb133160dbe1340" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const</type>
        <definition>constexpr eEpochCategory const vt::epoch::default_epoch_category</definition>
        <argsstring></argsstring>
        <name>default_epoch_category</name>
        <initializer>=
  <ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7caa6136714a068313660a40ae6bd15410c" kindref="member">eEpochCategory::NoCategoryEpoch</ref></initializer>
        <briefdescription>
<para>The default epoch category. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="171" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1a6f29b37c10475f34608d9f9114afb277" prot="public" static="yes" mutable="no">
        <type><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const</type>
        <definition>EpochType const vt::epoch::arch_epoch_coll</definition>
        <argsstring></argsstring>
        <name>arch_epoch_coll</name>
        <initializer>= 0ull</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.cc" line="56" column="1" bodyfile="src/vt/epoch/epoch_manip.cc" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1epoch_1ac6e7a477d5b11270b5b1e6f7a70e3bd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; vt::epoch::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, eEpochCategory const &amp;cat)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const &amp;</type>
          <declname>cat</declname>
        </param>
        <briefdescription>
<para>Operator&lt;&lt; for printing the epoch category <computeroutput>eEpochCategory</computeroutput> enum. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="123" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="123" bodyend="125"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/epoch/epoch.h" line="51" column="1"/>
  </compounddef>
</doxygen>
