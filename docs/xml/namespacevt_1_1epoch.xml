<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacevt_1_1epoch" kind="namespace" language="C++">
    <compoundname>vt::epoch</compoundname>
    <innerclass refid="structvt_1_1epoch_1_1_epoch_manip" prot="public">vt::epoch::EpochManip</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacevt_1_1epoch_1a8cbcd2bf5d3ce987837869c26a1d00ad" prot="public" static="no">
        <name>eEpochHeader</name>
        <enumvalue id="namespacevt_1_1epoch_1a8cbcd2bf5d3ce987837869c26a1d00ada4bbf8ef3641b58f81dc5320f32df0178" prot="public">
          <name>RootedEpoch</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a8cbcd2bf5d3ce987837869c26a1d00ada7e4e5d5531b30ec86d6509a25b381acf" prot="public">
          <name>CategoryEpoch</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a8cbcd2bf5d3ce987837869c26a1d00ada1a31742d5ce22b2a4450ba9687b7e7ce" prot="public">
          <name>UserEpoch</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The header bit positions for an epoch (<computeroutput><ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">vt::EpochType</ref></computeroutput>) </para>        </briefdescription>
        <detaileddescription>
<para>This is a description of how <computeroutput>EpochType</computeroutput> is actually laid out in memory.</para><para><verbatim>* ========================= Layout of the Epoch =========================
*
*   w-1 .............. w-h-1 ...............w-h-c-1 ....................0
*   | &lt;EpochHeader&gt; ... | &lt;EpochCategory&gt; ... | &lt;Sequential Epoch ID&gt;   |
*
*      *where*    h = epoch_header_num_bits,
*                 c = epoch_category_num_bits,
*                 w = sizeof(EpochType) * 8
*                 n = sizeof(NodeType)        ^             ^           ^
*                                             | .... n .... | ..........|
*                                               &lt;NodeType&gt;  &lt;SeqEpochID&gt;
*
*  +++++++++++++++++++++++++++++++++++++++++++  Rooted Extended Layout ++
*
*   &lt;EpochHeader&gt;   = &lt;IsRooted&gt; &lt;HasCategory&gt; &lt;IsUser&gt;
*   ....3 bits...   = ..bit 1..   ...bit 2...  ..bit 3..
*
* =======================================================================
* </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="84" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" prot="public" static="no">
        <name>eEpochCategory</name>
        <enumvalue id="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7caa6136714a068313660a40ae6bd15410c" prot="public">
          <name>NoCategoryEpoch</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7cae357e225fcb0ad22e8152c68f4d9829f" prot="public">
          <name>InsertEpoch</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7ca317c96e0b9f3b6871d4832a7f9e31e9f" prot="public">
          <name>DijkstraScholtenEpoch</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>These are different categories of epochs that are allowed. </para>        </briefdescription>
        <detaileddescription>
<para>Important: if you add new types of epoch headers to the preceding enum, you must ensure that the number of epoch header bits is sufficient to hold all the header types. These category bits statically identify an epoch as a certain type which can be used to dispatch control logic. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="110" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1epoch_1a327a45834b567f1268737d5e10b05f9d" prot="public" static="no">
        <name>eEpochLayout</name>
        <enumvalue id="namespacevt_1_1epoch_1a327a45834b567f1268737d5e10b05f9da4856035e8053e98e5720f6d6038a5234" prot="public">
          <name>EpochSequential</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a327a45834b567f1268737d5e10b05f9da4ff7991e6e08fa42f784b482bb1ca010" prot="public">
          <name>EpochNode</name>
          <initializer>= eEpochLayout::EpochSequential  + epoch_seq_num_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a327a45834b567f1268737d5e10b05f9da9c44720a0232af689549239e6467e63b" prot="public">
          <name>EpochCategory</name>
          <initializer>= eEpochLayout::EpochNode        + node_num_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a327a45834b567f1268737d5e10b05f9da9319a32437ae6e2b3fbd7d45ad8de721" prot="public">
          <name>EpochUser</name>
          <initializer>= eEpochLayout::EpochCategory    + epoch_category_num_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a327a45834b567f1268737d5e10b05f9dabcd935e88fb4e0eb6e87bf1aeefc9391" prot="public">
          <name>EpochHasCategory</name>
          <initializer>= eEpochLayout::EpochUser        + epoch_user_num_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a327a45834b567f1268737d5e10b05f9da436a46ce6e3fbea5f62e1c6ef4ef6704" prot="public">
          <name>EpochIsRooted</name>
          <initializer>= eEpochLayout::EpochHasCategory + epoch_hcat_num_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1epoch_1a327a45834b567f1268737d5e10b05f9da1715fdc206433ce2885bbe12d0dc9628" prot="public">
          <name>EpochSentinelEnd</name>
          <initializer>= eEpochLayout::EpochIsRooted</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Epoch layout enum to help with manipuating the bits. </para>        </briefdescription>
        <detaileddescription>
<para>This describes the layout of the epoch used by <computeroutput><ref refid="structvt_1_1epoch_1_1_epoch_manip" kindref="compound">EpochManip</ref></computeroutput> to get/set the bits on an <computeroutput>EpochType</computeroutput> field </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="142" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="142" bodyend="150"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1epoch_1a49d573a2f334563116b142b362fc7179" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref> const</type>
        <definition>constexpr BitCountType const vt::epoch::epoch_root_num_bits</definition>
        <argsstring></argsstring>
        <name>epoch_root_num_bits</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>Number of bits for root flag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="91" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1a7458ddab6bcfa1b862ce67f7c360ccf6" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref> const</type>
        <definition>constexpr BitCountType const vt::epoch::epoch_hcat_num_bits</definition>
        <argsstring></argsstring>
        <name>epoch_hcat_num_bits</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>Number of bits for category flag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="93" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1a260058a26881e76efe4f73429fbe642d" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref> const</type>
        <definition>constexpr BitCountType const vt::epoch::epoch_user_num_bits</definition>
        <argsstring></argsstring>
        <name>epoch_user_num_bits</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>Number of bits for user flag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="95" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1a8f2bc2bbaa699acd6df3481411c62840" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref> const</type>
        <definition>constexpr BitCountType const vt::epoch::epoch_category_num_bits</definition>
        <argsstring></argsstring>
        <name>epoch_category_num_bits</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>The number of bits for all types of categories. </para>        </briefdescription>
        <detaileddescription>
<para>Important: if you add categories to the enum of epoch categories, you must ensure the <computeroutput>epoch_category_num_bits</computeroutput> is sufficiently large. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="128" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1aeb9fc097a6399505c620df73473e2a3a" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1acaf7da00eb37dfb0c3479a6a982c30ef" kindref="member">BitCountType</ref> const</type>
        <definition>constexpr BitCountType const vt::epoch::epoch_seq_num_bits</definition>
        <argsstring></argsstring>
        <name>epoch_seq_num_bits</name>
        <initializer>= sizeof(<ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref>) * 8 -
  (epoch_root_num_bits     +
   epoch_hcat_num_bits     + epoch_user_num_bits +
   epoch_category_num_bits + node_num_bits)</initializer>
        <briefdescription>
<para>The total number of bits remaining the sequential part of the <computeroutput>EpochType</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="131" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1aa4ce334f32c1c41f1bd652549216938e" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1a985a5adf291c34a3ca263b3378388236" kindref="member">EpochType</ref> const</type>
        <definition>constexpr EpochType const vt::epoch::first_epoch</definition>
        <argsstring></argsstring>
        <name>first_epoch</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The first basic epoch: BasicEpoch, NoCategoryEpoch: </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="156" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1a13e30a87ab5e94c06b7e41bfc866140c" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const</type>
        <definition>constexpr NodeType const vt::epoch::default_epoch_node</definition>
        <argsstring></argsstring>
        <name>default_epoch_node</name>
        <initializer>= uninitialized_destination</initializer>
        <briefdescription>
<para>The default epoch node used for non-rooted epochs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="58" column="1" bodyfile="src/vt/epoch/epoch_manip.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1epoch_1a3275d160ddb287e39eb133160dbe1340" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const</type>
        <definition>constexpr eEpochCategory const vt::epoch::default_epoch_category</definition>
        <argsstring></argsstring>
        <name>default_epoch_category</name>
        <initializer>=
  <ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7caa6136714a068313660a40ae6bd15410c" kindref="member">eEpochCategory::NoCategoryEpoch</ref></initializer>
        <briefdescription>
<para>The default epoch category. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch_manip.h" line="60" column="1" bodyfile="src/vt/epoch/epoch_manip.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1epoch_1ac6e7a477d5b11270b5b1e6f7a70e3bd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; vt::epoch::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, eEpochCategory const &amp;cat)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1epoch_1a956abe0aceef0d10a988de8acb002c7c" kindref="member">eEpochCategory</ref> const &amp;</type>
          <declname>cat</declname>
        </param>
        <briefdescription>
<para>Operator&lt;&lt; for printing the epoch category <computeroutput>eEpochCategory</computeroutput> enum. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/epoch/epoch.h" line="117" column="1" bodyfile="src/vt/epoch/epoch.h" bodystart="117" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/epoch/epoch.h" line="52" column="1"/>
  </compounddef>
</doxygen>
