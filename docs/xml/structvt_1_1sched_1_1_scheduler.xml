<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1sched_1_1_scheduler" kind="struct" language="C++" prot="public">
    <compoundname>vt::sched::Scheduler</compoundname>
    <basecompoundref refid="structvt_1_1runtime_1_1component_1_1_component" prot="public" virt="non-virtual">vt::runtime::component::Component&lt; Scheduler &gt;</basecompoundref>
    <includes refid="scheduler_8h" local="no">scheduler.h</includes>
    <innerclass refid="structvt_1_1sched_1_1_scheduler_1_1_scheduler_loop_guard" prot="public">vt::sched::Scheduler::SchedulerLoopGuard</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1sched_1_1_scheduler_1ad40b8136b7810da5bab9b27e317e4eb3" prot="public" static="no">
        <type><ref refid="namespacevt_1_1sched_1a54756ec39b60951d6765fcfa692d1616" kindref="member">SchedulerEvent</ref></type>
        <definition>using vt::sched::Scheduler::SchedulerEventType =  SchedulerEvent</definition>
        <argsstring></argsstring>
        <name>SchedulerEventType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="113" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1sched_1_1_scheduler_1aa0c06d6e1c31a5f1c3db474036ad7d29" prot="public" static="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>using vt::sched::Scheduler::TriggerType =  std::function&lt;void()&gt;</definition>
        <argsstring></argsstring>
        <name>TriggerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="114" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1sched_1_1_scheduler_1a0b9fe2a5ee31ca84fa52764a126ad666" prot="public" static="no">
        <type>std::list&lt; <ref refid="structvt_1_1sched_1_1_scheduler_1aa0c06d6e1c31a5f1c3db474036ad7d29" kindref="member">TriggerType</ref> &gt;</type>
        <definition>using vt::sched::Scheduler::TriggerContainerType =  std::list&lt;TriggerType&gt;</definition>
        <argsstring></argsstring>
        <name>TriggerContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="115" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1sched_1_1_scheduler_1a68203230dc48285d3d50bbb363ed267b" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structvt_1_1sched_1_1_scheduler_1a0b9fe2a5ee31ca84fa52764a126ad666" kindref="member">TriggerContainerType</ref> &gt;</type>
        <definition>using vt::sched::Scheduler::EventTriggerContType =  std::vector&lt;TriggerContainerType&gt;</definition>
        <argsstring></argsstring>
        <name>EventTriggerContType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="116" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1sched_1_1_scheduler_1a954897a33d52184963961e284b326a32" prot="public" static="no">
        <type><ref refid="structvt_1_1runnable_1_1_runnable_new" kindref="compound">runnable::RunnableNew</ref> *</type>
        <definition>using vt::sched::Scheduler::RunnablePtrType =  runnable::RunnableNew*</definition>
        <argsstring></argsstring>
        <name>RunnablePtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="117" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1sched_1_1_scheduler_1a398229f29b0940cea85aba4bae78b0be" prot="public" static="no">
        <type><ref refid="namespacevt_1_1sched_1a3f19a4714fc5d9f901b45665a9d794d5" kindref="member">Unit</ref></type>
        <definition>using vt::sched::Scheduler::UnitType =  Unit</definition>
        <argsstring></argsstring>
        <name>UnitType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="130" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a8176bae441897c36b86e3fb917496a7a" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1sched_1_1_queue" kindref="compound">Queue</ref>&lt; <ref refid="structvt_1_1sched_1_1_scheduler_1a398229f29b0940cea85aba4bae78b0be" kindref="member">UnitType</ref> &gt;</type>
        <definition>Queue&lt;UnitType&gt; vt::sched::Scheduler::work_queue_</definition>
        <argsstring></argsstring>
        <name>work_queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="397" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a8d3ae065d92642e3b8cf928307c29369" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1sched_1_1_suspended_units" kindref="compound">SuspendedUnits</ref></type>
        <definition>SuspendedUnits vt::sched::Scheduler::suspended_</definition>
        <argsstring></argsstring>
        <name>suspended_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="404" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1ad67cd334d571ced5aa2ae2ffc6a8bec3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::sched::Scheduler::has_executed_</definition>
        <argsstring></argsstring>
        <name>has_executed_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="406" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a99754f7b43db03bf0c67ae64d99c86ff" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::sched::Scheduler::is_idle</definition>
        <argsstring></argsstring>
        <name>is_idle</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="407" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1ad8e195a880684117d7cbb988488c36ef" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::sched::Scheduler::is_idle_minus_term</definition>
        <argsstring></argsstring>
        <name>is_idle_minus_term</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="408" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a2cd57a3a421320e22d3ee8a6d47eb19e" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int vt::sched::Scheduler::action_depth_</definition>
        <argsstring></argsstring>
        <name>action_depth_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="410" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a4c70a87a9b15558a6ed628272a1db0fd" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::sched::Scheduler::num_term_msgs_</definition>
        <argsstring></argsstring>
        <name>num_term_msgs_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="414" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a1f4ed72508099a9959a861f75e37f334" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1sched_1_1_scheduler_1a68203230dc48285d3d50bbb363ed267b" kindref="member">EventTriggerContType</ref></type>
        <definition>EventTriggerContType vt::sched::Scheduler::event_triggers</definition>
        <argsstring></argsstring>
        <name>event_triggers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="416" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a6bd19949bf8d905ea48f59ed544f6424" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1sched_1_1_scheduler_1a68203230dc48285d3d50bbb363ed267b" kindref="member">EventTriggerContType</ref></type>
        <definition>EventTriggerContType vt::sched::Scheduler::event_triggers_once</definition>
        <argsstring></argsstring>
        <name>event_triggers_once</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="417" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1aba043e8bb57963e7a490376a06d0c96d" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref></type>
        <definition>TimeType vt::sched::Scheduler::last_progress_time_</definition>
        <argsstring></argsstring>
        <name>last_progress_time_</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="419" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a0eba67280dfcfb4d1e612e4cf15b8c4b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::sched::Scheduler::progress_time_enabled_</definition>
        <argsstring></argsstring>
        <name>progress_time_enabled_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="420" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a826e82af9529a9f2dd087e4b8c14be9d" prot="private" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t vt::sched::Scheduler::processed_after_last_progress_</definition>
        <argsstring></argsstring>
        <name>processed_after_last_progress_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="421" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a49a7b0137e9096d9197d8a664eb28bf2" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::sched::Scheduler::last_threshold_memory_usage_</definition>
        <argsstring></argsstring>
        <name>last_threshold_memory_usage_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="423" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a034c9560a2d4d8f60b3ddab063abe16d" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::sched::Scheduler::threshold_memory_usage_</definition>
        <argsstring></argsstring>
        <name>threshold_memory_usage_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="424" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a54f31a009c8abdf8b9f220832b25f668" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::sched::Scheduler::last_memory_usage_poll_</definition>
        <argsstring></argsstring>
        <name>last_memory_usage_poll_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="425" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a741c125ad6d0f15ee3b62ba2809be0ff" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::sched::Scheduler::special_progress_</definition>
        <argsstring></argsstring>
        <name>special_progress_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>time-based/k-handler progress enabled </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="427" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1acb82ca3c712cf5c36bce05c2ef8b53ad" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1diagnostic_1a55fcc9d6ffa285d1b085c01df2507d2f" kindref="member">diagnostic::Counter</ref></type>
        <definition>diagnostic::Counter vt::sched::Scheduler::progressCount</definition>
        <argsstring></argsstring>
        <name>progressCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="437" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a1b22d8a8efd0cb27fdba01ae616e060b" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1diagnostic_1a55fcc9d6ffa285d1b085c01df2507d2f" kindref="member">diagnostic::Counter</ref></type>
        <definition>diagnostic::Counter vt::sched::Scheduler::workUnitCount</definition>
        <argsstring></argsstring>
        <name>workUnitCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="438" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1afd3dfb9290dd31015056f4a89e447325" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1diagnostic_1ad68069af499e2047c28d1852d77680ee" kindref="member">diagnostic::Gauge</ref></type>
        <definition>diagnostic::Gauge vt::sched::Scheduler::queueSizeGauge</definition>
        <argsstring></argsstring>
        <name>queueSizeGauge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="439" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1adce0ae8437702f0aa29cbdea4fd58a12" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1diagnostic_1a84795feb3d3500ee2d7d59248499efb8" kindref="member">diagnostic::Timer</ref></type>
        <definition>diagnostic::Timer vt::sched::Scheduler::vtLiveTime</definition>
        <argsstring></argsstring>
        <name>vtLiveTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="440" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a89fb2b5f6ab5c29aed1db7a6a924eb13" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1diagnostic_1a84795feb3d3500ee2d7d59248499efb8" kindref="member">diagnostic::Timer</ref></type>
        <definition>diagnostic::Timer vt::sched::Scheduler::schedLoopTime</definition>
        <argsstring></argsstring>
        <name>schedLoopTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="441" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a5ccba45f9944b59236f7802f974b252e" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1diagnostic_1a84795feb3d3500ee2d7d59248499efb8" kindref="member">diagnostic::Timer</ref></type>
        <definition>diagnostic::Timer vt::sched::Scheduler::idleTime</definition>
        <argsstring></argsstring>
        <name>idleTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="442" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1sched_1_1_scheduler_1a86c062f0d1dce9656dce8af9875cee73" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1diagnostic_1a84795feb3d3500ee2d7d59248499efb8" kindref="member">diagnostic::Timer</ref></type>
        <definition>diagnostic::Timer vt::sched::Scheduler::idleTimeMinusTerm</definition>
        <argsstring></argsstring>
        <name>idleTimeMinusTerm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="443" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a54b61f09996bca1d5ed5332e1a4e2b60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::sched::Scheduler::Scheduler</definition>
        <argsstring>()</argsstring>
        <name>Scheduler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="133" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="67" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a60d76cb810df35be76d414226c24d6c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string vt::sched::Scheduler::name</definition>
        <argsstring>() override</argsstring>
        <name>name</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_name_1a33c06229bb605a2b2ceff68830d6d773">name</reimplements>
        <briefdescription>
<para>Get the name of the component. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="135" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a42835a58f541dd65cecd4d393fe78a81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::sched::Scheduler::preDiagnostic</definition>
        <argsstring>() override</argsstring>
        <name>preDiagnostic</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a4e64b5a12ffc1874065aa8b09e6309a9">preDiagnostic</reimplements>
        <briefdescription>
<para>Pre-diagnostic hook; this fires before finalize but after all work is done and the system is about to shut down. </para>        </briefdescription>
        <detaileddescription>
<para>is typically used to compute some final timings that the system might use to output time-based diagnostic metrics</para><para><simplesect kind="note"><para>Components can rely on this being called exactly once in the lifecycle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="137" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a286486c3abedb8cb189664d835acbf32" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::sched::Scheduler::startup</definition>
        <argsstring>() override</argsstring>
        <name>startup</name>
        <reimplements refid="structvt_1_1runtime_1_1component_1_1_component_1aad3974307ab3b2e1df389a91310f68c2">startup</reimplements>
        <briefdescription>
<para>Empty default overridden startup method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="138" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1aa1e901f6264aa52d918f4c64802e54b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::sched::Scheduler::shouldCallProgress</definition>
        <argsstring>(int32_t processed_since_last_progress, TimeType time_since_last_progress) const</argsstring>
        <name>shouldCallProgress</name>
        <param>
          <type>int32_t</type>
          <declname>processed_since_last_progress</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref></type>
          <declname>time_since_last_progress</declname>
        </param>
        <briefdescription>
<para>Check if progress function needs to be called. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">processed_since_last_progress</parametername>
</parameternamelist>
<parameterdescription>
<para>number of units processed since last progress </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time_since_last_progress</parametername>
</parameternamelist>
<parameterdescription>
<para>time since last progress</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether progress needs to be called </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="154" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="171" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a991208100bd8be482164303b7d8135ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::sched::Scheduler::runSchedulerOnceImpl</definition>
        <argsstring>(bool msg_only=false)</argsstring>
        <name>runSchedulerOnceImpl</name>
        <param>
          <type>bool</type>
          <declname>msg_only</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Turn the scheduler. </para>        </briefdescription>
        <detaileddescription>
<internal><para>Polls every component that might generate or complete work, and potentially runs one piece of available work.</para><para><simplesect kind="note"><para>This function should only be used internally by vt. For running scheduler in user code, one should use <computeroutput>runSchedulerWhile</computeroutput> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_only</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to only make progress on the core active messenger </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="171" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="251" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a10a319d456d171d75b3d83c5f621dacb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::sched::Scheduler::runProgress</definition>
        <argsstring>(bool msg_only=false, TimeType current_time=0.0)</argsstring>
        <name>runProgress</name>
        <param>
          <type>bool</type>
          <declname>msg_only</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref></type>
          <declname>current_time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Run the progress function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_only</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to only make progress on the core active messenger</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">current_time</parametername>
</parameternamelist>
<parameterdescription>
<para>current time </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="181" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="223" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a9c130fc0ccbf237633420a7aa35069a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::sched::Scheduler::runSchedulerWhile</definition>
        <argsstring>(std::function&lt; bool()&gt; cond)</argsstring>
        <name>runSchedulerWhile</name>
        <param>
          <type>std::function&lt; bool()&gt;</type>
          <declname>cond</declname>
        </param>
        <briefdescription>
<para>Runs the scheduler until a condition is met. </para>        </briefdescription>
        <detaileddescription>
<para>Runs the scheduler until a condition is met. This form SHOULD be used instead of &quot;while (..) { runSchedulerOnceImpl(..) }&quot; in all cases of nested scheduler loops, such as during a barrier, in order to ensure proper event unwinding and idle time tracking.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cond</parametername>
</parameternamelist>
<parameterdescription>
<para>condition to turn scheduler until met </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="193" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="314" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a818711c413c1ff0e843fffa877c52c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::sched::Scheduler::registerTrigger</definition>
        <argsstring>(SchedulerEventType const &amp;event, TriggerType trigger)</argsstring>
        <name>registerTrigger</name>
        <param>
          <type><ref refid="namespacevt_1_1sched_1a54756ec39b60951d6765fcfa692d1616" kindref="member">SchedulerEventType</ref> const &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1sched_1_1_scheduler_1aa0c06d6e1c31a5f1c3db474036ad7d29" kindref="member">TriggerType</ref></type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
<para>Register a trigger with the scheduler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>event to trigger on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trigger</parametername>
</parameternamelist>
<parameterdescription>
<para>function to trigger </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="201" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="360" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1ac6faee91832e52305c2e6ab28e1b3040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::sched::Scheduler::registerTriggerOnce</definition>
        <argsstring>(SchedulerEventType const &amp;event, TriggerType trigger)</argsstring>
        <name>registerTriggerOnce</name>
        <param>
          <type><ref refid="namespacevt_1_1sched_1a54756ec39b60951d6765fcfa692d1616" kindref="member">SchedulerEventType</ref> const &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1sched_1_1_scheduler_1aa0c06d6e1c31a5f1c3db474036ad7d29" kindref="member">TriggerType</ref></type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
<para>Register a trigger once with the scheduler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>event to trigger on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trigger</parametername>
</parameternamelist>
<parameterdescription>
<para>function to trigger </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="209" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="369" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a1bbc574a084b361bf0c88d24882ef08b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::sched::Scheduler::triggerEvent</definition>
        <argsstring>(SchedulerEventType const &amp;event)</argsstring>
        <name>triggerEvent</name>
        <param>
          <type><ref refid="namespacevt_1_1sched_1a54756ec39b60951d6765fcfa692d1616" kindref="member">SchedulerEventType</ref> const &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Trigger an event. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>the event to trigger </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="218" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="345" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1ac7a9512a4a616d51915d5dfee84ff986" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::sched::Scheduler::hasSchedRun</definition>
        <argsstring>() const</argsstring>
        <name>hasSchedRun</name>
        <briefdescription>
<para>Check if the scheduler has run, polling all components at least once. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>whether the scheduler has advanced </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="226" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="226" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a768062132bfdc473b84722a3d51c26f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RunT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::sched::Scheduler::enqueue</definition>
        <argsstring>(RunT r)</argsstring>
        <name>enqueue</name>
        <param>
          <type>RunT</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Enqueue an action to execute later with the default priority <computeroutput>default_priority</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>action to execute </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="235" column="1" bodyfile="src/vt/scheduler/scheduler.impl.h" bodystart="131" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a0bdc94a90457db0a1cf1e64bd463e927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RunT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::sched::Scheduler::enqueue</definition>
        <argsstring>(PriorityType priority, RunT r)</argsstring>
        <name>enqueue</name>
        <param>
          <type><ref refid="namespacevt_1a86bff9f556eb761b27fc8600d006ac04" kindref="member">PriorityType</ref></type>
          <declname>priority</declname>
        </param>
        <param>
          <type>RunT</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Enqueue an runnable with a priority to execute later. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">priority</parametername>
</parameternamelist>
<parameterdescription>
<para>the priority of the action </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>the runnable to execute later </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="244" column="1" bodyfile="src/vt/scheduler/scheduler.impl.h" bodystart="141" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a48a6fdb0c7384df09b467c0e68ca8e6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::sched::Scheduler::printMemoryUsage</definition>
        <argsstring>()</argsstring>
        <name>printMemoryUsage</name>
        <briefdescription>
<para>Print current memory usage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="249" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="190" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1acc1392078d0a73a20d548b96f53d47a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RunT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::sched::Scheduler::enqueue</definition>
        <argsstring>(bool is_term, RunT r)</argsstring>
        <name>enqueue</name>
        <param>
          <type>bool</type>
          <declname>is_term</declname>
        </param>
        <param>
          <type>RunT</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Enqueue an action without a message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_term</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it is a termination message or not </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>the runnable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="258" column="1" bodyfile="src/vt/scheduler/scheduler.impl.h" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1af7c602c560b0a38451e3a020dbc9dd5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename RunT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::sched::Scheduler::enqueue</definition>
        <argsstring>(MsgT *msg, RunT r)</argsstring>
        <name>enqueue</name>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>RunT</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Enqueue an action associated with a prioritized message. The action will be enqueued with the priority found on the message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>the runnable to execute later </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="268" column="1" bodyfile="src/vt/scheduler/scheduler.impl.h" bodystart="99" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a1d0bebe8809636fcd1bd3d66cb7c40b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type>typename RunT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::sched::Scheduler::enqueue</definition>
        <argsstring>(messaging::MsgSharedPtr&lt; MsgT &gt; const &amp;msg, RunT r)</argsstring>
        <name>enqueue</name>
        <param>
          <type><ref refid="structvt_1_1messaging_1_1_msg_shared_ptr" kindref="compound">messaging::MsgSharedPtr</ref>&lt; MsgT &gt; const &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>RunT</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Enqueue an runnable associated with a prioritized message. The action will be enqueued with the priority found on the message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>the runnable to execute later </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="278" column="1" bodyfile="src/vt/scheduler/scheduler.impl.h" bodystart="115" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a6ee315ffd90f37a277bb2b5622af1f4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::sched::Scheduler::workQueueSize</definition>
        <argsstring>() const</argsstring>
        <name>workQueueSize</name>
        <briefdescription>
<para>Get the work queue size. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>how many units in the queue </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="285" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="285" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a49bfd7d4a6d187c6c995b84885a1ed19" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::sched::Scheduler::workQueueEmpty</definition>
        <argsstring>() const</argsstring>
        <name>workQueueEmpty</name>
        <briefdescription>
<para>Query if the work queue is empty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it is empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="292" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="292" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a047e7a211a220c2729c51c36271c7bf1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::sched::Scheduler::isIdle</definition>
        <argsstring>() const</argsstring>
        <name>isIdle</name>
        <briefdescription>
<para>Check if the scheduler is idle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether this scheduler is idle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="299" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="299" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a3229e007ac15bfb1d337428a52157817" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::sched::Scheduler::isIdleMinusTerm</definition>
        <argsstring>() const</argsstring>
        <name>isIdleMinusTerm</name>
        <briefdescription>
<para>Check if the scheduler is idle minus termination messages. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>whether this scheduler is idle </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="306" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="306" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a9d29a90bbdd1cadd49a4d53415bfdb1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::sched::Scheduler::suspend</definition>
        <argsstring>(ThreadIDType tid, RunnablePtrType runnable, PriorityType p=default_priority)</argsstring>
        <name>suspend</name>
        <param>
          <type><ref refid="namespacevt_1a9b887d814dd25ff495a0c8270304ac02" kindref="member">ThreadIDType</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1sched_1_1_scheduler_1a954897a33d52184963961e284b326a32" kindref="member">RunnablePtrType</ref></type>
          <declname>runnable</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a86bff9f556eb761b27fc8600d006ac04" kindref="member">PriorityType</ref></type>
          <declname>p</declname>
          <defval>default_priority</defval>
        </param>
        <briefdescription>
<para>Suspend a thread with an ID and runnable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tid</parametername>
</parameternamelist>
<parameterdescription>
<para>the threads ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">runnable</parametername>
</parameternamelist>
<parameterdescription>
<para>the runnable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>the priority for resumption </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="315" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="378" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1aae177a07ed61e9de5caeab0fefef577a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::sched::Scheduler::resume</definition>
        <argsstring>(ThreadIDType tid)</argsstring>
        <name>resume</name>
        <param>
          <type><ref refid="namespacevt_1a9b887d814dd25ff495a0c8270304ac02" kindref="member">ThreadIDType</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
<para>Resume a thread that is associated with a runnable that is currently suspended. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tid</parametername>
</parameternamelist>
<parameterdescription>
<para>the suspended thread ID </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="325" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="384" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1ac4221da465bbe5d3acaa56c8c099ef7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::sched::Scheduler::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="337" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="337" bodyend="363"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1ad1b05fb0d94a3e707d7733ef5206b7c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::sched::Scheduler::checkTermSingleNode</definition>
        <argsstring>()</argsstring>
        <name>checkTermSingleNode</name>
        <briefdescription>
<para>Check for termination when running on a single node. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="143" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="60" bodyend="65"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1ac4d5c3a4baf7a6cb6bdc2e8dc1a3af91" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::sched::Scheduler::runWorkUnit</definition>
        <argsstring>(UnitType &amp;work)</argsstring>
        <name>runWorkUnit</name>
        <param>
          <type><ref refid="structvt_1_1sched_1_1_scheduler_1a398229f29b0940cea85aba4bae78b0be" kindref="member">UnitType</ref> &amp;</type>
          <declname>work</declname>
        </param>
        <briefdescription>
<para>Executes a specific work unit. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">work</parametername>
</parameternamelist>
<parameterdescription>
<para>work unit to execute </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="372" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="121" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a24bc155e1e860c1c7723373128dfd90c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::sched::Scheduler::progressMsgOnlyImpl</definition>
        <argsstring>(TimeType current_time)</argsstring>
        <name>progressMsgOnlyImpl</name>
        <param>
          <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref></type>
          <declname>current_time</declname>
        </param>
        <briefdescription>
<para>Make progress on active message only. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">current_time</parametername>
</parameternamelist>
<parameterdescription>
<para>current time</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether progress was made </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="381" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1sched_1_1_scheduler_1a29bba6f371736bcfaf542c7d6f46ad30" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::sched::Scheduler::progressImpl</definition>
        <argsstring>(TimeType current_time)</argsstring>
        <name>progressImpl</name>
        <param>
          <type><ref refid="namespacevt_1a876a9d0cd5a952859c72de8a46881442" kindref="member">TimeType</ref></type>
          <declname>current_time</declname>
        </param>
        <briefdescription>
<para>Make progress. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">current_time</parametername>
</parameternamelist>
<parameterdescription>
<para>current time</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether progress was made </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="390" column="1" bodyfile="src/vt/scheduler/scheduler.cc" bodystart="158" bodyend="164"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1sched_1_1_scheduler_1a792343e9a39ba8661b35c3c9e55f3541" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callable</type>
          </param>
        </templateparamlist>
        <type>friend void</type>
        <definition>void vt::runInEpochRooted</definition>
        <argsstring>(Callable &amp;&amp;fn)</argsstring>
        <name>vt::runInEpochRooted</name>
        <param>
          <type>Callable &amp;&amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="431" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="structvt_1_1sched_1_1_scheduler_1a71bf858d697b14435f4b7e525d2dffde" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callable</type>
          </param>
        </templateparamlist>
        <type>friend void</type>
        <definition>void vt::runInEpochCollective</definition>
        <argsstring>(Callable &amp;&amp;fn)</argsstring>
        <name>vt::runInEpochCollective</name>
        <param>
          <type>Callable &amp;&amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/scheduler/scheduler.h" line="434" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A core VT component that schedules work generated from other components. The pieces of work waiting to execute may be prioritized, see <ref refid="priority_8h" kindref="compound">src/vt/scheduler/priority.h</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>Tracks work to be completed, orders it by priority, and executes it. Polls components for incoming work. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3710">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="3711" relation="public-inheritance">
        </childnode>
        <childnode refid="3714" relation="public-inheritance">
        </childnode>
        <childnode refid="3715" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3713">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="3708">
        <label>vt::sched::Scheduler</label>
        <link refid="structvt_1_1sched_1_1_scheduler"/>
        <childnode refid="3709" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3711">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="3712" relation="public-inheritance">
        </childnode>
        <childnode refid="3713" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3709">
        <label>vt::runtime::component::Component&lt; Scheduler &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="3710" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3712">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="3714">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="3715">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3718">
        <label>vt::runtime::component::BaseComponent</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_base_component"/>
        <childnode refid="3719" relation="public-inheritance">
        </childnode>
        <childnode refid="3722" relation="public-inheritance">
        </childnode>
        <childnode refid="3723" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3726">
        <label>vt::runtime::component::meter::DiagnosticMeter</label>
        <link refid="structvt_1_1runtime_1_1component_1_1meter_1_1_diagnostic_meter"/>
      </node>
      <node id="3738">
        <label>vt::sched::Queue&lt; vt::sched::BaseUnit &gt;</label>
        <link refid="structvt_1_1sched_1_1_queue"/>
        <childnode refid="3739" relation="usage">
          <edgelabel>buf_</edgelabel>
        </childnode>
      </node>
      <node id="3733">
        <label>vt::runtime::component::detail::DiagnosticSnapshotValues&lt; GaugeDefaultType &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_snapshot_values"/>
      </node>
      <node id="3734">
        <label>vt::runtime::component::meter::Counter&lt; CounterDefaultType &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1meter_1_1_counter"/>
        <childnode refid="3726" relation="public-inheritance">
        </childnode>
        <childnode refid="3735" relation="usage">
          <edgelabel>impl_</edgelabel>
        </childnode>
      </node>
      <node id="3724">
        <label>vt::runtime::component::meter::Timer&lt; TimerDefaultType &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1meter_1_1_timer"/>
        <childnode refid="3725" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3721">
        <label>vt::runtime::component::ComponentReducer</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_reducer"/>
      </node>
      <node id="3716">
        <label>vt::sched::Scheduler</label>
        <link refid="structvt_1_1sched_1_1_scheduler"/>
        <childnode refid="3717" relation="public-inheritance">
        </childnode>
        <childnode refid="3724" relation="usage">
          <edgelabel>vtLiveTime</edgelabel>
          <edgelabel>idleTime</edgelabel>
          <edgelabel>schedLoopTime</edgelabel>
          <edgelabel>idleTimeMinusTerm</edgelabel>
        </childnode>
        <childnode refid="3730" relation="usage">
          <edgelabel>queueSizeGauge</edgelabel>
        </childnode>
        <childnode refid="3734" relation="usage">
          <edgelabel>workUnitCount</edgelabel>
          <edgelabel>progressCount</edgelabel>
        </childnode>
        <childnode refid="3737" relation="usage">
          <edgelabel>suspended_</edgelabel>
        </childnode>
        <childnode refid="3738" relation="usage">
          <edgelabel>work_queue_</edgelabel>
        </childnode>
      </node>
      <node id="3719">
        <label>vt::runtime::component::Diagnostic</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_diagnostic"/>
        <childnode refid="3720" relation="public-inheritance">
        </childnode>
        <childnode refid="3721" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3717">
        <label>vt::runtime::component::Component&lt; Scheduler &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component"/>
        <childnode refid="3718" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3725">
        <label>vt::runtime::component::meter::DiagnosticStatsPack&lt; TimerDefaultType &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1meter_1_1_diagnostic_stats_pack"/>
        <childnode refid="3726" relation="public-inheritance">
        </childnode>
        <childnode refid="3727" relation="usage">
          <edgelabel>sum_</edgelabel>
          <edgelabel>avg_</edgelabel>
          <edgelabel>max_</edgelabel>
          <edgelabel>min_</edgelabel>
        </childnode>
      </node>
      <node id="3720">
        <label>vt::runtime::component::ComponentName</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_component_name"/>
      </node>
      <node id="3729">
        <label>vt::runtime::component::detail::DiagnosticSnapshotValues&lt; TimerDefaultType &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_snapshot_values"/>
      </node>
      <node id="3730">
        <label>vt::runtime::component::meter::Gauge&lt; GaugeDefaultType &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1meter_1_1_gauge"/>
        <childnode refid="3731" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3728">
        <label>vt::runtime::component::detail::DiagnosticBase</label>
        <link refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_base"/>
      </node>
      <node id="3722">
        <label>vt::runtime::component::Bufferable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_bufferable"/>
      </node>
      <node id="3737">
        <label>vt::sched::SuspendedUnits</label>
        <link refid="structvt_1_1sched_1_1_suspended_units"/>
      </node>
      <node id="3723">
        <label>vt::runtime::component::Progressable</label>
        <link refid="structvt_1_1runtime_1_1component_1_1_progressable"/>
      </node>
      <node id="3731">
        <label>vt::runtime::component::meter::DiagnosticStatsPack&lt; GaugeDefaultType &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1meter_1_1_diagnostic_stats_pack"/>
        <childnode refid="3726" relation="public-inheritance">
        </childnode>
        <childnode refid="3732" relation="usage">
          <edgelabel>sum_</edgelabel>
          <edgelabel>avg_</edgelabel>
          <edgelabel>max_</edgelabel>
          <edgelabel>min_</edgelabel>
        </childnode>
      </node>
      <node id="3736">
        <label>vt::runtime::component::detail::DiagnosticSnapshotValues&lt; CounterDefaultType &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_snapshot_values"/>
      </node>
      <node id="3727">
        <label>vt::runtime::component::detail::DiagnosticValue&lt; TimerDefaultType &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value"/>
        <childnode refid="3728" relation="public-inheritance">
        </childnode>
        <childnode refid="3729" relation="usage">
          <edgelabel>values_</edgelabel>
        </childnode>
      </node>
      <node id="3732">
        <label>vt::runtime::component::detail::DiagnosticValue&lt; GaugeDefaultType &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value"/>
        <childnode refid="3728" relation="public-inheritance">
        </childnode>
        <childnode refid="3733" relation="usage">
          <edgelabel>values_</edgelabel>
        </childnode>
      </node>
      <node id="3739">
        <label>vt::util::container::CircularBuffer&lt; vt::sched::BaseUnit, 64 &gt;</label>
        <link refid="structvt_1_1util_1_1container_1_1_circular_buffer"/>
      </node>
      <node id="3735">
        <label>vt::runtime::component::detail::DiagnosticValue&lt; CounterDefaultType &gt;</label>
        <link refid="structvt_1_1runtime_1_1component_1_1detail_1_1_diagnostic_value"/>
        <childnode refid="3728" relation="public-inheritance">
        </childnode>
        <childnode refid="3736" relation="usage">
          <edgelabel>values_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/scheduler/scheduler.h" line="112" column="1" bodyfile="src/vt/scheduler/scheduler.h" bodystart="112" bodyend="444"/>
    <listofallmembers>
      <member refid="structvt_1_1sched_1_1_scheduler_1a2cd57a3a421320e22d3ee8a6d47eb19e" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>action_depth_</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1ad1b05fb0d94a3e707d7733ef5206b7c8" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>checkTermSingleNode</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ab954824329584814bb652ea810cd62e3" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a1a94c1d493860adff6ae69c5eb31bb3f" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>Component</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1ac9c39c6eafc72a1a240ed67ea12b3e66" prot="protected" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>component_id_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ad95ea698535524d0f82c5da9beaaaf37" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>DiagnosticBasePtrType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1adaf8bd995d4c91702e2ff7806ad9e695" prot="public" virt="virtual"><scope>vt::sched::Scheduler</scope><name>dumpState</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a768062132bfdc473b84722a3d51c26f3" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>enqueue</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a0bdc94a90457db0a1cf1e64bd463e927" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>enqueue</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1acc1392078d0a73a20d548b96f53d47a7" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>enqueue</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1af7c602c560b0a38451e3a020dbc9dd5b" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>enqueue</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a1d0bebe8809636fcd1bd3d66cb7c40b7" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>enqueue</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a1f4ed72508099a9959a861f75e37f334" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>event_triggers</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a6bd19949bf8d905ea48f59ed544f6424" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>event_triggers_once</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a68203230dc48285d3d50bbb363ed267b" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>EventTriggerContType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a43eeed44aa64c77f5491abb4f5a39e9a" prot="public" virt="virtual"><scope>vt::sched::Scheduler</scope><name>fatalError</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a098e362de01af6054e5491fba671a959" prot="public" virt="virtual"><scope>vt::sched::Scheduler</scope><name>finalize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a1d6951af40ad0b4020860c0b21b1a85c" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>foreachDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1a45ab90398777ffdbb2ad5b62fe183d99" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>getComponentID</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a9c1f4174ac87bb6ae0ec186a08adbbbb" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>getDiagnosticsFootprint</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1ad67cd334d571ced5aa2ae2ffc6a8bec3" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>has_executed_</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1ac7a9512a4a616d51915d5dfee84ff986" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>hasSchedRun</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a5ccba45f9944b59236f7802f974b252e" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>idleTime</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a86c062f0d1dce9656dce8af9875cee73" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>idleTimeMinusTerm</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a7f07384d294e59796add9ce6be2d6410" prot="public" virt="virtual"><scope>vt::sched::Scheduler</scope><name>initialize</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a99754f7b43db03bf0c67ae64d99c86ff" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>is_idle</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1ad8e195a880684117d7cbb988488c36ef" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>is_idle_minus_term</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a047e7a211a220c2729c51c36271c7bf1" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>isIdle</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a3229e007ac15bfb1d337428a52157817" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>isIdleMinusTerm</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a54f31a009c8abdf8b9f220832b25f668" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>last_memory_usage_poll_</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1aba043e8bb57963e7a490376a06d0c96d" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>last_progress_time_</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a49a7b0137e9096d9197d8a664eb28bf2" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>last_threshold_memory_usage_</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a60d76cb810df35be76d414226c24d6c4" prot="public" virt="virtual"><scope>vt::sched::Scheduler</scope><name>name</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_progressable_1a86dd4c58e43f7dbf6bd67f7a8e6df088" prot="public" virt="virtual"><scope>vt::sched::Scheduler</scope><name>needsCurrentTime</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a4c70a87a9b15558a6ed628272a1db0fd" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>num_term_msgs_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a5a15bd0369a9d3765a6c70249bada96f" prot="public" virt="virtual"><scope>vt::sched::Scheduler</scope><name>pollable</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a42835a58f541dd65cecd4d393fe78a81" prot="public" virt="virtual"><scope>vt::sched::Scheduler</scope><name>preDiagnostic</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a48a6fdb0c7384df09b467c0e68ca8e6f" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>printMemoryUsage</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a826e82af9529a9f2dd087e4b8c14be9d" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>processed_after_last_progress_</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1a45e3c09608c2d8d1a7de12e1c3347f1e" prot="public" virt="virtual"><scope>vt::sched::Scheduler</scope><name>progress</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a0eba67280dfcfb4d1e612e4cf15b8c4b" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>progress_time_enabled_</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1acb82ca3c712cf5c36bce05c2ef8b53ad" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>progressCount</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a29bba6f371736bcfaf542c7d6f46ad30" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>progressImpl</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a24bc155e1e860c1c7723373128dfd90c" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>progressMsgOnlyImpl</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1afd3dfb9290dd31015056f4a89e447325" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>queueSizeGauge</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_reducer_1af9d694f9d62d973a2cde6e52c55bef14" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>reducer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa2cd54632710e7cdf1b20dfb676c752c" prot="protected" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>registerCounter</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1abb1ee7f09f05c143dbdfd3346f6cdcba" prot="protected" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>registerCounterT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1ab71509224f5716107ef5c781ba5ff487" prot="protected" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>registerDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a20417bbb4fe4c4d7648aef3a2699b787" prot="protected" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>registerGauge</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1aa220905292aeb726254d3dff2e672b00" prot="protected" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>registerGaugeT</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a5c6035a56d54cc3de270efedad3f026e" prot="protected" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>registerTimer</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a328ecca78c6aa309bb764f3dde083c3e" prot="protected" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>registerTimerT</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a818711c413c1ff0e843fffa877c52c78" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>registerTrigger</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1ac6faee91832e52305c2e6ab28e1b3040" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>registerTriggerOnce</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1aae177a07ed61e9de5caeab0fefef577a" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>resume</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a954897a33d52184963961e284b326a32" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>RunnablePtrType</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a10a319d456d171d75b3d83c5f621dacb" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>runProgress</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a991208100bd8be482164303b7d8135ad" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>runSchedulerOnceImpl</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a9c130fc0ccbf237633420a7aa35069a4" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>runSchedulerWhile</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1ac4d5c3a4baf7a6cb6bdc2e8dc1a3af91" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>runWorkUnit</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a89fb2b5f6ab5c29aed1db7a6a924eb13" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>schedLoopTime</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a54b61f09996bca1d5ed5332e1a4e2b60" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>Scheduler</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1ad40b8136b7810da5bab9b27e317e4eb3" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>SchedulerEventType</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1ac4221da465bbe5d3acaa56c8c099ef7b" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>serialize</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1abe85836f57c42a695fdc292cd78b10cb" prot="public" virt="non-virtual" ambiguityscope="Component&lt; Scheduler &gt;::"><scope>vt::sched::Scheduler</scope><name>serialize</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1aa1e901f6264aa52d918f4c64802e54b5" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>shouldCallProgress</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a741c125ad6d0f15ee3b62ba2809be0ff" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>special_progress_</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a286486c3abedb8cb189664d835acbf32" prot="public" virt="virtual"><scope>vt::sched::Scheduler</scope><name>startup</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_component_1ac969a635e579cf7be3af696f500bf260" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>staticInit</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a9d29a90bbdd1cadd49a4d53415bfdb1a" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>suspend</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a8d3ae065d92642e3b8cf928307c29369" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>suspended_</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a034c9560a2d4d8f60b3ddab063abe16d" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>threshold_memory_usage_</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a0b9fe2a5ee31ca84fa52764a126ad666" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>TriggerContainerType</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a1bbc574a084b361bf0c88d24882ef08b" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>triggerEvent</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1aa0c06d6e1c31a5f1c3db474036ad7d29" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>TriggerType</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a398229f29b0940cea85aba4bae78b0be" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>UnitType</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a97b0e8ff394c8aa04035ff15165eb087" prot="protected" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>updateDiagnostic</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_diagnostic_1a75e737294bb63e1898d9ac4515f0cf63" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>UpdateType</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a71bf858d697b14435f4b7e525d2dffde" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>vt::runInEpochCollective</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a792343e9a39ba8661b35c3c9e55f3541" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>vt::runInEpochRooted</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1adce0ae8437702f0aa29cbdea4fd58a12" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>vtLiveTime</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a8176bae441897c36b86e3fb917496a7a" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>work_queue_</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a49bfd7d4a6d187c6c995b84885a1ed19" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>workQueueEmpty</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a6ee315ffd90f37a277bb2b5622af1f4f" prot="public" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>workQueueSize</name></member>
      <member refid="structvt_1_1sched_1_1_scheduler_1a1b22d8a8efd0cb27fdba01ae616e060b" prot="private" virt="non-virtual"><scope>vt::sched::Scheduler</scope><name>workUnitCount</name></member>
      <member refid="structvt_1_1runtime_1_1component_1_1_base_component_1a9190b5cb499f9cfdacc1e0bd98a1805a" prot="public" virt="virtual"><scope>vt::sched::Scheduler</scope><name>~BaseComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
