<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="handle_8index_8impl_8h" kind="file" language="C++">
    <compoundname>handle.index.impl.h</compoundname>
    <includes refid="config_8h" local="yes">vt/config.h</includes>
    <includedby refid="handle_8impl_8h" local="yes">src/vt/rdmahandle/handle.impl.h</includedby>
    <incdepgraph>
      <node id="200786">
        <label>vt/configs/features/features_featureswitch.h</label>
        <link refid="features__featureswitch_8h"/>
      </node>
      <node id="200796">
        <label>functional</label>
      </node>
      <node id="200799">
        <label>vt/epoch/epoch_impl_type.h</label>
        <link refid="epoch__impl__type_8h"/>
        <childnode refid="200800" relation="include">
        </childnode>
      </node>
      <node id="200803">
        <label>fmt/format.h</label>
      </node>
      <node id="200806">
        <label>vt/configs/debug/debug_colorize.h</label>
        <link refid="debug__colorize_8h"/>
        <childnode refid="200791" relation="include">
        </childnode>
        <childnode refid="200795" relation="include">
        </childnode>
        <childnode refid="200792" relation="include">
        </childnode>
      </node>
      <node id="200791">
        <label>vt/configs/arguments/app_config.h</label>
        <link refid="app__config_8h"/>
        <childnode refid="200792" relation="include">
        </childnode>
        <childnode refid="200793" relation="include">
        </childnode>
      </node>
      <node id="200780">
        <label>src/vt/rdmahandle/handle.index.impl.h</label>
        <link refid="handle_8index_8impl_8h"/>
        <childnode refid="200781" relation="include">
        </childnode>
      </node>
      <node id="200785">
        <label>cstdint</label>
      </node>
      <node id="200825">
        <label>vt/configs/error/assert_out_info.impl.h</label>
        <link refid="assert__out__info_8impl_8h"/>
        <childnode refid="200811" relation="include">
        </childnode>
        <childnode refid="200795" relation="include">
        </childnode>
        <childnode refid="200819" relation="include">
        </childnode>
        <childnode refid="200824" relation="include">
        </childnode>
        <childnode refid="200826" relation="include">
        </childnode>
        <childnode refid="200806" relation="include">
        </childnode>
        <childnode refid="200823" relation="include">
        </childnode>
        <childnode refid="200802" relation="include">
        </childnode>
        <childnode refid="200816" relation="include">
        </childnode>
        <childnode refid="200792" relation="include">
        </childnode>
        <childnode refid="200828" relation="include">
        </childnode>
        <childnode refid="200808" relation="include">
        </childnode>
      </node>
      <node id="200797">
        <label>vt/epoch/epoch_type.h</label>
        <link refid="epoch__type_8h"/>
        <childnode refid="200798" relation="include">
        </childnode>
        <childnode refid="200799" relation="include">
        </childnode>
        <childnode refid="200803" relation="include">
        </childnode>
      </node>
      <node id="200823">
        <label>cassert</label>
      </node>
      <node id="200820">
        <label>vt/configs/error/assert_out.impl.h</label>
        <link refid="assert__out_8impl_8h"/>
        <childnode refid="200811" relation="include">
        </childnode>
        <childnode refid="200795" relation="include">
        </childnode>
        <childnode refid="200819" relation="include">
        </childnode>
        <childnode refid="200821" relation="include">
        </childnode>
        <childnode refid="200806" relation="include">
        </childnode>
        <childnode refid="200813" relation="include">
        </childnode>
        <childnode refid="200802" relation="include">
        </childnode>
        <childnode refid="200816" relation="include">
        </childnode>
        <childnode refid="200792" relation="include">
        </childnode>
        <childnode refid="200823" relation="include">
        </childnode>
        <childnode refid="200808" relation="include">
        </childnode>
      </node>
      <node id="200804">
        <label>vt/configs/types/types_size.h</label>
        <link refid="types__size_8h"/>
        <childnode refid="200805" relation="include">
        </childnode>
        <childnode refid="200799" relation="include">
        </childnode>
      </node>
      <node id="200811">
        <label>vt/configs/error/common.h</label>
        <link refid="src_2vt_2configs_2error_2common_8h"/>
        <childnode refid="200794" relation="include">
        </childnode>
        <childnode refid="200812" relation="include">
        </childnode>
      </node>
      <node id="200805">
        <label>vt/utils/bits/bits_counter.h</label>
        <link refid="bits__counter_8h"/>
      </node>
      <node id="200809">
        <label>vt/configs/error/error_headers.h</label>
        <link refid="error__headers_8h"/>
        <childnode refid="200810" relation="include">
        </childnode>
        <childnode refid="200814" relation="include">
        </childnode>
        <childnode refid="200818" relation="include">
        </childnode>
      </node>
      <node id="200792">
        <label>string</label>
      </node>
      <node id="200826">
        <label>vt/configs/error/keyval_printer.h</label>
        <link refid="keyval__printer_8h"/>
        <childnode refid="200811" relation="include">
        </childnode>
        <childnode refid="200784" relation="include">
        </childnode>
        <childnode refid="200822" relation="include">
        </childnode>
        <childnode refid="200802" relation="include">
        </childnode>
        <childnode refid="200816" relation="include">
        </childnode>
        <childnode refid="200792" relation="include">
        </childnode>
        <childnode refid="200793" relation="include">
        </childnode>
        <childnode refid="200827" relation="include">
        </childnode>
      </node>
      <node id="200827">
        <label>vt/configs/error/keyval_printer.impl.h</label>
        <link refid="keyval__printer_8impl_8h"/>
        <childnode refid="200826" relation="include">
        </childnode>
        <childnode refid="200806" relation="include">
        </childnode>
        <childnode refid="200822" relation="include">
        </childnode>
        <childnode refid="200802" relation="include">
        </childnode>
        <childnode refid="200816" relation="include">
        </childnode>
        <childnode refid="200792" relation="include">
        </childnode>
        <childnode refid="200793" relation="include">
        </childnode>
        <childnode refid="200808" relation="include">
        </childnode>
      </node>
      <node id="200788">
        <label>vt/configs/features/features_enableif.h</label>
        <link refid="features__enableif_8h"/>
        <childnode refid="200787" relation="include">
        </childnode>
      </node>
      <node id="200784">
        <label>vt/configs/debug/debug_config.h</label>
        <link refid="debug__config_8h"/>
        <childnode refid="200785" relation="include">
        </childnode>
        <childnode refid="200786" relation="include">
        </childnode>
        <childnode refid="200787" relation="include">
        </childnode>
        <childnode refid="200788" relation="include">
        </childnode>
        <childnode refid="200789" relation="include">
        </childnode>
      </node>
      <node id="200800">
        <label>vt/configs/types/types_sentinels.h</label>
        <link refid="types__sentinels_8h"/>
        <childnode refid="200782" relation="include">
        </childnode>
        <childnode refid="200795" relation="include">
        </childnode>
        <childnode refid="200801" relation="include">
        </childnode>
      </node>
      <node id="200808">
        <label>fmt/core.h</label>
      </node>
      <node id="200782">
        <label>vt/configs/debug/debug_masterconfig.h</label>
        <link refid="debug__masterconfig_8h"/>
        <childnode refid="200783" relation="include">
        </childnode>
        <childnode refid="200784" relation="include">
        </childnode>
        <childnode refid="200790" relation="include">
        </childnode>
      </node>
      <node id="200812">
        <label>vt/collective/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="200792" relation="include">
        </childnode>
      </node>
      <node id="200795">
        <label>vt/configs/types/types_type.h</label>
        <link refid="types__type_8h"/>
        <childnode refid="200785" relation="include">
        </childnode>
        <childnode refid="200796" relation="include">
        </childnode>
        <childnode refid="200797" relation="include">
        </childnode>
      </node>
      <node id="200815">
        <label>vt/configs/error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="200794" relation="include">
        </childnode>
        <childnode refid="200784" relation="include">
        </childnode>
        <childnode refid="200811" relation="include">
        </childnode>
        <childnode refid="200792" relation="include">
        </childnode>
        <childnode refid="200802" relation="include">
        </childnode>
        <childnode refid="200816" relation="include">
        </childnode>
        <childnode refid="200817" relation="include">
        </childnode>
      </node>
      <node id="200807">
        <label>vt/configs/debug/debug_var_unused.h</label>
        <link refid="debug__var__unused_8h"/>
      </node>
      <node id="200810">
        <label>vt/configs/error/soft_error.h</label>
        <link refid="soft__error_8h"/>
        <childnode refid="200795" relation="include">
        </childnode>
        <childnode refid="200811" relation="include">
        </childnode>
        <childnode refid="200813" relation="include">
        </childnode>
        <childnode refid="200792" relation="include">
        </childnode>
        <childnode refid="200808" relation="include">
        </childnode>
      </node>
      <node id="200802">
        <label>tuple</label>
      </node>
      <node id="200798">
        <label>vt/utils/strong/strong_type.h</label>
        <link refid="strong__type_8h"/>
      </node>
      <node id="200790">
        <label>vt/configs/debug/debug_print.h</label>
        <link refid="debug__print_8h"/>
        <childnode refid="200791" relation="include">
        </childnode>
        <childnode refid="200794" relation="include">
        </childnode>
        <childnode refid="200784" relation="include">
        </childnode>
        <childnode refid="200806" relation="include">
        </childnode>
        <childnode refid="200807" relation="include">
        </childnode>
        <childnode refid="200808" relation="include">
        </childnode>
      </node>
      <node id="200793">
        <label>vector</label>
      </node>
      <node id="200828">
        <label>sstream</label>
      </node>
      <node id="200783">
        <label>vt/cmake_config.h</label>
      </node>
      <node id="200821">
        <label>vt/configs/error/stack_out.h</label>
        <link refid="stack__out_8h"/>
        <childnode refid="200822" relation="include">
        </childnode>
        <childnode refid="200793" relation="include">
        </childnode>
        <childnode refid="200802" relation="include">
        </childnode>
      </node>
      <node id="200787">
        <label>vt/configs/features/features_defines.h</label>
        <link refid="features__defines_8h"/>
      </node>
      <node id="200822">
        <label>cstdlib</label>
      </node>
      <node id="200814">
        <label>vt/configs/error/hard_error.h</label>
        <link refid="hard__error_8h"/>
        <childnode refid="200811" relation="include">
        </childnode>
        <childnode refid="200815" relation="include">
        </childnode>
        <childnode refid="200802" relation="include">
        </childnode>
      </node>
      <node id="200794">
        <label>vt/configs/types/types_headers.h</label>
        <link refid="types__headers_8h"/>
        <childnode refid="200795" relation="include">
        </childnode>
        <childnode refid="200801" relation="include">
        </childnode>
        <childnode refid="200804" relation="include">
        </childnode>
        <childnode refid="200800" relation="include">
        </childnode>
      </node>
      <node id="200819">
        <label>vt/configs/error/assert_out.h</label>
        <link refid="assert__out_8h"/>
        <childnode refid="200795" relation="include">
        </childnode>
        <childnode refid="200811" relation="include">
        </childnode>
        <childnode refid="200802" relation="include">
        </childnode>
        <childnode refid="200816" relation="include">
        </childnode>
        <childnode refid="200792" relation="include">
        </childnode>
        <childnode refid="200820" relation="include">
        </childnode>
      </node>
      <node id="200801">
        <label>vt/configs/types/types_rdma.h</label>
        <link refid="types__rdma_8h"/>
        <childnode refid="200782" relation="include">
        </childnode>
        <childnode refid="200795" relation="include">
        </childnode>
        <childnode refid="200785" relation="include">
        </childnode>
        <childnode refid="200796" relation="include">
        </childnode>
        <childnode refid="200802" relation="include">
        </childnode>
      </node>
      <node id="200816">
        <label>type_traits</label>
      </node>
      <node id="200813">
        <label>vt/configs/error/pretty_print_message.h</label>
        <link refid="pretty__print__message_8h"/>
        <childnode refid="200794" relation="include">
        </childnode>
        <childnode refid="200792" relation="include">
        </childnode>
      </node>
      <node id="200781">
        <label>vt/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="200782" relation="include">
        </childnode>
        <childnode refid="200794" relation="include">
        </childnode>
        <childnode refid="200809" relation="include">
        </childnode>
      </node>
      <node id="200789">
        <label>vt/configs/debug/debug_printconst.h</label>
        <link refid="debug__printconst_8h"/>
      </node>
      <node id="200818">
        <label>vt/configs/error/config_assert.h</label>
        <link refid="config__assert_8h"/>
        <childnode refid="200784" relation="include">
        </childnode>
        <childnode refid="200795" relation="include">
        </childnode>
        <childnode refid="200811" relation="include">
        </childnode>
        <childnode refid="200819" relation="include">
        </childnode>
        <childnode refid="200824" relation="include">
        </childnode>
        <childnode refid="200826" relation="include">
        </childnode>
        <childnode refid="200802" relation="include">
        </childnode>
        <childnode refid="200816" relation="include">
        </childnode>
      </node>
      <node id="200824">
        <label>vt/configs/error/assert_out_info.h</label>
        <link refid="assert__out__info_8h"/>
        <childnode refid="200811" relation="include">
        </childnode>
        <childnode refid="200795" relation="include">
        </childnode>
        <childnode refid="200802" relation="include">
        </childnode>
        <childnode refid="200792" relation="include">
        </childnode>
        <childnode refid="200825" relation="include">
        </childnode>
      </node>
      <node id="200817">
        <label>vt/configs/error/error.impl.h</label>
        <link refid="error_8impl_8h"/>
        <childnode refid="200794" relation="include">
        </childnode>
        <childnode refid="200784" relation="include">
        </childnode>
        <childnode refid="200811" relation="include">
        </childnode>
        <childnode refid="200815" relation="include">
        </childnode>
        <childnode refid="200813" relation="include">
        </childnode>
        <childnode refid="200792" relation="include">
        </childnode>
        <childnode refid="200802" relation="include">
        </childnode>
        <childnode refid="200816" relation="include">
        </childnode>
        <childnode refid="200808" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="200843">
        <label>src/vt/vrt/collection/balance/baselb/load_sampler.cc</label>
        <link refid="load__sampler_8cc"/>
      </node>
      <node id="200844">
        <label>src/vt/vrt/collection/balance/greedylb/greedylb.h</label>
        <link refid="greedylb_8h"/>
        <childnode refid="200845" relation="include">
        </childnode>
        <childnode refid="200846" relation="include">
        </childnode>
      </node>
      <node id="200863">
        <label>src/vt/vrt/collection/collection_headers.h</label>
        <link refid="collection__headers_8h"/>
        <childnode refid="200864" relation="include">
        </childnode>
        <childnode refid="200836" relation="include">
        </childnode>
        <childnode refid="200838" relation="include">
        </childnode>
      </node>
      <node id="200830">
        <label>src/vt/rdmahandle/handle.impl.h</label>
        <link refid="handle_8impl_8h"/>
        <childnode refid="200831" relation="include">
        </childnode>
      </node>
      <node id="200894">
        <label>src/vt/trace/file_spec/spec.cc</label>
        <link refid="spec_8cc"/>
      </node>
      <node id="200895">
        <label>src/vt/vrt/collection/balance/stats_restart_reader.cc</label>
        <link refid="stats__restart__reader_8cc"/>
      </node>
      <node id="200829">
        <label>src/vt/rdmahandle/handle.index.impl.h</label>
        <link refid="handle_8index_8impl_8h"/>
        <childnode refid="200830" relation="include">
        </childnode>
      </node>
      <node id="200835">
        <label>src/vt/phase/phase_manager.cc</label>
        <link refid="phase__manager_8cc"/>
      </node>
      <node id="200865">
        <label>src/vt/vrt/collection/destroy/destroyable.impl.h</label>
        <link refid="destroyable_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200851">
        <label>src/vt/vrt/collection/manager.h</label>
        <link refid="vrt_2collection_2manager_8h"/>
        <childnode refid="200852" relation="include">
        </childnode>
        <childnode refid="200853" relation="include">
        </childnode>
        <childnode refid="200854" relation="include">
        </childnode>
        <childnode refid="200855" relation="include">
        </childnode>
        <childnode refid="200856" relation="include">
        </childnode>
        <childnode refid="200857" relation="include">
        </childnode>
        <childnode refid="200850" relation="include">
        </childnode>
        <childnode refid="200845" relation="include">
        </childnode>
        <childnode refid="200848" relation="include">
        </childnode>
        <childnode refid="200846" relation="include">
        </childnode>
        <childnode refid="200858" relation="include">
        </childnode>
        <childnode refid="200859" relation="include">
        </childnode>
        <childnode refid="200860" relation="include">
        </childnode>
        <childnode refid="200861" relation="include">
        </childnode>
        <childnode refid="200863" relation="include">
        </childnode>
        <childnode refid="200865" relation="include">
        </childnode>
        <childnode refid="200866" relation="include">
        </childnode>
        <childnode refid="200867" relation="include">
        </childnode>
        <childnode refid="200868" relation="include">
        </childnode>
        <childnode refid="200869" relation="include">
        </childnode>
        <childnode refid="200870" relation="include">
        </childnode>
        <childnode refid="200871" relation="include">
        </childnode>
        <childnode refid="200862" relation="include">
        </childnode>
        <childnode refid="200872" relation="include">
        </childnode>
        <childnode refid="200873" relation="include">
        </childnode>
        <childnode refid="200874" relation="include">
        </childnode>
        <childnode refid="200875" relation="include">
        </childnode>
      </node>
      <node id="200861">
        <label>src/vt/vrt/collection/collection_builder.impl.h</label>
        <link refid="collection__builder_8impl_8h"/>
        <childnode refid="200862" relation="include">
        </childnode>
      </node>
      <node id="200857">
        <label>src/vt/scheduler/scheduler.cc</label>
        <link refid="scheduler_8cc"/>
      </node>
      <node id="200864">
        <label>src/vt/runtime/runtime.cc</label>
        <link refid="runtime_8cc"/>
      </node>
      <node id="200890">
        <label>src/vt/rdmahandle/manager.impl.h</label>
        <link refid="rdmahandle_2manager_8impl_8h"/>
        <childnode refid="200831" relation="include">
        </childnode>
      </node>
      <node id="200853">
        <label>src/vt/context/runnable_context/lb_stats.impl.h</label>
        <link refid="lb__stats_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200873">
        <label>src/vt/vrt/collection/send/sendable.impl.h</label>
        <link refid="sendable_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200892">
        <label>src/vt/topos/mapping/dense/unbounded_default.impl.h</label>
        <link refid="unbounded__default_8impl_8h"/>
        <childnode refid="200893" relation="include">
        </childnode>
      </node>
      <node id="200859">
        <label>src/vt/vrt/collection/balance/rotatelb/rotatelb.cc</label>
        <link refid="rotatelb_8cc"/>
      </node>
      <node id="200849">
        <label>src/vt/vrt/collection/balance/lb_invoke/lb_manager.h</label>
        <link refid="lb__manager_8h"/>
        <childnode refid="200841" relation="include">
        </childnode>
        <childnode refid="200850" relation="include">
        </childnode>
        <childnode refid="200846" relation="include">
        </childnode>
        <childnode refid="200871" relation="include">
        </childnode>
      </node>
      <node id="200831">
        <label>src/vt/rdmahandle/manager.h</label>
        <link refid="rdmahandle_2manager_8h"/>
        <childnode refid="200832" relation="include">
        </childnode>
        <childnode refid="200830" relation="include">
        </childnode>
        <childnode refid="200887" relation="include">
        </childnode>
        <childnode refid="200856" relation="include">
        </childnode>
        <childnode refid="200890" relation="include">
        </childnode>
        <childnode refid="200864" relation="include">
        </childnode>
        <childnode refid="200838" relation="include">
        </childnode>
        <childnode refid="200896" relation="include">
        </childnode>
      </node>
      <node id="200855">
        <label>src/vt/pipe/callback/proxy_send/callback_proxy_send.impl.h</label>
        <link refid="callback__proxy__send_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200832">
        <label>src/vt/objgroup/proxy/proxy_objgroup.impl.h</label>
        <link refid="proxy__objgroup_8impl_8h"/>
        <childnode refid="200833" relation="include">
        </childnode>
      </node>
      <node id="200872">
        <label>src/vt/vrt/collection/reducable/reducable.impl.h</label>
        <link refid="reducable_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200868">
        <label>src/vt/vrt/collection/insert/insertable.impl.h</label>
        <link refid="insertable_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200893">
        <label>src/vt/topos/mapping/dense/unbounded_default.h</label>
        <link refid="unbounded__default_8h"/>
        <childnode refid="200861" relation="include">
        </childnode>
      </node>
      <node id="200891">
        <label>src/vt/runnable/runnable.cc</label>
        <link refid="runnable_8cc"/>
      </node>
      <node id="200850">
        <label>src/vt/vrt/collection/balance/col_stats.impl.h</label>
        <link refid="col__stats_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200862">
        <label>src/vt/vrt/collection/manager.impl.h</label>
        <link refid="vrt_2collection_2manager_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200836">
        <label>src/vt/runtime/runtime_get.cc</label>
        <link refid="runtime__get_8cc"/>
      </node>
      <node id="200885">
        <label>src/vt/objgroup/manager.impl.h</label>
        <link refid="objgroup_2manager_8impl_8h"/>
        <childnode refid="200833" relation="include">
        </childnode>
      </node>
      <node id="200845">
        <label>src/vt/vrt/collection/balance/greedylb/greedylb.cc</label>
        <link refid="greedylb_8cc"/>
      </node>
      <node id="200866">
        <label>src/vt/vrt/collection/dispatch/dispatch.impl.h</label>
        <link refid="src_2vt_2vrt_2collection_2dispatch_2dispatch_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200875">
        <label>src/vt/vrt/collection/types/migratable.cc</label>
        <link refid="migratable_8cc"/>
      </node>
      <node id="200842">
        <label>src/vt/vrt/collection/balance/baselb/load_sampler.h</label>
        <link refid="load__sampler_8h"/>
        <childnode refid="200843" relation="include">
        </childnode>
        <childnode refid="200844" relation="include">
        </childnode>
        <childnode refid="200847" relation="include">
        </childnode>
      </node>
      <node id="200834">
        <label>src/vt/objgroup/headers.h</label>
        <link refid="objgroup_2headers_8h"/>
        <childnode refid="200835" relation="include">
        </childnode>
        <childnode refid="200836" relation="include">
        </childnode>
        <childnode refid="200837" relation="include">
        </childnode>
        <childnode refid="200838" relation="include">
        </childnode>
        <childnode refid="200840" relation="include">
        </childnode>
        <childnode refid="200848" relation="include">
        </childnode>
        <childnode refid="200847" relation="include">
        </childnode>
      </node>
      <node id="200887">
        <label>src/vt/rdmahandle/manager.cc</label>
        <link refid="rdmahandle_2manager_8cc"/>
      </node>
      <node id="200841">
        <label>src/vt/vrt/collection/balance/baselb/baselb.cc</label>
        <link refid="baselb_8cc"/>
      </node>
      <node id="200881">
        <label>src/vt/vrt/collection/balance/temperedlb/temperedlb.h</label>
        <link refid="temperedlb_8h"/>
        <childnode refid="200846" relation="include">
        </childnode>
        <childnode refid="200880" relation="include">
        </childnode>
      </node>
      <node id="200888">
        <label>src/vt/rdmahandle/sub_handle.impl.h</label>
        <link refid="sub__handle_8impl_8h"/>
        <childnode refid="200889" relation="include">
        </childnode>
      </node>
      <node id="200867">
        <label>src/vt/vrt/collection/gettable/gettable.impl.h</label>
        <link refid="gettable_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200882">
        <label>src/vt/vrt/collection/balance/zoltanlb/zoltanlb.h</label>
        <link refid="zoltanlb_8h"/>
        <childnode refid="200846" relation="include">
        </childnode>
        <childnode refid="200883" relation="include">
        </childnode>
      </node>
      <node id="200876">
        <label>src/vt/vrt/collection/balance/randomlb/randomlb.h</label>
        <link refid="randomlb_8h"/>
        <childnode refid="200846" relation="include">
        </childnode>
        <childnode refid="200877" relation="include">
        </childnode>
      </node>
      <node id="200877">
        <label>src/vt/vrt/collection/balance/randomlb/randomlb.cc</label>
        <link refid="randomlb_8cc"/>
      </node>
      <node id="200883">
        <label>src/vt/vrt/collection/balance/zoltanlb/zoltanlb.cc</label>
        <link refid="zoltanlb_8cc"/>
      </node>
      <node id="200870">
        <label>src/vt/vrt/collection/invoke/invokable.impl.h</label>
        <link refid="invokable_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200839">
        <label>src/vt/vt.h</label>
        <link refid="vt_8h"/>
      </node>
      <node id="200860">
        <label>src/vt/vrt/collection/broadcast/broadcastable.impl.h</label>
        <link refid="broadcastable_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200879">
        <label>src/vt/vrt/collection/balance/statsmaplb/statsmaplb.cc</label>
        <link refid="statsmaplb_8cc"/>
      </node>
      <node id="200871">
        <label>src/vt/vrt/collection/manager.cc</label>
        <link refid="vrt_2collection_2manager_8cc"/>
      </node>
      <node id="200884">
        <label>src/vt/objgroup/manager.cc</label>
        <link refid="objgroup_2manager_8cc"/>
      </node>
      <node id="200896">
        <label>src/vt/vrt/collection/rdmaable/rdmaable.impl.h</label>
        <link refid="rdmaable_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200878">
        <label>src/vt/vrt/collection/balance/rotatelb/rotatelb.h</label>
        <link refid="rotatelb_8h"/>
        <childnode refid="200846" relation="include">
        </childnode>
        <childnode refid="200859" relation="include">
        </childnode>
      </node>
      <node id="200833">
        <label>src/vt/objgroup/manager.h</label>
        <link refid="objgroup_2manager_8h"/>
        <childnode refid="200834" relation="include">
        </childnode>
        <childnode refid="200884" relation="include">
        </childnode>
        <childnode refid="200885" relation="include">
        </childnode>
        <childnode refid="200832" relation="include">
        </childnode>
        <childnode refid="200886" relation="include">
        </childnode>
        <childnode refid="200887" relation="include">
        </childnode>
        <childnode refid="200888" relation="include">
        </childnode>
        <childnode refid="200891" relation="include">
        </childnode>
        <childnode refid="200864" relation="include">
        </childnode>
        <childnode refid="200892" relation="include">
        </childnode>
        <childnode refid="200894" relation="include">
        </childnode>
        <childnode refid="200895" relation="include">
        </childnode>
      </node>
      <node id="200854">
        <label>src/vt/pipe/callback/proxy_bcast/callback_proxy_bcast.impl.h</label>
        <link refid="callback__proxy__bcast_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200852">
        <label>src/vt/context/runnable_context/lb_stats.cc</label>
        <link refid="lb__stats_8cc"/>
      </node>
      <node id="200886">
        <label>src/vt/objgroup/proxy/proxy_objgroup_elm.impl.h</label>
        <link refid="proxy__objgroup__elm_8impl_8h"/>
        <childnode refid="200833" relation="include">
        </childnode>
      </node>
      <node id="200874">
        <label>src/vt/vrt/collection/types/indexable.impl.h</label>
        <link refid="indexable_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200837">
        <label>src/vt/trace/trace.cc</label>
        <link refid="trace_2trace_8cc"/>
      </node>
      <node id="200848">
        <label>src/vt/vrt/collection/balance/hierarchicallb/hierlb.cc</label>
        <link refid="hierlb_8cc"/>
      </node>
      <node id="200858">
        <label>src/vt/vrt/collection/balance/node_stats.cc</label>
        <link refid="node__stats_8cc"/>
      </node>
      <node id="200846">
        <label>src/vt/vrt/collection/balance/lb_invoke/lb_manager.cc</label>
        <link refid="lb__manager_8cc"/>
      </node>
      <node id="200847">
        <label>src/vt/vrt/collection/balance/hierarchicallb/hierlb.h</label>
        <link refid="hierlb_8h"/>
        <childnode refid="200848" relation="include">
        </childnode>
        <childnode refid="200846" relation="include">
        </childnode>
      </node>
      <node id="200889">
        <label>src/vt/rdmahandle/sub_handle.h</label>
        <link refid="sub__handle_8h"/>
        <childnode refid="200830" relation="include">
        </childnode>
        <childnode refid="200856" relation="include">
        </childnode>
        <childnode refid="200890" relation="include">
        </childnode>
      </node>
      <node id="200840">
        <label>src/vt/vrt/collection/balance/baselb/baselb.h</label>
        <link refid="baselb_8h"/>
        <childnode refid="200841" relation="include">
        </childnode>
        <childnode refid="200842" relation="include">
        </childnode>
        <childnode refid="200849" relation="include">
        </childnode>
        <childnode refid="200876" relation="include">
        </childnode>
        <childnode refid="200878" relation="include">
        </childnode>
        <childnode refid="200879" relation="include">
        </childnode>
        <childnode refid="200880" relation="include">
        </childnode>
        <childnode refid="200881" relation="include">
        </childnode>
        <childnode refid="200882" relation="include">
        </childnode>
      </node>
      <node id="200838">
        <label>src/vt/transport.h</label>
        <link refid="transport_8h"/>
        <childnode refid="200839" relation="include">
        </childnode>
      </node>
      <node id="200880">
        <label>src/vt/vrt/collection/balance/temperedlb/temperedlb.cc</label>
        <link refid="temperedlb_8cc"/>
      </node>
      <node id="200869">
        <label>src/vt/vrt/collection/insert/modifyable.impl.h</label>
        <link refid="modifyable_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
      <node id="200856">
        <label>src/vt/rdmahandle/manager.collection.impl.h</label>
        <link refid="manager_8collection_8impl_8h"/>
        <childnode refid="200851" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1rdma">vt::rdma</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle.index.impl.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt<sp/>=&gt;<sp/>Virtual<sp/>Transport</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2021<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_VT_RDMAHANDLE_HANDLE_INDEX_IMPL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_VT_RDMAHANDLE_HANDLE_INDEX_IMPL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">vt/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt" kindref="compound">vt</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689a0b97b5f0db04922b0839112e029ba677" kindref="member">rdma</ref><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">&gt;::ready()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proxy_<sp/>!=<sp/>no_obj_group)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;ready();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">&gt;::readExclusive(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a479a398ca7c07756b7f07ee19cb9b183" kindref="member">std::function</ref>&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*,<sp/>std::size_t<sp/>count)&gt;<sp/>fn</highlight></codeline>
<codeline lineno="68"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;access(index_,<sp/><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70a2ef50b4c466304dc6ac77bac8a779971" kindref="member">Lock::Exclusive</ref>,<sp/>fn,<sp/>this-&gt;hoff());</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">&gt;::readShared(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a479a398ca7c07756b7f07ee19cb9b183" kindref="member">std::function</ref>&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*,<sp/>std::size_t<sp/>count)&gt;<sp/>fn</highlight></codeline>
<codeline lineno="78"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;access(index_,<sp/><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70aa6156ea9d66fef24e87e841fbabf7cca" kindref="member">Lock::Shared</ref>,<sp/>fn,<sp/>this-&gt;hoff());</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">&gt;::modifyExclusive(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a479a398ca7c07756b7f07ee19cb9b183" kindref="member">std::function</ref>&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T*,<sp/>std::size_t<sp/>count)&gt;<sp/>fn</highlight></codeline>
<codeline lineno="88"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;access(index_,<sp/><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70a2ef50b4c466304dc6ac77bac8a779971" kindref="member">Lock::Exclusive</ref>,<sp/>fn,<sp/>this-&gt;hoff());</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">&gt;::modifyShared(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0a479a398ca7c07756b7f07ee19cb9b183" kindref="member">std::function</ref>&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T*,<sp/>std::size_t<sp/>count)&gt;<sp/>fn</highlight></codeline>
<codeline lineno="98"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;access(index_,<sp/><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70aa6156ea9d66fef24e87e841fbabf7cca" kindref="member">Lock::Shared</ref>,<sp/>fn,<sp/>this-&gt;hoff());</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">&gt;::lock(<ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref><sp/>l,<sp/>I<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//@todo:<sp/>implement<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">&gt;::unlock()<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>this-&gt;lock_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">&gt;::get(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>I<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>index,<sp/>T*<sp/>ptr,<sp/>std::size_t<sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref><sp/>l</highlight></codeline>
<codeline lineno="122"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;get(index,<sp/>l,<sp/>ptr,<sp/>len,<sp/>offset<sp/>+<sp/>this-&gt;hoff());</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">&gt;::RequestType</highlight></codeline>
<codeline lineno="131"><highlight class="normal">Handle&lt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">&gt;::rget(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>I<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>index,<sp/>T*<sp/>ptr,<sp/>std::size_t<sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref><sp/>l</highlight></codeline>
<codeline lineno="135"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;rget(index,<sp/>l,<sp/>ptr,<sp/>len,<sp/>offset<sp/>+<sp/>this-&gt;hoff());</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">&gt;::get(</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>I<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>index,<sp/>std::size_t<sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref><sp/>l</highlight></codeline>
<codeline lineno="145"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;rget(index,<sp/>len,<sp/>offset);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">&gt;::RequestType</highlight></codeline>
<codeline lineno="154"><highlight class="normal">Handle&lt;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">&gt;::rget(</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>I<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>index,<sp/>std::size_t<sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref><sp/>l</highlight></codeline>
<codeline lineno="158"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;getBuffer()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/>std::make_unique&lt;T[]&gt;(len);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;rget(</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index,<sp/>l,<sp/>ptr.get(),<sp/>len,<sp/>offset<sp/>+<sp/>this-&gt;hoff()</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>r.addAction([cptr=std::move(ptr),actions=this-&gt;actions_]{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>action<sp/>:<sp/>actions)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action(cptr.get());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>proxy.get()-&gt;rget(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index,<sp/>l,<sp/>this-&gt;user_buffer_,<sp/>len,<sp/>offset<sp/>+<sp/>this-&gt;hoff()</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>r.addAction([buffer=this-&gt;user_buffer_,actions=this-&gt;actions_]{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>action<sp/>:<sp/>actions)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action(buffer);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">&gt;::put(</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>I<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>index,<sp/>T*<sp/>ptr,<sp/>std::size_t<sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref><sp/>l</highlight></codeline>
<codeline lineno="189"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;put(index,<sp/>l,<sp/>ptr,<sp/>len,<sp/>offset<sp/>+<sp/>this-&gt;hoff());</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">&gt;::RequestType</highlight></codeline>
<codeline lineno="198"><highlight class="normal">Handle&lt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">&gt;::rput(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>I<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>index,<sp/>T*<sp/>ptr,<sp/>std::size_t<sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref><sp/>l</highlight></codeline>
<codeline lineno="202"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;rput(index,<sp/>l,<sp/>ptr,<sp/>len,<sp/>offset<sp/>+<sp/>this-&gt;hoff());</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">&gt;::accum(</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>I<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>index,<sp/>T*<sp/>ptr,<sp/>std::size_t<sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/>MPI_Op<sp/>op,<sp/><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref><sp/>l</highlight></codeline>
<codeline lineno="212"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;accum(index,<sp/>l,<sp/>ptr,<sp/>len,<sp/>offset<sp/>+<sp/>this-&gt;hoff(),<sp/>op);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Handle&lt;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">&gt;::RequestType</highlight></codeline>
<codeline lineno="221"><highlight class="normal">Handle&lt;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">&gt;::raccum(</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>I<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>index,<sp/>T*<sp/>ptr,<sp/>std::size_t<sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/>MPI_Op<sp/>op,<sp/><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref><sp/>l</highlight></codeline>
<codeline lineno="225"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;raccum(index,<sp/>l,<sp/>ptr,<sp/>len,<sp/>offset<sp/>+<sp/>this-&gt;hoff(),<sp/>op);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">T<sp/>Handle&lt;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">&gt;::fetchOp(</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>I<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>index,<sp/>T<sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/>MPI_Op<sp/>op,<sp/><ref refid="namespacevt_1_1rdma_1ac5c20b41a653e520b6305d4d454ecb70" kindref="member">Lock</ref><sp/>l</highlight></codeline>
<codeline lineno="235"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proxy.<ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy_1a62eef779c097c8398e249827e4ad7c6a" kindref="member">get</ref>()-&gt;fetchOp(index,<sp/>l,<sp/>ptr,<sp/>offset,<sp/>op);</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>HandleEnum<sp/>E,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">std::size_t<sp/>Handle&lt;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>T,E,I,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;I,vt::NodeType&gt;::value&gt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">&gt;::getCount(I<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxy<sp/>=<sp/><ref refid="structvt_1_1objgroup_1_1proxy_1_1_proxy" kindref="compound">vt::objgroup::proxy::Proxy&lt;SubHandle&lt;T,E,I&gt;</ref>&gt;(proxy_);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proxy.get()-&gt;isUniform())<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;count();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proxy.get()-&gt;getCount(index);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">}}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::rdma<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_VT_RDMAHANDLE_HANDLE_INDEX_IMPL_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/vt/rdmahandle/handle.index.impl.h"/>
  </compounddef>
</doxygen>
