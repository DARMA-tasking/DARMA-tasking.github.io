<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1_deref_cons" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::DerefCons</compoundname>
    <includes refid="coll__constructors__deref_8h" local="no">coll_constructors_deref.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_deref_cons_1ae5c1ab1384e3ac40fe64875e7c822eb7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
          <param>
            <type>typename Tuple</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1da9015e52d6ecca955f57b59aab0b82" kindref="member">CollectionManager::VirtualPtrType</ref>&lt; ColT, IndexT &gt;</type>
        <definition>CollectionManager::VirtualPtrType&lt; ColT, IndexT &gt; vt::vrt::collection::DerefCons::derefTuple</definition>
        <argsstring>(VirtualElmCountType const &amp;elms, IndexT const &amp;idx, std::tuple&lt; Args... &gt; *tup)</argsstring>
        <name>derefTuple</name>
        <param>
          <type><ref refid="namespacevt_1ac115668758184050beff7a9281a2c490" kindref="member">VirtualElmCountType</ref> const &amp;</type>
          <declname>elms</declname>
        </param>
        <param>
          <type>IndexT const &amp;</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>std::tuple&lt; Args... &gt; *</type>
          <declname>tup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/constructor/coll_constructors_deref.h" line="60" column="1" bodyfile="src/vt/vrt/collection/constructor/coll_constructors_deref.impl.h" bodystart="54" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_deref_cons_1a557c69641faad74bcf17f5cc737fb816" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColT</type>
          </param>
          <param>
            <type>typename IndexT</type>
          </param>
          <param>
            <type>typename Tuple</type>
          </param>
          <param>
            <type>typename DispatcherT</type>
          </param>
          <param>
            <type>size_t...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_collection_manager_1a1da9015e52d6ecca955f57b59aab0b82" kindref="member">CollectionManager::VirtualPtrType</ref>&lt; ColT, IndexT &gt;</type>
        <definition>CollectionManager::VirtualPtrType&lt; ColT, IndexT &gt; vt::vrt::collection::DerefCons::expandSeq</definition>
        <argsstring>(VirtualElmCountType const &amp;elms, IndexT const &amp;idx, Tuple *tup, std::index_sequence&lt; I... &gt; seq)</argsstring>
        <name>expandSeq</name>
        <param>
          <type><ref refid="namespacevt_1ac115668758184050beff7a9281a2c490" kindref="member">VirtualElmCountType</ref> const &amp;</type>
          <declname>elms</declname>
        </param>
        <param>
          <type>IndexT const &amp;</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>Tuple *</type>
          <declname>tup</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; I... &gt;</type>
          <declname>seq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/constructor/coll_constructors_deref.h" line="69" column="1" bodyfile="src/vt/vrt/collection/constructor/coll_constructors_deref.impl.h" bodystart="71" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/vrt/collection/constructor/coll_constructors_deref.h" line="57" column="1" bodyfile="src/vt/vrt/collection/constructor/coll_constructors_deref.h" bodystart="57" bodyend="73"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1_deref_cons_1ae5c1ab1384e3ac40fe64875e7c822eb7" prot="public" virt="non-virtual"><scope>vt::vrt::collection::DerefCons</scope><name>derefTuple</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_deref_cons_1a557c69641faad74bcf17f5cc737fb816" prot="public" virt="non-virtual"><scope>vt::vrt::collection::DerefCons</scope><name>expandSeq</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
