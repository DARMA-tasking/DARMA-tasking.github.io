<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structstd_1_1hash_3_01std_1_1tuple_3_01_a_00_01_b_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>std::hash&lt; std::tuple&lt; A, B &gt; &gt;</compoundname>
    <includes refid="hash__tuple_8h" local="no">hash_tuple.h</includes>
    <templateparamlist>
      <param>
        <type>typename A</type>
      </param>
      <param>
        <type>typename B</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structstd_1_1hash_3_01std_1_1tuple_3_01_a_00_01_b_01_4_01_4_1a3562c1ad6da96c278d99bff49018ae88" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t std::hash&lt; std::tuple&lt; A, B &gt; &gt;::operator()</definition>
        <argsstring>(std::tuple&lt; A, B &gt; const &amp;in) const</argsstring>
        <name>operator()</name>
        <param>
          <type>std::tuple&lt; A, B &gt; const &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/hash/hash_tuple.h" line="52" column="1" bodyfile="src/vt/utils/hash/hash_tuple.h" bodystart="52" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/utils/hash/hash_tuple.h" line="51" column="1" bodyfile="src/vt/utils/hash/hash_tuple.h" bodystart="51" bodyend="57"/>
    <listofallmembers>
      <member refid="structstd_1_1hash_3_01std_1_1tuple_3_01_a_00_01_b_01_4_01_4_1a3562c1ad6da96c278d99bff49018ae88" prot="public" virt="non-virtual"><scope>std::hash&lt; std::tuple&lt; A, B &gt; &gt;</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
