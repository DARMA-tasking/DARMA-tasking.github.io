<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="namespacevt_1_1vrt_1_1collection_1_1lb" kind="namespace" language="C++">
    <compoundname>vt::vrt::collection::lb</compoundname>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_base_l_b" prot="public">vt::vrt::collection::lb::BaseLB</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_cluster_info" prot="public">vt::vrt::collection::lb::ClusterInfo</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_comm_msg" prot="public">vt::vrt::collection::lb::CommMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_criterion" prot="public">vt::vrt::collection::lb::Criterion</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_grapevine_criterion" prot="public">vt::vrt::collection::lb::GrapevineCriterion</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_greedy_bcast_msg" prot="public">vt::vrt::collection::lb::GreedyBcastMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_greedy_compare_load_max" prot="public">vt::vrt::collection::lb::GreedyCompareLoadMax</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_greedy_compare_load_min" prot="public">vt::vrt::collection::lb::GreedyCompareLoadMin</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_greedy_l_b" prot="public">vt::vrt::collection::lb::GreedyLB</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_greedy_l_b_types" prot="public">vt::vrt::collection::lb::GreedyLBTypes</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_greedy_payload" prot="public">vt::vrt::collection::lb::GreedyPayload</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_greedy_proc" prot="public">vt::vrt::collection::lb::GreedyProc</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_greedy_record" prot="public">vt::vrt::collection::lb::GreedyRecord</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_greedy_send_msg" prot="public">vt::vrt::collection::lb::GreedySendMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_hierarchical_l_b" prot="public">vt::vrt::collection::lb::HierarchicalLB</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_hier_l_b_child" prot="public">vt::vrt::collection::lb::HierLBChild</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_hier_l_b_types" prot="public">vt::vrt::collection::lb::HierLBTypes</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_l_b_tree_down_msg" prot="public">vt::vrt::collection::lb::LBTreeDownMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_l_b_tree_up_msg" prot="public">vt::vrt::collection::lb::LBTreeUpMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_load_sampler_base_l_b" prot="public">vt::vrt::collection::lb::LoadSamplerBaseLB</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_modified_grapevine_criterion" prot="public">vt::vrt::collection::lb::ModifiedGrapevineCriterion</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_node_info" prot="public">vt::vrt::collection::lb::NodeInfo</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_offline_l_b" prot="public">vt::vrt::collection::lb::OfflineLB</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_phase_info" prot="public">vt::vrt::collection::lb::PhaseInfo</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_random_l_b" prot="public">vt::vrt::collection::lb::RandomLB</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_rotate_l_b" prot="public">vt::vrt::collection::lb::RotateLB</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_rotate_obj_msg" prot="public">vt::vrt::collection::lb::RotateObjMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_tempered_l_b" prot="public">vt::vrt::collection::lb::TemperedLB</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_tempered_w_min" prot="public">vt::vrt::collection::lb::TemperedWMin</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_test_serialization_l_b" prot="public">vt::vrt::collection::lb::TestSerializationLB</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_transfer_msg" prot="public">vt::vrt::collection::lb::TransferMsg</innerclass>
    <innerclass refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_work_breakdown" prot="public">vt::vrt::collection::lb::WorkBreakdown</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a0c49bf89a59ba0fd5160bc3894417dfa" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>DataDistStrategy</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a0c49bf89a59ba0fd5160bc3894417dfaa50894a237d9bcde0a18769af9a768baf" prot="public">
          <name>scatter</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a0c49bf89a59ba0fd5160bc3894417dfaa98e9f4944cd44d2d5ad506249b8483cd" prot="public">
          <name>bcast</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a0c49bf89a59ba0fd5160bc3894417dfaa01a4aa94928c33396b2a8c4cbfd6483e" prot="public">
          <name>pt2pt</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>How to distribute the data after the centralized LB makes a decision. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/greedylb/greedylb.h" line="68" column="29" bodyfile="src/vt/vrt/collection/balance/greedylb/greedylb.h" bodystart="68" bodyend="72"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1lb_1aeb0f47cf4b89bed7ea05462d0c2e5b5e" prot="public" static="no" strong="yes">
        <type>int8_t</type>
        <name>HeapExtractEnum</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1aeb0f47cf4b89bed7ea05462d0c2e5b5ea41a33133c182e43b9dfc2599f39eaa94" prot="public">
          <name>LoadOverLessThan</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1aeb0f47cf4b89bed7ea05462d0c2e5b5ea3d8879d16ae598961ef15af199863c40" prot="public">
          <name>LoadOverGreaterThan</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1aeb0f47cf4b89bed7ea05462d0c2e5b5eabde3377fc5ba5b092a195c8ac4b6ea09" prot="public">
          <name>LoadOverRandom</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1aeb0f47cf4b89bed7ea05462d0c2e5b5eaa3040fb94a8691e32930a5836d830ec4" prot="public">
          <name>LoadOverOneEach</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/hierarchicallb/hierlb_strat.h" line="53" column="28" bodyfile="src/vt/vrt/collection/balance/hierarchicallb/hierlb_strat.h" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febe" prot="public" static="no" strong="yes">
        <type>int8_t</type>
        <name>StatisticQuantity</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febead8bd79cc131920d5de426f914d17405a" prot="public">
          <name>min</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febea2ffe4e77325d9a7152f7086ea7aa5114" prot="public">
          <name>max</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febeae322d423f075b0ab2daad27011d24909" prot="public">
          <name>avg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febead2229cc70e64ae7c07361778573c4e0c" prot="public">
          <name>std</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febeab2145aac704ce76dbe1ac7adac535b23" prot="public">
          <name>var</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febead3700a0f6623feb3ef40d6786640ab23" prot="public">
          <name>skw</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febea7663d8c57a4fe7d83db6bbc1bff52586" prot="public">
          <name>kur</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febeae6d96502596d7e7887b76646c5f615d9" prot="public">
          <name>car</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febea24c53af423bbfd119dc76b511bbeac41" prot="public">
          <name>imb</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febeabeb454c55754e2e94ad97fee19eb2540" prot="public">
          <name>npr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febea1d623b89683f9ce4e074de1676d12416" prot="public">
          <name>sum</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="192" column="30" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1" prot="public" static="no" strong="yes">
        <type>int8_t</type>
        <name>Statistic</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1aa91c95683ba4869756e2b2cb4483fd53" prot="public">
          <name>Rank_load_modeled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1a7bfd12bd45cb5c751d0d9fb6d684d888" prot="public">
          <name>Rank_load_raw</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1a8f2d2f61dff75c470d9f7ba48d215c77" prot="public">
          <name>Rank_comm</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1a5d7dda92cea8651a41dd471073a5afea" prot="public">
          <name>Rank_strategy_specific_load_modeled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1a1fe6ed4c1851f9212f974eadbfb058cc" prot="public">
          <name>Object_load_modeled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1ac801bd3d1b28497ca566a1a7a35f97f1" prot="public">
          <name>Object_load_raw</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1abd413291b15391f3525da6d8cb6bd557" prot="public">
          <name>Object_comm</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1acf1ff9dc568817b12eaedc4be8265b20" prot="public">
          <name>Object_strategy_specific_load_modeled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1ab5cd12d7ce7aad80c0f3e51c0d8a0686" prot="public">
          <name>ObjectRatio</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1a4cb758191f8118403f2c08be986a99e1" prot="public">
          <name>EdgeRatio</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="196" column="22" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="196" bodyend="208"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a4e454750e102cf5404d5ac151148951c" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>CriterionEnum</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a4e454750e102cf5404d5ac151148951caa779a9fcc319cb370da5dc3a2b608721" prot="public">
          <name>Grapevine</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a4e454750e102cf5404d5ac151148951caf2d66de88187d7c4c75884f5605ae168" prot="public">
          <name>ModifiedGrapevine</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/temperedlb/criterion.h" line="51" column="26" bodyfile="src/vt/vrt/collection/balance/temperedlb/criterion.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a38645ae954fc9b85e4c8f020eb0234aa" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>InformTypeEnum</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a38645ae954fc9b85e4c8f020eb0234aaa7228d42ce6e32b9d69a58878e39ecfa5" prot="public">
          <name>SyncInform</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Synchronous sharing of underloaded processor loads. </para>
          </briefdescription>
          <detaileddescription>
<para>The round number is defined at the processor level. This approach propagates known loads after all messages for a round are received, maximizing the amount of information propagated per round, but has a synchronization cost. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a38645ae954fc9b85e4c8f020eb0234aaa1997a66729a2620d0bccf74d06bc402a" prot="public">
          <name>AsyncInform</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Asynchronous sharing of underloaded processor loads. </para>
          </briefdescription>
          <detaileddescription>
<para>The round number is defined at the message level. This approach propagates known loads when the first message for a round is received, avoiding the synchronization cost but delaying the propagation of some information until the following round. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for information propagation approach. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/temperedlb/tempered_enums.h" line="53" column="27" bodyfile="src/vt/vrt/collection/balance/temperedlb/tempered_enums.h" bodystart="53" bodyend="72"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1lb_1aeca069067d0f2117ef9cce6876345dd8" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>TransferTypeEnum</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1aeca069067d0f2117ef9cce6876345dd8a0a52da7a03a6de3beefe54f8c03ad80d" prot="public">
          <name>Original</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Original strategy. </para>
          </briefdescription>
          <detaileddescription>
<para>Transfer one object per transfer as in original Grapevine approach. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1aeca069067d0f2117ef9cce6876345dd8a556c3dd912453ae5cb3095cd5054e6f4" prot="public">
          <name>Recursive</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Original strategy improved by recursion. </para>
          </briefdescription>
          <detaileddescription>
<para>When single object transfer is rejected, attempt to recurse in order to pull more objects into the transfer and hereby minimize work added by said transfer. This is especially useful when communication is taken into account, as object transfers typically disrupt local vs. global communication edges. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1aeca069067d0f2117ef9cce6876345dd8a131317ee4f7d30756966761a52b7ad84" prot="public">
          <name>SwapClusters</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Form object clusters and attempt to perform swaps. </para>
          </briefdescription>
          <detaileddescription>
<para>Object can be clustered including to arbitrary definition, and swaps of entire clusters, including the nullset, between ranks are attempted. This is especially useful when shared memory constraints are present, as breaking shared memory clusters results in higher overall memory footprint, in contrast with whole cluster swaps. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for the strategy to be used in transfer stage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/temperedlb/tempered_enums.h" line="75" column="29" bodyfile="src/vt/vrt/collection/balance/temperedlb/tempered_enums.h" bodystart="75" bodyend="102"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a3c71e131f84e2ccbb95f43a1058c749c" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>ObjectOrderEnum</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a3c71e131f84e2ccbb95f43a1058c749ca3c1fc46575f79b15fc8990642387d07f" prot="public">
          <name>Arbitrary</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a3c71e131f84e2ccbb95f43a1058c749ca63d0a624ca97347ebbc3f4190b343888" prot="public">
          <name>ElmID</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>By element ID. </para>
          </briefdescription>
          <detaileddescription>
<para>Sort ascending by the ID member of ElementIDStruct. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a3c71e131f84e2ccbb95f43a1058c749ca37b06ef260760bd7b343b29b8fb43063" prot="public">
          <name>FewestMigrations</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Order for the fewest migrations. </para>
          </briefdescription>
          <detaileddescription>
<para>Order starting with the object with the smallest load that can be transferred to drop the processor load below the average, then by descending load for objects with smaller loads, and finally by ascending load for objects with larger loads. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a3c71e131f84e2ccbb95f43a1058c749caba285d85de6643804425ac332bf81193" prot="public">
          <name>SmallObjects</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Order for migrating the objects with the smallest loads. </para>
          </briefdescription>
          <detaileddescription>
<para>Find the object with the smallest load where the sum of its own load and all smaller loads meets or exceeds the amount by which this processor&apos;s load exceeds the target load. Order starting with that object, then by descending load for objects with smaller loads, and finally by ascending load for objects with larger loads. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a3c71e131f84e2ccbb95f43a1058c749ca58a14656ff3b03b4af0559d79b5ac566" prot="public">
          <name>LargestObjects</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Order by descending load. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for the order in which local objects are considered for transfer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/temperedlb/tempered_enums.h" line="105" column="28" bodyfile="src/vt/vrt/collection/balance/temperedlb/tempered_enums.h" bodystart="105" bodyend="136"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1lb_1ada1e381e6b19ba9f8277d4f698445404" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>CMFTypeEnum</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1ada1e381e6b19ba9f8277d4f698445404a0a52da7a03a6de3beefe54f8c03ad80d" prot="public">
          <name>Original</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Original approach. </para>
          </briefdescription>
          <detaileddescription>
<para>Remove processors from the CMF as soon as they exceed the target (e.g., processor-avg) load. Use a CMF factor of 1.0/x, where x is the target load. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1ada1e381e6b19ba9f8277d4f698445404a2a17cd13e37fb3cacfea703c5edc3680" prot="public">
          <name>NormByMax</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Compute the CMF factor using the largest processor load in the CMF. </para>
          </briefdescription>
          <detaileddescription>
<para>Do not remove processors from the CMF that exceed the target load until the next iteration. Use a CMF factor of 1.0/x, where x is the greater of the target load and the load of the most loaded processor in the CMF. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1ada1e381e6b19ba9f8277d4f698445404abaf94565ded5ad030ec19a9c5ab07d95" prot="public">
          <name>NormByMaxExcludeIneligible</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Narrow the CMF to only include processors that can accommodate the transfer. </para>
          </briefdescription>
          <detaileddescription>
<para>Use a CMF factor of 1.0/x, where x is the greater of the target load and the load of the most loaded processor in the CMF. Only include processors in the CMF that will pass the chosen <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_criterion" kindref="compound">Criterion</ref> for the object being considered for transfer. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for how the CMF is computed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/temperedlb/tempered_enums.h" line="139" column="24" bodyfile="src/vt/vrt/collection/balance/temperedlb/tempered_enums.h" bodystart="139" bodyend="165"/>
      </memberdef>
      <memberdef kind="enum" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a72b44c7e6b2052509331d57b9c94c84a" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>KnowledgeEnum</name>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a72b44c7e6b2052509331d57b9c94c84aac90d702da275c4b81b75a6a0163bc2bf" prot="public">
          <name>UserDefined</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>User defined values of fanout and rounds. </para>
          </briefdescription>
          <detaileddescription>
<para>The fanout and rounds must be set explicitly </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a72b44c7e6b2052509331d57b9c94c84aaae94f80b3ce82062a5dd7815daa04f9d" prot="public">
          <name>Complete</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Full information. </para>
          </briefdescription>
          <detaileddescription>
<para>The fanout will be as large as possible, with only one round </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacevt_1_1vrt_1_1collection_1_1lb_1a72b44c7e6b2052509331d57b9c94c84aace0be71e33226e4c1db2bcea5959f16b" prot="public">
          <name>Log</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Choose rounds and/or fanout based on log rule. </para>
          </briefdescription>
          <detaileddescription>
<para>The relationship between rounds and fanout will be approximately rounds = log(num_ranks)/log(fanout). </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for determining fanout and rounds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/temperedlb/tempered_enums.h" line="168" column="26" bodyfile="src/vt/vrt/collection/balance/temperedlb/tempered_enums.h" bodystart="168" bodyend="188"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1lb_1aa3a389ff9262dd6be27791dcf037ef38" prot="public" static="no">
        <type>std::map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febe" kindref="member">StatisticQuantity</ref>, double &gt;</type>
        <definition>using vt::vrt::collection::lb::StatisticQuantityMap = typedef std::map&lt;StatisticQuantity, double&gt;</definition>
        <argsstring></argsstring>
        <name>StatisticQuantityMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="210" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a497ad83ef5825f2ea18ed20a228870d3" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1" kindref="member">Statistic</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1aa3a389ff9262dd6be27791dcf037ef38" kindref="member">StatisticQuantityMap</ref> &gt;</type>
        <definition>using vt::vrt::collection::lb::StatisticMap = typedef std::unordered_map&lt;Statistic, StatisticQuantityMap&gt;</definition>
        <argsstring></argsstring>
        <name>StatisticMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="211" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a63b5422fb25e4c32131e8e227fdc4188" prot="public" static="no">
        <type>double</type>
        <definition>using vt::vrt::collection::lb::BytesType = typedef double</definition>
        <argsstring></argsstring>
        <name>BytesType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/temperedlb/tempered_msgs.h" line="55" column="1" bodyfile="src/vt/vrt/collection/balance/temperedlb/tempered_msgs.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a00dc78d5f748e26c7d8d1d329d0c9684" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a74091f087d3a26643d18f66c7fb7da8d" kindref="member">SharedIDType</ref>, <ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_cluster_info" kindref="compound">ClusterInfo</ref> &gt;</type>
        <definition>using vt::vrt::collection::lb::ClusterSummaryType = typedef std::unordered_map&lt;SharedIDType, ClusterInfo&gt;</definition>
        <argsstring></argsstring>
        <name>ClusterSummaryType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/temperedlb/tempered_msgs.h" line="131" column="1" bodyfile="src/vt/vrt/collection/balance/temperedlb/tempered_msgs.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a853d811ae418c3060ca754a415f44e68" prot="public" static="no">
        <type>std::tuple&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1a63b5422fb25e4c32131e8e227fdc4188" kindref="member">BytesType</ref>, <ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1a00dc78d5f748e26c7d8d1d329d0c9684" kindref="member">ClusterSummaryType</ref> &gt;</type>
        <definition>using vt::vrt::collection::lb::RankSummaryType = typedef std::tuple&lt;BytesType, ClusterSummaryType&gt;</definition>
        <argsstring></argsstring>
        <name>RankSummaryType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/temperedlb/tempered_msgs.h" line="132" column="1" bodyfile="src/vt/vrt/collection/balance/temperedlb/tempered_msgs.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a91f2f53a1ce0d6b101faf2360478c3af" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const int32_t</type>
        <definition>constexpr const int32_t vt::vrt::collection::lb::default_bin_size</definition>
        <argsstring></argsstring>
        <name>default_bin_size</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/baselb/load_sampler.h" line="54" column="32" bodyfile="src/vt/vrt/collection/balance/baselb/load_sampler.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1ae304eeea5ffec25d81d9f5f97d72fb22" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>constexpr const NodeType vt::vrt::collection::lb::greedy_root</definition>
        <argsstring></argsstring>
        <name>greedy_root</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/greedylb/greedylb_constants.h" line="51" column="33" bodyfile="src/vt/vrt/collection/balance/greedylb/greedylb_constants.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a54b688e47129103fe1e79f8c291ef78b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const int32_t</type>
        <definition>constexpr const int32_t vt::vrt::collection::lb::greedy_bin_size</definition>
        <argsstring></argsstring>
        <name>greedy_bin_size</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/greedylb/greedylb_constants.h" line="52" column="33" bodyfile="src/vt/vrt/collection/balance/greedylb/greedylb_constants.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1acd16364846e9f2d57c6e393f595fef4a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const bool</type>
        <definition>constexpr const bool vt::vrt::collection::lb::greedy_auto_threshold_p</definition>
        <argsstring></argsstring>
        <name>greedy_auto_threshold_p</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/greedylb/greedylb_constants.h" line="53" column="33" bodyfile="src/vt/vrt/collection/balance/greedylb/greedylb_constants.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1acd4e3fd2e842216c8bd453ca2a0ae702" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const double</type>
        <definition>constexpr const double vt::vrt::collection::lb::greedy_tolerance</definition>
        <argsstring></argsstring>
        <name>greedy_tolerance</name>
        <initializer>= 0.03f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/greedylb/greedylb_constants.h" line="54" column="33" bodyfile="src/vt/vrt/collection/balance/greedylb/greedylb_constants.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1ae7c510c2cfde21d93cd543672338e278" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const double</type>
        <definition>constexpr const double vt::vrt::collection::lb::greedy_threshold_p</definition>
        <argsstring></argsstring>
        <name>greedy_threshold_p</name>
        <initializer>= 0.3f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/greedylb/greedylb_constants.h" line="55" column="33" bodyfile="src/vt/vrt/collection/balance/greedylb/greedylb_constants.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a8c9b21c3e8a59a265685481d51b3a080" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const double</type>
        <definition>constexpr const double vt::vrt::collection::lb::greedy_max_threshold_p</definition>
        <argsstring></argsstring>
        <name>greedy_max_threshold_p</name>
        <initializer>= 1.004f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/greedylb/greedylb_constants.h" line="56" column="33" bodyfile="src/vt/vrt/collection/balance/greedylb/greedylb_constants.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a4e40f48f14bc7e77a8c0c4cae7f0be23" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const double</type>
        <definition>constexpr const double vt::vrt::collection::lb::hierlb_threshold_p</definition>
        <argsstring></argsstring>
        <name>hierlb_threshold_p</name>
        <initializer>= 0.8f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" line="51" column="33" bodyfile="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1ae36daa5a867c66318fd358e4abe37974" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const double</type>
        <definition>constexpr const double vt::vrt::collection::lb::hierlb_max_threshold_p</definition>
        <argsstring></argsstring>
        <name>hierlb_max_threshold_p</name>
        <initializer>= 1.004f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" line="52" column="33" bodyfile="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a0e6a9bb7e3278b69faad4bf3e697f5d8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>constexpr const NodeType vt::vrt::collection::lb::hierlb_nary</definition>
        <argsstring></argsstring>
        <name>hierlb_nary</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" line="53" column="33" bodyfile="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1aed63aa9ad245c85f9094db67683cf053" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const <ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>constexpr const NodeType vt::vrt::collection::lb::hierlb_root</definition>
        <argsstring></argsstring>
        <name>hierlb_root</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" line="54" column="33" bodyfile="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a4fa6dd09d1f60c07cab6bf398200b362" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const int32_t</type>
        <definition>constexpr const int32_t vt::vrt::collection::lb::hierlb_bin_size</definition>
        <argsstring></argsstring>
        <name>hierlb_bin_size</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" line="55" column="33" bodyfile="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a4889664adf3cc014546a42ae62bb65b0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const double</type>
        <definition>constexpr const double vt::vrt::collection::lb::hierlb_no_load_sentinel</definition>
        <argsstring></argsstring>
        <name>hierlb_no_load_sentinel</name>
        <initializer>= -1.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" line="56" column="33" bodyfile="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1ac5a307a141d48e935e06e9acb124eec9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const double</type>
        <definition>constexpr const double vt::vrt::collection::lb::hierlb_tolerance</definition>
        <argsstring></argsstring>
        <name>hierlb_tolerance</name>
        <initializer>= 0.03f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" line="57" column="33" bodyfile="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a0c5bcd73489999c39b8ccaee4abdd9da" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const bool</type>
        <definition>constexpr const bool vt::vrt::collection::lb::hierlb_auto_threshold_p</definition>
        <argsstring></argsstring>
        <name>hierlb_auto_threshold_p</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" line="58" column="33" bodyfile="src/vt/vrt/collection/balance/hierarchicallb/hierlb_constants.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1af715270afd22a7308c3c579f67ebaf14" prot="public" static="yes" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1" kindref="member">Statistic</ref>, std::string &gt;</type>
        <definition>std::unordered_map&lt;Statistic,std::string&gt; vt::vrt::collection::lb::lb_stat_names_</definition>
        <argsstring></argsstring>
        <name>lb_stat_names_</name>
        <initializer>= {
  {<ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1aa91c95683ba4869756e2b2cb4483fd53" kindref="member">Statistic::Rank_load_modeled</ref>,   std::string{&quot;Rank_load_modeled&quot;}},
  {Statistic::Rank_load_raw,       std::string{&quot;Rank_load_raw&quot;}},
  {Statistic::Rank_comm,           std::string{&quot;Rank_comm&quot;}},
  {Statistic::Rank_strategy_specific_load_modeled,
      std::string{&quot;Rank_strategy_specific_load_modeled&quot;}},
  {Statistic::Object_load_modeled, std::string{&quot;Object_load_modeled&quot;}},
  {Statistic::Object_load_raw,     std::string{&quot;Object_load_raw&quot;}},
  {Statistic::Object_comm,         std::string{&quot;Object_comm&quot;}},
  {Statistic::Object_strategy_specific_load_modeled,
      std::string{&quot;Object_strategy_specific_load_modeled&quot;}},
  {Statistic::ObjectRatio,         std::string{&quot;ObjectRatio&quot;}},
  {Statistic::EdgeRatio,           std::string{&quot;EdgeRatio&quot;}}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_type.cc" line="74" column="27" bodyfile="src/vt/vrt/collection/balance/lb_type.cc" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a51df6cd5ea7fa13065f456fdd5f0eb5b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const double</type>
        <definition>constexpr const double vt::vrt::collection::lb::run_temperedlb_tolerance</definition>
        <argsstring></argsstring>
        <name>run_temperedlb_tolerance</name>
        <initializer>= 0.03f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/temperedlb/tempered_constants.h" line="51" column="31" bodyfile="src/vt/vrt/collection/balance/temperedlb/tempered_constants.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a8c3ee6984898915b80c800a4df780bbf" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const double</type>
        <definition>constexpr const double vt::vrt::collection::lb::temperedlb_load_threshold</definition>
        <argsstring></argsstring>
        <name>temperedlb_load_threshold</name>
        <initializer>= 1.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/temperedlb/tempered_constants.h" line="52" column="31" bodyfile="src/vt/vrt/collection/balance/temperedlb/tempered_constants.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a18cc6b2fc35631e93c2f7d1c00851a4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto vt::vrt::collection::lb::format_as</definition>
        <argsstring>(DataDistStrategy c)</argsstring>
        <name>format_as</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1a0c49bf89a59ba0fd5160bc3894417dfa" kindref="member">DataDistStrategy</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/greedylb/greedylb.h" line="127" column="13" bodyfile="src/vt/vrt/collection/balance/greedylb/greedylb.h" bodystart="127" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1lb_1aeb7ccb2ce4711e921658f65fef098f82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::lb::NLOHMANN_JSON_SERIALIZE_ENUM</definition>
        <argsstring>(StatisticQuantity, { {StatisticQuantity::min, &quot;min&quot;}, {StatisticQuantity::max, &quot;max&quot;}, {StatisticQuantity::avg, &quot;avg&quot;}, {StatisticQuantity::std, &quot;std&quot;}, {StatisticQuantity::var, &quot;var&quot;}, {StatisticQuantity::skw, &quot;skw&quot;}, {StatisticQuantity::kur, &quot;kur&quot;}, {StatisticQuantity::car, &quot;car&quot;}, {StatisticQuantity::imb, &quot;imb&quot;}, {StatisticQuantity::npr, &quot;npr&quot;}, {StatisticQuantity::sum, &quot;sum&quot;}, }) nlohmann</argsstring>
        <name>NLOHMANN_JSON_SERIALIZE_ENUM</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febe" kindref="member">StatisticQuantity</ref></type>
        </param>
        <param>
          <type>{ {<ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1a74989c7b4dd16fcc067e90a29cd1febead8bd79cc131920d5de426f914d17405a" kindref="member">StatisticQuantity::min</ref>, &quot;min&quot;}, {StatisticQuantity::max, &quot;max&quot;}, {StatisticQuantity::avg, &quot;avg&quot;}, {StatisticQuantity::std, &quot;std&quot;}, {StatisticQuantity::var, &quot;var&quot;}, {StatisticQuantity::skw, &quot;skw&quot;}, {StatisticQuantity::kur, &quot;kur&quot;}, {StatisticQuantity::car, &quot;car&quot;}, {StatisticQuantity::imb, &quot;imb&quot;}, {StatisticQuantity::npr, &quot;npr&quot;}, {StatisticQuantity::sum, &quot;sum&quot;}, }</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.cc" line="157" column="1" bodyfile="src/vt/vrt/collection/balance/lb_common.cc" bodystart="157" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a1f9a043bb30515a07d13308e214c1385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>nlohmann::json vt::vrt::collection::lb::jsonifyPhaseStatistics</definition>
        <argsstring>(const StatisticMap &amp;statistics)</argsstring>
        <name>jsonifyPhaseStatistics</name>
        <param>
          <type>const <ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1a497ad83ef5825f2ea18ed20a228870d3" kindref="member">StatisticMap</ref> &amp;</type>
          <declname>statistics</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_common.h" line="213" column="16" declfile="src/vt/vrt/collection/balance/lb_common.h" declline="213" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1lb_1acd98c4a6bcb5725976e9cdd7f0d611bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1af0e20ef9afee77295053aa83bf1348b1" kindref="member">Statistic</ref>, std::string &gt; &amp;</type>
        <definition>std::unordered_map&lt; Statistic, std::string &gt; &amp; vt::vrt::collection::lb::get_lb_stat_names</definition>
        <argsstring>()</argsstring>
        <name>get_lb_stat_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/lb_type.cc" line="89" column="20" bodyfile="src/vt/vrt/collection/balance/lb_type.cc" bodystart="89" bodyend="91" declfile="src/vt/vrt/collection/balance/lb_common.h" declline="215" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1lb_1a6f0e788cbaacb5897f056301912277cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto vt::vrt::collection::lb::format_as</definition>
        <argsstring>(CriterionEnum c)</argsstring>
        <name>format_as</name>
        <param>
          <type><ref refid="namespacevt_1_1vrt_1_1collection_1_1lb_1a4e454750e102cf5404d5ac151148951c" kindref="member">CriterionEnum</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/temperedlb/criterion.h" line="94" column="13" bodyfile="src/vt/vrt/collection/balance/temperedlb/criterion.h" bodystart="94" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1vrt_1_1collection_1_1lb_1add36818f0b4214512428635d655083d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto vt::vrt::collection::lb::format_as</definition>
        <argsstring>(ClusterInfo const &amp;e)</argsstring>
        <name>format_as</name>
        <param>
          <type><ref refid="structvt_1_1vrt_1_1collection_1_1lb_1_1_cluster_info" kindref="compound">ClusterInfo</ref> const &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/balance/temperedlb/tempered_msgs.h" line="134" column="13" bodyfile="src/vt/vrt/collection/balance/temperedlb/tempered_msgs.h" bodystart="134" bodyend="140"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/vrt/collection/balance/baselb/baselb.cc" line="61" column="54"/>
  </compounddef>
</doxygen>
