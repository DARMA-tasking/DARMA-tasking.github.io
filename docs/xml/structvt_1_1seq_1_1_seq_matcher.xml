<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1seq_1_1_seq_matcher" kind="struct" language="C++" prot="public">
    <compoundname>vt::seq::SeqMatcher</compoundname>
    <includes refid="seq__matcher_8h" local="no">seq_matcher.h</includes>
    <templateparamlist>
      <param>
        <type>typename MessageT</type>
      </param>
      <param>
        <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MessageT &gt; *</type>
        <declname>f</declname>
        <defname>f</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_matcher_1a180f9f54ad9d6d65893a36fe8b5b89e3" prot="public" static="no">
        <type><ref refid="structvt_1_1seq_1_1_action" kindref="compound">Action</ref>&lt; MessageT &gt;</type>
        <definition>using vt::seq::SeqMatcher&lt; MessageT, f &gt;::SeqActionType =  Action&lt;MessageT&gt;</definition>
        <argsstring></argsstring>
        <name>SeqActionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="63" column="1" bodyfile="src/vt/sequence/seq_matcher.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_matcher_1a9b81f48a020c317f24cc13f4ec6295dc" prot="public" static="no">
        <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MessageT &gt;</type>
        <definition>using vt::seq::SeqMatcher&lt; MessageT, f &gt;::MatchFuncType =  ActiveTypedFnType&lt;MessageT&gt;</definition>
        <argsstring></argsstring>
        <name>MatchFuncType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="64" column="1" bodyfile="src/vt/sequence/seq_matcher.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_matcher_1ac01eb781503d3813043a3f417848f519" prot="public" static="no">
        <type><ref refid="structvt_1_1seq_1_1_seq_msg_state" kindref="compound">SeqMsgState</ref>&lt; MessageT, f &gt;</type>
        <definition>using vt::seq::SeqMatcher&lt; MessageT, f &gt;::SeqMsgStateType =  SeqMsgState&lt;MessageT, f&gt;</definition>
        <argsstring></argsstring>
        <name>SeqMsgStateType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="65" column="1" bodyfile="src/vt/sequence/seq_matcher.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_matcher_1ad8e84a5a494218cd582d8467552b5ff7" prot="public" static="no">
        <type>typename SeqMsgStateType::template ContainerType&lt; T &gt;</type>
        <definition>using vt::seq::SeqMatcher&lt; MessageT, f &gt;::SeqStateContType =  typename SeqMsgStateType::template ContainerType&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>SeqStateContType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="68" column="1" bodyfile="src/vt/sequence/seq_matcher.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_matcher_1aeddaef880aa6f0dcc59486374d59a4cb" prot="public" static="no">
        <type>typename SeqMsgStateType::template TagContainerType&lt; T &gt;</type>
        <definition>using vt::seq::SeqMatcher&lt; MessageT, f &gt;::SeqStateTaggedContType =  typename SeqMsgStateType::template TagContainerType&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>SeqStateTaggedContType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="71" column="1" bodyfile="src/vt/sequence/seq_matcher.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_1a7dd06bfe1aae5a02abbdecea398bd1ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::seq::SeqMatcher&lt; MessageT, f &gt;::hasFirstElem</definition>
        <argsstring>(T &amp;lst)</argsstring>
        <name>hasFirstElem</name>
        <param>
          <type>T &amp;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="74" column="1" bodyfile="src/vt/sequence/seq_matcher.impl.h" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_1a159105deac6c551431f83a6e4923ced2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto vt::seq::SeqMatcher&lt; MessageT, f &gt;::getFirstElem</definition>
        <argsstring>(T &amp;lst)</argsstring>
        <name>getFirstElem</name>
        <param>
          <type>T &amp;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="76" column="1" bodyfile="src/vt/sequence/seq_matcher.impl.h" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_1a5e65d71b69bf341cbb6372898c9e8f4f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::seq::SeqMatcher&lt; MessageT, f &gt;::hasMatchingAnyNoTag</definition>
        <argsstring>(SeqStateContType&lt; T &gt; &amp;lst)</argsstring>
        <name>hasMatchingAnyNoTag</name>
        <param>
          <type><ref refid="structvt_1_1seq_1_1_seq_matcher_1ad8e84a5a494218cd582d8467552b5ff7" kindref="member">SeqStateContType</ref>&lt; T &gt; &amp;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="79" column="1" bodyfile="src/vt/sequence/seq_matcher.impl.h" bodystart="78" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_1a2fbb578d7c1950e56c572fb5e32dc212" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto vt::seq::SeqMatcher&lt; MessageT, f &gt;::getMatchingAnyNoTag</definition>
        <argsstring>(SeqStateContType&lt; T &gt; &amp;lst)</argsstring>
        <name>getMatchingAnyNoTag</name>
        <param>
          <type><ref refid="structvt_1_1seq_1_1_seq_matcher_1ad8e84a5a494218cd582d8467552b5ff7" kindref="member">SeqStateContType</ref>&lt; T &gt; &amp;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="81" column="1" bodyfile="src/vt/sequence/seq_matcher.impl.h" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_1a0cf869347d07625d6a5bc77e10b7e6e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::seq::SeqMatcher&lt; MessageT, f &gt;::hasMatchingAnyTagged</definition>
        <argsstring>(SeqStateTaggedContType&lt; T &gt; &amp;tagged_lst, TagType const &amp;tag)</argsstring>
        <name>hasMatchingAnyTagged</name>
        <param>
          <type><ref refid="structvt_1_1seq_1_1_seq_matcher_1aeddaef880aa6f0dcc59486374d59a4cb" kindref="member">SeqStateTaggedContType</ref>&lt; T &gt; &amp;</type>
          <declname>tagged_lst</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="84" column="1" bodyfile="src/vt/sequence/seq_matcher.impl.h" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_1adc1e8331b331d9e289c5cb79c912ca1c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto vt::seq::SeqMatcher&lt; MessageT, f &gt;::getMatchingAnyTagged</definition>
        <argsstring>(SeqStateTaggedContType&lt; T &gt; &amp;tagged_lst, TagType const &amp;tag)</argsstring>
        <name>getMatchingAnyTagged</name>
        <param>
          <type><ref refid="structvt_1_1seq_1_1_seq_matcher_1aeddaef880aa6f0dcc59486374d59a4cb" kindref="member">SeqStateTaggedContType</ref>&lt; T &gt; &amp;</type>
          <declname>tagged_lst</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="88" column="1" bodyfile="src/vt/sequence/seq_matcher.impl.h" bodystart="103" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_1abfa4be73ab940bb63c3741ef3dcf6834" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::seq::SeqMatcher&lt; MessageT, f &gt;::hasMatchingAction</definition>
        <argsstring>(TagType const &amp;tag)</argsstring>
        <name>hasMatchingAction</name>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="92" column="1" bodyfile="src/vt/sequence/seq_matcher.impl.h" bodystart="144" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_1ac6949485f86eb24ec9af508c636d3b9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1seq_1_1_seq_matcher_1a180f9f54ad9d6d65893a36fe8b5b89e3" kindref="member">SeqActionType</ref></type>
        <definition>SeqMatcher&lt; MessageT, f &gt;::SeqActionType vt::seq::SeqMatcher&lt; MessageT, f &gt;::getMatchingAction</definition>
        <argsstring>(TagType const &amp;tag)</argsstring>
        <name>getMatchingAction</name>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="93" column="1" bodyfile="src/vt/sequence/seq_matcher.impl.h" bodystart="158" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_1aab83891cdc9b348a61bebfa481453bde" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::seq::SeqMatcher&lt; MessageT, f &gt;::hasMatchingMsg</definition>
        <argsstring>(TagType const &amp;tag)</argsstring>
        <name>hasMatchingMsg</name>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="95" column="1" bodyfile="src/vt/sequence/seq_matcher.impl.h" bodystart="117" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_1a457c1f447f1be51ecf3c480eca10366b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MessageT &gt;</type>
        <definition>MsgSharedPtr&lt; MessageT &gt; vt::seq::SeqMatcher&lt; MessageT, f &gt;::getMatchingMsg</definition>
        <argsstring>(TagType const &amp;tag)</argsstring>
        <name>getMatchingMsg</name>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="96" column="1" bodyfile="src/vt/sequence/seq_matcher.impl.h" bodystart="131" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_1a1dc8c34d3611f4eac7e21089e1484e52" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::SeqMatcher&lt; MessageT, f &gt;::bufferUnmatchedMessage</definition>
        <argsstring>(MsgSharedPtr&lt; MessageT &gt; msg, TagType const &amp;tag)</argsstring>
        <name>bufferUnmatchedMessage</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MessageT &gt;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="99" column="1" bodyfile="src/vt/sequence/seq_matcher.impl.h" bodystart="173" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_1aca3ab24ab457f57cd341c21aff0c0951" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FnT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::seq::SeqMatcher&lt; MessageT, f &gt;::bufferUnmatchedAction</definition>
        <argsstring>(FnT action, SeqType const &amp;seq_id, TagType const &amp;tag)</argsstring>
        <name>bufferUnmatchedAction</name>
        <param>
          <type>FnT</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>seq_id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher.h" line="103" column="1" bodyfile="src/vt/sequence/seq_matcher.impl.h" bodystart="187" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/sequence/seq_matcher.h" line="62" column="1" bodyfile="src/vt/sequence/seq_matcher.h" bodystart="62" bodyend="106"/>
    <listofallmembers>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1aca3ab24ab457f57cd341c21aff0c0951" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>bufferUnmatchedAction</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1a1dc8c34d3611f4eac7e21089e1484e52" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>bufferUnmatchedMessage</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1a159105deac6c551431f83a6e4923ced2" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>getFirstElem</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1ac6949485f86eb24ec9af508c636d3b9d" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>getMatchingAction</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1a2fbb578d7c1950e56c572fb5e32dc212" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>getMatchingAnyNoTag</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1adc1e8331b331d9e289c5cb79c912ca1c" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>getMatchingAnyTagged</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1a457c1f447f1be51ecf3c480eca10366b" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>getMatchingMsg</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1a7dd06bfe1aae5a02abbdecea398bd1ec" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>hasFirstElem</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1abfa4be73ab940bb63c3741ef3dcf6834" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>hasMatchingAction</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1a5e65d71b69bf341cbb6372898c9e8f4f" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>hasMatchingAnyNoTag</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1a0cf869347d07625d6a5bc77e10b7e6e3" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>hasMatchingAnyTagged</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1aab83891cdc9b348a61bebfa481453bde" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>hasMatchingMsg</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1a9b81f48a020c317f24cc13f4ec6295dc" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>MatchFuncType</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1a180f9f54ad9d6d65893a36fe8b5b89e3" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>SeqActionType</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1ac01eb781503d3813043a3f417848f519" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>SeqMsgStateType</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1ad8e84a5a494218cd582d8467552b5ff7" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>SeqStateContType</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_1aeddaef880aa6f0dcc59486374d59a4cb" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcher</scope><name>SeqStateTaggedContType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
