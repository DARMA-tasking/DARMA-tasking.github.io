<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1group_1_1_group_i_d_builder" kind="struct" language="C++" prot="public">
    <compoundname>vt::group::GroupIDBuilder</compoundname>
    <includes refid="group__id_8h" local="no">group_id.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1group_1_1_group_i_d_builder_1aea5ed64876ed495000fe0bf7e86549cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref></type>
        <definition>GroupType vt::group::GroupIDBuilder::createGroupID</definition>
        <argsstring>(GroupIDType const &amp;id, NodeType const &amp;node, bool const &amp;is_collective=false, bool const &amp;is_static=true)</argsstring>
        <name>createGroupID</name>
        <param>
          <type><ref refid="namespacevt_1_1group_1a805a6643787ae841525c371fd0cefeb3" kindref="member">GroupIDType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_collective</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_static</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/id/group_id.h" line="70" column="1" bodyfile="src/vt/group/id/group_id.cc" bodystart="52" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_i_d_builder_1a5f3eced580ac5effe2511d12aaa149b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupIDBuilder::setIsCollective</definition>
        <argsstring>(GroupType &amp;group, bool const &amp;is_coll)</argsstring>
        <name>setIsCollective</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_coll</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/id/group_id.h" line="75" column="1" bodyfile="src/vt/group/id/group_id.cc" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_i_d_builder_1afb020ef55e73ee7f3ceb356249035a16" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupIDBuilder::setIsStatic</definition>
        <argsstring>(GroupType &amp;group, bool const &amp;is_static)</argsstring>
        <name>setIsStatic</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_static</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/id/group_id.h" line="76" column="1" bodyfile="src/vt/group/id/group_id.cc" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_i_d_builder_1a612af6198c4c82251702d4bda4f50f32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupIDBuilder::setNode</definition>
        <argsstring>(GroupType &amp;group, NodeType const &amp;node)</argsstring>
        <name>setNode</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/id/group_id.h" line="77" column="1" bodyfile="src/vt/group/id/group_id.cc" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_i_d_builder_1a1e4a17d298d60987acdeabecf71ce339" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupIDBuilder::setID</definition>
        <argsstring>(GroupType &amp;group, GroupIDType const &amp;id)</argsstring>
        <name>setID</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1group_1a805a6643787ae841525c371fd0cefeb3" kindref="member">GroupIDType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/id/group_id.h" line="78" column="1" bodyfile="src/vt/group/id/group_id.cc" bodystart="85" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_i_d_builder_1a5b2f2ee5ba75baeadec6ef06ad7d9234" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::group::GroupIDBuilder::isCollective</definition>
        <argsstring>(GroupType const &amp;group)</argsstring>
        <name>isCollective</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/id/group_id.h" line="79" column="1" bodyfile="src/vt/group/id/group_id.cc" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_i_d_builder_1a7f8f671d1716de3777a4c2b05d1426a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::group::GroupIDBuilder::isStatic</definition>
        <argsstring>(GroupType const &amp;group)</argsstring>
        <name>isStatic</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/id/group_id.h" line="80" column="1" bodyfile="src/vt/group/id/group_id.cc" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_i_d_builder_1ab8b73ad8570726c27ce2cebeb14872c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::group::GroupIDBuilder::getNode</definition>
        <argsstring>(GroupType const &amp;group)</argsstring>
        <name>getNode</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/id/group_id.h" line="81" column="1" bodyfile="src/vt/group/id/group_id.cc" bodystart="99" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_i_d_builder_1a9e20ea794b9042cd4dc533084ce3800e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1group_1a805a6643787ae841525c371fd0cefeb3" kindref="member">GroupIDType</ref></type>
        <definition>GroupIDType vt::group::GroupIDBuilder::getGroupID</definition>
        <argsstring>(GroupType const &amp;group)</argsstring>
        <name>getGroupID</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/id/group_id.h" line="82" column="1" bodyfile="src/vt/group/id/group_id.cc" bodystart="105" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/group/id/group_id.h" line="69" column="1" bodyfile="src/vt/group/id/group_id.h" bodystart="69" bodyend="83"/>
    <listofallmembers>
      <member refid="structvt_1_1group_1_1_group_i_d_builder_1aea5ed64876ed495000fe0bf7e86549cf" prot="public" virt="non-virtual"><scope>vt::group::GroupIDBuilder</scope><name>createGroupID</name></member>
      <member refid="structvt_1_1group_1_1_group_i_d_builder_1a9e20ea794b9042cd4dc533084ce3800e" prot="public" virt="non-virtual"><scope>vt::group::GroupIDBuilder</scope><name>getGroupID</name></member>
      <member refid="structvt_1_1group_1_1_group_i_d_builder_1ab8b73ad8570726c27ce2cebeb14872c9" prot="public" virt="non-virtual"><scope>vt::group::GroupIDBuilder</scope><name>getNode</name></member>
      <member refid="structvt_1_1group_1_1_group_i_d_builder_1a5b2f2ee5ba75baeadec6ef06ad7d9234" prot="public" virt="non-virtual"><scope>vt::group::GroupIDBuilder</scope><name>isCollective</name></member>
      <member refid="structvt_1_1group_1_1_group_i_d_builder_1a7f8f671d1716de3777a4c2b05d1426a2" prot="public" virt="non-virtual"><scope>vt::group::GroupIDBuilder</scope><name>isStatic</name></member>
      <member refid="structvt_1_1group_1_1_group_i_d_builder_1a1e4a17d298d60987acdeabecf71ce339" prot="public" virt="non-virtual"><scope>vt::group::GroupIDBuilder</scope><name>setID</name></member>
      <member refid="structvt_1_1group_1_1_group_i_d_builder_1a5f3eced580ac5effe2511d12aaa149b5" prot="public" virt="non-virtual"><scope>vt::group::GroupIDBuilder</scope><name>setIsCollective</name></member>
      <member refid="structvt_1_1group_1_1_group_i_d_builder_1afb020ef55e73ee7f3ceb356249035a16" prot="public" virt="non-virtual"><scope>vt::group::GroupIDBuilder</scope><name>setIsStatic</name></member>
      <member refid="structvt_1_1group_1_1_group_i_d_builder_1a612af6198c4c82251702d4bda4f50f32" prot="public" virt="non-virtual"><scope>vt::group::GroupIDBuilder</scope><name>setNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
