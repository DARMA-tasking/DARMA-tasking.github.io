<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1elm_1_1_comm_key" kind="struct" language="C++" prot="public">
    <compoundname>vt::elm::CommKey</compoundname>
    <includes refid="elm__comm_8h" local="no">elm_comm.h</includes>
    <innerclass refid="structvt_1_1elm_1_1_comm_key_1_1_collection_tag" prot="public">vt::elm::CommKey::CollectionTag</innerclass>
    <innerclass refid="structvt_1_1elm_1_1_comm_key_1_1_collection_to_node_tag" prot="public">vt::elm::CommKey::CollectionToNodeTag</innerclass>
    <innerclass refid="structvt_1_1elm_1_1_comm_key_1_1_node_to_collection_tag" prot="public">vt::elm::CommKey::NodeToCollectionTag</innerclass>
    <innerclass refid="structvt_1_1elm_1_1_comm_key_1_1_send_recv_tag" prot="public">vt::elm::CommKey::SendRecvTag</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1elm_1_1_comm_key_1a550e5ff8b28436a977e8bf704afa7427" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
        <definition>ElementIDStruct vt::elm::CommKey::from_</definition>
        <argsstring></argsstring>
        <name>from_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="110" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_comm_key_1ac7387154a0eef34bf4af0c4c5a42c38f" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
        <definition>ElementIDStruct vt::elm::CommKey::to_</definition>
        <argsstring></argsstring>
        <name>to_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="111" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_comm_key_1a05f9fc628259a6d899b8948228190723" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
        <definition>ElementIDStruct vt::elm::CommKey::edge_id_</definition>
        <argsstring></argsstring>
        <name>edge_id_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="113" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_comm_key_1a8d37a724bb947b07e514320ff5f3c3b6" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::elm::CommKey::nfrom_</definition>
        <argsstring></argsstring>
        <name>nfrom_</name>
        <initializer>= uninitialized_destination</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="114" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_comm_key_1a30bf939bc0ba2ad6e9985d99fe478665" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::elm::CommKey::nto_</definition>
        <argsstring></argsstring>
        <name>nto_</name>
        <initializer>= uninitialized_destination</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="115" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1elm_1_1_comm_key_1a96646f0648cd255cf4cdc37bcc3597ac" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2" kindref="member">CommCategory</ref></type>
        <definition>CommCategory vt::elm::CommKey::cat_</definition>
        <argsstring></argsstring>
        <name>cat_</name>
        <initializer>= <ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2a95aeb71ffd419cc14c6929f9dcd6cdff" kindref="member">CommCategory::SendRecv</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="116" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1ab6e9e495a97be72463739214749e07fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::elm::CommKey::CommKey</definition>
        <argsstring>()=default</argsstring>
        <name>CommKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1a9132a232fca96f1996c275e1fc2d5910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::elm::CommKey::CommKey</definition>
        <argsstring>(CommKey const &amp;)=default</argsstring>
        <name>CommKey</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_comm_key" kindref="compound">CommKey</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1af7736d2d35d45730b15c8ab68100c93e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::elm::CommKey::CommKey</definition>
        <argsstring>(CommKey &amp;&amp;)=default</argsstring>
        <name>CommKey</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_comm_key" kindref="compound">CommKey</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1adff52fedcd092e88bff3d46a5c23bd92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1elm_1_1_comm_key" kindref="compound">CommKey</ref> &amp;</type>
        <definition>CommKey&amp; vt::elm::CommKey::operator=</definition>
        <argsstring>(CommKey const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_comm_key" kindref="compound">CommKey</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1a0effc1fd3e2eebbcd7aa4b3a0b5b5949" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::elm::CommKey::CommKey</definition>
        <argsstring>(SendRecvTag, ElementIDStruct from, ElementIDStruct to, bool bcast)</argsstring>
        <name>CommKey</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_comm_key_1_1_send_recv_tag" kindref="compound">SendRecvTag</ref></type>
        </param>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bcast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="80" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="80" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1a2e0ddb556b68ee07656a0885524dfad3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::elm::CommKey::CommKey</definition>
        <argsstring>(CollectionTag, ElementIDStruct from, ElementIDStruct to, bool bcast)</argsstring>
        <name>CommKey</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_comm_key_1_1_collection_tag" kindref="compound">CollectionTag</ref></type>
        </param>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bcast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="88" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="88" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1ac8cb57b096ed4d9102166683a2aecb91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::elm::CommKey::CommKey</definition>
        <argsstring>(CollectionToNodeTag, ElementIDStruct from, NodeType to, bool bcast)</argsstring>
        <name>CommKey</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_comm_key_1_1_collection_to_node_tag" kindref="compound">CollectionToNodeTag</ref></type>
        </param>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bcast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="95" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1ac7803fe0fe9642f2f34eb474b61c17da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::elm::CommKey::CommKey</definition>
        <argsstring>(NodeToCollectionTag, NodeType from, ElementIDStruct to, bool bcast)</argsstring>
        <name>CommKey</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_comm_key_1_1_node_to_collection_tag" kindref="compound">NodeToCollectionTag</ref></type>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bcast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="102" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="102" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1a75f1afcaf2349cdc7de7bf8586ba8832" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
        <definition>ElementIDStruct vt::elm::CommKey::fromObj</definition>
        <argsstring>() const</argsstring>
        <name>fromObj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="118" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1a4dd567c04eea5bb8aeb2acd7ad8f01de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
        <definition>ElementIDStruct vt::elm::CommKey::toObj</definition>
        <argsstring>() const</argsstring>
        <name>toObj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="119" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1a0ca4110f2eec16b09cbb1201c3e094e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1elm_1a63afb64985b41b7b6dcf2f01336391f8" kindref="member">ElementIDType</ref></type>
        <definition>ElementIDType vt::elm::CommKey::fromNode</definition>
        <argsstring>() const</argsstring>
        <name>fromNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="120" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1a049276643e77cfea00a68e5dcaa87eb2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1elm_1a63afb64985b41b7b6dcf2f01336391f8" kindref="member">ElementIDType</ref></type>
        <definition>ElementIDType vt::elm::CommKey::toNode</definition>
        <argsstring>() const</argsstring>
        <name>toNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="121" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1a23b4e6a59e39eac8a5e631496e6cd618" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1elm_1_1_element_i_d_struct" kindref="compound">ElementIDStruct</ref></type>
        <definition>ElementIDStruct vt::elm::CommKey::edgeID</definition>
        <argsstring>() const</argsstring>
        <name>edgeID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="122" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1af456efc0f7900eeca45b130b59de4aed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1elm_1ab7367fdbe88bdcf329563642147f9ae2" kindref="member">CommCategory</ref></type>
        <definition>CommCategory vt::elm::CommKey::commCategory</definition>
        <argsstring>() const</argsstring>
        <name>commCategory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="123" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1afbe1b9e740b507000addc28a4f5245df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::elm::CommKey::selfEdge</definition>
        <argsstring>() const</argsstring>
        <name>selfEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="125" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1a52b50e35388e05418d9288ee3233659e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::elm::CommKey::offNode</definition>
        <argsstring>() const</argsstring>
        <name>offNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="126" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="126" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1a3f8677b9b9107edd7b6dd3412a89143e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::elm::CommKey::onNode</definition>
        <argsstring>() const</argsstring>
        <name>onNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="137" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1afe0d2056b16820eb721fd282eeb53f73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::elm::CommKey::operator==</definition>
        <argsstring>(CommKey const &amp;k) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structvt_1_1elm_1_1_comm_key" kindref="compound">CommKey</ref> const &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="139" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="139" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1elm_1_1_comm_key_1a7fe80a1dba0e87be03df137c7cb246ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::elm::CommKey::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/elm/elm_comm.h" line="147" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="147" bodyend="149"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1084">
        <label>vt::elm::ElementIDStruct</label>
        <link refid="structvt_1_1elm_1_1_element_i_d_struct"/>
      </node>
      <node id="1083">
        <label>vt::elm::CommKey</label>
        <link refid="structvt_1_1elm_1_1_comm_key"/>
        <childnode refid="1084" relation="usage">
          <edgelabel>from_</edgelabel>
          <edgelabel>edge_id_</edgelabel>
          <edgelabel>to_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/elm/elm_comm.h" line="68" column="1" bodyfile="src/vt/elm/elm_comm.h" bodystart="68" bodyend="150"/>
    <listofallmembers>
      <member refid="structvt_1_1elm_1_1_comm_key_1a96646f0648cd255cf4cdc37bcc3597ac" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>cat_</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1af456efc0f7900eeca45b130b59de4aed" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>commCategory</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1ab6e9e495a97be72463739214749e07fb" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>CommKey</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a9132a232fca96f1996c275e1fc2d5910" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>CommKey</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1af7736d2d35d45730b15c8ab68100c93e" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>CommKey</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a0effc1fd3e2eebbcd7aa4b3a0b5b5949" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>CommKey</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a2e0ddb556b68ee07656a0885524dfad3" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>CommKey</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1ac8cb57b096ed4d9102166683a2aecb91" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>CommKey</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1ac7803fe0fe9642f2f34eb474b61c17da" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>CommKey</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a05f9fc628259a6d899b8948228190723" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>edge_id_</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a23b4e6a59e39eac8a5e631496e6cd618" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>edgeID</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a550e5ff8b28436a977e8bf704afa7427" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>from_</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a0ca4110f2eec16b09cbb1201c3e094e6" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>fromNode</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a75f1afcaf2349cdc7de7bf8586ba8832" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>fromObj</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a8d37a724bb947b07e514320ff5f3c3b6" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>nfrom_</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a30bf939bc0ba2ad6e9985d99fe478665" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>nto_</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a52b50e35388e05418d9288ee3233659e" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>offNode</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a3f8677b9b9107edd7b6dd3412a89143e" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>onNode</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1adff52fedcd092e88bff3d46a5c23bd92" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>operator=</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1afe0d2056b16820eb721fd282eeb53f73" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>operator==</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1afbe1b9e740b507000addc28a4f5245df" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>selfEdge</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a7fe80a1dba0e87be03df137c7cb246ac" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>serialize</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1ac7387154a0eef34bf4af0c4c5a42c38f" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>to_</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a049276643e77cfea00a68e5dcaa87eb2" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>toNode</name></member>
      <member refid="structvt_1_1elm_1_1_comm_key_1a4dd567c04eea5bb8aeb2acd7ad8f01de" prot="public" virt="non-virtual"><scope>vt::elm::CommKey</scope><name>toObj</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
