<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1objgroup_1_1holder_1_1_holder_user" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>vt::objgroup::holder::HolderUser</compoundname>
    <basecompoundref refid="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base" prot="public" virt="non-virtual">vt::objgroup::holder::HolderObjBase&lt; ObjT &gt;</basecompoundref>
    <includes refid="holder__user_8h" local="no">holder_user.h</includes>
    <templateparamlist>
      <param>
        <type>template&lt; typename &gt; class</type>
        <declname>UserPtr</declname>
        <defname>UserPtr</defname>
      </param>
      <param>
        <type>typename ObjT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a7e5ba27e81a9cb9aa4bfe4eb3ee04e5c" prot="private" static="no" mutable="no">
        <type>UserPtr&lt; ObjT &gt;</type>
        <definition>UserPtr&lt;ObjT&gt; vt::objgroup::holder::HolderUser&lt; UserPtr, ObjT &gt;::obj_</definition>
        <argsstring></argsstring>
        <name>obj_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/holder/holder_user.h" line="72" column="1" bodyfile="src/vt/objgroup/holder/holder_user.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a5c81ffca6d44450a02c9d74c650d2178" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::objgroup::holder::HolderUser&lt; UserPtr, ObjT &gt;::HolderUser</definition>
        <argsstring>(UserPtr&lt; ObjT &gt; in_obj)</argsstring>
        <name>HolderUser</name>
        <param>
          <type>UserPtr&lt; ObjT &gt;</type>
          <declname>in_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/holder/holder_user.h" line="55" column="1" bodyfile="src/vt/objgroup/holder/holder_user.h" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a694de38808a7075ef8fa919d9e983c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vt::objgroup::holder::HolderUser&lt; UserPtr, ObjT &gt;::~HolderUser</definition>
        <argsstring>()=default</argsstring>
        <name>~HolderUser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/holder/holder_user.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a102b494316b9f906a02f1c47b797e339" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>ObjT *</type>
        <definition>ObjT* vt::objgroup::holder::HolderUser&lt; UserPtr, ObjT &gt;::get</definition>
        <argsstring>() override</argsstring>
        <name>get</name>
        <reimplements refid="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base_1a4b350b0126259d31a62fd426a08f6698">get</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/holder/holder_user.h" line="62" column="1" bodyfile="src/vt/objgroup/holder/holder_user.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1holder_1_1_holder_user_1abba92cc4a99e045b64a1865fe1477fb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool vt::objgroup::holder::HolderUser&lt; UserPtr, ObjT &gt;::exists</definition>
        <argsstring>() override</argsstring>
        <name>exists</name>
        <reimplements refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1afeebbe358baf0b2bfea57f52807be564">exists</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/holder/holder_user.h" line="63" column="1" bodyfile="src/vt/objgroup/holder/holder_user.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a85c5a7613142e86a830a0b5103f83ce4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::byte *</type>
        <definition>std::byte* vt::objgroup::holder::HolderUser&lt; UserPtr, ObjT &gt;::getPtr</definition>
        <argsstring>() override</argsstring>
        <name>getPtr</name>
        <reimplements refid="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base_1adbb4d702b76306f185e29388961e1e2d">getPtr</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/holder/holder_user.h" line="64" column="1" bodyfile="src/vt/objgroup/holder/holder_user.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a4a43e5b38a0474cd523ccd9aa66950e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::objgroup::holder::HolderUser&lt; UserPtr, ObjT &gt;::reset</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>reset</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/objgroup/holder/holder_user.h" line="67" column="1" bodyfile="src/vt/objgroup/holder/holder_user.h" bodystart="67" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2285">
        <label>vt::objgroup::holder::HolderObjBase&lt; ObjT &gt;</label>
        <link refid="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base"/>
        <childnode refid="2286" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2284">
        <label>vt::objgroup::holder::HolderUser&lt; UserPtr, ObjT &gt;</label>
        <link refid="structvt_1_1objgroup_1_1holder_1_1_holder_user"/>
        <childnode refid="2285" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2286">
        <label>vt::objgroup::holder::HolderBase</label>
        <link refid="structvt_1_1objgroup_1_1holder_1_1_holder_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2292">
        <label>vt::elm::ElementIDStruct</label>
        <link refid="structvt_1_1elm_1_1_element_i_d_struct"/>
      </node>
      <node id="2288">
        <label>vt::objgroup::holder::HolderObjBase&lt; ObjT &gt;</label>
        <link refid="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base"/>
        <childnode refid="2289" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2287">
        <label>vt::objgroup::holder::HolderUser&lt; UserPtr, ObjT &gt;</label>
        <link refid="structvt_1_1objgroup_1_1holder_1_1_holder_user"/>
        <childnode refid="2288" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2290">
        <label>vt::elm::ElementLBData</label>
        <link refid="structvt_1_1elm_1_1_element_l_b_data"/>
        <childnode refid="2291" relation="usage">
          <edgelabel>cur_time_</edgelabel>
        </childnode>
      </node>
      <node id="2289">
        <label>vt::objgroup::holder::HolderBase</label>
        <link refid="structvt_1_1objgroup_1_1holder_1_1_holder_base"/>
        <childnode refid="2290" relation="usage">
          <edgelabel>lb_data_</edgelabel>
        </childnode>
        <childnode refid="2292" relation="usage">
          <edgelabel>elm_id_</edgelabel>
        </childnode>
      </node>
      <node id="2291">
        <label>vt::TimeTypeWrapper</label>
        <link refid="structvt_1_1_time_type_wrapper"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/objgroup/holder/holder_user.h" line="54" column="1" bodyfile="src/vt/objgroup/holder/holder_user.h" bodystart="54" bodyend="73"/>
    <listofallmembers>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a53deb78d918d7281cf01a0f09e410411" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>ElementLBDataType</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a0302cbe111e4bfa8cc8cd1fc47b39b27" prot="protected" virt="non-virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>elm_id_</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a89c0ce1f23237ab00aee86d4d339bc50" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>ElmIDType</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_user_1abba92cc4a99e045b64a1865fe1477fb2" prot="public" virt="virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>exists</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a102b494316b9f906a02f1c47b797e339" prot="public" virt="virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>get</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a36206831fe26ea16bd7bd3079bc45a8d" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>getElmID</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1aa4ebca4b40c0c1904650ea6a64342732" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>getLBData</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a85c5a7613142e86a830a0b5103f83ce4" prot="public" virt="virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>getPtr</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a5c81ffca6d44450a02c9d74c650d2178" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>HolderUser</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a387f07d8e738b627a97ace582aa51430" prot="protected" virt="non-virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>lb_data_</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a7e5ba27e81a9cb9aa4bfe4eb3ee04e5c" prot="private" virt="non-virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>obj_</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a4a43e5b38a0474cd523ccd9aa66950e9" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>reset</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a0d01f16a16316fab236b8753e7530efb" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>serialize</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1ac7bcdff4841dc78d23e7d96f7a383415" prot="public" virt="non-virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>setElmID</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_base_1a9388d2780a5ffa01677c3c535d42fbfa" prot="public" virt="virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>~HolderBase</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_obj_base_1a368d2b1e12c87f11475ecf13dcb66129" prot="public" virt="virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>~HolderObjBase</name></member>
      <member refid="structvt_1_1objgroup_1_1holder_1_1_holder_user_1a694de38808a7075ef8fa919d9e983c8b" prot="public" virt="virtual"><scope>vt::objgroup::holder::HolderUser</scope><name>~HolderUser</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
