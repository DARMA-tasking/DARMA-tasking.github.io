<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacevt_1_1collective" kind="namespace" language="C++">
    <compoundname>vt::collective</compoundname>
    <innerclass refid="structvt_1_1collective_1_1_collective_alg" prot="public">vt::collective::CollectiveAlg</innerclass>
    <innerclass refid="structvt_1_1collective_1_1_collective_scope" prot="public">vt::collective::CollectiveScope</innerclass>
    <innernamespace refid="namespacevt_1_1collective_1_1barrier">vt::collective::barrier</innernamespace>
    <innernamespace refid="namespacevt_1_1collective_1_1detail">vt::collective::detail</innernamespace>
    <innernamespace refid="namespacevt_1_1collective_1_1reduce">vt::collective::reduce</innernamespace>
    <innernamespace refid="namespacevt_1_1collective_1_1scatter">vt::collective::scatter</innernamespace>
    <innernamespace refid="namespacevt_1_1collective_1_1tree">vt::collective::tree</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacevt_1_1collective_1a4c5bf7769ad4396573d6bcc85ec430a4" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1_reduce_msg" kindref="compound">reduce::ReduceMsg</ref></type>
        <definition>using vt::collective::ReduceMsg = typedef reduce::ReduceMsg</definition>
        <argsstring></argsstring>
        <name>ReduceMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="164" column="1" bodyfile="src/vt/collective/collective_alg.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1a711b5dd8547fee4b63077f44188959f4" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_reduce_vec_msg" kindref="compound">reduce::operators::ReduceVecMsg</ref>&lt; T &gt;</type>
        <definition>using vt::collective::ReduceVecMsg = typedef reduce::operators::ReduceVecMsg&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>ReduceVecMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/default_msg.h" line="183" column="1" bodyfile="src/vt/collective/reduce/operators/default_msg.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1a12eddadcf360fcb9d05149e2d8aa327a" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_reduce_arr_msg" kindref="compound">reduce::operators::ReduceArrMsg</ref>&lt; T, N &gt;</type>
        <definition>using vt::collective::ReduceArrMsg = typedef reduce::operators::ReduceArrMsg&lt;T,N&gt;</definition>
        <argsstring></argsstring>
        <name>ReduceArrMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/default_msg.h" line="186" column="1" bodyfile="src/vt/collective/reduce/operators/default_msg.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1a28b82d5d48c9bc6e4fd738fcbf9e0f62" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_reduce_t_msg" kindref="compound">reduce::operators::ReduceTMsg</ref>&lt; T &gt;</type>
        <definition>using vt::collective::ReduceTMsg = typedef reduce::operators::ReduceTMsg&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>ReduceTMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/default_msg.h" line="189" column="1" bodyfile="src/vt/collective/reduce/operators/default_msg.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1aa439a90f05078f2bcf918641c951946f" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_reduce_t_msg" kindref="compound">reduce::operators::ReduceTMsg</ref>&lt; <ref refid="namespacevt_1_1collective_1af988b64711231f96d33ebfaf891e52a4" kindref="member">NoneType</ref> &gt;</type>
        <definition>using vt::collective::ReduceNoneMsg = typedef reduce::operators::ReduceTMsg&lt;NoneType&gt;</definition>
        <argsstring></argsstring>
        <name>ReduceNoneMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/default_msg.h" line="191" column="1" bodyfile="src/vt/collective/reduce/operators/default_msg.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1ae6f54eb36ce2d4203174e55167c4cd87" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_and_op" kindref="compound">reduce::operators::AndOp</ref>&lt; T &gt;</type>
        <definition>using vt::collective::AndOp = typedef reduce::operators::AndOp&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>AndOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/functors/and_op.h" line="81" column="1" bodyfile="src/vt/collective/reduce/operators/functors/and_op.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1a64c800cae2fcb4ec24d2c5540cca0f9e" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_bit_and_op" kindref="compound">reduce::operators::BitAndOp</ref>&lt; T &gt;</type>
        <definition>using vt::collective::BitAndOp = typedef reduce::operators::BitAndOp&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>BitAndOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/functors/bit_and_op.h" line="64" column="1" bodyfile="src/vt/collective/reduce/operators/functors/bit_and_op.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1a07085d466f47337de6f1d6ea30023c11" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_bit_or_op" kindref="compound">reduce::operators::BitOrOp</ref>&lt; T &gt;</type>
        <definition>using vt::collective::BitOrOp = typedef reduce::operators::BitOrOp&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>BitOrOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/functors/bit_or_op.h" line="64" column="1" bodyfile="src/vt/collective/reduce/operators/functors/bit_or_op.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1a834c8e21559219187ec9ef79f72cf474" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_bit_xor_op" kindref="compound">reduce::operators::BitXorOp</ref>&lt; T &gt;</type>
        <definition>using vt::collective::BitXorOp = typedef reduce::operators::BitXorOp&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>BitXorOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/functors/bit_xor_op.h" line="64" column="1" bodyfile="src/vt/collective/reduce/operators/functors/bit_xor_op.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1aee17b1e7ed3266f7407f01253ecc2807" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_max_op" kindref="compound">reduce::operators::MaxOp</ref>&lt; T &gt;</type>
        <definition>using vt::collective::MaxOp = typedef reduce::operators::MaxOp&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>MaxOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/functors/max_op.h" line="83" column="1" bodyfile="src/vt/collective/reduce/operators/functors/max_op.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1a0d9f013f61a3e2a15a9e0491409f50f2" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_min_op" kindref="compound">reduce::operators::MinOp</ref>&lt; T &gt;</type>
        <definition>using vt::collective::MinOp = typedef reduce::operators::MinOp&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>MinOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/functors/min_op.h" line="83" column="1" bodyfile="src/vt/collective/reduce/operators/functors/min_op.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1a812e9225d75c8888457b29f971c33f75" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_none" kindref="compound">reduce::operators::None</ref>&lt; T &gt;</type>
        <definition>using vt::collective::NoneOp = typedef reduce::operators::None&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>NoneOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/functors/none_op.h" line="64" column="1" bodyfile="src/vt/collective/reduce/operators/functors/none_op.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1af988b64711231f96d33ebfaf891e52a4" prot="public" static="no">
        <type><ref refid="namespacevt_1_1collective_1_1reduce_1_1operators_1a1e8a587884de5e874a701ee300ca247c" kindref="member">reduce::operators::NoneType</ref></type>
        <definition>using vt::collective::NoneType = typedef reduce::operators::NoneType</definition>
        <argsstring></argsstring>
        <name>NoneType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/functors/none_op.h" line="65" column="1" bodyfile="src/vt/collective/reduce/operators/functors/none_op.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1ab9abd77f58f0ede6d24462b95d0a1989" prot="public" static="no">
        <type><ref refid="namespacevt_1_1collective_1a812e9225d75c8888457b29f971c33f75" kindref="member">NoneOp</ref>&lt; <ref refid="namespacevt_1_1collective_1af988b64711231f96d33ebfaf891e52a4" kindref="member">NoneType</ref> &gt;</type>
        <definition>typedef NoneOp&lt; NoneType &gt; vt::collective::None</definition>
        <argsstring></argsstring>
        <name>None</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/functors/none_op.h" line="66" column="1" bodyfile="src/vt/collective/reduce/operators/functors/none_op.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1a47e3b11aa019f643f23effceb60ee94a" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_or_op" kindref="compound">reduce::operators::OrOp</ref>&lt; T &gt;</type>
        <definition>using vt::collective::OrOp = typedef reduce::operators::OrOp&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>OrOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/functors/or_op.h" line="74" column="1" bodyfile="src/vt/collective/reduce/operators/functors/or_op.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacevt_1_1collective_1a7a695a8e6ed8247f643918113b7bf881" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1operators_1_1_plus_op" kindref="compound">reduce::operators::PlusOp</ref>&lt; T &gt;</type>
        <definition>using vt::collective::PlusOp = typedef reduce::operators::PlusOp&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>PlusOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/reduce/operators/functors/plus_op.h" line="91" column="1" bodyfile="src/vt/collective/reduce/operators/functors/plus_op.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacevt_1_1collective_1a162001be7dbe7f94163297a57f6b53e8" prot="public" static="no" mutable="no">
        <type>constexpr <ref refid="namespacevt_1a5ffcf8e168b77b0f36e11b616049a1cf" kindref="member">CollectiveAlgType</ref> const</type>
        <definition>constexpr CollectiveAlgType const vt::collective::fst_collective_alg</definition>
        <argsstring></argsstring>
        <name>fst_collective_alg</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.h" line="65" column="1" bodyfile="src/vt/collective/collective_alg.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1collective_1a20b3147d526d94d9bdfa18a374e9ec5b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vt::collective::broadcastConsensus</definition>
        <argsstring>(int root, TagType &amp;consensus_tag, TagType &amp;consensus_scope, bool &amp;consensus_is_user_tag)</argsstring>
        <name>broadcastConsensus</name>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> &amp;</type>
          <declname>consensus_tag</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> &amp;</type>
          <declname>consensus_scope</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>consensus_is_user_tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/collective/collective_alg.cc" line="87" column="1" bodyfile="src/vt/collective/collective_alg.cc" bodystart="87" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/collective/barrier/barrier.cc" line="50" column="1"/>
  </compounddef>
</doxygen>
