<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1util_1_1mutex_1_1_null_mutex" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::mutex::NullMutex</compoundname>
    <includes refid="null__mutex_8h" local="no">null_mutex.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1mutex_1_1_null_mutex_1a83dc2b0c0d0b3b2ff4896352d669623b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::util::mutex::NullMutex::NullMutex</definition>
        <argsstring>()=default</argsstring>
        <name>NullMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/mutex/null_mutex.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1mutex_1_1_null_mutex_1aec62ba43a3e6e4e869da7408930e2f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::util::mutex::NullMutex::NullMutex</definition>
        <argsstring>(NullMutex const &amp;)=delete</argsstring>
        <name>NullMutex</name>
        <param>
          <type><ref refid="structvt_1_1util_1_1mutex_1_1_null_mutex" kindref="compound">NullMutex</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/mutex/null_mutex.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1mutex_1_1_null_mutex_1a09433197f2e0967c72fc9e77e514fcfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vt::util::mutex::NullMutex::~NullMutex</definition>
        <argsstring>()=default</argsstring>
        <name>~NullMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/mutex/null_mutex.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1mutex_1_1_null_mutex_1a491a89387a3cb2cc096b5b9d95726478" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::mutex::NullMutex::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/mutex/null_mutex.h" line="58" column="1" bodyfile="src/vt/utils/mutex/null_mutex.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1mutex_1_1_null_mutex_1ac87de5bb43fd843c2f3fcf3f66d130df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::util::mutex::NullMutex::unlock</definition>
        <argsstring>()</argsstring>
        <name>unlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/mutex/null_mutex.h" line="59" column="1" bodyfile="src/vt/utils/mutex/null_mutex.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1mutex_1_1_null_mutex_1a12001b9a741d4cf8777cd0caf8e2084f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::util::mutex::NullMutex::try_lock</definition>
        <argsstring>()</argsstring>
        <name>try_lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/mutex/null_mutex.h" line="60" column="1" bodyfile="src/vt/utils/mutex/null_mutex.h" bodystart="60" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/utils/mutex/null_mutex.h" line="52" column="1" bodyfile="src/vt/utils/mutex/null_mutex.h" bodystart="52" bodyend="61"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1mutex_1_1_null_mutex_1a491a89387a3cb2cc096b5b9d95726478" prot="public" virt="non-virtual"><scope>vt::util::mutex::NullMutex</scope><name>lock</name></member>
      <member refid="structvt_1_1util_1_1mutex_1_1_null_mutex_1a83dc2b0c0d0b3b2ff4896352d669623b" prot="public" virt="non-virtual"><scope>vt::util::mutex::NullMutex</scope><name>NullMutex</name></member>
      <member refid="structvt_1_1util_1_1mutex_1_1_null_mutex_1aec62ba43a3e6e4e869da7408930e2f6c" prot="public" virt="non-virtual"><scope>vt::util::mutex::NullMutex</scope><name>NullMutex</name></member>
      <member refid="structvt_1_1util_1_1mutex_1_1_null_mutex_1a12001b9a741d4cf8777cd0caf8e2084f" prot="public" virt="non-virtual"><scope>vt::util::mutex::NullMutex</scope><name>try_lock</name></member>
      <member refid="structvt_1_1util_1_1mutex_1_1_null_mutex_1ac87de5bb43fd843c2f3fcf3f66d130df" prot="public" virt="non-virtual"><scope>vt::util::mutex::NullMutex</scope><name>unlock</name></member>
      <member refid="structvt_1_1util_1_1mutex_1_1_null_mutex_1a09433197f2e0967c72fc9e77e514fcfb" prot="public" virt="virtual"><scope>vt::util::mutex::NullMutex</scope><name>~NullMutex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
