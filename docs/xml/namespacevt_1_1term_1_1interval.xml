<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="namespacevt_1_1term_1_1interval" kind="namespace" language="C++">
    <compoundname>vt::term::interval</compoundname>
    <innerclass refid="structvt_1_1term_1_1interval_1_1_integral_set_base" prot="public">vt::term::interval::IntegralSetBase</innerclass>
    <innerclass refid="structvt_1_1term_1_1interval_1_1_interval" prot="public">vt::term::interval::Interval</innerclass>
    <innerclass refid="structvt_1_1term_1_1interval_1_1_interval_compare" prot="public">vt::term::interval::IntervalCompare</innerclass>
    <innerclass refid="structvt_1_1term_1_1interval_1_1_strong_integral_set" prot="public">vt::term::interval::StrongIntegralSet</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevt_1_1term_1_1interval_1a389d50e78b21fe2724432fcc75db6f4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DomainT</type>
          </param>
          <param>
            <type>DomainT</type>
            <declname>sentinel</declname>
            <defname>sentinel</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::term::interval::operator&lt;</definition>
        <argsstring>(Interval&lt; DomainT, sentinel &gt; const &amp;i1, Interval&lt; DomainT, sentinel &gt; const &amp;i2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_interval" kindref="compound">Interval</ref>&lt; DomainT, sentinel &gt; const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_interval" kindref="compound">Interval</ref>&lt; DomainT, sentinel &gt; const &amp;</type>
          <declname>i2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/interval.h" line="207" column="1" bodyfile="src/vt/termination/interval/interval.h" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="namespacevt_1_1term_1_1interval_1ac790434b61b732fd90c88a968b2b56cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DomainT</type>
          </param>
          <param>
            <type>DomainT</type>
            <declname>sentinel</declname>
            <defname>sentinel</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto vt::term::interval::format_as</definition>
        <argsstring>(Interval&lt; DomainT, sentinel &gt; i)</argsstring>
        <name>format_as</name>
        <param>
          <type><ref refid="structvt_1_1term_1_1interval_1_1_interval" kindref="compound">Interval</ref>&lt; DomainT, sentinel &gt;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/termination/interval/interval.h" line="222" column="6" bodyfile="src/vt/termination/interval/interval.h" bodystart="222" bodyend="224"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/termination/interval/integral_set.h" line="54" column="42"/>
  </compounddef>
</doxygen>
