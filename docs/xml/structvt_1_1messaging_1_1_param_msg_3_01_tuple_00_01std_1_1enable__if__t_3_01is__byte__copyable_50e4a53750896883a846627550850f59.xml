<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1messaging_1_1_param_msg_3_01_tuple_00_01std_1_1enable__if__t_3_01is__byte__copyable_50e4a53750896883a846627550850f59" kind="struct" language="C++" prot="public">
    <compoundname>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</compoundname>
    <basecompoundref refid="structvt_1_1messaging_1_1_active_msg" prot="public" virt="non-virtual">vt::messaging::ActiveMsg&lt; EpochTagEnvelope &gt;</basecompoundref>
    <includes refid="param__msg_8h" local="no">param_msg.h</includes>
    <templateparamlist>
      <param>
        <type>typename Tuple</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1messaging_1_1_param_msg_3_01_tuple_00_01std_1_1enable__if__t_3_01is__byte__copyable_50e4a53750896883a846627550850f59_1a5efc1e24cae88391ea8e1283c8f3ddaf" prot="public" static="no" mutable="no">
        <type>Tuple</type>
        <definition>Tuple vt::messaging::value &gt;&gt;&lt; Tuple &gt;::params</definition>
        <argsstring></argsstring>
        <name>params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/param_msg.h" line="66" column="1" bodyfile="src/vt/messaging/param_msg.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1messaging_1_1_param_msg_3_01_tuple_00_01std_1_1enable__if__t_3_01is__byte__copyable_50e4a53750896883a846627550850f59_1ab09a04140f07bf5b72c6f82cbcae8f9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::messaging::value &gt;&gt;&lt; Tuple &gt;::ParamMsg</definition>
        <argsstring>()=default</argsstring>
        <name>ParamMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/param_msg.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1messaging_1_1_param_msg_3_01_tuple_00_01std_1_1enable__if__t_3_01is__byte__copyable_50e4a53750896883a846627550850f59_1abcda072cf1e80d5687212b1c59d7c253" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Params</declname>
            <defname>Params</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vt::messaging::value &gt;&gt;&lt; Tuple &gt;::ParamMsg</definition>
        <argsstring>(Params &amp;&amp;... in_params)</argsstring>
        <name>ParamMsg</name>
        <param>
          <type>Params &amp;&amp;...</type>
          <declname>in_params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/param_msg.h" line="62" column="1" bodyfile="src/vt/messaging/param_msg.h" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1messaging_1_1_param_msg_3_01_tuple_00_01std_1_1enable__if__t_3_01is__byte__copyable_50e4a53750896883a846627550850f59_1ad68e4bf3b45364439d5c7c8d38499a53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tuple &amp;</type>
        <definition>Tuple&amp; vt::messaging::value &gt;&gt;&lt; Tuple &gt;::getTuple</definition>
        <argsstring>()</argsstring>
        <name>getTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/messaging/param_msg.h" line="67" column="1" bodyfile="src/vt/messaging/param_msg.h" bodystart="67" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4337">
        <label>vt::messaging::value &gt;&gt;&lt; Tuple &gt;</label>
        <link refid="structvt_1_1messaging_1_1_param_msg_3_01_tuple_00_01std_1_1enable__if__t_3_01is__byte__copyable_50e4a53750896883a846627550850f59"/>
        <childnode refid="4338" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4338">
        <label>vt::Message</label>
        <link refid="structvt_1_1messaging_1_1_active_msg"/>
        <childnode refid="4339" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4339">
        <label>vt::messaging::BaseMsg</label>
        <link refid="structvt_1_1messaging_1_1_base_msg"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4340">
        <label>vt::messaging::value &gt;&gt;&lt; Tuple &gt;</label>
        <link refid="structvt_1_1messaging_1_1_param_msg_3_01_tuple_00_01std_1_1enable__if__t_3_01is__byte__copyable_50e4a53750896883a846627550850f59"/>
        <childnode refid="4341" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4341">
        <label>vt::Message</label>
        <link refid="structvt_1_1messaging_1_1_active_msg"/>
        <childnode refid="4342" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4342">
        <label>vt::messaging::BaseMsg</label>
        <link refid="structvt_1_1messaging_1_1_base_msg"/>
      </node>
    </collaborationgraph>
    <location file="src/vt/messaging/param_msg.h" line="58" column="1" bodyfile="src/vt/messaging/param_msg.h" bodystart="55" bodyend="68"/>
    <listofallmembers>
      <member refid="structvt_1_1messaging_1_1_active_msg_1a5fd6a7b78c86b8f1e36198142990a4c4" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>ActiveMsg</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1ae3f8937b2c95f548f1a3c3340b887c09" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>env</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1a6e2b0541c25f7290555bf50d7cc05874" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>EnvelopeType</name></member>
      <member refid="structvt_1_1messaging_1_1_param_msg_3_01_tuple_00_01std_1_1enable__if__t_3_01is__byte__copyable_50e4a53750896883a846627550850f59_1ad68e4bf3b45364439d5c7c8d38499a53" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>getTuple</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1ac2e6d93267991027ce78c968b17064c7" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>MessageParentType</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1a37cd0731f99157266333772f501d390d" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>operator delete</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1ac79d16742251f19ed94f9725ed866f64" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>operator new</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1ac13140f75e5238670c81589a84881ac1" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>operator new</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1a03927a2881ef7e3308765361cb89c606" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>operator new</name></member>
      <member refid="structvt_1_1messaging_1_1_param_msg_3_01_tuple_00_01std_1_1enable__if__t_3_01is__byte__copyable_50e4a53750896883a846627550850f59_1ab09a04140f07bf5b72c6f82cbcae8f9b" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>ParamMsg</name></member>
      <member refid="structvt_1_1messaging_1_1_param_msg_3_01_tuple_00_01std_1_1enable__if__t_3_01is__byte__copyable_50e4a53750896883a846627550850f59_1abcda072cf1e80d5687212b1c59d7c253" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>ParamMsg</name></member>
      <member refid="structvt_1_1messaging_1_1_param_msg_3_01_tuple_00_01std_1_1enable__if__t_3_01is__byte__copyable_50e4a53750896883a846627550850f59_1a5efc1e24cae88391ea8e1283c8f3ddaf" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>params</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1a758f02bef5991c48d6c9a56c30ca7ad9" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>serialize</name></member>
      <member refid="structvt_1_1messaging_1_1_active_msg_1a97b214f27e477ea5951a2d697f2256e7" prot="public" virt="non-virtual"><scope>vt::messaging::ParamMsg&lt; Tuple, std::enable_if_t&lt; is_byte_copyable_t&lt; Tuple &gt;::value &gt;&gt;</scope><name>vt_msg_serialize_mode_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
