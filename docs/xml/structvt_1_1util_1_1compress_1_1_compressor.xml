<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1util_1_1compress_1_1_compressor" kind="struct" language="C++" prot="public">
    <compoundname>vt::util::compress::Compressor</compoundname>
    <includes refid="compressor_8h" local="no">compressor.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1util_1_1compress_1_1_compressor_1a3a880299b41bc07ba175cd65aa1b7fd2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::util::compress::Compressor::quality_</definition>
        <argsstring></argsstring>
        <name>quality_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The compressor quality </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/compressor.h" line="114" column="1" bodyfile="src/vt/utils/compress/compressor.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1compress_1_1_compressor_1ab446c4e6d76b2444a09ccb763bcd159f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::util::compress::Compressor::window_bits_</definition>
        <argsstring></argsstring>
        <name>window_bits_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The compressor lgwin bits </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/compressor.h" line="115" column="1" bodyfile="src/vt/utils/compress/compressor.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1compress_1_1_compressor_1a580e68eec22dc1e2f86c228b062f0c68" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::util::compress::Compressor::buf_size_</definition>
        <argsstring></argsstring>
        <name>buf_size_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The output buffer size </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/compressor.h" line="116" column="1" bodyfile="src/vt/utils/compress/compressor.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1compress_1_1_compressor_1a1adf1474bba65b42da04180cad574a98" prot="private" static="no" mutable="no">
        <type>BrotliEncoderState *</type>
        <definition>BrotliEncoderState* vt::util::compress::Compressor::enc_</definition>
        <argsstring></argsstring>
        <name>enc_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Underlying encoder state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/compressor.h" line="117" column="1" bodyfile="src/vt/utils/compress/compressor.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1util_1_1compress_1_1_compressor_1acb28983dbee63b35531478b3756777c6" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; uint8_t[]&gt;</type>
        <definition>std::unique_ptr&lt;uint8_t[]&gt; vt::util::compress::Compressor::out_buf_</definition>
        <argsstring></argsstring>
        <name>out_buf_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The temporary output buffer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/compressor.h" line="118" column="1" bodyfile="src/vt/utils/compress/compressor.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1util_1_1compress_1_1_compressor_1ad28fd994869ce365226477bb15d95261" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::util::compress::Compressor::Compressor</definition>
        <argsstring>(int in_quality, int in_window_bits, std::size_t buf_size=1&lt;&lt; 20)</argsstring>
        <name>Compressor</name>
        <param>
          <type>int</type>
          <declname>in_quality</declname>
        </param>
        <param>
          <type>int</type>
          <declname>in_window_bits</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>buf_size</declname>
          <defval>1&lt;&lt; 20</defval>
        </param>
        <briefdescription>
<para>Construct a compressor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_quality</parametername>
</parameternamelist>
<parameterdescription>
<para>the quality of compression </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_window_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bits for the lgwin </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the temporary buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/compressor.h" line="68" column="1" bodyfile="src/vt/utils/compress/compressor.cc" bodystart="49" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1compress_1_1_compressor_1a0c478308c698b9637945f69184c3a2d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::util::compress::Compressor::~Compressor</definition>
        <argsstring>()</argsstring>
        <name>~Compressor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/compressor.h" line="72" column="1" bodyfile="src/vt/utils/compress/compressor.cc" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1compress_1_1_compressor_1a6ffad58973420bf17cbd258cb49fc3c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StreamLike</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::util::compress::Compressor::write</definition>
        <argsstring>(StreamLike &amp;s, uint8_t const *buffer, std::size_t const size)</argsstring>
        <name>write</name>
        <param>
          <type>StreamLike &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>std::size_t const</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compress data and output to writable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream/writable to write compressed data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to compress </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the buffer to compress</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it was successful or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/compressor.h" line="84" column="1" bodyfile="src/vt/utils/compress/compressor.impl.h" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1util_1_1compress_1_1_compressor_1ae5068bb65450d6e2aa3984b0cd92a41e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StreamLike</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::util::compress::Compressor::finish</definition>
        <argsstring>(StreamLike &amp;s)</argsstring>
        <name>finish</name>
        <param>
          <type>StreamLike &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Finish writing data and output to writable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream/writable to write compressed data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it was successful or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/compressor.h" line="94" column="1" bodyfile="src/vt/utils/compress/compressor.impl.h" bodystart="85" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1util_1_1compress_1_1_compressor_1a541b679fcf7674c4a96d19d5b56fee52" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StreamLike</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::util::compress::Compressor::writeImpl</definition>
        <argsstring>(StreamLike &amp;s, uint8_t const *buffer, std::size_t const size, bool finish_)</argsstring>
        <name>writeImpl</name>
        <param>
          <type>StreamLike &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>std::size_t const</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>finish_</declname>
        </param>
        <briefdescription>
<para>Compress data and output to writable, optionally finishing. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream/writable to write compressed data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to compress </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the buffer to compress </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">finish_</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to finish writing</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it was successful or not </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/compress/compressor.h" line="108" column="1" bodyfile="src/vt/utils/compress/compressor.impl.h" bodystart="58" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A streaming compressor for outputting data with brotli compression. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/utils/compress/compressor.h" line="59" column="1" bodyfile="src/vt/utils/compress/compressor.h" bodystart="59" bodyend="119"/>
    <listofallmembers>
      <member refid="structvt_1_1util_1_1compress_1_1_compressor_1a580e68eec22dc1e2f86c228b062f0c68" prot="private" virt="non-virtual"><scope>vt::util::compress::Compressor</scope><name>buf_size_</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_compressor_1ad28fd994869ce365226477bb15d95261" prot="public" virt="non-virtual"><scope>vt::util::compress::Compressor</scope><name>Compressor</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_compressor_1a1adf1474bba65b42da04180cad574a98" prot="private" virt="non-virtual"><scope>vt::util::compress::Compressor</scope><name>enc_</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_compressor_1ae5068bb65450d6e2aa3984b0cd92a41e" prot="public" virt="non-virtual"><scope>vt::util::compress::Compressor</scope><name>finish</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_compressor_1acb28983dbee63b35531478b3756777c6" prot="private" virt="non-virtual"><scope>vt::util::compress::Compressor</scope><name>out_buf_</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_compressor_1a3a880299b41bc07ba175cd65aa1b7fd2" prot="private" virt="non-virtual"><scope>vt::util::compress::Compressor</scope><name>quality_</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_compressor_1ab446c4e6d76b2444a09ccb763bcd159f" prot="private" virt="non-virtual"><scope>vt::util::compress::Compressor</scope><name>window_bits_</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_compressor_1a6ffad58973420bf17cbd258cb49fc3c1" prot="public" virt="non-virtual"><scope>vt::util::compress::Compressor</scope><name>write</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_compressor_1a541b679fcf7674c4a96d19d5b56fee52" prot="private" virt="non-virtual"><scope>vt::util::compress::Compressor</scope><name>writeImpl</name></member>
      <member refid="structvt_1_1util_1_1compress_1_1_compressor_1a0c478308c698b9637945f69184c3a2d0" prot="public" virt="non-virtual"><scope>vt::util::compress::Compressor</scope><name>~Compressor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
