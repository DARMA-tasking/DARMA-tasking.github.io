<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1_vrt_base" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::VrtBase</compoundname>
    <derivedcompoundref refid="structvt_1_1vrt_1_1collection_1_1_untyped_collection" prot="public" virt="non-virtual">vt::vrt::collection::UntypedCollection</derivedcompoundref>
    <derivedcompoundref refid="structvt_1_1vrt_1_1_virtual_context" prot="public" virt="non-virtual">vt::vrt::VirtualContext</derivedcompoundref>
    <includes refid="src_2vt_2vrt_2base_2base_8h" local="no">base.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1_vrt_base_1a1904e5218715dc8f4ec7c186ce4ffee3" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
        <definition>VirtualProxyType vt::vrt::VrtBase::proxy_</definition>
        <argsstring></argsstring>
        <name>proxy_</name>
        <initializer>= no_vrt_proxy</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/base/base.h" line="72" column="1" bodyfile="src/vt/vrt/base/base.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1_vrt_base_1a5f98da4f22c55e58f5759eb84ac7cd06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::VrtBase::VrtBase</definition>
        <argsstring>()=default</argsstring>
        <name>VrtBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/base/base.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_vrt_base_1a7cc2b4f4ad3f2807e73b3d7a0a5b3676" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::VrtBase::VrtBase</definition>
        <argsstring>(VirtualProxyType const &amp;in_proxy)</argsstring>
        <name>VrtBase</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>in_proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/base/base.h" line="54" column="1" bodyfile="src/vt/vrt/base/base.h" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_vrt_base_1a16d15fcaabbf2e477315466dcaaa6f84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual vt::vrt::VrtBase::~VrtBase</definition>
        <argsstring>()</argsstring>
        <name>~VrtBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/base/base.h" line="58" column="1" bodyfile="src/vt/vrt/base/base.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_vrt_base_1a30ea8cc8e915777f3106038c73cdb499" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref></type>
        <definition>VirtualProxyType vt::vrt::VrtBase::getProxy</definition>
        <argsstring>() const</argsstring>
        <name>getProxy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/base/base.h" line="61" column="1" bodyfile="src/vt/vrt/base/base.h" bodystart="61" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1_vrt_base_1aa85b1aa3096a2adffe229927d76cebfd" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::vrt::VrtBase::setProxy</definition>
        <argsstring>(VirtualProxyType const &amp;in_proxy)</argsstring>
        <name>setProxy</name>
        <param>
          <type><ref refid="namespacevt_1a1b417dd5d684f045bb58a0ede70045ac" kindref="member">VirtualProxyType</ref> const &amp;</type>
          <declname>in_proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/base/base.h" line="64" column="1" bodyfile="src/vt/vrt/base/base.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1_vrt_base_1acabd8e5dbd23894c036e870148ddba90" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Serializer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::vrt::VrtBase::serialize</definition>
        <argsstring>(Serializer &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>Serializer &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/base/base.h" line="67" column="1" bodyfile="src/vt/vrt/base/base.h" bodystart="67" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4463">
        <label>vt::vrt::collection::MigrateHookBase</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_base"/>
        <childnode refid="4462" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4460">
        <label>vt::vrt::VrtBase</label>
        <link refid="structvt_1_1vrt_1_1_vrt_base"/>
      </node>
      <node id="4466">
        <label>vt::vrt::collection::CollectionBase&lt; IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_base"/>
        <childnode refid="4465" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4469">
        <label>vt::vrt::MainVirtualContext</label>
        <link refid="structvt_1_1vrt_1_1_main_virtual_context"/>
        <childnode refid="4468" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4464">
        <label>vt::vrt::collection::Migratable</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migratable"/>
        <childnode refid="4463" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4462">
        <label>vt::vrt::collection::MigrateHookInterface</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_migrate_hook_interface"/>
        <childnode refid="4461" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4468">
        <label>vt::vrt::VirtualContext</label>
        <link refid="structvt_1_1vrt_1_1_virtual_context"/>
        <childnode refid="4460" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4461">
        <label>vt::vrt::collection::UntypedCollection</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_untyped_collection"/>
        <childnode refid="4460" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4467">
        <label>vt::vrt::collection::Collection&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection"/>
        <childnode refid="4466" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4465">
        <label>vt::vrt::collection::Indexable&lt; IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_indexable"/>
        <childnode refid="4464" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/vt/vrt/base/base.h" line="51" column="1" bodyfile="src/vt/vrt/base/base.h" bodystart="51" bodyend="73"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1a30ea8cc8e915777f3106038c73cdb499" prot="public" virt="non-virtual"><scope>vt::vrt::VrtBase</scope><name>getProxy</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1a1904e5218715dc8f4ec7c186ce4ffee3" prot="private" virt="non-virtual"><scope>vt::vrt::VrtBase</scope><name>proxy_</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1acabd8e5dbd23894c036e870148ddba90" prot="protected" virt="non-virtual"><scope>vt::vrt::VrtBase</scope><name>serialize</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1aa85b1aa3096a2adffe229927d76cebfd" prot="protected" virt="non-virtual"><scope>vt::vrt::VrtBase</scope><name>setProxy</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1a5f98da4f22c55e58f5759eb84ac7cd06" prot="public" virt="non-virtual"><scope>vt::vrt::VrtBase</scope><name>VrtBase</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1a7cc2b4f4ad3f2807e73b3d7a0a5b3676" prot="public" virt="non-virtual"><scope>vt::vrt::VrtBase</scope><name>VrtBase</name></member>
      <member refid="structvt_1_1vrt_1_1_vrt_base_1a16d15fcaabbf2e477315466dcaaa6f84" prot="public" virt="virtual"><scope>vt::vrt::VrtBase</scope><name>~VrtBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
