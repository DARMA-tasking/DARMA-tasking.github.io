<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1group_1_1_group_manager" kind="struct" language="C++" prot="public">
    <compoundname>vt::group::GroupManager</compoundname>
    <derivedcompoundref refid="structvt_1_1group_1_1_group_manager_t" prot="public" virt="non-virtual">vt::group::GroupManagerT&lt; T &gt;</derivedcompoundref>
    <includes refid="group__manager_8h" local="no">group_manager.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1group_1_1_group_manager_1a38876227e6077059a67a5d5e5647d8a3" prot="public" static="no">
        <type><ref refid="structvt_1_1group_1_1region_1_1_region" kindref="compound">region::Region</ref></type>
        <definition>using vt::group::GroupManager::RegionType =  region::Region</definition>
        <argsstring></argsstring>
        <name>RegionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="75" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1_group_manager_1a9192e585fc2f99bfd5a6ff65fc21c40b" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1group_1_1_group_manager_1a38876227e6077059a67a5d5e5647d8a3" kindref="member">RegionType</ref> &gt;</type>
        <definition>using vt::group::GroupManager::RegionPtrType =  std::unique_ptr&lt;RegionType&gt;</definition>
        <argsstring></argsstring>
        <name>RegionPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="76" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1_group_manager_1a556f65e569f3e3f2dfc4a247e137b409" prot="public" static="no">
        <type><ref refid="structvt_1_1group_1_1_info" kindref="compound">Info</ref></type>
        <definition>using vt::group::GroupManager::GroupInfoType =  Info</definition>
        <argsstring></argsstring>
        <name>GroupInfoType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="77" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1_group_manager_1adedebd6e550efd2bee5bb118f816b2e0" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1group_1_1_group_manager_1a556f65e569f3e3f2dfc4a247e137b409" kindref="member">GroupInfoType</ref> &gt;</type>
        <definition>using vt::group::GroupManager::GroupInfoPtrType =  std::unique_ptr&lt;GroupInfoType&gt;</definition>
        <argsstring></argsstring>
        <name>GroupInfoPtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="78" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1_group_manager_1a9e2a0989865f4097bb5edd390865555e" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref>, <ref refid="structvt_1_1group_1_1_group_manager_1adedebd6e550efd2bee5bb118f816b2e0" kindref="member">GroupInfoPtrType</ref> &gt;</type>
        <definition>using vt::group::GroupManager::GroupContainerType =  std::unordered_map&lt;GroupType, GroupInfoPtrType&gt;</definition>
        <argsstring></argsstring>
        <name>GroupContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="79" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1_group_manager_1ae871c5871ad62b530220009c1ee4d4b9" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref>)&gt;</type>
        <definition>using vt::group::GroupManager::ActionGroupType =  std::function&lt;void(GroupType)&gt;</definition>
        <argsstring></argsstring>
        <name>ActionGroupType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="80" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1_group_manager_1a33ca642d5f42e39f033ed4f62613caef" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1tree_1_1_tree" kindref="compound">collective::tree::Tree</ref></type>
        <definition>using vt::group::GroupManager::TreeType =  collective::tree::Tree</definition>
        <argsstring></argsstring>
        <name>TreeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="81" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1_group_manager_1a9e0bcb0f3241a19b95d4f7fa092f4c8e" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1group_1_1_group_manager_1a33ca642d5f42e39f033ed4f62613caef" kindref="member">TreeType</ref> &gt;</type>
        <definition>using vt::group::GroupManager::TreePtrType =  std::unique_ptr&lt;TreeType&gt;</definition>
        <argsstring></argsstring>
        <name>TreePtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="82" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1_group_manager_1a48b2dd05bbdda19c5d6195b8932a2716" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref> &gt;</type>
        <definition>using vt::group::GroupManager::ActionListType =  std::vector&lt;ActionType&gt;</definition>
        <argsstring></argsstring>
        <name>ActionListType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="83" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1_group_manager_1af722b277e2ad6a8dacdfec0184cd8f2f" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacevt_1_1group_1a73f2624ddeb535b39a08b6524f26b244" kindref="member">RemoteOperationIDType</ref>, <ref refid="structvt_1_1group_1_1_group_manager_1a48b2dd05bbdda19c5d6195b8932a2716" kindref="member">ActionListType</ref> &gt;</type>
        <definition>using vt::group::GroupManager::ActionContainerType =  std::unordered_map&lt; RemoteOperationIDType, ActionListType &gt;</definition>
        <argsstring></argsstring>
        <name>ActionContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="84" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1_group_manager_1a28113adbc42622f7cf278fcaed4efefa" prot="public" static="no">
        <type><ref refid="structvt_1_1collective_1_1reduce_1_1_reduce" kindref="compound">collective::reduce::Reduce</ref></type>
        <definition>using vt::group::GroupManager::ReduceType =  collective::reduce::Reduce</definition>
        <argsstring></argsstring>
        <name>ReduceType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="87" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1group_1_1_group_manager_1a0c646983506b624ad93ceb127df9e811" prot="public" static="no">
        <type><ref refid="structvt_1_1group_1_1_group_manager_1a28113adbc42622f7cf278fcaed4efefa" kindref="member">ReduceType</ref> *</type>
        <definition>using vt::group::GroupManager::ReducePtrType =  ReduceType*</definition>
        <argsstring></argsstring>
        <name>ReducePtrType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="88" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structvt_1_1group_1_1_group_manager_1af0a264c27d0d08af4b617d2e4675fda7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct Info</definition>
        <argsstring></argsstring>
        <name>Info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="118" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="structvt_1_1group_1_1_group_manager_1a977ca475df628d7e164bae4a7a97c001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct InfoColl</definition>
        <argsstring></argsstring>
        <name>InfoColl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="119" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="structvt_1_1group_1_1_group_manager_1ae1817e369e2c7539a02b4eeb0e5cdb83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct FinishedWork</definition>
        <argsstring></argsstring>
        <name>FinishedWork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="120" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="structvt_1_1group_1_1_group_manager_1a612933a09f56f2382ccb3e70a423d418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct InfoRooted</definition>
        <argsstring></argsstring>
        <name>InfoRooted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="121" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="structvt_1_1group_1_1_group_manager_1a3b688c56f16100f140edbbb49b9de739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct GroupActiveAttorney</definition>
        <argsstring></argsstring>
        <name>GroupActiveAttorney</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="122" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1group_1_1_group_manager_1ad14079e35fc22c1ddc8627f4f8bd2ffe" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1group_1a805a6643787ae841525c371fd0cefeb3" kindref="member">GroupIDType</ref></type>
        <definition>GroupIDType vt::group::GroupManager::next_group_id_</definition>
        <argsstring></argsstring>
        <name>next_group_id_</name>
        <initializer>= initial_group_id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="181" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1_group_manager_1a4e15169e16bc0c8d6fa1dd440c386e1b" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1group_1a805a6643787ae841525c371fd0cefeb3" kindref="member">GroupIDType</ref></type>
        <definition>GroupIDType vt::group::GroupManager::next_collective_group_id_</definition>
        <argsstring></argsstring>
        <name>next_collective_group_id_</name>
        <initializer>= initial_group_id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="182" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1_group_manager_1a496d3a98cb37579f93815d4723c627f5" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1group_1_1_group_manager_1a9e2a0989865f4097bb5edd390865555e" kindref="member">GroupContainerType</ref></type>
        <definition>GroupContainerType vt::group::GroupManager::local_collective_group_info_</definition>
        <argsstring></argsstring>
        <name>local_collective_group_info_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="183" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1_group_manager_1a90f8d0d19ae71493e3ef0f25cc33dc70" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1group_1_1_group_manager_1a9e2a0989865f4097bb5edd390865555e" kindref="member">GroupContainerType</ref></type>
        <definition>GroupContainerType vt::group::GroupManager::local_group_info_</definition>
        <argsstring></argsstring>
        <name>local_group_info_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="184" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1_group_manager_1a970a1f928ab59533e256a30f1426ccee" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1group_1_1_group_manager_1a9e2a0989865f4097bb5edd390865555e" kindref="member">GroupContainerType</ref></type>
        <definition>GroupContainerType vt::group::GroupManager::remote_group_info_</definition>
        <argsstring></argsstring>
        <name>remote_group_info_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="185" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1_group_manager_1a3926aff931a66b46bcb1f4d2266986e4" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1group_1a73f2624ddeb535b39a08b6524f26b244" kindref="member">RemoteOperationIDType</ref></type>
        <definition>RemoteOperationIDType vt::group::GroupManager::cur_id_</definition>
        <argsstring></argsstring>
        <name>cur_id_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="186" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1_group_manager_1aaa0fcab1d59372a1535f3b626a05db8a" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1group_1a73f2624ddeb535b39a08b6524f26b244" kindref="member">RemoteOperationIDType</ref></type>
        <definition>RemoteOperationIDType vt::group::GroupManager::cur_collective_id_</definition>
        <argsstring></argsstring>
        <name>cur_collective_id_</name>
        <initializer>= 0xFFFFFFFF00000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="187" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1_group_manager_1a39b9b401f406e473eb073d59fb186e2c" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1group_1_1_group_manager_1af722b277e2ad6a8dacdfec0184cd8f2f" kindref="member">ActionContainerType</ref></type>
        <definition>ActionContainerType vt::group::GroupManager::continuation_actions_</definition>
        <argsstring></argsstring>
        <name>continuation_actions_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="188" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1group_1_1_group_manager_1a0b610e2592c927cbcd932322b4bde808" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1group_1_1_group_manager_1a48b2dd05bbdda19c5d6195b8932a2716" kindref="member">ActionListType</ref></type>
        <definition>ActionListType vt::group::GroupManager::cleanup_actions_</definition>
        <argsstring></argsstring>
        <name>cleanup_actions_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="189" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1acfab15afbf80d7b0aa8d95171167b251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::group::GroupManager::GroupManager</definition>
        <argsstring>()</argsstring>
        <name>GroupManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="90" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="511" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1a87c2b3dc934de17d0ec1372957b234e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual vt::group::GroupManager::~GroupManager</definition>
        <argsstring>()</argsstring>
        <name>~GroupManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="92" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1ac0eb535f215f0edf1bed601b4338220f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupManager::setupDefaultGroup</definition>
        <argsstring>()</argsstring>
        <name>setupDefaultGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1aaf9941faced23021a420185203219149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref></type>
        <definition>GroupType vt::group::GroupManager::newGroup</definition>
        <argsstring>(RegionPtrType in_region, bool const &amp;is_collective, bool const &amp;is_static, ActionGroupType action)</argsstring>
        <name>newGroup</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1_group_manager_1a9192e585fc2f99bfd5a6ff65fc21c40b" kindref="member">RegionPtrType</ref></type>
          <declname>in_region</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_collective</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_static</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1_group_manager_1ae871c5871ad62b530220009c1ee4d4b9" kindref="member">ActionGroupType</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="101" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="61" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1af2986f6eacd693d9906cb397e6e2a706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref></type>
        <definition>GroupType vt::group::GroupManager::newGroup</definition>
        <argsstring>(RegionPtrType in_region, ActionGroupType action)</argsstring>
        <name>newGroup</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1_group_manager_1a9192e585fc2f99bfd5a6ff65fc21c40b" kindref="member">RegionPtrType</ref></type>
          <declname>in_region</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1_group_manager_1ae871c5871ad62b530220009c1ee4d4b9" kindref="member">ActionGroupType</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="106" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="69" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1a92b301d6cf77af7d57ed822c6f044d58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref></type>
        <definition>GroupType vt::group::GroupManager::newGroupCollective</definition>
        <argsstring>(bool const in_group, ActionGroupType action, bool make_mpi_group=false)</argsstring>
        <name>newGroupCollective</name>
        <param>
          <type>bool const</type>
          <declname>in_group</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1_group_manager_1ae871c5871ad62b530220009c1ee4d4b9" kindref="member">ActionGroupType</ref></type>
          <declname>action</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>make_mpi_group</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="107" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1aabd66a33c6306ef472119cd5b2d96d3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref></type>
        <definition>GroupType vt::group::GroupManager::newGroupCollectiveLabel</definition>
        <argsstring>(GroupCollectiveLabelTagType)</argsstring>
        <name>newGroupCollectiveLabel</name>
        <param>
          <type>GroupCollectiveLabelTagType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="110" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="84" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1a9a0520b8e8e35f0f0127db0669c9b648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::group::GroupManager::inGroup</definition>
        <argsstring>(GroupType const &amp;group)</argsstring>
        <name>inGroup</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="111" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1aeb28b3e11f8901329a9a0c3bddd926f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MPI_Comm</type>
        <definition>MPI_Comm vt::group::GroupManager::getGroupComm</definition>
        <argsstring>(GroupType const &amp;group_id)</argsstring>
        <name>getGroupComm</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="113" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="199" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1ad7eca93f1423603999a05fd9c6df8725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MsgT</type>
          </param>
          <param>
            <type><ref refid="namespacevt_1a54eefd5373739c7365058b0d22fea6e2" kindref="member">ActiveTypedFnType</ref>&lt; MsgT &gt; *</type>
            <declname>f</declname>
            <defname>f</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::group::GroupManager::sendMsg</definition>
        <argsstring>(GroupType const &amp;group, MsgT *msg)</argsstring>
        <name>sendMsg</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type>MsgT *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1a0d9f04c5fac76026e927b9641c74ce07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1group_1_1_group_manager_1a0c646983506b624ad93ceb127df9e811" kindref="member">ReducePtrType</ref></type>
        <definition>GroupManager::ReducePtrType vt::group::GroupManager::groupReduce</definition>
        <argsstring>(GroupType const &amp;group)</argsstring>
        <name>groupReduce</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="166" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="131" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1ae813f2b894016f05569d7d06aae55315" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::group::GroupManager::groupRoot</definition>
        <argsstring>(GroupType const &amp;group) const</argsstring>
        <name>groupRoot</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="167" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="142" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1ad9ae779b8223ad458edd62ae5e8a9003" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::group::GroupManager::groupDefault</definition>
        <argsstring>(GroupType const &amp;group) const</argsstring>
        <name>groupDefault</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="168" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="150" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1a79edddb814a77d2ff45fea14291e95df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupManager::addCleanupAction</definition>
        <argsstring>(ActionType action)</argsstring>
        <name>addCleanupAction</name>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="170" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="515" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1ac8a02606998928c4d688386cddf0d3e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1group_1a73f2624ddeb535b39a08b6524f26b244" kindref="member">RemoteOperationIDType</ref></type>
        <definition>RemoteOperationIDType vt::group::GroupManager::getNextID</definition>
        <argsstring>()</argsstring>
        <name>getNextID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="171" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="519" bodyend="521"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1a87de53bad0462026b6f497b101d72edb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref></type>
        <definition>GroupType vt::group::GroupManager::newCollectiveGroup</definition>
        <argsstring>(bool const &amp;in_group, bool const &amp;is_static, ActionGroupType action, bool make_mpi_group=false)</argsstring>
        <name>newCollectiveGroup</name>
        <param>
          <type>bool const &amp;</type>
          <declname>in_group</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_static</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1_group_manager_1ae871c5871ad62b530220009c1ee4d4b9" kindref="member">ActionGroupType</ref></type>
          <declname>action</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>make_mpi_group</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="125" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="91" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1a1f02ae4eea702903d0dc74308f981a60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref></type>
        <definition>GroupType vt::group::GroupManager::newLocalGroup</definition>
        <argsstring>(RegionPtrType in_region, bool const &amp;is_static, ActionGroupType action)</argsstring>
        <name>newLocalGroup</name>
        <param>
          <type><ref refid="structvt_1_1group_1_1_group_manager_1a9192e585fc2f99bfd5a6ff65fc21c40b" kindref="member">RegionPtrType</ref></type>
          <declname>in_region</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_static</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1_group_manager_1ae871c5871ad62b530220009c1ee4d4b9" kindref="member">ActionGroupType</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="129" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="108" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1ab46558b65172c33245fdd418251674b2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupManager::initializeLocalGroupCollective</definition>
        <argsstring>(GroupType const &amp;group, bool const &amp;is_static, ActionType action, bool const in_group, bool make_mpi_group)</argsstring>
        <name>initializeLocalGroupCollective</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_static</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>action</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>in_group</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>make_mpi_group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="132" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="217" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1a8c8c81c05d6afab0fcb357b7ab0b7b1b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupManager::initializeLocalGroup</definition>
        <argsstring>(GroupType const &amp;group, RegionPtrType in_region, bool const &amp;is_static, ActionType action, RegionType::SizeType const &amp;group_size)</argsstring>
        <name>initializeLocalGroup</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1_group_manager_1a9192e585fc2f99bfd5a6ff65fc21c40b" kindref="member">RegionPtrType</ref></type>
          <declname>in_region</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_static</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a9bb381adf31111aae34dbc644bad6c1f" kindref="member">RegionType::SizeType</ref> const &amp;</type>
          <declname>group_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="136" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="233" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1a7222ca8746603129c0c014a4559594e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupManager::initializeRemoteGroup</definition>
        <argsstring>(GroupType const &amp;group, RegionPtrType in_region, bool const &amp;is_static, RegionType::SizeType const &amp;group_size)</argsstring>
        <name>initializeRemoteGroup</name>
        <param>
          <type><ref refid="namespacevt_1a27b5e4411c9b6140c49100e050e2f743" kindref="member">GroupType</ref> const &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1_group_manager_1a9192e585fc2f99bfd5a6ff65fc21c40b" kindref="member">RegionPtrType</ref></type>
          <declname>in_region</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_static</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1group_1_1region_1_1_region_1a9bb381adf31111aae34dbc644bad6c1f" kindref="member">RegionType::SizeType</ref> const &amp;</type>
          <declname>group_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="140" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="183" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1ae8ccd9feb60fcd1ee85cc1f09ed003fb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1group_1a73f2624ddeb535b39a08b6524f26b244" kindref="member">RemoteOperationIDType</ref></type>
        <definition>RemoteOperationIDType vt::group::GroupManager::nextCollectiveID</definition>
        <argsstring>()</argsstring>
        <name>nextCollectiveID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="145" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1aebb439bebdefc27cfa6408e5cf0f7741" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1group_1a73f2624ddeb535b39a08b6524f26b244" kindref="member">RemoteOperationIDType</ref></type>
        <definition>RemoteOperationIDType vt::group::GroupManager::registerContinuation</definition>
        <argsstring>(ActionType action)</argsstring>
        <name>registerContinuation</name>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="147" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="157" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1a7ce9aaa7a143c8c919ac68c866917dd2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupManager::registerContinuation</definition>
        <argsstring>(RemoteOperationIDType const &amp;op, ActionType action)</argsstring>
        <name>registerContinuation</name>
        <param>
          <type><ref refid="namespacevt_1_1group_1a73f2624ddeb535b39a08b6524f26b244" kindref="member">RemoteOperationIDType</ref> const &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ae0a5a7b18cc99d7b732cb4d44f46b0f3" kindref="member">ActionType</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="148" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1ae83ca69874fc3008a211b12458a18362" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::group::GroupManager::triggerContinuation</definition>
        <argsstring>(RemoteOperationIDType const &amp;op)</argsstring>
        <name>triggerContinuation</name>
        <param>
          <type><ref refid="namespacevt_1_1group_1a73f2624ddeb535b39a08b6524f26b244" kindref="member">RemoteOperationIDType</ref> const &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="151" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="173" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1acc6d8c736c20fc2fcdf60985f4864aaf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a009267401def7ae8bf201892222d060f" kindref="member">EventType</ref></type>
        <definition>EventType vt::group::GroupManager::sendGroup</definition>
        <argsstring>(MsgSharedPtr&lt; BaseMsgType &gt; const &amp;base, NodeType const &amp;from, MsgSizeType const &amp;size, bool const is_root, bool *const deliver)</argsstring>
        <name>sendGroup</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; <ref refid="namespacevt_1a44d0d4e144748f2b19a1cfd962f50338" kindref="member">BaseMsgType</ref> &gt; const &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1abfa009d900299ac1df967b40ea8f2c8a" kindref="member">MsgSizeType</ref> const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>is_root</declname>
        </param>
        <param>
          <type>bool *const</type>
          <declname>deliver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="153" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="407" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1a93519c585aaedf3e0120b7073567bbe5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a009267401def7ae8bf201892222d060f" kindref="member">EventType</ref></type>
        <definition>EventType vt::group::GroupManager::sendGroupCollective</definition>
        <argsstring>(MsgSharedPtr&lt; BaseMsgType &gt; const &amp;base, NodeType const &amp;from, MsgSizeType const &amp;size, bool const is_root, bool *const deliver)</argsstring>
        <name>sendGroupCollective</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; <ref refid="namespacevt_1a44d0d4e144748f2b19a1cfd962f50338" kindref="member">BaseMsgType</ref> &gt; const &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1abfa009d900299ac1df967b40ea8f2c8a" kindref="member">MsgSizeType</ref> const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>is_root</declname>
        </param>
        <param>
          <type>bool *const</type>
          <declname>deliver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="159" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="296" bodyend="405"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structvt_1_1group_1_1_group_manager_1a0670dfd6a524c967c687dcbee6e09ace" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a009267401def7ae8bf201892222d060f" kindref="member">EventType</ref></type>
        <definition>EventType vt::group::GroupManager::groupHandler</definition>
        <argsstring>(MsgSharedPtr&lt; BaseMsgType &gt; const &amp;msg, NodeType const &amp;from, MsgSizeType const &amp;msg_size, bool const is_root, bool *const deliver)</argsstring>
        <name>groupHandler</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; <ref refid="namespacevt_1a44d0d4e144748f2b19a1cfd962f50338" kindref="member">BaseMsgType</ref> &gt; const &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1abfa009d900299ac1df967b40ea8f2c8a" kindref="member">MsgSizeType</ref> const &amp;</type>
          <declname>msg_size</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>is_root</declname>
        </param>
        <param>
          <type>bool *const</type>
          <declname>deliver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/group/group_manager.h" line="174" column="1" bodyfile="src/vt/group/group_manager.cc" bodystart="249" bodyend="294"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1126">
        <label>vt::group::GroupManager</label>
        <link refid="structvt_1_1group_1_1_group_manager"/>
      </node>
      <node id="1127">
        <label>vt::group::GroupManagerT&lt; T &gt;</label>
        <link refid="structvt_1_1group_1_1_group_manager_t"/>
        <childnode refid="1126" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/vt/group/group_manager.h" line="74" column="1" bodyfile="src/vt/group/group_manager.h" bodystart="74" bodyend="190"/>
    <listofallmembers>
      <member refid="structvt_1_1group_1_1_group_manager_1af722b277e2ad6a8dacdfec0184cd8f2f" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>ActionContainerType</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1ae871c5871ad62b530220009c1ee4d4b9" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>ActionGroupType</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a48b2dd05bbdda19c5d6195b8932a2716" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>ActionListType</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a79edddb814a77d2ff45fea14291e95df" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>addCleanupAction</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a0b610e2592c927cbcd932322b4bde808" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>cleanup_actions_</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a39b9b401f406e473eb073d59fb186e2c" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>continuation_actions_</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1aaa0fcab1d59372a1535f3b626a05db8a" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>cur_collective_id_</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a3926aff931a66b46bcb1f4d2266986e4" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>cur_id_</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1ae1817e369e2c7539a02b4eeb0e5cdb83" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>FinishedWork</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1aeb28b3e11f8901329a9a0c3bddd926f6" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>getGroupComm</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1ac8a02606998928c4d688386cddf0d3e0" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>getNextID</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a3b688c56f16100f140edbbb49b9de739" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>GroupActiveAttorney</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a9e2a0989865f4097bb5edd390865555e" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>GroupContainerType</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1ad9ae779b8223ad458edd62ae5e8a9003" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>groupDefault</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a0670dfd6a524c967c687dcbee6e09ace" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>groupHandler</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1adedebd6e550efd2bee5bb118f816b2e0" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>GroupInfoPtrType</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a556f65e569f3e3f2dfc4a247e137b409" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>GroupInfoType</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1acfab15afbf80d7b0aa8d95171167b251" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>GroupManager</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a0d9f04c5fac76026e927b9641c74ce07" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>groupReduce</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1ae813f2b894016f05569d7d06aae55315" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>groupRoot</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1af0a264c27d0d08af4b617d2e4675fda7" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>Info</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a977ca475df628d7e164bae4a7a97c001" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>InfoColl</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a612933a09f56f2382ccb3e70a423d418" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>InfoRooted</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a9a0520b8e8e35f0f0127db0669c9b648" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>inGroup</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a8c8c81c05d6afab0fcb357b7ab0b7b1b" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>initializeLocalGroup</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1ab46558b65172c33245fdd418251674b2" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>initializeLocalGroupCollective</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a7222ca8746603129c0c014a4559594e9" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>initializeRemoteGroup</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a496d3a98cb37579f93815d4723c627f5" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>local_collective_group_info_</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a90f8d0d19ae71493e3ef0f25cc33dc70" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>local_group_info_</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a87de53bad0462026b6f497b101d72edb" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>newCollectiveGroup</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1aaf9941faced23021a420185203219149" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>newGroup</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1af2986f6eacd693d9906cb397e6e2a706" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>newGroup</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a92b301d6cf77af7d57ed822c6f044d58" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>newGroupCollective</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1aabd66a33c6306ef472119cd5b2d96d3f" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>newGroupCollectiveLabel</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a1f02ae4eea702903d0dc74308f981a60" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>newLocalGroup</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a4e15169e16bc0c8d6fa1dd440c386e1b" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>next_collective_group_id_</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1ad14079e35fc22c1ddc8627f4f8bd2ffe" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>next_group_id_</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1ae8ccd9feb60fcd1ee85cc1f09ed003fb" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>nextCollectiveID</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a0c646983506b624ad93ceb127df9e811" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>ReducePtrType</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a28113adbc42622f7cf278fcaed4efefa" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>ReduceType</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a9192e585fc2f99bfd5a6ff65fc21c40b" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>RegionPtrType</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a38876227e6077059a67a5d5e5647d8a3" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>RegionType</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1aebb439bebdefc27cfa6408e5cf0f7741" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>registerContinuation</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a7ce9aaa7a143c8c919ac68c866917dd2" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>registerContinuation</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a970a1f928ab59533e256a30f1426ccee" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>remote_group_info_</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1acc6d8c736c20fc2fcdf60985f4864aaf" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>sendGroup</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a93519c585aaedf3e0120b7073567bbe5" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>sendGroupCollective</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1ad7eca93f1423603999a05fd9c6df8725" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>sendMsg</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1ac0eb535f215f0edf1bed601b4338220f" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>setupDefaultGroup</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a9e0bcb0f3241a19b95d4f7fa092f4c8e" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>TreePtrType</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a33ca642d5f42e39f033ed4f62613caef" prot="public" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>TreeType</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1ae83ca69874fc3008a211b12458a18362" prot="private" virt="non-virtual"><scope>vt::group::GroupManager</scope><name>triggerContinuation</name></member>
      <member refid="structvt_1_1group_1_1_group_manager_1a87c2b3dc934de17d0ec1372957b234e5" prot="public" virt="virtual"><scope>vt::group::GroupManager</scope><name>~GroupManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
