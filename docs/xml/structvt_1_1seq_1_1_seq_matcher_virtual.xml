<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1seq_1_1_seq_matcher_virtual" kind="struct" language="C++" prot="public">
    <compoundname>vt::seq::SeqMatcherVirtual</compoundname>
    <includes refid="seq__matcher__virtual_8h" local="no">seq_matcher_virtual.h</includes>
    <templateparamlist>
      <param>
        <type>typename VcT</type>
      </param>
      <param>
        <type>typename MsgT</type>
      </param>
      <param>
        <type><ref refid="namespacevt_1_1vrt_1a14077459ea3367e5834151d314ff4bc8" kindref="member">ActiveVrtTypedFnType</ref>&lt; MsgT, VcT &gt; *</type>
        <declname>f</declname>
        <defname>f</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_matcher_virtual_1aa53d05ef480fb78161b56db33018b3b0" prot="public" static="no">
        <type><ref refid="structvt_1_1seq_1_1_action_virtual" kindref="compound">ActionVirtual</ref>&lt; MsgT, VcT &gt;</type>
        <definition>using vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::SeqActionType =  ActionVirtual&lt;MsgT, VcT&gt;</definition>
        <argsstring></argsstring>
        <name>SeqActionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="66" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_matcher_virtual_1a0aa078b1c0bd92a24d66073670b13b42" prot="public" static="no">
        <type><ref refid="namespacevt_1_1vrt_1a14077459ea3367e5834151d314ff4bc8" kindref="member">ActiveVrtTypedFnType</ref>&lt; MsgT, VcT &gt;</type>
        <definition>using vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::MatchFuncType =  ActiveVrtTypedFnType&lt;MsgT, VcT&gt;</definition>
        <argsstring></argsstring>
        <name>MatchFuncType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="67" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_matcher_virtual_1a86488edc14c17416507b49dedef4c54f" prot="public" static="no">
        <type><ref refid="structvt_1_1seq_1_1_seq_msg_state_virtual" kindref="compound">SeqMsgStateVirtual</ref>&lt; VcT, MsgT, f &gt;</type>
        <definition>using vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::SeqMsgStateType =  SeqMsgStateVirtual&lt;VcT, MsgT, f&gt;</definition>
        <argsstring></argsstring>
        <name>SeqMsgStateType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="68" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_matcher_virtual_1a1ce5abe53e93d69d1b487e97fd30fdbd" prot="public" static="no">
        <type>typename SeqMsgStateType::template ContainerType&lt; T &gt;</type>
        <definition>using vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::SeqStateContType =  typename SeqMsgStateType::template ContainerType&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>SeqStateContType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="71" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_matcher_virtual_1ab6b75c420d0d3e46e729188d07c11ff2" prot="public" static="no">
        <type>typename SeqMsgStateType::template TagContainerType&lt; T &gt;</type>
        <definition>using vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::SeqStateTaggedContType =  typename SeqMsgStateType::template TagContainerType&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>SeqStateTaggedContType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="74" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_virtual_1ac21aec817ce2f7a0ff64f39e6a7bce62" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::hasFirstElem</definition>
        <argsstring>(T &amp;lst)</argsstring>
        <name>hasFirstElem</name>
        <param>
          <type>T &amp;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="77" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.impl.h" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_virtual_1a50a7258f058e464735eeb23de68c4209" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::getFirstElem</definition>
        <argsstring>(T &amp;lst)</argsstring>
        <name>getFirstElem</name>
        <param>
          <type>T &amp;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="79" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.impl.h" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_virtual_1a51876d041e0cd8debc1b1108f6d83bb6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::hasMatchingAnyNoTag</definition>
        <argsstring>(SeqStateContType&lt; T &gt; &amp;lst)</argsstring>
        <name>hasMatchingAnyNoTag</name>
        <param>
          <type><ref refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a1ce5abe53e93d69d1b487e97fd30fdbd" kindref="member">SeqStateContType</ref>&lt; T &gt; &amp;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="82" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.impl.h" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_virtual_1a5c2e339746b1aa156dce23ec95ab806a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::getMatchingAnyNoTag</definition>
        <argsstring>(SeqStateContType&lt; T &gt; &amp;lst)</argsstring>
        <name>getMatchingAnyNoTag</name>
        <param>
          <type><ref refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a1ce5abe53e93d69d1b487e97fd30fdbd" kindref="member">SeqStateContType</ref>&lt; T &gt; &amp;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="84" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.impl.h" bodystart="88" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_virtual_1a7d2af68d054e9fdbc9f8bb4e34992a49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::hasMatchingAnyTagged</definition>
        <argsstring>(SeqStateTaggedContType&lt; T &gt; &amp;tagged_lst, TagType const &amp;tag)</argsstring>
        <name>hasMatchingAnyTagged</name>
        <param>
          <type><ref refid="structvt_1_1seq_1_1_seq_matcher_virtual_1ab6b75c420d0d3e46e729188d07c11ff2" kindref="member">SeqStateTaggedContType</ref>&lt; T &gt; &amp;</type>
          <declname>tagged_lst</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="87" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.impl.h" bodystart="96" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_virtual_1ad76832cd659402775f98a6ba874d7421" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::getMatchingAnyTagged</definition>
        <argsstring>(SeqStateTaggedContType&lt; T &gt; &amp;tagged_lst, TagType const &amp;tag)</argsstring>
        <name>getMatchingAnyTagged</name>
        <param>
          <type><ref refid="structvt_1_1seq_1_1_seq_matcher_virtual_1ab6b75c420d0d3e46e729188d07c11ff2" kindref="member">SeqStateTaggedContType</ref>&lt; T &gt; &amp;</type>
          <declname>tagged_lst</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="91" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.impl.h" bodystart="105" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_virtual_1a9edb994600c8caf416f0d2ae1e4d118e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::hasMatchingAction</definition>
        <argsstring>(TagType const &amp;tag)</argsstring>
        <name>hasMatchingAction</name>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="95" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.impl.h" bodystart="146" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_virtual_1a1ddc4f02c3182900d9212cd765c7af87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1seq_1_1_seq_matcher_virtual_1aa53d05ef480fb78161b56db33018b3b0" kindref="member">SeqActionType</ref></type>
        <definition>SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::SeqActionType vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::getMatchingAction</definition>
        <argsstring>(TagType const &amp;tag)</argsstring>
        <name>getMatchingAction</name>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="96" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.impl.h" bodystart="160" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_virtual_1ae96fef9bd738d6f93b9b89163efd1770" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::hasMatchingMsg</definition>
        <argsstring>(TagType const &amp;tag)</argsstring>
        <name>hasMatchingMsg</name>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="98" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.impl.h" bodystart="119" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_virtual_1a96c97161692124a9c0ad629d4e1d9639" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MsgT &gt;</type>
        <definition>MsgSharedPtr&lt; MsgT &gt; vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::getMatchingMsg</definition>
        <argsstring>(TagType const &amp;tag)</argsstring>
        <name>getMatchingMsg</name>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="99" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.impl.h" bodystart="133" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_virtual_1a60dd673159850b4dea0b0d5e69f2ddef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::bufferUnmatchedMessage</definition>
        <argsstring>(MsgSharedPtr&lt; MsgT &gt; msg, TagType const &amp;tag)</argsstring>
        <name>bufferUnmatchedMessage</name>
        <param>
          <type><ref refid="namespacevt_1ab2b3d506ec8e8d1540aede826d84a239" kindref="member">MsgSharedPtr</ref>&lt; MsgT &gt;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="102" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.impl.h" bodystart="175" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_matcher_virtual_1a1679c1eba073362e70808fb89a174c6c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FnT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::seq::SeqMatcherVirtual&lt; VcT, MsgT, f &gt;::bufferUnmatchedAction</definition>
        <argsstring>(FnT action, SeqType const &amp;seq_id, TagType const &amp;tag)</argsstring>
        <name>bufferUnmatchedAction</name>
        <param>
          <type>FnT</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>seq_id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a84ab281dae04a52a4b243d6bf62d0e52" kindref="member">TagType</ref> const &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_matcher_virtual.h" line="104" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.impl.h" bodystart="189" bodyend="206"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/sequence/seq_matcher_virtual.h" line="65" column="1" bodyfile="src/vt/sequence/seq_matcher_virtual.h" bodystart="65" bodyend="107"/>
    <listofallmembers>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a1679c1eba073362e70808fb89a174c6c" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>bufferUnmatchedAction</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a60dd673159850b4dea0b0d5e69f2ddef" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>bufferUnmatchedMessage</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a50a7258f058e464735eeb23de68c4209" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>getFirstElem</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a1ddc4f02c3182900d9212cd765c7af87" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>getMatchingAction</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a5c2e339746b1aa156dce23ec95ab806a" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>getMatchingAnyNoTag</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1ad76832cd659402775f98a6ba874d7421" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>getMatchingAnyTagged</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a96c97161692124a9c0ad629d4e1d9639" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>getMatchingMsg</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1ac21aec817ce2f7a0ff64f39e6a7bce62" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>hasFirstElem</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a9edb994600c8caf416f0d2ae1e4d118e" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>hasMatchingAction</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a51876d041e0cd8debc1b1108f6d83bb6" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>hasMatchingAnyNoTag</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a7d2af68d054e9fdbc9f8bb4e34992a49" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>hasMatchingAnyTagged</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1ae96fef9bd738d6f93b9b89163efd1770" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>hasMatchingMsg</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a0aa078b1c0bd92a24d66073670b13b42" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>MatchFuncType</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1aa53d05ef480fb78161b56db33018b3b0" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>SeqActionType</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a86488edc14c17416507b49dedef4c54f" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>SeqMsgStateType</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1a1ce5abe53e93d69d1b487e97fd30fdbd" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>SeqStateContType</name></member>
      <member refid="structvt_1_1seq_1_1_seq_matcher_virtual_1ab6b75c420d0d3e46e729188d07c11ff2" prot="public" virt="non-virtual"><scope>vt::seq::SeqMatcherVirtual</scope><name>SeqStateTaggedContType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
