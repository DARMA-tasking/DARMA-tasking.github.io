<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1seq_1_1_seq_node" kind="struct" language="C++" prot="public">
    <compoundname>vt::seq::SeqNode</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; SeqNode &gt;</basecompoundref>
    <includes refid="seq__node_8h" local="no">seq_node.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_node_1af2b8ae88c3519f2a6142915ddc974c9d" prot="public" static="no">
        <type>uint64_t</type>
        <definition>using vt::seq::SeqNode::SizeType =  uint64_t</definition>
        <argsstring></argsstring>
        <name>SizeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="71" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_node_1a4550535aff445a28557a1edb9508a6bc" prot="public" static="no">
        <type><ref refid="unionvt_1_1seq_1_1u_seq_node_payload" kindref="compound">uSeqNodePayload</ref></type>
        <definition>using vt::seq::SeqNode::SeqNodePayloadUnion =  uSeqNodePayload</definition>
        <argsstring></argsstring>
        <name>SeqNodePayloadUnion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="72" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_node_1a1a934ba4a7da31ed1fa9c7789b8448ac" prot="public" static="no">
        <type><ref refid="namespacevt_1_1seq_1a313357c71bba2bea5c57f50d69f1edf7" kindref="member">SeqNodeOrderEnumType</ref></type>
        <definition>using vt::seq::SeqNode::OrderEnum =  SeqNodeOrderEnumType</definition>
        <argsstring></argsstring>
        <name>OrderEnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="73" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_node_1ac24353353c002acd8c5d6aa533533216" prot="public" static="no">
        <type><ref refid="namespacevt_1_1seq_1ae721d4e8b95cf57a7e4169db1929e0f1" kindref="member">SeqNodeEnumType</ref></type>
        <definition>using vt::seq::SeqNode::TypeEnum =  SeqNodeEnumType</definition>
        <argsstring></argsstring>
        <name>TypeEnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="74" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1seq_1_1_seq_node_1aff21f386bb9bce2ce5c940edffcdb0a0" prot="public" static="no">
        <type>std::list&lt; <ref refid="namespacevt_1_1seq_1a322533ee3b8e3443e6808410aea39797" kindref="member">SeqExpandedClosureType</ref> &gt;</type>
        <definition>using vt::seq::SeqNode::ExpandedClosureContainerType =  std::list&lt;SeqExpandedClosureType&gt;</definition>
        <argsstring></argsstring>
        <name>ExpandedClosureContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="75" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1seq_1_1_seq_node_1a16ba1129f59e1c69fc16a92a7aa5531f" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1seq_1_1_seq_node_1aff21f386bb9bce2ce5c940edffcdb0a0" kindref="member">ExpandedClosureContainerType</ref></type>
        <definition>ExpandedClosureContainerType vt::seq::SeqNode::sequenced_closures_</definition>
        <argsstring></argsstring>
        <name>sequenced_closures_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="133" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1seq_1_1_seq_node_1abf5e0ac7e65fd53a1f5fd9f6803d5b20" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::seq::SeqNode::ready_</definition>
        <argsstring></argsstring>
        <name>ready_</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="135" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1seq_1_1_seq_node_1a92c37e08aca5bd90a86870ddf6049cd1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::seq::SeqNode::blocked_on_node_</definition>
        <argsstring></argsstring>
        <name>blocked_on_node_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="136" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1seq_1_1_seq_node_1aef15e9c8f113f8d0b512ef12cf502aa8" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1seq_1_1_seq_node_1a4550535aff445a28557a1edb9508a6bc" kindref="member">SeqNodePayloadUnion</ref></type>
        <definition>SeqNodePayloadUnion vt::seq::SeqNode::payload_</definition>
        <argsstring></argsstring>
        <name>payload_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="138" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1seq_1_1_seq_node_1a2c388dbd439d8cbe8b3b6461bf4e674a" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1seq_1a313357c71bba2bea5c57f50d69f1edf7" kindref="member">OrderEnum</ref></type>
        <definition>OrderEnum vt::seq::SeqNode::order_type_</definition>
        <argsstring></argsstring>
        <name>order_type_</name>
        <initializer>= <ref refid="namespacevt_1_1seq_1a313357c71bba2bea5c57f50d69f1edf7abad0e5f1d99f90302a70e1ae24269bb9" kindref="member">OrderEnum::InvalidOrder</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="140" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1seq_1_1_seq_node_1a77b3c29f4ae9e973359fb1629b8aca24" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1seq_1ae721d4e8b95cf57a7e4169db1929e0f1" kindref="member">TypeEnum</ref></type>
        <definition>TypeEnum vt::seq::SeqNode::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <initializer>= <ref refid="namespacevt_1_1seq_1ae721d4e8b95cf57a7e4169db1929e0f1a8d430d6250b6f558562aace5b6a5a8de" kindref="member">TypeEnum::InvalidNode</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="142" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1seq_1_1_seq_node_1a1c633c25e1596b4d5f83db7727b36e47" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref></type>
        <definition>SeqType vt::seq::SeqNode::seq_id_</definition>
        <argsstring></argsstring>
        <name>seq_id_</name>
        <initializer>= no_seq</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="144" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1seq_1_1_seq_node_1a675271da829824dd3331950092ce84d0" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1seq_1ae6a4874b585be0612aaca32ca6d2d191" kindref="member">SeqNodePtrType</ref></type>
        <definition>SeqNodePtrType vt::seq::SeqNode::parent_node_</definition>
        <argsstring></argsstring>
        <name>parent_node_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="146" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1seq_1_1_seq_node_1a168421e6d8e2171227445dc5e7740d01" prot="private" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1seq_1ae6a4874b585be0612aaca32ca6d2d191" kindref="member">SeqNodePtrType</ref></type>
        <definition>SeqNodePtrType vt::seq::SeqNode::next_node_</definition>
        <argsstring></argsstring>
        <name>next_node_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="147" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a5db1688ed515cf55ae71c58259560bc3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1seq_1ae6a4874b585be0612aaca32ca6d2d191" kindref="member">SeqNodePtrType</ref></type>
        <definition>SeqNodePtrType vt::seq::SeqNode::makeNode</definition>
        <argsstring>(SeqType const &amp;id, SeqNodePtrType parent, Args &amp;&amp;... args)</argsstring>
        <name>makeNode</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1ae6a4874b585be0612aaca32ca6d2d191" kindref="member">SeqNodePtrType</ref></type>
          <declname>parent</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="78" column="1" bodyfile="src/vt/sequence/seq_node.impl.h" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1aa7b64d1e28e2516f7041d0f682ea6d5a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacevt_1_1seq_1ae6a4874b585be0612aaca32ca6d2d191" kindref="member">SeqNodePtrType</ref></type>
        <definition>SeqNodePtrType vt::seq::SeqNode::makeParallelNode</definition>
        <argsstring>(SeqType const &amp;id, Args &amp;&amp;... args)</argsstring>
        <name>makeParallelNode</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="83" column="1" bodyfile="src/vt/sequence/seq_node.impl.h" bodystart="69" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a6f750e19fb10c44756874ec41c1de31b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacevt_1_1seq_1ae6a4874b585be0612aaca32ca6d2d191" kindref="member">SeqNodePtrType</ref></type>
        <definition>SeqNodePtrType vt::seq::SeqNode::makeParallelNode</definition>
        <argsstring>(SeqType const &amp;id, SeqFuncContainerType const &amp;funcs)</argsstring>
        <name>makeParallelNode</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3d4575155fb9c0aeeb30b089adfdd04d" kindref="member">SeqFuncContainerType</ref> const &amp;</type>
          <declname>funcs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="85" column="1" bodyfile="src/vt/sequence/seq_node.impl.h" bodystart="77" bodyend="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1acd2c0bf2255d6ebbcc5bc586e333a999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>FnT</declname>
            <defname>FnT</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vt::seq::SeqNode::SeqNode</definition>
        <argsstring>(SeqType const &amp;id, SeqNodeLeafTag, FnT &amp;&amp;... fns)</argsstring>
        <name>SeqNode</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>SeqNodeLeafTag</type>
        </param>
        <param>
          <type>FnT &amp;&amp;...</type>
          <declname>fns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="90" column="1" bodyfile="src/vt/sequence/seq_node.impl.h" bodystart="86" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a14943f6562b46ab0ad62eee36ec9a48f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::seq::SeqNode::SeqNode</definition>
        <argsstring>(SeqNodeParentTag, SeqType const &amp;id)</argsstring>
        <name>SeqNode</name>
        <param>
          <type>SeqNodeParentTag</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="91" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="54" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1abdfe423f4bd7ea2880247d446ce47224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::seq::SeqNode::SeqNode</definition>
        <argsstring>(SeqNodeLeafTag, SeqType const &amp;id)</argsstring>
        <name>SeqNode</name>
        <param>
          <type>SeqNodeLeafTag</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="92" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="69" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a619b5b49dc2dce8497582bd7ce695b64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::seq::SeqNode::SeqNode</definition>
        <argsstring>(SeqNodeParallelTag, SeqType const &amp;id, SeqParallelPtrType par)</argsstring>
        <name>SeqNode</name>
        <param>
          <type>SeqNodeParallelTag</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a050106112a0717f8e482465957fb2bfe" kindref="member">SeqParallelPtrType</ref></type>
          <declname>par</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="93" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="84" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1abeae2f846c0f061bdb30b0f36b1ed6af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::seq::SeqNode::SeqNode</definition>
        <argsstring>(SeqType const &amp;id, SeqNodePtrType parent, SeqExpandFunType const &amp;fn)</argsstring>
        <name>SeqNode</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1ae6a4874b585be0612aaca32ca6d2d191" kindref="member">SeqNodePtrType</ref></type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1ab345c700c06d135cafba39f711767ad5" kindref="member">SeqExpandFunType</ref> const &amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="94" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="98" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a5e385a8ece70d313f3c20ba6505fff2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::seq::SeqNode::SeqNode</definition>
        <argsstring>(SeqNodeUniversalTag, SeqType const &amp;id, OrderEnum const &amp;order, TypeEnum const &amp;type)</argsstring>
        <name>SeqNode</name>
        <param>
          <type>SeqNodeUniversalTag</type>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a313357c71bba2bea5c57f50d69f1edf7" kindref="member">OrderEnum</ref> const &amp;</type>
          <declname>order</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1seq_1ae721d4e8b95cf57a7e4169db1929e0f1" kindref="member">TypeEnum</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="97" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a6254d7b3d17294368a42153ac4164df1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>vt::seq::SeqNode::~SeqNode</definition>
        <argsstring>()</argsstring>
        <name>~SeqNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="102" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="113" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a1f7e5e4c59882bf4fb3b3ad5b9a2b71e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvt_1_1seq_1_1_seq_node_1af2b8ae88c3519f2a6142915ddc974c9d" kindref="member">SizeType</ref></type>
        <definition>SeqNode::SizeType vt::seq::SeqNode::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="104" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="135" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a9ae8d493bc9466e50ed56c40ce627f38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::SeqNode::setBlockedOnNode</definition>
        <argsstring>(eSeqConstructType cons, bool const &amp;is_blocked)</argsstring>
        <name>setBlockedOnNode</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a3041a01a5db2bccb3183e73b49e78252" kindref="member">eSeqConstructType</ref></type>
          <declname>cons</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_blocked</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="106" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="151" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a0480bcf54d90650d5678388bcb33bcb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::seq::SeqNode::executeClosuresUntilBlocked</definition>
        <argsstring>()</argsstring>
        <name>executeClosuresUntilBlocked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="107" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="244" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1af4fbe1402c630a691643b04bc1651ba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::SeqNode::activate</definition>
        <argsstring>()</argsstring>
        <name>activate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="108" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="300" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a579a9f1958bdd51915abc25f61fa1e5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1seq_1ad7b0496818667d816e00f717491d3b92" kindref="member">SeqNodeStateEnumType</ref></type>
        <definition>SeqNodeStateEnumType vt::seq::SeqNode::expandLeafNode</definition>
        <argsstring>()</argsstring>
        <name>expandLeafNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="110" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="164" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1ac4cc38f1b735fbb58a0e610391f77c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1seq_1ad7b0496818667d816e00f717491d3b92" kindref="member">SeqNodeStateEnumType</ref></type>
        <definition>SeqNodeStateEnumType vt::seq::SeqNode::expandParentNode</definition>
        <argsstring>()</argsstring>
        <name>expandParentNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="111" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="212" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a73acc7cce4561dff26b900f8785add5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1seq_1ad7b0496818667d816e00f717491d3b92" kindref="member">SeqNodeStateEnumType</ref></type>
        <definition>SeqNodeStateEnumType vt::seq::SeqNode::expandNext</definition>
        <argsstring>()</argsstring>
        <name>expandNext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="112" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="379" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a7554b8cdfe9a983d937554979505b76e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::SeqNode::addSequencedChild</definition>
        <argsstring>(SeqNodePtrType ptr)</argsstring>
        <name>addSequencedChild</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1ae6a4874b585be0612aaca32ca6d2d191" kindref="member">SeqNodePtrType</ref></type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="114" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="402" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1aa1d4558f9d457a5368c0ea651efc806e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::SeqNode::addSequencedFunction</definition>
        <argsstring>(SeqExpandFunType fun)</argsstring>
        <name>addSequencedFunction</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1ab345c700c06d135cafba39f711767ad5" kindref="member">SeqExpandFunType</ref></type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="115" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="422" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a374eeb2288505547195a5a4d97ba5dbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::SeqNode::addSequencedClosure</definition>
        <argsstring>(SeqLeafClosureType cl, bool const &amp;is_leaf=true)</argsstring>
        <name>addSequencedClosure</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1a13c76fb1c62795dfd2d359b2dde35e8a" kindref="member">SeqLeafClosureType</ref></type>
          <declname>cl</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>is_leaf</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="116" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="480" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a94c5bef1a9886372f4109d39ee66e8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::SeqNode::addSequencedParallelClosure</definition>
        <argsstring>(SeqNodePtrType par_node)</argsstring>
        <name>addSequencedParallelClosure</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1ae6a4874b585be0612aaca32ca6d2d191" kindref="member">SeqNodePtrType</ref></type>
          <declname>par_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="117" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="468" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1adfe191e3f7ff499909c222cd4dbc3525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::SeqNode::addParallelFunction</definition>
        <argsstring>(SeqExpandFunType fun)</argsstring>
        <name>addParallelFunction</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1ab345c700c06d135cafba39f711767ad5" kindref="member">SeqExpandFunType</ref></type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="118" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="435" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a1e13cfd0886c5b377cf6b02d584096e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::SeqNode::executeIfReady</definition>
        <argsstring>()</argsstring>
        <name>executeIfReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="120" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="506" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a94e0c20ef534afed7180b16d8af9a268" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::seq::SeqNode::isReady</definition>
        <argsstring>() const</argsstring>
        <name>isReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="121" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="448" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1af12dafb9242411bc072f3889aa7afaae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::SeqNode::setReady</definition>
        <argsstring>(bool const &amp;ready)</argsstring>
        <name>setReady</name>
        <param>
          <type>bool const &amp;</type>
          <declname>ready</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="122" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="452" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1ae475f4a6a842766eb22bdd3204b35719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::SeqNode::setParent</definition>
        <argsstring>(SeqNodePtrType node)</argsstring>
        <name>setParent</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1ae6a4874b585be0612aaca32ca6d2d191" kindref="member">SeqNodePtrType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="124" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="456" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1afd77c05a6301d91d1ac3dab9c84d2561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::seq::SeqNode::setNext</definition>
        <argsstring>(SeqNodePtrType node)</argsstring>
        <name>setNext</name>
        <param>
          <type><ref refid="namespacevt_1_1seq_1ae6a4874b585be0612aaca32ca6d2d191" kindref="member">SeqNodePtrType</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="125" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="460" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a18b16cf28c574103927ee3ba86ed25a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::seq::SeqNode::isBlockedNode</definition>
        <argsstring>() const</argsstring>
        <name>isBlockedNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="127" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="464" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1a1bd6d41892c8291b6222465c72c33eba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1seq_1a3b612da217ac669d39c159f134ab8434" kindref="member">SeqType</ref></type>
        <definition>SeqType vt::seq::SeqNode::getSeqID</definition>
        <argsstring>() const</argsstring>
        <name>getSeqID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="128" column="1" bodyfile="src/vt/sequence/seq_node.cc" bodystart="521" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1seq_1_1_seq_node_1ac1b29546daefe9e5983e42a1acf5b961" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::seq::SeqNode::isParallel</definition>
        <argsstring>() const</argsstring>
        <name>isParallel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/sequence/seq_node.h" line="130" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="130" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2549">
        <label>vt::seq::SeqNode</label>
        <link refid="structvt_1_1seq_1_1_seq_node"/>
        <childnode refid="2550" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2550">
        <label>std::enable_shared_from_this&lt; SeqNode &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2551">
        <label>vt::seq::SeqNode</label>
        <link refid="structvt_1_1seq_1_1_seq_node"/>
        <childnode refid="2552" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2552">
        <label>std::enable_shared_from_this&lt; SeqNode &gt;</label>
      </node>
    </collaborationgraph>
    <location file="src/vt/sequence/seq_node.h" line="70" column="1" bodyfile="src/vt/sequence/seq_node.h" bodystart="70" bodyend="148"/>
    <listofallmembers>
      <member refid="structvt_1_1seq_1_1_seq_node_1af4fbe1402c630a691643b04bc1651ba1" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>activate</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1adfe191e3f7ff499909c222cd4dbc3525" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>addParallelFunction</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a7554b8cdfe9a983d937554979505b76e" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>addSequencedChild</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a374eeb2288505547195a5a4d97ba5dbf" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>addSequencedClosure</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1aa1d4558f9d457a5368c0ea651efc806e" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>addSequencedFunction</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a94c5bef1a9886372f4109d39ee66e8bc" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>addSequencedParallelClosure</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a92c37e08aca5bd90a86870ddf6049cd1" prot="private" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>blocked_on_node_</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a0480bcf54d90650d5678388bcb33bcb7" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>executeClosuresUntilBlocked</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a1e13cfd0886c5b377cf6b02d584096e5" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>executeIfReady</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1aff21f386bb9bce2ce5c940edffcdb0a0" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>ExpandedClosureContainerType</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a579a9f1958bdd51915abc25f61fa1e5f" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>expandLeafNode</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a73acc7cce4561dff26b900f8785add5f" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>expandNext</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1ac4cc38f1b735fbb58a0e610391f77c35" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>expandParentNode</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a1bd6d41892c8291b6222465c72c33eba" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>getSeqID</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a1f7e5e4c59882bf4fb3b3ad5b9a2b71e" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>getSize</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a18b16cf28c574103927ee3ba86ed25a4" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>isBlockedNode</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1ac1b29546daefe9e5983e42a1acf5b961" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>isParallel</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a94e0c20ef534afed7180b16d8af9a268" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>isReady</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a5db1688ed515cf55ae71c58259560bc3" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>makeNode</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1aa7b64d1e28e2516f7041d0f682ea6d5a" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>makeParallelNode</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a6f750e19fb10c44756874ec41c1de31b" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>makeParallelNode</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a168421e6d8e2171227445dc5e7740d01" prot="private" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>next_node_</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a2c388dbd439d8cbe8b3b6461bf4e674a" prot="private" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>order_type_</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a1a934ba4a7da31ed1fa9c7789b8448ac" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>OrderEnum</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a675271da829824dd3331950092ce84d0" prot="private" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>parent_node_</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1aef15e9c8f113f8d0b512ef12cf502aa8" prot="private" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>payload_</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1abf5e0ac7e65fd53a1f5fd9f6803d5b20" prot="private" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>ready_</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a1c633c25e1596b4d5f83db7727b36e47" prot="private" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>seq_id_</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1acd2c0bf2255d6ebbcc5bc586e333a999" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>SeqNode</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a14943f6562b46ab0ad62eee36ec9a48f" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>SeqNode</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1abdfe423f4bd7ea2880247d446ce47224" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>SeqNode</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a619b5b49dc2dce8497582bd7ce695b64" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>SeqNode</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1abeae2f846c0f061bdb30b0f36b1ed6af" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>SeqNode</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a5e385a8ece70d313f3c20ba6505fff2b" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>SeqNode</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a4550535aff445a28557a1edb9508a6bc" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>SeqNodePayloadUnion</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a16ba1129f59e1c69fc16a92a7aa5531f" prot="private" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>sequenced_closures_</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a9ae8d493bc9466e50ed56c40ce627f38" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>setBlockedOnNode</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1afd77c05a6301d91d1ac3dab9c84d2561" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>setNext</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1ae475f4a6a842766eb22bdd3204b35719" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>setParent</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1af12dafb9242411bc072f3889aa7afaae" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>setReady</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1af2b8ae88c3519f2a6142915ddc974c9d" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>SizeType</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a77b3c29f4ae9e973359fb1629b8aca24" prot="private" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>type_</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1ac24353353c002acd8c5d6aa533533216" prot="public" virt="non-virtual"><scope>vt::seq::SeqNode</scope><name>TypeEnum</name></member>
      <member refid="structvt_1_1seq_1_1_seq_node_1a6254d7b3d17294368a42153ac4164df1" prot="public" virt="virtual"><scope>vt::seq::SeqNode</scope><name>~SeqNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
