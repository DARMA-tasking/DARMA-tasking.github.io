<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1pipe_1_1interface_1_1_callback_vrt_types" kind="struct" language="C++" prot="public">
    <compoundname>vt::pipe::interface::CallbackVrtTypes</compoundname>
    <includes refid="callback__types_8h" local="no">callback_types.h</includes>
    <templateparamlist>
      <param>
        <type>typename C</type>
      </param>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1interface_1_1_callback_vrt_types_1a75738e0b98cb5c051a0649dcc1dfea05" prot="public" static="no">
        <type><ref refid="structvt_1_1pipe_1_1interface_1_1_callback_direct" kindref="compound">CallbackDirect</ref>&lt; T, <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_proxy_bcast" kindref="compound">callback::CallbackProxyBcast</ref>&lt; C, T &gt; &gt;</type>
        <definition>using vt::pipe::interface::CallbackVrtTypes&lt; C, T &gt;::CallbackProxyBcast =  CallbackDirect&lt;T,callback::CallbackProxyBcast&lt;C,T&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>CallbackProxyBcast</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/callback_types.h" line="73" column="1" bodyfile="src/vt/pipe/interface/callback_types.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1pipe_1_1interface_1_1_callback_vrt_types_1abde4eb815f6fb701e5ffe86350cb67ee" prot="public" static="no">
        <type><ref refid="structvt_1_1pipe_1_1interface_1_1_callback_direct" kindref="compound">CallbackDirect</ref>&lt; T, <ref refid="structvt_1_1pipe_1_1callback_1_1_callback_proxy_send" kindref="compound">callback::CallbackProxySend</ref>&lt; C, T &gt; &gt;</type>
        <definition>using vt::pipe::interface::CallbackVrtTypes&lt; C, T &gt;::CallbackProxySend =  CallbackDirect&lt;T,callback::CallbackProxySend&lt;C,T&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>CallbackProxySend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/pipe/interface/callback_types.h" line="74" column="1" bodyfile="src/vt/pipe/interface/callback_types.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/pipe/interface/callback_types.h" line="72" column="1" bodyfile="src/vt/pipe/interface/callback_types.h" bodystart="72" bodyend="75"/>
    <listofallmembers>
      <member refid="structvt_1_1pipe_1_1interface_1_1_callback_vrt_types_1a75738e0b98cb5c051a0649dcc1dfea05" prot="public" virt="non-virtual"><scope>vt::pipe::interface::CallbackVrtTypes</scope><name>CallbackProxyBcast</name></member>
      <member refid="structvt_1_1pipe_1_1interface_1_1_callback_vrt_types_1abde4eb815f6fb701e5ffe86350cb67ee" prot="public" virt="non-virtual"><scope>vt::pipe::interface::CallbackVrtTypes</scope><name>CallbackProxySend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
