<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1config_1_1_check_enabled" kind="struct" language="C++" prot="public">
    <compoundname>vt::config::CheckEnabled</compoundname>
    <includes refid="debug__print_8h" local="no">debug_print.h</includes>
    <templateparamlist>
      <param>
        <type>template&lt; <ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689" kindref="member">CatEnum</ref>, <ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0" kindref="member">CtxEnum</ref>, <ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0" kindref="member">ModeEnum</ref> &gt; class</type>
        <declname>Op</declname>
        <defname>Op</defname>
      </param>
      <param>
        <type>typename C</type>
      </param>
      <param>
        <type><ref refid="namespacevt_1_1config_1a6bd1d6215bda0d8ca02811798399f689" kindref="member">CatEnum</ref></type>
        <declname>cat</declname>
        <defname>cat</defname>
      </param>
      <param>
        <type><ref refid="namespacevt_1_1config_1a46e57c33bee1b9f1fa95455af86d80e0" kindref="member">CtxEnum</ref></type>
        <declname>ctx</declname>
        <defname>ctx</defname>
      </param>
      <param>
        <type><ref refid="namespacevt_1_1config_1a724e99568632cc0fe9c456c2230270d0" kindref="member">ModeEnum</ref></type>
        <declname>mod</declname>
        <defname>mod</defname>
      </param>
      <param>
        <type>typename Enable</type>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1config_1_1_check_enabled_1a27257cc74520a9500c0b23bcf07b9e85" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void vt::config::CheckEnabled&lt; Op, C, cat, ctx, mod, Enable &gt;::apply</definition>
        <argsstring>(bool const, Args &amp;&amp;... args)</argsstring>
        <name>apply</name>
        <param>
          <type>bool</type>
          <declname>const</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/configs/debug/debug_print.h" line="366" column="1" bodyfile="src/vt/configs/debug/debug_print.h" bodystart="366" bodyend="368"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/configs/debug/debug_print.h" line="364" column="1" bodyfile="src/vt/configs/debug/debug_print.h" bodystart="364" bodyend="369"/>
    <listofallmembers>
      <member refid="structvt_1_1config_1_1_check_enabled_1a27257cc74520a9500c0b23bcf07b9e85" prot="public" virt="non-virtual"><scope>vt::config::CheckEnabled</scope><name>apply</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
