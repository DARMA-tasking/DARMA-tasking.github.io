<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry" kind="struct" language="C++" prot="private">
    <compoundname>vt::utils::file_spec::FileSpec::SpecEntry</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1a752a75d8811ade915c7cbc9d0771c13a" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1a3817fca09dbe932e0f6ba5729f1965ba" kindref="member">SpecIndex</ref></type>
        <definition>SpecIndex vt::utils::file_spec::FileSpec::SpecEntry::idx_</definition>
        <argsstring></argsstring>
        <name>idx_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Index for spec entry (mod or phase) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/file_spec/spec.h" line="167" column="15" bodyfile="src/vt/utils/file_spec/spec.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1a23da7a0e8133ec0145b5de803c6b5237" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1a3817fca09dbe932e0f6ba5729f1965ba" kindref="member">SpecIndex</ref></type>
        <definition>SpecIndex vt::utils::file_spec::FileSpec::SpecEntry::neg_</definition>
        <argsstring></argsstring>
        <name>neg_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Negative offset for spec entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/file_spec/spec.h" line="168" column="15" bodyfile="src/vt/utils/file_spec/spec.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1af8f716fd38fc23b6adb04b113199814e" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1a3817fca09dbe932e0f6ba5729f1965ba" kindref="member">SpecIndex</ref></type>
        <definition>SpecIndex vt::utils::file_spec::FileSpec::SpecEntry::pos_</definition>
        <argsstring></argsstring>
        <name>pos_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Positive offset for spec entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/file_spec/spec.h" line="169" column="15" bodyfile="src/vt/utils/file_spec/spec.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1adf5b821e5a0d2aed8e6e0c8bed44dcbc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::utils::file_spec::FileSpec::SpecEntry::is_mod_</definition>
        <argsstring></argsstring>
        <name>is_mod_</name>
        <initializer>=  false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether this entry is a mod-entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/file_spec/spec.h" line="170" column="10" bodyfile="src/vt/utils/file_spec/spec.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1a397a1ede199e831a0a532171c912936c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::utils::file_spec::FileSpec::SpecEntry::SpecEntry</definition>
        <argsstring>()=default</argsstring>
        <name>SpecEntry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/file_spec/spec.h" line="123" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1a4413c3e9ba86a4a1077d48a9fee7f0cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::utils::file_spec::FileSpec::SpecEntry::SpecEntry</definition>
        <argsstring>(SpecIndex in_idx, SpecIndex in_neg, SpecIndex in_pos, bool in_mod)</argsstring>
        <name>SpecEntry</name>
        <param>
          <type><ref refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1a3817fca09dbe932e0f6ba5729f1965ba" kindref="member">SpecIndex</ref></type>
          <declname>in_idx</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1a3817fca09dbe932e0f6ba5729f1965ba" kindref="member">SpecIndex</ref></type>
          <declname>in_neg</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1a3817fca09dbe932e0f6ba5729f1965ba" kindref="member">SpecIndex</ref></type>
          <declname>in_pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/file_spec/spec.h" line="124" column="5" bodyfile="src/vt/utils/file_spec/spec.h" bodystart="124" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1a4402ebf9148659e8d11d9b1885cfff9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1a3817fca09dbe932e0f6ba5729f1965ba" kindref="member">SpecIndex</ref></type>
        <definition>SpecIndex vt::utils::file_spec::FileSpec::SpecEntry::getIdx</definition>
        <argsstring>() const</argsstring>
        <name>getIdx</name>
        <briefdescription>
<para>Get the spec index for this entry. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the spec index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/file_spec/spec.h" line="136" column="15" bodyfile="src/vt/utils/file_spec/spec.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1ac78d47ddf2329363f238a874856bd9f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::utils::file_spec::FileSpec::SpecEntry::testEnabledFor</definition>
        <argsstring>(SpecIndex in_idx) const</argsstring>
        <name>testEnabledFor</name>
        <param>
          <type><ref refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1a3817fca09dbe932e0f6ba5729f1965ba" kindref="member">SpecIndex</ref></type>
          <declname>in_idx</declname>
        </param>
        <briefdescription>
<para>Check if a given phase is enabled within this spec entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>the index to check</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether tracing is enabled based on this entry </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/file_spec/spec.h" line="145" column="10" bodyfile="src/vt/utils/file_spec/spec.h" bodystart="145" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1a15f1a633aded145bed62a5a7d69ca658" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::utils::file_spec::FileSpec::SpecEntry::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Serializer for <computeroutput><ref refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry" kindref="compound">SpecEntry</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>serializer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/utils/file_spec/spec.h" line="162" column="10" bodyfile="src/vt/utils/file_spec/spec.h" bodystart="162" bodyend="164"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds a single entry in a trace spec file; checks if a given phase is enabled within that spec. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/utils/file_spec/spec.h" line="122" column="18" bodyfile="src/vt/utils/file_spec/spec.h" bodystart="122" bodyend="171"/>
    <listofallmembers>
      <member refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1a4402ebf9148659e8d11d9b1885cfff9d" prot="public" virt="non-virtual"><scope>vt::utils::file_spec::FileSpec::SpecEntry</scope><name>getIdx</name></member>
      <member refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1a752a75d8811ade915c7cbc9d0771c13a" prot="private" virt="non-virtual"><scope>vt::utils::file_spec::FileSpec::SpecEntry</scope><name>idx_</name></member>
      <member refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1adf5b821e5a0d2aed8e6e0c8bed44dcbc" prot="private" virt="non-virtual"><scope>vt::utils::file_spec::FileSpec::SpecEntry</scope><name>is_mod_</name></member>
      <member refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1a23da7a0e8133ec0145b5de803c6b5237" prot="private" virt="non-virtual"><scope>vt::utils::file_spec::FileSpec::SpecEntry</scope><name>neg_</name></member>
      <member refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1af8f716fd38fc23b6adb04b113199814e" prot="private" virt="non-virtual"><scope>vt::utils::file_spec::FileSpec::SpecEntry</scope><name>pos_</name></member>
      <member refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1a15f1a633aded145bed62a5a7d69ca658" prot="public" virt="non-virtual"><scope>vt::utils::file_spec::FileSpec::SpecEntry</scope><name>serialize</name></member>
      <member refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1a397a1ede199e831a0a532171c912936c" prot="public" virt="non-virtual"><scope>vt::utils::file_spec::FileSpec::SpecEntry</scope><name>SpecEntry</name></member>
      <member refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1a4413c3e9ba86a4a1077d48a9fee7f0cd" prot="public" virt="non-virtual"><scope>vt::utils::file_spec::FileSpec::SpecEntry</scope><name>SpecEntry</name></member>
      <member refid="structvt_1_1utils_1_1file__spec_1_1_file_spec_1_1_spec_entry_1ac78d47ddf2329363f238a874856bd9f9" prot="public" virt="non-virtual"><scope>vt::utils::file_spec::FileSpec::SpecEntry</scope><name>testEnabledFor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
