<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1event_1_1_event_i_d_manager" kind="struct" language="C++" prot="public">
    <compoundname>vt::event::EventIDManager</compoundname>
    <includes refid="event__id_8h" local="no">event_id.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1event_1_1_event_i_d_manager_1a24c0cbdfa3e28c477d3f7010c6cba7e2" prot="public" static="no">
        <type><ref refid="namespacevt_1_1event_1ad563011dc9e3e01042df27d00092aceb" kindref="member">eEventIDBits</ref></type>
        <definition>using vt::event::EventIDManager::EventIDBitsType =  eEventIDBits</definition>
        <argsstring></argsstring>
        <name>EventIDBitsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_id.h" line="63" column="1" bodyfile="src/vt/event/event_id.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1event_1_1_event_i_d_manager_1abbd9a6951ee83b42bd24a8399952b721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::event::EventIDManager::EventIDManager</definition>
        <argsstring>()=default</argsstring>
        <name>EventIDManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_id.h" line="65" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvt_1_1event_1_1_event_i_d_manager_1a69ba81a6d7adbe78d961057dd9d4a457" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a009267401def7ae8bf201892222d060f" kindref="member">EventType</ref></type>
        <definition>EventType vt::event::EventIDManager::makeEvent</definition>
        <argsstring>(EventIdentifierType const &amp;id, NodeType const &amp;node)</argsstring>
        <name>makeEvent</name>
        <param>
          <type><ref refid="namespacevt_1_1event_1a0893245b7a220f3fe6951382e3038afa" kindref="member">EventIdentifierType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_id.h" line="67" column="1" bodyfile="src/vt/event/event_id.cc" bodystart="50" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_i_d_manager_1a2a422a19489d8410263a39fd2c035732" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref></type>
        <definition>NodeType vt::event::EventIDManager::getEventNode</definition>
        <argsstring>(EventType const &amp;event)</argsstring>
        <name>getEventNode</name>
        <param>
          <type><ref refid="namespacevt_1a009267401def7ae8bf201892222d060f" kindref="member">EventType</ref> const &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_id.h" line="68" column="1" bodyfile="src/vt/event/event_id.cc" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_i_d_manager_1a6da7fb1cb3861a3855bb5d7aeca0caff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::event::EventIDManager::setEventNode</definition>
        <argsstring>(EventType &amp;event, NodeType const &amp;node)</argsstring>
        <name>setEventNode</name>
        <param>
          <type><ref refid="namespacevt_1a009267401def7ae8bf201892222d060f" kindref="member">EventType</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1a866da9d0efc19c0a1ce79e9e492f47e2" kindref="member">NodeType</ref> const &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_id.h" line="69" column="1" bodyfile="src/vt/event/event_id.cc" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_i_d_manager_1a773f302a16c0b192a3dd13454033f4db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::event::EventIDManager::setEventIdentifier</definition>
        <argsstring>(EventType &amp;event, EventIdentifierType const &amp;id)</argsstring>
        <name>setEventIdentifier</name>
        <param>
          <type><ref refid="namespacevt_1a009267401def7ae8bf201892222d060f" kindref="member">EventType</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1_1event_1a0893245b7a220f3fe6951382e3038afa" kindref="member">EventIdentifierType</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_id.h" line="70" column="1" bodyfile="src/vt/event/event_id.cc" bodystart="77" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1event_1_1_event_i_d_manager_1aef4daeddf6cf14ab9745bba44f820789" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacevt_1_1event_1a0893245b7a220f3fe6951382e3038afa" kindref="member">EventIdentifierType</ref></type>
        <definition>EventIdentifierType vt::event::EventIDManager::getEventIdentifier</definition>
        <argsstring>(EventType const &amp;event)</argsstring>
        <name>getEventIdentifier</name>
        <param>
          <type><ref refid="namespacevt_1a009267401def7ae8bf201892222d060f" kindref="member">EventType</ref> const &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/event/event_id.h" line="71" column="1" bodyfile="src/vt/event/event_id.cc" bodystart="85" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/event/event_id.h" line="62" column="1" bodyfile="src/vt/event/event_id.h" bodystart="62" bodyend="73"/>
    <listofallmembers>
      <member refid="structvt_1_1event_1_1_event_i_d_manager_1a24c0cbdfa3e28c477d3f7010c6cba7e2" prot="public" virt="non-virtual"><scope>vt::event::EventIDManager</scope><name>EventIDBitsType</name></member>
      <member refid="structvt_1_1event_1_1_event_i_d_manager_1abbd9a6951ee83b42bd24a8399952b721" prot="public" virt="non-virtual"><scope>vt::event::EventIDManager</scope><name>EventIDManager</name></member>
      <member refid="structvt_1_1event_1_1_event_i_d_manager_1aef4daeddf6cf14ab9745bba44f820789" prot="public" virt="non-virtual"><scope>vt::event::EventIDManager</scope><name>getEventIdentifier</name></member>
      <member refid="structvt_1_1event_1_1_event_i_d_manager_1a2a422a19489d8410263a39fd2c035732" prot="public" virt="non-virtual"><scope>vt::event::EventIDManager</scope><name>getEventNode</name></member>
      <member refid="structvt_1_1event_1_1_event_i_d_manager_1a69ba81a6d7adbe78d961057dd9d4a457" prot="public" virt="non-virtual"><scope>vt::event::EventIDManager</scope><name>makeEvent</name></member>
      <member refid="structvt_1_1event_1_1_event_i_d_manager_1a773f302a16c0b192a3dd13454033f4db" prot="public" virt="non-virtual"><scope>vt::event::EventIDManager</scope><name>setEventIdentifier</name></member>
      <member refid="structvt_1_1event_1_1_event_i_d_manager_1a6da7fb1cb3861a3855bb5d7aeca0caff" prot="public" virt="non-virtual"><scope>vt::event::EventIDManager</scope><name>setEventNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
