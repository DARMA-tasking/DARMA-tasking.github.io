<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1_collection_holder" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::CollectionHolder</compoundname>
    <basecompoundref refid="structvt_1_1vrt_1_1collection_1_1_base_holder" prot="public" virt="non-virtual">vt::vrt::collection::BaseHolder</basecompoundref>
    <includes refid="col__holder_8h" local="no">col_holder.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>IndexT</declname>
        <defname>IndexT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a6e82cbf6cf04497082fb47e79e5dd936" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::vrt::collection::CollectionHolder&lt; IndexT &gt;::map_fn</definition>
        <argsstring></argsstring>
        <name>map_fn</name>
        <initializer>= uninitialized_handler</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The map function </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="90" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a1a67e8f72b7ba6c8ef83577228b9cf32" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::CollectionHolder&lt; IndexT &gt;::has_dynamic_membership_</definition>
        <argsstring></argsstring>
        <name>has_dynamic_membership_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether has dynamic membership </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="91" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a8f2585c00115e40a4d3617e7c03129a4" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref></type>
        <definition>ObjGroupProxyType vt::vrt::collection::CollectionHolder&lt; IndexT &gt;::map_object</definition>
        <argsstring></argsstring>
        <name>map_object</name>
        <initializer>= no_obj_group</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The map object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="92" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a49ce5f97af60bb36af69d35a4364f2a9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::CollectionHolder&lt; IndexT &gt;::has_bounds</definition>
        <argsstring></argsstring>
        <name>has_bounds</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether it as bounds </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="93" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1abc736d9b5626b8207433d3c9d0383f6a" prot="public" static="no" mutable="no">
        <type>IndexT</type>
        <definition>IndexT vt::vrt::collection::CollectionHolder&lt; IndexT &gt;::bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The bounds </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="94" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a9b59adb37c13335d7cc3c99b4fb1b725" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_holder" kindref="compound">Holder</ref>&lt; IndexT &gt;</type>
        <definition>Holder&lt;IndexT&gt; vt::vrt::collection::CollectionHolder&lt; IndexT &gt;::holder_</definition>
        <argsstring></argsstring>
        <name>holder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inner holder of elements </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="95" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a4e431e6846e0043c02c74161f8fcd1cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::CollectionHolder&lt; IndexT &gt;::CollectionHolder</definition>
        <argsstring>(HandlerType const in_map_fn, bool const in_has_dynamic_membership, ObjGroupProxyType in_map_object, bool const in_has_bounds, IndexT const in_bounds)</argsstring>
        <name>CollectionHolder</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const</type>
          <declname>in_map_fn</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>in_has_dynamic_membership</declname>
        </param>
        <param>
          <type><ref refid="namespacevt_1ad7cae989df485fccca57f0792a880a8e" kindref="member">ObjGroupProxyType</ref></type>
          <declname>in_map_object</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>in_has_bounds</declname>
        </param>
        <param>
          <type>IndexT const</type>
          <declname>in_bounds</declname>
        </param>
        <briefdescription>
<para>Construct a collection holder for meta-data. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_map_fn</parametername>
</parameternamelist>
<parameterdescription>
<para>the map function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_has_dynamic_membership</parametername>
</parameternamelist>
<parameterdescription>
<para>collection has dynamic membership? </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_map_object</parametername>
</parameternamelist>
<parameterdescription>
<para>the map object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_has_bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it has bounds </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>the bounds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="76" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.impl.h" bodystart="53" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a01b3cf95992bb56c40fa926611b41288" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual vt::vrt::collection::CollectionHolder&lt; IndexT &gt;::~CollectionHolder</definition>
        <argsstring>()</argsstring>
        <name>~CollectionHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="82" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a00a325a6c9c321d00b6b6eb0fdfbfb9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionHolder&lt; IndexT &gt;::destroy</definition>
        <argsstring>() override</argsstring>
        <name>destroy</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1_base_holder_1a56c8289f60121e38f3699bcfafbbd491">destroy</reimplements>
        <briefdescription>
<para>Destroy the collection. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="88" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.impl.h" bodystart="65" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds meta-data for the entire collection. </para>    </briefdescription>
    <detaileddescription>
<para>Manages the meta-data for a collection including the registered map function, index range, and holder for the actual elements mapped to this node. Provides the virtual overloaded function for running LB and destroying the collection from a type-erased base class. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="878">
        <label>vt::vrt::collection::BaseHolder</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_base_holder"/>
      </node>
      <node id="877">
        <label>vt::vrt::collection::CollectionHolder&lt; IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_holder"/>
        <childnode refid="878" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="880">
        <label>vt::vrt::collection::BaseHolder</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_base_holder"/>
      </node>
      <node id="879">
        <label>vt::vrt::collection::CollectionHolder&lt; IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_holder"/>
        <childnode refid="880" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/holders/col_holder.h" line="64" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="64" bodyend="96"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1_base_holder_1a748c42f9fcddba89eae7d55424080e4e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>BaseHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1abc736d9b5626b8207433d3c9d0383f6a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>bounds</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a4e431e6846e0043c02c74161f8fcd1cf" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>CollectionHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a00a325a6c9c321d00b6b6eb0fdfbfb9f" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>destroy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a49ce5f97af60bb36af69d35a4364f2a9" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>has_bounds</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a1a67e8f72b7ba6c8ef83577228b9cf32" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>has_dynamic_membership_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a9b59adb37c13335d7cc3c99b4fb1b725" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>holder_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a6e82cbf6cf04497082fb47e79e5dd936" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>map_fn</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a8f2585c00115e40a4d3617e7c03129a4" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>map_object</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a01b3cf95992bb56c40fa926611b41288" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>~CollectionHolder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
