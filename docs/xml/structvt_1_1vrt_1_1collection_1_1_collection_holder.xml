<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1vrt_1_1collection_1_1_collection_holder" kind="struct" language="C++" prot="public">
    <compoundname>vt::vrt::collection::CollectionHolder</compoundname>
    <basecompoundref refid="structvt_1_1vrt_1_1collection_1_1_base_holder" prot="public" virt="non-virtual">vt::vrt::collection::BaseHolder</basecompoundref>
    <includes refid="col__holder_8h" local="no">col_holder.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>ColT</declname>
        <defname>ColT</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>IndexT</declname>
        <defname>IndexT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1ab8d1f8570cd85775b2c8317255827dae" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::vrt::collection::CollectionHolder&lt; ColT, IndexT &gt;::is_static_</definition>
        <argsstring></argsstring>
        <name>is_static_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether is static sized </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="93" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a1bacbcdc0af1d6a69abf890304c78233" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref></type>
        <definition>HandlerType vt::vrt::collection::CollectionHolder&lt; ColT, IndexT &gt;::map_fn</definition>
        <argsstring></argsstring>
        <name>map_fn</name>
        <initializer>= uninitialized_handler</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The map function </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="94" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a1d6e15b6f578ae048c11c2c367651f00" prot="public" static="no" mutable="no">
        <type>IndexT</type>
        <definition>IndexT vt::vrt::collection::CollectionHolder&lt; ColT, IndexT &gt;::max_idx</definition>
        <argsstring></argsstring>
        <name>max_idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Index range for collection </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="95" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1ae553cc92f33cac4493cafd32b4350743" prot="public" static="no" mutable="no">
        <type><ref refid="structvt_1_1vrt_1_1collection_1_1_holder" kindref="compound">Holder</ref>&lt; ColT, IndexT &gt;</type>
        <definition>Holder&lt;ColT,IndexT&gt; vt::vrt::collection::CollectionHolder&lt; ColT, IndexT &gt;::holder_</definition>
        <argsstring></argsstring>
        <name>holder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inner holder of elements </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="96" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a75bb95393ac580b3f330da43e295a47a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::vrt::collection::CollectionHolder&lt; ColT, IndexT &gt;::CollectionHolder</definition>
        <argsstring>(HandlerType const &amp;in_map_fn, IndexT const &amp;idx, bool const in_is_static)</argsstring>
        <name>CollectionHolder</name>
        <param>
          <type><ref refid="namespacevt_1af64846b57dfcaf104da3ef6967917573" kindref="member">HandlerType</ref> const &amp;</type>
          <declname>in_map_fn</declname>
        </param>
        <param>
          <type>IndexT const &amp;</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>bool const</type>
          <declname>in_is_static</declname>
        </param>
        <briefdescription>
<para>Construct a collection holder for meta-data. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_map_fn</parametername>
</parameternamelist>
<parameterdescription>
<para>the map function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>the index range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_is_static</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the collection is static </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="75" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.impl.h" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a80360d38dc40e4bf2253288b01595de6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual vt::vrt::collection::CollectionHolder&lt; ColT, IndexT &gt;::~CollectionHolder</definition>
        <argsstring>()</argsstring>
        <name>~CollectionHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="78" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a744d2a48f9f22db59b2705b3d3f3d1ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionHolder&lt; ColT, IndexT &gt;::destroy</definition>
        <argsstring>() override</argsstring>
        <name>destroy</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1_base_holder_1a56c8289f60121e38f3699bcfafbbd491">destroy</reimplements>
        <briefdescription>
<para>Destroy the collection. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="84" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.impl.h" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a09a3f3e6ec221f36f3417713e64e8f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vt::vrt::collection::CollectionHolder&lt; ColT, IndexT &gt;::runLB</definition>
        <argsstring>(PhaseType phase) override</argsstring>
        <name>runLB</name>
        <reimplements refid="structvt_1_1vrt_1_1collection_1_1_base_holder_1ab9f7a730ced86b24d75b3f33ea3db3e8">runLB</reimplements>
        <param>
          <type><ref refid="namespacevt_1a46ce6733d5cdbd735d561b7b4029f6d7" kindref="member">PhaseType</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Run LB continuations on all collection elements. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/vrt/collection/holders/col_holder.h" line="91" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.impl.h" bodystart="65" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds meta-data for the entire collection. </para>    </briefdescription>
    <detaileddescription>
<para>Manages the meta-data for a collection including the registered map function, index range, and holder for the actual elements mapped to this node. Provides the virtual overloaded function for running LB and destroying the collection from a type-erased base class. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="779">
        <label>vt::vrt::collection::BaseHolder</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_base_holder"/>
      </node>
      <node id="778">
        <label>vt::vrt::collection::CollectionHolder&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_holder"/>
        <childnode refid="779" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="781">
        <label>vt::vrt::collection::BaseHolder</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_base_holder"/>
      </node>
      <node id="780">
        <label>vt::vrt::collection::CollectionHolder&lt; ColT, IndexT &gt;</label>
        <link refid="structvt_1_1vrt_1_1collection_1_1_collection_holder"/>
        <childnode refid="781" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/vt/vrt/collection/holders/col_holder.h" line="65" column="1" bodyfile="src/vt/vrt/collection/holders/col_holder.h" bodystart="65" bodyend="97"/>
    <listofallmembers>
      <member refid="structvt_1_1vrt_1_1collection_1_1_base_holder_1a748c42f9fcddba89eae7d55424080e4e" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>BaseHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a75bb95393ac580b3f330da43e295a47a" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>CollectionHolder</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a744d2a48f9f22db59b2705b3d3f3d1ca" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>destroy</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1ae553cc92f33cac4493cafd32b4350743" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>holder_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1ab8d1f8570cd85775b2c8317255827dae" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>is_static_</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a1bacbcdc0af1d6a69abf890304c78233" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>map_fn</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a1d6e15b6f578ae048c11c2c367651f00" prot="public" virt="non-virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>max_idx</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a09a3f3e6ec221f36f3417713e64e8f69" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>runLB</name></member>
      <member refid="structvt_1_1vrt_1_1collection_1_1_collection_holder_1a80360d38dc40e4bf2253288b01595de6" prot="public" virt="virtual"><scope>vt::vrt::collection::CollectionHolder</scope><name>~CollectionHolder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
