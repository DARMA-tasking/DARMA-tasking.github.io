<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structvt_1_1auto__registry_1_1_registrar_functor_3_01_runnable_t_00_01_reg_t_00_01_info_t_00_01_ec57e5bbdf77219785996b8aa3819a29" kind="struct" language="C++" prot="public">
    <compoundname>vt::auto_registry::RegistrarFunctor&lt; RunnableT, RegT, InfoT, FnT, std::enable_if_t&lt; std::is_same&lt; InfoT, AutoRegInfo&lt; AutoActiveType &gt; &gt;::value &gt;&gt;</compoundname>
    <includes refid="auto__registry__functor__impl_8h" local="no">auto_registry_functor_impl.h</includes>
    <templateparamlist>
      <param>
        <type>typename RunnableT</type>
      </param>
      <param>
        <type>typename RegT</type>
      </param>
      <param>
        <type>typename InfoT</type>
      </param>
      <param>
        <type>typename FnT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvt_1_1auto__registry_1_1_registrar_functor_3_01_runnable_t_00_01_reg_t_00_01_info_t_00_01_ec57e5bbdf77219785996b8aa3819a29_1ab57e90a096ad7a4800ab26e5da4249bb" prot="public" static="no" mutable="no">
        <type><ref refid="namespacevt_1_1auto__registry_1ae295e18699146815bb7d7674594d95d7" kindref="member">AutoHandlerType</ref></type>
        <definition>AutoHandlerType vt::auto_registry::value &gt;&gt;&lt; RunnableT, RegT, InfoT, FnT &gt;::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/functor/auto_registry_functor_impl.h" line="77" column="1" bodyfile="src/vt/registry/auto/functor/auto_registry_functor_impl.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1auto__registry_1_1_registrar_functor_3_01_runnable_t_00_01_reg_t_00_01_info_t_00_01_ec57e5bbdf77219785996b8aa3819a29_1acb5b94751607c69f2a8a9eecf1c1706c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::auto_registry::value &gt;&gt;&lt; RunnableT, RegT, InfoT, FnT &gt;::RegistrarFunctor</definition>
        <argsstring>()</argsstring>
        <name>RegistrarFunctor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/vt/registry/auto/functor/auto_registry_functor_impl.h" line="79" column="1" bodyfile="src/vt/registry/auto/functor/auto_registry_functor_impl.h" bodystart="79" bodyend="102"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/vt/registry/auto/functor/auto_registry_functor_impl.h" line="76" column="1" bodyfile="src/vt/registry/auto/functor/auto_registry_functor_impl.h" bodystart="73" bodyend="103"/>
    <listofallmembers>
      <member refid="structvt_1_1auto__registry_1_1_registrar_functor_3_01_runnable_t_00_01_reg_t_00_01_info_t_00_01_ec57e5bbdf77219785996b8aa3819a29_1ab57e90a096ad7a4800ab26e5da4249bb" prot="public" virt="non-virtual"><scope>vt::auto_registry::RegistrarFunctor&lt; RunnableT, RegT, InfoT, FnT, std::enable_if_t&lt; std::is_same&lt; InfoT, AutoRegInfo&lt; AutoActiveType &gt; &gt;::value &gt;&gt;</scope><name>index</name></member>
      <member refid="structvt_1_1auto__registry_1_1_registrar_functor_3_01_runnable_t_00_01_reg_t_00_01_info_t_00_01_ec57e5bbdf77219785996b8aa3819a29_1acb5b94751607c69f2a8a9eecf1c1706c" prot="public" virt="non-virtual"><scope>vt::auto_registry::RegistrarFunctor&lt; RunnableT, RegT, InfoT, FnT, std::enable_if_t&lt; std::is_same&lt; InfoT, AutoRegInfo&lt; AutoActiveType &gt; &gt;::value &gt;&gt;</scope><name>RegistrarFunctor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
