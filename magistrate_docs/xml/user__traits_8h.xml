<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="user__traits_8h" kind="file" language="C++">
    <compoundname>user_traits.h</compoundname>
    <includedby refid="serializer__ref_8h" local="yes">src/checkpoint/serializers/serializer_ref.h</includedby>
    <invincdepgraph>
      <node id="8">
        <label>src/checkpoint/container/list_serialize.h</label>
        <link refid="list__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/checkpoint/serializers/serializer_ref.h</label>
        <link refid="serializer__ref_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/checkpoint/traits/user_traits.h</label>
        <link refid="user__traits_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/checkpoint/container/container_serialize.h</label>
        <link refid="container__serialize_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/checkpoint/checkpoint.h</label>
        <link refid="checkpoint_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>src/checkpoint/dispatch/reconstructor.h</label>
        <link refid="reconstructor_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/checkpoint/container/view_traverse_manual.h</label>
        <link refid="view__traverse__manual_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>src/checkpoint/dispatch/dispatch_virtual.h</label>
        <link refid="dispatch__virtual_8h_source"/>
      </node>
      <node id="25">
        <label>src/checkpoint/dispatch/dispatch_serializer.h</label>
        <link refid="dispatch__serializer_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/checkpoint/container/tuple_serialize.h</label>
        <link refid="tuple__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>src/checkpoint/serializers_all.h</label>
        <link refid="serializers__all_8h_source"/>
      </node>
      <node id="3">
        <label>src/checkpoint/serializers/serializers_headers.h</label>
        <link refid="serializers__headers_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>src/checkpoint/dispatch/dispatch.h</label>
        <link refid="dispatch_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/checkpoint/container/kokkos_unordered_map_serialize.h</label>
        <link refid="kokkos__unordered__map__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/checkpoint/container/kokkos_pair_serialize.h</label>
        <link refid="kokkos__pair__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>src/checkpoint/dispatch/vrt/derived.h</label>
        <link refid="derived_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/checkpoint/container/array_serialize.h</label>
        <link refid="array__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>src/checkpoint/traits/reconstructor_traits.h</label>
        <link refid="reconstructor__traits_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>src/checkpoint/dispatch/dispatch_serializer_nonbyte.h</label>
        <link refid="dispatch__serializer__nonbyte_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>src/checkpoint/traits/serializable_traits.h</label>
        <link refid="serializable__traits_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/checkpoint/container/view_traits_extract.h</label>
        <link refid="view__traits__extract_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/checkpoint/checkpoint_api.impl.h</label>
        <link refid="checkpoint__api_8impl_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>src/checkpoint/container/unique_ptr_serialize.h</label>
        <link refid="unique__ptr__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>src/checkpoint/container/view_traverse_ndim.h</label>
        <link refid="view__traverse__ndim_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>src/checkpoint/dispatch/vrt/base.h</label>
        <link refid="base_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/checkpoint/container/kokkos_array.h</label>
        <link refid="kokkos__array_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/checkpoint/container/variant_serialize.h</label>
        <link refid="variant__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/checkpoint/dispatch/dispatch.impl.h</label>
        <link refid="dispatch_8impl_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/checkpoint/container/map_serialize.h</label>
        <link refid="map__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/checkpoint/container/view_serialize.h</label>
        <link refid="view__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/checkpoint/container/kokkos_complex_serialize.h</label>
        <link refid="kokkos__complex__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/checkpoint/container/vector_serialize.h</label>
        <link refid="vector__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>src/checkpoint/dispatch/dispatch_serializer_byte.h</label>
        <link refid="dispatch__serializer__byte_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>src/checkpoint/dispatch/allocator.h</label>
        <link refid="allocator_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/checkpoint/container/view_equality.h</label>
        <link refid="view__equality_8h_source"/>
      </node>
      <node id="37">
        <label>src/checkpoint/dispatch/vrt/virtual_serialize.h</label>
        <link refid="virtual__serialize_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/checkpoint/container/enum_serialize.h</label>
        <link refid="enum__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>src/checkpoint/dispatch/vrt/object_registry.h</label>
        <link refid="object__registry_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" prot="public">checkpoint::serializerUserTraits::TraitHolder</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1traits__match" prot="public">checkpoint::serializerUserTraits::traits_match</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_merge_traits_impl" prot="public">checkpoint::serializerUserTraits::MergeTraitsImpl</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_merge_traits_impl_3_01_trait_holder_3_01_traits_aae0bd0c2776e2d6a67d449a1394878bd" prot="public">checkpoint::serializerUserTraits::MergeTraitsImpl&lt; TraitHolder&lt; TraitsA... &gt;, TraitHolder&lt; TraitsB... &gt; &gt;</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_first_trait_impl" prot="public">checkpoint::serializerUserTraits::FirstTraitImpl</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_first_trait_impl_3_01_trait_holder_3_01_trait_00_01_traits_8_8_8_01_4_01_4" prot="public">checkpoint::serializerUserTraits::FirstTraitImpl&lt; TraitHolder&lt; Trait, Traits... &gt; &gt;</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_pop_trait_impl" prot="public">checkpoint::serializerUserTraits::PopTraitImpl</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_pop_trait_impl_3_01_trait_holder_3_01_trait_00_01_traits_8_8_8_01_4_01_4" prot="public">checkpoint::serializerUserTraits::PopTraitImpl&lt; TraitHolder&lt; Trait, Traits... &gt; &gt;</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_without_traits_impl" prot="public">checkpoint::serializerUserTraits::WithoutTraitsImpl</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_without_traits_impl_3_01_holder_01_4" prot="public">checkpoint::serializerUserTraits::WithoutTraitsImpl&lt; Holder &gt;</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_without_traits_impl_3_01_trait_holder_3_4_00_01_t_00_01_u_8_8_8_01_4" prot="public">checkpoint::serializerUserTraits::WithoutTraitsImpl&lt; TraitHolder&lt;&gt;, T, U... &gt;</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_without_traits_impl_3_01_holder_00_01_t_00_01_u_8_8_8_01_4" prot="public">checkpoint::serializerUserTraits::WithoutTraitsImpl&lt; Holder, T, U... &gt;</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_nested_trait_holder" prot="public">checkpoint::serializerUserTraits::NestedTraitHolder</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_unwrap_traits_impl" prot="public">checkpoint::serializerUserTraits::UnwrapTraitsImpl</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_unwrap_traits_impl_3_01_trait_holder_3_4_01_4" prot="public">checkpoint::serializerUserTraits::UnwrapTraitsImpl&lt; TraitHolder&lt;&gt; &gt;</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_unwrap_traits_impl_3_01_trait_holder_3_01_trait_00_01_traits_8_8_8_01_4_01_4" prot="public">checkpoint::serializerUserTraits::UnwrapTraitsImpl&lt; TraitHolder&lt; Trait, Traits... &gt; &gt;</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_unwrap_traits_impl_3_01_trait_holder_3_01_nested_61e0a1db48789301353a7e7454a4cec8" prot="public">checkpoint::serializerUserTraits::UnwrapTraitsImpl&lt; TraitHolder&lt; NestedTraitHolder&lt; WrappedTraits &gt;, Traits... &gt; &gt;</innerclass>
    <innerclass refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" prot="public">checkpoint::serializerUserTraits::TraitHolder</innerclass>
    <innernamespace refid="namespacecheckpoint">checkpoint</innernamespace>
    <innernamespace refid="namespacecheckpoint_1_1serializer_user_traits">checkpoint::serializerUserTraits</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="user__traits_8h_1a9ad1bc5e3d339092004dca379d83cf58" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename HolderA</type>
          </param>
          <param>
            <type>typename HolderB</type>
          </param>
        </templateparamlist>
        <type>typename MergeTraitsImpl&lt; HolderA, HolderB &gt;::type</type>
        <definition>using checkpoint::serializerUserTraits::MergeTraits = typedef typename MergeTraitsImpl&lt;HolderA, HolderB&gt;::type</definition>
        <argsstring></argsstring>
        <name>MergeTraits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/user_traits.h" line="65" column="3" bodyfile="src/checkpoint/traits/user_traits.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="user__traits_8h_1ad4f9388d9d2022e98634bf8975d3e693" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Holder</type>
          </param>
        </templateparamlist>
        <type>typename FirstTraitImpl&lt; Holder &gt;::type</type>
        <definition>using checkpoint::serializerUserTraits::FirstTrait = typedef typename FirstTraitImpl&lt;Holder&gt;::type</definition>
        <argsstring></argsstring>
        <name>FirstTrait</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/user_traits.h" line="77" column="3" bodyfile="src/checkpoint/traits/user_traits.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="user__traits_8h_1a1d48c3f78d633e6db00be98876d55a89" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Holder</type>
          </param>
        </templateparamlist>
        <type>typename PopTraitImpl&lt; Holder &gt;::type</type>
        <definition>using checkpoint::serializerUserTraits::PopTrait = typedef typename PopTraitImpl&lt;Holder&gt;::type</definition>
        <argsstring></argsstring>
        <name>PopTrait</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/user_traits.h" line="89" column="3" bodyfile="src/checkpoint/traits/user_traits.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="user__traits_8h_1adb444edefe1962ba291323f1e70cf2be" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Holder</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>typename WithoutTraitsImpl&lt; Holder, T... &gt;::type</type>
        <definition>using checkpoint::serializerUserTraits::WithoutTraits = typedef typename WithoutTraitsImpl&lt;Holder, T...&gt;::type</definition>
        <argsstring></argsstring>
        <name>WithoutTraits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/user_traits.h" line="101" column="3" bodyfile="src/checkpoint/traits/user_traits.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="user__traits_8h_1a749d1c714c231293f83beb02937b2a45" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Holder</type>
          </param>
        </templateparamlist>
        <type>NestedTraitHolder&lt; Holder &gt;</type>
        <definition>using checkpoint::serializerUserTraits::CopyTraits = typedef NestedTraitHolder&lt;Holder&gt;</definition>
        <argsstring></argsstring>
        <name>CopyTraits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/user_traits.h" line="130" column="3" bodyfile="src/checkpoint/traits/user_traits.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="user__traits_8h_1a64d41a2d17f844fadd07215c1eade436" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Holder</type>
          </param>
        </templateparamlist>
        <type>typename UnwrapTraitsImpl&lt; Holder &gt;::type</type>
        <definition>using checkpoint::serializerUserTraits::UnwrapTraits = typedef typename UnwrapTraitsImpl&lt;Holder&gt;::type</definition>
        <argsstring></argsstring>
        <name>UnwrapTraits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/user_traits.h" line="137" column="3" bodyfile="src/checkpoint/traits/user_traits.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="user__traits_8h_1a161f9794d8b7a5ee9b183f2ef8d1f7a4" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Traits</declname>
            <defname>Traits</defname>
          </param>
        </templateparamlist>
        <type>serializerUserTraits::UnwrapTraits&lt; serializerUserTraits::TraitHolder&lt; Traits... &gt; &gt;</type>
        <definition>using checkpoint::UserTraitHolder = typedef serializerUserTraits::UnwrapTraits&lt; serializerUserTraits::TraitHolder&lt;Traits...&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>UserTraitHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/user_traits.h" line="194" column="3" bodyfile="src/checkpoint/traits/user_traits.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="user__traits_8h_1a0123a980cab03ca111c7a513cac9dad4" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool checkpoint::serializerUserTraits::traits_match_v</definition>
        <argsstring></argsstring>
        <name>traits_match_v</name>
        <initializer>= traits_match&lt;U,V&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/user_traits.h" line="58" column="25" bodyfile="src/checkpoint/traits/user_traits.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_traits.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/magistrate<sp/>=&gt;<sp/>Serialization<sp/>Library</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_SRC_CHECKPOINT_TRAITS_USER_TRAITS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_SRC_CHECKPOINT_TRAITS_USER_TRAITS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">checkpoint<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">serializerUserTraits<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Traits&gt;</highlight></codeline>
<codeline lineno="51" refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>two<sp/>traits<sp/>are<sp/>the<sp/>same<sp/>type<sp/>when<sp/>decayed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="56" refid="structcheckpoint_1_1serializer_user_traits_1_1traits__match" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1traits__match" kindref="compound">traits_match</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::is_same&lt;std::decay_t&lt;U&gt;,std::decay_t&lt;V&gt;&gt;{};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>traits_match_v<sp/>=<sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1traits__match" kindref="compound">traits_match&lt;U,V&gt;::value</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Merge<sp/>the<sp/>traits<sp/>of<sp/>two<sp/>TraitHolders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HolderA,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HolderB&gt;</highlight></codeline>
<codeline lineno="63" refid="structcheckpoint_1_1serializer_user_traits_1_1_merge_traits_impl" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_merge_traits_impl" kindref="compound">MergeTraitsImpl</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HolderA,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HolderB&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>MergeTraits<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_merge_traits_impl" kindref="compound">MergeTraitsImpl&lt;HolderA, HolderB&gt;::type</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>TraitsA,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>TraitsB&gt;</highlight></codeline>
<codeline lineno="68" refid="structcheckpoint_1_1serializer_user_traits_1_1_merge_traits_impl_3_01_trait_holder_3_01_traits_aae0bd0c2776e2d6a67d449a1394878bd" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_merge_traits_impl" kindref="compound">MergeTraitsImpl</ref>&lt;<ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;TraitsA...&gt;,<sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;TraitsB...&gt;&gt;{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">type</ref><sp/>=<sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;TraitsA...,<sp/>TraitsB...&gt;;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>type<sp/>of<sp/>the<sp/>first<sp/>trait<sp/>in<sp/>a<sp/>TraitHolder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Holder&gt;</highlight></codeline>
<codeline lineno="75" refid="structcheckpoint_1_1serializer_user_traits_1_1_first_trait_impl" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_first_trait_impl" kindref="compound">FirstTraitImpl</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Holder&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>FirstTrait<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_first_trait_impl" kindref="compound">FirstTraitImpl&lt;Holder&gt;::type</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trait,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Traits&gt;</highlight></codeline>
<codeline lineno="80" refid="structcheckpoint_1_1serializer_user_traits_1_1_first_trait_impl_3_01_trait_holder_3_01_trait_00_01_traits_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_first_trait_impl" kindref="compound">FirstTraitImpl</ref>&lt;<ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;Trait,<sp/>Traits...&gt;&gt;{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>Trait;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Remove<sp/>the<sp/>first<sp/>trait<sp/>from<sp/>a<sp/>TraitHolder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Holder&gt;</highlight></codeline>
<codeline lineno="87" refid="structcheckpoint_1_1serializer_user_traits_1_1_pop_trait_impl" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_pop_trait_impl" kindref="compound">PopTraitImpl</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Holder&gt;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>PopTrait<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_pop_trait_impl" kindref="compound">PopTraitImpl&lt;Holder&gt;::type</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trait,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Traits&gt;</highlight></codeline>
<codeline lineno="92" refid="structcheckpoint_1_1serializer_user_traits_1_1_pop_trait_impl_3_01_trait_holder_3_01_trait_00_01_traits_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_pop_trait_impl" kindref="compound">PopTraitImpl</ref>&lt;<ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;Trait,<sp/>Traits...&gt;&gt;{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">type</ref><sp/>=<sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;Traits...&gt;;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Remove<sp/>types<sp/>T<sp/>from<sp/>a<sp/>TraitHolder.<sp/>Only<sp/>(up<sp/>to)<sp/>one<sp/>trait<sp/>is<sp/>removed<sp/>per<sp/>T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Holder,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="99" refid="structcheckpoint_1_1serializer_user_traits_1_1_without_traits_impl" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_without_traits_impl" kindref="compound">WithoutTraitsImpl</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Holder,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>WithoutTraits<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_without_traits_impl" kindref="compound">WithoutTraitsImpl</ref>&lt;Holder,<sp/>T...&gt;::type;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Holder&gt;</highlight></codeline>
<codeline lineno="104" refid="structcheckpoint_1_1serializer_user_traits_1_1_without_traits_impl_3_01_holder_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_without_traits_impl" kindref="compound">WithoutTraitsImpl</ref>&lt;Holder&gt;<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>Holder;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>U&gt;</highlight></codeline>
<codeline lineno="108" refid="structcheckpoint_1_1serializer_user_traits_1_1_without_traits_impl_3_01_trait_holder_3_4_00_01_t_00_01_u_8_8_8_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_without_traits_impl" kindref="compound">WithoutTraitsImpl</ref>&lt;<ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;&gt;,<sp/>T,<sp/>U...&gt;<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">type</ref><sp/>=<sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder&lt;&gt;</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Holder,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>U&gt;</highlight></codeline>
<codeline lineno="112" refid="structcheckpoint_1_1serializer_user_traits_1_1_without_traits_impl_3_01_holder_00_01_t_00_01_u_8_8_8_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_without_traits_impl" kindref="compound">WithoutTraitsImpl</ref>&lt;Holder,<sp/>T,<sp/>U...&gt;<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CheckTrait<sp/>=<sp/>FirstTrait&lt;Holder&gt;;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Remaining<sp/>=<sp/>PopTrait&lt;Holder&gt;;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>WithoutT<sp/>=<sp/>std::conditional_t&lt;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>traits_match_v&lt;T,<sp/>CheckTrait&gt;,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Remaining,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MergeTraits&lt;TraitHolder&lt;CheckTrait&gt;,<sp/>WithoutTraits&lt;Remaining,<sp/>T&gt;&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>WithoutTraits&lt;WithoutT,<sp/>U...&gt;;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Holds<sp/>traits<sp/>that<sp/>should<sp/>be<sp/>unwrapped<sp/>when<sp/>passed<sp/>into<sp/>a<sp/>TraitHolder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Holder&gt;</highlight></codeline>
<codeline lineno="126" refid="structcheckpoint_1_1serializer_user_traits_1_1_nested_trait_holder" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_nested_trait_holder" kindref="compound">NestedTraitHolder</ref><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Traits<sp/>=<sp/>Holder;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Holder&gt;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_nested_trait_holder" kindref="compound">CopyTraits</ref><sp/>=<sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_nested_trait_holder" kindref="compound">NestedTraitHolder&lt;Holder&gt;</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TraitHolder<sp/>with<sp/>any<sp/>NestedTraitHolders<sp/>unwrapped<sp/>to<sp/>their<sp/>held<sp/>traits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Holder&gt;</highlight></codeline>
<codeline lineno="135" refid="structcheckpoint_1_1serializer_user_traits_1_1_unwrap_traits_impl" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_unwrap_traits_impl" kindref="compound">UnwrapTraitsImpl</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Holder&gt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnwrapTraits<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_unwrap_traits_impl" kindref="compound">UnwrapTraitsImpl&lt;Holder&gt;::type</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="140" refid="structcheckpoint_1_1serializer_user_traits_1_1_unwrap_traits_impl_3_01_trait_holder_3_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_unwrap_traits_impl" kindref="compound">UnwrapTraitsImpl</ref>&lt;<ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;&gt;&gt;{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">type</ref><sp/>=<sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder&lt;&gt;</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trait,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Traits&gt;</highlight></codeline>
<codeline lineno="144" refid="structcheckpoint_1_1serializer_user_traits_1_1_unwrap_traits_impl_3_01_trait_holder_3_01_trait_00_01_traits_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_unwrap_traits_impl" kindref="compound">UnwrapTraitsImpl</ref>&lt;<ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;Trait,<sp/>Traits...&gt;&gt;{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>MergeTraits&lt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder&lt;Trait&gt;</ref>,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UnwrapTraits&lt;<ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;Traits...&gt;&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WrappedTraits,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Traits&gt;</highlight></codeline>
<codeline lineno="151" refid="structcheckpoint_1_1serializer_user_traits_1_1_unwrap_traits_impl_3_01_trait_holder_3_01_nested_61e0a1db48789301353a7e7454a4cec8" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_unwrap_traits_impl" kindref="compound">UnwrapTraitsImpl</ref>&lt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;<ref refid="structcheckpoint_1_1serializer_user_traits_1_1_nested_trait_holder" kindref="compound">NestedTraitHolder</ref>&lt;WrappedTraits&gt;,<sp/>Traits...&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>MergeTraits&lt;WrappedTraits,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UnwrapTraits&lt;<ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;Traits...&gt;&gt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Traits&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_trait<sp/>=<sp/>std::disjunction&lt;traits_match&lt;T,<sp/>Traits&gt;...&gt;;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>With<sp/>=<sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;Traits...,<sp/>T...&gt;;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//To<sp/>respect<sp/>ordering.<sp/>Could<sp/>be<sp/>handy<sp/>in<sp/>the<sp/>future<sp/>--<sp/>disambiguating<sp/>multiple<sp/>hooks?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>WithPre<sp/>=<sp/><ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;T...,<sp/>Traits...&gt;;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Has<sp/>all<sp/>types<sp/>T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has<sp/>=<sp/>std::conjunction&lt;has_trait&lt;T&gt;...&gt;;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Has<sp/>any<sp/>types<sp/>within<sp/>T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_any<sp/>=<sp/>std::disjunction&lt;has_trait&lt;T&gt;...&gt;;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Type<sp/>with<sp/>each<sp/>trait<sp/>T<sp/>removed<sp/>once,<sp/>if<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E.G.<sp/>TraitHolder&lt;TraitOne,<sp/>TraitOne,<sp/>TraitTwo,<sp/>TraitThree&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Without&lt;TraitOne,<sp/>TraitTwo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>TraitHolder&lt;TraitOne,<sp/>TraitThree&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Without<sp/>=<sp/>WithoutTraits&lt;<ref refid="structcheckpoint_1_1serializer_user_traits_1_1_trait_holder" kindref="compound">TraitHolder</ref>&lt;Traits...&gt;,<sp/>T...&gt;;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}<sp/></highlight><highlight class="comment">//namespace<sp/>serializerUserTraits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Traits&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UserTraitHolder<sp/>=<sp/>serializerUserTraits::UnwrapTraits&lt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>serializerUserTraits::TraitHolder&lt;Traits...&gt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>&gt;;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}<sp/></highlight><highlight class="comment">//namespace<sp/>checkpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_SRC_CHECKPOINT_TRAITS_USER_TRAITS_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/checkpoint/traits/user_traits.h"/>
  </compounddef>
</doxygen>
