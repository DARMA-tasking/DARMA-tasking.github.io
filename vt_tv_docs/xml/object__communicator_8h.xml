<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="object__communicator_8h" kind="file" language="C++">
    <compoundname>object_communicator.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includes local="no">list</includes>
    <includes local="no">map</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">vector</includes>
    <includes local="no">utility</includes>
    <includes refid="types_8h" local="yes">vt-tv/api/types.h</includes>
    <includes local="no">fmt-vt/format.h</includes>
    <includedby refid="object__work_8h" local="yes">/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h</includedby>
    <incdepgraph>
      <node id="4">
        <label>list</label>
      </node>
      <node id="1">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h</label>
        <link refid="object__communicator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cstdint</label>
      </node>
      <node id="11">
        <label>variant</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="6">
        <label>unordered_set</label>
      </node>
      <node id="12">
        <label>fmt-vt/format.h</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="8">
        <label>utility</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>vt-tv/api/types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h</label>
        <link refid="object__communicator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/rank.h</label>
        <link refid="rank_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h</label>
        <link refid="info_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h</label>
        <link refid="render_8h_source"/>
      </node>
      <node id="7">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_generator.h</label>
        <link refid="json__generator_8h_source"/>
      </node>
      <node id="2">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h</label>
        <link refid="object__work_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h</label>
        <link refid="phase__work_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h</label>
        <link refid="json__reader_8h_source"/>
      </node>
      <node id="9">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/parse_render.h</label>
        <link refid="parse__render_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structvt_1_1tv_1_1_object_communicator" prot="public">vt::tv::ObjectCommunicator</innerclass>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1tv">vt::tv</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_communicator.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt-tv<sp/>=&gt;<sp/>Virtual<sp/>Transport<sp/>--<sp/>Task<sp/>Visualizer</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2024<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_VT_TV_API_OBJECT_COMMUNICATOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_VT_TV_API_OBJECT_COMMUNICATOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vt-tv/api/types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fmt-vt/format.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vt::tv<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Object;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="structvt_1_1tv_1_1_object_communicator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1tv_1_1_object_communicator" kindref="compound">ObjectCommunicator</ref><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1tv_1_1_object_communicator" kindref="compound">ObjectCommunicator</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structvt_1_1tv_1_1_object_communicator_1a8f8fe8ea7ecf8e084de7caf7efd1e4e0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a8f8fe8ea7ecf8e084de7caf7efd1e4e0" kindref="member">ObjectCommunicator</ref>(ElementIDType<sp/>id_in)<sp/>:<sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a3ec415e02f40c61a4d10e73886c911ee" kindref="member">object_id_</ref>(id_in)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structvt_1_1tv_1_1_object_communicator_1adcae8d3445e30c65fb3b919b724dbf86" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1adcae8d3445e30c65fb3b919b724dbf86" kindref="member">ObjectCommunicator</ref>(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>ElementIDType<sp/>id_in,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>std::multimap&lt;ElementIDType,<sp/>double&gt;<sp/>recv_in,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>std::multimap&lt;ElementIDType,<sp/>double&gt;<sp/>sent_in)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a3ec415e02f40c61a4d10e73886c911ee" kindref="member">object_id_</ref>(id_in),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a392d21e93f842c50fa4e910eaf929434" kindref="member">received_</ref>(recv_in),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a4bde0b44436b2d5facc6c565bd99439f" kindref="member">sent_</ref>(sent_in)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="structvt_1_1tv_1_1_object_communicator_1ac3ae7a076eb83825e422a5e72e42a351" refkind="member"><highlight class="normal"><sp/><sp/>ElementIDType<sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1ac3ae7a076eb83825e422a5e72e42a351" kindref="member">getObjectId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a3ec415e02f40c61a4d10e73886c911ee" kindref="member">object_id_</ref>;<sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structvt_1_1tv_1_1_object_communicator_1a09520ed35b251720de38a36d4608d4d4" refkind="member"><highlight class="normal"><sp/><sp/>std::multimap&lt;ElementIDType,<sp/>double&gt;<sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a09520ed35b251720de38a36d4608d4d4" kindref="member">getReceived</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a392d21e93f842c50fa4e910eaf929434" kindref="member">received_</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="structvt_1_1tv_1_1_object_communicator_1a462e701ee0d510ad1cef84800d1a0cd1" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a462e701ee0d510ad1cef84800d1a0cd1" kindref="member">getReceivedFromObject</ref>(ElementIDType<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>range<sp/>=<sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a392d21e93f842c50fa4e910eaf929434" kindref="member">received_</ref>.equal_range(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>results;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>range.first;<sp/>it<sp/>!=<sp/>range.second;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>results.push_back(it-&gt;second);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="structvt_1_1tv_1_1_object_communicator_1a490f488b60c558e4949ac57327889b48" refkind="member"><highlight class="normal"><sp/><sp/>std::multimap&lt;ElementIDType,<sp/>double&gt;<sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a490f488b60c558e4949ac57327889b48" kindref="member">getSent</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a4bde0b44436b2d5facc6c565bd99439f" kindref="member">sent_</ref>;<sp/>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="structvt_1_1tv_1_1_object_communicator_1af6e9a63df306b31595ac22e754237b7c" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1af6e9a63df306b31595ac22e754237b7c" kindref="member">getSentToObject</ref>(ElementIDType<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>range<sp/>=<sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a4bde0b44436b2d5facc6c565bd99439f" kindref="member">sent_</ref>.equal_range(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>results;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>range.first;<sp/>it<sp/>!=<sp/>range.second;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>results.push_back(it-&gt;second);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="structvt_1_1tv_1_1_object_communicator_1ac66f9514df0c0b7b843914ff3fd7c33b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1ac66f9514df0c0b7b843914ff3fd7c33b" kindref="member">addReceived</ref>(ElementIDType<sp/>from_id,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bytes)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a392d21e93f842c50fa4e910eaf929434" kindref="member">received_</ref>.insert(std::make_pair(from_id,<sp/>bytes));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_id<sp/>==<sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a3ec415e02f40c61a4d10e73886c911ee" kindref="member">object_id_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::print(</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>{}<sp/>receiving<sp/>communication<sp/>from<sp/>myself\n&quot;</highlight><highlight class="normal">,<sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a3ec415e02f40c61a4d10e73886c911ee" kindref="member">object_id_</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="structvt_1_1tv_1_1_object_communicator_1a10d9a6680da5d1fd7175323d1302498b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a10d9a6680da5d1fd7175323d1302498b" kindref="member">addSent</ref>(ElementIDType<sp/>to_id,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bytes)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a4bde0b44436b2d5facc6c565bd99439f" kindref="member">sent_</ref>.insert(std::make_pair(to_id,<sp/>bytes));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_id<sp/>==<sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a3ec415e02f40c61a4d10e73886c911ee" kindref="member">object_id_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::print(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>{}<sp/>sending<sp/>communication<sp/>to<sp/>myself\n&quot;</highlight><highlight class="normal">,<sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a3ec415e02f40c61a4d10e73886c911ee" kindref="member">object_id_</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="structvt_1_1tv_1_1_object_communicator_1a86603d55d100b3b1c47df88b03ce171d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a86603d55d100b3b1c47df88b03ce171d" kindref="member">getMaxVolume</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>the<sp/>maximum<sp/>value<sp/>in<sp/>received<sp/>and<sp/>sent<sp/>(0.<sp/>if<sp/>sets<sp/>are<sp/>empty)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_recv<sp/>=<sp/>!this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a392d21e93f842c50fa4e910eaf929434" kindref="member">received_</ref>.empty()<sp/>?</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::max_element(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a392d21e93f842c50fa4e910eaf929434" kindref="member">received_</ref>.begin(),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;received_.end(),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>b)<sp/>{<sp/>return<sp/>a.second<sp/>&lt;<sp/>b.second;<sp/>})</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;second<sp/>:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_sent<sp/>=<sp/>!this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a4bde0b44436b2d5facc6c565bd99439f" kindref="member">sent_</ref>.empty()<sp/>?</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::max_element(</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a4bde0b44436b2d5facc6c565bd99439f" kindref="member">sent_</ref>.begin(),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sent_.end(),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>b)<sp/>{<sp/>return<sp/>a.second<sp/>&lt;<sp/>b.second;<sp/>})</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;second<sp/>:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::max(max_recv,<sp/>max_sent);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="structvt_1_1tv_1_1_object_communicator_1ae1883356a541a4f8c5430416702b3917" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1ae1883356a541a4f8c5430416702b3917" kindref="member">getTotalReceivedVolume</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[key,<sp/>value]<sp/>:<sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a392d21e93f842c50fa4e910eaf929434" kindref="member">received_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>value;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="structvt_1_1tv_1_1_object_communicator_1a896befffdcf0677258d6ca938999deec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a896befffdcf0677258d6ca938999deec" kindref="member">getTotalSentVolume</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[key,<sp/>value]<sp/>:<sp/>this-&gt;<ref refid="structvt_1_1tv_1_1_object_communicator_1a4bde0b44436b2d5facc6c565bd99439f" kindref="member">sent_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>value;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SerializerT&gt;</highlight></codeline>
<codeline lineno="223" refid="structvt_1_1tv_1_1_object_communicator_1a5be8b946ff2ee18ce9b1a0fc25efee6c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a5be8b946ff2ee18ce9b1a0fc25efee6c" kindref="member">serialize</ref>(SerializerT&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>|<sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a3ec415e02f40c61a4d10e73886c911ee" kindref="member">object_id_</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>|<sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a392d21e93f842c50fa4e910eaf929434" kindref="member">received_</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>|<sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a4bde0b44436b2d5facc6c565bd99439f" kindref="member">sent_</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="230" refid="structvt_1_1tv_1_1_object_communicator_1a3ec415e02f40c61a4d10e73886c911ee" refkind="member"><highlight class="normal"><sp/><sp/>ElementIDType<sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a3ec415e02f40c61a4d10e73886c911ee" kindref="member">object_id_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231" refid="structvt_1_1tv_1_1_object_communicator_1a392d21e93f842c50fa4e910eaf929434" refkind="member"><highlight class="normal"><sp/><sp/>std::multimap&lt;ElementIDType,<sp/>double&gt;<sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a392d21e93f842c50fa4e910eaf929434" kindref="member">received_</ref>;<sp/></highlight></codeline>
<codeline lineno="232" refid="structvt_1_1tv_1_1_object_communicator_1a4bde0b44436b2d5facc6c565bd99439f" refkind="member"><highlight class="normal"><sp/><sp/>std::multimap&lt;ElementIDType,<sp/>double&gt;<sp/><ref refid="structvt_1_1tv_1_1_object_communicator_1a4bde0b44436b2d5facc6c565bd99439f" kindref="member">sent_</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal">};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::tv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_VT_TV_API_OBJECT_COMMUNICATOR_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h"/>
  </compounddef>
</doxygen>
