<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader" kind="struct" language="C++" prot="public">
    <compoundname>vt::tv::utility::JSONReader</compoundname>
    <includes refid="json__reader_8h" local="no">json_reader.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1a091617fdb79d21fc7e5eff6cd4b71f35" prot="private" static="no" mutable="no">
        <type>NodeType</type>
        <definition>NodeType vt::tv::utility::JSONReader::rank_</definition>
        <argsstring></argsstring>
        <name>rank_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h" line="98" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1a93c3ad0f49dd762c528c8abbcd521905" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; nlohmann::json &gt;</type>
        <definition>std::unique_ptr&lt;nlohmann::json&gt; vt::tv::utility::JSONReader::json_</definition>
        <argsstring></argsstring>
        <name>json_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h" line="99" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1a5e452eed9f059a016b572b07795c645b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::tv::utility::JSONReader::JSONReader</definition>
        <argsstring>(NodeType in_rank)</argsstring>
        <name>JSONReader</name>
        <param>
          <type>NodeType</type>
          <declname>in_rank</declname>
        </param>
        <briefdescription>
<para>Construct the reader. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h" line="66" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1aa448c270d694d9ba5f0e4cca0a57c964" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::tv::utility::JSONReader::isCompressed</definition>
        <argsstring>(std::string const &amp;in_filename) const</argsstring>
        <name>isCompressed</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in_filename</declname>
        </param>
        <briefdescription>
<para>Check if the file is compressed or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the file name to check</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the file is compressed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h" line="75" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.cc" bodystart="58" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1ae6d1ac6332f4c5b2551f9ea274e3ba0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::utility::JSONReader::readFile</definition>
        <argsstring>(std::string const &amp;in_filename)</argsstring>
        <name>readFile</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in_filename</declname>
        </param>
        <briefdescription>
<para>Read a given JSON file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the file name to read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h" line="82" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.cc" bodystart="86" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1acc0086b9d7b741ee3c07e0e7fcafe006" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::utility::JSONReader::readString</definition>
        <argsstring>(std::string const &amp;in_json_string)</argsstring>
        <name>readString</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in_json_string</declname>
        </param>
        <briefdescription>
<para>Read a given serialized json string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_json_string</parametername>
</parameternamelist>
<parameterdescription>
<para>the serialized json string to read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h" line="89" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.cc" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1ad6df9d13c839185894a40532b27ebd1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="structvt_1_1tv_1_1_info" kindref="compound">Info</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Info &gt; vt::tv::utility::JSONReader::parse</definition>
        <argsstring>()</argsstring>
        <name>parse</name>
        <briefdescription>
<para>Parse the json into vt-tv&apos;s data structure <ref refid="structvt_1_1tv_1_1_info" kindref="compound">Info</ref>, with a single rank filled out. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h" line="95" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.cc" bodystart="108" bodyend="281"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Reader for JSON in the LBDataType format. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h" line="62" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h" bodystart="62" bodyend="100"/>
    <listofallmembers>
      <member refid="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1aa448c270d694d9ba5f0e4cca0a57c964" prot="public" virt="non-virtual"><scope>vt::tv::utility::JSONReader</scope><name>isCompressed</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1a93c3ad0f49dd762c528c8abbcd521905" prot="private" virt="non-virtual"><scope>vt::tv::utility::JSONReader</scope><name>json_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1a5e452eed9f059a016b572b07795c645b" prot="public" virt="non-virtual"><scope>vt::tv::utility::JSONReader</scope><name>JSONReader</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1ad6df9d13c839185894a40532b27ebd1e" prot="public" virt="non-virtual"><scope>vt::tv::utility::JSONReader</scope><name>parse</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1a091617fdb79d21fc7e5eff6cd4b71f35" prot="private" virt="non-virtual"><scope>vt::tv::utility::JSONReader</scope><name>rank_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1ae6d1ac6332f4c5b2551f9ea274e3ba0f" prot="public" virt="non-virtual"><scope>vt::tv::utility::JSONReader</scope><name>readFile</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_j_s_o_n_reader_1acc0086b9d7b741ee3c07e0e7fcafe006" prot="public" virt="non-virtual"><scope>vt::tv::utility::JSONReader</scope><name>readString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
