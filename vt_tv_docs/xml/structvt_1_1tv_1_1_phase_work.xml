<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1tv_1_1_phase_work" kind="struct" language="C++" prot="public">
    <compoundname>vt::tv::PhaseWork</compoundname>
    <includes refid="phase__work_8h" local="no">phase_work.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1tv_1_1_phase_work_1ad3fac6376e18d124a32f6f7afc0d0795" prot="private" static="no" mutable="no">
        <type>PhaseType</type>
        <definition>PhaseType vt::tv::PhaseWork::phase_</definition>
        <argsstring></argsstring>
        <name>phase_</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Phase identifier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" line="157" column="13" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_phase_work_1a008bcc59a9b85ffc76758504b45992e8" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; ElementIDType, <ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDType, ObjectWork&gt; vt::tv::PhaseWork::objects_</definition>
        <argsstring></argsstring>
        <name>objects_</name>
        <briefdescription>
<para>Object work for this phase. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" line="159" column="22" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1_phase_work_1ac29e474789bc39209ed52306a8fcf9c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::tv::PhaseWork::PhaseWork</definition>
        <argsstring>()=default</argsstring>
        <name>PhaseWork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" line="60" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_phase_work_1aa5781a9d2c2a02d5ea7fc1794e5d15d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::tv::PhaseWork::PhaseWork</definition>
        <argsstring>(PhaseType in_phase, std::unordered_map&lt; ElementIDType, ObjectWork &gt; in_objects)</argsstring>
        <name>PhaseWork</name>
        <param>
          <type>PhaseType</type>
          <declname>in_phase</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; ElementIDType, <ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref> &gt;</type>
          <declname>in_objects</declname>
        </param>
        <briefdescription>
<para>Construct phase work. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_objects</parametername>
</parameternamelist>
<parameterdescription>
<para>objects&apos; work for the phase </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" line="68" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" bodystart="68" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_phase_work_1a3e554e5af26c9d6755b848b7c2590456" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PhaseType</type>
        <definition>PhaseType vt::tv::PhaseWork::getPhase</definition>
        <argsstring>() const</argsstring>
        <name>getPhase</name>
        <briefdescription>
<para>Get the phase ID. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the phase ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" line="79" column="13" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_phase_work_1a58da57dafe9ee0f01899fd634b3a02a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; vt::tv::PhaseWork::getObjectWork</definition>
        <argsstring>() const</argsstring>
        <name>getObjectWork</name>
        <briefdescription>
<para>Get object work. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the object work </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" line="86" column="14" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_phase_work_1a098a62d2478f40202d4d35a4eb6e0f15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::PhaseWork::getLoad</definition>
        <argsstring>() const</argsstring>
        <name>getLoad</name>
        <briefdescription>
<para>Get the phase load (corresponds to rank load as a <ref refid="structvt_1_1tv_1_1_phase_work" kindref="compound">PhaseWork</ref> belongs to a <ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref>) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the phase load </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" line="93" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" bodystart="93" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_phase_work_1af5e2e8ffaa39e419544edc0f69b73878" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::PhaseWork::setCommunications</definition>
        <argsstring>(ElementIDType o_id, ObjectCommunicator &amp;c)</argsstring>
        <name>setCommunications</name>
        <param>
          <type>ElementIDType</type>
          <declname>o_id</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_object_communicator" kindref="compound">ObjectCommunicator</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>set communications for an object in this phase </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" line="106" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_phase_work_1af2c3fbff4a361aba11a842bc771d12ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::PhaseWork::addObjectReceivedCommunication</definition>
        <argsstring>(ElementIDType o_id, ElementIDType from_id, double bytes)</argsstring>
        <name>addObjectReceivedCommunication</name>
        <param>
          <type>ElementIDType</type>
          <declname>o_id</declname>
        </param>
        <param>
          <type>ElementIDType</type>
          <declname>from_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>add a received communication to an object in this phase </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" line="115" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_phase_work_1ae789bc0ddd5b15c0e4361fe778074f15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::PhaseWork::addObjectSentCommunication</definition>
        <argsstring>(ElementIDType o_id, ElementIDType to_id, double bytes)</argsstring>
        <name>addObjectSentCommunication</name>
        <param>
          <type>ElementIDType</type>
          <declname>o_id</declname>
        </param>
        <param>
          <type>ElementIDType</type>
          <declname>to_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>add a sent communication to an object in this phase </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" line="125" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_phase_work_1acb69e1a5e1752f2c3711dd23ae392b97" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::PhaseWork::getMaxVolume</definition>
        <argsstring>() const</argsstring>
        <name>getMaxVolume</name>
        <briefdescription>
<para>Get maximum bytes received or sent between objects at this phase. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" line="133" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" bodystart="133" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_phase_work_1aad6378fb30640b0293b57f43596838f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::tv::PhaseWork::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Serializer for data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the serializer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" line="150" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" bodystart="150" bodyend="153"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The work for a given phase. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" line="59" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h" bodystart="59" bodyend="160"/>
    <listofallmembers>
      <member refid="structvt_1_1tv_1_1_phase_work_1af2c3fbff4a361aba11a842bc771d12ca" prot="public" virt="non-virtual"><scope>vt::tv::PhaseWork</scope><name>addObjectReceivedCommunication</name></member>
      <member refid="structvt_1_1tv_1_1_phase_work_1ae789bc0ddd5b15c0e4361fe778074f15" prot="public" virt="non-virtual"><scope>vt::tv::PhaseWork</scope><name>addObjectSentCommunication</name></member>
      <member refid="structvt_1_1tv_1_1_phase_work_1a098a62d2478f40202d4d35a4eb6e0f15" prot="public" virt="non-virtual"><scope>vt::tv::PhaseWork</scope><name>getLoad</name></member>
      <member refid="structvt_1_1tv_1_1_phase_work_1acb69e1a5e1752f2c3711dd23ae392b97" prot="public" virt="non-virtual"><scope>vt::tv::PhaseWork</scope><name>getMaxVolume</name></member>
      <member refid="structvt_1_1tv_1_1_phase_work_1a58da57dafe9ee0f01899fd634b3a02a8" prot="public" virt="non-virtual"><scope>vt::tv::PhaseWork</scope><name>getObjectWork</name></member>
      <member refid="structvt_1_1tv_1_1_phase_work_1a3e554e5af26c9d6755b848b7c2590456" prot="public" virt="non-virtual"><scope>vt::tv::PhaseWork</scope><name>getPhase</name></member>
      <member refid="structvt_1_1tv_1_1_phase_work_1a008bcc59a9b85ffc76758504b45992e8" prot="private" virt="non-virtual"><scope>vt::tv::PhaseWork</scope><name>objects_</name></member>
      <member refid="structvt_1_1tv_1_1_phase_work_1ad3fac6376e18d124a32f6f7afc0d0795" prot="private" virt="non-virtual"><scope>vt::tv::PhaseWork</scope><name>phase_</name></member>
      <member refid="structvt_1_1tv_1_1_phase_work_1ac29e474789bc39209ed52306a8fcf9c3" prot="public" virt="non-virtual"><scope>vt::tv::PhaseWork</scope><name>PhaseWork</name></member>
      <member refid="structvt_1_1tv_1_1_phase_work_1aa5781a9d2c2a02d5ea7fc1794e5d15d3" prot="public" virt="non-virtual"><scope>vt::tv::PhaseWork</scope><name>PhaseWork</name></member>
      <member refid="structvt_1_1tv_1_1_phase_work_1aad6378fb30640b0293b57f43596838f2" prot="public" virt="non-virtual"><scope>vt::tv::PhaseWork</scope><name>serialize</name></member>
      <member refid="structvt_1_1tv_1_1_phase_work_1af5e2e8ffaa39e419544edc0f69b73878" prot="public" virt="non-virtual"><scope>vt::tv::PhaseWork</scope><name>setCommunications</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
