<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1tv_1_1_object_info" kind="struct" language="C++" prot="public">
    <compoundname>vt::tv::ObjectInfo</compoundname>
    <includes refid="object__info_8h" local="no">object_info.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_info_1a32ccf6cd2dc0c3429c7bbe7ed26046ac" prot="private" static="no" mutable="no">
        <type>ElementIDType</type>
        <definition>ElementIDType vt::tv::ObjectInfo::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Unique identifier across all ranks for the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="181" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_info_1ada77c2ff8a4f76b170fb181afab0c9b6" prot="private" static="no" mutable="no">
        <type>NodeType</type>
        <definition>NodeType vt::tv::ObjectInfo::home_</definition>
        <argsstring></argsstring>
        <name>home_</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The rank the element started on. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="183" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_info_1af1e4b2d0157f08055904576e4e74e8c4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::tv::ObjectInfo::migratable_</definition>
        <argsstring></argsstring>
        <name>migratable_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether it is migratable (if not, <computeroutput>home_</computeroutput> == <computeroutput>curr_</computeroutput>) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="185" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_info_1a8734ef1a93994967c355b4cc1a24fe90" prot="private" static="no" mutable="no">
        <type>std::vector&lt; UniqueIndexBitType &gt;</type>
        <definition>std::vector&lt;UniqueIndexBitType&gt; vt::tv::ObjectInfo::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <briefdescription>
<para>Optional: index for the element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="187" column="15" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_info_1aa10b655321d907ad8078ee725595409a" prot="private" static="no" mutable="no">
        <type>CollectionObjGroupIDType</type>
        <definition>CollectionObjGroupIDType vt::tv::ObjectInfo::meta_id_</definition>
        <argsstring></argsstring>
        <name>meta_id_</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Optional: the objgroup or collection ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="189" column="28" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_info_1ae3be5a30d113de51d58d2bff158aad1d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::tv::ObjectInfo::is_objgroup_</definition>
        <argsstring></argsstring>
        <name>is_objgroup_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether it&apos;s an objgroup. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="191" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_info_1ae5b15cc7550079efa9a459c9412893f0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::tv::ObjectInfo::is_collection_</definition>
        <argsstring></argsstring>
        <name>is_collection_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether it&apos;s an collection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="193" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1a5b6648797bdd20347df2b31d195d327c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::tv::ObjectInfo::ObjectInfo</definition>
        <argsstring>()=default</argsstring>
        <name>ObjectInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="60" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1a0c134b894514d03711cbd5f025cfd671" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::tv::ObjectInfo::ObjectInfo</definition>
        <argsstring>(ElementIDType in_id, NodeType in_home, bool in_migratable, std::vector&lt; UniqueIndexBitType &gt; const &amp;in_index)</argsstring>
        <name>ObjectInfo</name>
        <param>
          <type>ElementIDType</type>
          <declname>in_id</declname>
        </param>
        <param>
          <type>NodeType</type>
          <declname>in_home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_migratable</declname>
        </param>
        <param>
          <type>std::vector&lt; UniqueIndexBitType &gt; const &amp;</type>
          <declname>in_index</declname>
        </param>
        <briefdescription>
<para>Construct information about an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the unique global identifier for an object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_home</parametername>
</parameternamelist>
<parameterdescription>
<para>the home rank for the object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_migratable</parametername>
</parameternamelist>
<parameterdescription>
<para>whether it&apos;s migratable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index for the object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="70" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="70" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1adfecca85194ff533f0e36369b4785572" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ElementIDType</type>
        <definition>ElementIDType vt::tv::ObjectInfo::getID</definition>
        <argsstring>() const</argsstring>
        <name>getID</name>
        <briefdescription>
<para>Get the object&apos;s ID. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>object ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="85" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1aa580e2ba8ef4738af423e40d47378e4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeType</type>
        <definition>NodeType vt::tv::ObjectInfo::getHome</definition>
        <argsstring>() const</argsstring>
        <name>getHome</name>
        <briefdescription>
<para>Get the home rank for this object (the rank responsible for it) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the home rank </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="92" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1a3bb1fcbffe65666a89a6d01e83e6faa9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::tv::ObjectInfo::isMigratable</definition>
        <argsstring>() const</argsstring>
        <name>isMigratable</name>
        <briefdescription>
<para>Get whether the object is migratable. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it is migratable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="99" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1a73310ca0a417585fd55603f735abd1d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::tv::ObjectInfo::isSentinel</definition>
        <argsstring>() const</argsstring>
        <name>isSentinel</name>
        <briefdescription>
<para>Get whether the object is sentinel. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it is sentinel </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="106" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1a58ddfc134e6d7b8f104eafc22836470a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; vt::tv::ObjectInfo::getIndexArray</definition>
        <argsstring>() const</argsstring>
        <name>getIndexArray</name>
        <briefdescription>
<para>Get the logical index for the task (if one exists) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>For singleton objects this may be empty.</para>
</simplesect>
<simplesect kind="return"><para>the index array </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="115" column="14" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1aa7009890a9c921cfcd81824b90321843" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::ObjectInfo::setIsCollection</definition>
        <argsstring>(bool is_collection)</argsstring>
        <name>setIsCollection</name>
        <param>
          <type>bool</type>
          <declname>is_collection</declname>
        </param>
        <briefdescription>
<para>Set whether this object is part of a collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_collection</parametername>
</parameternamelist>
<parameterdescription>
<para>if it is part of a collection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="122" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1a0c0720d1a957f866f02ab900a353b5b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::ObjectInfo::setIsObjGroup</definition>
        <argsstring>(bool is_objgroup)</argsstring>
        <name>setIsObjGroup</name>
        <param>
          <type>bool</type>
          <declname>is_objgroup</declname>
        </param>
        <briefdescription>
<para>Set whether this object is part of an object group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">is_objgroup</parametername>
</parameternamelist>
<parameterdescription>
<para>if it is part of an object group </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="129" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1aad99f341b50e313f3db9d7be898f1110" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::tv::ObjectInfo::getIsCollection</definition>
        <argsstring>() const</argsstring>
        <name>getIsCollection</name>
        <briefdescription>
<para>Get whether it&apos;s part of a collection. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it is </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="136" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1a90c81bce99e59c38733e2fc5e9c640e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::tv::ObjectInfo::getIsObjGroup</definition>
        <argsstring>() const</argsstring>
        <name>getIsObjGroup</name>
        <briefdescription>
<para>Get whether it&apos;s part of a object group. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether it is </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="143" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1a4d5af38465cb3eac5a367aa6104facbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::ObjectInfo::setMetaID</definition>
        <argsstring>(CollectionObjGroupIDType in_meta_id)</argsstring>
        <name>setMetaID</name>
        <param>
          <type>CollectionObjGroupIDType</type>
          <declname>in_meta_id</declname>
        </param>
        <briefdescription>
<para>Set the meta ID. Will only be set if it is part of a collection of object group. If it is part of a collection it will be the <computeroutput>VirtualProxyType</computeroutput> bits from VT. If it is part of a object group, it will be the <computeroutput>ObjGroupProxyType</computeroutput> bits from VT. Both of these IDs uniquely represent the collection or object group for a run. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_meta_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the id to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="154" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1a0ce36ec448eb98b90910959f10f43a25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CollectionObjGroupIDType</type>
        <definition>CollectionObjGroupIDType vt::tv::ObjectInfo::getMetaID</definition>
        <argsstring>() const</argsstring>
        <name>getMetaID</name>
        <briefdescription>
<para>Get the meta ID. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the meta ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="161" column="28" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_info_1a58ec1a96937b98931147d51b2d1ec1a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::tv::ObjectInfo::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Serializer for data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the serializer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="169" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="169" bodyend="177"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds basic information about an object that does not change across ranks or phases. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" line="59" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h" bodystart="59" bodyend="194"/>
    <listofallmembers>
      <member refid="structvt_1_1tv_1_1_object_info_1aa580e2ba8ef4738af423e40d47378e4f" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>getHome</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1adfecca85194ff533f0e36369b4785572" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>getID</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1a58ddfc134e6d7b8f104eafc22836470a" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>getIndexArray</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1aad99f341b50e313f3db9d7be898f1110" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>getIsCollection</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1a90c81bce99e59c38733e2fc5e9c640e5" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>getIsObjGroup</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1a0ce36ec448eb98b90910959f10f43a25" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>getMetaID</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1ada77c2ff8a4f76b170fb181afab0c9b6" prot="private" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>home_</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1a32ccf6cd2dc0c3429c7bbe7ed26046ac" prot="private" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>id_</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1a8734ef1a93994967c355b4cc1a24fe90" prot="private" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>index_</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1ae5b15cc7550079efa9a459c9412893f0" prot="private" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>is_collection_</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1ae3be5a30d113de51d58d2bff158aad1d" prot="private" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>is_objgroup_</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1a3bb1fcbffe65666a89a6d01e83e6faa9" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>isMigratable</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1a73310ca0a417585fd55603f735abd1d5" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>isSentinel</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1aa10b655321d907ad8078ee725595409a" prot="private" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>meta_id_</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1af1e4b2d0157f08055904576e4e74e8c4" prot="private" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>migratable_</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1a5b6648797bdd20347df2b31d195d327c" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>ObjectInfo</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1a0c134b894514d03711cbd5f025cfd671" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>ObjectInfo</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1a58ec1a96937b98931147d51b2d1ec1a3" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>serialize</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1aa7009890a9c921cfcd81824b90321843" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>setIsCollection</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1a0c0720d1a957f866f02ab900a353b5b2" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>setIsObjGroup</name></member>
      <member refid="structvt_1_1tv_1_1_object_info_1a4d5af38465cb3eac5a367aa6104facbb" prot="public" virt="non-virtual"><scope>vt::tv::ObjectInfo</scope><name>setMetaID</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
