<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1tv_1_1utility_1_1_input_iterator" kind="struct" language="C++" prot="public">
    <compoundname>vt::tv::utility::InputIterator</compoundname>
    <includes refid="input__iterator_8h" local="no">input_iterator.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvt_1_1tv_1_1utility_1_1_input_iterator_1aac25b7249b1832013574ac1e714e2196" prot="public" static="no">
        <type>char</type>
        <definition>using vt::tv::utility::InputIterator::CharType =  char</definition>
        <argsstring></argsstring>
        <name>CharType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" line="58" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1tv_1_1utility_1_1_input_iterator_1a15a7e208fde85094440ea88af12134f9" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using vt::tv::utility::InputIterator::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" line="60" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1tv_1_1utility_1_1_input_iterator_1a9e7298d88322a84126f111e614fc47ff" prot="public" static="no">
        <type>CharType</type>
        <definition>using vt::tv::utility::InputIterator::value_type =  CharType</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" line="61" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1tv_1_1utility_1_1_input_iterator_1a0cd4607a81d046ab49d4dce5d9ccecce" prot="public" static="no">
        <type>CharType const  *</type>
        <definition>using vt::tv::utility::InputIterator::pointer =  CharType const*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" line="62" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1tv_1_1utility_1_1_input_iterator_1a945507e71cb0348bc0547a7c7e9aa45a" prot="public" static="no">
        <type>CharType const  &amp;</type>
        <definition>using vt::tv::utility::InputIterator::reference =  CharType const&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" line="63" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvt_1_1tv_1_1utility_1_1_input_iterator_1a592be972ea13d8b01dacc9a2e7465d6a" prot="public" static="no">
        <type>std::input_iterator_tag</type>
        <definition>using vt::tv::utility::InputIterator::iterator_category =  std::input_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" line="64" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_input_iterator_1ad8901e5397ce74b9f3f4c78d8ebcd5ca" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1tv_1_1utility_1_1_decompression_input_container" kindref="compound">DecompressionInputContainer</ref> const  *</type>
        <definition>DecompressionInputContainer const* vt::tv::utility::InputIterator::c_</definition>
        <argsstring></argsstring>
        <name>c_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The underlying container with the data. <simplesect kind="note"><para>: We lie about constness here to satisfy the iterator concept: the <computeroutput><ref refid="structvt_1_1tv_1_1utility_1_1_decompression_input_container" kindref="compound">DecompressionInputContainer</ref></computeroutput> can not traverse the data in a stateless manner because it decompresses with chunks. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" line="86" column="37" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_input_iterator_1ab2b0843294487b2deb65a5b3693416e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::tv::utility::InputIterator::InputIterator</definition>
        <argsstring>()=default</argsstring>
        <name>InputIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" line="66" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_input_iterator_1aab7f20305698db8edc897c58e6f33952" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::tv::utility::InputIterator::InputIterator</definition>
        <argsstring>(DecompressionInputContainer const *in_c)</argsstring>
        <name>InputIterator</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1utility_1_1_decompression_input_container" kindref="compound">DecompressionInputContainer</ref> const *</type>
          <declname>in_c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" line="67" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_input_iterator_1ad2de393f831d2de35c909ab5f65209b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvt_1_1tv_1_1utility_1_1_input_iterator" kindref="compound">InputIterator</ref> &amp;</type>
        <definition>InputIterator&amp; vt::tv::utility::InputIterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" line="69" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" bodystart="69" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_input_iterator_1a833ee28a7e108aa9b38026696e47e1e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::tv::utility::InputIterator::operator!=</definition>
        <argsstring>(InputIterator const &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1utility_1_1_input_iterator" kindref="compound">InputIterator</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" line="77" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_input_iterator_1af5cbabc601303178e32ee0c755fdf739" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference vt::tv::utility::InputIterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" line="79" column="13" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" bodystart="79" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Input iterator for compressed input data. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>vt::tv::utility::InputIterator</label>
        <link refid="structvt_1_1tv_1_1utility_1_1_input_iterator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>c_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>vt::tv::utility::DecompressionInputContainer</label>
        <link refid="structvt_1_1tv_1_1utility_1_1_decompression_input_container"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" line="56" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/input_iterator.h" bodystart="56" bodyend="87"/>
    <listofallmembers>
      <member refid="structvt_1_1tv_1_1utility_1_1_input_iterator_1ad8901e5397ce74b9f3f4c78d8ebcd5ca" prot="private" virt="non-virtual"><scope>vt::tv::utility::InputIterator</scope><name>c_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_input_iterator_1aac25b7249b1832013574ac1e714e2196" prot="public" virt="non-virtual"><scope>vt::tv::utility::InputIterator</scope><name>CharType</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_input_iterator_1a15a7e208fde85094440ea88af12134f9" prot="public" virt="non-virtual"><scope>vt::tv::utility::InputIterator</scope><name>difference_type</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_input_iterator_1ab2b0843294487b2deb65a5b3693416e6" prot="public" virt="non-virtual"><scope>vt::tv::utility::InputIterator</scope><name>InputIterator</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_input_iterator_1aab7f20305698db8edc897c58e6f33952" prot="public" virt="non-virtual"><scope>vt::tv::utility::InputIterator</scope><name>InputIterator</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_input_iterator_1a592be972ea13d8b01dacc9a2e7465d6a" prot="public" virt="non-virtual"><scope>vt::tv::utility::InputIterator</scope><name>iterator_category</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_input_iterator_1a833ee28a7e108aa9b38026696e47e1e1" prot="public" virt="non-virtual"><scope>vt::tv::utility::InputIterator</scope><name>operator!=</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_input_iterator_1af5cbabc601303178e32ee0c755fdf739" prot="public" virt="non-virtual"><scope>vt::tv::utility::InputIterator</scope><name>operator*</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_input_iterator_1ad2de393f831d2de35c909ab5f65209b2" prot="public" virt="non-virtual"><scope>vt::tv::utility::InputIterator</scope><name>operator++</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_input_iterator_1a0cd4607a81d046ab49d4dce5d9ccecce" prot="public" virt="non-virtual"><scope>vt::tv::utility::InputIterator</scope><name>pointer</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_input_iterator_1a945507e71cb0348bc0547a7c7e9aa45a" prot="public" virt="non-virtual"><scope>vt::tv::utility::InputIterator</scope><name>reference</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_input_iterator_1a9e7298d88322a84126f111e614fc47ff" prot="public" virt="non-virtual"><scope>vt::tv::utility::InputIterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
