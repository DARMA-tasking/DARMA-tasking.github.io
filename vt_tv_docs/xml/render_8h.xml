<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="render_8h" kind="file" language="C++">
    <compoundname>render.h</compoundname>
    <includes local="no">vtkActor.h</includes>
    <includes local="no">vtkRenderWindow.h</includes>
    <includes local="no">vtkRenderWindowInteractor.h</includes>
    <includes local="no">vtkRenderer.h</includes>
    <includes local="no">vtkNamedColors.h</includes>
    <includes local="no">vtkNew.h</includes>
    <includes local="no">vtkProperty.h</includes>
    <includes local="no">vtkCamera.h</includes>
    <includes local="no">vtkPolyData.h</includes>
    <includes local="no">vtkPolyDataMapper.h</includes>
    <includes local="no">vtkDoubleArray.h</includes>
    <includes local="no">vtkPointData.h</includes>
    <includes local="no">vtkGlyphSource2D.h</includes>
    <includes local="no">vtkGlyph2D.h</includes>
    <includes local="no">vtkTransform.h</includes>
    <includes local="no">vtkTransformPolyDataFilter.h</includes>
    <includes local="no">vtkColorTransferFunction.h</includes>
    <includes local="no">vtkScalarBarActor.h</includes>
    <includes local="no">vtkTextActor.h</includes>
    <includes local="no">vtkTextProperty.h</includes>
    <includes local="no">vtkArrayCalculator.h</includes>
    <includes local="no">vtkThresholdPoints.h</includes>
    <includes local="no">vtkWindowToImageFilter.h</includes>
    <includes local="no">vtkPNGWriter.h</includes>
    <includes local="no">vtkRegularPolygonSource.h</includes>
    <includes local="no">vtkSphereSource.h</includes>
    <includes local="no">vtkBitArray.h</includes>
    <includes local="no">vtkLine.h</includes>
    <includes local="no">vtkCellData.h</includes>
    <includes local="no">vtkLookupTable.h</includes>
    <includes local="no">vtkDiscretizableColorTransferFunction.h</includes>
    <includes local="no">vtkPolyDataWriter.h</includes>
    <includes local="no">vtkExodusIIWriter.h</includes>
    <includes local="no">vtkXMLPolyDataWriter.h</includes>
    <includes refid="rank_8h" local="yes">vt-tv/api/rank.h</includes>
    <includes refid="info_8h" local="yes">vt-tv/api/info.h</includes>
    <includes local="no">fmt-vt/format.h</includes>
    <includes local="no">ostream</includes>
    <includes local="no">cmath</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">iterator</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">tuple</includes>
    <includes local="no">limits</includes>
    <includes local="no">map</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">set</includes>
    <includes local="no">array</includes>
    <includes local="no">variant</includes>
    <includedby refid="render_8cc" local="yes">/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc</includedby>
    <includedby refid="parse__render_8cc" local="yes">/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/parse_render.cc</includedby>
    <incdepgraph>
      <node id="45">
        <label>list</label>
      </node>
      <node id="9">
        <label>vtkCamera.h</label>
      </node>
      <node id="3">
        <label>vtkRenderWindow.h</label>
      </node>
      <node id="43">
        <label>vt-tv/api/object_communicator.h</label>
        <link refid="object__communicator_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>limits</label>
      </node>
      <node id="32">
        <label>vtkDiscretizableColorTransferFunction.h</label>
      </node>
      <node id="13">
        <label>vtkPointData.h</label>
      </node>
      <node id="59">
        <label>iterator</label>
      </node>
      <node id="22">
        <label>vtkArrayCalculator.h</label>
      </node>
      <node id="39">
        <label>cstdint</label>
      </node>
      <node id="10">
        <label>vtkPolyData.h</label>
      </node>
      <node id="36">
        <label>vt-tv/api/rank.h</label>
        <link refid="rank_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>variant</label>
      </node>
      <node id="2">
        <label>vtkActor.h</label>
      </node>
      <node id="34">
        <label>vtkExodusIIWriter.h</label>
      </node>
      <node id="15">
        <label>vtkGlyph2D.h</label>
      </node>
      <node id="57">
        <label>cmath</label>
      </node>
      <node id="53">
        <label>vt-tv/api/info.h</label>
        <link refid="info_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>cassert</label>
      </node>
      <node id="21">
        <label>vtkTextProperty.h</label>
      </node>
      <node id="41">
        <label>string</label>
      </node>
      <node id="14">
        <label>vtkGlyphSource2D.h</label>
      </node>
      <node id="23">
        <label>vtkThresholdPoints.h</label>
      </node>
      <node id="46">
        <label>map</label>
      </node>
      <node id="30">
        <label>vtkCellData.h</label>
      </node>
      <node id="47">
        <label>unordered_set</label>
      </node>
      <node id="18">
        <label>vtkColorTransferFunction.h</label>
      </node>
      <node id="50">
        <label>fmt-vt/format.h</label>
      </node>
      <node id="56">
        <label>ostream</label>
      </node>
      <node id="6">
        <label>vtkNamedColors.h</label>
      </node>
      <node id="16">
        <label>vtkTransform.h</label>
      </node>
      <node id="28">
        <label>vtkBitArray.h</label>
      </node>
      <node id="4">
        <label>vtkRenderWindowInteractor.h</label>
      </node>
      <node id="61">
        <label>tuple</label>
      </node>
      <node id="25">
        <label>vtkPNGWriter.h</label>
      </node>
      <node id="11">
        <label>vtkPolyDataMapper.h</label>
      </node>
      <node id="48">
        <label>vector</label>
      </node>
      <node id="54">
        <label>vt-tv/api/object_info.h</label>
        <link refid="object__info_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h</label>
        <link refid="render_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>vtkRegularPolygonSource.h</label>
      </node>
      <node id="49">
        <label>utility</label>
      </node>
      <node id="63">
        <label>array</label>
      </node>
      <node id="42">
        <label>vt-tv/api/object_work.h</label>
        <link refid="object__work_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>vt-tv/api/phase_work.h</label>
        <link refid="phase__work_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>vtkNew.h</label>
      </node>
      <node id="24">
        <label>vtkWindowToImageFilter.h</label>
      </node>
      <node id="60">
        <label>cstdlib</label>
      </node>
      <node id="12">
        <label>vtkDoubleArray.h</label>
      </node>
      <node id="44">
        <label>iostream</label>
      </node>
      <node id="51">
        <label>unordered_map</label>
      </node>
      <node id="5">
        <label>vtkRenderer.h</label>
      </node>
      <node id="33">
        <label>vtkPolyDataWriter.h</label>
      </node>
      <node id="31">
        <label>vtkLookupTable.h</label>
      </node>
      <node id="27">
        <label>vtkSphereSource.h</label>
      </node>
      <node id="29">
        <label>vtkLine.h</label>
      </node>
      <node id="55">
        <label>set</label>
      </node>
      <node id="20">
        <label>vtkTextActor.h</label>
      </node>
      <node id="19">
        <label>vtkScalarBarActor.h</label>
      </node>
      <node id="58">
        <label>algorithm</label>
      </node>
      <node id="17">
        <label>vtkTransformPolyDataFilter.h</label>
      </node>
      <node id="8">
        <label>vtkProperty.h</label>
      </node>
      <node id="38">
        <label>vt-tv/api/types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>vtkXMLPolyDataWriter.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structvt_1_1tv_1_1_render" prot="public">vt::tv::Render</innerclass>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1tv">vt::tv</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>render.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt-tv<sp/>=&gt;<sp/>Virtual<sp/>Transport<sp/>--<sp/>Task<sp/>Visualizer</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2024<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_VT_TV_RENDER_RENDER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_VT_TV_RENDER_RENDER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkActor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkRenderWindow.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkRenderWindowInteractor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkRenderer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkNamedColors.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkNew.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkProperty.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkCamera.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkPolyData.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkPolyDataMapper.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkDoubleArray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkPointData.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkGlyphSource2D.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkGlyph2D.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkTransform.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkTransformPolyDataFilter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkColorTransferFunction.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkScalarBarActor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkTextActor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkTextProperty.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkArrayCalculator.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkThresholdPoints.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkWindowToImageFilter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkPNGWriter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkRegularPolygonSource.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkSphereSource.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkBitArray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkLine.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkCellData.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkLookupTable.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkDiscretizableColorTransferFunction.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkPolyDataWriter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkExodusIIWriter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkXMLPolyDataWriter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vt-tv/api/rank.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vt-tv/api/info.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fmt-vt/format.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;variant&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vt::tv<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="structvt_1_1tv_1_1_render" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvt_1_1tv_1_1_render" kindref="compound">Render</ref><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>struct</highlight><highlight class="normal"><sp/>ColorType<sp/>:<sp/>uint8_t<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>Default<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>BlueToRed<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>HotSpot<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>WhiteToBlack<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>quantities<sp/>of<sp/>interest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>std::string<sp/>rank_qoi_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;load&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>std::string<sp/>object_qoi_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;load&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>continuous_object_qoi_;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>input<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1tv_1_1_info" kindref="compound">Info</ref><sp/>info_;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>uint64_t<sp/>n_ranks_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>uint64_t<sp/>n_phases_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>std::array&lt;uint64_t,<sp/>3&gt;<sp/>grid_size_<sp/>=<sp/>{1,<sp/>1,<sp/>1};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>object_jitter_<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>std::set&lt;uint64_t&gt;<sp/>rank_dims_;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>std::string<sp/>output_dir_;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>std::string<sp/>output_file_stem_;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>grid_resolution_<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>save_meshes_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>save_pngs_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>PhaseType<sp/>selected_phase_<sp/>=<sp/>std::numeric_limits&lt;PhaseType&gt;::max();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>numeric<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>std::variant&lt;std::pair&lt;double,<sp/>double&gt;,<sp/>std::set&lt;std::variant&lt;double,<sp/>int&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>object_qoi_range_;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>rank_qoi_range_;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>object<sp/>attribute<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>uint64_t<sp/>max_o_per_dim_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>object_qoi_max_<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>object_volume_max_<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>object_load_max_<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Jitter<sp/>per<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;ElementIDType,<sp/>std::array&lt;double,<sp/>3&gt;&gt;<sp/>jitter_dims_;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1tv_1_1_render_1a0229871ee15e1fb2ce80d3f565cdaf5f" kindref="member">computeMaxObjectVolume_</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>std::variant&lt;std::pair&lt;double,<sp/>double&gt;,<sp/>std::set&lt;std::variant&lt;double,<sp/>int&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1tv_1_1_render_1aae2273143fba68bcaabfb93d554dea78" kindref="member">computeObjectQOIRange_</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/><ref refid="structvt_1_1tv_1_1_render_1a7b7f475cc6bd02f32ef45d60f8f85912" kindref="member">computeRankQOIRange_</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1tv_1_1_render_1a1e7dbcf29f218082f6c135efc9666b8a" kindref="member">computeRankQOIAverage_</ref>(PhaseType<sp/>phase,<sp/>std::string<sp/>qoi);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>std::map&lt;NodeType,<sp/>std::unordered_map&lt;ElementIDType,<sp/>ObjectWork&gt;&gt;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1tv_1_1_render_1a01d1d53e139f1950699757b1950994a4" kindref="member">createObjectMapping_</ref>(PhaseType<sp/>phase);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>vtkNew&lt;vtkPolyData&gt;<sp/><ref refid="structvt_1_1tv_1_1_render_1afc45da89523b9c49628b4b06e9dd3250" kindref="member">createRankMesh_</ref>(PhaseType<sp/>iteration);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>vtkNew&lt;vtkPolyData&gt;<sp/><ref refid="structvt_1_1tv_1_1_render_1a0e82421b6aabca9804cd2fbf7f2ec489" kindref="member">createObjectMesh_</ref>(PhaseType<sp/>phase);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>getRgbFromTab20Colormap_(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>g,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>b);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vtkSmartPointer&lt;vtkDiscretizableColorTransferFunction&gt;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>createColorTransferFunction_(</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>std::variant&lt;std::pair&lt;double,<sp/>double&gt;,<sp/>std::set&lt;std::variant&lt;double,<sp/>int&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attribute_range,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>ColorType<sp/>ct<sp/>=<sp/>ColorType::Default);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vtkSmartPointer&lt;vtkScalarBarActor&gt;<sp/>createScalarBarActor_(</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>vtkSmartPointer&lt;vtkMapper&gt;<sp/>mapper,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>title,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>font_size<sp/>=<sp/>50,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;std::variant&lt;double,<sp/>int&gt;&gt;<sp/>values<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vtkSmartPointer&lt;vtkRenderer&gt;<sp/>setupRenderer_();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vtkSmartPointer&lt;vtkMapper&gt;<sp/>createRanksMapper_(</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>vtkPolyData*<sp/>rank_mesh,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>std::variant&lt;std::pair&lt;double,<sp/>double&gt;,<sp/>std::set&lt;std::variant&lt;double,<sp/>int&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rank_qoi_range);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::array&lt;uint64_t,<sp/>3&gt;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1tv_1_1_render_1a16584562c66173280378508761945b01" kindref="member">globalIDToCartesian_</ref>(uint64_t<sp/>flat_id,<sp/>std::array&lt;uint64_t,<sp/>3&gt;<sp/>grid_sizes);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1tv_1_1_render_1aa66d973e7c9db250b6e6753848e47ec2" kindref="member">Render</ref>(<ref refid="structvt_1_1tv_1_1_info" kindref="compound">Info</ref><sp/>in_info);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="structvt_1_1tv_1_1_render_1aa66d973e7c9db250b6e6753848e47ec2" kindref="member">Render</ref>(</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;std::string,<sp/>3&gt;<sp/>in_qoi_request,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>in_continuous_object_qoi,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvt_1_1tv_1_1_info" kindref="compound">Info</ref>&amp;<sp/>in_info,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;uint64_t,<sp/>3&gt;<sp/>in_grid_size,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>in_object_jitter,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>in_output_dir,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>in_output_file_stem,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>in_resolution,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>in_save_meshes,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>in_save_pngs,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>PhaseType<sp/>in_selected_phase<sp/>=<sp/>std::numeric_limits&lt;PhaseType&gt;::max());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structvt_1_1tv_1_1_render_1a3107bedcc34f2ce7862b213b3bb318cd" kindref="member">renderPNG</ref>(</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>PhaseType<sp/>phase,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>vtkPolyData*<sp/>rank_mesh,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>vtkPolyData*<sp/>object_mesh,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>edge_width,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>glyph_factor,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>win_size,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>font_size,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>output_dir,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>output_file_stem);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>generate(uint64_t<sp/>font_size<sp/>=<sp/>50,<sp/>uint64_t<sp/>win_size<sp/>=<sp/>2000);</highlight></codeline>
<codeline lineno="304"><highlight class="normal">};</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::tv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_VT_TV_RENDER_RENDER_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h"/>
  </compounddef>
</doxygen>
