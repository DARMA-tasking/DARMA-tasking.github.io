<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1tv_1_1_object_work" kind="struct" language="C++" prot="public">
    <compoundname>vt::tv::ObjectWork</compoundname>
    <includes refid="object__work_8h" local="no">object_work.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_work_1ae3dd2b1dfce22020c76f32c92e0702fe" prot="private" static="no" mutable="no">
        <type>ElementIDType</type>
        <definition>ElementIDType vt::tv::ObjectWork::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Element ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="201" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_work_1a3e34accfbea89829019c8c778a0a3df4" prot="private" static="no" mutable="no">
        <type>TimeType</type>
        <definition>TimeType vt::tv::ObjectWork::whole_phase_load_</definition>
        <argsstring></argsstring>
        <name>whole_phase_load_</name>
        <initializer>= 0.</initializer>
        <briefdescription>
<para>Load for the object for a given phaseElementIDType. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="203" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_work_1a6e6ca6174319b60b47facdf03b6b7051" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; SubphaseType, TimeType &gt;</type>
        <definition>std::unordered_map&lt;SubphaseType, TimeType&gt; vt::tv::ObjectWork::subphase_loads_</definition>
        <argsstring></argsstring>
        <name>subphase_loads_</name>
        <briefdescription>
<para>Load broken down into subphases. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="205" column="22" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_work_1a0dda1554b32371689d6484fe0cf825bc" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, QOIVariantTypes &gt;</type>
        <definition>std::unordered_map&lt;std::string, QOIVariantTypes&gt; vt::tv::ObjectWork::user_defined_</definition>
        <argsstring></argsstring>
        <name>user_defined_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="207" column="22" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_work_1a6ae9874d9b9ca915b05cf15f919dfd57" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1tv_1_1_object_communicator" kindref="compound">ObjectCommunicator</ref></type>
        <definition>ObjectCommunicator vt::tv::ObjectWork::communicator_</definition>
        <argsstring></argsstring>
        <name>communicator_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="209" column="22" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_work_1a8346d1b6e86d9c4e24150d4b01034108" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, QOIVariantTypes &gt;</type>
        <definition>std::unordered_map&lt;std::string, QOIVariantTypes&gt; vt::tv::ObjectWork::attributes_</definition>
        <argsstring></argsstring>
        <name>attributes_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="211" column="22" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1af79f33ce5d67994c06a8958ca0de11d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::tv::ObjectWork::ObjectWork</definition>
        <argsstring>()=default</argsstring>
        <name>ObjectWork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="63" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1a677d7ba4899600d6f47bfdc871e0f92a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::tv::ObjectWork::ObjectWork</definition>
        <argsstring>(ElementIDType in_id, TimeType in_whole_phase_load, std::unordered_map&lt; SubphaseType, TimeType &gt; in_subphase_loads, std::unordered_map&lt; std::string, QOIVariantTypes &gt; in_user_defined={}, std::unordered_map&lt; std::string, QOIVariantTypes &gt; in_attributes={})</argsstring>
        <name>ObjectWork</name>
        <param>
          <type>ElementIDType</type>
          <declname>in_id</declname>
        </param>
        <param>
          <type>TimeType</type>
          <declname>in_whole_phase_load</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; SubphaseType, TimeType &gt;</type>
          <declname>in_subphase_loads</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; std::string, QOIVariantTypes &gt;</type>
          <declname>in_user_defined</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>std::unordered_map&lt; std::string, QOIVariantTypes &gt;</type>
          <declname>in_attributes</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Construct <computeroutput><ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref></computeroutput> for a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the object identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_whole_phase_load</parametername>
</parameternamelist>
<parameterdescription>
<para>the load for the whole phase </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_subphase_loads</parametername>
</parameternamelist>
<parameterdescription>
<para>the subphase load breakdown </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_user_defined</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-defined fields in json </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="73" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="73" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1ae2fc3a4fbe9ffd1ddccd722daf5e9c13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ElementIDType</type>
        <definition>ElementIDType vt::tv::ObjectWork::getID</definition>
        <argsstring>() const</argsstring>
        <name>getID</name>
        <briefdescription>
<para>Get element ID. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the element ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="91" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1abb394daf848c085734b42d76581dfd30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>TimeType</type>
        <definition>TimeType vt::tv::ObjectWork::getLoad</definition>
        <argsstring>() const</argsstring>
        <name>getLoad</name>
        <briefdescription>
<para>Get the load (in time) for the whole phase. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the load </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="98" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1a121966d42337958828fa4e42938b750d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; vt::tv::ObjectWork::getSubphaseLoads</definition>
        <argsstring>() const</argsstring>
        <name>getSubphaseLoads</name>
        <briefdescription>
<para>Get the subphase loads. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the subphase loads </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="105" column="14" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1a9ff1bfc7eb4289facebe7ebf4d248c90" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; vt::tv::ObjectWork::getUserDefined</definition>
        <argsstring>() const</argsstring>
        <name>getUserDefined</name>
        <briefdescription>
<para>Get user-defined fields. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>user-defined fields </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="112" column="14" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1a1595c69cd46af99eecab47df52cb681e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; vt::tv::ObjectWork::getAttributes</definition>
        <argsstring>() const</argsstring>
        <name>getAttributes</name>
        <briefdescription>
<para>Get attribute fields. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>attribute fields </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="119" column="14" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1ae864ecb4ac34ffebefb1328b6e5d43a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::ObjectWork::setCommunications</definition>
        <argsstring>(ObjectCommunicator &amp;c)</argsstring>
        <name>setCommunications</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_object_communicator" kindref="compound">ObjectCommunicator</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>set communications for this object </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="126" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1a9acbf99b5750d19b98f01226c4d5447d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::ObjectWork::addSentCommunications</definition>
        <argsstring>(ElementIDType to_id, double bytes)</argsstring>
        <name>addSentCommunications</name>
        <param>
          <type>ElementIDType</type>
          <declname>to_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>add sent communication to this object </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="136" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1ab3e7d49ecf79b5be84dc6ac1503e8b59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::ObjectWork::addReceivedCommunications</definition>
        <argsstring>(ElementIDType from_id, double bytes)</argsstring>
        <name>addReceivedCommunications</name>
        <param>
          <type>ElementIDType</type>
          <declname>from_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>add received communication to this object </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="145" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1adc6434a44033349b71f126932ee09178" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::multimap&lt; ElementIDType, double &gt;</type>
        <definition>std::multimap&lt;ElementIDType, double&gt; vt::tv::ObjectWork::getReceived</definition>
        <argsstring>() const</argsstring>
        <name>getReceived</name>
        <briefdescription>
<para>get received communications for this object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="152" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1a1dc1766f4c215d9ee73c27892a09de4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::multimap&lt; ElementIDType, double &gt;</type>
        <definition>std::multimap&lt;ElementIDType, double&gt; vt::tv::ObjectWork::getSent</definition>
        <argsstring>() const</argsstring>
        <name>getSent</name>
        <briefdescription>
<para>get sent communications for this object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="159" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1a917f69c960494d7408d2b26a127d9363" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::ObjectWork::getMaxVolume</definition>
        <argsstring>() const</argsstring>
        <name>getMaxVolume</name>
        <briefdescription>
<para>Get maximum bytes received or sent at this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="166" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1a9c8b8f7c6f6de753def952170050d159" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::ObjectWork::getReceivedVolume</definition>
        <argsstring>() const</argsstring>
        <name>getReceivedVolume</name>
        <briefdescription>
<para>Get the total received communication volume for this object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>total received communication volume </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="173" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1a7bbf0631156a8abc457cf55fc16951ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::ObjectWork::getSentVolume</definition>
        <argsstring>() const</argsstring>
        <name>getSentVolume</name>
        <briefdescription>
<para>Get the total sent communication volume for this object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>total sent communication volume </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="182" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_work_1a8d3e910f7284a7e91ccdf55b8d55f3a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::tv::ObjectWork::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Serializer for data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the serializer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="190" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="190" bodyend="197"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds work for an object for a given phase. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>vt::tv::ObjectWork</label>
        <link refid="structvt_1_1tv_1_1_object_work"/>
        <childnode refid="2" relation="usage">
          <edgelabel>communicator_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>vt::tv::ObjectCommunicator</label>
        <link refid="structvt_1_1tv_1_1_object_communicator"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" line="62" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h" bodystart="62" bodyend="212"/>
    <listofallmembers>
      <member refid="structvt_1_1tv_1_1_object_work_1ab3e7d49ecf79b5be84dc6ac1503e8b59" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>addReceivedCommunications</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a9acbf99b5750d19b98f01226c4d5447d" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>addSentCommunications</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a8346d1b6e86d9c4e24150d4b01034108" prot="private" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>attributes_</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a6ae9874d9b9ca915b05cf15f919dfd57" prot="private" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>communicator_</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a1595c69cd46af99eecab47df52cb681e" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>getAttributes</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1ae2fc3a4fbe9ffd1ddccd722daf5e9c13" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>getID</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1abb394daf848c085734b42d76581dfd30" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>getLoad</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a917f69c960494d7408d2b26a127d9363" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>getMaxVolume</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1adc6434a44033349b71f126932ee09178" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>getReceived</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a9c8b8f7c6f6de753def952170050d159" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>getReceivedVolume</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a1dc1766f4c215d9ee73c27892a09de4e" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>getSent</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a7bbf0631156a8abc457cf55fc16951ac" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>getSentVolume</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a121966d42337958828fa4e42938b750d" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>getSubphaseLoads</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a9ff1bfc7eb4289facebe7ebf4d248c90" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>getUserDefined</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1ae3dd2b1dfce22020c76f32c92e0702fe" prot="private" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>id_</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1af79f33ce5d67994c06a8958ca0de11d6" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>ObjectWork</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a677d7ba4899600d6f47bfdc871e0f92a" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>ObjectWork</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a8d3e910f7284a7e91ccdf55b8d55f3a2" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>serialize</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1ae864ecb4ac34ffebefb1328b6e5d43a5" prot="public" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>setCommunications</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a6e6ca6174319b60b47facdf03b6b7051" prot="private" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>subphase_loads_</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a0dda1554b32371689d6484fe0cf825bc" prot="private" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>user_defined_</name></member>
      <member refid="structvt_1_1tv_1_1_object_work_1a3e34accfbea89829019c8c778a0a3df4" prot="private" virt="non-virtual"><scope>vt::tv::ObjectWork</scope><name>whole_phase_load_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
