<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1tv_1_1_info" kind="struct" language="C++" prot="public">
    <compoundname>vt::tv::Info</compoundname>
    <includes refid="info_8h" local="no">info.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1tv_1_1_info_1a422689d2fa613374af10a47ec5a106b6" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; ElementIDType, <ref refid="structvt_1_1tv_1_1_object_info" kindref="compound">ObjectInfo</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDType, ObjectInfo&gt; vt::tv::Info::object_info_</definition>
        <argsstring></argsstring>
        <name>object_info_</name>
        <briefdescription>
<para>All the object info that doesn&apos;t change across phases. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="941" column="22" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="941" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_info_1a6927872b1cad66e8fa590e37cecba79a" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; NodeType, <ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref> &gt;</type>
        <definition>std::unordered_map&lt;NodeType, Rank&gt; vt::tv::Info::ranks_</definition>
        <argsstring></argsstring>
        <name>ranks_</name>
        <briefdescription>
<para>Work for each rank across phases. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="944" column="22" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="944" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_info_1a4dfc8b78cdcf3deede5250ab3af32428" prot="private" static="no" mutable="no">
        <type>PhaseType</type>
        <definition>PhaseType vt::tv::Info::selected_phase_</definition>
        <argsstring></argsstring>
        <name>selected_phase_</name>
        <initializer>= std::numeric_limits&lt;PhaseType&gt;::max()</initializer>
        <briefdescription>
<para>The current phase (or indication to use all phases) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="947" column="13" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="947" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1acf0806aa1eca7cfcdac6003312b0f5ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::tv::Info::Info</definition>
        <argsstring>(std::unordered_map&lt; ElementIDType, ObjectInfo &gt; in_object_info, std::unordered_map&lt; NodeType, Rank &gt; in_ranks)</argsstring>
        <name>Info</name>
        <param>
          <type>std::unordered_map&lt; ElementIDType, <ref refid="structvt_1_1tv_1_1_object_info" kindref="compound">ObjectInfo</ref> &gt;</type>
          <declname>in_object_info</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; NodeType, <ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref> &gt;</type>
          <declname>in_ranks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="68" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="68" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1ac5dbbc6354e6fad93dcecbb5052b378a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::tv::Info::Info</definition>
        <argsstring>()=default</argsstring>
        <name>Info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="74" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a74bc4f23cc454520bb4e0c52fb34a414" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::Info::addInfo</definition>
        <argsstring>(std::unordered_map&lt; ElementIDType, ObjectInfo &gt; object_info, Rank r)</argsstring>
        <name>addInfo</name>
        <param>
          <type>std::unordered_map&lt; ElementIDType, <ref refid="structvt_1_1tv_1_1_object_info" kindref="compound">ObjectInfo</ref> &gt;</type>
          <declname>object_info</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref></type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Add more information about a new rank. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object_info</parametername>
</parameternamelist>
<parameterdescription>
<para>object information to merge with existing data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>the rank work </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="83" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="83" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a0368083550d0789a7da7554e3df78331" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::Info::setSelectedPhase</definition>
        <argsstring>(PhaseType selected_phase)</argsstring>
        <name>setSelectedPhase</name>
        <param>
          <type>PhaseType</type>
          <declname>selected_phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="92" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a7fbefcb9546a84fc1bdc04cf24fecb53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; vt::tv::Info::getObjectInfo</definition>
        <argsstring>() const</argsstring>
        <name>getObjectInfo</name>
        <briefdescription>
<para>Get all object info. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>map of object info </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="101" column="14" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1abce89209820d8f373e6056f93c761fe9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; vt::tv::Info::getRanks</definition>
        <argsstring>() const</argsstring>
        <name>getRanks</name>
        <briefdescription>
<para>Get all ranks. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>map of Ranks </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="108" column="14" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a7223ced5ac2895632024a73a133afdcd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; NodeType &gt;</type>
        <definition>std::vector&lt;NodeType&gt; vt::tv::Info::getRankIDs</definition>
        <argsstring>() const</argsstring>
        <name>getRankIDs</name>
        <briefdescription>
<para>Get all rank ids. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of rank ids </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="115" column="15" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="115" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a699e61b2dc73a472ee2f3123046e5861" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; vt::tv::Info::getRank</definition>
        <argsstring>(NodeType rank_id) const</argsstring>
        <name>getRank</name>
        <param>
          <type>NodeType</type>
          <declname>rank_id</declname>
        </param>
        <briefdescription>
<para>Get rank. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="128" column="14" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a684d62b18dddfe41f65fda303fc86c5d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t vt::tv::Info::getNumPhases</definition>
        <argsstring>() const</argsstring>
        <name>getNumPhases</name>
        <briefdescription>
<para>Get number of phases, which should be the same across ranks. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of phases </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="135" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="135" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1ab724e4a865b977d87655b2022dc8c3e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::Info::convertQOIVariantTypeToDouble_</definition>
        <argsstring>(const QOIVariantTypes &amp;variant) const</argsstring>
        <name>convertQOIVariantTypeToDouble_</name>
        <param>
          <type>const QOIVariantTypes &amp;</type>
          <declname>variant</declname>
        </param>
        <briefdescription>
<para>Converts a QOI from QOIVariantTypes to double. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="162" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="162" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a0070900700e21ac9273958d3a2117545" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::function&lt; double(<ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref>, PhaseType)&gt;</type>
        <definition>std::function&lt;double(Rank, PhaseType)&gt; vt::tv::Info::getRankQOIGetter</definition>
        <argsstring>(const std::string &amp;rank_qoi) const</argsstring>
        <name>getRankQOIGetter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>rank_qoi</declname>
        </param>
        <briefdescription>
<para>Returns a getter to a specified rank QOI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="180" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="180" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1af620bdc340c4d90330bd353f201ae41a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::function&lt; double(<ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref>)&gt;</type>
        <definition>std::function&lt;double(ObjectWork)&gt; vt::tv::Info::getObjectQOIGetter</definition>
        <argsstring>(const std::string &amp;object_qoi) const</argsstring>
        <name>getObjectQOIGetter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>object_qoi</declname>
        </param>
        <briefdescription>
<para>Returns a getter to a specified object QOI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="232" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="232" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a3b9043329ad717f287580594c77da3ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::Info::getRankQOIAtPhase</definition>
        <argsstring>(ElementIDType rank_id, PhaseType phase, std::string rank_qoi) const</argsstring>
        <name>getRankQOIAtPhase</name>
        <param>
          <type>ElementIDType</type>
          <declname>rank_id</declname>
        </param>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>rank_qoi</declname>
        </param>
        <briefdescription>
<para>Get QOI of a given rank at a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a map of QOI per rank </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="275" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="275" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1aa13fe6855e1e28de16b7fac3453dc569" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_map&lt; PhaseType, double &gt;</type>
        <definition>std::unordered_map&lt;PhaseType, double&gt; vt::tv::Info::getAllQOIAtRank</definition>
        <argsstring>(ElementIDType rank_id, std::string rank_qoi) const</argsstring>
        <name>getAllQOIAtRank</name>
        <param>
          <type>ElementIDType</type>
          <declname>rank_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>rank_qoi</declname>
        </param>
        <briefdescription>
<para>Get QOI of a given rank across all phases. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a map of QOI per rank </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="288" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="288" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a7a3b969658de1080e50bce785e3451ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_map&lt; ElementIDType, double &gt;</type>
        <definition>std::unordered_map&lt;ElementIDType, double&gt; vt::tv::Info::getAllRankQOIAtPhase</definition>
        <argsstring>(PhaseType phase, std::string rank_qoi) const</argsstring>
        <name>getAllRankQOIAtPhase</name>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>rank_qoi</declname>
        </param>
        <briefdescription>
<para>Get QOI of all ranks at given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a map of QOI per rank </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="306" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="306" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a54e700145ffeee14ede76ebfeb2d57f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::Info::getObjectQOIAtPhase</definition>
        <argsstring>(ElementIDType obj_id, PhaseType phase, std::string obj_qoi) const</argsstring>
        <name>getObjectQOIAtPhase</name>
        <param>
          <type>ElementIDType</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>obj_qoi</declname>
        </param>
        <briefdescription>
<para>Get a specified object&apos;s QOI at a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the object QOI </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="323" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="323" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1aab30c1defbcd612c77a799ec9e212629" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_map&lt; ElementIDType, <ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDType, ObjectWork&gt; vt::tv::Info::getRankObjects</definition>
        <argsstring>(ElementIDType rank_id, PhaseType phase) const</argsstring>
        <name>getRankObjects</name>
        <param>
          <type>ElementIDType</type>
          <declname>rank_id</declname>
        </param>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Get all objects for a given rank and phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rank_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the objects </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="340" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="340" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1aa79cfc88ea62c249e2c90674dad86a92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_map&lt; ElementIDType, <ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDType, ObjectWork&gt; vt::tv::Info::getPhaseObjects</definition>
        <argsstring>(PhaseType phase) const</argsstring>
        <name>getPhaseObjects</name>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Get all objects in all ranks for a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the objects </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="371" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="371" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a462f7e4b1d48be6f74eb7627dfb8b64a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::Info::getMaxVolume</definition>
        <argsstring>() const</argsstring>
        <name>getMaxVolume</name>
        <briefdescription>
<para>Get maximum inter-object communication volume across all ranks and phases. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the maximum volume </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="410" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="410" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a24c8fcf4795446af169bab31e519dff1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::Info::getMaxLoad</definition>
        <argsstring>() const</argsstring>
        <name>getMaxLoad</name>
        <briefdescription>
<para>Get maximum load of objects across all ranks and phases. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the maximum load </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="448" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="448" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1aa71dd445b53aee2f40ed48fcc7f5f6aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_map&lt; ElementIDType, <ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref> &gt;</type>
        <definition>std::unordered_map&lt;ElementIDType, ObjectWork&gt; vt::tv::Info::createPhaseObjectsMapping</definition>
        <argsstring>(PhaseType phase)</argsstring>
        <name>createPhaseObjectsMapping</name>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Create mapping of all objects in all ranks for a given phase (made for allowing changes to these objects) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the objects </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="481" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="481" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1aafae26bdf66d2e3e11687b700159f9b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::set&lt; ElementIDType &gt;</type>
        <definition>std::set&lt;ElementIDType&gt; vt::tv::Info::getAllObjectIDs</definition>
        <argsstring>() const</argsstring>
        <name>getAllObjectIDs</name>
        <briefdescription>
<para>Get all object IDs across all ranks and phases. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the objects </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="515" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="515" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a6a7a4e6db168a2bf7fdaabe6b275f0d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::tv::Info::getNumRanks</definition>
        <argsstring>() const</argsstring>
        <name>getNumRanks</name>
        <briefdescription>
<para>Get number of ranks stored here. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of ranks </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="549" column="15" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="549" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a04895a15b7ecedb0b11edebfaea051d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::Info::normalizeEdges</definition>
        <argsstring>(PhaseType phase)</argsstring>
        <name>normalizeEdges</name>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Normalize communications for a phase: ensure receives and sends coincide. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="556" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="556" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1ac029643223d191701a913db83c5bcc26" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::Info::getImbalance</definition>
        <argsstring>(PhaseType phase) const</argsstring>
        <name>getImbalance</name>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Compute imbalance across ranks at phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the imbalance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="667" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="667" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a7ca98cf4b6f0d9bd09e38599b97d1e10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getObjectID</definition>
        <argsstring>(ObjectWork object) const</argsstring>
        <name>getObjectID</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Get the id of an object at a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>the current object</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="694" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="694" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1ac98bef9c0d9a38dc43e74f654c36ae22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getObjectRankID</definition>
        <argsstring>(ObjectWork object) const</argsstring>
        <name>getObjectRankID</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Get the rank id of an object at a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>the current object</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the rank id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="705" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="705" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1aedea7f7156d0edc68bc8a5188fa63c95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getObjectLoad</definition>
        <argsstring>(ObjectWork object) const</argsstring>
        <name>getObjectLoad</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Get the load of an object at a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>the current object</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the load </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="718" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="718" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a22cffa71f5081a496bb1ae33a13791b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getObjectReceivedVolume</definition>
        <argsstring>(ObjectWork object) const</argsstring>
        <name>getObjectReceivedVolume</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Get the received volume of an object at a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>the current object</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the received volume </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="729" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="729" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a29c6fd7415e3e817132f7845dbd19ace" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getObjectSentVolume</definition>
        <argsstring>(ObjectWork object) const</argsstring>
        <name>getObjectSentVolume</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Get the sent volume of an object at a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>the current object</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sent volume </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="740" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="740" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a35bff2a46ef1d53a6dc7ec78f440af5d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getObjectMaxVolume</definition>
        <argsstring>(ObjectWork object) const</argsstring>
        <name>getObjectMaxVolume</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Get the max volume of an object at a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>the current object</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the max volume </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="751" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="751" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1ac2e2d403a2f226b0e7525bc3df4ff64f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getObjectAttributeOrUserDefined</definition>
        <argsstring>(ObjectWork object, std::string object_qoi) const</argsstring>
        <name>getObjectAttributeOrUserDefined</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>object_qoi</declname>
        </param>
        <briefdescription>
<para>Get the specified attribute or user_defined QOI of an object at a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>the current object</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the requested attribute or user_defined QOI </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="762" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="762" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a379baf8aa8c5d42794826dd10f31fe3e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getRankID</definition>
        <argsstring>(Rank rank) const</argsstring>
        <name>getRankID</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref></type>
          <declname>rank</declname>
        </param>
        <briefdescription>
<para>Get id of a given rank. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rank</parametername>
</parameternamelist>
<parameterdescription>
<para>the rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase (unused for this QOI)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the rank id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="788" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="788" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a09e50312ce6d527a8bfb0199476739cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getRankLoad</definition>
        <argsstring>(Rank rank, PhaseType phase) const</argsstring>
        <name>getRankLoad</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref></type>
          <declname>rank</declname>
        </param>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Get load of a given rank. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rank</parametername>
</parameternamelist>
<parameterdescription>
<para>the rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the rank load </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="800" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="800" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a5d6f575e379894ec1190f0366df3c15d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getRankReceivedVolume</definition>
        <argsstring>(Rank rank, PhaseType phase) const</argsstring>
        <name>getRankReceivedVolume</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref></type>
          <declname>rank</declname>
        </param>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Get the received volume of a rank at a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rank</parametername>
</parameternamelist>
<parameterdescription>
<para>the rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the received volume </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="812" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="812" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a590c94d29b4a7eddccb34926f05f436e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getRankSentVolume</definition>
        <argsstring>(Rank rank, PhaseType phase) const</argsstring>
        <name>getRankSentVolume</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref></type>
          <declname>rank</declname>
        </param>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Get the sent volume of a rank at a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rank</parametername>
</parameternamelist>
<parameterdescription>
<para>the rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sent volume </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="829" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="829" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1ad199317705997629b8fd3bc2d04b160c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getRankNumObjects</definition>
        <argsstring>(Rank rank, PhaseType phase) const</argsstring>
        <name>getRankNumObjects</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref></type>
          <declname>rank</declname>
        </param>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Get the number of objects at a given phase for a given rank. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rank</parametername>
</parameternamelist>
<parameterdescription>
<para>the rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of objects </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="846" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="846" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a4831643b0eb665a401d48e80ea1f944f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getRankNumMigratableObjects</definition>
        <argsstring>(Rank rank, PhaseType phase) const</argsstring>
        <name>getRankNumMigratableObjects</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref></type>
          <declname>rank</declname>
        </param>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Get the number of migratable objects at a given phase for a given rank. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rank</parametername>
</parameternamelist>
<parameterdescription>
<para>the rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of migratable objects </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="860" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="860" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a109205a1d8334ce9b7a2d2527aba01b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getRankMigratableLoad</definition>
        <argsstring>(Rank rank, PhaseType phase) const</argsstring>
        <name>getRankMigratableLoad</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref></type>
          <declname>rank</declname>
        </param>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Get the total load of migratable objects at a given phase for a given rank. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rank</parametername>
</parameternamelist>
<parameterdescription>
<para>the rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the total load of migratable objects </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="879" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="879" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a7304a8111f34ac224edbf72e86f5cc15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getRankSentinelLoad</definition>
        <argsstring>(Rank rank, PhaseType phase) const</argsstring>
        <name>getRankSentinelLoad</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref></type>
          <declname>rank</declname>
        </param>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Get the total load of sentinel objects at a given phase for a given rank. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rank</parametername>
</parameternamelist>
<parameterdescription>
<para>the rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the total load of sentinel objects </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="898" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="898" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1aa7a56b31fc284336e01a3024d2d2bdfb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QOIVariantTypes</type>
        <definition>QOIVariantTypes vt::tv::Info::getRankAttribute</definition>
        <argsstring>(Rank rank, std::string rank_qoi) const</argsstring>
        <name>getRankAttribute</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_rank" kindref="compound">Rank</ref></type>
          <declname>rank</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>rank_qoi</declname>
        </param>
        <briefdescription>
<para>Get the specified attribute of a rank at a given phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rank</parametername>
</parameternamelist>
<parameterdescription>
<para>the current rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rank_qoi</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the requested attribute </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="917" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="917" bodyend="924"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_info_1a8ae2b679b302bd2647ab3ea1cdde6838" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::tv::Info::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Serializer for data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the serializer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="934" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="934" bodyend="937"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>All the information for a set of ranks and phases. </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>: Elaborate this...</para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" line="67" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h" bodystart="67" bodyend="948"/>
    <listofallmembers>
      <member refid="structvt_1_1tv_1_1_info_1a74bc4f23cc454520bb4e0c52fb34a414" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>addInfo</name></member>
      <member refid="structvt_1_1tv_1_1_info_1ab724e4a865b977d87655b2022dc8c3e2" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>convertQOIVariantTypeToDouble_</name></member>
      <member refid="structvt_1_1tv_1_1_info_1aa71dd445b53aee2f40ed48fcc7f5f6aa" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>createPhaseObjectsMapping</name></member>
      <member refid="structvt_1_1tv_1_1_info_1aafae26bdf66d2e3e11687b700159f9b3" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getAllObjectIDs</name></member>
      <member refid="structvt_1_1tv_1_1_info_1aa13fe6855e1e28de16b7fac3453dc569" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getAllQOIAtRank</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a7a3b969658de1080e50bce785e3451ad" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getAllRankQOIAtPhase</name></member>
      <member refid="structvt_1_1tv_1_1_info_1ac029643223d191701a913db83c5bcc26" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getImbalance</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a24c8fcf4795446af169bab31e519dff1" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getMaxLoad</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a462f7e4b1d48be6f74eb7627dfb8b64a" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getMaxVolume</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a684d62b18dddfe41f65fda303fc86c5d" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getNumPhases</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a6a7a4e6db168a2bf7fdaabe6b275f0d6" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getNumRanks</name></member>
      <member refid="structvt_1_1tv_1_1_info_1ac2e2d403a2f226b0e7525bc3df4ff64f" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getObjectAttributeOrUserDefined</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a7ca98cf4b6f0d9bd09e38599b97d1e10" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getObjectID</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a7fbefcb9546a84fc1bdc04cf24fecb53" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getObjectInfo</name></member>
      <member refid="structvt_1_1tv_1_1_info_1aedea7f7156d0edc68bc8a5188fa63c95" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getObjectLoad</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a35bff2a46ef1d53a6dc7ec78f440af5d" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getObjectMaxVolume</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a54e700145ffeee14ede76ebfeb2d57f1" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getObjectQOIAtPhase</name></member>
      <member refid="structvt_1_1tv_1_1_info_1af620bdc340c4d90330bd353f201ae41a" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getObjectQOIGetter</name></member>
      <member refid="structvt_1_1tv_1_1_info_1ac98bef9c0d9a38dc43e74f654c36ae22" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getObjectRankID</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a22cffa71f5081a496bb1ae33a13791b3" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getObjectReceivedVolume</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a29c6fd7415e3e817132f7845dbd19ace" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getObjectSentVolume</name></member>
      <member refid="structvt_1_1tv_1_1_info_1aa79cfc88ea62c249e2c90674dad86a92" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getPhaseObjects</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a699e61b2dc73a472ee2f3123046e5861" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRank</name></member>
      <member refid="structvt_1_1tv_1_1_info_1aa7a56b31fc284336e01a3024d2d2bdfb" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRankAttribute</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a379baf8aa8c5d42794826dd10f31fe3e" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRankID</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a7223ced5ac2895632024a73a133afdcd" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRankIDs</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a09e50312ce6d527a8bfb0199476739cd" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRankLoad</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a109205a1d8334ce9b7a2d2527aba01b2" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRankMigratableLoad</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a4831643b0eb665a401d48e80ea1f944f" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRankNumMigratableObjects</name></member>
      <member refid="structvt_1_1tv_1_1_info_1ad199317705997629b8fd3bc2d04b160c" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRankNumObjects</name></member>
      <member refid="structvt_1_1tv_1_1_info_1aab30c1defbcd612c77a799ec9e212629" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRankObjects</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a3b9043329ad717f287580594c77da3ac" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRankQOIAtPhase</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a0070900700e21ac9273958d3a2117545" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRankQOIGetter</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a5d6f575e379894ec1190f0366df3c15d" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRankReceivedVolume</name></member>
      <member refid="structvt_1_1tv_1_1_info_1abce89209820d8f373e6056f93c761fe9" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRanks</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a7304a8111f34ac224edbf72e86f5cc15" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRankSentinelLoad</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a590c94d29b4a7eddccb34926f05f436e" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>getRankSentVolume</name></member>
      <member refid="structvt_1_1tv_1_1_info_1acf0806aa1eca7cfcdac6003312b0f5ae" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>Info</name></member>
      <member refid="structvt_1_1tv_1_1_info_1ac5dbbc6354e6fad93dcecbb5052b378a" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>Info</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a04895a15b7ecedb0b11edebfaea051d7" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>normalizeEdges</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a422689d2fa613374af10a47ec5a106b6" prot="private" virt="non-virtual"><scope>vt::tv::Info</scope><name>object_info_</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a6927872b1cad66e8fa590e37cecba79a" prot="private" virt="non-virtual"><scope>vt::tv::Info</scope><name>ranks_</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a4dfc8b78cdcf3deede5250ab3af32428" prot="private" virt="non-virtual"><scope>vt::tv::Info</scope><name>selected_phase_</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a8ae2b679b302bd2647ab3ea1cdde6838" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>serialize</name></member>
      <member refid="structvt_1_1tv_1_1_info_1a0368083550d0789a7da7554e3df78331" prot="public" virt="non-virtual"><scope>vt::tv::Info</scope><name>setSelectedPhase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
