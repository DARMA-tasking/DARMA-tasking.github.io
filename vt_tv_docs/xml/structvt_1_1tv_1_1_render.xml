<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1tv_1_1_render" kind="struct" language="C++" prot="public">
    <compoundname>vt::tv::Render</compoundname>
    <includes refid="render_8h" local="no">render.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="structvt_1_1tv_1_1_render_1a89c91a14e4943f0914ef9a4d23e45e2f" prot="private" static="no" strong="yes">
        <type>uint8_t</type>
        <name>ColorType</name>
        <enumvalue id="structvt_1_1tv_1_1_render_1a89c91a14e4943f0914ef9a4d23e45e2fa7a1920d61156abc05a60135aefe8bc67" prot="private">
          <name>Default</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structvt_1_1tv_1_1_render_1a89c91a14e4943f0914ef9a4d23e45e2fa6a03375437ce1efa488e13ae2f0aa937" prot="private">
          <name>BlueToRed</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structvt_1_1tv_1_1_render_1a89c91a14e4943f0914ef9a4d23e45e2fa4db92b2eceeec3a295e9c116ebdeae7d" prot="private">
          <name>HotSpot</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structvt_1_1tv_1_1_render_1a89c91a14e4943f0914ef9a4d23e45e2fa9ffa0a56bd8112d522d652284dbd8311" prot="private">
          <name>WhiteToBlack</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="110" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="110" bodyend="115"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1adaf3c6b1b5737484157e1d91de44a37a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::tv::Render::rank_qoi_</definition>
        <argsstring></argsstring>
        <name>rank_qoi_</name>
        <initializer>= &quot;load&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="118" column="15" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a401d89d3353455d097908b1f67d32582" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::tv::Render::object_qoi_</definition>
        <argsstring></argsstring>
        <name>object_qoi_</name>
        <initializer>= &quot;load&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="119" column="15" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a67b15ab86c72a7a618879de93dbf0148" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::tv::Render::continuous_object_qoi_</definition>
        <argsstring></argsstring>
        <name>continuous_object_qoi_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="120" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a0b4cf4aef6e3c8b474a43a9553a22157" prot="private" static="no" mutable="no">
        <type><ref refid="structvt_1_1tv_1_1_info" kindref="compound">Info</ref></type>
        <definition>Info vt::tv::Render::info_</definition>
        <argsstring></argsstring>
        <name>info_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="123" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a050a48ecb0fc44b468b3abaa4bb3fc08" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t vt::tv::Render::n_ranks_</definition>
        <argsstring></argsstring>
        <name>n_ranks_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="124" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a80659dc38bbaf6b2d41085301fd2b5c5" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t vt::tv::Render::n_phases_</definition>
        <argsstring></argsstring>
        <name>n_phases_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="125" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1ae2f97f14bd041797c1d21d508c22ecee" prot="private" static="no" mutable="no">
        <type>std::array&lt; uint64_t, 3 &gt;</type>
        <definition>std::array&lt;uint64_t, 3&gt; vt::tv::Render::grid_size_</definition>
        <argsstring></argsstring>
        <name>grid_size_</name>
        <initializer>= {1, 1, 1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="126" column="14" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a0cd90a40926b16176aa81645d53957f0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vt::tv::Render::object_jitter_</definition>
        <argsstring></argsstring>
        <name>object_jitter_</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="127" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a2683e515ee0d31f38bb67a326cf3cc91" prot="private" static="no" mutable="no">
        <type>std::set&lt; uint64_t &gt;</type>
        <definition>std::set&lt;uint64_t&gt; vt::tv::Render::rank_dims_</definition>
        <argsstring></argsstring>
        <name>rank_dims_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="128" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1ae85e4817e647277e442009631b9b6ed2" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::tv::Render::output_dir_</definition>
        <argsstring></argsstring>
        <name>output_dir_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="129" column="15" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1aa7776ac0c7f7d8c99892501acf2e4e86" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vt::tv::Render::output_file_stem_</definition>
        <argsstring></argsstring>
        <name>output_file_stem_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="130" column="15" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1ad40ffa0e48b94977ca3d4cdf12be7597" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vt::tv::Render::grid_resolution_</definition>
        <argsstring></argsstring>
        <name>grid_resolution_</name>
        <initializer>= 1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="131" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1aac9ad9dc8e2dedf12d6595f1f3946b70" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::tv::Render::save_meshes_</definition>
        <argsstring></argsstring>
        <name>save_meshes_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="132" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a6123ac8e19e092659e26f42852bc680c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vt::tv::Render::save_pngs_</definition>
        <argsstring></argsstring>
        <name>save_pngs_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="133" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a87f5c5fa945e189eb97f22258cd25fe6" prot="private" static="no" mutable="no">
        <type>PhaseType</type>
        <definition>PhaseType vt::tv::Render::selected_phase_</definition>
        <argsstring></argsstring>
        <name>selected_phase_</name>
        <initializer>= std::numeric_limits&lt;PhaseType&gt;::max()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="134" column="13" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a4e726008ce5adcb99905e59f68ef58c1" prot="private" static="no" mutable="no">
        <type>std::variant&lt; std::pair&lt; double, double &gt;, std::set&lt; std::variant&lt; double, int &gt; &gt; &gt;</type>
        <definition>std::variant&lt;std::pair&lt;double, double&gt;, std::set&lt;std::variant&lt;double, int&gt; &gt; &gt; vt::tv::Render::object_qoi_range_</definition>
        <argsstring></argsstring>
        <name>object_qoi_range_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="138" column="5" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a9199c765b4abb055acd70cae053876aa" prot="private" static="no" mutable="no">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt;double, double&gt; vt::tv::Render::rank_qoi_range_</definition>
        <argsstring></argsstring>
        <name>rank_qoi_range_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="139" column="13" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a30f23046875fe9d7b31ae1b35517e3f3" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t vt::tv::Render::max_o_per_dim_</definition>
        <argsstring></argsstring>
        <name>max_o_per_dim_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="142" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1af26ba6aed2a9169be26348ac47a8d2bf" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vt::tv::Render::object_qoi_max_</definition>
        <argsstring></argsstring>
        <name>object_qoi_max_</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="143" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1acf9e679b2788065ccda3a3bb071d6d03" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vt::tv::Render::object_volume_max_</definition>
        <argsstring></argsstring>
        <name>object_volume_max_</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="144" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a7af1fa4d45362533170bc60a59a8ebb0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vt::tv::Render::object_load_max_</definition>
        <argsstring></argsstring>
        <name>object_load_max_</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="145" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_render_1a6baf946663403029f0f716e4465eaa12" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; ElementIDType, std::array&lt; double, 3 &gt; &gt;</type>
        <definition>std::unordered_map&lt;ElementIDType, std::array&lt;double, 3&gt; &gt; vt::tv::Render::jitter_dims_</definition>
        <argsstring></argsstring>
        <name>jitter_dims_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="148" column="22" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1a0229871ee15e1fb2ce80d3f565cdaf5f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::Render::computeMaxObjectVolume_</definition>
        <argsstring>()</argsstring>
        <name>computeMaxObjectVolume_</name>
        <briefdescription>
<para>Compute maximum value of object volumes. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>max object volume </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="155" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1aae2273143fba68bcaabfb93d554dea78" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::variant&lt; std::pair&lt; double, double &gt;, std::set&lt; std::variant&lt; double, int &gt; &gt; &gt;</type>
        <definition>std::variant&lt; std::pair&lt; double, double &gt;, std::set&lt; std::variant&lt; double, int &gt; &gt; &gt; vt::tv::Render::computeObjectQOIRange_</definition>
        <argsstring>()</argsstring>
        <name>computeObjectQOIRange_</name>
        <briefdescription>
<para>Compute range of object qoi. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>object qoi range </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="163" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="189" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1a7b7f475cc6bd02f32ef45d60f8f85912" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt; double, double &gt; vt::tv::Render::computeRankQOIRange_</definition>
        <argsstring>()</argsstring>
        <name>computeRankQOIRange_</name>
        <briefdescription>
<para>Compute range of rank qoi. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>rank qoi range </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="170" column="13" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="243" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1a1e7dbcf29f218082f6c135efc9666b8a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::Render::computeRankQOIAverage_</definition>
        <argsstring>(PhaseType phase, std::string qoi)</argsstring>
        <name>computeRankQOIAverage_</name>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>qoi</declname>
        </param>
        <briefdescription>
<para>Compute average of rank qoi. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>qoi</parametername>
</parameternamelist>
<parameterdescription>
<para>quantity of interest on which to compute average</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rank qoi range </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="179" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="287" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1a01d1d53e139f1950699757b1950994a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; NodeType, std::unordered_map&lt; ElementIDType, <ref refid="structvt_1_1tv_1_1_object_work" kindref="compound">ObjectWork</ref> &gt; &gt;</type>
        <definition>std::map&lt; NodeType, std::unordered_map&lt; ElementIDType, ObjectWork &gt; &gt; vt::tv::Render::createObjectMapping_</definition>
        <argsstring>(PhaseType phase)</argsstring>
        <name>createObjectMapping_</name>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Create mapping of objects in ranks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>phase index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mapping </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="189" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="299" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1afc45da89523b9c49628b4b06e9dd3250" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vtkNew&lt; vtkPolyData &gt;</type>
        <definition>vtkNew&lt; vtkPolyData &gt; vt::tv::Render::createRankMesh_</definition>
        <argsstring>(PhaseType iteration)</argsstring>
        <name>createRankMesh_</name>
        <param>
          <type>PhaseType</type>
          <declname>iteration</declname>
        </param>
        <briefdescription>
<para>Map ranks to polygonal mesh. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">iteration</parametername>
</parameternamelist>
<parameterdescription>
<para>phase index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rank mesh </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="198" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="310" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1a0e82421b6aabca9804cd2fbf7f2ec489" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vtkNew&lt; vtkPolyData &gt;</type>
        <definition>vtkNew&lt; vtkPolyData &gt; vt::tv::Render::createObjectMesh_</definition>
        <argsstring>(PhaseType phase)</argsstring>
        <name>createObjectMesh_</name>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Map objects to polygonal mesh. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">phase</parametername>
</parameternamelist>
<parameterdescription>
<para>phase</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>object mesh </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="207" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="358" bodyend="538"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1a0a0e5c0176dd71dbe637a4c1a0f4f6a7" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::Render::getRgbFromTab20Colormap_</definition>
        <argsstring>(int index, double &amp;r, double &amp;g, double &amp;b)</argsstring>
        <name>getRgbFromTab20Colormap_</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="210" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="540" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1a5c19315666f002badb959e02e25210b2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vtkSmartPointer&lt; vtkDiscretizableColorTransferFunction &gt;</type>
        <definition>vtkSmartPointer&lt; vtkDiscretizableColorTransferFunction &gt; vt::tv::Render::createColorTransferFunction_</definition>
        <argsstring>(std::variant&lt; std::pair&lt; double, double &gt;, std::set&lt; std::variant&lt; double, int &gt;&gt;&gt; attribute_range, ColorType ct=ColorType::Default)</argsstring>
        <name>createColorTransferFunction_</name>
        <param>
          <type>std::variant&lt; std::pair&lt; double, double &gt;, std::set&lt; std::variant&lt; double, int &gt;&gt;&gt;</type>
          <declname>attribute_range</declname>
        </param>
        <param>
          <type>ColorType</type>
          <declname>ct</declname>
          <defval>ColorType::Default</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="213" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="570" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1a12b29a4f8a7d4883711fc1a324cd7aed" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vtkSmartPointer&lt; vtkScalarBarActor &gt;</type>
        <definition>vtkSmartPointer&lt; vtkScalarBarActor &gt; vt::tv::Render::createScalarBarActor_</definition>
        <argsstring>(vtkSmartPointer&lt; vtkMapper &gt; mapper, const std::string &amp;title, double x, double y, uint64_t font_size=50, std::set&lt; std::variant&lt; double, int &gt;&gt; values={})</argsstring>
        <name>createScalarBarActor_</name>
        <param>
          <type>vtkSmartPointer&lt; vtkMapper &gt;</type>
          <declname>mapper</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>font_size</declname>
          <defval>50</defval>
        </param>
        <param>
          <type>std::set&lt; std::variant&lt; double, int &gt;&gt;</type>
          <declname>values</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="218" column="26" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="657" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1ac5a5f3c20183141a7232ca3e0489875a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vtkSmartPointer&lt; vtkRenderer &gt;</type>
        <definition>vtkSmartPointer&lt; vtkRenderer &gt; vt::tv::Render::setupRenderer_</definition>
        <argsstring>()</argsstring>
        <name>setupRenderer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="226" column="26" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="734" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1ae6d11c8379f6c1113124a65a17a5563b" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vtkSmartPointer&lt; vtkMapper &gt;</type>
        <definition>vtkSmartPointer&lt; vtkMapper &gt; vt::tv::Render::createRanksMapper_</definition>
        <argsstring>(vtkPolyData *rank_mesh, std::variant&lt; std::pair&lt; double, double &gt;, std::set&lt; std::variant&lt; double, int &gt;&gt;&gt; rank_qoi_range)</argsstring>
        <name>createRanksMapper_</name>
        <param>
          <type>vtkPolyData *</type>
          <declname>rank_mesh</declname>
        </param>
        <param>
          <type>std::variant&lt; std::pair&lt; double, double &gt;, std::set&lt; std::variant&lt; double, int &gt;&gt;&gt;</type>
          <declname>rank_qoi_range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="228" column="26" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="741" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1a16584562c66173280378508761945b01" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::array&lt; uint64_t, 3 &gt;</type>
        <definition>std::array&lt; uint64_t, 3 &gt; vt::tv::Render::globalIDToCartesian_</definition>
        <argsstring>(uint64_t flat_id, std::array&lt; uint64_t, 3 &gt; grid_sizes)</argsstring>
        <name>globalIDToCartesian_</name>
        <param>
          <type>uint64_t</type>
          <declname>flat_id</declname>
        </param>
        <param>
          <type>std::array&lt; uint64_t, 3 &gt;</type>
          <declname>grid_sizes</declname>
        </param>
        <briefdescription>
<para>Map global index to its Cartesian grid coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flat_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the entity in the phase </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid_sizes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of entities per dimension x,y,z</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>i,j,k Cartesian coordinates </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="242" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="714" bodyend="732"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1aa66d973e7c9db250b6e6753848e47ec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::tv::Render::Render</definition>
        <argsstring>(Info in_info)</argsstring>
        <name>Render</name>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_info" kindref="compound">Info</ref></type>
          <declname>in_info</declname>
        </param>
        <briefdescription>
<para>Construct render. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_info</parametername>
</parameternamelist>
<parameterdescription>
<para>info about the ranks and phases </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="250" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="54" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1ab94eddae1ccc7e17d4d8d4760a19e815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::tv::Render::Render</definition>
        <argsstring>(std::array&lt; std::string, 3 &gt; in_qoi_request, bool in_continuous_object_qoi, Info &amp;in_info, std::array&lt; uint64_t, 3 &gt; in_grid_size, double in_object_jitter, std::string in_output_dir, std::string in_output_file_stem, double in_resolution, bool in_save_meshes, bool in_save_pngs, PhaseType in_selected_phase=std::numeric_limits&lt; PhaseType &gt;::max())</argsstring>
        <name>Render</name>
        <param>
          <type>std::array&lt; std::string, 3 &gt;</type>
          <declname>in_qoi_request</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_continuous_object_qoi</declname>
        </param>
        <param>
          <type><ref refid="structvt_1_1tv_1_1_info" kindref="compound">Info</ref> &amp;</type>
          <declname>in_info</declname>
        </param>
        <param>
          <type>std::array&lt; uint64_t, 3 &gt;</type>
          <declname>in_grid_size</declname>
        </param>
        <param>
          <type>double</type>
          <declname>in_object_jitter</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>in_output_dir</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>in_output_file_stem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>in_resolution</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_save_meshes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_save_pngs</declname>
        </param>
        <param>
          <type>PhaseType</type>
          <declname>in_selected_phase</declname>
          <defval>std::numeric_limits&lt; PhaseType &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Construct render. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_qoi_request</parametername>
</parameternamelist>
<parameterdescription>
<para>description of rank and object quantities of interest </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_continuous_object_qoi</parametername>
</parameternamelist>
<parameterdescription>
<para>always treat object QOI as continuous or not </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_info</parametername>
</parameternamelist>
<parameterdescription>
<para>general info </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_grid_size</parametername>
</parameternamelist>
<parameterdescription>
<para>triplet containing grid sizes in each dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_object_jitter</parametername>
</parameternamelist>
<parameterdescription>
<para>coefficient of random jitter with magnitude &lt; 1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_output_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>output directory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_output_file_stem</parametername>
</parameternamelist>
<parameterdescription>
<para>file name stem </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>grid_resolution value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_selected_phase</parametername>
</parameternamelist>
<parameterdescription>
<para>the phase selected (if max then render all) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="265" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="115" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1a3107bedcc34f2ce7862b213b3bb318cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::Render::renderPNG</definition>
        <argsstring>(PhaseType phase, vtkPolyData *rank_mesh, vtkPolyData *object_mesh, uint64_t edge_width, double glyph_factor, uint64_t win_size, uint64_t font_size, std::string output_dir, std::string output_file_stem)</argsstring>
        <name>renderPNG</name>
        <param>
          <type>PhaseType</type>
          <declname>phase</declname>
        </param>
        <param>
          <type>vtkPolyData *</type>
          <declname>rank_mesh</declname>
        </param>
        <param>
          <type>vtkPolyData *</type>
          <declname>object_mesh</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>edge_width</declname>
        </param>
        <param>
          <type>double</type>
          <declname>glyph_factor</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>win_size</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>font_size</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>output_dir</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>output_file_stem</declname>
        </param>
        <briefdescription>
<para>Export a visualization PNG from meshes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phase</parametername>
</parameternamelist>
<parameterdescription>
<para>Phase to render. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rank_mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>Mesh data for the ranks. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>object_mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>Mesh data for the objects. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the edges in the visualization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_volume</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum volume of communications </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>glyph_factor</parametername>
</parameternamelist>
<parameterdescription>
<para>Factor to control the size of glyphs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>win_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the render window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Directory in which to output artifacts </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_file_stem</parametername>
</parameternamelist>
<parameterdescription>
<para>Stem for the artifact naming </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A smart pointer to the resulting render window. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="292" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="800" bodyend="1022"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_render_1a247884ebc75508f41d49451236c47768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::Render::generate</definition>
        <argsstring>(uint64_t font_size=50, uint64_t win_size=2000)</argsstring>
        <name>generate</name>
        <param>
          <type>uint64_t</type>
          <declname>font_size</declname>
          <defval>50</defval>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>win_size</declname>
          <defval>2000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="303" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.cc" bodystart="1024" bodyend="1101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Handler for visualization. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>vt::tv::Info</label>
        <link refid="structvt_1_1tv_1_1_info"/>
      </node>
      <node id="1">
        <label>vt::tv::Render</label>
        <link refid="structvt_1_1tv_1_1_render"/>
        <childnode refid="2" relation="usage">
          <edgelabel>info_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" line="108" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h" bodystart="108" bodyend="304"/>
    <listofallmembers>
      <member refid="structvt_1_1tv_1_1_render_1a89c91a14e4943f0914ef9a4d23e45e2f" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>ColorType</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a0229871ee15e1fb2ce80d3f565cdaf5f" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>computeMaxObjectVolume_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1aae2273143fba68bcaabfb93d554dea78" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>computeObjectQOIRange_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a1e7dbcf29f218082f6c135efc9666b8a" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>computeRankQOIAverage_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a7b7f475cc6bd02f32ef45d60f8f85912" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>computeRankQOIRange_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a67b15ab86c72a7a618879de93dbf0148" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>continuous_object_qoi_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a5c19315666f002badb959e02e25210b2" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>createColorTransferFunction_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a01d1d53e139f1950699757b1950994a4" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>createObjectMapping_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a0e82421b6aabca9804cd2fbf7f2ec489" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>createObjectMesh_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1afc45da89523b9c49628b4b06e9dd3250" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>createRankMesh_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1ae6d11c8379f6c1113124a65a17a5563b" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>createRanksMapper_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a12b29a4f8a7d4883711fc1a324cd7aed" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>createScalarBarActor_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a247884ebc75508f41d49451236c47768" prot="public" virt="non-virtual"><scope>vt::tv::Render</scope><name>generate</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a0a0e5c0176dd71dbe637a4c1a0f4f6a7" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>getRgbFromTab20Colormap_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a16584562c66173280378508761945b01" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>globalIDToCartesian_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1ad40ffa0e48b94977ca3d4cdf12be7597" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>grid_resolution_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1ae2f97f14bd041797c1d21d508c22ecee" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>grid_size_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a0b4cf4aef6e3c8b474a43a9553a22157" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>info_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a6baf946663403029f0f716e4465eaa12" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>jitter_dims_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a30f23046875fe9d7b31ae1b35517e3f3" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>max_o_per_dim_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a80659dc38bbaf6b2d41085301fd2b5c5" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>n_phases_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a050a48ecb0fc44b468b3abaa4bb3fc08" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>n_ranks_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a0cd90a40926b16176aa81645d53957f0" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>object_jitter_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a7af1fa4d45362533170bc60a59a8ebb0" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>object_load_max_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a401d89d3353455d097908b1f67d32582" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>object_qoi_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1af26ba6aed2a9169be26348ac47a8d2bf" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>object_qoi_max_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a4e726008ce5adcb99905e59f68ef58c1" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>object_qoi_range_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1acf9e679b2788065ccda3a3bb071d6d03" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>object_volume_max_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1ae85e4817e647277e442009631b9b6ed2" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>output_dir_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1aa7776ac0c7f7d8c99892501acf2e4e86" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>output_file_stem_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a2683e515ee0d31f38bb67a326cf3cc91" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>rank_dims_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1adaf3c6b1b5737484157e1d91de44a37a" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>rank_qoi_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a9199c765b4abb055acd70cae053876aa" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>rank_qoi_range_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1aa66d973e7c9db250b6e6753848e47ec2" prot="public" virt="non-virtual"><scope>vt::tv::Render</scope><name>Render</name></member>
      <member refid="structvt_1_1tv_1_1_render_1ab94eddae1ccc7e17d4d8d4760a19e815" prot="public" virt="non-virtual"><scope>vt::tv::Render</scope><name>Render</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a3107bedcc34f2ce7862b213b3bb318cd" prot="public" virt="non-virtual"><scope>vt::tv::Render</scope><name>renderPNG</name></member>
      <member refid="structvt_1_1tv_1_1_render_1aac9ad9dc8e2dedf12d6595f1f3946b70" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>save_meshes_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a6123ac8e19e092659e26f42852bc680c" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>save_pngs_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1a87f5c5fa945e189eb97f22258cd25fe6" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>selected_phase_</name></member>
      <member refid="structvt_1_1tv_1_1_render_1ac5a5f3c20183141a7232ca3e0489875a" prot="private" virt="non-virtual"><scope>vt::tv::Render</scope><name>setupRenderer_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
