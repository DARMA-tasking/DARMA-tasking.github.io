<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1tv_1_1utility_1_1_decompressor" kind="struct" language="C++" prot="public">
    <compoundname>vt::tv::utility::Decompressor</compoundname>
    <basecompoundref refid="structvt_1_1tv_1_1utility_1_1_decompressor_base" prot="public" virt="non-virtual">vt::tv::utility::DecompressorBase</basecompoundref>
    <includes refid="decompressor_8h" local="no">decompressor.h</includes>
    <templateparamlist>
      <param>
        <type>typename Readable</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_decompressor_1a5bd4e048e021e9d233dcfaefabdfa590" prot="private" static="no" mutable="no">
        <type>Readable</type>
        <definition>Readable vt::tv::utility::Decompressor&lt; Readable &gt;::r_</definition>
        <argsstring></argsstring>
        <name>r_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" line="101" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_decompressor_1acac0551a05163318225062dba43d7481" prot="private" static="no" mutable="no">
        <type>BrotliDecoderState *</type>
        <definition>BrotliDecoderState* vt::tv::utility::Decompressor&lt; Readable &gt;::dec_</definition>
        <argsstring></argsstring>
        <name>dec_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Underlying decoder state </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" line="102" column="22" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_decompressor_1ac4d71cc61091dcdaa8f41a4e1528a9dc" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::tv::utility::Decompressor&lt; Readable &gt;::in_buf_len_</definition>
        <argsstring></argsstring>
        <name>in_buf_len_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Input buffer max length (chunk) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" line="103" column="15" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_decompressor_1af3534f691415abc23e9edd7ec9f3bdfa" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; uint8_t[]&gt;</type>
        <definition>std::unique_ptr&lt;uint8_t[]&gt; vt::tv::utility::Decompressor&lt; Readable &gt;::buf_in_</definition>
        <argsstring></argsstring>
        <name>buf_in_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Temporary input buffer to read </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" line="104" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_decompressor_1a97d3d12677a0b27634f4bad87b6d991e" prot="private" static="no" mutable="no">
        <type>uint8_t const  *</type>
        <definition>uint8_t const* vt::tv::utility::Decompressor&lt; Readable &gt;::next_in_</definition>
        <argsstring></argsstring>
        <name>next_in_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Next input pointer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" line="105" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_decompressor_1a5126dc5f2c833c4c6242b94af14635fb" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::tv::utility::Decompressor&lt; Readable &gt;::avail_in_</definition>
        <argsstring></argsstring>
        <name>avail_in_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Available length of input data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" line="106" column="15" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_decompressor_1a857375e9562ef4dac842b95983b11808" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::tv::utility::Decompressor&lt; Readable &gt;::Decompressor</definition>
        <argsstring>(Readable in_r, std::size_t buf_len_=1&lt;&lt; 16)</argsstring>
        <name>Decompressor</name>
        <param>
          <type>Readable</type>
          <declname>in_r</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>buf_len_</declname>
          <defval>1&lt;&lt; 16</defval>
        </param>
        <briefdescription>
<para>Construct the decompressor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_r</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream-like readable to read from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf_len_</parametername>
</parameternamelist>
<parameterdescription>
<para>the temporary buffer length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" line="70" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.impl.h" bodystart="56" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_decompressor_1a77fce4f70e09d245b818c29ab2dea304" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>vt::tv::utility::Decompressor&lt; Readable &gt;::~Decompressor</definition>
        <argsstring>()</argsstring>
        <name>~Decompressor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" line="72" column="11" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.impl.h" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_decompressor_1adb57893c4cca995ba9be1942bc8a48c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t vt::tv::utility::Decompressor&lt; Readable &gt;::read</definition>
        <argsstring>(uint8_t *output_buffer, std::size_t bytes_to_output) override</argsstring>
        <name>read</name>
        <reimplements refid="structvt_1_1tv_1_1utility_1_1_decompressor_base_1a3dd36ded7dc49b0181aa9f81e6a4fd1f">read</reimplements>
        <param>
          <type>uint8_t *</type>
          <declname>output_buffer</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>bytes_to_output</declname>
        </param>
        <briefdescription>
<para>Read bytes into output buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">output_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the output buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bytes_to_output</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bytes in the output buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>how many bytes it actually read into the buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" line="83" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.impl.h" bodystart="84" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_decompressor_1a7feccbdbc9e86e98e141f444c3dcecaa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool vt::tv::utility::Decompressor&lt; Readable &gt;::done</definition>
        <argsstring>() const override</argsstring>
        <name>done</name>
        <reimplements refid="structvt_1_1tv_1_1utility_1_1_decompressor_base_1a017d16466ce4edf0e3ef1c681ff89239">done</reimplements>
        <briefdescription>
<para>Whether we are done with decompressing the file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether we are done </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" line="90" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.impl.h" bodystart="71" bodyend="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_decompressor_1ad68f215eb9e5d4552b63bc04672d1812" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vt::tv::utility::Decompressor&lt; Readable &gt;::getMoreInput</definition>
        <argsstring>()</argsstring>
        <name>getMoreInput</name>
        <briefdescription>
<para>Get more input, we need it to keep streaming output. </para>
        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>whether more input is available </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" line="98" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.impl.h" bodystart="146" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A streaming decompressor for reading an input buffer with brotli compression. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>vt::tv::utility::Decompressor&lt; Readable &gt;</label>
        <link refid="structvt_1_1tv_1_1utility_1_1_decompressor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vt::tv::utility::DecompressorBase</label>
        <link refid="structvt_1_1tv_1_1utility_1_1_decompressor_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>vt::tv::utility::Decompressor&lt; Readable &gt;</label>
        <link refid="structvt_1_1tv_1_1utility_1_1_decompressor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vt::tv::utility::DecompressorBase</label>
        <link refid="structvt_1_1tv_1_1utility_1_1_decompressor_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" line="63" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/decompressor.h" bodystart="63" bodyend="107"/>
    <listofallmembers>
      <member refid="structvt_1_1tv_1_1utility_1_1_decompressor_1a5126dc5f2c833c4c6242b94af14635fb" prot="private" virt="non-virtual"><scope>vt::tv::utility::Decompressor</scope><name>avail_in_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_decompressor_1af3534f691415abc23e9edd7ec9f3bdfa" prot="private" virt="non-virtual"><scope>vt::tv::utility::Decompressor</scope><name>buf_in_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_decompressor_1acac0551a05163318225062dba43d7481" prot="private" virt="non-virtual"><scope>vt::tv::utility::Decompressor</scope><name>dec_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_decompressor_1a857375e9562ef4dac842b95983b11808" prot="public" virt="non-virtual"><scope>vt::tv::utility::Decompressor</scope><name>Decompressor</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_decompressor_1a7feccbdbc9e86e98e141f444c3dcecaa" prot="public" virt="virtual"><scope>vt::tv::utility::Decompressor</scope><name>done</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_decompressor_1ad68f215eb9e5d4552b63bc04672d1812" prot="protected" virt="non-virtual"><scope>vt::tv::utility::Decompressor</scope><name>getMoreInput</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_decompressor_1ac4d71cc61091dcdaa8f41a4e1528a9dc" prot="private" virt="non-virtual"><scope>vt::tv::utility::Decompressor</scope><name>in_buf_len_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_decompressor_1a97d3d12677a0b27634f4bad87b6d991e" prot="private" virt="non-virtual"><scope>vt::tv::utility::Decompressor</scope><name>next_in_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_decompressor_1a5bd4e048e021e9d233dcfaefabdfa590" prot="private" virt="non-virtual"><scope>vt::tv::utility::Decompressor</scope><name>r_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_decompressor_1adb57893c4cca995ba9be1942bc8a48c0" prot="public" virt="virtual"><scope>vt::tv::utility::Decompressor</scope><name>read</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_decompressor_1a77fce4f70e09d245b818c29ab2dea304" prot="public" virt="virtual"><scope>vt::tv::utility::Decompressor</scope><name>~Decompressor</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_decompressor_base_1a3be09b4e621ea65dfc7bedb10d38215f" prot="public" virt="virtual"><scope>vt::tv::utility::Decompressor</scope><name>~DecompressorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
