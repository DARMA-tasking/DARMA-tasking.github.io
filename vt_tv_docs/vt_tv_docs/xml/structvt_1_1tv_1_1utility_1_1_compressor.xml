<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1tv_1_1utility_1_1_compressor" kind="struct" language="C++" prot="public">
    <compoundname>vt::tv::utility::Compressor</compoundname>
    <includes refid="compressor_8h" local="no">compressor.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_compressor_1a69790d626d7e6015d2e3abf897f6df39" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::tv::utility::Compressor::quality_</definition>
        <argsstring></argsstring>
        <name>quality_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The compressor quality </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" line="110" column="7" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_compressor_1acd8f2a68ce83b08b710065b345fb8243" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vt::tv::utility::Compressor::window_bits_</definition>
        <argsstring></argsstring>
        <name>window_bits_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The compressor lgwin bits </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" line="111" column="7" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_compressor_1a9242dbc21f6ecf65d8344e6c1be2402f" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t vt::tv::utility::Compressor::buf_size_</definition>
        <argsstring></argsstring>
        <name>buf_size_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The output buffer size </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" line="112" column="15" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_compressor_1afaec62dc28e1daf95babaf1aac45d73e" prot="private" static="no" mutable="no">
        <type>BrotliEncoderState *</type>
        <definition>BrotliEncoderState* vt::tv::utility::Compressor::enc_</definition>
        <argsstring></argsstring>
        <name>enc_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Underlying encoder state </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" line="113" column="22" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1utility_1_1_compressor_1aeec93fffa41503330040101eed204b0a" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; uint8_t[]&gt;</type>
        <definition>std::unique_ptr&lt;uint8_t[]&gt; vt::tv::utility::Compressor::out_buf_</definition>
        <argsstring></argsstring>
        <name>out_buf_</name>
        <initializer>=
    nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The temporary output buffer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" line="114" column="19" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_compressor_1a6560b4da3158288c2275b44629bf7a3d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::tv::utility::Compressor::Compressor</definition>
        <argsstring>(int in_quality, int in_window_bits, std::size_t buf_size=1&lt;&lt; 20)</argsstring>
        <name>Compressor</name>
        <param>
          <type>int</type>
          <declname>in_quality</declname>
        </param>
        <param>
          <type>int</type>
          <declname>in_window_bits</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>buf_size</declname>
          <defval>1&lt;&lt; 20</defval>
        </param>
        <briefdescription>
<para>Construct a compressor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_quality</parametername>
</parameternamelist>
<parameterdescription>
<para>the quality of compression </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_window_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bits for the lgwin </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the temporary buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" line="67" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.cc" bodystart="48" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_compressor_1af8bf83febe0bcefb255f0556b445d0d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::tv::utility::Compressor::~Compressor</definition>
        <argsstring>()</argsstring>
        <name>~Compressor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" line="70" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.cc" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_compressor_1ad7614f1f67565c24d93fe4632c413c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StreamLike</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::tv::utility::Compressor::write</definition>
        <argsstring>(StreamLike &amp;s, uint8_t const *buffer, std::size_t const size)</argsstring>
        <name>write</name>
        <param>
          <type>StreamLike &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>std::size_t const</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compress data and output to writable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream/writable to write compressed data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to compress </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the buffer to compress</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it was successful or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" line="82" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.impl.h" bodystart="54" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_compressor_1aa8ab621c50cc6be8130c1f2bc2253bfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StreamLike</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::tv::utility::Compressor::finish</definition>
        <argsstring>(StreamLike &amp;s)</argsstring>
        <name>finish</name>
        <param>
          <type>StreamLike &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Finish writing data and output to writable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream/writable to write compressed data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it was successful or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" line="92" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.impl.h" bodystart="86" bodyend="89"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1utility_1_1_compressor_1a24a947e54aef72a33f878065047bbfcb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StreamLike</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool vt::tv::utility::Compressor::writeImpl</definition>
        <argsstring>(StreamLike &amp;s, uint8_t const *buffer, std::size_t const size, bool finish_)</argsstring>
        <name>writeImpl</name>
        <param>
          <type>StreamLike &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>std::size_t const</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>finish_</declname>
        </param>
        <briefdescription>
<para>Compress data and output to writable, optionally finishing. </para>
        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream/writable to write compressed data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to compress </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the buffer to compress </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">finish_</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to finish writing</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether it was successful or not </para>
</simplesect>
</para>
</internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" line="106" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.impl.h" bodystart="61" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A streaming compressor for outputting data with brotli compression. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" line="59" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/compressor.h" bodystart="59" bodyend="116"/>
    <listofallmembers>
      <member refid="structvt_1_1tv_1_1utility_1_1_compressor_1a9242dbc21f6ecf65d8344e6c1be2402f" prot="private" virt="non-virtual"><scope>vt::tv::utility::Compressor</scope><name>buf_size_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_compressor_1a6560b4da3158288c2275b44629bf7a3d" prot="public" virt="non-virtual"><scope>vt::tv::utility::Compressor</scope><name>Compressor</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_compressor_1afaec62dc28e1daf95babaf1aac45d73e" prot="private" virt="non-virtual"><scope>vt::tv::utility::Compressor</scope><name>enc_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_compressor_1aa8ab621c50cc6be8130c1f2bc2253bfd" prot="public" virt="non-virtual"><scope>vt::tv::utility::Compressor</scope><name>finish</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_compressor_1aeec93fffa41503330040101eed204b0a" prot="private" virt="non-virtual"><scope>vt::tv::utility::Compressor</scope><name>out_buf_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_compressor_1a69790d626d7e6015d2e3abf897f6df39" prot="private" virt="non-virtual"><scope>vt::tv::utility::Compressor</scope><name>quality_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_compressor_1acd8f2a68ce83b08b710065b345fb8243" prot="private" virt="non-virtual"><scope>vt::tv::utility::Compressor</scope><name>window_bits_</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_compressor_1ad7614f1f67565c24d93fe4632c413c11" prot="public" virt="non-virtual"><scope>vt::tv::utility::Compressor</scope><name>write</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_compressor_1a24a947e54aef72a33f878065047bbfcb" prot="private" virt="non-virtual"><scope>vt::tv::utility::Compressor</scope><name>writeImpl</name></member>
      <member refid="structvt_1_1tv_1_1utility_1_1_compressor_1af8bf83febe0bcefb255f0556b445d0d6" prot="public" virt="non-virtual"><scope>vt::tv::utility::Compressor</scope><name>~Compressor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
