<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="mainpage_8md" kind="file" language="Markdown">
    <compoundname>mainpage.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">\mainpage<sp/>Introduction</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\tableofcontents</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\section<sp/>vttv_what_is<sp/>What<sp/>is<sp/>VT<sp/>TV?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`vt-tv`<sp/>provides<sp/>visualizations<sp/>of<sp/>the<sp/>work-to-rank<sp/>mappings,<sp/>communications,<sp/>and<sp/>memory<sp/>usage<sp/>of<sp/>an<sp/>application.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Specifically,<sp/>the<sp/>task<sp/>visualizer<sp/>takes<sp/>in<sp/>JSON<sp/>files<sp/>that<sp/>describe<sp/>work<sp/>as<sp/>a<sp/>series<sp/>of<sp/>phases<sp/>and<sp/>subphases<sp/>that<sp/>contain<sp/>1)<sp/>tasks<sp/>for<sp/>each<sp/>rank,<sp/>2)<sp/>communications,<sp/>and<sp/>3)<sp/>other<sp/>user-defined<sp/>fields<sp/>(such<sp/>as<sp/>memory<sp/>usage).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Using<sp/>such<sp/>input<sp/>data,<sp/>the<sp/>task<sp/>visualizer<sp/>produces<sp/>Exodus<sp/>meshes<sp/>to<sp/>describe<sp/>the<sp/>ranks<sp/>and<sp/>objects<sp/>over<sp/>time,<sp/>which<sp/>can<sp/>be<sp/>visualized<sp/>using<sp/>Paraview.<sp/>Additionally,<sp/>the<sp/>task<sp/>visualizer<sp/>can<sp/>produce<sp/>PNGs<sp/>directly<sp/>using<sp/>a<sp/>VTK<sp/>workflow<sp/>to<sp/>render<sp/>a<sp/>visualization<sp/>of<sp/>ranks<sp/>and<sp/>tasks<sp/>over<sp/>phases.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\section<sp/>vttv_getting_started<sp/>Getting<sp/>Started</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>need<sp/>the<sp/>following<sp/>dependencies:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>A<sp/>C++<sp/>compiler<sp/>that<sp/>supports<sp/>C++17</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>[`cmake`](https://cmake.org/cmake/help/latest/)<sp/>&gt;=<sp/>3.17</highlight></codeline>
<codeline><highlight class="normal">3.<sp/>[`VTK`](https://docs.vtk.org/en/latest/index.html)<sp/>(build<sp/>instructions<sp/>[here](https://gitlab.kitware.com/vtk/vtk/-/blob/master/Documentation/docs/build_instructions/build.md))</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Begin<sp/>by<sp/>cloning<sp/>`vt-tv`:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">git<sp/>clone<sp/>https://github.com/DARMA-tasking/vt-tv.git</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">_From<sp/>now<sp/>on,<sp/>we<sp/>will<sp/>assume<sp/>that<sp/>the<sp/>`vt-tv`<sp/>source<sp/>is<sp/>located<sp/>in<sp/>`${VTTV_SOURCE_DIR}`._</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\section<sp/>vttv_installation_and_usage<sp/>Installation<sp/>and<sp/>Usage</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`vt-tv`<sp/>can<sp/>be<sp/>installed<sp/>as<sp/>either<sp/>a<sp/>standalone<sp/>C++<sp/>app<sp/>or<sp/>as<sp/>a<sp/>Python<sp/>module.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\subsection<sp/>vttv_standalone<sp/>Standalone</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\subsubsection<sp/>vttv_standaone_build<sp/>1.<sp/>Build</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>the<sp/>simplest<sp/>build,<sp/>run<sp/>from<sp/>`${VTTV_SOURCE_DIR}`:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">VTK_DIR=/path/to/vtk/build<sp/>./build.sh</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>build<sp/>and<sp/>run<sp/>tests,<sp/>add<sp/>the<sp/>`--tests-run`<sp/>flag:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">VTK_DIR=/path/to/vtk/build<sp/>./build.sh<sp/>--tests-run</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(More<sp/>documentation<sp/>for<sp/>`build.sh`<sp/>can<sp/>be<sp/>found<sp/>within<sp/>the<sp/>script<sp/>itself,<sp/>including<sp/>examples.)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Alternatively,<sp/>for<sp/>an<sp/>interactive<sp/>build<sp/>process,<sp/>run:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">./interactive_build.sh</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">_From<sp/>now<sp/>on,<sp/>we<sp/>will<sp/>assume<sp/><sp/>that<sp/>the<sp/>`vt-tv`<sp/>build<sp/>is<sp/>in<sp/>`${VTTV_BUILD_DIR}`._</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\subsubsection<sp/>vttv_standalone_usage<sp/>2.<sp/>Usage</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`vt-tv`<sp/>requires<sp/>two<sp/>inputs:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>One<sp/>or<sp/>more<sp/>JSON<sp/>data<sp/>files</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>A<sp/>YAML<sp/>configuration<sp/>file<sp/>(which<sp/>contains<sp/>the<sp/>path<sp/>to<sp/>the<sp/>JSON<sp/>data<sp/>files)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>basic<sp/>call<sp/>to<sp/>`vt-tv`<sp/>is:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">${VTTV_BUILD_DIR}/apps/vt_standalone<sp/>-c<sp/>path/to/config</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">_Note:<sp/>The_<sp/>`path/to/config`<sp/>_argument<sp/>should<sp/>be<sp/>relative<sp/>to_<sp/>`${VTTV_SOURCE_DIR}`<sp/>_(see<sp/>example<sp/>below)._</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>YAML<sp/>Input</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>YAML<sp/>configuration<sp/>exemplar<sp/>can<sp/>be<sp/>found<sp/>in<sp/>`${VTTV_SOURCE_DIR}/config/conf.yaml`.<sp/>To<sp/>use<sp/>it,<sp/>run</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">${VTTV_BUILD_DIR}/apps/vt_standalone<sp/>-c<sp/>config/conf.yaml</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>JSON<sp/>Data<sp/>Files</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Sample<sp/>JSON<sp/>data<sp/>files<sp/>are<sp/>provided<sp/>in<sp/>`${VTTV_SOURCE_DIR}/tests/unit/lb_test_data`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Information<sp/>regarding<sp/>the<sp/>JSON<sp/>format<sp/>can<sp/>be<sp/>found<sp/>in<sp/>vt&apos;s<sp/>[documentation](https://darma-tasking.github.io/docs/html/node-lb-data.html);<sp/>the<sp/>JSON<sp/>schema<sp/>validator<sp/>is<sp/>located<sp/>in<sp/>the<sp/>vt<sp/>[repo](https://github.com/DARMA-tasking/vt/blob/develop/scripts/JSON_data_files_validator.py).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Additionally,<sp/>DARMA-tasking&apos;s<sp/>Load<sp/>Balancing<sp/>Analysis<sp/>Framework<sp/>(LBAF)<sp/>provides<sp/>a<sp/>Python<sp/>script<sp/>([lbsJSONDataFilesMaker.py](https://github.com/DARMA-tasking/LB-analysis-framework/blob/develop/src/lbaf/Utils/lbsJSONDataFilesMaker.py))<sp/>that<sp/>may<sp/>be<sp/>used<sp/>to<sp/>generate<sp/>JSON<sp/>data<sp/>files.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\subsection<sp/>vttv_python_module<sp/>Python<sp/>Module</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\subsubsection<sp/>vttv_python_module_deps<sp/>Dependencies</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>addition<sp/>to<sp/>the<sp/>basic<sp/>`vt-tv`<sp/>dependencies<sp/>listed<sp/>above,<sp/>you<sp/>also<sp/>need:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>A<sp/>Python<sp/>version<sp/>between<sp/>3.8<sp/>-<sp/>3.11</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>[`nanobind`](https://nanobind.readthedocs.io/en/latest/),<sp/>which<sp/>can<sp/>be<sp/>installed<sp/>with:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">pip<sp/>install<sp/>nanobind</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\subsubsection<sp/>vttv_python_module_install<sp/>1.<sp/>Install</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">First,<sp/>specify<sp/>the<sp/>location<sp/>of<sp/>your<sp/>`VTK`<sp/>build<sp/>(see<sp/>above)<sp/>with:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">export<sp/>VTK_DIR=/path/to/vtk/build</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Optional:<sp/>To<sp/>specify<sp/>the<sp/>number<sp/>of<sp/>parallel<sp/>jobs<sp/>to<sp/>use<sp/>during<sp/>the<sp/>build,<sp/>you<sp/>can<sp/>set<sp/>the<sp/>`VT_TV_CMAKE_JOBS`<sp/>environment<sp/>variable:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">export<sp/>VT_TV_CMAKE_JOBS=8</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Then<sp/>install<sp/>the<sp/>binded<sp/>`vt-tv`<sp/>Python<sp/>module<sp/>with:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">pip<sp/>install<sp/>${VTTV_SOURCE_DIR}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">_Note:<sp/>Behind<sp/>the<sp/>scenes,<sp/>the<sp/>usual<sp/>`cmake`<sp/>and<sp/>`make`<sp/>commands<sp/>are<sp/>run.<sp/>Depending<sp/>on<sp/>your<sp/>system,<sp/>this<sp/>can<sp/>cause<sp/>the<sp/>install<sp/>process<sp/>to<sp/>be<sp/>lengthy<sp/>as<sp/>it<sp/>will<sp/>be<sp/>compiling<sp/>the<sp/>entire<sp/>`vt-tv`<sp/>library._</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\subsubsection<sp/>vttv_python_module_usage<sp/>2.<sp/>Usage</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Import<sp/>the<sp/>`vt-tv`<sp/>module<sp/>into<sp/>your<sp/>project<sp/>using:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">import<sp/>vttv</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>only<sp/>function<sp/>you<sp/>need<sp/>is<sp/>`vttv.tvFromJson`,<sp/>which<sp/>has<sp/>the<sp/>following<sp/>(C++)<sp/>function<sp/>signature:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal">void<sp/>tvFromJson(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>std::vector&lt;std::string&gt;&amp;<sp/>input_json_per_rank_list,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>std::string&amp;<sp/>input_yaml_params_str,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>num_ranks</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>parameters<sp/>are:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`input_json_per_rank_list`:<sp/>A<sp/>list<sp/>of<sp/>the<sp/>input<sp/>JSON<sp/>data<sp/>strings<sp/>(one<sp/>string<sp/>per<sp/>rank).<sp/>In<sp/>the<sp/>C++<sp/>standalone<sp/>app,<sp/>this<sp/>equates<sp/>to<sp/>the<sp/>input<sp/>JSON<sp/>data<sp/>files.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`input_yaml_params_str`:<sp/>The<sp/>visualization<sp/>and<sp/>output<sp/>configuration<sp/>data,<sp/>formatted<sp/>as<sp/>a<sp/>dictionary<sp/>but<sp/>exported<sp/>as<sp/>a<sp/>string<sp/>(see<sp/>example<sp/>below).<sp/>This<sp/>equates<sp/>to<sp/>the<sp/>standalone<sp/>app&apos;s<sp/>input<sp/>YAML<sp/>configuration<sp/>file.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`num_ranks`:<sp/>The<sp/>number<sp/>of<sp/>ranks<sp/>to<sp/>be<sp/>visualized<sp/>by<sp/>`vt-tv`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">As<sp/>an<sp/>example,<sp/>here<sp/>is<sp/>the<sp/>(emptied)<sp/>code<sp/>used<sp/>by<sp/>the<sp/>[`Load<sp/>Balancing<sp/>Analysis<sp/>Framework`](https://github.com/DARMA-tasking/LB-analysis-framework)<sp/>to<sp/>call<sp/>`vt-tv`:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```python</highlight></codeline>
<codeline><highlight class="normal">import<sp/>vttv</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Populate<sp/>with<sp/>the<sp/>JSON<sp/>data<sp/>from<sp/>each<sp/>rank</highlight></codeline>
<codeline><highlight class="normal">ranks_json_str<sp/>=<sp/>[]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Populate<sp/>with<sp/>the<sp/>desired<sp/>configuration<sp/>parameters</highlight></codeline>
<codeline><highlight class="normal">vttv_params<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;x_ranks&quot;:<sp/>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;y_ranks&quot;:<sp/>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;z_ranks&quot;:<sp/>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;object_jitter&quot;:<sp/>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;rank_qoi&quot;:<sp/>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;object_qoi&quot;:<sp/>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;save_meshes&quot;:<sp/>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;force_continuous_object_qoi&quot;:<sp/>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;output_visualization_dir&quot;:<sp/>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;output_visualization_file_stem&quot;:</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Populate<sp/>with<sp/>number<sp/>of<sp/>ranks<sp/>used<sp/>in<sp/>the<sp/>current<sp/>problem</highlight></codeline>
<codeline><highlight class="normal">num_ranks<sp/>=</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Call<sp/>vt-tv</highlight></codeline>
<codeline><highlight class="normal">vttv.tvFromJson(ranks_json_str,<sp/>str(vttv_params),<sp/>num_ranks)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\section<sp/>vttv_design<sp/>Design<sp/>Information</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\subsection<sp/>vttv_qoi<sp/>1.<sp/>Quantities<sp/>of<sp/>Interest</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`vt-tv`<sp/>visualizes<sp/>various<sp/>Quantities<sp/>of<sp/>Interest<sp/>(QOI)<sp/>as<sp/>requested<sp/>by<sp/>the<sp/>user<sp/>in<sp/>the<sp/>YAML<sp/>configuration<sp/>file:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```yaml</highlight></codeline>
<codeline><highlight class="normal">visualization:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>Other<sp/>parameters...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>rank_qoi:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>object_qoi:</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">While<sp/>`vt-tv`<sp/>natively<sp/>supports<sp/>a<sp/>variety<sp/>of<sp/>QOI,<sp/>such<sp/>as<sp/>the<sp/>`load`,<sp/>`id`,<sp/>or<sp/>`volume`<sp/>of<sp/>ranks<sp/>and<sp/>objects[^1],<sp/>we<sp/>also<sp/>support<sp/>user-defined<sp/>QOI,<sp/>called<sp/>`attributes`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\subsubsection<sp/>vttv_rank_attributes<sp/>Rank<sp/>Attributes</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Rank<sp/>`attributes`<sp/>are<sp/>defined<sp/>in<sp/>the<sp/>`metadata`<sp/>field<sp/>of<sp/>the<sp/>JSON<sp/>data<sp/>files.<sp/>For<sp/>example:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```json</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;metadata&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;rank&quot;:<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;attributes&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;max_memory_usage&quot;:<sp/>8.0e+9</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">In<sp/>this<sp/>example,<sp/>the<sp/>user<sp/>defines<sp/>`max_memory_usage`<sp/>as<sp/>a<sp/>rank<sp/>attribute.<sp/>This<sp/>can<sp/>then<sp/>be<sp/>specified<sp/>as<sp/>a<sp/>`rank_qoi`<sp/>in<sp/>the<sp/>YAML<sp/>configuration<sp/>file.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\subsubsection<sp/>vttv_obj_attributes<sp/>Object<sp/>Attributes</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Object<sp/>`attributes`<sp/>are<sp/>defined<sp/>in<sp/>the<sp/>`tasks`<sp/>field<sp/>of<sp/>the<sp/>JSON<sp/>data<sp/>files.<sp/>For<sp/>example:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```json</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;phases&quot;:<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;id&quot;:<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;tasks&quot;:<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;entity&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;home&quot;:<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;id&quot;:<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;migratable&quot;:<sp/>true,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;type&quot;:<sp/>&quot;object&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;node&quot;:<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;resource&quot;:<sp/>&quot;cpu&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;time&quot;:<sp/>2.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;attributes&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;shared_bytes&quot;:<sp/>10000.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;shared_id&quot;:<sp/>0</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>this<sp/>case,<sp/>the<sp/>user<sp/>has<sp/>defined<sp/>`shared_bytes`<sp/>and<sp/>`shared_id`<sp/>as<sp/>potential<sp/>QOI.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>the<sp/>YAML<sp/>configuration<sp/>file<sp/>passed<sp/>to<sp/>`vt-tv`,<sp/>they<sp/>may<sp/>specify<sp/>either<sp/>of<sp/>these<sp/>as<sp/>their<sp/>`object_qoi`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\subsection<sp/>vttv_structure<sp/>2.<sp/>General<sp/>Structure</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`vt-tv`<sp/>is<sp/>designed<sp/>according<sp/>to<sp/>the<sp/>following<sp/>hierarchy:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\dot</highlight></codeline>
<codeline><highlight class="normal">digraph<sp/>G<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>rankdir=TD;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Info<sp/>-&gt;<sp/>ObjectInfo;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Info<sp/>-&gt;<sp/>Rank;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Rank<sp/>-&gt;<sp/>PhaseWork;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>PhaseWork<sp/>-&gt;<sp/>ObjectWork;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ObjectWork<sp/>-&gt;<sp/>ObjectCommunicator;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">\enddot</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">_Further<sp/>information<sp/>on<sp/>each<sp/>class,<sp/>including<sp/>methods<sp/>and<sp/>member<sp/>variables,<sp/>can<sp/>be<sp/>found<sp/>in<sp/>the<sp/>documentation._</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Navigating<sp/>the<sp/>Hierarchy</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Users<sp/>should<sp/>interact<sp/>mainly<sp/>with<sp/>the<sp/>overarching<sp/>`Info`<sp/>class,<sp/>which<sp/>contains<sp/>functions<sp/>that<sp/>drill<sp/>down<sp/>the<sp/>hierarchy<sp/>to<sp/>get<sp/>the<sp/>desired<sp/>information.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>example,<sp/>an<sp/>instance<sp/>of<sp/>`Info`<sp/>holds<sp/>getters<sp/>to<sp/>all<sp/>object<sp/>and<sp/>rank<sp/>QOI<sp/>(including<sp/>user_defined<sp/>attributes):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal">auto<sp/>rank_qoi<sp/>=<sp/>info.getRankQOIAtPhase(rank_id,<sp/>phase_id,<sp/>qoi_string);</highlight></codeline>
<codeline><highlight class="normal">auto<sp/>obj_qoi<sp/>=<sp/>info.getObjectQOIAtPhase(obj_id,<sp/>phase_id,<sp/>qoi_string);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">where<sp/>the<sp/>`qoi_string`<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>desired<sp/>QOI,<sp/>like<sp/>&quot;load&quot;<sp/>or<sp/>&quot;id&quot;.<sp/>This<sp/>string<sp/>can<sp/>also<sp/>be<sp/>a<sp/>user-defined<sp/>attribute,<sp/>as<sp/>described<sp/>above.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>ObjectInfo<sp/>vs.<sp/>ObjectWork</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">There<sp/>are<sp/>two<sp/>classes<sp/>that<sp/>hold<sp/>object<sp/>data:<sp/>`ObjectInfo`<sp/>and<sp/>`ObjectWork`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`ObjectInfo`<sp/>holds<sp/>information<sp/>about<sp/>a<sp/>given<sp/>object<sp/>across<sp/>all<sp/>ranks<sp/>and<sp/>phases.<sp/>This<sp/>includes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>the<sp/>ID</highlight></codeline>
<codeline><highlight class="normal">-<sp/>the<sp/>home<sp/>rank<sp/>(where<sp/>the<sp/>object<sp/>originated)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>whether<sp/>the<sp/>object<sp/>is<sp/>migratable<sp/>or<sp/>sentinel<sp/>(stays<sp/>on<sp/>the<sp/>same<sp/>rank)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`ObjectWork`<sp/>holds<sp/>information<sp/>about<sp/>an<sp/>object<sp/>that<sp/>may<sp/>vary<sp/>as<sp/>it<sp/>changes<sp/>rank<sp/>or<sp/>phase,<sp/>such<sp/>as:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>the<sp/>attributes</highlight></codeline>
<codeline><highlight class="normal">-<sp/>the<sp/>communications</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">_Tip:<sp/>As<sp/>discussed<sp/>above,<sp/>users<sp/>should<sp/>utilize<sp/>the<sp/>getters<sp/>present<sp/>in<sp/>`Info`<sp/>rather<sp/>than<sp/>directly<sp/>calling<sp/>these<sp/>classes._</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">\section<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">@m_class{m-note<sp/>m-dim}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">@parblock</highlight></codeline>
<codeline><highlight class="normal">Copyright<sp/>2021-2024<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline><highlight class="normal">(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline><highlight class="normal">Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline><highlight class="normal">modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline><highlight class="normal">AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline><highlight class="normal">IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline><highlight class="normal">ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline><highlight class="normal">LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline><highlight class="normal">CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline><highlight class="normal">SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline><highlight class="normal">INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline><highlight class="normal">CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline><highlight class="normal">ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline><highlight class="normal">POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline><highlight class="normal">@endparblock</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/vt-tv/vt-tv/docs/md/mainpage.md"/>
  </compounddef>
</doxygen>
