<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="types_8h" kind="file" language="C++">
    <compoundname>types.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">variant</includes>
    <includes local="no">string</includes>
    <includedby refid="info_8h" local="yes">/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h</includedby>
    <includedby refid="object__communicator_8h" local="yes">/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h</includedby>
    <includedby refid="object__info_8h" local="yes">/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h</includedby>
    <includedby refid="phase__work_8h" local="yes">/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h</includedby>
    <includedby refid="json__generator_8h" local="yes">/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_generator.h</includedby>
    <includedby refid="json__reader_8cc" local="yes">/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.cc</includedby>
    <includedby refid="json__reader_8h" local="yes">/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h</includedby>
    <includedby refid="qoi__serializer_8h" local="yes">/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/qoi_serializer.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="3">
        <label>variant</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="1">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h</label>
        <link refid="object__communicator_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/rank.h</label>
        <link refid="rank_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/info.h</label>
        <link refid="info_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_info.h</label>
        <link refid="object__info_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/render/render.h</label>
        <link refid="render_8h_source"/>
      </node>
      <node id="4">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_generator.h</label>
        <link refid="json__generator_8h_source"/>
      </node>
      <node id="8">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_work.h</label>
        <link refid="object__work_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/phase_work.h</label>
        <link refid="phase__work_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/json_reader.h</label>
        <link refid="json__reader_8h_source"/>
      </node>
      <node id="12">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/qoi_serializer.h</label>
        <link refid="qoi__serializer_8h_source"/>
      </node>
      <node id="6">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/utility/parse_render.h</label>
        <link refid="parse__render_8h_source"/>
      </node>
      <node id="1">
        <label>/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacevt">vt</innernamespace>
    <innernamespace refid="namespacevt_1_1tv">vt::tv</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="types_8h_1a38265574f6c6637b861c7f7c7766070c" prot="public" static="no">
        <type>uint64_t</type>
        <definition>using vt::tv::PhaseType = typedef uint64_t</definition>
        <argsstring></argsstring>
        <name>PhaseType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" line="53" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a860884ea7f56ffb7e7498377acea262f" prot="public" static="no">
        <type>int16_t</type>
        <definition>using vt::tv::NodeType = typedef int16_t</definition>
        <argsstring></argsstring>
        <name>NodeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" line="54" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a3ddc405c8bee5200851e4be12563f269" prot="public" static="no">
        <type>uint64_t</type>
        <definition>using vt::tv::ElementIDType = typedef uint64_t</definition>
        <argsstring></argsstring>
        <name>ElementIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" line="55" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a1a996cf8382ff4fd9206adfe8b8516b3" prot="public" static="no">
        <type>uint16_t</type>
        <definition>using vt::tv::SubphaseType = typedef uint16_t</definition>
        <argsstring></argsstring>
        <name>SubphaseType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" line="56" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a4e66791aaea359a46ab4ddcacd2b4893" prot="public" static="no">
        <type>uint64_t</type>
        <definition>using vt::tv::UniqueIndexBitType = typedef uint64_t</definition>
        <argsstring></argsstring>
        <name>UniqueIndexBitType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" line="57" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1ac45c3284ae84de71cb1fc09087fc995a" prot="public" static="no">
        <type>double</type>
        <definition>using vt::tv::TimeType = typedef double</definition>
        <argsstring></argsstring>
        <name>TimeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" line="58" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a0d7fde555bbfeca8495f6a22067ec58c" prot="public" static="no">
        <type>uint64_t</type>
        <definition>using vt::tv::CollectionObjGroupIDType = typedef uint64_t</definition>
        <argsstring></argsstring>
        <name>CollectionObjGroupIDType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" line="59" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a3a787083e3304d0204490dc6a9fcfc1d" prot="public" static="no">
        <type>std::variant&lt; int, double, std::string &gt;</type>
        <definition>using vt::tv::QOIVariantTypes = typedef std::variant&lt;int, double, std::string&gt;</definition>
        <argsstring></argsstring>
        <name>QOIVariantTypes</name>
        <briefdescription>
<para>Possible QOIs types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" line="62" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/vt-tv<sp/>=&gt;<sp/>Virtual<sp/>Transport<sp/>--<sp/>Task<sp/>Visualizer</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019-2024<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_VT_TV_API_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_VT_TV_API_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;variant&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vt::tv<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>PhaseType<sp/>=<sp/>uint64_t;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>NodeType<sp/>=<sp/>int16_t;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ElementIDType<sp/>=<sp/>uint64_t;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>SubphaseType<sp/>=<sp/>uint16_t;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UniqueIndexBitType<sp/>=<sp/>uint64_t;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>TimeType<sp/>=<sp/>double;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CollectionObjGroupIDType<sp/>=<sp/>uint64_t;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>QOIVariantTypes<sp/>=<sp/>std::variant&lt;int,<sp/>double,<sp/>std::string&gt;;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>namespace<sp/>vt::tv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_VT_TV_API_TYPES_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/types.h"/>
  </compounddef>
</doxygen>
