<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structvt_1_1tv_1_1_object_communicator" kind="struct" language="C++" prot="public">
    <compoundname>vt::tv::ObjectCommunicator</compoundname>
    <includes refid="object__communicator_8h" local="no">object_communicator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_communicator_1a3ec415e02f40c61a4d10e73886c911ee" prot="private" static="no" mutable="no">
        <type>ElementIDType</type>
        <definition>ElementIDType vt::tv::ObjectCommunicator::object_id_</definition>
        <argsstring></argsstring>
        <name>object_id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The object id </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="230" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_communicator_1a392d21e93f842c50fa4e910eaf929434" prot="private" static="no" mutable="no">
        <type>std::multimap&lt; ElementIDType, double &gt;</type>
        <definition>std::multimap&lt;ElementIDType, double&gt; vt::tv::ObjectCommunicator::received_</definition>
        <argsstring></argsstring>
        <name>received_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The received edges </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="231" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvt_1_1tv_1_1_object_communicator_1a4bde0b44436b2d5facc6c565bd99439f" prot="private" static="no" mutable="no">
        <type>std::multimap&lt; ElementIDType, double &gt;</type>
        <definition>std::multimap&lt;ElementIDType, double&gt; vt::tv::ObjectCommunicator::sent_</definition>
        <argsstring></argsstring>
        <name>sent_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The sent edges </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="232" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1a72904afdf9bf1951d4c8bb09f3fda6db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vt::tv::ObjectCommunicator::ObjectCommunicator</definition>
        <argsstring>()=default</argsstring>
        <name>ObjectCommunicator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="67" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1a8f8fe8ea7ecf8e084de7caf7efd1e4e0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::tv::ObjectCommunicator::ObjectCommunicator</definition>
        <argsstring>(ElementIDType id_in)</argsstring>
        <name>ObjectCommunicator</name>
        <param>
          <type>ElementIDType</type>
          <declname>id_in</declname>
        </param>
        <briefdescription>
<para>Construct an <computeroutput><ref refid="structvt_1_1tv_1_1_object_communicator" kindref="compound">ObjectCommunicator</ref></computeroutput> without any edges. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the object id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="74" column="12" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1adcae8d3445e30c65fb3b919b724dbf86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vt::tv::ObjectCommunicator::ObjectCommunicator</definition>
        <argsstring>(ElementIDType id_in, std::multimap&lt; ElementIDType, double &gt; recv_in, std::multimap&lt; ElementIDType, double &gt; sent_in)</argsstring>
        <name>ObjectCommunicator</name>
        <param>
          <type>ElementIDType</type>
          <declname>id_in</declname>
        </param>
        <param>
          <type>std::multimap&lt; ElementIDType, double &gt;</type>
          <declname>recv_in</declname>
        </param>
        <param>
          <type>std::multimap&lt; ElementIDType, double &gt;</type>
          <declname>sent_in</declname>
        </param>
        <briefdescription>
<para>Construct an <computeroutput><ref refid="structvt_1_1tv_1_1_object_communicator" kindref="compound">ObjectCommunicator</ref></computeroutput> with edges. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the object id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">recv_in</parametername>
</parameternamelist>
<parameterdescription>
<para>receive edges </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sent_in</parametername>
</parameternamelist>
<parameterdescription>
<para>send edges </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="83" column="3" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="83" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1ac3ae7a076eb83825e422a5e72e42a351" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ElementIDType</type>
        <definition>ElementIDType vt::tv::ObjectCommunicator::getObjectId</definition>
        <argsstring>() const</argsstring>
        <name>getObjectId</name>
        <briefdescription>
<para>Get the id of object for this communicator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="96" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1a09520ed35b251720de38a36d4608d4d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::multimap&lt; ElementIDType, double &gt;</type>
        <definition>std::multimap&lt;ElementIDType, double&gt; vt::tv::ObjectCommunicator::getReceived</definition>
        <argsstring>() const</argsstring>
        <name>getReceived</name>
        <briefdescription>
<para>Return all from_object=volume pairs received by object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="101" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1a462e701ee0d510ad1cef84800d1a0cd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; vt::tv::ObjectCommunicator::getReceivedFromObject</definition>
        <argsstring>(ElementIDType id) const</argsstring>
        <name>getReceivedFromObject</name>
        <param>
          <type>ElementIDType</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Return all volumes of messages received from an object if any. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="108" column="15" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="108" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1a490f488b60c558e4949ac57327889b48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::multimap&lt; ElementIDType, double &gt;</type>
        <definition>std::multimap&lt;ElementIDType, double&gt; vt::tv::ObjectCommunicator::getSent</definition>
        <argsstring>() const</argsstring>
        <name>getSent</name>
        <briefdescription>
<para>Return all to_object=volume pairs sent from object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="122" column="17" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1af6e9a63df306b31595ac22e754237b7c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; vt::tv::ObjectCommunicator::getSentToObject</definition>
        <argsstring>(ElementIDType id) const</argsstring>
        <name>getSentToObject</name>
        <param>
          <type>ElementIDType</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Return all volumes of messages sent to an object if any. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="127" column="15" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="127" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1ac66f9514df0c0b7b843914ff3fd7c33b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::ObjectCommunicator::addReceived</definition>
        <argsstring>(ElementIDType from_id, double bytes)</argsstring>
        <name>addReceived</name>
        <param>
          <type>ElementIDType</type>
          <declname>from_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>Add received edge. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">from_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the from object id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="144" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="144" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1a10d9a6680da5d1fd7175323d1302498b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vt::tv::ObjectCommunicator::addSent</definition>
        <argsstring>(ElementIDType to_id, double bytes)</argsstring>
        <name>addSent</name>
        <param>
          <type>ElementIDType</type>
          <declname>to_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>Add sent edge. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">to_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the to object id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="158" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="158" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1a86603d55d100b3b1c47df88b03ce171d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::ObjectCommunicator::getMaxVolume</definition>
        <argsstring>() const</argsstring>
        <name>getMaxVolume</name>
        <briefdescription>
<para>maximum bytes received or sent at this communicator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="169" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="169" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1ae1883356a541a4f8c5430416702b3917" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::ObjectCommunicator::getTotalReceivedVolume</definition>
        <argsstring>() const</argsstring>
        <name>getTotalReceivedVolume</name>
        <briefdescription>
<para>Get the total received communication volume for this communicator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>total received communication volume </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="196" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="196" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1a896befffdcf0677258d6ca938999deec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vt::tv::ObjectCommunicator::getTotalSentVolume</definition>
        <argsstring>() const</argsstring>
        <name>getTotalSentVolume</name>
        <briefdescription>
<para>Get the total sent communication volume for this communicator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>total sent communication volume </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="209" column="10" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="209" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="structvt_1_1tv_1_1_object_communicator_1a5be8b946ff2ee18ce9b1a0fc25efee6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vt::tv::ObjectCommunicator::serialize</definition>
        <argsstring>(SerializerT &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>SerializerT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Serializer for data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>the serializer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="223" column="8" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="223" bodyend="227"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class holding received and sent messages for an object. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" line="66" column="1" bodyfile="/home/runner/work/vt-tv/vt-tv/src/vt-tv/api/object_communicator.h" bodystart="66" bodyend="233"/>
    <listofallmembers>
      <member refid="structvt_1_1tv_1_1_object_communicator_1ac66f9514df0c0b7b843914ff3fd7c33b" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>addReceived</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1a10d9a6680da5d1fd7175323d1302498b" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>addSent</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1a86603d55d100b3b1c47df88b03ce171d" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>getMaxVolume</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1ac3ae7a076eb83825e422a5e72e42a351" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>getObjectId</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1a09520ed35b251720de38a36d4608d4d4" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>getReceived</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1a462e701ee0d510ad1cef84800d1a0cd1" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>getReceivedFromObject</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1a490f488b60c558e4949ac57327889b48" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>getSent</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1af6e9a63df306b31595ac22e754237b7c" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>getSentToObject</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1ae1883356a541a4f8c5430416702b3917" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>getTotalReceivedVolume</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1a896befffdcf0677258d6ca938999deec" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>getTotalSentVolume</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1a3ec415e02f40c61a4d10e73886c911ee" prot="private" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>object_id_</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1a72904afdf9bf1951d4c8bb09f3fda6db" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>ObjectCommunicator</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1a8f8fe8ea7ecf8e084de7caf7efd1e4e0" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>ObjectCommunicator</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1adcae8d3445e30c65fb3b919b724dbf86" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>ObjectCommunicator</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1a392d21e93f842c50fa4e910eaf929434" prot="private" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>received_</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1a4bde0b44436b2d5facc6c565bd99439f" prot="private" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>sent_</name></member>
      <member refid="structvt_1_1tv_1_1_object_communicator_1a5be8b946ff2ee18ce9b1a0fc25efee6c" prot="public" virt="non-virtual"><scope>vt::tv::ObjectCommunicator</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
