<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacecheckpoint_1_1dispatch" kind="namespace" language="C++">
    <compoundname>checkpoint::dispatch</compoundname>
    <innerclass refid="structcheckpoint_1_1dispatch_1_1_basic_dispatcher" prot="public">checkpoint::dispatch::BasicDispatcher</innerclass>
    <innerclass refid="structcheckpoint_1_1dispatch_1_1_clean_type" prot="public">checkpoint::dispatch::CleanType</innerclass>
    <innerclass refid="structcheckpoint_1_1dispatch_1_1_in_place_tag" prot="public">checkpoint::dispatch::InPlaceTag</innerclass>
    <innerclass refid="structcheckpoint_1_1dispatch_1_1_reconstructor" prot="public">checkpoint::dispatch::Reconstructor</innerclass>
    <innerclass refid="structcheckpoint_1_1dispatch_1_1serialization__error" prot="public">checkpoint::dispatch::serialization_error</innerclass>
    <innerclass refid="structcheckpoint_1_1dispatch_1_1_s_e_r_i_a_l_i_z_e___c_o_n_s_t_r_u_c_t___t_a_g" prot="public">checkpoint::dispatch::SERIALIZE_CONSTRUCT_TAG</innerclass>
    <innerclass refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_byte" prot="public">checkpoint::dispatch::SerializerDispatchByte</innerclass>
    <innerclass refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_non_byte" prot="public">checkpoint::dispatch::SerializerDispatchNonByte</innerclass>
    <innerclass refid="structcheckpoint_1_1dispatch_1_1_standard" prot="public">checkpoint::dispatch::Standard</innerclass>
    <innerclass refid="structcheckpoint_1_1dispatch_1_1_traverse" prot="public">checkpoint::dispatch::Traverse</innerclass>
    <innernamespace refid="namespacecheckpoint_1_1dispatch_1_1typeregistry">checkpoint::dispatch::typeregistry</innernamespace>
    <innernamespace refid="namespacecheckpoint_1_1dispatch_1_1vrt">checkpoint::dispatch::vrt</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dispatch__serializer_8h_1ae3a710db2b07fd1322ab9e6b3bbf45b4" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename SerializerT</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Dispatcher</type>
            <defval>BasicDispatcher&lt;SerializerT, T&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structcheckpoint_1_1dispatch_1_1_serializer_dispatch_byte" kindref="compound">SerializerDispatchByte</ref>&lt; SerializerT, T, Dispatcher &gt;</type>
        <definition>using checkpoint::dispatch::SerializerDispatch = typedef SerializerDispatchByte&lt;SerializerT, T, Dispatcher&gt;</definition>
        <argsstring></argsstring>
        <name>SerializerDispatch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/dispatch_serializer.h" line="70" column="1" bodyfile="src/checkpoint/dispatch/dispatch_serializer.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="clean__type_8h_1ad92e256ab5d87d2a5a97ed6ed011af9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structcheckpoint_1_1dispatch_1_1_clean_type" kindref="compound">CleanType</ref>&lt; T &gt;::CleanT *</type>
        <definition>CleanType&lt;T&gt;::CleanT* checkpoint::dispatch::cleanType</definition>
        <argsstring>(T *val)</argsstring>
        <name>cleanType</name>
        <param>
          <type>T *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/clean_type.h" line="81" column="29" bodyfile="src/checkpoint/dispatch/clean_type.h" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="dispatch_8h_1aca3c0f09e49b43fb6f3d82fe39e89295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>buffer::ImplReturnType</type>
        <definition>buffer::ImplReturnType checkpoint::dispatch::packBuffer</definition>
        <argsstring>(T &amp;target, SerialSizeType size, BufferObtainFnType fn)</argsstring>
        <name>packBuffer</name>
        <param>
          <type>T &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>SerialSizeType</type>
          <declname>size</declname>
        </param>
        <param>
          <type>BufferObtainFnType</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/dispatch.impl.h" line="197" column="1" bodyfile="src/checkpoint/dispatch/dispatch.impl.h" bodystart="197" bodyend="209" declfile="src/checkpoint/dispatch/dispatch.h" declline="193" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="dispatch_8h_1a055fa8c0078dbd129325b1038079d87d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Serializer</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void checkpoint::dispatch::serializeArray</definition>
        <argsstring>(Serializer &amp;s, T *array, SerialSizeType const len)</argsstring>
        <name>serializeArray</name>
        <param>
          <type><ref refid="structcheckpoint_1_1_serializer" kindref="compound">Serializer</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>SerialSizeType const</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/dispatch.impl.h" line="189" column="13" bodyfile="src/checkpoint/dispatch/dispatch.impl.h" bodystart="189" bodyend="193" declfile="src/checkpoint/dispatch/dispatch.h" declline="198" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="dispatch_8h_1a721d20cfc6479ca5e029671a56915adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>buffer::ImplReturnType</type>
        <definition>buffer::ImplReturnType checkpoint::dispatch::serializeType</definition>
        <argsstring>(T &amp;target, BufferObtainFnType fn=nullptr)</argsstring>
        <name>serializeType</name>
        <param>
          <type>T &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>BufferObtainFnType</type>
          <declname>fn</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/dispatch.impl.h" line="212" column="24" bodyfile="src/checkpoint/dispatch/dispatch.impl.h" bodystart="212" bodyend="216" declfile="src/checkpoint/dispatch/dispatch.h" declline="201" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="dispatch_8h_1aa6898b55f6fb0de0b628567087cc8755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * checkpoint::dispatch::deserializeType</definition>
        <argsstring>(SerialByteType *data, SerialByteType *allocBuf=nullptr)</argsstring>
        <name>deserializeType</name>
        <param>
          <type>SerialByteType *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>SerialByteType *</type>
          <declname>allocBuf</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/dispatch.impl.h" line="219" column="3" bodyfile="src/checkpoint/dispatch/dispatch.impl.h" bodystart="219" bodyend="223" declfile="src/checkpoint/dispatch/dispatch.h" declline="204" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="dispatch_8h_1a1830f5dccc7209dc2bbb3b7ac238c36a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void checkpoint::dispatch::deserializeType</definition>
        <argsstring>(InPlaceTag, SerialByteType *data, T *t)</argsstring>
        <name>deserializeType</name>
        <param>
          <type><ref refid="structcheckpoint_1_1dispatch_1_1_in_place_tag" kindref="compound">InPlaceTag</ref></type>
        </param>
        <param>
          <type>SerialByteType *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/dispatch.impl.h" line="226" column="6" bodyfile="src/checkpoint/dispatch/dispatch.impl.h" bodystart="226" bodyend="228" declfile="src/checkpoint/dispatch/dispatch.h" declline="207" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="dispatch_8h_1a803d1b0d7a7611cb5440688dd12a3ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t checkpoint::dispatch::sizeType</definition>
        <argsstring>(T &amp;t)</argsstring>
        <name>sizeType</name>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/dispatch.h" line="210" column="13" declfile="src/checkpoint/dispatch/dispatch.h" declline="210" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="dispatch_8impl_8h_1a23852566cd2c0568dac667166adc60b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TraverserT</type>
          </param>
        </templateparamlist>
        <type>TraverserT &amp;</type>
        <definition>TraverserT&amp; checkpoint::dispatch::withTypeIdx</definition>
        <argsstring>(TraverserT &amp;t)</argsstring>
        <name>withTypeIdx</name>
        <param>
          <type>TraverserT &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/dispatch.impl.h" line="74" column="12" bodyfile="src/checkpoint/dispatch/dispatch.impl.h" bodystart="74" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/checkpoint/dispatch/clean_type.h" line="50" column="37"/>
  </compounddef>
</doxygen>
