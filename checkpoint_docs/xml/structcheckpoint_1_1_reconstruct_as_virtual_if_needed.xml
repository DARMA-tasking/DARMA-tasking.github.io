<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structcheckpoint_1_1_reconstruct_as_virtual_if_needed" kind="struct" language="C++" prot="public">
    <compoundname>checkpoint::ReconstructAsVirtualIfNeeded</compoundname>
    <includes refid="virtual__serialize_8h" local="no">virtual_serialize.h</includes>
    <briefdescription>
<para>Do a static trait test on type to check for virtual serializability. If virtually serializable, we need to perform some extra work to register the type, allocate, and construct the proper type. Otherwise, we go through the normal path for allocating memory for T and serializing what the pointer points to. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/checkpoint/dispatch/vrt/virtual_serialize.h" line="141" column="1" bodyfile="src/checkpoint/dispatch/vrt/virtual_serialize.h" bodystart="141" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
