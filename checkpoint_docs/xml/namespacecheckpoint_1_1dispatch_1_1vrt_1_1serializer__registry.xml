<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="namespacecheckpoint_1_1dispatch_1_1vrt_1_1serializer__registry" kind="namespace" language="C++">
    <compoundname>checkpoint::dispatch::vrt::serializer_registry</compoundname>
    <innerclass refid="structcheckpoint_1_1dispatch_1_1vrt_1_1serializer__registry_1_1_registrar" prot="public">checkpoint::dispatch::vrt::serializer_registry::Registrar</innerclass>
    <innerclass refid="structcheckpoint_1_1dispatch_1_1vrt_1_1serializer__registry_1_1_serializer_entry" prot="public">checkpoint::dispatch::vrt::serializer_registry::SerializerEntry</innerclass>
    <innerclass refid="structcheckpoint_1_1dispatch_1_1vrt_1_1serializer__registry_1_1_type" prot="public">checkpoint::dispatch::vrt::serializer_registry::Type</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="serializer__registry_8h_1a93af9f3c271f2e1356cdaf8944831cc3" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename ObjT</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="structcheckpoint_1_1dispatch_1_1vrt_1_1serializer__registry_1_1_serializer_entry" kindref="compound">SerializerEntry</ref>&lt; ObjT &gt; &gt;</type>
        <definition>using checkpoint::dispatch::vrt::serializer_registry::RegistryType = typedef std::vector&lt;SerializerEntry&lt;ObjT&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>RegistryType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/vrt/serializer_registry.h" line="76" column="1" bodyfile="src/checkpoint/dispatch/vrt/serializer_registry.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="serializer__registry_8h_1a7f17fa17c2a8d9b7961e5877ab23eb44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjT</type>
          </param>
        </templateparamlist>
        <type>RegistryType&lt; ObjT &gt; &amp;</type>
        <definition>RegistryType&lt;ObjT&gt;&amp; checkpoint::dispatch::vrt::serializer_registry::getRegistry</definition>
        <argsstring>()</argsstring>
        <name>getRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/vrt/serializer_registry.h" line="90" column="21" bodyfile="src/checkpoint/dispatch/vrt/serializer_registry.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="serializer__registry_8h_1ab059eccb4c15860ca2cc1e07aef2a8cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjT</type>
          </param>
          <param>
            <type>typename SerializerT</type>
          </param>
        </templateparamlist>
        <type>TypeIdx</type>
        <definition>TypeIdx checkpoint::dispatch::vrt::serializer_registry::makeObjIdx</definition>
        <argsstring>()</argsstring>
        <name>makeObjIdx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/vrt/serializer_registry.h" line="96" column="16" bodyfile="src/checkpoint/dispatch/vrt/serializer_registry.h" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="serializer__registry_8h_1a41f585b6e7eefc6c008d2fef6cf0d204" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjT</type>
          </param>
        </templateparamlist>
        <type>auto &amp;</type>
        <definition>auto&amp; checkpoint::dispatch::vrt::serializer_registry::getObjIdxRef</definition>
        <argsstring>(TypeIdx han)</argsstring>
        <name>getObjIdxRef</name>
        <param>
          <type>TypeIdx</type>
          <declname>han</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/vrt/serializer_registry.h" line="132" column="13" bodyfile="src/checkpoint/dispatch/vrt/serializer_registry.h" bodystart="132" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="serializer__registry_8h_1a499ff0bece26be083fcdd66c59c79a22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjT</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto checkpoint::dispatch::vrt::serializer_registry::getObjIdx</definition>
        <argsstring>(TypeIdx han)</argsstring>
        <name>getObjIdx</name>
        <param>
          <type>TypeIdx</type>
          <declname>han</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/vrt/serializer_registry.h" line="142" column="13" bodyfile="src/checkpoint/dispatch/vrt/serializer_registry.h" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="serializer__registry_8h_1afa0cfe7922654b628c231e5e141ac671" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DerivedT</type>
          </param>
        </templateparamlist>
        <type>std::function&lt; void(void *, DerivedT &amp;)&gt;</type>
        <definition>std::function&lt;void(void*, DerivedT&amp;)&gt; checkpoint::dispatch::vrt::serializer_registry::getBaseIdx</definition>
        <argsstring>(TypeIdx base_idx)</argsstring>
        <name>getBaseIdx</name>
        <param>
          <type>TypeIdx</type>
          <declname>base_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/dispatch/vrt/serializer_registry.h" line="148" column="22" bodyfile="src/checkpoint/dispatch/vrt/serializer_registry.h" bodystart="148" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/checkpoint/dispatch/vrt/serializer_registry.h" line="55" column="29"/>
  </compounddef>
</doxygen>
