<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="reconstructor__traits_8h" kind="file" language="C++">
    <compoundname>reconstructor_traits.h</compoundname>
    <includes refid="serializable__traits_8h" local="yes">checkpoint/traits/serializable_traits.h</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="reconstructor_8h" local="yes">src/checkpoint/dispatch/reconstructor.h</includedby>
    <incdepgraph>
      <node id="11">
        <label>checkpoint/serializers/base_serializer.h</label>
        <link refid="base__serializer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>functional</label>
      </node>
      <node id="25">
        <label>checkpoint/serializers/packer.impl.h</label>
        <link refid="packer_8impl_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>checkpoint/cmake_config.h</label>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="1">
        <label>src/checkpoint/traits/reconstructor_traits.h</label>
        <link refid="reconstructor__traits_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cassert</label>
      </node>
      <node id="29">
        <label>checkpoint/dispatch/reconstructor_tag.h</label>
        <link refid="reconstructor__tag_8h_source"/>
      </node>
      <node id="24">
        <label>string</label>
      </node>
      <node id="28">
        <label>checkpoint/serializers/unpacker.impl.h</label>
        <link refid="unpacker_8impl_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>checkpoint/buffer/buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>checkpoint/serializers/serializers_headers.h</label>
        <link refid="serializers__headers_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cstdio</label>
      </node>
      <node id="18">
        <label>checkpoint/checkpoint_api.h</label>
        <link refid="checkpoint__api_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>checkpoint/buffer/user_buffer.h</label>
        <link refid="user__buffer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>checkpoint/serializers/memory_serializer.h</label>
        <link refid="memory__serializer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>checkpoint/serializers/footprinter.h</label>
        <link refid="footprinter_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>utility</label>
      </node>
      <node id="27">
        <label>checkpoint/serializers/unpacker.h</label>
        <link refid="unpacker_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>detector_headers.h</label>
      </node>
      <node id="5">
        <label>cstdlib</label>
      </node>
      <node id="2">
        <label>checkpoint/traits/serializable_traits.h</label>
        <link refid="serializable__traits_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>checkpoint/common.h</label>
        <link refid="common_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>type_traits</label>
      </node>
      <node id="15">
        <label>checkpoint/serializers/packer.h</label>
        <link refid="packer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cstring</label>
      </node>
      <node id="23">
        <label>checkpoint/buffer/io_buffer.h</label>
        <link refid="io__buffer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>memory</label>
      </node>
      <node id="21">
        <label>checkpoint/buffer/managed_buffer.h</label>
        <link refid="managed__buffer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>checkpoint/serializers/sizer.h</label>
        <link refid="sizer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9">
        <label>src/checkpoint/dispatch/allocator.h</label>
        <link refid="allocator_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/checkpoint/dispatch/vrt/base.h</label>
        <link refid="base_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/checkpoint/dispatch/vrt/derived.h</label>
        <link refid="derived_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/checkpoint/container/kokkos_unordered_map_serialize.h</label>
        <link refid="kokkos__unordered__map__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/checkpoint/checkpoint.h</label>
        <link refid="checkpoint_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/checkpoint/traits/reconstructor_traits.h</label>
        <link refid="reconstructor__traits_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/checkpoint/dispatch/vrt/virtual_serialize.h</label>
        <link refid="virtual__serialize_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/checkpoint/dispatch/reconstructor.h</label>
        <link refid="reconstructor_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/checkpoint/dispatch/vrt/object_registry.h</label>
        <link refid="object__registry_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/checkpoint/container/list_serialize.h</label>
        <link refid="list__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/checkpoint/container/map_serialize.h</label>
        <link refid="map__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/checkpoint/container/unique_ptr_serialize.h</label>
        <link refid="unique__ptr__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/checkpoint/dispatch/dispatch_virtual.h</label>
        <link refid="dispatch__virtual_8h_source"/>
      </node>
      <node id="12">
        <label>src/checkpoint/dispatch/dispatch.impl.h</label>
        <link refid="dispatch_8impl_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/checkpoint/checkpoint_api.impl.h</label>
        <link refid="checkpoint__api_8impl_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/checkpoint/dispatch/dispatch_serializer_byte.h</label>
        <link refid="dispatch__serializer__byte_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/checkpoint/dispatch/dispatch.h</label>
        <link refid="dispatch_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/checkpoint/dispatch/dispatch_serializer_nonbyte.h</label>
        <link refid="dispatch__serializer__nonbyte_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/checkpoint/dispatch/dispatch_serializer.h</label>
        <link refid="dispatch__serializer_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/checkpoint/container/vector_serialize.h</label>
        <link refid="vector__serialize_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacecheckpoint">checkpoint</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="reconstructor__traits_8h_1a58224a3b056d9e2aa73d563871981a7d" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_default_constructible&lt; T &gt;::value &gt;</type>
        <definition>using checkpoint::isDefaultConsType = typedef std::enable_if_t&lt;std::is_default_constructible&lt;T&gt;::value&gt;</definition>
        <argsstring></argsstring>
        <name>isDefaultConsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/reconstructor_traits.h" line="55" column="1" bodyfile="src/checkpoint/traits/reconstructor_traits.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reconstructor__traits_8h_1a4032c86e7c92702198dd675a2696ee2c" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; not std::is_default_constructible&lt; T &gt;::value &gt;</type>
        <definition>using checkpoint::isNotDefaultConsType = typedef std::enable_if_t&lt;not std::is_default_constructible&lt;T&gt;::value&gt;</definition>
        <argsstring></argsstring>
        <name>isNotDefaultConsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/reconstructor_traits.h" line="59" column="1" bodyfile="src/checkpoint/traits/reconstructor_traits.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reconstructor__traits_8h_1a126da7cae6bbbec231bb2552dc3ad6cc" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; SerializableTraits&lt; T, void &gt;::is_intrusive_reconstructible &gt;</type>
        <definition>using checkpoint::isReconstructibleType = typedef std::enable_if_t&lt;SerializableTraits&lt;T, void&gt;::is_intrusive_reconstructible&gt;</definition>
        <argsstring></argsstring>
        <name>isReconstructibleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/reconstructor_traits.h" line="63" column="1" bodyfile="src/checkpoint/traits/reconstructor_traits.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reconstructor__traits_8h_1a46b7909fb0fef92b4787567fde7c760b" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; SerializableTraits&lt; T, void &gt;::is_nonintrusive_reconstructible &gt;</type>
        <definition>using checkpoint::isNonIntReconstructibleType = typedef std::enable_if_t&lt; SerializableTraits&lt;T, void&gt;::is_nonintrusive_reconstructible&gt;</definition>
        <argsstring></argsstring>
        <name>isNonIntReconstructibleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/reconstructor_traits.h" line="67" column="1" bodyfile="src/checkpoint/traits/reconstructor_traits.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reconstructor__traits_8h_1a0054cbef71b90d6860e1d3916cf9d299" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; not SerializableTraits&lt; T, void &gt;::is_reconstructible &gt;</type>
        <definition>using checkpoint::isNotReconstructibleType = typedef std::enable_if_t&lt;not SerializableTraits&lt;T, void&gt;::is_reconstructible&gt;</definition>
        <argsstring></argsstring>
        <name>isNotReconstructibleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/reconstructor_traits.h" line="71" column="1" bodyfile="src/checkpoint/traits/reconstructor_traits.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reconstructor__traits_8h_1abff0f367c546c94ce857d200153d990f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; SerializableTraits&lt; T, void &gt;::is_tagged_constructible &gt;</type>
        <definition>using checkpoint::isTaggedConstructibleType = typedef std::enable_if_t&lt;SerializableTraits&lt;T, void&gt;::is_tagged_constructible&gt;</definition>
        <argsstring></argsstring>
        <name>isTaggedConstructibleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/reconstructor_traits.h" line="75" column="1" bodyfile="src/checkpoint/traits/reconstructor_traits.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reconstructor__traits_8h_1a4eb64ee16bff7ef1609e5b98cb16cfb6" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; not SerializableTraits&lt; T, void &gt;::is_tagged_constructible &gt;</type>
        <definition>using checkpoint::isNotTaggedConstructibleType = typedef std::enable_if_t&lt;not SerializableTraits&lt;T, void&gt;::is_tagged_constructible&gt;</definition>
        <argsstring></argsstring>
        <name>isNotTaggedConstructibleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/reconstructor_traits.h" line="79" column="1" bodyfile="src/checkpoint/traits/reconstructor_traits.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reconstructor__traits_8h_1a48ec2649d5cbd890f67ea1193cc0d51a" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; SerializableTraits&lt; T, void &gt;::is_constructible &gt;</type>
        <definition>using checkpoint::isConstructible = typedef std::enable_if_t&lt;SerializableTraits&lt;T, void&gt;::is_constructible&gt;</definition>
        <argsstring></argsstring>
        <name>isConstructible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/reconstructor_traits.h" line="83" column="1" bodyfile="src/checkpoint/traits/reconstructor_traits.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reconstructor__traits_8h_1a14b3c81988a2c2d3c935edcc653b6322" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; not SerializableTraits&lt; T, void &gt;::is_constructible &gt;</type>
        <definition>using checkpoint::isNotConstructible = typedef std::enable_if_t&lt;not SerializableTraits&lt;T, void&gt;::is_constructible&gt;</definition>
        <argsstring></argsstring>
        <name>isNotConstructible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/reconstructor_traits.h" line="87" column="1" bodyfile="src/checkpoint/traits/reconstructor_traits.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reconstructor__traits_8h_1a141a100f9dcca06fb0b6dbf44a5d6756" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; not std::is_copy_constructible&lt; T &gt;::value &gt;</type>
        <definition>using checkpoint::isNotCopyConstructible = typedef std::enable_if_t&lt;not std::is_copy_constructible&lt;T&gt;::value&gt;</definition>
        <argsstring></argsstring>
        <name>isNotCopyConstructible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/reconstructor_traits.h" line="91" column="1" bodyfile="src/checkpoint/traits/reconstructor_traits.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reconstructor__traits_8h_1a60a9850fa59d4b236b2f888baf135a95" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_copy_constructible&lt; T &gt;::value &gt;</type>
        <definition>using checkpoint::isCopyConstructible = typedef std::enable_if_t&lt;std::is_copy_constructible&lt;T&gt;::value&gt;</definition>
        <argsstring></argsstring>
        <name>isCopyConstructible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/traits/reconstructor_traits.h" line="95" column="1" bodyfile="src/checkpoint/traits/reconstructor_traits.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reconstructor_traits.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA<sp/>Toolkit<sp/>v.<sp/>1.0.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/checkpoint<sp/>=&gt;<sp/>Serialization<sp/>Library</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="42"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="43"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_CHECKPOINT_TRAITS_RECONSTRUCTOR_TRAITS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_CHECKPOINT_TRAITS_RECONSTRUCTOR_TRAITS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;checkpoint/traits/serializable_traits.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">checkpoint<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>isDefaultConsType<sp/>=</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;std::is_default_constructible&lt;T&gt;::value&gt;;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>isNotDefaultConsType<sp/>=</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;not<sp/>std::is_default_constructible&lt;T&gt;::value&gt;;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>isReconstructibleType<sp/>=</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;SerializableTraits&lt;T,<sp/>void&gt;::is_intrusive_reconstructible&gt;;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>isNonIntReconstructibleType<sp/>=<sp/>std::enable_if_t&lt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>SerializableTraits&lt;T,<sp/>void&gt;::is_nonintrusive_reconstructible&gt;;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>isNotReconstructibleType<sp/>=</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;not<sp/>SerializableTraits&lt;T,<sp/>void&gt;::is_reconstructible&gt;;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>isTaggedConstructibleType<sp/>=</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;SerializableTraits&lt;T,<sp/>void&gt;::is_tagged_constructible&gt;;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>isNotTaggedConstructibleType<sp/>=</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;not<sp/>SerializableTraits&lt;T,<sp/>void&gt;::is_tagged_constructible&gt;;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>isConstructible<sp/>=</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;SerializableTraits&lt;T,<sp/>void&gt;::is_constructible&gt;;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>isNotConstructible<sp/>=</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;not<sp/>SerializableTraits&lt;T,<sp/>void&gt;::is_constructible&gt;;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>isNotCopyConstructible<sp/>=</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;not<sp/>std::is_copy_constructible&lt;T&gt;::value&gt;;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>isCopyConstructible<sp/>=</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;std::is_copy_constructible&lt;T&gt;::value&gt;;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>checkpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_CHECKPOINT_TRAITS_RECONSTRUCTOR_TRAITS_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/checkpoint/traits/reconstructor_traits.h"/>
  </compounddef>
</doxygen>
