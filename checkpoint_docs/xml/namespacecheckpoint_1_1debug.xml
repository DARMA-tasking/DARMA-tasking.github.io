<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacecheckpoint_1_1debug" kind="namespace" language="C++">
    <compoundname>checkpoint::debug</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="common_8h_1a53cb770a4dd52d64540496968837a0d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int checkpoint::debug::useVarsDummy</definition>
        <argsstring>(T t)</argsstring>
        <name>useVarsDummy</name>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/common.h" line="71" column="12" bodyfile="src/checkpoint/common.h" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="common_8h_1a5e12dcf51f9402c5a45e13213b26d1d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void checkpoint::debug::useVars</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>useVars</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/common.h" line="76" column="13" bodyfile="src/checkpoint/common.h" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="common_8h_1afcd275cc3ba7d3c57ca1c39017dab5c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void checkpoint::debug::assertOut</definition>
        <argsstring>(char const *cond, char const *str, char const *file, int const line, char const *func)</argsstring>
        <name>assertOut</name>
        <param>
          <type>char const *</type>
          <declname>cond</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int const</type>
          <declname>line</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/common.h" line="84" column="13" bodyfile="src/checkpoint/common.h" bodystart="84" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/checkpoint/common.h" line="68" column="34"/>
  </compounddef>
</doxygen>
