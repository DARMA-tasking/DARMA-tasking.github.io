<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="detector_8h" kind="file" language="C++">
    <compoundname>detector.h</compoundname>
    <includes local="no">type_traits</includes>
    <includedby refid="virtual__serialize__traits_8h" local="yes">src/checkpoint/dispatch/vrt/virtual_serialize_traits.h</includedby>
    <includedby refid="checkpoint__traits_8h" local="yes">src/checkpoint/traits/checkpoint_traits.h</includedby>
    <includedby refid="serializable__traits_8h" local="yes">src/checkpoint/traits/serializable_traits.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/checkpoint/detector.h</label>
        <link refid="detector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12">
        <label>src/checkpoint/dispatch/allocator.h</label>
        <link refid="allocator_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>src/checkpoint/dispatch/vrt/base.h</label>
        <link refid="base_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>src/checkpoint/dispatch/vrt/derived.h</label>
        <link refid="derived_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/checkpoint/container/kokkos_complex_serialize.h</label>
        <link refid="kokkos__complex__serialize_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/checkpoint/container/kokkos_unordered_map_serialize.h</label>
        <link refid="kokkos__unordered__map__serialize_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/checkpoint/checkpoint.h</label>
        <link refid="checkpoint_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/checkpoint/traits/reconstructor_traits.h</label>
        <link refid="reconstructor__traits_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>src/checkpoint/dispatch/vrt/virtual_serialize.h</label>
        <link refid="virtual__serialize_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/checkpoint/traits/checkpoint_traits.h</label>
        <link refid="checkpoint__traits_8h_source"/>
      </node>
      <node id="22">
        <label>src/checkpoint/dispatch/reconstructor.h</label>
        <link refid="reconstructor_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>src/checkpoint/dispatch/vrt/object_registry.h</label>
        <link refid="object__registry_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/checkpoint/detector.h</label>
        <link refid="detector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/checkpoint/container/list_serialize.h</label>
        <link refid="list__serialize_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/checkpoint/container/map_serialize.h</label>
        <link refid="map__serialize_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>src/checkpoint/container/unique_ptr_serialize.h</label>
        <link refid="unique__ptr__serialize_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/checkpoint/dispatch/vrt/virtual_serialize_traits.h</label>
        <link refid="virtual__serialize__traits_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/checkpoint/dispatch/dispatch_virtual.h</label>
        <link refid="dispatch__virtual_8h_source"/>
      </node>
      <node id="15">
        <label>src/checkpoint/container/variant_serialize.h</label>
        <link refid="variant__serialize_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/checkpoint/dispatch/dispatch.impl.h</label>
        <link refid="dispatch_8impl_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/checkpoint/traits/serializable_traits.h</label>
        <link refid="serializable__traits_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/checkpoint/checkpoint_api.impl.h</label>
        <link refid="checkpoint__api_8impl_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/checkpoint/dispatch/dispatch_serializer_byte.h</label>
        <link refid="dispatch__serializer__byte_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/checkpoint/dispatch/dispatch.h</label>
        <link refid="dispatch_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/checkpoint/dispatch/dispatch_serializer_nonbyte.h</label>
        <link refid="dispatch__serializer__nonbyte_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/checkpoint/container/kokkos_pair_serialize.h</label>
        <link refid="kokkos__pair__serialize_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/checkpoint/dispatch/dispatch_serializer.h</label>
        <link refid="dispatch__serializer_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/checkpoint/container/vector_serialize.h</label>
        <link refid="vector__serialize_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structdetection_1_1_none_such" prot="public">detection::NoneSuch</innerclass>
    <innerclass refid="structdetection_1_1detector" prot="public">detection::detector</innerclass>
    <innerclass refid="structdetection_1_1detector_3_01_t_00_01std_1_1void__t_3_01_op_3_01_args_8_8_8_01_4_01_4_00_01_op_00_01_args_8_8_8_01_4" prot="public">detection::detector&lt; T, std::void_t&lt; Op&lt; Args... &gt; &gt;, Op, Args... &gt;</innerclass>
    <innernamespace refid="namespacedetection">detection</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="detector_8h_1a08288d9ae2ffab86bb82bbdd27fbf77b" prot="public" static="no">
        <type>NoneSuch</type>
        <definition>using detection::NoneSuchType = typedef NoneSuch</definition>
        <argsstring></argsstring>
        <name>NoneSuchType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/detector.h" line="62" column="1" bodyfile="src/checkpoint/detector.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="detector_8h_1a30893549a3de1e9603d78dad6d5dce92" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>template&lt; typename... &gt; class</type>
            <declname>Op</declname>
            <defname>Op</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>detector&lt; NoneSuchType, void, Op, Args... &gt;</type>
        <definition>using detection::is_detected = typedef detector&lt;NoneSuchType, void, Op, Args...&gt;</definition>
        <argsstring></argsstring>
        <name>is_detected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/detector.h" line="81" column="1" bodyfile="src/checkpoint/detector.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="detector_8h_1a25bd8500c8667f0015e88f9d26cca271" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>template&lt; typename... &gt; class</type>
            <declname>Op</declname>
            <defname>Op</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>typename is_detected&lt; Op, Args... &gt;::type</type>
        <definition>using detection::detected_t = typedef typename is_detected&lt;Op, Args...&gt;::type</definition>
        <argsstring></argsstring>
        <name>detected_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/detector.h" line="84" column="1" bodyfile="src/checkpoint/detector.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="detector_8h_1affc661f546e50448d9582e54280f7a11" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename ExpectedT</type>
          </param>
          <param>
            <type>template&lt; typename... &gt; class</type>
            <declname>Op</declname>
            <defname>Op</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::is_same&lt; detected_t&lt; Op, Args... &gt;, ExpectedT &gt;</type>
        <definition>using detection::is_detected_exact = typedef std::is_same&lt;detected_t&lt;Op, Args...&gt;, ExpectedT&gt;</definition>
        <argsstring></argsstring>
        <name>is_detected_exact</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/detector.h" line="87" column="1" bodyfile="src/checkpoint/detector.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="detector_8h_1afb970b23e39cfecb33449d40242c49ff" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>template&lt; typename... &gt; class</type>
            <declname>Op</declname>
            <defname>Op</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::is_convertible&lt; detected_t&lt; Op, Args... &gt;, T &gt;</type>
        <definition>using detection::is_detected_convertible = typedef std::is_convertible&lt;detected_t&lt;Op, Args...&gt;, T&gt;</definition>
        <argsstring></argsstring>
        <name>is_detected_convertible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checkpoint/detector.h" line="90" column="1" bodyfile="src/checkpoint/detector.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DARMA/checkpoint<sp/>=&gt;<sp/>Serialization<sp/>Library</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering<sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>(NTESS).<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,<sp/>the<sp/>U.S.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>darma@sandia.gov</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>INCLUDED_CHECKPOINT_DETECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_CHECKPOINT_DETECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detection<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Implementation<sp/>of<sp/>the<sp/>standard<sp/>C++<sp/>detector<sp/>idiom,<sp/>used<sp/>to<sp/>statically</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>detect/assert<sp/>properties<sp/>of<sp/>C++<sp/>types.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structdetection_1_1_none_such" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetection_1_1_none_such" kindref="compound">NoneSuch</ref><sp/>final<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="structdetection_1_1_none_such" kindref="compound">NoneSuch</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>~<ref refid="structdetection_1_1_none_such" kindref="compound">NoneSuch</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="structdetection_1_1_none_such" kindref="compound">NoneSuch</ref>(<ref refid="structdetection_1_1_none_such" kindref="compound">NoneSuch</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(<ref refid="structdetection_1_1_none_such" kindref="compound">NoneSuch</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetection_1_1_none_such" kindref="compound">NoneSuchType</ref><sp/>=<sp/><ref refid="structdetection_1_1_none_such" kindref="compound">NoneSuch</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Op,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="65" refid="structdetection_1_1detector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetection_1_1detector" kindref="compound">detector</ref><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_t<sp/>=<sp/>std::false_type;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>element_type<sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Op,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="73" refid="structdetection_1_1detector_3_01_t_00_01std_1_1void__t_3_01_op_3_01_args_8_8_8_01_4_01_4_00_01_op_00_01_args_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetection_1_1detector" kindref="compound">detector</ref>&lt;T,<sp/>std::void_t&lt;Op&lt;Args...&gt;&gt;,<sp/>Op,<sp/>Args...&gt;<sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_t<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>Op&lt;Args...&gt;;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>element_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::tuple_element&lt;0,<sp/>std::tuple&lt;Args...&gt;&gt;::type;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Op,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetection_1_1detector" kindref="compound">is_detected</ref><sp/>=<sp/><ref refid="structdetection_1_1detector" kindref="compound">detector</ref>&lt;<ref refid="structdetection_1_1_none_such" kindref="compound">NoneSuchType</ref>,<sp/>void,<sp/>Op,<sp/>Args...&gt;;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Op,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>detected_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetection_1_1detector" kindref="compound">is_detected</ref>&lt;Op,<sp/>Args...&gt;::type;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExpectedT,<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Op,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>is_detected_exact<sp/>=<sp/>std::is_same&lt;detected_t&lt;Op,<sp/>Args...&gt;,<sp/>ExpectedT&gt;;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Op,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>is_detected_convertible<sp/>=<sp/>std::is_convertible&lt;detected_t&lt;Op,<sp/>Args...&gt;,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_CHECKPOINT_DETECTOR_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/checkpoint/detector.h"/>
  </compounddef>
</doxygen>
